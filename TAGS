
/home/seinoyu/pgsql/master/postgresql/src/backend/statistics/mvdistinct.c,857
#define SizeOfHeader	47,1700
#define SizeOfItem(50,1813
#define MinSizeOfItem	54,1966
#define MinSizeOfItems(57,2065
typedef struct CombinationGenerator63,2242
	int			k;65,2280
	int			n;66,2323
	int			current;67,2367
	int			ncombinations;68,2430
	int		   *combinations;combinations69,2497
} CombinationGenerator;70,2559
statext_ndistinct_build(86,3064
statext_ndistinct_load(141,4426
statext_ndistinct_serialize(171,5161
statext_ndistinct_deserialize(249,7015
pg_ndistinct_in(344,9774
pg_ndistinct_out(360,10118
pg_ndistinct_recv(397,10867
pg_ndistinct_send(413,11235
ndistinct_for_combination(430,11653
estimate_ndistinct(523,14001
n_choose_k(552,14597
num_combinations(577,14922
generator_init(591,15264
generator_next(629,16253
generator_free(644,16574
generate_combinations_recurse(659,16991
generate_combinations(694,17754

/home/seinoyu/pgsql/master/postgresql/src/backend/statistics/extended_stats.c,1104
#define WIDTH_THRESHOLD 55,1801
typedef struct StatExtEntry61,1938
	Oid			statOid;63,1968
	char	   *schema;schema64,2021
	char	   *name;name65,2074
	Bitmapset  *columns;columns66,2123
	List	   *types;types67,2192
	int			stattarget;68,2256
} StatExtEntry;69,2317
BuildRelationExtStatistics(89,3035
ComputeExtStatisticsRows(214,6795
statext_compute_stattarget(292,9287
statext_is_kind_built(334,10405
fetch_statentries_for_relation(363,10999
lookup_var_attr_stats(438,13186
statext_store(492,14232
multi_sort_init(562,16398
multi_sort_add_dimension(581,16743
multi_sort_compare(595,17097
multi_sort_compare_dim(620,17590
multi_sort_compare_dims(629,17829
compare_scalars_simple(649,18187
compare_datums_simple(657,18356
bsearch_arg(664,18519
build_attnums_array(702,19325
build_sorted_items(744,20365
has_stats_of_kind(849,22833
choose_best_statistics(883,23874
statext_is_compatible_clause_internal(956,25935
statext_is_compatible_clause(1170,32250
statext_mcv_clauselist_selectivity(1283,36790
statext_clauselist_selectivity(1418,40709
examine_clause_args(1461,42391

/home/seinoyu/pgsql/master/postgresql/src/backend/statistics/mcv.c,727
#define ITEM_SIZE(56,1700
#define MinSizeOfMCVList	62,1864
#define SizeOfMCVList(71,2186
#define RESULT_MERGE(91,2873
#define RESULT_IS_FINAL(103,3409
get_mincount_for_mcv_list(151,6151
statext_mcv_build(183,6842
build_mss(349,11716
count_distinct_groups(380,12529
compare_sort_item_count(403,13023
build_distinct_groups(423,13423
sort_item_compare(464,14395
build_column_frequencies(489,15226
statext_mcv_load(557,16893
statext_mcv_serialize(618,19259
statext_mcv_deserialize(993,30994
pg_stats_ext_mcvlist_items(1335,40597
pg_mcv_list_in(1469,44170
pg_mcv_list_out(1495,44993
pg_mcv_list_recv(1504,45137
pg_mcv_list_send(1520,45548
mcv_get_match_bitmap(1545,46572
mcv_clauselist_selectivity(1903,57028

/home/seinoyu/pgsql/master/postgresql/src/backend/statistics/dependencies.c,1127
#define SizeOfHeader	38,1143
#define SizeOfItem(41,1247
#define MinSizeOfItem	45,1388
#define MinSizeOfItems(48,1487
typedef struct DependencyGeneratorData56,1807
	int			k;58,1848
	int			n;59,1890
	int			current;60,1939
	AttrNumber	ndependencies;61,1996
	AttrNumber *dependencies;dependencies62,2062
} DependencyGeneratorData;63,2131
typedef DependencyGeneratorData *DependencyGenerator;DependencyGenerator65,2159
generate_dependencies_recurse(91,3437
generate_dependencies(157,4869
DependencyGenerator_init(173,5317
DependencyGenerator_free(196,5842
DependencyGenerator_next(205,5996
dependency_degree(222,6421
statext_dependencies_build(363,10625
statext_dependencies_serialize(452,13008
statext_dependencies_deserialize(507,14505
dependency_is_fully_matched(603,17395
statext_dependencies_load(627,17934
pg_dependencies_in(659,18786
pg_dependencies_out(676,19198
pg_dependencies_recv(716,20109
pg_dependencies_send(732,20550
dependency_is_compatible_clause(747,21042
find_strongest_dependency(930,26053
clauselist_apply_dependencies(1015,28968
dependencies_clauselist_selectivity(1188,34197

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeIndexscan.c,861
	pairingheap_node ph_node;53,1754
	HeapTuple	htup;54,1781
	Datum	   *orderbyvals;orderbyvals55,1798
	bool	   *orderbynulls;orderbynulls56,1822
} ReorderTuple;57,1846
IndexNext(81,2875
IndexNextWithReorder(171,5301
EvalOrderByExpressions(363,10915
IndexRecheck(389,11472
cmp_orderbyvals(408,11865
reorderqueue_cmp(444,12702
reorderqueue_push(461,13180
reorderqueue_pop(495,14221
ExecIndexScan(522,14880
ExecReScanIndexScan(554,15937
ExecIndexEvalRuntimeKeys(597,17071
ExecIndexEvalArrayKeys(659,19040
ExecIndexAdvanceArrayKeys(738,21141
ExecEndIndexScan(783,22326
ExecIndexMarkPos(827,23454
ExecIndexRestrPos(864,24655
ExecInitIndexScan(900,25715
ExecIndexBuildScanKeys(1149,34470
ExecIndexScanEstimate(1655,49239
ExecIndexScanInitializeDSM(1673,49801
ExecIndexScanReInitializeDSM(1709,50985
ExecIndexScanInitializeWorker(1722,51352

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeMaterial.c,165
ExecMaterial(39,1254
ExecInitMaterial(164,4516
ExecEndMaterial(240,6771
ExecMaterialMarkPos(267,7361
ExecMaterialRestrPos(295,8020
ExecReScanMaterial(318,8531

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeValuesscan.c,158
ValuesNext(48,1423
ValuesRecheck(181,5151
ExecValuesScan(197,5620
ExecInitValuesScan(211,6008
ExecEndValuesScan(329,9443
ExecReScanValuesScan(353,10015

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execJunk.c,194
ExecInitJunkFilter(60,2179
ExecInitJunkFilterConversion(135,4171
ExecFindJunkAttribute(208,6002
ExecFindJunkAttributeInTlist(220,6300
ExecGetJunkAttribute(247,6839
ExecFilterJunk(261,7103

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execTuples.c,3229
const TupleTableSlotOps TTSOpsVirtual;83,3284
const TupleTableSlotOps TTSOpsHeapTuple;84,3323
const TupleTableSlotOps TTSOpsMinimalTuple;85,3364
const TupleTableSlotOps TTSOpsBufferHeapTuple;86,3408
tts_virtual_init(97,3585
tts_virtual_release(102,3641
tts_virtual_clear(107,3700
tts_virtual_getsomeattrs(130,4246
tts_virtual_getsysattr(136,4411
tts_virtual_materialize(151,4957
tts_virtual_copyslot(244,7156
tts_virtual_copy_heap_tuple(268,7771
tts_virtual_copy_minimal_tuple(278,7980
tts_heap_init(293,8265
tts_heap_release(298,8318
tts_heap_clear(303,8374
tts_heap_getsomeattrs(322,8793
tts_heap_getsysattr(332,9018
tts_heap_materialize(343,9281
tts_heap_copyslot(383,10301
tts_heap_get_heap_tuple(396,10614
tts_heap_copy_heap_tuple(408,10841
tts_heap_copy_minimal_tuple(420,11088
tts_heap_store_tuple(431,11318
tts_minimal_init(453,11783
tts_minimal_release(465,12075
tts_minimal_clear(470,12134
tts_minimal_getsomeattrs(488,12518
tts_minimal_getsysattr(498,12752
tts_minimal_materialize(506,12962
tts_minimal_copyslot(553,14253
tts_minimal_get_minimal_tuple(566,14590
tts_minimal_copy_heap_tuple(577,14811
tts_minimal_copy_minimal_tuple(588,15064
tts_minimal_store_tuple(599,15306
tts_buffer_heap_init(628,16047
tts_buffer_heap_release(633,16107
tts_buffer_heap_clear(638,16170
tts_buffer_heap_getsomeattrs(668,16968
tts_buffer_heap_getsysattr(678,17222
tts_buffer_heap_materialize(689,17509
tts_buffer_heap_copyslot(748,19292
tts_buffer_heap_get_heap_tuple(790,20694
tts_buffer_heap_copy_heap_tuple(803,20958
tts_buffer_heap_copy_minimal_tuple(816,21242
tts_buffer_heap_store_tuple(829,21543
slot_deform_heap_tuple(895,23700
const TupleTableSlotOps TTSOpsVirtual 995,26125
const TupleTableSlotOps TTSOpsHeapTuple 1015,26716
const TupleTableSlotOps TTSOpsMinimalTuple 1032,27269
const TupleTableSlotOps TTSOpsBufferHeapTuple 1049,27861
MakeTupleTableSlot(1082,29033
ExecAllocTableSlot(1141,30438
ExecResetTupleTable(1161,31006
MakeSingleTupleTableSlot(1208,32201
ExecDropSingleTupleTableSlot(1224,32614
ExecSetSlotDescriptor(1259,33652
ExecStoreHeapTuple(1322,35913
ExecStoreBufferHeapTuple(1362,37076
ExecStorePinnedBufferHeapTuple(1388,37744
ExecStoreMinimalTuple(1416,38462
ExecForceStoreHeapTuple(1439,38956
ExecForceStoreMinimalTuple(1482,39891
ExecStoreVirtualTuple(1522,40929
ExecStoreAllNullTuple(1546,41511
ExecStoreHeapTupleDatum(1576,42202
ExecFetchSlotHeapTuple(1614,43487
ExecFetchSlotMinimalTuple(1662,45116
ExecFetchSlotHeapTupleDatum(1693,45758
ExecInitResultTypeTL(1725,46482
ExecInitResultSlot(1749,47151
ExecInitResultTupleSlotTL(1769,47690
ExecInitScanTupleSlot(1781,47935
ExecInitExtraTupleSlot(1801,48619
ExecInitNullTupleSlot(1817,49046
slot_getmissingattrs(1838,49679
slot_getsomeattrs_int(1872,50578
ExecTypeFromTL(1908,51790
ExecCleanTypeFromTL(1920,52124
ExecTypeFromTLInternal(1926,52234
ExecTypeFromExprList(1967,53172
ExecTypeSetColNames(2006,54116
BlessTupleDesc(2052,55288
TupleDescGetAttInMetadata(2067,55706
BuildTupleFromCStrings(2116,57089
HeapTupleHeaderGetDatum(2205,60194
begin_tup_output_tupdesc(2236,61131
do_tup_output(2256,61538
do_text_output_multiline(2284,62236
end_tup_output(2314,62705

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/functions.c,2226
	DestReceiver pub;44,1116
	Tuplestorestate *tstore;tstore45,1176
	MemoryContext cxt;46,1235
	JunkFilter *filter;filter47,1289
} DR_sqlfunction;48,1347
	F_EXEC_START,61,1796
	F_EXEC_START, F_EXEC_RUN,61,1796
	F_EXEC_START, F_EXEC_RUN, F_EXEC_DONE61,1796
} ExecStatus;62,1835
typedef struct execution_state64,1850
	struct execution_state *next;next66,1883
	ExecStatus	status;67,1914
	bool		setsResult;68,1934
	bool		lazyEval;69,2002
	PlannedStmt *stmt;stmt70,2065
	QueryDesc  *qd;qd71,2113
} execution_state;72,2165
	char	   *fname;fname94,3108
	char	   *src;src95,3164
	SQLFunctionParseInfoPtr pinfo;97,3224
	Oid			rettype;99,3294
	int16		typlen;100,3336
	bool		typbyval;101,3386
	bool		returnsSet;102,3447
	bool		returnsTuple;103,3505
	bool		shutdown_reg;104,3569
	bool		readonly_func;105,3633
	bool		lazyEval;106,3693
	ParamListInfo paramLI;108,3758
	Tuplestorestate *tstore;tstore110,3827
	JunkFilter *junkFilter;junkFilter112,3894
	List	   *func_state;func_state120,4251
	MemoryContext fcontext;122,4274
	LocalTransactionId lxid;125,4377
	SubTransactionId subxid;126,4438
} SQLFunctionCache;127,4501
typedef SQLFunctionCache *SQLFunctionCachePtr;SQLFunctionCachePtr129,4522
typedef struct SQLFunctionParseInfo136,4807
	char	   *fname;fname138,4845
	int			nargs;139,4886
	Oid		   *argtypes;argtypes140,4934
	char	  **argnames;argnames141,4995
	Oid			collation;143,5128
}			SQLFunctionParseInfo;144,5190
prepare_sql_fn_parse_info(190,7162
sql_fn_parser_setup(279,9404
sql_fn_post_column_ref(292,9792
sql_fn_param_ref(410,12842
sql_fn_make_param(426,13297
sql_fn_resolve_param_name(456,14202
init_execution_state(480,14791
init_sql_fcache(598,18246
postquel_start(808,25698
postquel_getnext(870,27403
postquel_end(904,28218
postquel_sub_params(924,28644
postquel_get_single_result(964,29444
fmgr_sql(1007,30588
sql_exec_error_callback(1384,41074
ShutdownSQLFunction(1466,43047
check_sql_fn_statements(1512,44052
check_sql_fn_retval(1594,47358
coerce_fn_result_column(1964,59201
CreateSQLFunctionDestReceiver(2030,61189
sqlfunction_startup(2049,61669
sqlfunction_receive(2058,61826
sqlfunction_shutdown(2075,62200
sqlfunction_destroy(2084,62333

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeBitmapHeapscan.c,536
BitmapHeapNext(72,2753
BitmapDoneInitializingSharedState(348,10096
BitmapAdjustPrefetchIterator(360,10397
BitmapAdjustPrefetchTarget(425,12213
BitmapPrefetch(464,13347
BitmapHeapRecheck(569,16113
ExecBitmapHeapScan(588,16657
ExecReScanBitmapHeapScan(602,17064
ExecEndBitmapHeapScan(649,18431
ExecInitBitmapHeapScan(706,19753
BitmapShouldInitializeSharedState(823,23149
ExecBitmapHeapEstimate(856,24001
ExecBitmapHeapInitializeDSM(876,24612
ExecBitmapHeapReInitializeDSM(912,25624
ExecBitmapHeapInitializeWorker(941,26471

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeNamedtuplestorescan.c,215
NamedTuplestoreScanNext(32,956
NamedTuplestoreScanRecheck(53,1535
ExecNamedTuplestoreScan(68,2022
ExecInitNamedTuplestoreScan(83,2482
ExecEndNamedTuplestoreScan(165,4741
ExecReScanNamedTuplestoreScan(187,5250

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeGroup.c,92
ExecGroup(37,1058
ExecInitGroup(162,4140
ExecEndGroup(227,5650
ExecReScanGroup(241,5886

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execParallel.c,2061
#define PARALLEL_KEY_EXECUTOR_FIXED	58,2035
#define PARALLEL_KEY_PLANNEDSTMT	59,2104
#define PARALLEL_KEY_PARAMLISTINFO	60,2170
#define PARALLEL_KEY_BUFFER_USAGE	61,2238
#define PARALLEL_KEY_TUPLE_QUEUE	62,2305
#define PARALLEL_KEY_INSTRUMENTATION	63,2371
#define PARALLEL_KEY_DSA	64,2440
#define PARALLEL_KEY_QUERY_TEXT	65,2500
#define PARALLEL_KEY_JIT_INSTRUMENTATION 66,2565
#define PARALLEL_KEY_WAL_USAGE	67,2638
#define PARALLEL_TUPLE_QUEUE_SIZE	69,2704
typedef struct FixedParallelExecutorState74,2822
	int64		tuples_needed;76,2866
	dsa_pointer param_exec;77,2930
	int			eflags;78,2955
	int			jit_flags;79,2970
} FixedParallelExecutorState;80,2988
struct SharedExecutorInstrumentation98,3576
	int			instrument_options;100,3615
	int			instrument_offset;101,3642
	int			num_workers;102,3668
	int			num_plan_nodes;103,3688
	int			plan_node_id[plan_node_id104,3711
#define GetInstrumentationArray(107,3835
typedef struct ExecParallelEstimateContext112,4058
	ParallelContext *pcxt;pcxt114,4103
	int			nnodes;115,4127
} ExecParallelEstimateContext;116,4142
typedef struct ExecParallelInitializeDSMContext119,4226
	ParallelContext *pcxt;pcxt121,4276
	SharedExecutorInstrumentation *instrumentation;instrumentation122,4300
	int			nnodes;123,4349
} ExecParallelInitializeDSMContext;124,4364
ExecSerializePlan(146,5282
ExecParallelEstimate(230,8056
EstimateParamExecSpace(307,10274
SerializeParamExecParams(351,11454
RestoreParamExecParams(406,12841
ExecParallelInitializeDSM(435,13467
ExecParallelSetupTupleQueues(528,16427
ExecInitParallelPlan(580,17827
ExecParallelCreateReaders(864,27858
ExecParallelReinitialize(890,28417
ExecParallelReInitializeDSM(939,29832
ExecParallelRetrieveInstrumentation(1007,31691
ExecParallelRetrieveJitInstrumentation(1073,33865
ExecParallelFinish(1113,35104
ExecParallelCleanup(1166,36523
ExecParallelGetReceiver(1202,37378
ExecParallelGetQueryDesc(1218,37830
ExecParallelReportInstrumentation(1250,38835
ExecParallelInitializeWorker(1291,40318
ParallelQueryMain(1378,43274

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeSubqueryscan.c,166
SubqueryNext(46,1494
SubqueryRecheck(67,1946
ExecSubqueryScan(83,2417
ExecInitSubqueryScan(97,2819
ExecEndSubqueryScan(168,4850
ExecReScanSubqueryScan(195,5411

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeIncrementalSort.c,586
#define INSTRUMENT_SORT_GROUP(99,3657
instrumentSortedGroup(128,4620
preparePresortedCols(165,5692
isCurrentGroup(213,7319
switchToPresortedPrefixMode(287,9785
#define DEFAULT_MIN_GROUP_SIZE 484,16700
#define DEFAULT_MAX_FULL_SORT_GROUP_SIZE 496,17319
ExecIncrementalSort(512,17828
ExecInitIncrementalSort(991,34135
ExecEndIncrementalSort(1092,37578
ExecReScanIncrementalSort(1127,38439
ExecIncrementalSortEstimate(1200,40819
ExecIncrementalSortInitializeDSM(1221,41484
ExecIncrementalSortInitializeWorker(1246,42321
ExecIncrementalSortRetrieveInstrumentation(1260,42775

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execUtils.c,1145
CreateExecutorState(89,2672
FreeExecutorState(191,5236
CreateExprContextInternal(236,6482
CreateExprContext(306,8511
CreateWorkExprContext(321,8930
CreateStandaloneExprContext(357,10182
FreeExprContext(416,11836
ReScanExprContext(443,12648
MakePerTupleExprContext(458,13019
ExecAssignExprContext(485,13861
ExecGetResultType(495,14058
ExecGetResultSlotOps(504,14246
ExecAssignProjectionInfo(540,15074
ExecConditionalAssignProjectionInfo(560,15557
tlist_matches_tupdesc(587,16250
ExecFreeExprContext(655,18747
ExecAssignScanType(675,19191
ExecCreateScanSlotFromOuterPlan(687,19434
ExecRelationIsTargetRelation(712,20209
ExecOpenScanRelation(734,20827
ExecInitRangeTable(765,21744
ExecGetRangeTableRelation(795,22565
UpdateChangedParamSet(843,23803
executor_errposition(877,24885
RegisterExprContextCallback(904,25766
UnregisterExprContextCallback(930,26517
ShutdownExprContext(961,27326
GetAttributeByName(1002,28464
GetAttributeByNum(1065,29845
ExecTargetListLength(1116,30986
ExecCleanTargetListLength(1126,31194
ExecGetTriggerOldSlot(1145,31495
ExecGetTriggerNewSlot(1167,32016
ExecGetReturningSlot(1189,32542

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeTidscan.c,403
#define IsCTIDVar(38,1000
typedef struct TidExpr45,1214
	ExprState  *exprstate;exprstate47,1239
	bool		isarray;48,1307
	CurrentOfExpr *cexpr;cexpr49,1368
} TidExpr;50,1436
TidExprListCreate(66,1933
TidListEval(130,3582
itemptr_comparator(281,7657
TidNext(310,8446
TidRecheck(401,10406
ExecTidScan(431,11368
ExecReScanTidScan(445,11733
ExecEndTidScan(468,12310
ExecInitTidScan(498,13091

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeTableFuncscan.c,249
TableFuncNext(53,1863
TableFuncRecheck(80,2481
ExecTableFuncScan(96,2955
ExecInitTableFuncScan(110,3364
ExecEndTableFuncScan(214,6129
ExecReScanTableFuncScan(243,6754
tfuncFetchRows(274,7425
tfuncInitialize(345,9369
tfuncLoadRows(434,11796

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execMain.c,1583
ExecutorStart_hook_type ExecutorStart_hook 70,2246
ExecutorRun_hook_type ExecutorRun_hook 71,2297
ExecutorFinish_hook_type ExecutorFinish_hook 72,2344
ExecutorEnd_hook_type ExecutorEnd_hook 73,2397
ExecutorCheckPerms_hook_type ExecutorCheckPerms_hook 76,2504
#define GetInsertedColumns(109,3892
#define GetUpdatedColumns(111,4008
#define GetAllUpdatedColumns(113,4122
ExecutorStart(143,5301
standard_ExecutorStart(152,5480
ExecutorRun(301,10255
standard_ExecutorRun(312,10526
ExecutorFinish(402,12785
standard_ExecutorFinish(411,12940
ExecutorEnd(462,14312
standard_ExecutorEnd(471,14455
ExecutorRewind(528,15914
ExecCheckRTPerms(571,16951
ExecCheckRTEPerms(602,17629
ExecCheckRTEPermsModified(722,21093
ExecCheckXactReadOnly(769,22472
InitPlan(806,23442
CheckValidResultRel(1076,30752
CheckValidRowMarkRel(1212,35831
InitResultRelInfo(1277,37893
ExecGetTriggerResultRel(1371,41852
ExecCleanUpTriggerState(1454,44029
ExecPostprocessPlan(1486,44918
ExecEndPlan(1532,46150
ExecutePlan(1601,47908
ExecRelCheck(1717,50706
ExecPartitionCheck(1783,52629
ExecPartitionCheckEmitError(1828,53923
ExecConstraints(1897,56081
ExecWithCheckOptions(2028,60069
ExecBuildSlotValueDescription(2176,65277
ExecUpdateLockMode(2313,68617
ExecFindRowMark(2339,69340
ExecBuildAuxRowMark(2362,69959
EvalPlanQual(2432,72316
EvalPlanQualInit(2486,73827
EvalPlanQualSetPlan(2524,75050
EvalPlanQualSlot(2541,75553
EvalPlanQualFetchRowMark(2569,76356
EvalPlanQualNext(2678,79273
EvalPlanQualBegin(2694,79605
EvalPlanQualStart(2755,81363
EvalPlanQualEnd(2932,88460

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execAmi.c,207
ExecReScan(76,2408
ExecMarkPos(318,8419
ExecRestrPos(367,9720
ExecSupportsMarkRestore(409,10640
ExecSupportsBackwardScan(499,13147
IndexSupportsBackwardScan(590,15109
ExecMaterializesOutput(623,16055

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execReplication.c,310
build_replindex_scan_key(50,1413
RelationFindReplTupleByIndex(120,3390
tuples_equal(229,6005
RelationFindReplTupleSeq(295,7755
ExecSimpleRelationInsert(407,10490
ExecSimpleRelationUpdate(469,12334
ExecSimpleRelationDelete(530,14081
CheckCmdReplicaIdentity(564,14939
CheckSubscriptionRelkind(604,16362

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execProcnode.c,221
ExecInitNode(139,5146
ExecSetExecProcNode(411,11819
ExecProcNodeFirst(429,12448
ExecProcNodeInstr(460,13441
MultiExecProcNode(488,14271
ExecEndNode(543,15502
ExecShutdownNode(751,19674
ExecSetTupleBound(821,21888

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeWorktablescan.c,180
WorkTableScanNext(30,849
WorkTableScanRecheck(66,2156
ExecWorkTableScan(81,2631
ExecInitWorkTableScan(130,4187
ExecEndWorkTableScan(191,5690
ExecReScanWorkTableScan(213,6181

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeBitmapIndexscan.c,166
ExecBitmapIndexScan(39,1166
MultiExecBitmapIndexScan(50,1490
ExecReScanBitmapIndexScan(132,3828
ExecEndBitmapIndexScan(176,5193
ExecInitBitmapIndexScan(211,6057

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeWindowAgg.c,2398
typedef struct WindowObjectData61,2338
	NodeTag		type;63,2372
	WindowAggState *winstate;winstate64,2388
	List	   *argstates;argstates65,2443
	void	   *localmem;localmem66,2506
	int			markptr;67,2568
	int			readptr;68,2627
	int64		markpos;69,2686
	int64		seekpos;70,2744
} WindowObjectData;71,2802
typedef struct WindowStatePerFuncData77,2942
	WindowFuncExprState *wfuncstate;wfuncstate80,3056
	WindowFunc *wfunc;wfunc81,3090
	int			numArguments;83,3111
	FmgrInfo	flinfo;85,3159
	Oid			winCollation;87,3223
	int16		resulttypeLen;93,3413
	bool		resulttypeByVal;94,3436
	bool		plain_agg;96,3461
	int			aggno;97,3525
	WindowObject winobj;99,3590
}			WindowStatePerFuncData;100,3654
typedef struct WindowStatePerAggData105,3758
	Oid			transfn_oid;108,3833
	Oid			invtransfn_oid;109,3853
	Oid			finalfn_oid;110,3900
	FmgrInfo	transfn;117,4121
	FmgrInfo	invtransfn;118,4140
	FmgrInfo	finalfn;119,4162
	int			numFinalArgs;121,4182
	Datum		initValue;126,4300
	bool		initValueIsNull;127,4319
	Datum		resultValue;132,4399
	bool		resultValueIsNull;133,4420
	int16		inputtypeLen,139,4594
				resulttypeLen,140,4616
				transtypeLen;141,4635
	bool		inputtypeByVal,142,4653
				resulttypeByVal,143,4676
				transtypeByVal;144,4697
	int			wfuncno;146,4718
	MemoryContext aggcontext;149,4860
	Datum		transValue;152,4966
	bool		transValueIsNull;153,5018
	int64		transValueCount;155,5044
	bool		restart;158,5157
} WindowStatePerAggData;159,5220
initialize_windowaggregate(206,7044
advance_windowaggregate(241,8175
advance_windowaggregate_base(417,13798
finalize_windowaggregate(579,18689
eval_windowaggregates(662,21192
eval_windowfunction(1032,34144
begin_partition(1079,35806
spool_tuples(1239,41162
release_partition(1312,43204
row_is_in_frame(1362,44781
update_frameheadpos(1462,47463
update_frametailpos(1712,55703
update_grouptailpos(1962,63976
ExecWindowAgg(2023,66003
ExecInitWindowAgg(2249,73011
ExecEndWindowAgg(2533,81768
ExecReScanWindowAgg(2577,82776
initialize_peragg(2617,83900
GetAggInitVal(2882,93154
are_peers(2904,93667
window_gettupleslot(2927,94295
WinGetPartitionLocalMemory(3027,97186
WinGetCurrentPosition(3042,97554
WinGetPartitionRowCount(3057,98007
WinSetMarkPosition(3075,98588
WinRowsArePeers(3110,99520
WinGetFuncArgInPartition(3167,101349
WinGetFuncArgInFrame(3255,104288
WinGetFuncArgCurrent(3450,110554

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execExprInterp.c,2818
#define EEO_USE_COMPUTED_GOTO86,3696
typedef struct ExprEvalOpLookup102,4312
	const void *opcode;opcode104,4346
	ExprEvalOp	op;105,4367
} ExprEvalOpLookup;106,4383
static const void **dispatch_table dispatch_table109,4469
static ExprEvalOpLookup reverse_dispatch_table[reverse_dispatch_table112,4554
#define EEO_SWITCH(114,4614
#define EEO_CASE(115,4635
#define EEO_DISPATCH(116,4672
#define EEO_OPCODE(117,4724
#define EEO_SWITCH(121,4830
#define EEO_CASE(122,4896
#define EEO_DISPATCH(123,4931
#define EEO_OPCODE(124,4970
#define EEO_NEXT(128,5049
#define EEO_JUMP(134,5122
ExecReadyInterpretedExpr(185,7699
ExecInterpExpr(345,12189
ExecInterpExprStillValid(1790,47509
CheckExprStillValid(1810,48079
CheckVarSlotCompatibility(1861,49200
CheckOpSlotCompatibility(1912,51091
get_cached_rowtype(1954,52354
ShutdownTupleDescRef(1987,53163
ExecJustVarImpl(2002,53493
ExecJustInnerVar(2019,54004
ExecJustOuterVar(2026,54197
ExecJustScanVar(2033,54389
ExecJustAssignVarImpl(2040,54631
ExecJustAssignInnerVar(2064,55459
ExecJustAssignOuterVar(2071,55702
ExecJustAssignScanVar(2078,55944
ExecJustApplyFuncToCase(2085,56173
ExecJustConst(2123,56971
ExecJustVarVirtImpl(2133,57246
ExecJustInnerVarVirt(2155,57930
ExecJustOuterVarVirt(2162,58152
ExecJustScanVarVirt(2169,58373
ExecJustAssignVarVirtImpl(2176,58627
ExecJustAssignInnerVarVirt(2197,59259
ExecJustAssignOuterVarVirt(2204,59499
ExecJustAssignScanVarVirt(2211,59738
dispatch_compare_ptr(2222,60070
ExecInitInterpreter(2239,60433
ExecEvalStepOp(2271,61244
ExecEvalFuncExprFusage(2301,61852
ExecEvalFuncExprStrictFusage(2322,62300
ExecEvalParamExec(2359,63129
ExecEvalParamExtern(2381,63706
ExecEvalSQLValueFunction(2423,64897
ExecEvalCurrentOfExpr(2490,67137
ExecEvalNextValueExpr(2501,67370
ExecEvalRowNull(2527,67946
ExecEvalRowNotNull(2536,68131
ExecEvalRowNullInt(2543,68326
ExecEvalArrayExpr(2630,70474
ExecEvalArrayCoerce(2835,76111
ExecEvalRow(2876,77135
ExecEvalMinMax(2896,77625
ExecEvalFieldSelect(2949,78834
ExecEvalFieldStoreDeForm(3075,82965
ExecEvalFieldStoreForm(3121,84329
ExecEvalSubscriptingRef(3146,85110
ExecEvalSubscriptingRefFetch(3181,85962
ExecEvalSubscriptingRefOld(3223,87251
ExecEvalSubscriptingRefAssign(3270,88646
ExecEvalConvertRowtype(3335,90544
ExecEvalScalarArrayOp(3433,93785
ExecEvalConstraintNotNull(3583,97208
ExecEvalConstraintCheck(3597,97559
ExecEvalXmlExpr(3617,98188
ExecEvalGroupingFunc(3836,103057
ExecEvalSubPlan(3861,103555
ExecEvalAlternativeSubPlan(3875,103914
ExecEvalWholeRowVar(3892,104416
ExecEvalSysVar(4121,112279
ExecAggInitGroup(4141,112867
ExecAggTransReparent(4169,113824
ExecEvalAggOrderedTransDatum(4215,114969
ExecEvalAggOrderedTransTuple(4229,115325
ExecAggPlainTransByVal(4243,115840
ExecAggPlainTransByRef(4275,116858

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/instrument.c,485
BufferUsage pgBufferUsage;20,438
static BufferUsage save_pgBufferUsage;21,465
WalUsage	pgWalUsage;22,504
static WalUsage save_pgWalUsage;23,525
InstrAlloc(31,752
InstrInit(57,1469
InstrStartNode(67,1815
InstrStopNode(83,2215
InstrEndLoop(121,3195
InstrAggNode(150,3915
InstrStartParallelQuery(181,4777
InstrEndParallelQuery(189,4937
InstrAccumParallelQuery(199,5282
BufferUsageAdd(207,5463
BufferUsageAccumDiff(225,6169
WalUsageAdd(247,7267
WalUsageAccumDiff(255,7424

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeGather.c,215
ExecInitGather(58,2185
ExecGather(142,4416
ExecEndGather(249,7494
gather_getnext(264,7994
gather_readnext(312,9126
ExecShutdownGatherWorkers(401,11774
ExecShutdownGather(419,12228
ExecReScanGather(443,12809

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeAgg.c,3265
#define HASHAGG_PARTITION_FACTOR 285,14948
#define HASHAGG_MIN_PARTITIONS 286,14986
#define HASHAGG_MAX_PARTITIONS 287,15019
#define HASHAGG_READ_BUFFER_SIZE 295,15327
#define HASHAGG_WRITE_BUFFER_SIZE 296,15367
#define CHUNKHDRSZ 302,15500
typedef struct HashTapeInfo316,16153
	LogicalTapeSet *tapeset;tapeset318,16183
	int			ntapes;319,16209
	int		   *freetapes;freetapes320,16224
	int			nfreetapes;321,16245
	int			freetapes_alloc;322,16264
} HashTapeInfo;323,16288
typedef struct HashAggSpill334,16677
	LogicalTapeSet *tapeset;tapeset336,16707
	int			npartitions;337,16770
	int		   *partitions;partitions338,16817
	int64	   *ntuples;ntuples339,16875
	uint32		mask;340,16937
	int			shift;341,16999
} HashAggSpill;342,17057
typedef struct HashAggBatch353,17439
	int			setno;355,17469
	int			used_bits;356,17504
	LogicalTapeSet *tapeset;tapeset357,17565
	int			input_tapenum;358,17628
	int64		input_tuples;359,17677
} HashAggBatch;360,17736
typedef struct FindColsContext363,17790
	bool	   is_aggref;365,17823
	Bitmapset *aggregated;aggregated366,17869
	Bitmapset *unaggregated;unaggregated367,17934
} FindColsContext;368,17990
select_current_set(470,22796
initialize_phase(492,23430
fetch_input_tuple(562,25240
initialize_aggregate(593,25973
initialize_aggregates(680,28856
advance_transition_function(721,30119
advance_aggregates(833,34096
process_ordered_aggregate_single(865,35288
process_ordered_aggregate_multi(957,38206
finalize_aggregate(1051,40904
finalize_partialaggregate(1154,43826
prepare_hash_slot(1214,45626
prepare_projection_slot(1259,47093
finalize_aggregates(1304,48304
project_aggregates(1367,50022
find_cols(1393,50613
find_cols_walker(1410,51069
build_hash_tables(1458,52586
build_hash_table(1493,53341
find_hash_columns(1553,55959
hash_agg_entry_size(1682,59798
hashagg_recompile_expressions(1729,61399
hash_agg_set_limits(1780,62881
hash_agg_check_limits(1837,64547
hash_agg_enter_spill_mode(1863,65358
hash_agg_update_metrics(1898,66303
hash_choose_num_buckets(1947,67703
hash_choose_num_partitions(1972,68340
initialize_hash_entry(2021,69682
lookup_hash_entries(2072,71443
ExecAgg(2135,73415
agg_retrieve_direct(2171,74050
agg_fill_hash_table(2517,84142
agg_refill_hash_table(2571,85666
agg_retrieve_hash_table(2730,90456
agg_retrieve_hash_table_in_memory(2755,90892
hashagg_tapeinfo_init(2875,93727
hashagg_tapeinfo_assign(2896,94328
hashagg_tapeinfo_release(2919,94936
hashagg_spill_init(2938,95491
hashagg_spill_tuple(2965,96274
hashagg_batch_new(3025,97770
hashagg_batch_read(3044,98225
hashagg_finish_initial_spills(3094,99681
hashagg_spill_finish(3128,100470
hashagg_reset_spill_state(3160,101245
ExecInitAgg(3212,102290
build_pertrans_for_aggref(4067,129050
GetAggInitVal(4375,138414
find_compatible_peragg(4403,139326
find_compatible_pertrans(4481,142038
ExecEndAgg(4532,143470
ExecReScanAgg(4602,145289
AggCheckCallContext(4749,150003
AggGetAggref(4793,151541
AggGetTempMemoryContext(4827,152527
AggStateIsShared(4853,153432
AggRegisterCallback(4892,154843
aggregate_dummy(4920,155645
ExecAggEstimate(4939,156232
ExecAggInitializeDSM(4960,156876
ExecAggInitializeWorker(4985,157692
ExecAggRetrieveInstrumentation(4998,158101

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeUnique.c,96
ExecUnique(47,1524
ExecInitUnique(115,3300
ExecEndUnique(169,4701
ExecReScanUnique(181,4890

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execSRF.c,292
ExecInitTableFunctionResult(56,1716
ExecMakeTableFunctionResult(101,3034
ExecInitFunctionResultSet(434,12958
ExecMakeFunctionResultSet(487,14467
init_sexpr(686,19739
ShutdownSetExpr(800,23328
ExecEvalFuncArgs(824,23923
ExecPrepareTuplestoreResult(854,24599
tupledesc_match(933,26907

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeHashjoin.c,911
#define HJ_BUILD_HASHTABLE	124,5970
#define HJ_NEED_NEW_OUTER	125,6000
#define HJ_SCAN_BUCKET	126,6029
#define HJ_FILL_OUTER_TUPLE	127,6056
#define HJ_FILL_INNER_TUPLES	128,6087
#define HJ_NEED_NEW_BATCH	129,6118
#define HJ_FILL_OUTER(132,6204
#define HJ_FILL_INNER(134,6334
ExecHashJoinImpl(165,7722
ExecHashJoin(585,20013
ExecParallelHashJoin(601,20457
ExecInitHashJoin(617,20876
ExecEndHashJoin(765,25151
ExecHashJoinOuterGetTuple(808,26133
ExecParallelHashJoinOuterGetTuple(882,27866
ExecHashJoinNewBatch(947,29428
ExecParallelHashJoinNewBatch(1087,33686
ExecHashJoinSaveTuple(1218,37611
ExecHashJoinGetSavedTuple(1242,38218
ExecReScanHashJoin(1291,39636
ExecShutdownHashJoin(1376,42446
ExecParallelHashJoinPartitionOuter(1391,42806
ExecHashJoinEstimate(1437,44051
ExecHashJoinInitializeDSM(1444,44246
ExecHashJoinReInitializeDSM(1502,46145
ExecHashJoinInitializeWorker(1535,47330

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeSubplan.c,404
ExecSubPlan(62,2064
ExecHashSubPlan(101,3074
ExecScanSubPlan(223,6965
buildSubPlanHash(470,14483
execTuplesUnequal(641,19533
findPartialMatch(710,21352
slotAllNulls(745,22276
slotNoNulls(765,22646
ExecInitSubPlan(789,23367
ExecSetParamPlan(1050,32500
ExecSetParamPlanMulti(1245,38321
ExecReScanSetParamPlan(1268,38847
ExecInitAlternativeSubPlan(1314,40201
ExecAlternativeSubPlan(1376,42008

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeRecursiveunion.c,153
build_hash_table(32,811
ExecRecursiveUnion(75,2081
ExecInitRecursiveUnion(167,4593
ExecEndRecursiveUnion(272,7562
ExecReScanRecursiveUnion(298,8217

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeResult.c,153
ExecResult(68,2079
ExecResultMarkPos(147,3910
ExecResultRestrPos(162,4284
ExecInitResult(181,4809
ExecEndResult(241,6245
ExecReScanResult(260,6510

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeMergejoin.c,1283
#define EXEC_MJ_INITIALIZE_OUTER	106,3814
#define EXEC_MJ_INITIALIZE_INNER	107,3850
#define EXEC_MJ_JOINTUPLES	108,3886
#define EXEC_MJ_NEXTOUTER	109,3918
#define EXEC_MJ_TESTOUTER	110,3949
#define EXEC_MJ_NEXTINNER	111,3980
#define EXEC_MJ_SKIP_TEST	112,4011
#define EXEC_MJ_SKIPOUTER_ADVANCE	113,4042
#define EXEC_MJ_SKIPINNER_ADVANCE	114,4079
#define EXEC_MJ_ENDOUTER	115,4116
#define EXEC_MJ_ENDINNER	116,4147
typedef struct MergeJoinClauseData121,4228
	ExprState  *lexpr;lexpr124,4300
	ExprState  *rexpr;rexpr125,4363
	Datum		ldatum;131,4553
	Datum		rdatum;132,4601
	bool		lisnull;133,4650
	bool		risnull;134,4696
	SortSupportData ssup;140,4810
}			MergeJoinClauseData;141,4833
	MJEVAL_MATCHABLE,146,4936
	MJEVAL_NONMATCHABLE,147,4999
	MJEVAL_ENDOFJOIN	148,5068
} MJEvalResult;149,5131
#define MarkInnerTuple(152,5149
MJExamineQuals(176,6361
MJEvalOuterValues(295,10498
MJEvalInnerValues(342,11733
MJCompare(392,13065
MJFillOuter(453,14590
MJFillInner(484,15335
check_constant_qual(520,16325
ExecMergeTupleDumpOuter(547,16919
ExecMergeTupleDumpInner(559,17165
ExecMergeTupleDumpMarked(571,17411
ExecMergeTupleDump(583,17663
ExecMergeJoin(600,18095
ExecInitMergeJoin(1436,42388
ExecEndMergeJoin(1632,48655
ExecReScanMergeJoin(1659,49158

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeSort.c,279
ExecSort(40,1104
ExecInitSort(167,4218
ExecEndSort(235,6030
ExecSortMarkPos(270,6847
ExecSortRestrPos(288,7266
ExecReScanSort(303,7524
ExecSortEstimate(357,9103
ExecSortInitializeDSM(378,9746
ExecSortInitializeWorker(403,10561
ExecSortRetrieveInstrumentation(417,10993

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeIndexonlyscan.c,439
IndexOnlyNext(60,1962
StoreIndexTuple(271,9277
IndexOnlyRecheck(296,10273
ExecIndexOnlyScan(307,10654
ExecReScanIndexOnlyScan(334,11574
ExecEndIndexOnlyScan(369,12614
ExecIndexOnlyMarkPos(420,13924
ExecIndexOnlyRestrPos(457,15142
ExecInitIndexOnlyScan(493,16223
ExecIndexOnlyScanEstimate(646,20933
ExecIndexOnlyScanInitializeDSM(664,21517
ExecIndexOnlyScanReInitializeDSM(702,22808
ExecIndexOnlyScanInitializeWorker(715,23189

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeAppend.c,574
struct ParallelAppendState66,2083
	LWLock		pa_lock;68,2112
	int			pa_next_plan;69,2177
	bool		pa_finished[pa_finished77,2516
#define INVALID_SUBPLAN_INDEX	80,2563
ExecInitAppend(100,3380
ExecAppend(232,7132
ExecEndAppend(294,8620
ExecReScanAppend(314,8925
ExecAppendEstimate(367,10391
ExecAppendInitializeDSM(386,10906
ExecAppendReInitializeDSM(407,11559
ExecAppendInitializeWorker(423,12090
choose_next_subplan_locally(437,12601
choose_next_subplan_for_leader(486,14070
choose_next_subplan_for_worker(567,16421
mark_invalid_subplans_as_finished(691,19892

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/tqueue.c,460
typedef struct TQueueDestReceiver30,864
	DestReceiver pub;32,900
	shm_mq_handle *queue;queue33,941
} TQueueDestReceiver;34,989
struct TupleQueueReader43,1199
	shm_mq_handle *queue;queue45,1225
tqueueReceiveSlot(54,1441
tqueueStartupReceiver(83,2141
tqueueShutdownReceiver(92,2298
tqueueDestroyReceiver(105,2546
CreateTupleQueueDestReceiver(119,2877
CreateTupleQueueReader(139,3361
DestroyTupleQueueReader(155,3700
TupleQueueReaderNext(176,4442

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execGrouping.c,674
#define SH_PREFIX 36,1227
#define SH_ELEMENT_TYPE 37,1255
#define SH_KEY_TYPE 38,1298
#define SH_KEY 39,1331
#define SH_HASH_KEY(40,1357
#define SH_EQUAL(41,1423
#define SH_SCOPE 42,1485
#define SH_STORE_HASH43,1509
#define SH_GET_HASH(44,1531
#define SH_DEFINE45,1566
execTuplesMatchPrepare(59,2005
execTuplesHashPrepare(96,3012
BuildTupleHashTableExt(154,5077
BuildTupleHashTable(252,8559
ResetTupleHashTable(282,9382
LookupTupleHashEntry(303,10112
TupleHashTableHash(335,10946
LookupTupleHashEntryHash(358,11498
FindTupleHashEntry(390,12641
TupleHashTableHash_internal(423,13656
LookupTupleHashEntry_internal(493,15579
TupleHashTableMatch(534,16424

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execExpr.c,936
typedef struct LastAttnumInfo53,1707
	AttrNumber	last_inner;55,1739
	AttrNumber	last_outer;56,1763
	AttrNumber	last_scan;57,1787
} LastAttnumInfo;58,1810
ExecInitExpr(123,4988
ExecInitExprWithParams(160,5934
ExecInitQual(209,7471
ExecInitCheck(298,10049
ExecInitExprList(318,10608
ExecBuildProjectionInfo(353,11703
ExecPrepareExpr(492,15837
ExecPrepareQual(520,16646
ExecPrepareCheck(543,17131
ExecPrepareExprList(566,17586
ExecCheck(599,18400
ExecReadyExpr(629,19203
ExecInitExprRec(646,19636
ExprEvalPushStep(2125,63083
ExecInitFunc(2151,63837
ExecInitExprSlots(2256,66972
ExecPushExprSlots(2274,67388
get_last_attnums_walker(2318,68557
ExecComputeSlotInfo(2372,69890
ExecInitWholeRowVar(2470,71984
ExecInitSubscriptingRef(2543,74032
isAssignmentIndirectionExpr(2755,81096
ExecInitCoerceToDomain(2780,81610
ExecBuildAggTrans(2934,86796
ExecBuildAggTransCall(3234,95348
ExecBuildGroupingEqual(3350,99333

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeLimit.c,155
ExecLimit(41,1214
recompute_limits(354,8957
compute_tuples_needed(432,10744
ExecInitLimit(448,11239
ExecEndLimit(535,13547
ExecReScanLimit(543,13658

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeSetOp.c,460
typedef struct SetOpStatePerGroupData64,2669
	long		numLeft;66,2709
	long		numRight;67,2767
}			SetOpStatePerGroupData;68,2827
initialize_counts(80,3141
advance_counts(89,3320
fetch_tuple_flag(102,3584
build_hash_table(120,3955
set_output_count(150,4949
ExecSetOp(190,6049
setop_retrieve_direct(227,6873
setop_fill_hash_table(339,9621
setop_retrieve_hash_table(425,11909
ExecInitSetOp(481,13185
ExecEndSetOp(583,16022
ExecReScanSetOp(598,16326

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execScan.c,154
ExecScanFetch(35,1082
ExecScan(158,4653
ExecAssignScanProjectionInfo(272,7422
ExecAssignScanProjectionInfoWithVarno(285,7783
ExecScanReScan(299,8118

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execIndexing.c,359
	CEOUC_WAIT,122,5360
	CEOUC_NOWAIT,123,5373
	CEOUC_LIVELOCK_PREVENTING_WAIT124,5388
} CEOUC_WAIT_MODE;125,5420
ExecOpenIndices(151,6331
ExecCloseIndices(226,8275
ExecInsertIndexTuples(273,9842
ExecCheckIndexConstraints(482,16215
check_exclusion_or_unique_constraint(646,21812
check_exclusion_constraint(866,28374
index_recheck_constraint(883,28914

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeHash.c,1958
ExecHash(91,3337
MultiExecHash(105,3719
MultiExecPrivateHash(138,4775
MultiExecParallelHash(214,6844
ExecInitHash(353,11366
ExecEndHash(406,12668
ExecHashTableCreate(430,13127
#define NTUP_PER_BUCKET	664,20739
ExecChooseHashTableSize(667,20773
ExecHashTableDestroy(852,26670
ExecHashIncreaseNumBatches(885,27529
ExecParallelHashIncreaseNumBatches(1056,32675
ExecParallelHashRepartitionFirst(1273,40113
ExecParallelHashRepartitionRest(1340,41903
ExecParallelHashMergeCounters(1400,43689
ExecHashIncreaseNumBuckets(1430,44518
ExecParallelHashIncreaseNumBuckets(1493,46461
ExecHashTableInsert(1592,49838
ExecParallelHashTableInsert(1681,52458
ExecParallelHashTableInsertCurrentBatch(1746,54362
ExecHashGetHashValue(1790,56077
ExecHashGetBucketAndBatch(1898,59663
ExecScanHashBucket(1930,60454
ExecParallelScanHashBucket(1991,62176
ExecPrepHashTableForUnmatched(2042,63480
ExecScanHashTableForUnmatched(2066,64185
ExecHashTableReset(2137,65937
ExecHashTableResetMatchFlags(2166,66700
ExecReScanHash(2192,67385
ExecHashBuildSkewHash(2212,67898
ExecHashGetSkewBucket(2365,72827
ExecHashSkewTableInsert(2411,74000
ExecHashRemoveNextSkewBucket(2457,75547
ExecHashEstimate(2570,79219
ExecHashInitializeDSM(2589,79751
ExecHashInitializeWorker(2614,80463
ExecShutdownHash(2640,81301
ExecHashRetrieveInstrumentation(2656,81846
ExecHashAccumInstrumentation(2687,83134
dense_alloc(2706,83777
ExecParallelHashTupleAlloc(2786,86270
ExecParallelHashJoinSetUpBatches(2934,90846
ExecParallelHashCloseBatchAccessors(3011,93248
ExecParallelHashEnsureBatchAccessors(3032,93803
ExecParallelHashTableAlloc(3095,95737
ExecHashTableDetachBatch(3115,96359
ExecHashTableDetach(3172,98119
ExecParallelHashFirstTuple(3209,99041
ExecParallelHashNextTuple(3225,99421
ExecParallelHashPushTuple(3239,99753
ExecParallelHashTableSetCurrentBatch(3257,100110
ExecParallelHashPopChunkQueue(3278,100951
ExecParallelHashTuplePrealloc(3319,102523

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execCurrent.c,85
execCurrentOf(44,1385
fetch_cursor_param_value(258,7896
search_plan_tree(310,9579

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/tstoreReceiver.c,674
	DestReceiver pub;32,908
	Tuplestorestate *tstore;tstore34,946
	MemoryContext cxt;35,1000
	bool		detoast;36,1054
	TupleDesc	target_tupdesc;37,1102
	const char *map_failure_msg;map_failure_msg38,1167
	Datum	   *outvalues;outvalues40,1253
	Datum	   *tofree;tofree41,1312
	TupleConversionMap *tupmap;tupmap42,1365
	TupleTableSlot *mapslot;mapslot43,1426
} TStoreState;44,1481
tstoreStartupReceiver(56,1805
tstoreReceiveSlot_notoast(122,3466
tstoreReceiveSlot_detoast(136,3807
tstoreReceiveSlot_tupmap(192,5324
tstoreShutdownReceiver(206,5650
tstoreDestroyReceiver(229,6175
CreateTuplestoreDestReceiver(238,6301
SetTuplestoreDestReceiverParams(266,7235

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeNestloop.c,105
ExecNestLoop(61,1865
ExecInitNestLoop(263,7144
ExecEndNestLoop(362,9777
ExecReScanNestLoop(392,10393

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeCustom.c,353
ExecInitCustomScan(29,793
ExecCustomScan(108,3080
ExecEndCustomScan(119,3304
ExecReScanCustomScan(133,3631
ExecCustomMarkPos(140,3775
ExecCustomRestrPos(151,4064
ExecCustomScanEstimate(162,4356
ExecCustomScanInitializeDSM(175,4701
ExecCustomScanReInitializeDSM(191,5137
ExecCustomScanInitializeWorker(206,5526
ExecShutdownCustomScan(222,5942

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeCtescan.c,146
CteScanNext(31,824
CteScanRecheck(145,4022
ExecCteScan(160,4473
ExecInitCteScan(175,4849
ExecEndCteScan(288,8337
ExecReScanCteScan(319,8959

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeFunctionscan.c,461
typedef struct FunctionScanPerFuncState36,1040
	SetExprState *setexpr;setexpr38,1082
	TupleDesc	tupdesc;39,1153
	int			colcount;40,1213
	Tuplestorestate *tstore;tstore41,1271
	int64		rowcount;42,1333
	TupleTableSlot *func_slot;func_slot43,1399
} FunctionScanPerFuncState;44,1464
FunctionNext(60,1947
FunctionRecheck(250,7110
ExecFunctionScan(266,7581
ExecInitFunctionScan(280,7983
ExecEndFunctionScan(522,14677
ExecReScanFunctionScan(563,15490

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeLockRows.c,106
ExecLockRows(38,1053
ExecInitLockRows(288,7603
ExecEndLockRows(382,10178
ExecReScanLockRows(390,10300

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeSeqscan.c,278
SeqNext(50,1626
SeqRecheck(89,2498
ExecSeqScan(108,3086
ExecInitSeqScan(123,3454
ExecEndSeqScan(184,4925
ExecReScanSeqScan(224,5751
ExecSeqScanEstimate(250,6444
ExecSeqScanInitializeDSM(268,6996
ExecSeqScanReInitializeDSM(290,7706
ExecSeqScanInitializeWorker(306,8177

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeSamplescan.c,211
SampleNext(45,1371
SampleRecheck(63,1713
ExecSampleScan(82,2290
ExecInitSampleScan(96,2678
ExecEndSampleScan(182,4929
ExecReScanSampleScan(217,5671
tablesample_init(233,6015
tablesample_getnext(335,8834

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeBitmapOr.c,131
ExecBitmapOr(43,1277
ExecInitBitmapOr(56,1637
MultiExecBitmapOr(111,3046
ExecEndBitmapOr(196,5149
ExecReScanBitmapOr(219,5509

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeBitmapAnd.c,136
ExecBitmapAnd(42,1266
ExecInitBitmapAnd(55,1631
MultiExecBitmapAnd(110,3056
ExecEndBitmapAnd(178,4707
ExecReScanBitmapAnd(201,5069

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/execPartition.c,1485
struct PartitionTupleRouting88,3085
	Relation	partition_root;90,3116
	PartitionDispatch *partition_dispatch_info;partition_dispatch_info91,3142
	int			num_dispatch;92,3187
	int			max_dispatch;93,3208
	ResultRelInfo **partitions;partitions94,3229
	int			num_partitions;95,3258
	int			max_partitions;96,3281
	HTAB	   *subplan_resultrel_htab;subplan_resultrel_htab97,3304
	MemoryContext memcxt;98,3338
typedef struct PartitionDispatchData139,4794
	Relation	reldesc;141,4833
	PartitionKey key;142,4852
	List	   *keystate;keystate143,4871
	PartitionDesc partdesc;144,4916
	TupleTableSlot *tupslot;tupslot145,4941
	AttrMap    *tupmap;tupmap146,4967
	int			indexes[indexes147,4988
}			PartitionDispatchData;148,5027
typedef struct SubplanResultRelHashElem151,5121
	Oid			relid;153,5163
	ResultRelInfo *rri;rri154,5211
} SubplanResultRelHashElem;155,5232
ExecSetupPartitionTupleRouting(211,7507
ExecFindPartition(271,9953
ExecHashSubPlanResultRelsByOid(456,15233
ExecInitPartitionInfo(503,16595
ExecInitRoutingInfo(878,29411
ExecInitPartitionDispatchInfo(988,32852
ExecCleanupTupleRouting(1096,36075
FormPartitionKeyDatum(1167,38136
get_partition_for_tuple(1225,39693
ExecBuildSlotPartitionKeyDescription(1332,42383
adjust_partition_tlist(1428,45018
ExecCreatePartitionPruneState(1551,49886
ExecInitPruningContext(1736,55888
ExecFindInitialMatchingSubPlans(1814,58089
ExecFindMatchingSubPlans(1981,63261
find_matching_subplans_recurse(2040,64898

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeMergeAppend.c,179
typedef int32 SlotNumber;52,1686
ExecInitMergeAppend(65,2075
ExecMergeAppend(212,6455
heap_compare_slots(285,8529
ExecEndMergeAppend(332,9634
ExecReScanMergeAppend(352,9945

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeForeignscan.c,354
ForeignNext(42,1235
ForeignRecheck(71,2064
ExecForeignScan(111,3361
ExecInitForeignScan(126,3757
ExecEndForeignScan(241,6929
ExecReScanForeignScan(271,7717
ExecForeignScanEstimate(295,8398
ExecForeignScanInitializeDSM(314,8975
ExecForeignScanReInitializeDSM(336,9646
ExecForeignScanInitializeWorker(357,10287
ExecShutdownForeignScan(380,10980

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeModifyTable.c,635
ExecCheckPlanOutput(92,3464
ExecProcessReturning(162,5682
ExecCheckTupleVisible(194,6798
ExecCheckTIDVisible(228,7783
ExecComputeStoredGenerated(249,8308
ExecInsert(375,12082
ExecDelete(709,23143
ExecUpdate(1069,34226
ExecOnConflictUpdate(1525,49810
fireBSTriggers(1738,57031
getTargetResultRelInfo(1781,58221
fireASTriggers(1797,58586
ExecSetupTransitionCaptureState(1831,59467
ExecPrepareTupleRouting(1883,61476
ExecSetupChildParentMapForSubplan(1966,63978
tupconv_map_for_subplan(1998,64982
ExecModifyTable(2016,65619
ExecInitModifyTable(2296,74087
ExecEndModifyTable(2761,88825
ExecReScanModifyTable(2815,90008

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeGatherMerge.c,691
#define MAX_TUPLE_STORE 36,1160
typedef struct GMReaderTupleBuffer46,1610
	MinimalTuple *tuple;tuple48,1647
	int			nTuples;49,1708
	int			readCounter;50,1765
	bool		done;51,1822
} GMReaderTupleBuffer;52,1877
ExecInitGatherMerge(72,2812
ExecGatherMerge(188,5762
ExecEndGatherMerge(289,8556
ExecShutdownGatherMerge(305,9067
ExecShutdownGatherMergeWorkers(324,9510
ExecReScanGatherMerge(342,9958
gather_merge_setup(396,12176
gather_merge_init(444,13846
gather_merge_clear_tuples(527,16070
gather_merge_getnext(548,16543
load_tuple_array(598,17836
gather_merge_readnext(637,18853
gm_readnext_tuple(715,20841
typedef int32 SlotNumber;747,21794
heap_compare_slots(753,21887

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/spi.c,2746
uint64		SPI_processed 45,1258
SPITupleTable *SPI_tuptable SPI_tuptable46,1285
int			SPI_result 47,1321
static _SPI_connection *_SPI_stack _SPI_stack49,1344
static _SPI_connection *_SPI_current _SPI_current50,1387
static int	_SPI_stack_depth 51,1432
static int	_SPI_connected 52,1500
SPI_connect(90,2808
SPI_connect_ext(96,2863
SPI_finish(177,5540
SPI_start_transaction(213,6434
_SPI_commit(222,6594
SPI_commit(279,8159
SPI_commit_and_chain(285,8207
_SPI_rollback(291,8271
SPI_rollback(334,9303
SPI_rollback_and_chain(340,9355
SPICleanup(350,9557
AtEOXact_SPI(364,9787
AtEOSubXact_SPI(386,10373
SPI_inside_nonatomic_context(485,13004
SPI_execute(497,13281
SPI_exec(525,13849
SPI_execute_plan(532,13979
SPI_execp(559,14600
SPI_execute_plan_with_paramlist(566,14786
SPI_execute_plan_with_receiver(593,15488
SPI_execute_snapshot(629,16536
SPI_execute_with_args(663,17376
SPI_execute_with_receiver(712,18633
SPI_prepare(747,19361
SPI_prepare_cursor(753,19485
SPI_prepare_params(788,20188
SPI_keepplan(825,20884
SPI_saveplan(852,21518
SPI_freeplan(874,21879
SPI_copytuple(896,22321
SPI_returntuple(923,22721
SPI_modifytuple(955,23366
SPI_fnumber(1024,24833
SPI_fname(1047,25333
SPI_getvalue(1069,25753
SPI_getbinval(1101,26405
SPI_gettype(1117,26751
SPI_gettypeid(1157,27634
SPI_getrelname(1175,28011
SPI_getnspname(1181,28099
SPI_palloc(1187,28195
SPI_repalloc(1196,28378
SPI_pfree(1203,28521
SPI_datumTransfer(1210,28635
SPI_freetuple(1228,28999
SPI_freetuptable(1235,29125
SPI_cursor_open(1294,30469
SPI_cursor_open_with_args(1321,31032
SPI_cursor_open_with_paramlist(1373,32425
SPI_cursor_parse_open_with_paramlist(1386,32822
SPI_cursor_open_internal(1429,33813
SPI_cursor_find(1637,40008
SPI_cursor_fetch(1649,40142
SPI_cursor_move(1664,40457
SPI_scroll_cursor_fetch(1678,40713
SPI_scroll_cursor_move(1693,41034
SPI_cursor_close(1705,41236
SPI_getargtypeid(1718,41506
SPI_getargcount(1733,41822
SPI_is_cursor_plan(1753,42329
SPI_plan_is_valid(1791,43240
SPI_result_code_string(1815,43781
SPI_plan_get_plan_sources(1892,45933
SPI_plan_get_cached_plan(1908,46504
spi_dest_startup(1951,47643
spi_printtup(1999,49094
_SPI_prepare_plan(2048,50475
_SPI_prepare_oneshot_plan(2153,53599
_SPI_execute_plan(2212,55318
_SPI_convert_params(2573,65043
_SPI_pquery(2598,65493
_SPI_error_callback(2679,67235
_SPI_cursor_operation(2708,67841
_SPI_execmem(2759,69385
_SPI_procmem(2765,69484
_SPI_begin_call(2778,69868
_SPI_end_call(2802,70403
_SPI_checktuples(2818,70742
_SPI_make_plan_non_temp(2842,71507
_SPI_save_plan(2909,73473
_SPI_find_ENR_by_name(2979,75442
SPI_register_relation(2996,75863
SPI_unregister_relation(3030,76587
SPI_register_trigger_data(3063,77301

/home/seinoyu/pgsql/master/postgresql/src/backend/executor/nodeProjectSet.c,137
ExecProjectSet(43,1384
ExecProjectSRF(132,3827
ExecInitProjectSet(220,6170
ExecEndProjectSet(321,8921
ExecReScanProjectSet(340,9194

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/freespace/freespace.c,964
#define FSM_CATEGORIES	63,2155
#define FSM_CAT_STEP	64,2182
#define MaxFSMRequestSize	65,2229
#define FSM_TREE_DEPTH	74,2637
#define FSM_ROOT_LEVEL	76,2697
#define FSM_BOTTOM_LEVEL 77,2741
	int			level;85,2937
	int			logpageno;86,2965
} FSMAddress;87,3019
static const FSMAddress FSM_ROOT_ADDRESS 90,3066
GetPageWithFreeSpace(132,4844
RecordAndGetPageWithFreeSpace(149,5417
RecordPageWithFreeSpace(181,6399
XLogRecordPageWithFreeSpace(198,6829
GetRecordedFreeSpace(230,7680
FreeSpaceMapPrepareTruncateRel(261,8508
FreeSpaceMapVacuum(335,10781
FreeSpaceMapVacuumRange(354,11347
fsm_space_avail_to_cat(369,11697
fsm_space_cat_to_avail(395,12104
fsm_space_needed_to_cat(409,12462
fsm_logical_to_physical(432,12886
fsm_get_location(468,13655
fsm_get_heap_blk(483,13961
fsm_get_parent(494,14294
fsm_get_child(512,14704
fsm_readbuf(531,15083
fsm_extend(601,17721
fsm_set_and_search(657,19413
fsm_search(689,20073
fsm_vacuum_page(787,22793

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/freespace/indexfsm.c,117
GetFreeIndexPage(38,1030
RecordFreeIndexPage(52,1280
RecordUsedIndexPage(62,1465
IndexFreeSpaceMapVacuum(71,1657

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/freespace/fsmpage.c,260
#define leftchild(29,957
#define rightchild(30,992
#define parentof(31,1028
rightneighbor(37,1146
fsm_set_avail(63,1736
fsm_get_avail(122,3041
fsm_get_max_avail(138,3383
fsm_search_avail(158,4038
fsm_truncate_avail(313,9110
fsm_rebuild_page(342,9688

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/sync/sync.c,1028
static MemoryContext pendingOpsCxt;35,867
typedef uint16 CycleCtr;56,1885
	FileTag		tag;60,1970
	CycleCtr	cycle_ctr;61,2021
	bool		canceled;62,2082
} PendingFsyncEntry;63,2149
	FileTag		tag;67,2188
	CycleCtr	cycle_ctr;68,2239
} PendingUnlinkEntry;69,2310
static HTAB *pendingOps pendingOps71,2333
static List *pendingUnlinks pendingUnlinks72,2365
static MemoryContext pendingOpsCxt;73,2400
static CycleCtr sync_cycle_ctr 75,2466
static CycleCtr checkpoint_cycle_ctr 76,2502
#define FSYNCS_PER_ABSORB	79,2592
#define UNLINKS_PER_ABSORB	80,2622
typedef struct SyncOps85,2721
	int			(*sync_syncfiletag)sync_syncfiletag87,2746
	int			(*sync_unlinkfiletag)sync_unlinkfiletag88,2808
	bool		(*sync_filetagmatches)sync_filetagmatches89,2872
} SyncOps;91,2961
static const SyncOps syncsw[syncsw93,2973
InitSync(106,3228
SyncPreCheckpoint(159,5063
SyncPostCheckpoint(174,5394
ProcessSyncRequests(236,7214
RememberSyncRequest(437,14340
RegisterSyncRequest(532,16807
EnableSyncRequestForwarding(579,18110

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/page/bufpage.c,887
bool		ignore_checksum_failure 27,661
PageInit(42,1043
PageIsVerified(82,2591
PageAddItemExtended(186,5427
PageGetTempPage(344,9704
PageGetTempPageCopy(361,10021
PageGetTempPageCopySpecial(381,10446
PageRestoreTempPage(403,10903
typedef struct itemIdSortData416,11168
	uint16		offsetindex;418,11200
	int16		itemoff;419,11245
	uint16		alignedlen;420,11294
} itemIdSortData;421,11346
typedef itemIdSortData *itemIdSort;itemIdSort422,11364
itemoffcompare(425,11412
compactify_tuples(437,11737
PageRepairFragmentation(475,12676
PageGetFreeSpace(574,15484
PageGetFreeSpaceForMultipleTuples(601,16100
PageGetExactFreeSpace(625,16646
PageGetHeapFreeSpace(658,17674
PageIndexTupleDelete(719,18900
PageIndexMultiDelete(828,22025
PageIndexTupleDeleteNoCompact(950,25529
PageIndexTupleOverwrite(1060,28919
PageSetChecksumCopy(1165,32387
PageSetChecksumInplace(1194,33294

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/page/itemptr.c,54
ItemPointerEquals(29,670
ItemPointerCompare(52,1292

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/sinvaladt.c,1237
#define MAXNUMMESSAGES 130,6470
#define MSGNUMWRAPAROUND 131,6498
#define CLEANUP_MIN 132,6549
#define CLEANUP_QUANTUM 133,6590
#define SIG_THRESHOLD 134,6636
#define WRITE_QUANTUM 135,6679
typedef struct ProcState138,6762
	pid_t		procPid;141,6850
	PGPROC	   *proc;proc142,6904
	int			nextMsgNum;144,7020
	bool		resetState;145,7074
	bool		signaled;146,7133
	bool		hasMessages;147,7194
	bool		sendOnly;155,7502
	LocalTransactionId nextLXID;163,7836
} ProcState;164,7866
typedef struct SISeg167,7927
	int			minMsgNum;172,7989
	int			maxMsgNum;173,8042
	int			nextThreshold;174,8102
	int			lastBackend;175,8167
	int			maxBackends;176,8234
	slock_t		msgnumLock;178,8285
	SharedInvalidationMessage buffer[buffer183,8404
	ProcState	procState[procState188,8532
} SISeg;189,8577
static SISeg *shmInvalBuffer;shmInvalBuffer191,8587
static LocalTransactionId nextLocalTransactionId;194,8660
SInvalShmemSize(203,8843
CreateSharedInvalidationState(218,9094
SharedInvalBackendInit(257,10301
CleanupInvalidationState(335,12285
BackendIdGetProc(376,13302
BackendIdGetTransactionIds(403,13902
SIInsertDataEntries(435,14592
SIGetDataEntries(538,18024
SICleanupQueue(642,21476
GetNextLocalTransactionId(768,25301

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/shmem.c,603
static PGShmemHeader *ShmemSegHdr;ShmemSegHdr82,3555
static void *ShmemBase;ShmemBase84,3623
static void *ShmemEnd;ShmemEnd86,3687
slock_t    *ShmemLock;ShmemLock88,3750
static HTAB *ShmemIndex ShmemIndex91,3842
InitShmemAccess(101,4126
InitShmemAllocation(116,4474
ShmemAlloc(161,5729
ShmemAllocNoError(181,6172
ShmemAllocRaw(195,6512
ShmemAllocUnlocked(247,8050
ShmemAddrIsValid(283,8800
InitShmemIndex(292,8965
ShmemInitHash(337,10610
ShmemInitStruct(392,12429
add_size(498,15107
mul_size(515,15469
pg_get_shmem_allocations(532,15848
#define PG_GET_SHMEM_SIZES_COLS 534,15893

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/procsignal.c,921
	pid_t		pss_pid;61,2390
	sig_atomic_t pss_signalFlags[pss_signalFlags62,2407
	pg_atomic_uint64 pss_barrierGeneration;63,2455
	pg_atomic_uint32 pss_barrierCheckMask;64,2496
} ProcSignalSlot;65,2536
	pg_atomic_uint64 psh_barrierGeneration;75,2740
	ProcSignalSlot psh_slot[psh_slot76,2781
} ProcSignalHeader;77,2830
#define NumProcSignalSlots	84,3056
#define BARRIER_SHOULD_CHECK(87,3180
static ProcSignalHeader *ProcSignal ProcSignal90,3279
static volatile ProcSignalSlot *MyProcSignalSlot MyProcSignalSlot91,3323
ProcSignalShmemSize(102,3631
ProcSignalShmemInit(116,3904
ProcSignalInit(151,4717
CleanupProcSignalState(202,6398
SendProcSignal(250,7712
EmitProcSignalBarrier(321,9803
WaitForProcSignalBarrier(386,11857
HandleProcSignalBarrierInterrupt(436,13380
ProcessProcSignalBarrier(452,13861
ProcessBarrierPlaceholder(512,15941
CheckProcSignal(530,16580
procsignal_sigusr1_handler(551,16957

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/shm_toc.c,496
typedef struct shm_toc_entry20,514
	uint64		key;22,545
	Size		offset;23,588
} shm_toc_entry;24,644
struct shm_toc26,662
	uint64		toc_magic;28,679
	slock_t		toc_mutex;29,740
	Size		toc_total_bytes;30,798
	Size		toc_allocated_bytes;31,854
	uint32		toc_nentry;32,921
	shm_toc_entry toc_entry[toc_entry33,974
shm_toc_create(40,1110
shm_toc_attach(64,1703
shm_toc_allocate(88,2402
shm_toc_freespace(131,3558
shm_toc_insert(171,5156
shm_toc_lookup(232,6879
shm_toc_estimate(263,7568

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/ipc.c,779
bool		proc_exit_inprogress 40,1115
bool		shmem_exit_inprogress 45,1200
static bool atexit_callback_setup 51,1352
#define MAX_ON_EXITS 71,2084
struct ONEXIT73,2109
	pg_on_exit_callback function;75,2125
	Datum		arg;76,2156
static struct ONEXIT on_proc_exit_list[on_proc_exit_list79,2173
static struct ONEXIT on_shmem_exit_list[on_shmem_exit_list80,2227
static struct ONEXIT before_shmem_exit_list[before_shmem_exit_list81,2282
static int	on_proc_exit_index,83,2342
			on_shmem_exit_index,84,2373
			before_shmem_exit_index;85,2397
proc_exit(104,3019
proc_exit_prepare(161,5022
shmem_exit(224,7206
atexit_callback(290,9852
on_proc_exit(305,10285
before_shmem_exit(333,11044
on_shmem_exit(361,11867
cancel_before_shmem_exit(390,12706
on_exit_reset(409,13398

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/ipci.c,243
int			shared_memory_type 50,1409
shmem_startup_hook_type shmem_startup_hook 52,1465
static Size total_addin_request 54,1517
static bool addin_request_allowed 55,1554
RequestAddinShmemSpace(70,2065
CreateSharedMemoryAndSemaphores(94,3057

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/dsm_impl.c,483
const struct config_enum_entry dynamic_shared_memory_options[dynamic_shared_memory_options97,3744
int			dynamic_shared_memory_type;114,4116
#define ZBUFFER_SIZE	117,4201
#define SEGMENT_NAME_PREFIX	119,4231
dsm_impl_op(158,5819
dsm_impl_posix(211,7680
dsm_impl_posix_resize(358,11446
dsm_impl_sysv(412,13199
dsm_impl_windows(599,18551
dsm_impl_mmap(781,23585
dsm_impl_pin_segment(952,27942
dsm_impl_unpin_segment(1002,29347
errcode_for_dynamic_shared_memory(1034,30013

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/procarray.c,4227
#define UINT32_ACCESS_ONCE(67,2605
typedef struct ProcArrayStruct70,2710
	int			numProcs;72,2743
	int			maxProcs;73,2797
	int			maxKnownAssignedXids;78,2894
	int			numKnownAssignedXids;79,2953
	int			tailKnownAssignedXids;80,3015
	int			headKnownAssignedXids;81,3081
	slock_t		known_assigned_xids_lck;82,3146
	TransactionId lastOverflowedXid;91,3537
	TransactionId replication_slot_xmin;94,3615
	TransactionId replication_slot_catalog_xmin;96,3704
	int			pgprocnos[pgprocnos99,3815
} ProcArrayStruct;100,3856
static ProcArrayStruct *procArray;procArray102,3876
static PGPROC *allProcs;allProcs104,3912
static PGXACT *allPgXact;allPgXact105,3937
static TransactionId *KnownAssignedXids;KnownAssignedXids110,4033
static bool *KnownAssignedXidsValid;KnownAssignedXidsValid111,4074
static TransactionId latestObservedXid 112,4111
static TransactionId standbySnapshotPendingXmin;119,4350
static long xc_by_recent_xmin 124,4463
static long xc_by_known_xact 125,4498
static long xc_by_my_xact 126,4532
static long xc_by_latest_xid 127,4563
static long xc_by_main_xid 128,4597
static long xc_by_child_xid 129,4629
static long xc_by_known_assigned 130,4662
static long xc_no_overflow 131,4700
static long xc_slow_answer 132,4732
#define xc_by_recent_xmin_inc(134,4765
#define xc_by_known_xact_inc(135,4820
#define xc_by_my_xact_inc(136,4873
#define xc_by_latest_xid_inc(137,4921
#define xc_by_main_xid_inc(138,4974
#define xc_by_child_xid_inc(139,5023
#define xc_by_known_assigned_inc(140,5074
#define xc_no_overflow_inc(141,5134
#define xc_slow_answer_inc(142,5183
#define xc_by_recent_xmin_inc(147,5303
#define xc_by_known_xact_inc(148,5347
#define xc_by_my_xact_inc(149,5390
#define xc_by_latest_xid_inc(150,5431
#define xc_by_main_xid_inc(151,5474
#define xc_by_child_xid_inc(152,5515
#define xc_by_known_assigned_inc(153,5557
#define xc_no_overflow_inc(154,5603
#define xc_slow_answer_inc(155,5644
ProcArrayShmemSize(183,6938
#define PROCARRAY_MAXPROCS	188,7025
#define TOTAL_MAX_CACHED_SUBXIDS 206,7876
CreateSharedProcArray(225,8272
ProcArrayAdd(276,9687
ProcArrayRemove(334,11545
ProcArrayEndTransaction(397,13436
ProcArrayEndTransactionInternal(451,15046
ProcArrayGroupClearXid(485,16397
ProcArrayClearTransaction(600,19908
ProcArrayInitRecovery(632,20871
ProcArrayApplyRecoveryInfo(663,21994
ProcArrayApplyXidAssignment(902,29464
TransactionIdIsInProgress(986,32545
TransactionIdIsActive(1206,38405
GetOldestXmin(1305,42513
GetMaxSnapshotXidCount(1451,47171
GetMaxSnapshotSubxidCount(1462,47368
GetSnapshotData(1504,49325
ProcArrayInstallImportedXmin(1795,58650
ProcArrayInstallRestoredXmin(1870,60717
GetRunningTransactionData(1936,63065
GetOldestActiveTransactionId(2110,68450
GetOldestSafeDecodingTransactionId(2176,70583
GetVirtualXIDsDelayingChkpt(2272,74184
HaveVirtualXIDsDelayingChkpt(2316,75284
BackendPidGetProc(2362,76229
BackendPidGetProcWithLock(2385,76723
BackendXidGetPid(2422,77628
IsBackendPid(2457,78306
GetCurrentVirtualXIDs(2490,79806
GetConflictingVirtualXIDs(2578,82885
CancelVirtualTransaction(2653,84972
MinimumActiveBackends(2701,86229
CountDBBackends(2755,87891
CountDBConnections(2785,88493
CancelDBBackends(2816,89162
CountUserBackends(2856,90082
CountOtherDBBackends(2906,91849
#define MAXAUTOVACPIDS	2910,91959
TerminateOtherDBBackends(2984,93958
ProcArraySetReplicationSlotXmin(3092,96902
ProcArrayGetReplicationSlotXmin(3114,97465
#define XidCacheRemove(3129,97787
XidCacheRemoveRunningXids(3145,98267
DisplayXidCache(3223,100568
RecordKnownAssignedTransactionIds(3307,104591
ExpireTreeKnownAssignedTransactionIds(3378,106697
ExpireAllKnownAssignedTransactionIds(3403,107363
ExpireOldKnownAssignedTransactionIds(3415,107657
KnownAssignedXidsCompress(3518,112917
KnownAssignedXidsAdd(3580,114741
KnownAssignedXidsSearch(3698,117884
KnownAssignedXidExists(3791,119942
KnownAssignedXidsRemove(3804,120200
KnownAssignedXidsRemoveTree(3830,121046
KnownAssignedXidsRemovePreceding(3852,121553
KnownAssignedXidsGet(3930,123361
KnownAssignedXidsGetAndSetXmin(3944,123754
KnownAssignedXidsGetOldestXmin(4002,125273
KnownAssignedXidsDisplay(4037,126173
KnownAssignedXidsReset(4075,126887

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/signalfuncs.c,337
#define SIGNAL_BACKEND_SUCCESS 43,1268
#define SIGNAL_BACKEND_ERROR 44,1301
#define SIGNAL_BACKEND_NOPERMISSION 45,1332
#define SIGNAL_BACKEND_NOSUPERUSER 46,1370
pg_signal_backend(48,1418
pg_cancel_backend(111,3553
pg_terminate_backend(135,4288
pg_reload_conf(159,4975
pg_rotate_logfile(178,5266
pg_rotate_logfile_v2(206,5953

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/dsm.c,2112
#define PG_DYNSHMEM_CONTROL_MAGIC	46,1484
#define PG_DYNSHMEM_FIXED_SLOTS	48,1531
#define PG_DYNSHMEM_SLOTS_PER_BACKEND	49,1568
#define INVALID_CONTROL_SLOT	51,1609
typedef struct dsm_segment_detach_callback54,1708
	on_dsm_detach_callback function;56,1753
	Datum		arg;57,1787
	slist_node	node;58,1800
} dsm_segment_detach_callback;59,1818
struct dsm_segment62,1913
	dlist_node	node;64,1934
	ResourceOwner resowner;65,1991
	dsm_handle	handle;66,2039
	uint32		control_slot;67,2081
	void	   *impl_private;impl_private68,2135
	void	   *mapped_address;mapped_address69,2203
	Size		mapped_size;70,2273
	slist_head	on_detach;71,2320
typedef struct dsm_control_item75,2438
	dsm_handle	handle;77,2472
	uint32		refcnt;78,2492
	void	   *impl_private_pm_handle;impl_private_pm_handle79,2553
	bool		pinned;80,2616
} dsm_control_item;81,2631
typedef struct dsm_control_header84,2711
	uint32		magic;86,2747
	uint32		nitems;87,2763
	uint32		maxitems;88,2780
	dsm_control_item item[item89,2799
} dsm_control_header;90,2846
static bool dsm_init_done 100,3240
static dlist_head dsm_segment_list 119,4156
static dsm_handle dsm_control_handle;128,4488
static dsm_control_header *dsm_control;dsm_control129,4526
static Size dsm_control_mapped_size 130,4566
static void *dsm_control_impl_private dsm_control_impl_private131,4607
dsm_postmaster_startup(140,4804
dsm_cleanup_using_control_segment(201,6765
dsm_cleanup_for_mmap(279,9424
dsm_postmaster_shutdown(317,10444
dsm_backend_startup(379,12404
dsm_set_control_handle(414,13402
dsm_create(432,14027
dsm_attach(527,17043
dsm_backend_shutdown(612,19640
dsm_detach_all(630,20080
dsm_detach(658,20893
dsm_pin_mapping(759,24466
dsm_unpin_mapping(778,25016
dsm_pin_segment(799,25734
dsm_unpin_segment(831,27060
dsm_find_mapping(913,29828
dsm_segment_address(932,30141
dsm_segment_map_length(942,30293
dsm_segment_handle(960,30924
on_dsm_detach(969,31070
cancel_on_dsm_detach(984,31447
reset_on_dsm_detach(1007,31920
dsm_create_descriptor(1038,32614
dsm_control_segment_sane(1074,33670
dsm_control_bytes_needed(1092,34289

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/shm_mq.c,1524
struct shm_mq70,3277
	slock_t		mq_mutex;72,3293
	PGPROC	   *mq_receiver;mq_receiver73,3313
	PGPROC	   *mq_sender;mq_sender74,3338
	pg_atomic_uint64 mq_bytes_read;75,3361
	pg_atomic_uint64 mq_bytes_written;76,3394
	Size		mq_ring_size;77,3430
	bool		mq_detached;78,3451
	uint8		mq_ring_offset;79,3471
	char		mq_ring[mq_ring80,3495
struct shm_mq_handle130,6308
	shm_mq	   *mqh_queue;mqh_queue132,6331
	dsm_segment *mqh_segment;mqh_segment133,6354
	BackgroundWorkerHandle *mqh_handle;mqh_handle134,6381
	char	   *mqh_buffer;mqh_buffer135,6418
	Size		mqh_buflen;136,6440
	Size		mqh_consume_pending;137,6459
	Size		mqh_partial_bytes;138,6487
	Size		mqh_expected_bytes;139,6513
	bool		mqh_length_word_complete;140,6540
	bool		mqh_counterparty_attached;141,6573
	MemoryContext mqh_context;142,6607
const Size	shm_mq_minimum_size 160,7422
#define MQH_INITIAL_BUFSIZE	163,7511
shm_mq_create(169,7606
shm_mq_set_receiver(198,8359
shm_mq_set_sender(216,8724
shm_mq_get_receiver(234,9052
shm_mq_get_sender(249,9272
shm_mq_attach(282,10446
shm_mq_set_handle(310,11200
shm_mq_send(320,11405
shm_mq_sendv(346,12331
shm_mq_receive(540,18004
shm_mq_wait_for_attach(770,24991
shm_mq_detach(793,25440
shm_mq_detach_internal(825,26615
shm_mq_get_queue(848,27001
shm_mq_send_bytes(857,27139
shm_mq_receive_bytes(1012,31877
shm_mq_counterparty_gone(1112,34767
shm_mq_wait_internal(1151,35967
shm_mq_inc_bytes_read(1203,37021
shm_mq_inc_bytes_written(1236,37945
shm_mq_detach_callback(1256,38516

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/shmqueue.c,230
SHMQueueInit(36,1010
SHMQueueIsDetached(47,1202
SHMQueueElemInit(57,1375
SHMQueueDelete(68,1574
SHMQueueInsertBefore(89,2066
SHMQueueInsertAfter(108,2501
SHMQueueNext(145,3591
SHMQueuePrev(164,4083
SHMQueueEmpty(180,4451

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/barrier.c,215
BarrierInit(100,4572
BarrierArriveAndWait(125,5477
BarrierArriveAndDetach(203,7741
BarrierAttach(214,8035
BarrierDetach(234,8485
BarrierPhase(243,8648
BarrierParticipants(259,9087
BarrierDetachImpl(278,9632

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/pmsignal.c,993
#define PM_CHILD_UNUSED	60,2363
#define PM_CHILD_ASSIGNED	61,2434
#define PM_CHILD_ACTIVE	62,2462
#define PM_CHILD_WALSENDER	63,2489
struct PMSignalData66,2590
	sig_atomic_t PMSignalFlags[PMSignalFlags69,2636
	int			num_child_flags;71,2711
	int			next_child_flag;72,2772
	sig_atomic_t PMChildFlags[PMChildFlags73,2829
NON_EXEC_STATIC volatile PMSignalData *PMSignalState PMSignalState76,2884
volatile sig_atomic_t postmaster_possibly_dead 82,3041
postmaster_death_handler(85,3110
#define POSTMASTER_DEATH_SIGNAL 99,3538
#define POSTMASTER_DEATH_SIGNAL 101,3600
PMSignalShmemSize(113,3848
PMSignalShmemInit(128,4124
SendPostmasterSignal(146,4509
CheckPostmasterSignal(163,4978
AssignPostmasterChildSlot(184,5491
ReleasePostmasterChildSlot(218,6507
IsPostmasterChildWalSender(240,7092
MarkPostmasterChildActive(256,7460
MarkPostmasterChildWalSender(272,7899
MarkPostmasterChildInactive(289,8322
PostmasterIsAliveInternal(309,8968
PostmasterDeathSignalInit(370,10282

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/sinval.c,269
uint64		SharedInvalidMessageCounter;26,652
volatile sig_atomic_t catchupInterruptPending 41,1284
SendSharedInvalidMessages(49,1458
ReceiveSharedInvalidMessages(71,2374
#define MAXINVALMSGS 74,2499
HandleCatchupInterrupt(156,4645
ProcessCatchupInterrupt(176,5077

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/latch.c,1642
#define WAIT_USE_EPOLL70,2552
#define WAIT_USE_KQUEUE72,2602
#define WAIT_USE_POLL74,2651
#define WAIT_USE_WIN3276,2685
struct WaitEventSet82,2793
	int			nevents;84,2815
	int			nevents_space;85,2866
	WaitEvent  *events;events91,3039
	Latch	   *latch;latch99,3324
	int			latch_pos;100,3342
	bool		exit_on_postmaster_death;107,3546
	int			epoll_fd;110,3608
	struct epoll_event *epoll_ret_events;epoll_ret_events112,3699
	int			kqueue_fd;114,3769
	struct kevent *kqueue_ret_events;kqueue_ret_events116,3857
	bool		report_postmaster_not_running;117,3892
	struct pollfd *pollfds;pollfds120,4034
	HANDLE	   *handles;handles128,4259
static volatile sig_atomic_t waiting 134,4381
static int	selfpipe_readfd 137,4471
static int	selfpipe_writefd 138,4504
static int	selfpipe_owner_pid 141,4607
InitializeLatchSupport(168,5549
InitLatch(249,8187
InitSharedLatch(281,9382
OwnLatch(317,10454
DisownLatch(337,10863
WaitLatch(365,12001
WaitLatchOrSocket(390,12941
SetLatch(457,14705
ResetLatch(540,17093
CreateWaitEventSet(563,17752
FreeWaitEventSet(696,21704
AddWaitEventToSet(760,23821
ModifyWaitEvent(838,25712
WaitEventAdjustEpoll(898,27144
WaitEventAdjustPoll(947,28400
#define AccessWaitEvent(986,29358
WaitEventAdjustKqueueAdd(989,29444
WaitEventAdjustKqueueAddPostmaster(1001,29704
WaitEventAdjustKqueue(1016,30100
WaitEventAdjustWin32(1114,33023
WaitEventSetWait(1167,34491
WaitEventSetWaitBlock(1285,38081
WaitEventSetWaitBlock(1413,41609
WaitEventSetWaitBlock(1549,44933
WaitEventSetWaitBlock(1676,48432
latch_sigusr1_handler(1866,53930
sendSelfPipeByte(1876,54110
drainSelfPipe(1915,54969

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/ipc/standby.c,1479
int			vacuum_defer_cleanup_age;39,1150
int			max_standby_archive_delay 40,1182
int			max_standby_streaming_delay 41,1227
static HTAB *RecoveryLockLists;RecoveryLockLists43,1275
typedef struct RecoveryLockListsEntry56,1801
	TransactionId xid;58,1841
	List	   *locks;locks59,1861
} RecoveryLockListsEntry;60,1878
InitRecoveryTransactionEnvironment(75,2502
ShutdownRecoveryTransactionEnvironment(127,4125
GetStandbyLimitTime(156,4914
#define STANDBY_INITIAL_WAIT_US 180,5489
static int	standbyWait_us 181,5527
WaitExceedsMaxStandbyDelay(189,5806
ResolveRecoveryConflictWithVirtualXIDs(229,6941
ResolveRecoveryConflictWithSnapshot(304,8921
ResolveRecoveryConflictWithTablespace(330,9852
ResolveRecoveryConflictWithDatabase(360,10953
ResolveRecoveryConflictWithLock(403,12503
ResolveRecoveryConflictWithBufferPin(483,15315
SendRecoveryConflictWithBufferPin(536,16656
CheckRecoveryConflictDeadlock(564,17813
StandbyDeadLockHandler(596,18840
StandbyTimeoutHandler(607,19174
StandbyLockTimeoutHandler(620,19551
StandbyAcquireAccessExclusiveLock(651,20652
StandbyReleaseLockList(690,21652
StandbyReleaseLocks(714,22304
StandbyReleaseLockTree(738,22878
StandbyReleaseAllLocks(752,23149
StandbyReleaseOldLocks(773,23654
standby_redo(806,24516
LogStandbySnapshot(923,29525
LogCurrentRunningXacts(983,31573
LogAccessExclusiveLocks(1043,33733
LogAccessExclusiveLock(1061,34195
LogAccessExclusiveLockPrepare(1078,34535
LogStandbyInvalidations(1100,35437

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/large_object/inv_api.c,584
bool		lo_compat_privileges;58,2025
static Relation lo_heap_r 67,2420
static Relation lo_index_r 68,2454
open_lo_relation(75,2584
close_lo_relation(99,3217
myLargeObjectExists(132,3847
getdatafield(170,4726
inv_create(212,5672
inv_open(253,6859
inv_close(340,9386
inv_drop(356,9731
inv_getsize(385,10390
inv_seek(433,11598
inv_tell(482,12813
inv_read(495,13042
inv_write(588,15227
		bytea		hdr;604,15566
		char		data[data606,15646
		int32		align_it;608,15727
inv_truncate(785,20391
		bytea		hdr;795,20601
		char		data[data797,20681
		int32		align_it;799,20762

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/lmgr/s_lock.c,602
#define MIN_SPINS_PER_DELAY 56,2500
#define MAX_SPINS_PER_DELAY 57,2531
#define NUM_DELAYS	58,2564
#define MIN_DELAY_USEC	59,2590
#define MAX_DELAY_USEC	60,2620
slock_t		dummy_spinlock;63,2655
static int	spins_per_delay 65,2681
s_lock_stuck(72,2808
s_lock(91,3201
s_unlock(109,3528
perform_spin_delay(124,3731
finish_spin_delay(174,5462
set_spins_per_delay(195,5966
update_spins_per_delay(206,6217
tas_dummy(250,7640
struct test_lock_struct294,8559
	char		pad1;296,8585
	slock_t		lock;297,8598
	char		pad2;298,8614
volatile struct test_lock_struct test_lock;301,8631
main(304,8680

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/lmgr/lwlocknames.h,1590
#define ShmemIndexLock 4,142
#define OidGenLock 5,192
#define XidGenLock 6,238
#define ProcArrayLock 7,284
#define SInvalReadLock 8,333
#define SInvalWriteLock 9,383
#define WALBufMappingLock 10,434
#define WALWriteLock 11,487
#define ControlFileLock 12,535
#define CheckpointLock 13,586
#define XactSLRULock 14,637
#define SubtransSLRULock 15,686
#define MultiXactGenLock 16,739
#define MultiXactOffsetSLRULock 17,792
#define MultiXactMemberSLRULock 18,852
#define RelCacheInitLock 19,912
#define CheckpointerCommLock 20,965
#define TwoPhaseStateLock 21,1022
#define TablespaceCreateLock 22,1076
#define BtreeVacuumLock 23,1133
#define AddinShmemInitLock 24,1185
#define AutovacuumLock 25,1240
#define AutovacuumScheduleLock 26,1291
#define SyncScanLock 27,1350
#define RelationMappingLock 28,1399
#define NotifySLRULock 29,1455
#define NotifyQueueLock 30,1506
#define SerializableXactHashLock 31,1558
#define SerializableFinishedListLock 32,1619
#define SerializablePredicateListLock 33,1684
#define SerialSLRULock 34,1750
#define SyncRepLock 35,1801
#define BackgroundWorkerLock 36,1849
#define DynamicSharedMemoryControlLock 37,1906
#define AutoFileLock 38,1973
#define ReplicationSlotAllocationLock 39,2022
#define ReplicationSlotControlLock 40,2088
#define CommitTsSLRULock 41,2151
#define CommitTsLock 42,2204
#define ReplicationOriginLock 43,2253
#define MultiXactTruncationLock 44,2311
#define OldSnapshotTimeMapLock 45,2371
#define LogicalRepWorkerLock 46,2430
#define XactTruncationLock 47,2487
#define NUM_INDIVIDUAL_LWLOCKS	49,2543

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/lmgr/proc.c,1437
int			DeadlockTimeout 60,1720
int			StatementTimeout 61,1750
int			LockTimeout 62,1778
int			IdleInTransactionSessionTimeout 63,1801
bool		log_lock_waits 64,1844
PGPROC	   *MyProc MyProc67,1941
PGXACT	   *MyPgXact MyPgXact68,1967
NON_EXEC_STATIC slock_t *ProcStructLock ProcStructLock77,2335
PROC_HDR   *ProcGlobal ProcGlobal80,2427
NON_EXEC_STATIC PGPROC *AuxiliaryProcs AuxiliaryProcs81,2458
PGPROC	   *PreparedXactProcs PreparedXactProcs82,2505
static LOCALLOCK *lockAwaited lockAwaited85,2619
static DeadLockState deadlock_state 87,2658
static volatile sig_atomic_t got_deadlock_timeout;90,2752
ProcGlobalShmemSize(102,3056
ProcGlobalSemas(128,3822
InitProcGlobal(163,5278
InitProcess(304,10432
InitProcessPhase2(480,16153
InitAuxiliaryProcess(515,17339
PublishStartupProcessInformation(627,20546
SetStartupBufferPinWaitBufId(645,21077
GetStartupBufferPinWaitBufId(657,21364
HaveNFreeProcs(671,21705
IsWaitingForLock(694,22018
LockErrorCleanup(711,22448
ProcReleaseLocks(787,24720
RemoveProcFromArray(804,25175
ProcKill(815,25422
AuxiliaryProcKill(938,29098
AuxiliaryPidGetProc(985,30256
ProcQueueAlloc(1019,30880
ProcQueueInit(1038,31164
ProcSleep(1062,31830
ProcWakeup(1596,49629
ProcLockWakeup(1632,50554
CheckDeadLock(1691,52133
CheckDeadLockAlert(1777,55150
ProcWaitForSignal(1800,55760
ProcSendSignal(1812,56021
BecomeLockGroupLeader(1850,56982
BecomeLockGroupMember(1880,58011

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/lmgr/predicate.c,5129
#define TargetTagIsCoveredBy(228,9787
#define PredicateLockHashPartition(251,10982
#define PredicateLockHashPartitionLock(253,11074
#define PredicateLockHashPartitionLockByIndex(256,11230
#define NPREDICATELOCKTARGETENTS(259,11350
#define SxactIsOnFinishedList(262,11471
#define SxactIsCommitted(272,11853
#define SxactIsPrepared(273,11932
#define SxactIsRolledBack(274,12009
#define SxactIsDoomed(275,12091
#define SxactIsReadOnly(276,12164
#define SxactHasSummaryConflictIn(277,12242
#define SxactHasSummaryConflictOut(278,12340
#define SxactHasConflictOut(284,12648
#define SxactIsDeferrableWaiting(285,12733
#define SxactIsROSafe(286,12829
#define SxactIsROUnsafe(287,12903
#define SxactIsPartiallyReleased(288,12981
#define PredicateLockTargetTagHashCode(298,13425
#define PredicateLockHashCodeFromTargetHashCode(311,13991
static SlruCtlData SerialSlruCtlData;319,14256
#define SerialSlruCtl	321,14295
#define SERIAL_PAGESIZE	323,14341
#define SERIAL_ENTRYSIZE	324,14374
#define SERIAL_ENTRIESPERPAGE	325,14424
#define SERIAL_MAX_PAGE	330,14574
#define SerialNextPage(332,14644
#define SerialValue(334,14721
#define SerialPage(338,14896
typedef struct SerialControlData340,14964
	int			headPage;342,14999
	TransactionId headXid;343,15047
	TransactionId tailXid;344,15107
}			SerialControlData;345,15176
typedef struct SerialControlData *SerialControl;SerialControl347,15200
static SerialControl serialControl;349,15250
static SERIALIZABLEXACT *OldCommittedSxact;OldCommittedSxact357,15537
int			max_predicate_locks_per_xact;366,15874
int			max_predicate_locks_per_relation;367,15929
int			max_predicate_locks_per_page;368,15988
static PredXactList PredXact;379,16517
static RWConflictPoolHeader RWConflictPool;385,16657
static HTAB *SerializableXidHash;SerializableXidHash391,16808
static HTAB *PredicateLockTargetHash;PredicateLockTargetHash392,16842
static HTAB *PredicateLockHash;PredicateLockHash393,16880
static SHM_QUEUE *FinishedSerializableTransactions;FinishedSerializableTransactions394,16912
static const PREDICATELOCKTARGETTAG ScratchTargetTag 401,17203
static uint32 ScratchTargetTagHash;402,17272
static LWLock *ScratchPartitionLock;ScratchPartitionLock403,17308
static HTAB *LocalPredicateLockHash LocalPredicateLockHash409,17479
static SERIALIZABLEXACT *MySerializableXact MySerializableXact416,17710
static bool MyXactDidWrite 417,17781
static SERIALIZABLEXACT *SavedSerializableXact SavedSerializableXact426,18151
PredicateLockingNeededForRelation(495,21621
SerializationNeededForRead(514,22323
SerializationNeededForWrite(558,23826
CreatePredXact(580,24503
ReleasePredXact(597,24859
FirstPredXact(612,25229
NextPredXact(627,25503
RWConflictExists(653,26111
SetRWConflict(686,26914
SetPossibleUnsafeConflict(712,27727
ReleaseRWConflict(742,28652
FlagSxactUnsafe(750,28856
SerialPagePrecedesLogically(791,29843
SerialInit(814,30385
SerialAdd(852,31427
SerialGetMinConflictCommitSeqNo(923,33382
SerialSetActiveSerXmin(964,34472
CheckPointPredicate(1015,35945
InitPredicateLocks(1080,37861
PredicateLockShmemSize(1285,44614
predicatelock_hash(1347,46644
GetPredicateLockStatusData(1373,47580
SummarizeOldestCommittedSxact(1431,49299
GetSafeSnapshot(1488,51450
GetSafeSnapshotBlockingPids(1558,53607
GetSerializableTransactionSnapshot(1610,55257
SetSerializableTransactionSnapshot(1650,56731
GetSerializableTransactionSnapshotInt(1692,58346
CreateLocalPredicateLockHash(1852,63415
RegisterPredicateLockingXid(1872,64009
PageIsPredicateLocked(1921,65422
PredicateLockExists(1958,66609
GetParentPredicateLockTag(1985,67276
CoarserLockCovers(2024,68335
RemoveScratchTarget(2053,69131
RestoreScratchTarget(2074,69603
RemoveTargetIfNoLongerUsed(2096,70142
DeleteChildTargetLocks(2127,71235
MaxPredicateChildLocks(2212,74079
CheckAndPromotePredicateLockRequest(2249,75006
DecrementParentLocks(2314,76618
CreatePredicateLock(2376,78379
PredicateLockAcquire(2441,80540
PredicateLockRelation(2500,82163
PredicateLockPage(2523,82781
PredicateLockTID(2545,83285
DeleteLockTarget(2593,84522
TransferPredicateLocksToNewTarget(2664,86985
DropAllPredicateLocksFromTable(2881,93546
TransferPredicateLocksToHeapRelation(3077,99249
PredicateLockPageSplit(3098,99946
PredicateLockPageCombine(3183,102470
SetNewSxactGlobalXmin(3205,103351
ReleasePredicateLocks(3263,105310
ReleasePredicateLocksLocal(3656,118321
ClearOldPredicateLocks(3674,118740
ReleaseOneSerializableXact(3831,123984
XidIsConcurrent(3994,128702
CheckForSerializableConflictOutNeeded(4020,129141
CheckForSerializableConflictOut(4052,130443
CheckTargetForConflictsIn(4195,135251
CheckForSerializableConflictIn(4377,140941
CheckTableForSerializableConflictIn(4460,144281
FlagRWConflict(4552,146890
OnConflict_CheckForSerializationFailure(4587,148087
PreCommit_CheckForSerializationFailure(4762,153907
AtPrepare_PredicateLocks(4856,156937
PostPrepare_PredicateLocks(4932,159215
PredicateLockTwoPhaseFinish(4954,159678
predicatelock_twophase_recover(4981,160385
ShareSerializableXact(5117,164819
AttachSerializableXact(5126,164959

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/lmgr/lock.c,3967
int			max_locks_per_xact;54,1512
#define NLOCKENTS(56,1558
static const LOCKMASK LockConflicts[LockConflicts65,1808
static const char *const lock_mode_names[lock_mode_names108,3326
static bool Dummy_trace 122,3576
static const LockMethodData default_lockmethod 125,3617
static const LockMethodData user_lockmethod 136,3825
static const LockMethod LockMethods[LockMethods150,4102
typedef struct TwoPhaseLockRecord158,4267
	LOCKTAG		locktag;160,4303
	LOCKMODE	lockmode;161,4322
} TwoPhaseLockRecord;162,4342
static int	FastPathLocalUseCount 171,4665
static bool IsRelationExtensionLockHeld PG_USED_FOR_ASSERTS_ONLY 186,5368
static bool IsPageLockHeld PG_USED_FOR_ASSERTS_ONLY 198,5894
#define FAST_PATH_BITS_PER_SLOT	201,6003
#define FAST_PATH_LOCKNUMBER_OFFSET	202,6039
#define FAST_PATH_MASK	203,6078
#define FAST_PATH_GET_BITS(204,6142
#define FAST_PATH_BIT_POSITION(206,6254
#define FAST_PATH_SET_LOCKMODE(211,6543
#define FAST_PATH_CLEAR_LOCKMODE(213,6659
#define FAST_PATH_CHECK_LOCKMODE(215,6780
#define EligibleForRelationFastPath(226,7343
#define ConflictsWithRelationFastPath(232,7624
#define FAST_PATH_STRONG_LOCK_HASH_BITS	259,8972
#define FAST_PATH_STRONG_LOCK_HASH_PARTITIONS 260,9017
#define FastPathStrongLockHashPartition(262,9105
	slock_t		mutex;267,9229
	uint32		count[count268,9246
} FastPathStrongRelationLockData;269,9301
static volatile FastPathStrongRelationLockData *FastPathStrongRelationLocks;FastPathStrongRelationLocks271,9336
static HTAB *LockMethodLockHash;LockMethodLockHash280,9610
static HTAB *LockMethodProcLockHash;LockMethodProcLockHash281,9643
static HTAB *LockMethodLocalHash;LockMethodLocalHash282,9680
static LOCALLOCK *StrongLockInProgress;StrongLockInProgress286,9754
static LOCALLOCK *awaitedLock;awaitedLock287,9794
static ResourceOwner awaitedOwner;288,9825
int			Trace_lock_oidmin 310,10552
bool		Trace_locks 311,10599
bool		Trace_userlocks 312,10626
int			Trace_lock_table 313,10657
bool		Debug_deadlocks 314,10685
LOCK_DEBUG_ENABLED(318,10737
LOCK_PRINT(329,11001
PROCLOCK_PRINT(353,11909
#define LOCK_PRINT(364,12275
#define PROCLOCK_PRINT(365,12325
InitLocks(404,14254
GetLocksMethodTable(487,16529
GetLockTagsMethodTable(499,16809
LockTagHashCode(517,17379
proclock_hash(534,18041
ProcLockHashCode(565,19037
DoLockModesConflict(583,19404
LockHeldByMe(598,19737
GetLockMethodLocalHash(623,20379
LockHasWaiters(634,20583
LockAcquire(747,24054
LockAcquireExtended(771,24965
SetupLockInTable(1170,37292
CheckAndSetLockHeld(1352,42905
RemoveLocalLock(1367,43252
LockCheckConflicts(1420,44892
GrantLock(1555,48963
UnGrantLock(1578,49725
CleanUpLock(1635,51524
GrantLockLocal(1689,52977
BeginStrongLockAcquire(1721,53781
FinishStrongLockAcquire(1747,54625
AbortStrongLockAcquire(1757,54801
GrantAwaitedLock(1786,55726
MarkLockClear(1799,56087
WaitOnLock(1814,56429
RemoveFromWaitQueue(1918,59629
LockRelease(1975,61700
LockReleaseAll(2180,67570
LockReleaseSession(2454,76397
LockReleaseCurrentOwner(2484,77263
ReleaseLockIfHeld(2519,78318
LockReassignCurrentOwner(2579,80017
LockReassignOwner(2609,80665
FastPathGrantRelationLock(2655,81758
FastPathUnGrantRelationLock(2692,82697
FastPathTransferRelationLocks(2722,83449
FastPathGetRelationLockEntry(2810,86302
GetLockConflicts(2912,89403
LockRefindAndRelease(3133,95819
AtPrepare_Locks(3230,98649
PostPrepare_Locks(3340,102359
LockShmemSize(3532,108479
GetLockStatusData(3569,109678
GetBlockerStatusData(3753,115827
GetSingleProcBlockerStatusData(3833,118433
GetRunningTransactionLocks(3933,121556
GetLockmodeName(4016,124275
DumpLocks(4030,124687
DumpAllLocks(4072,125496
lock_twophase_recover(4129,127575
lock_twophase_standby_recover(4310,132891
lock_twophase_postcommit(4342,133756
lock_twophase_postabort(4368,134533
VirtualXactLockTableInsert(4392,135500
VirtualXactLockTableCleanup(4415,136075
VirtualXactLock(4462,137200
LockWaiterCount(4558,139775

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/lmgr/lmgr.c,1530
static uint32 speculativeInsertionToken 46,1599
typedef struct XactLockTableWaitInfo55,1859
	XLTW_Oper	oper;57,1898
	Relation	rel;58,1915
	ItemPointer ctid;59,1930
} XactLockTableWaitInfo;60,1949
RelationInitLockInfo(71,2189
SetLocktagRelationOid(89,2652
LockRelationOid(108,3006
ConditionalLockRelationOid(151,4517
UnlockRelationId(184,5166
UnlockRelationOid(199,5443
LockRelation(216,5791
ConditionalLockRelation(247,6535
UnlockRelation(282,7261
CheckRelationLockedByMe(302,7817
LockHasWaitersRelation(345,8770
LockRelationIdForSession(369,9494
UnlockRelationIdForSession(382,9726
LockRelationForExtension(402,10259
ConditionalLockRelationForExtension(420,10689
RelationExtensionLockWaiterCount(437,11121
UnlockRelationForExtension(452,11397
LockPage(470,11794
ConditionalLockPage(489,12209
UnlockPage(505,12538
LockTuple(525,13025
ConditionalLockTuple(545,13509
UnlockTuple(562,13907
XactLockTableInsert(583,14481
XactLockTableDelete(600,14892
XactLockTableWait(624,15687
ConditionalXactLockTableWait(697,17725
SpeculativeInsertionLockAcquire(739,18718
SpeculativeInsertionLockRelease(765,19286
SpeculativeInsertionWait(781,19604
XactLockTableWaitErrorCb(799,19987
WaitForLockersMultiple(863,21979
WaitForLockers(942,23748
LockDatabaseObject(961,24237
UnlockDatabaseObject(982,24636
LockSharedObject(1002,24970
UnlockSharedObject(1023,25361
LockSharedObjectForSession(1044,25785
UnlockSharedObjectForSession(1062,26094
DescribeLockTag(1085,26613
GetLockNameFromTagType(1170,28845

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/lmgr/condition_variable.c,386
static ConditionVariable *cv_sleep_target cv_sleep_target31,1118
static WaitEventSet *cv_wait_event_set cv_wait_event_set34,1198
ConditionVariableInit(40,1294
ConditionVariablePrepareToSleep(61,2055
ConditionVariableSleep(118,4002
ConditionVariableTimedSleep(132,4377
ConditionVariableCancelSleep(239,7923
ConditionVariableSignal(274,8916
ConditionVariableBroadcast(297,9581

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/lmgr/lwlocknames.c,68
const char *const IndividualLWLockNames[IndividualLWLockNames3,80

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/lmgr/deadlock.c,1595
	PGPROC	   *waiter;waiter48,1299
	PGPROC	   *blocker;blocker49,1364
	LOCK	   *lock;lock50,1434
	int			pred;51,1484
	int			link;52,1528
} EDGE;53,1572
	LOCK	   *lock;lock58,1652
	PGPROC	  **procs;procs59,1715
	int			nProcs;60,1780
} WAIT_ORDER;61,1795
	LOCKTAG		locktag;73,2177
	LOCKMODE	lockmode;74,2229
	int			pid;75,2287
} DEADLOCK_INFO;76,2330
static PGPROC **visitedProcs;visitedProcs102,3133
static int	nVisitedProcs;103,3192
static PGPROC **topoProcs;topoProcs106,3248
static int *beforeConstraints;beforeConstraints107,3312
static int *afterConstraints;afterConstraints108,3388
static WAIT_ORDER *waitOrders;waitOrders111,3497
static int	nWaitOrders;112,3573
static PGPROC **waitOrderProcs;waitOrderProcs113,3597
static EDGE *curConstraints;curConstraints116,3723
static int	nCurConstraints;117,3752
static int	maxCurConstraints;118,3780
static EDGE *possibleConstraints;possibleConstraints121,3862
static int	nPossibleConstraints;122,3896
static int	maxPossibleConstraints;123,3929
static DEADLOCK_INFO *deadlockDetails;deadlockDetails124,3964
static int	nDeadlockDetails;125,4003
static PGPROC *blocking_autovacuum_proc blocking_autovacuum_proc128,4094
InitDeadLockChecking(143,4757
DeadLockCheck(217,7708
GetBlockingAutoVacuumPgproc(293,9591
DeadLockCheckRecurse(315,10208
TestConfiguration(381,12158
FindLockCycle(449,14338
FindLockCycleRecurse(460,14604
FindLockCycleRecurseMember(539,16735
ExpandConstraints(808,24654
TopoSort(880,27105
PrintLockQueue(1069,33150
DeadLockReport(1092,33607
RememberSimpleDeadLock(1164,35547

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/lmgr/spin.c,379
#define NUM_EMULATION_SEMAPHORES 37,982
#define NUM_EMULATION_SEMAPHORES 39,1072
PGSemaphore *SpinlockSemaArray;SpinlockSemaArray42,1161
#define NUM_EMULATION_SEMAPHORES 46,1229
SpinlockSemaSize(55,1402
SpinlockSemas(64,1557
SpinlockSemaInit(77,1741
s_check_valid(114,3144
s_init_lock_sema(121,3303
s_unlock_sema(152,3855
s_lock_free_sema(162,4006
tas_sema(170,4175

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/lmgr/lwlock.c,2935
#define LW_FLAG_HAS_WAITERS	99,4299
#define LW_FLAG_RELEASE_OK	100,4348
#define LW_FLAG_LOCKED	101,4396
#define LW_VAL_EXCLUSIVE	103,4442
#define LW_VAL_SHARED	104,4488
#define LW_LOCK_MASK	106,4516
#define LW_SHARED_MASK	108,4639
static const char *const BuiltinTrancheNames[BuiltinTrancheNames130,5549
static const char **LWLockTrancheNames LWLockTrancheNames192,7384
static int	LWLockTrancheNamesAllocated 193,7431
LWLockPadded *MainLWLockArray MainLWLockArray200,7692
#define MAX_SIMUL_LWLOCKS	208,8017
typedef struct LWLockHandle211,8100
	LWLock	   *lock;lock213,8130
	LWLockMode	mode;214,8148
} LWLockHandle;215,8166
static int	num_held_lwlocks 217,8183
static LWLockHandle held_lwlocks[held_lwlocks218,8216
typedef struct NamedLWLockTrancheRequest221,8341
	char		tranche_name[tranche_name223,8384
	int			num_lwlocks;224,8418
} NamedLWLockTrancheRequest;225,8438
static NamedLWLockTrancheRequest *NamedLWLockTrancheRequestArray NamedLWLockTrancheRequestArray227,8468
static int	NamedLWLockTrancheRequestsAllocated 228,8541
int			NamedLWLockTrancheRequests 236,8892
NamedLWLockTranche *NamedLWLockTrancheArray NamedLWLockTrancheArray239,8970
static bool lock_named_request_allowed 241,9023
#define T_NAME(248,9266
typedef struct lwlock_stats_key252,9345
	int			tranche;254,9379
	void	   *instance;instance255,9395
}			lwlock_stats_key;256,9415
typedef struct lwlock_stats258,9438
	lwlock_stats_key key;260,9468
	int			sh_acquire_count;261,9491
	int			ex_acquire_count;262,9516
	int			block_count;263,9541
	int			dequeue_self_count;264,9561
	int			spin_delay_count;265,9588
}			lwlock_stats;266,9613
static HTAB *lwlock_stats_htab;lwlock_stats_htab268,9632
static lwlock_stats lwlock_stats_dummy;269,9664
bool		Trace_lwlocks 273,9730
PRINT_LWDEBUG(276,9779
LOG_LWDEBUG(298,10446
#define PRINT_LWDEBUG(312,10796
#define LOG_LWDEBUG(313,10835
init_lwlock_stats(323,11087
print_lwlock_stats(359,12289
get_lwlock_stats_entry(383,13016
NumLWLocksForNamedTranches(420,13924
LWLockShmemSize(435,14198
CreateLWLocks(468,15160
InitializeLWLocks(515,16481
InitLWLockAccess(583,18654
GetNamedLWLockTranche(599,19066
LWLockNewTrancheId(629,19767
LWLockRegisterTranche(653,20436
RequestNamedLWLockTranche(705,22028
LWLockInitialize(745,23234
LWLockReportWaitStart(763,23733
LWLockReportWaitEnd(772,23911
GetLWTrancheName(781,24037
GetLWLockIdentifier(809,24835
LWLockAttemptLock(826,25281
LWLockWaitListLock(897,27070
LWLockWaitListUnlock(949,28189
LWLockWakeup(962,28477
LWLockQueueSelf(1069,31139
LWLockDequeueSelf(1113,32342
LWLockAcquire(1208,34525
LWLockConditionalAcquire(1380,39732
LWLockAcquireOrWait(1435,41574
LWLockConflictsWithVar(1559,44726
LWLockWaitForVar(1619,46264
LWLockUpdateVar(1758,50036
LWLockRelease(1812,51314
LWLockReleaseClearVar(1885,53044
LWLockReleaseAll(1911,53853
LWLockHeldByMe(1928,54166
LWLockHeldByMeInMode(1946,54450

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/file/sharedfileset.c,289
SharedFileSetInit(49,1715
SharedFileSetAttach(94,2931
SharedFileSetCreate(121,3511
SharedFileSetOpen(150,4244
SharedFileSetDelete(166,4568
SharedFileSetDeleteAll(180,4832
SharedFileSetOnDetach(205,5598
SharedFileSetPath(230,6283
ChooseTablespace(245,6698
SharedFilePath(256,6973

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/file/fd.c,4258
#define PG_FLUSH_DATA_WORKS 102,4322
#define PG_FLUSH_DATA_WORKS 104,4395
#define PG_FLUSH_DATA_WORKS 106,4490
#define NUM_RESERVED_FDS	124,5379
#define FD_MINFREE	133,5779
int			max_files_per_process 141,6097
int			max_safe_fds 154,6719
bool		data_sync_retry 157,6848
#define DO_DB(162,6916
#define DO_DB(169,7037
#define VFD_CLOSED 173,7076
#define FileIsValid(175,7101
#define FileIsNotOpen(178,7210
#define FD_DELETE_AT_CLOSE	181,7325
#define FD_CLOSE_AT_EOXACT	182,7390
#define FD_TEMP_FILE_LIMIT	183,7452
typedef struct vfd185,7523
	int			fd;187,7544
	unsigned short fdstate;188,7598
	ResourceOwner resowner;189,7655
	File		nextFree;190,7716
	File		lruMoreRecently;191,7778
	File		lruLessRecently;192,7842
	off_t		fileSize;193,7866
	char	   *fileName;fileName194,7933
	int			fileFlags;196,8070
	mode_t		fileMode;197,8134
} Vfd;198,8184
static Vfd *VfdCache;VfdCache205,8386
static Size SizeVfdCache 206,8408
static int	nfile 211,8511
static bool have_xact_temporary_files 217,8629
static uint64 temporary_files_size 225,8938
	AllocateDescFile,233,9087
	AllocateDescPipe,234,9106
	AllocateDescDir,235,9125
	AllocateDescRawFD236,9143
} AllocateDescKind;237,9162
	AllocateDescKind kind;241,9200
	SubTransactionId create_subid;242,9224
		FILE	   *file;file245,9266
		DIR		   *dir;dir246,9283
		int			fd;247,9299
	}			desc;248,9311
} AllocateDesc;249,9322
static int	numAllocatedDescs 251,9339
static int	maxAllocatedDescs 252,9373
static AllocateDesc *allocatedDescs allocatedDescs253,9407
static int	numExternalFDs 258,9531
static long tempFileCounter 264,9683
static Oid *tempTableSpaces tempTableSpaces272,9961
static int	numTempTableSpaces 273,9997
static int	nextTempTableSpace 274,10033
pg_fsync(345,12587
pg_fsync_no_writethrough(400,14297
pg_fsync_writethrough(412,14427
pg_fdatasync(435,14827
pg_flush_data(455,15142
fsync_fname(632,19941
durable_rename(658,20936
durable_unlink(748,23164
durable_rename_excl(785,24028
InitFileAccess(825,25001
count_usable_fds(858,26028
set_max_safe_fds(942,27867
BasicOpenFile(985,29098
BasicOpenFilePerm(1007,30120
AcquireExternalFD(1047,31207
ReserveExternalFD(1082,32491
ReleaseExternalFD(1100,32939
_dump_lru(1110,33051
Delete(1129,33495
LruDelete(1148,33860
Insert(1174,34431
LruInsert(1196,34890
ReleaseLruFile(1243,35694
ReleaseLruFiles(1265,36221
AllocateVfd(1275,36369
FreeVfd(1333,37688
FileAccess(1353,38092
ReportTemporaryFileUsage(1389,38817
RegisterTemporaryFile(1408,39271
FileInvalidate(1423,39647
PathNameOpenFile(1436,39872
PathNameOpenFilePerm(1449,40256
PathNameCreateTemporaryDir(1513,41908
PathNameDeleteTemporaryDir(1544,42702
OpenTemporaryFile(1577,43986
TempTablespacePath(1630,45544
OpenTemporaryFileInTablespace(1655,46224
PathNameCreateTemporaryFile(1712,48093
PathNameOpenTemporaryFile(1750,49096
PathNameDeleteTemporaryFile(1780,49714
FileClose(1826,50697
FilePrefetch(1922,53128
FileWriteback(1950,53770
FileRead(1973,54272
FileWrite(2029,55419
FileSync(2127,57713
FileSize(2148,58105
FileTruncate(2165,58370
FilePathName(2200,59224
FileGetRawDesc(2216,59640
FileGetRawFlags(2226,59792
FileGetRawMode(2236,59963
reserveAllocatedDesc(2247,60202
AllocateFile(2322,62916
OpenTransientFile(2372,64067
OpenTransientFilePerm(2381,64275
OpenPipeStream(2425,65546
FreeDesc(2482,66854
FreeFile(2521,67659
CloseTransientFile(2549,68340
AllocateDir(2583,69426
ReadDir(2649,71198
ReadDirExtended(2664,71713
FreeDir(2701,72581
ClosePipeStream(2731,73227
closeAllVfds(2760,73988
SetTempTablespaces(2789,74705
TempTablespacesAreSet(2817,75556
GetTempTablespaces(2832,75986
GetNextTempTableSpace(2850,76363
AtEOSubXact_Files(2871,76874
AtEOXact_Files(2904,77777
AtProcExit_Files(2918,78082
CleanupTempFiles(2936,78713
RemovePgTempFiles(3006,80952
RemovePgTempFilesInDir(3065,82920
RemovePgTempRelationFiles(3131,84470
RemovePgTempRelationFilesInDbspace(3159,85188
looks_like_temp_rel_name(3187,85828
SyncDataDirectory(3257,87806
walkdir(3331,90082
pre_sync_fname(3396,91561
datadir_fsync_fname(3431,92256
unlink_if_exists_fname(3441,92502
fsync_fname_ext(3466,93123
fsync_parent_path(3542,95051
MakePGDirectory(3582,96416
data_sync_elevel(3605,97449

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/file/buffile.c,1043
#define MAX_PHYSICAL_FILESIZE	58,2355
#define BUFFILE_SEG_SIZE	59,2396
struct BufFile66,2630
	int			numFiles;68,2647
	File	   *files;files70,2778
	bool		isInterXact;72,2841
	bool		dirty;73,2896
	bool		readOnly;74,2950
	SharedFileSet *fileset;fileset76,3011
	const char *name;name77,3077
	ResourceOwner resowner;84,3352
	int			curFile;90,3532
	off_t		curOffset;91,3593
	int			pos;92,3646
	int			nbytes;93,3701
	PGAlignedBlock buffer;94,3757
makeBufFileCommon(109,4196
makeBufFile(130,4637
extendBufFile(147,4926
BufFileCreateTemp(184,5948
SharedSegmentName(213,6739
MakeNewSharedSegment(222,6947
BufFileCreateShared(258,8207
BufFileOpenShared(280,8868
BufFileDeleteShared(343,10497
BufFileExportShared(373,11181
BufFileClose(391,11539
BufFileLoadBuffer(413,12032
BufFileDumpBuffer(459,13047
BufFileRead(539,15057
BufFileWrite(582,15874
BufFileFlush(626,16715
BufFileSeek(646,17212
BufFileTell(729,19197
BufFileSeekBlock(747,19751
BufFileTellBlock(762,20093
BufFileSize(780,20420
BufFileAppend(819,21814

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/file/reinit.c,229
	char		oid[oid33,848
} unlogged_relation_entry;34,874
ResetUnloggedRelations(46,1205
ResetUnloggedRelationsInTablespaceDir(102,2607
ResetUnloggedRelationsInDbspaceDir(149,3918
parse_filename_for_nontemp_relation(374,10708

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/file/copydir.c,134
copydir(37,924
copy_file(127,3128
#define COPY_BUF_SIZE 137,3323
#define FLUSH_DISTANCE 146,3637
#define FLUSH_DISTANCE 148,3685

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/smgr/smgr.c,1344
typedef struct f_smgr39,1299
	void		(*smgr_init)smgr_init41,1323
	void		(*smgr_shutdown)smgr_shutdown42,1369
	void		(*smgr_open)smgr_open43,1419
	void		(*smgr_close)smgr_close44,1460
	void		(*smgr_create)smgr_create45,1522
	bool		(*smgr_exists)smgr_exists47,1606
	void		(*smgr_unlink)smgr_unlink48,1669
	void		(*smgr_extend)smgr_extend50,1760
	bool		(*smgr_prefetch)smgr_prefetch52,1883
	void		(*smgr_read)smgr_read54,1980
	void		(*smgr_write)smgr_write56,2086
	void		(*smgr_writeback)smgr_writeback58,2210
	BlockNumber (*smgr_nblocks)smgr_nblocks60,2330
	void		(*smgr_truncate)smgr_truncate61,2400
	void		(*smgr_immedsync)smgr_immedsync63,2496
} f_smgr;64,2562
static const f_smgr smgrsw[smgrsw66,2573
static const int NSmgr 87,3046
static HTAB *SMgrRelationHash SMgrRelationHash93,3253
static dlist_head unowned_relns;95,3292
smgrinit(110,3713
smgrshutdown(128,3980
smgropen(145,4285
smgrsetowner(198,5703
smgrclearowner(227,6530
smgrexists(247,6984
smgrclose(256,7171
smgrcloseall(286,7847
smgrclosenode(310,8418
smgrcreate(333,8927
smgrdosyncall(348,9424
smgrdounlinkall(384,10195
smgrextend(462,12412
smgrprefetch(477,12865
smgrread(491,13312
smgrwrite(513,14083
smgrwriteback(526,14389
smgrnblocks(538,14686
smgrtruncate(554,15213
smgrimmedsync(620,17864
AtEOXact_SMgr(638,18524

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/smgr/md.c,1082
typedef struct _MdfdVec82,3487
	File		mdfd_vfd;84,3513
	BlockNumber mdfd_segno;85,3562
} MdfdVec;86,3617
static MemoryContext MdCxt;88,3629
#define INIT_MD_FILETAG(92,3757
#define EXTENSION_FAIL	104,4060
#define EXTENSION_RETURN_NULL	106,4136
#define EXTENSION_CREATE	108,4212
#define EXTENSION_CREATE_RECOVERY	110,4300
#define EXTENSION_DONT_CHECK_SIZE	118,4657
mdinit(148,5821
mdexists(161,6080
mdcreate(178,6474
mdunlink(277,10453
mdunlinkfork(290,10753
mdextend(387,13217
mdopenfork(451,15281
mdopen(494,16132
mdclose(505,16370
mdprefetch(528,16858
mdwriteback(556,17601
mdread(605,18874
mdwrite(670,20945
mdnblocks(735,22936
mdtruncate(790,24769
mdimmedsync(892,27931
register_dirty_segment(945,29493
register_unlink_segment(971,30238
register_forget_request(988,30672
ForgetDatabaseSyncRequests(1002,30999
DropRelationFiles(1020,31355
_fdvec_resize(1052,31955
_mdfd_segpath(1090,32852
_mdfd_openseg(1113,33268
_mdfd_getseg(1158,34298
_mdnblocks(1283,38143
mdsyncfiletag(1304,38720
mdunlinkfiletag(1351,39765
mdfiletagmatches(1370,40204

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/buffer/freelist.c,1010
#define INT_ACCESS_ONCE(23,600
	slock_t		buffer_strategy_lock;32,777
	pg_atomic_uint32 nextVictimBuffer;39,1032
	int			firstFreeBuffer;41,1069
	int			lastFreeBuffer;42,1130
	uint32		completePasses;53,1428
	pg_atomic_uint32 numBufferAllocs;54,1494
	int			bgwprocno;60,1677
} BufferStrategyControl;61,1695
static BufferStrategyControl *StrategyControl StrategyControl64,1752
typedef struct BufferAccessStrategyData71,2001
	BufferAccessStrategyType btype;74,2072
	int			ring_size;76,2150
	int			current;82,2284
	bool		current_was_in_ring;88,2402
	Buffer		buffers[buffers96,2666
}			BufferAccessStrategyData;97,2707
ClockSweepTick(113,3171
have_free_buffer(180,5091
StrategyGetBuffer(201,5662
StrategyFreeBuffer(364,10896
StrategySyncStart(395,11882
StrategyNotifyBgWriter(432,13001
StrategyShmemSize(454,13646
StrategyInitialize(475,14208
GetAccessStrategy(542,16024
FreeAccessStrategy(597,17446
GetBufferFromRing(611,17772
AddBufferToRing(669,19542
StrategyRejectBuffer(686,20158

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/buffer/bufmgr.c,3828
#define BufHdrGetBlock(60,1657
#define BufferGetLSN(61,1750
#define LocalBufHdrGetBlock(64,1886
#define BUF_WRITTEN	68,2019
#define BUF_REUSABLE	69,2047
#define RELS_BSEARCH_THRESHOLD	71,2076
typedef struct PrivateRefCountEntry73,2112
	Buffer		buffer;75,2150
	int32		refcount;76,2167
} PrivateRefCountEntry;77,2185
#define REFCOUNT_ARRAY_ENTRIES 80,2275
typedef struct CkptTsStatus86,2414
	Oid			tsId;89,2473
	float8		progress;98,2818
	float8		progress_slice;99,2837
	int			num_to_scan;102,2924
	int			num_scanned;104,2994
	int			index;107,3074
} CkptTsStatus;108,3088
typedef struct SMgrSortArray117,3322
	RelFileNode rnode;119,3353
	SMgrRelation srel;120,3411
} SMgrSortArray;121,3431
bool		zero_damaged_pages 124,3469
int			bgwriter_lru_maxpages 125,3503
double		bgwriter_lru_multiplier 126,3538
bool		track_io_timing 127,3577
int			effective_io_concurrency 135,3875
int			maintenance_io_concurrency 142,4136
int			checkpoint_flush_after 148,4310
int			bgwriter_flush_after 149,4344
int			backend_flush_after 150,4376
static BufferDesc *InProgressBuf InProgressBuf153,4466
static bool IsForInput;154,4507
static BufferDesc *PinCountWaitBuf PinCountWaitBuf157,4575
static struct PrivateRefCountEntry PrivateRefCountArray[PrivateRefCountArray189,6098
static HTAB *PrivateRefCountHash PrivateRefCountHash190,6179
static int32 PrivateRefCountOverflowed 191,6220
static uint32 PrivateRefCountClock 192,6264
static PrivateRefCountEntry *ReservedRefCountEntry ReservedRefCountEntry193,6304
ReservePrivateRefCountEntry(207,6933
NewPrivateRefCountEntry(273,8415
GetPrivateRefCountEntry(299,9070
GetPrivateRefCount(379,10776
ForgetPrivateRefCountEntry(402,11287
#define BufferIsPinned(440,12174
PrefetchSharedBuffer(488,13958
PrefetchBuffer(575,17210
ReadBuffer(607,18055
ReadBufferExtended(653,20151
ReadBufferWithoutRelcache(695,21427
ReadBuffer_common(716,21955
BufferAlloc(1006,31303
InvalidateBuffer(1371,42857
MarkBufferDirty(1469,45682
ReleaseAndReadBuffer(1532,47371
PinBuffer(1590,49385
PinBuffer_Locked(1693,52459
UnpinBuffer(1738,53719
BufferSync(1831,56466
BgBufferSync(2108,64517
SyncOneBuffer(2411,74261
AtEOXact_Buffers(2478,76051
InitBufferPoolAccess(2500,76662
InitBufferPoolBackend(2524,77413
AtProcExit_Buffers(2534,77622
CheckForBufferLeaks(2553,78048
PrintBufferLeakWarning(2594,78802
CheckPointBuffers(2637,79851
BufmgrCommit(2654,80330
BufferGetBlockNumber(2668,80605
BufferGetTag(2689,81027
FlushBuffer(2728,82325
RelationGetNumberOfBlocksInFork(2855,86394
BufferIsPermanent(2901,87529
BufferGetLSNAtomic(2931,88474
DropRelFileNodeBuffers(2982,90484
DropRelFileNodesAllBuffers(3051,92683
DropDatabaseBuffers(3154,95261
PrintBufferDescs(3192,96124
PrintPinnedBufs(3215,96641
FlushRelationBuffers(3259,98099
FlushRelationsAllBuffers(3351,100624
FlushDatabaseBuffers(3455,103297
FlushOneBuffer(3498,104272
ReleaseBuffer(3518,104665
UnlockReleaseBuffer(3541,105145
IncrBufferRefCount(3556,105499
MarkBufferDirtyHint(3588,106432
UnlockBuffers(3729,111515
LockBuffer(3757,112042
ConditionalLockBuffer(3783,112769
LockBufferForCleanup(3814,113947
HoldingBufferPinThatDelaysRecovery(3925,117083
ConditionalLockBufferForCleanup(3951,117779
IsBufferCleanupOK(4007,119135
WaitIO(4061,120298
StartBufferIO(4108,121700
TerminateBufferIO(4175,123580
AbortBufferIO(4207,124414
shared_buffer_write_error_callback(4260,125819
local_buffer_write_error_callback(4279,126282
rnode_comparator(4298,126683
LockBufHdr(4325,127183
WaitBufHdrUnlocked(4353,127866
buffertag_comparator(4377,128262
ckpt_buforder_comparator(4408,128901
ts_ckpt_progress_comparator(4442,129700
WritebackContextInit(4465,130367
ScheduleBufferTagForWriteback(4477,130623
IssuePendingWritebacks(4511,131521
TestForOldSnapshot_impl(4585,133354

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/buffer/localbuf.c,734
	BufferTag	key;33,867
	int			id;34,910
} LocalBufferLookupEnt;35,962
#define LocalBufHdrGetBlock(38,1056
int			NLocBuffer 41,1146
BufferDesc *LocalBufferDescriptors LocalBufferDescriptors43,1206
Block	   *LocalBufferBlockPointers LocalBufferBlockPointers44,1249
int32	   *LocalRefCount LocalRefCount45,1292
static int	nextFreeLocalBuf 47,1325
static HTAB *LocalBufHash LocalBufHash49,1359
PrefetchLocalBuffer(64,1684
LocalBufferAlloc(109,2918
MarkLocalBufferDirty(286,7508
DropRelFileNodeLocalBuffers(326,8492
DropRelFileNodeAllLocalBuffers(373,9867
InitLocalBuffers(416,11158
GetLocalBufferStorage(494,13753
CheckForLocalBufferLeaks(549,15373
AtEOXact_LocalBuffers(578,15837
AtProcExit_LocalBuffers(589,16065

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/buffer/buf_table.c,267
	BufferTag	key;30,952
	int			id;31,995
} BufferLookupEnt;32,1036
static HTAB *SharedBufHash;SharedBufHash34,1056
BufTableShmemSize(42,1215
InitBufTable(52,1440
BufTableHashCode(79,2212
BufTableLookup(91,2488
BufTableInsert(119,3109
BufTableDelete(149,3780

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/buffer/buf_init.c,325
BufferDescPadded *BufferDescriptors;BufferDescriptors20,522
char	   *BufferBlocks;BufferBlocks21,559
LWLockMinimallyPadded *BufferIOLWLockArray BufferIOLWLockArray22,582
WritebackContext BackendWritebackContext;23,633
CkptSortItem *CkptBufferIds;CkptBufferIds24,675
InitBufferPool(67,2050
BufferShmemSize(157,4440

/home/seinoyu/pgsql/master/postgresql/src/backend/foreign/foreign.c,920
GetForeignDataWrapper(35,935
GetForeignDataWrapperExtended(47,1234
GetForeignDataWrapperByName(94,2350
GetForeignServer(109,2652
GetForeignServerExtended(121,2935
GetForeignServerByName(180,4402
GetUserMapping(198,4792
GetForeignTable(248,5917
GetForeignColumnOptions(286,6742
GetFdwRoutine(319,7425
GetForeignServerIdByRelId(340,7890
GetFdwRoutineByServerId(362,8451
GetFdwRoutineByRelId(404,9770
GetFdwRoutineForRelation(427,10549
IsImportableForeignTable(467,11736
deflist_to_tuplestore(506,12495
pg_options_to_table(570,14163
struct ConnectionOption584,14448
	const char *optname;optname586,14474
	Oid			optcontext;587,14496
static const struct ConnectionOption libpq_conninfo_options[libpq_conninfo_options595,14690
is_conninfo_option(620,15492
postgresql_fdw_validator(644,16294
get_foreign_data_wrapper_oid(691,17410
get_foreign_server_oid(714,17981
GetExistingLocalJoinPath(751,19461

/home/seinoyu/pgsql/master/postgresql/src/backend/bootstrap/bootstrap.c,1500
uint32		bootstrap_data_checksum_version 53,1505
#define ALLOC(56,1570
AuxProcType MyAuxProcType 72,2014
Relation	boot_reldesc;74,2090
Form_pg_attribute attrtypes[attrtypes76,2149
int			numattr;77,2218
struct typinfo89,2663
	char		name[name91,2680
	Oid			oid;92,2706
	Oid			elem;93,2718
	int16		len;94,2731
	bool		byval;95,2744
	char		align;96,2758
	char		storage;97,2772
	Oid			collation;98,2788
	Oid			inproc;99,2806
	Oid			outproc;100,2821
static const struct typinfo TypInfo[TypInfo103,2841
static const int n_types 156,5662
struct typmap158,5732
	Oid			am_oid;160,5768
	FormData_pg_type am_typ;161,5783
static struct typmap **Typ Typ164,5813
static struct typmap *Ap Ap165,5848
static Datum values[values167,5882
static bool Nulls[Nulls168,5949
static MemoryContext nogc 170,5978
typedef struct _IndexList178,6261
	Oid			il_heap;180,6289
	Oid			il_ind;181,6305
	IndexInfo  *il_info;il_info182,6320
	struct _IndexList *il_next;il_next183,6342
} IndexList;184,6371
static IndexList *ILHead ILHead186,6385
AuxiliaryProcessMain(198,6670
CheckerModeMain(480,13829
BootstrapModeMain(493,14139
bootstrap_signals(549,15337
ShutdownAuxiliaryProcess(572,16114
boot_openrel(589,16505
closerel(658,18175
DefineAttr(695,18912
InsertOneTuple(802,22008
InsertOneValue(830,22569
InsertOneNull(868,23437
cleanup(886,23914
gettype(904,24474
boot_get_type_io_data(970,26149
AllocateAttribute(1044,27964
index_register(1062,28625
build_indices(1112,30011

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/walsender.c,3461
#define MAX_SEND_SIZE 106,4280
WalSndCtlData *WalSndCtl WalSndCtl109,4362
WalSnd	   *MyWalSnd MyWalSnd112,4437
bool		am_walsender 115,4485
bool		am_cascading_walsender 116,4545
bool		am_db_walsender 118,4642
int			max_wal_senders 121,4750
int			wal_sender_timeout 123,4839
bool		log_replication_commands 125,4939
bool		wake_wal_senders 130,5020
static XLogReaderState *xlogreader xlogreader137,5237
static TimeLineID sendTimeLine 145,5583
static TimeLineID sendTimeLineNextTLI 146,5619
static bool sendTimeLineIsHistoric 147,5662
static XLogRecPtr sendTimeLineValidUpto 148,5706
static XLogRecPtr sentPtr 154,5913
static StringInfoData output_message;157,6025
static StringInfoData reply_message;158,6063
static StringInfoData tmpbuf;159,6100
static TimestampTz last_processing 162,6178
static TimestampTz last_reply_timestamp 168,6365
static bool waiting_for_ping_response 171,6486
static bool streamingDoneSending;179,6845
static bool streamingDoneReceiving;180,6879
static bool WalSndCaughtUp 183,6940
static volatile sig_atomic_t got_SIGUSR2 186,7043
static volatile sig_atomic_t got_STOPPING 187,7093
static volatile sig_atomic_t replication_active 195,7411
static LogicalDecodingContext *logical_decoding_ctx logical_decoding_ctx197,7469
	XLogRecPtr	lsn;202,7619
	TimestampTz time;203,7636
} WalTimeSample;204,7655
#define LAG_TRACKER_BUFFER_SIZE 207,7719
	XLogRecPtr	last_lsn;212,7822
	WalTimeSample buffer[buffer213,7844
	int			write_head;214,7892
	int			read_heads[read_heads215,7911
	WalTimeSample last_read[last_read216,7954
} LagTracker;217,8004
static LagTracker *lag_tracker;lag_tracker219,8019
typedef void (*WalSndSendDataCallback)WalSndSendDataCallback225,8163
static void WalSndShutdown(229,8350
WalSndErrorCleanup(295,11191
WalSndResourceCleanup(330,11970
WalSndShutdown(358,12693
IdentifySystem(375,13025
SendTimeLineHistory(464,15363
StartReplication(570,18282
logical_read_xlog_page(814,25688
parseCreateReplSlotOptions(868,27415
CreateReplicationSlot(921,28846
DropReplicationSlot(1123,34885
StartLogicalReplication(1137,35217
WalSndPrepareWrite(1237,38102
WalSndWriteData(1264,38884
WalSndUpdateProgress(1353,41192
#define WALSND_LOGICAL_LAG_TRACK_INTERVAL_MS	1362,41503
WalSndWaitForWal(1379,42008
exec_replication_command(1519,45825
ProcessRepliesIfAny(1692,50738
ProcessStandbyMessage(1796,53135
PhysicalConfirmReceivedLocation(1827,53661
ProcessStandbyReplyMessage(1859,54428
PhysicalReplicationSlotNewXmin(1964,57393
TransactionIdInRecentPast(2013,58867
ProcessStandbyHSFeedbackMessage(2044,59454
WalSndComputeSleeptime(2167,63813
WalSndCheckTimeOut(2217,65520
WalSndLoop(2244,66213
InitWalSenderSlot(2370,69874
WalSndKill(2430,71261
WalSndSegmentOpen(2448,71668
XLogSendPhysical(2526,74141
XLogSendLogical(2827,83508
WalSndDone(2907,85815
GetStandbyFlushRecPtr(2950,86984
WalSndRqstFileReload(2980,87664
HandleWalSndInitStopping(3003,88038
WalSndLastCycleHandler(3025,88618
WalSndSignals(3037,88784
WalSndShmemSize(3056,89450
WalSndShmemInit(3068,89686
WalSndWakeup(3100,90296
WalSndInitStopping(3129,90911
WalSndWaitStopping(3155,91441
WalSndSetState(3193,92125
WalSndGetStateString(3212,92496
offset_to_interval(3231,92849
pg_stat_get_wal_senders(3247,93130
#define PG_STAT_GET_WAL_SENDERS_COLS	3249,93174
WalSndKeepalive(3440,98646
WalSndKeepaliveIfNecessary(3459,99176
LagTrackerWrite(3498,100248
LagTrackerRead(3563,102427

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/slotfuncs.c,717
check_permissions(29,731
create_physical_replication_slot(46,1265
pg_create_physical_replication_slot(74,1979
create_logical_replication_slot(126,3234
pg_create_logical_replication_slot(175,4829
pg_drop_replication_slot(220,5889
pg_get_replication_slots(237,6170
#define PG_GET_REPLICATION_SLOTS_COLS 239,6215
pg_physical_replication_slot_advance(455,12819
pg_logical_replication_slot_advance(492,13996
pg_replication_slot_advance(606,17215
copy_replication_slot(700,20050
pg_copy_logical_replication_slot_a(921,27322
pg_copy_logical_replication_slot_b(927,27431
pg_copy_logical_replication_slot_c(933,27540
pg_copy_physical_replication_slot_a(939,27649
pg_copy_physical_replication_slot_b(945,27760

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/backup_manifest.c,227
IsManifestEnabled(33,963
#define AppendToManifest(41,1126
InitializeBackupManifest(56,1548
AddFileToBackupManifest(81,2321
AddWALInfoToBackupManifest(189,5523
SendBackupManifest(286,8290
AppendStringToManifest(365,10859

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/logical/reorderbuffer.c,4235
typedef struct ReorderBufferTXNByIdEnt113,5163
	TransactionId xid;115,5204
	ReorderBufferTXN *txn;txn116,5224
} ReorderBufferTXNByIdEnt;117,5248
typedef struct ReorderBufferTupleCidKey120,5346
	RelFileNode relnode;122,5388
	ItemPointerData tid;123,5410
} ReorderBufferTupleCidKey;124,5432
typedef struct ReorderBufferTupleCidEnt126,5461
	ReorderBufferTupleCidKey key;128,5503
	CommandId	cmin;129,5534
	CommandId	cmax;130,5551
	CommandId	combocid;131,5568
} ReorderBufferTupleCidEnt;132,5615
typedef struct TXNEntryFile135,5700
	File		vfd;137,5730
	off_t		curOffset;138,5777
} TXNEntryFile;140,5876
typedef struct ReorderBufferIterTXNEntry143,5950
	XLogRecPtr	lsn;145,5993
	ReorderBufferChange *change;change146,6010
	ReorderBufferTXN *txn;txn147,6040
	TXNEntryFile file;148,6064
	XLogSegNo	segno;149,6084
} ReorderBufferIterTXNEntry;150,6102
typedef struct ReorderBufferIterTXNState152,6132
	binaryheap *heap;heap154,6175
	Size		nr_txns;155,6194
	dlist_head	old_change;156,6210
	ReorderBufferIterTXNEntry entries[entries157,6234
} ReorderBufferIterTXNState;158,6293
typedef struct ReorderBufferToastEnt161,6350
	Oid			chunk_id;163,6389
	int32		last_chunk_seq;164,6434
	Size		num_chunks;166,6528
	Size		size;167,6590
	dlist_head	chunks;168,6640
	struct varlena *reconstructed;reconstructed169,6690
} ReorderBufferToastEnt;171,6789
typedef struct ReorderBufferDiskChange174,6863
	Size		size;176,6904
	ReorderBufferChange change;177,6917
} ReorderBufferDiskChange;179,6966
int			logical_decoding_work_mem;193,7469
static const Size max_changes_in_memory 194,7502
ReorderBufferAllocate(272,11061
ReorderBufferFree(339,12877
ReorderBufferGetTXN(357,13321
ReorderBufferReturnTXN(377,13675
ReorderBufferGetChange(407,14238
ReorderBufferReturnChange(422,14531
ReorderBufferGetTupleBuf(483,16257
ReorderBufferReturnTupleBuf(504,16731
ReorderBufferGetRelids(519,17269
ReorderBufferReturnRelids(535,17522
ReorderBufferTXNByXid(547,17893
ReorderBufferQueueChange(630,19615
ReorderBufferQueueMessage(656,20266
AssertTXNLsnOrder(715,21731
ReorderBufferGetOldestTXN(771,23348
ReorderBufferGetOldestXmin(799,24072
ReorderBufferSetRestartPoint(814,24402
ReorderBufferAssignChild(826,24650
ReorderBufferTransferSnapToParent(892,26638
ReorderBufferCommitChild(946,28214
ReorderBufferIterCompare(988,29297
ReorderBufferIterTXNInit(1011,30059
ReorderBufferIterTXNNext(1133,33197
ReorderBufferIterTXNFinish(1219,35572
ReorderBufferCleanupTXN(1250,36317
ReorderBufferBuildTupleCidHash(1342,38721
ReorderBufferCopySnap(1420,40813
ReorderBufferFreeSnap(1479,42343
ReorderBufferCommit(1501,43059
ReorderBufferAbort(1923,55418
ReorderBufferAbortOld(1949,56061
ReorderBufferForget(1992,57480
ReorderBufferImmediateInvalidation(2028,58554
ReorderBufferProcessXid(2064,59796
ReorderBufferAddSnapshot(2077,60224
ReorderBufferSetBaseSnapshot(2095,60695
ReorderBufferAddNewCommandId(2126,61541
ReorderBufferChangeMemoryUpdate(2142,62007
ReorderBufferAddNewTupleCids(2181,62880
ReorderBufferAddInvalidations(2214,63969
ReorderBufferExecuteInvalidations(2258,65182
ReorderBufferXidSetCatalogChanges(2270,65440
ReorderBufferXidHasCatalogChanges(2294,66157
ReorderBufferXidHasBaseSnapshot(2311,66535
ReorderBufferSerializeReserve(2341,67217
ReorderBufferLargestTXN(2367,68098
ReorderBufferCheckMemoryLimit(2401,69082
ReorderBufferSerializeTXN(2444,70376
ReorderBufferSerializeChange(2522,72273
ReorderBufferChangeSize(2720,77556
ReorderBufferRestoreChanges(2798,79226
ReorderBufferRestoreChange(2939,83239
ReorderBufferRestoreCleanup(3092,87760
ReorderBufferCleanupSerializedTXNs(3122,88585
ReorderBufferSerializedPath(3161,89650
StartupReorderBuffer(3179,90152
ReorderBufferToastInitHash(3213,90968
ReorderBufferToastAppendChunk(3234,91559
ReorderBufferToastReplace(3320,94348
ReorderBufferToastReset(3502,99323
typedef struct RewriteMappingFile3565,101383
	XLogRecPtr	lsn;3567,101419
	char		fname[fname3568,101436
} RewriteMappingFile;3569,101461
DisplayMapping(3573,101512
ApplyLogicalMappingFile(3601,102216
TransactionIdInArray(3699,104717
file_sort_by_lsn(3709,104968
UpdateLogicalMappings(3726,105364
ResolveCminCmaxDuringDecoding(3804,107372

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/logical/decode.c,614
typedef struct XLogRecordBuffer46,1685
	XLogRecPtr	origptr;48,1719
	XLogRecPtr	endptr;49,1740
	XLogReaderState *record;record50,1760
} XLogRecordBuffer;51,1786
LogicalDecodingProcessRecord(94,4008
DecodeXLogOp(183,6014
DecodeXactOp(225,7020
DecodeStandbyOp(335,10016
DecodeHeap2Op(381,11399
DecodeHeapOp(441,12947
FilterByOrigin(524,15414
DecodeLogicalMsgOp(536,15698
DecodeCommit(587,17267
DecodeAbort(660,20031
DecodeInsert(680,20495
DecodeUpdate(737,22195
DecodeDelete(803,23955
DecodeTruncate(858,25470
DecodeMultiInsert(896,26707
DecodeSpecConfirm(1002,29654
DecodeXLogTuple(1037,30725

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/logical/relation.c,903
static MemoryContext LogicalRepRelMapContext 33,883
static HTAB *LogicalRepRelMap LogicalRepRelMap35,937
static HTAB *LogicalRepTypMap LogicalRepTypMap36,975
static MemoryContext LogicalRepPartMapContext 49,1541
static HTAB *LogicalRepPartMap LogicalRepPartMap50,1595
typedef struct LogicalRepPartMapEntry51,1634
	Oid			partoid;53,1674
	LogicalRepRelMapEntry relmapentry;54,1721
} LogicalRepPartMapEntry;55,1757
logicalrep_relmap_invalidate_cb(61,1865
logicalrep_relmap_init(102,2675
logicalrep_relmap_free_entry(140,3749
logicalrep_relmap_update(172,4408
logicalrep_rel_att_by_name(217,5756
logicalrep_rel_open(237,6151
logicalrep_rel_close(399,10924
logicalrep_typmap_free_entry(409,11117
logicalrep_typmap_update(419,11298
logicalrep_typmap_gettypname(453,12200
logicalrep_partmap_invalidate_cb(507,13654
logicalrep_partmap_init(548,14469
logicalrep_partition_open(582,15468

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/logical/proto.c,916
#define LOGICALREP_IS_REPLICA_IDENTITY 26,620
#define TRUNCATE_CASCADE	28,662
#define TRUNCATE_RESTART_SEQS	29,695
logicalrep_write_begin(45,1239
logicalrep_read_begin(59,1523
logicalrep_write_commit(74,1901
logicalrep_read_commit(94,2316
logicalrep_write_origin(112,2755
logicalrep_read_origin(128,3044
logicalrep_write_insert(141,3276
logicalrep_read_insert(158,3676
logicalrep_write_update(180,4059
logicalrep_read_update(209,4889
logicalrep_write_delete(250,5712
logicalrep_read_delete(275,6407
logicalrep_write_truncate(297,6840
logicalrep_read_truncate(324,7347
logicalrep_write_rel(349,7865
logicalrep_read_rel(374,8483
logicalrep_write_typ(399,9026
logicalrep_read_typ(426,9681
logicalrep_write_tuple(439,10016
logicalrep_read_tuple(527,12280
logicalrep_write_attrs(593,13937
logicalrep_read_attrs(652,15334
logicalrep_write_namespace(694,16251
logicalrep_read_namespace(714,16653

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/logical/tablesync.c,605
static bool table_states_valid 106,3918
StringInfo	copybuf 108,3959
pg_attribute_noreturn(114,4050
wait_for_relation_state_change(154,5080
wait_for_worker_state_change(207,6400
invalidate_syncing_table_states(256,7529
process_syncing_tables_for_sync(270,7909
process_syncing_tables_for_apply(320,9668
	struct tablesync_start_time_mapping322,9727
		Oid			relid;324,9767
		TimestampTz last_start_time;325,9782
process_syncing_tables(529,15034
make_copy_attnamelist(541,15308
copy_read_data(561,15710
fetch_remote_table_info(636,17279
copy_table(745,20759
LogicalRepSyncTableStart(816,22838

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/logical/logical.c,1011
typedef struct LogicalErrorCallbackState45,1706
	LogicalDecodingContext *ctx;ctx47,1749
	const char *callback_name;callback_name48,1779
	XLogRecPtr	report_location;49,1807
} LogicalErrorCallbackState;50,1836
CheckLogicalDecodingRequirements(75,2990
StartupDecodingContext(118,4361
CreateInitDecodingContext(230,8200
CreateDecodingContext(376,13283
DecodingContextReady(459,16152
DecodingContextFindStartpoint(468,16376
FreeDecodingContext(511,17462
OutputPluginPrepareWrite(526,17798
OutputPluginWrite(539,18160
OutputPluginUpdateProgress(552,18504
LoadOutputPlugin(565,18816
output_plugin_error_callback(587,19552
startup_cb_wrapper(607,20280
shutdown_cb_wrapper(634,21032
begin_cb_wrapper(666,21849
commit_cb_wrapper(696,22677
change_cb_wrapper(727,23618
truncate_cb_wrapper(764,24745
filter_by_origin_cb_wrapper(804,25947
message_cb_wrapper(834,26738
LogicalIncreaseXminForSlot(878,28163
LogicalIncreaseRestartDecodingForSlot(935,29682
LogicalConfirmReceivedLocation(1012,32097

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/logical/worker.c,1780
#define NAPTIME_PER_CYCLE 84,2612
typedef struct FlushPosition86,2685
	dlist_node	node;88,2716
	XLogRecPtr	local_end;89,2734
	XLogRecPtr	remote_end;90,2757
} FlushPosition;91,2781
static dlist_head lsn_mapping 93,2799
typedef struct SlotErrCallbackArg95,2864
	LogicalRepRelMapEntry *rel;rel97,2900
	int			local_attnum;98,2929
	int			remote_attnum;99,2950
} SlotErrCallbackArg;100,2972
static MemoryContext ApplyMessageContext 102,2995
MemoryContext ApplyContext 103,3044
WalReceiverConn *wrconn wrconn105,3080
Subscription *MySubscription MySubscription107,3113
bool		MySubscriptionValid 108,3150
bool		in_remote_transaction 110,3186
static XLogRecPtr remote_final_lsn 111,3223
should_apply_changes_for_rel(153,5021
ensure_transaction(169,5429
create_estate_for_relation(198,5972
slot_fill_defaults(236,6975
slot_store_error_callback(292,8461
slot_store_data(327,9496
slot_modify_data(442,12898
apply_handle_begin(549,16016
apply_handle_commit(568,16344
apply_handle_origin(612,17402
apply_handle_relation(634,18040
apply_handle_type(649,18304
GetRelationIdentityOrPK(663,18561
apply_handle_insert(680,18794
apply_handle_insert_internal(741,20526
check_relation_updatable(758,20906
apply_handle_update(792,21855
apply_handle_update_internal(884,24651
apply_handle_delete(944,26134
apply_handle_delete_internal(1006,27826
FindReplTupleInLocalRel(1051,29019
apply_handle_tuple_routing(1080,29773
apply_handle_truncate(1311,36709
apply_dispatch(1419,39398
get_flush_position(1482,40837
store_flush_position(1526,41812
UpdateWorkerStats(1545,42282
LogicalRepApplyLoop(1561,42660
send_feedback(1791,48075
maybe_reread_subscription(1880,50503
subscription_change_cb(1977,53101
ApplyWorkerMain(1984,53257
IsLogicalWorker(2162,58654

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/logical/snapbuild.c,2210
struct SnapBuild147,6438
	SnapBuildState state;150,6518
	MemoryContext context;153,6613
	TransactionId xmin;156,6697
	TransactionId xmax;159,6772
	XLogRecPtr	start_decoding_at;165,6953
	TransactionId initial_xmin_horizon;171,7135
	bool		building_full_snapshot;174,7244
	Snapshot	snapshot;179,7357
	XLogRecPtr	last_serialized_snapshot;184,7463
	ReorderBuffer *reorder;reorder189,7580
		TransactionId was_xmin;203,7951
		TransactionId was_xmax;204,7977
		size_t		was_xcnt;206,8004
		size_t		was_xcnt_space;207,8057
		TransactionId *was_xip;was_xip208,8111
	}			was_running;209,8185
		size_t		xcnt;218,8366
		size_t		xcnt_space;221,8434
		bool		includes_all_transactions;228,8673
		TransactionId *xip;xip244,9339
	}			committed;245,9361
static ResourceOwner SavedResourceOwnerDuringExport 252,9544
static bool ExportInProgress 253,9604
SnapBuildNextPhaseAt(280,10597
SnapBuildStartNextPhaseAt(294,10941
AllocateSnapshotBuilder(310,11385
FreeSnapshotBuilder(351,12526
SnapBuildFreeSnapshot(370,12981
SnapBuildCurrentState(395,13620
SnapBuildXactNeedsSkip(404,13769
SnapBuildSnapIncRefcount(416,14054
SnapBuildSnapDecRefcount(428,14340
SnapBuildBuildSnapshot(460,15241
SnapBuildInitialSnapshot(539,18003
SnapBuildExportSnapshot(631,20596
SnapBuildGetOrBuildSnapshot(671,21655
SnapBuildClearExportedSnapshot(692,22256
SnapBuildProcessChange(715,22870
SnapBuildProcessNewCid(765,24361
SnapBuildDistributeNewCatalogSnapshot(807,25743
SnapBuildAddCommittedTxn(853,27230
SnapBuildPurgeCommittedTxn(882,28249
SnapBuildCommitTxn(923,29375
SnapBuildProcessRunningXacts(1090,34104
SnapBuildFindSnapshot(1192,37824
SnapBuildWaitSnapshot(1384,45127
typedef struct SnapBuildOnDisk1431,46360
	uint32		magic;1436,46495
	pg_crc32c	checksum;1437,46511
	uint32		version;1442,46620
	uint32		length;1444,46710
	SnapBuild	builder;1447,46758
} SnapBuildOnDisk;1450,46828
#define SnapBuildOnDiskConstantSize 1452,46848
#define SnapBuildOnDiskNotChecksummedSize 1454,46922
#define SNAPBUILD_MAGIC 1457,47003
#define SNAPBUILD_VERSION 1458,47038
SnapBuildSerializationPoint(1467,47306
SnapBuildSerialize(1480,47635
SnapBuildRestore(1689,54105
CheckPointSnapBuild(1932,61277

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/logical/origin.c,2229
typedef struct ReplicationState100,4127
	RepOriginId roident;105,4212
	XLogRecPtr	remote_lsn;110,4300
	XLogRecPtr	local_lsn;117,4493
	int			acquired_by;122,4581
	ConditionVariable origin_cv;127,4676
	LWLock		lock;132,4762
} ReplicationState;133,4777
typedef struct ReplicationStateOnDisk138,4845
	RepOriginId roident;140,4885
	XLogRecPtr	remote_lsn;141,4907
} ReplicationStateOnDisk;142,4931
typedef struct ReplicationStateCtl145,4959
	int			tranche_id;148,5041
	ReplicationState states[states150,5105
} ReplicationStateCtl;151,5154
RepOriginId replorigin_session_origin 154,5203
XLogRecPtr	replorigin_session_origin_lsn 155,5286
TimestampTz replorigin_session_origin_timestamp 156,5348
static ReplicationState *replication_states;replication_states165,5604
static ReplicationStateCtl *replication_states_ctl;replication_states_ctl170,5731
static ReplicationState *session_replication_state session_replication_state177,5981
#define REPLICATION_STATE_MAGIC 180,6072
replorigin_check_prerequisites(183,6139
replorigin_by_name(209,6995
replorigin_create(240,7655
replorigin_drop(332,10157
replorigin_by_oid(432,12653
ReplicationOriginShmemSize(473,13578
ReplicationOriginShmemInit(493,14080
CheckPointReplicationOrigin(540,15689
StartupReplicationOrigin(666,18992
replorigin_redo(794,22262
replorigin_advance(855,23987
replorigin_get_progress(978,27436
ReplicationOriginExitCleanup(1019,28244
replorigin_session_setup(1051,29136
replorigin_session_reset(1139,31494
replorigin_session_advance(1168,32183
replorigin_session_get_progress(1186,32867
pg_replication_origin_create(1218,33715
pg_replication_origin_drop(1255,34684
pg_replication_origin_oid(1278,35088
pg_replication_origin_session_setup(1299,35486
pg_replication_origin_session_reset(1321,35914
pg_replication_origin_session_is_setup(1338,36283
pg_replication_origin_session_progress(1354,36771
pg_replication_origin_xact_setup(1375,37275
pg_replication_origin_xact_reset(1393,37722
pg_replication_origin_advance(1405,37946
pg_replication_origin_progress(1440,39069
pg_show_replication_origin_status(1465,39591
#define REPLICATION_ORIGIN_PROGRESS_COLS 1473,39823
#undef REPLICATION_ORIGIN_PROGRESS_COLS1558,42266

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/logical/message.c,52
LogLogicalMessage(46,1536
logicalmsg_redo(80,2379

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/logical/logicalfuncs.c,594
typedef struct DecodingOutputState43,1083
	Tuplestorestate *tupstore;tupstore45,1120
	TupleDesc	tupdesc;46,1148
	bool		binary_output;47,1168
	int64		returned_rows;48,1190
} DecodingOutputState;49,1213
LogicalOutputPrepareWrite(55,1295
LogicalOutputWrite(65,1510
check_permissions(99,2482
pg_logical_slot_get_changes_guts(111,2806
pg_logical_slot_get_changes(363,10133
pg_logical_slot_peek_changes(372,10332
pg_logical_slot_get_binary_changes(381,10535
pg_logical_slot_peek_binary_changes(390,10742
pg_logical_emit_message_bytea(400,10941
pg_logical_emit_message_text(413,11280

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/logical/launcher.c,1818
#define DEFAULT_NAPTIME_PER_CYCLE 52,1560
int			max_logical_replication_workers 54,1603
int			max_sync_workers_per_subscription 55,1646
LogicalRepWorker *MyLogicalRepWorker MyLogicalRepWorker57,1692
typedef struct LogicalRepCtxStruct59,1738
	pid_t		launcher_pid;62,1802
	LogicalRepWorker workers[workers65,1852
} LogicalRepCtxStruct;66,1902
LogicalRepCtxStruct *LogicalRepCtx;LogicalRepCtx68,1926
typedef struct LogicalRepWorkerId70,1963
	Oid			subid;72,1999
	Oid			relid;73,2013
} LogicalRepWorkerId;74,2027
typedef struct StopWorkersData76,2050
	int			nestDepth;78,2083
	List	   *workers;workers79,2135
	struct StopWorkersData *parent;parent80,2188
} StopWorkersData;82,2291
static StopWorkersData *on_commit_stop_workers on_commit_stop_workers88,2438
static bool on_commit_launcher_wakeup 96,2763
get_subscription_list(108,3023
WaitForReplicationWorkerAttach(173,4963
logicalrep_worker_find(231,6348
logicalrep_workers_find(259,6949
logicalrep_worker_launch(282,7436
logicalrep_worker_stop(452,12280
logicalrep_worker_stop_at_commit(549,14463
logicalrep_worker_wakeup(594,15703
logicalrep_worker_wakeup_ptr(614,16129
logicalrep_worker_attach(625,16307
logicalrep_worker_detach(661,17258
logicalrep_worker_cleanup(675,17510
logicalrep_launcher_onexit(693,17922
logicalrep_worker_onexit(704,18098
logicalrep_sync_worker_count(720,18404
ApplyLauncherShmemSize(744,18876
ApplyLauncherRegister(763,19285
ApplyLauncherShmemInit(792,20050
XactManipulatesLogicalReplicationWorkers(823,20711
AtEOXact_ApplyLauncher(832,20864
AtEOSubXact_ApplyLauncher(874,21787
ApplyLauncherWakeupAtCommit(929,23281
ApplyLauncherWakeup(936,23401
ApplyLauncherMain(946,23574
IsLogicalLauncher(1062,26431
pg_stat_get_subscription(1071,26562
#define PG_STAT_GET_SUBSCRIPTION_COLS	1073,26607

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/walreceiverfuncs.c,365
WalRcvData *WalRcv WalRcv32,826
#define WALRCV_STARTUP_TIMEOUT 38,966
WalRcvShmemSize(42,1065
WalRcvShmemInit(53,1238
WalRcvRunning(72,1621
WalRcvStreaming(117,2594
ShutdownWalRcv(163,3628
RequestXLogStreaming(229,5299
GetWalRcvFlushRecPtr(315,7779
GetWalRcvWriteRecPtr(336,8299
GetReplicationApplyDelay(348,8518
GetReplicationTransferLatency(385,9283

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/syncrep.c,898
char	   *SyncRepStandbyNames;SyncRepStandbyNames90,4015
#define SyncStandbysDefined(92,4046
static bool announce_next_takeover 95,4144
SyncRepConfigData *SyncRepConfig SyncRepConfig97,4188
static int	SyncRepWaitMode 98,4229
SyncRepWaitForLSN(148,6137
SyncRepQueueInsert(328,11731
SyncRepCancelWait(361,12573
SyncRepCleanupAtProcExit(371,12819
SyncRepInitConfig(400,13583
SyncRepReleaseWaiters(429,14374
SyncRepGetSyncRecPtr(541,17970
SyncRepGetOldestSyncRecPtr(615,19930
SyncRepGetNthLatestSyncRecPtr(648,20830
cmp_lsn(693,22157
SyncRepGetCandidateStandbys(714,22679
standby_priority_comparator(793,24630
SyncRepGetStandbyPriority(820,25613
SyncRepWakeQueue(867,26774
SyncRepUpdateSyncStandbysDefined(936,28630
SyncRepQueueIsOrderedByLSN(972,29652
check_synchronous_standby_names(1012,30537
assign_synchronous_standby_names(1069,32110
assign_synchronous_commit(1075,32232

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/libpqwalreceiver/libpqwalreceiver.c,856
PG_MODULE_MAGIC;36,911
struct WalReceiverConn40,952
	PGconn	   *streamConn;streamConn43,1026
	bool		logical;45,1115
	char	   *recvBuf;recvBuf47,1172
static WalReceiverFunctionsType PQWalReceiverFunctions 84,2749
_PG_init(111,3456
libpqrcv_connect(124,3787
libpqrcv_check_conninfo(225,6169
libpqrcv_get_conninfo(244,6589
libpqrcv_get_senderinfo(292,7730
libpqrcv_identify_system(316,8243
libpqrcv_server_version(356,9351
libpqrcv_startstreaming(372,9910
libpqrcv_endstreaming(462,12339
libpqrcv_readtimelinehistoryfile(534,14474
libpqrcv_PQexec(589,16062
libpqrcv_PQgetResult(638,17423
libpqrcv_disconnect(683,18394
libpqrcv_receive(708,19027
libpqrcv_send(795,21105
libpqrcv_create_slot(810,21535
libpqrcv_get_backend_pid(875,22976
libpqrcv_processTuples(884,23133
libpqrcv_exec(959,25303
stringlist_to_identifierstr(1024,26828

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/walreceiver.c,1179
int			wal_receiver_status_interval;88,3408
int			wal_receiver_timeout;89,3444
bool		hot_standby_feedback;90,3472
static WalReceiverConn *wrconn wrconn93,3535
WalReceiverFunctionsType *WalReceiverFunctions WalReceiverFunctions94,3574
#define NAPTIME_PER_CYCLE 96,3630
static int	recvFile 103,3887
static TimeLineID recvFileTLI 104,3913
static XLogSegNo recvSegNo 105,3948
static volatile sig_atomic_t got_SIGHUP 111,4077
static volatile sig_atomic_t got_SIGTERM 112,4126
	XLogRecPtr	Write;120,4289
	XLogRecPtr	Flush;121,4357
}			LogstreamResult;122,4421
static StringInfoData reply_message;124,4443
static StringInfoData incoming_message;125,4480
ProcessWalRcvInterrupts(157,6002
WalReceiverMain(178,6524
WalRcvWaitForStartPosition(646,20702
WalRcvFetchTimeLineHistoryFiles(727,22766
WalRcvDie(774,23913
WalRcvSigHupHandler(805,24841
WalRcvShutdownHandler(813,24964
XLogWalRcvProcessMsg(829,25198
XLogWalRcvWrite(896,27029
XLogWalRcvFlush(1001,29708
XLogWalRcvSendReply(1060,31384
XLogWalRcvSendHSFeedback(1129,33760
ProcessWalSndrMessage(1245,37131
WalRcvForceReply(1298,38700
WalRcvGetStateString(1316,39128
pg_stat_get_wal_receiver(1341,39633

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/basebackup.c,1681
	const char *label;label50,1324
	bool		progress;51,1344
	bool		fastcheckpoint;52,1361
	bool		nowait;53,1384
	bool		includewal;54,1399
	uint32		maxrate;55,1418
	bool		sendtblspcmapfile;56,1436
	backup_manifest_option manifest;57,1462
	pg_checksum_type manifest_checksum_type;58,1496
} basebackup_options;59,1538
static bool backup_started_in_recovery 88,3147
static char *statrelpath statrelpath91,3250
#define TAR_SEND_SIZE 96,3356
#define THROTTLING_FREQUENCY	101,3467
static uint64 throttling_sample;104,3568
static int64 throttling_counter;107,3667
static TimeOffset elapsed_min_unit;110,3770
static TimestampTz throttled_last;113,3850
static XLogRecPtr startptr;116,3939
static long long int total_checksum_failures;119,4028
static bool noverify_checksums 122,4106
static int64 backup_total 128,4252
static int64 backup_streamed 131,4329
struct exclude_list_item139,4640
	const char *name;name141,4667
	bool		match_prefix;142,4686
static const char *const excludeDirContents[excludeDirContents153,5030
static const struct exclude_list_item excludeFiles[excludeFiles194,6021
static const struct exclude_list_item noChecksumFiles[noChecksumFiles238,7177
perform_base_backup(256,7631
compareWalFileNames(740,21724
parse_basebackup_options(752,21972
SendBaseBackup(922,26707
send_int8_string(943,27077
SendBackupHeader(953,27266
SendXlogRecPtrResult(1031,29069
sendFileWithContent(1086,30458
sendTablespace(1143,31938
sendDir(1196,33454
is_checksummed_file(1517,42664
sendFile(1563,43854
_tarWriteHeader(1815,50905
_tarWriteDir(1858,51914
throttle(1878,52456
update_basebackup_progress(1952,54321
basebackup_read_file(1989,55316

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/slot.c,1689
typedef struct ReplicationSlotOnDisk56,1896
	uint32		magic;61,2037
	pg_crc32c	checksum;62,2053
	uint32		version;65,2107
	uint32		length;66,2125
	ReplicationSlotPersistentData slotdata;73,2243
} ReplicationSlotOnDisk;74,2284
#define ReplicationSlotOnDiskConstantSize 77,2349
#define SnapBuildOnDiskNotChecksummedSize 80,2499
#define SnapBuildOnDiskChecksummedSize 83,2632
#define ReplicationSlotOnDiskV2Size 86,2794
#define SLOT_MAGIC	89,2900
#define SLOT_VERSION	90,2954
ReplicationSlotCtlData *ReplicationSlotCtl ReplicationSlotCtl93,3059
ReplicationSlot *MyReplicationSlot MyReplicationSlot96,3174
int			max_replication_slots 99,3229
ReplicationSlotsShmemSize(117,3927
ReplicationSlotsShmemInit(135,4270
ReplicationSlotValidateName(175,5292
ReplicationSlotCreate(222,6391
SearchNamedReplicationSlot(335,10267
ReplicationSlotAcquire(367,11107
ReplicationSlotAcquireInternal(381,11497
ReplicationSlotRelease(476,14113
ReplicationSlotCleanup(531,15604
ReplicationSlotDrop(569,16379
ReplicationSlotDropAcquired(582,16655
ReplicationSlotDropPtr(599,16992
ReplicationSlotSave(697,20240
ReplicationSlotMarkDirty(715,20708
ReplicationSlotPersist(732,21108
ReplicationSlotsComputeRequiredXmin(754,21596
ReplicationSlotsComputeRequiredLSN(804,23082
ReplicationSlotsComputeLogicalRestartLSN(847,24247
ReplicationSlotsCountDBSlots(899,25453
ReplicationSlotsDropDBSlots(955,26920
CheckSlotRequirements(1031,28891
ReplicationSlotReserveWal(1056,29581
InvalidateObsoleteReplicationSlots(1133,31966
CheckPointReplicationSlots(1249,35344
StartupReplicationSlots(1284,36404
CreateSlotOnDisk(1344,38048
SaveSlotToPath(1405,39905
RestoreSlotFromDisk(1559,43636

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/pgoutput/pgoutput.c,926
PG_MODULE_MAGIC;31,819
static bool publications_valid;51,1684
typedef struct RelationSyncEntry64,2146
	Oid			relid;66,2181
	bool		schema_sent;72,2342
	bool		replicate_valid;74,2363
	PublicationActions pubactions;75,2387
	Oid			publish_as_relid;83,2656
	TupleConversionMap *map;map91,2943
} RelationSyncEntry;92,2969
static HTAB *RelationSyncCache RelationSyncCache95,3050
_PG_output_plugin_init(107,3439
parse_output_parameters(121,3853
pgoutput_startup(194,5793
pgoutput_begin_txn(256,7732
pgoutput_commit_txn(292,8615
maybe_send_schema(307,8986
send_relation_and_attrs(338,9883
pgoutput_change(375,10919
pgoutput_truncate(492,14234
pgoutput_origin_filter(551,15585
pgoutput_shutdown(564,15892
LoadPublications(577,16115
publication_invalidation_cb(597,16439
init_rel_sync_cache(616,17051
get_rel_sync_entry(654,18222
rel_sync_cache_relation_cb(783,21732
rel_sync_cache_publication_cb(821,22976

/home/seinoyu/pgsql/master/postgresql/src/backend/rewrite/rewriteHandler.c,1140
typedef struct rewrite_event47,1481
	Oid			relation;49,1512
	CmdType		event;50,1565
} rewrite_event;51,1615
typedef struct acquireLocksOnSubLinks_context53,1633
	bool		for_execute;55,1681
} acquireLocksOnSubLinks_context;56,1745
AcquireRewriteLocks(133,5617
acquireLocksOnSubLinks(295,10063
rewriteRuleAction(336,11209
adjustJoinTreeList(639,21728
rewriteTargetListIU(716,24937
process_matched_tle(941,31703
get_assignment_input(1094,36436
build_column_default(1123,36950
searchForDefault(1205,39102
rewriteValuesRTE(1263,41508
rewriteTargetListUD(1446,46573
matchLocks(1521,48588
ApplyRetrieveRule(1587,50023
markQueryForLocking(1770,56543
fireRIRonSubLink(1830,58389
fireRIRrules(1861,59167
CopyAndAddInvertedQual(2136,67322
fireRules(2206,69862
get_view_query(2297,72286
view_has_instead_trigger(2330,73088
view_col_is_auto_updatable(2368,74131
view_query_is_auto_updatable(2416,75947
view_cols_are_auto_updatable(2564,81794
relation_is_updatable(2647,84854
#define ALL_EVENTS 2656,85039
adjust_view_column_set(2828,90136
rewriteTargetView(2898,92037
RewriteQuery(3453,111248
QueryRewrite(3927,126646

/home/seinoyu/pgsql/master/postgresql/src/backend/rewrite/rewriteSupport.c,85
IsDefinedRewriteRule(33,764
SetRelationRuleStatus(54,1443
get_rewrite_oid(93,2448

/home/seinoyu/pgsql/master/postgresql/src/backend/rewrite/rewriteRemove.c,30
RemoveRewriteRuleById(39,978

/home/seinoyu/pgsql/master/postgresql/src/backend/rewrite/rowsecurity.c,421
row_security_policy_hook_type row_security_policy_hook_permissive 96,3739
row_security_policy_hook_type row_security_policy_hook_restrictive 97,3813
get_row_security_policies(108,4228
get_policies_for_relation(408,14315
sort_policies_by_name(524,17567
row_security_policy_cmp(533,17741
add_security_quals(559,18613
add_with_check_options(655,21627
#define QUAL_FOR_WCO(667,21921
check_role_for_policy(776,25074

/home/seinoyu/pgsql/master/postgresql/src/backend/rewrite/rewriteManip.c,2163
	int			sublevels_up;29,711
} contain_aggs_of_level_context;30,732
	int			agg_location;34,783
	int			sublevels_up;35,804
} locate_agg_of_level_context;36,825
	int			win_location;40,874
} locate_windowfunc_context;41,895
contain_aggs_of_level(67,1959
contain_aggs_of_level_walker(84,2379
locate_agg_of_level(131,3832
locate_agg_of_level_walker(151,4335
contain_windowfuncs(197,5537
contain_windowfuncs_walker(210,5850
locate_windowfunc(235,6761
locate_windowfunc_walker(254,7210
checkExprHasSubLink(277,7793
checkExprHasSubLink_walker(290,8125
contains_multiexpr_param(306,8565
	int			offset;335,9486
	int			sublevels_up;336,9501
} OffsetVarNodes_context;337,9522
OffsetVarNodes_walker(340,9561
OffsetVarNodes(425,11562
offset_relid_set(473,12824
	int			rt_index;499,13662
	int			new_index;500,13679
	int			sublevels_up;501,13697
} ChangeVarNodes_context;502,13718
ChangeVarNodes_walker(505,13757
ChangeVarNodes(610,16400
adjust_relid_set(664,17870
	int			delta_sublevels_up;698,19167
	int			min_sublevels_up;699,19194
} IncrementVarSublevelsUp_context;700,19219
IncrementVarSublevelsUp_walker(703,19267
IncrementVarSublevelsUp(776,21166
IncrementVarSublevelsUp_rtable(799,21803
	int			rt_index;821,22341
	int			sublevels_up;822,22358
} rangeTableEntry_used_context;823,22379
rangeTableEntry_used_walker(826,22424
rangeTableEntry_used(892,23993
getInsertSelectQuery(924,25040
AddQual(979,26829
AddInvertedQual(1047,28910
replace_rte_variables(1087,30365
replace_rte_variables_mutator(1134,31686
	int			target_varno;1225,34872
	int			sublevels_up;1226,34923
	const AttrMap *attno_map;attno_map1227,34974
	Oid			to_rowtype;1228,35033
	bool	   *found_whole_row;found_whole_row1229,35094
} map_variable_attnos_context;1230,35139
map_variable_attnos_mutator(1233,35185
map_variable_attnos(1356,38885
	RangeTblEntry *target_rte;target_rte1403,40352
	List	   *targetlist;targetlist1404,40380
	ReplaceVarsNoMatchOption nomatch_option;1405,40402
	int			nomatch_varno;1406,40444
} ReplaceVarsFromTargetList_context;1407,40466
ReplaceVarsFromTargetList_callback(1410,40518
ReplaceVarsFromTargetList(1514,43989

/home/seinoyu/pgsql/master/postgresql/src/backend/rewrite/rewriteDefine.c,303
InsertRule(59,1660
DefineRule(199,5648
DefineQueryRewrite(233,6408
checkRuleResultList(657,20712
setRuleCheckAsUser(789,25896
setRuleCheckAsUser_walker(795,26006
setRuleCheckAsUser_Query(809,26302
EnableDisableRule(846,27130
RangeVarCallbackForRenameRule(911,28969
RenameRewriteRule(947,30058

/home/seinoyu/pgsql/master/postgresql/src/backend/tcop/postgres.c,2893
const char *debug_query_string;debug_query_string88,2174
CommandDest whereToSendOutput 91,2321
bool		Log_disconnections 94,2403
int			log_statement 96,2438
int			max_stack_depth 99,2542
int			PostAuthDelay 102,2625
static long max_stack_depth_bytes 112,2783
char	   *stack_base_ptr stack_base_ptr120,3101
char	   *register_stack_base_ptr register_stack_base_ptr126,3243
static bool xact_started 133,3437
static bool DoingCommandRead 140,3656
static bool doing_extended_query_message 146,3808
static bool ignore_till_sync 147,3858
static CachedPlanSource *unnamed_stmt_psrc unnamed_stmt_psrc154,4091
static const char *userDoption userDoption157,4180
static bool EchoQuery 158,4235
static bool UseSemiNewlineNewline 159,4282
static bool RecoveryConflictPending 162,4416
static bool RecoveryConflictRetryable 163,4461
static ProcSignalReason RecoveryConflictReason;164,4507
static MemoryContext row_description_context 167,4615
static StringInfoData row_description_buf;168,4668
InteractiveBackend(212,6300
interactive_getc(300,8212
SocketBackend(328,8857
ReadCommand(505,13830
ProcessClientReadInterrupt(526,14308
ProcessClientWriteInterrupt(572,15533
pg_parse_query(628,17289
pg_analyze_and_rewrite(676,18578
pg_analyze_and_rewrite_params(713,19466
pg_rewrite_query(765,20649
pg_plan_query(857,22904
pg_plan_queries(943,25049
exec_simple_query(983,25910
exec_parse_message(1349,36971
exec_bind_message(1606,44156
exec_execute_message(2041,56119
check_log_statement(2283,62388
check_log_duration(2322,63378
errdetail_execute(2385,65294
errdetail_params(2418,66046
errdetail_abort(2438,66428
errdetail_recovery_conflict(2452,66657
exec_describe_statement_message(2488,67675
exec_describe_portal_message(2583,70210
start_xact_command(2635,71771
finish_xact_command(2655,72290
IsTransactionExitStmt(2687,73002
IsTransactionExitStmtList(2704,73415
IsTransactionStmtList(2719,73739
drop_unnamed_stmt(2734,74062
quickdie(2759,74573
die(2826,77246
StatementCancelHandler(2857,78008
FloatExceptionHandler(2878,78386
RecoveryConflictInterrupt(2896,79041
ProcessInterrupts(3019,82378
#define ia64_get_bsp(3229,89192
#define ia64_get_bsp(3233,89335
ia64_get_bsp(3237,89437
set_stack_base(3259,89812
restore_stack_base(3290,90661
check_stack_depth(3312,91388
stack_is_too_deep(3326,91748
check_max_stack_depth(3375,93073
assign_max_stack_depth(3392,93613
set_debug_options(3407,93918
set_plan_disabling_options(3436,94766
get_stats_option_name(3478,95577
process_postgres_switches(3518,96807
PostgresMain(3777,102903
forbidden_in_wal_sender(4553,125472
get_stack_depth_rlimit(4575,125953
static struct rusage Save_r;4607,126705
static struct timeval Save_t;4608,126734
ResetUsage(4611,126770
ShowUsage(4618,126861
log_disconnections(4720,129871
enable_statement_timeout(4756,130773
disable_statement_timeout(4777,131167

/home/seinoyu/pgsql/master/postgresql/src/backend/tcop/pquery.c,494
Portal		ActivePortal 35,817
CreateQueryDesc(67,1869
FreeQueryDesc(105,2912
ProcessQuery(136,3752
ChoosePortalStrategy(206,5411
FetchPortalTargetList(323,8263
FetchStatementTargetList(345,8991
PortalStart(430,11227
PortalSetResultFormat(611,15649
PortalRun(672,17407
PortalRunSelect(855,22955
FillPortalStore(988,26709
RunFromStore(1049,28460
PortalRunUtility(1115,29864
PortalRunMulti(1186,32247
PortalRunFetch(1370,37895
DoPortalRunFetch(1472,40334
DoPortalRewind(1657,45124

/home/seinoyu/pgsql/master/postgresql/src/backend/tcop/utility.c,663
ProcessUtility_hook_type ProcessUtility_hook 75,2253
CommandIsReadOnly(99,3076
ClassifyUtilityCommandAsReadOnly(132,3846
PreventCommandIfReadOnly(407,11665
PreventCommandIfParallelMode(425,12191
PreventCommandDuringRecovery(444,12827
CheckRestrictedOperation(462,13372
ProcessUtility(501,15093
standard_ProcessUtility(541,16465
ProcessUtilitySlow(1091,31128
ProcessUtilityForAlterTable(1845,52547
ExecDropStmt(1880,53509
UtilityReturnsTuples(1913,54171
UtilityTupleDescriptor(1969,55403
QueryReturnsTuples(2022,56544
UtilityContainsQuery(2063,57672
AlterObjectTypeCommandTag(2100,58561
CreateCommandTag(2246,61820
GetCommandLogLevel(3121,79820

/home/seinoyu/pgsql/master/postgresql/src/backend/tcop/dest.c,440
donothingReceive(50,1419
donothingStartup(56,1509
donothingCleanup(61,1598
static const DestReceiver donothingDR 70,1812
static const DestReceiver debugtupDR 75,1941
static const DestReceiver printsimpleDR 80,2058
static const DestReceiver spi_printtupDR 85,2195
DestReceiver *None_Receiver None_Receiver96,2513
BeginCommand(103,2690
CreateDestReceiver(113,2915
EndCommand(166,4062
NullCommand(227,5943
ReadyForQuery(270,6987

/home/seinoyu/pgsql/master/postgresql/src/backend/tcop/cmdtag.c,523
typedef struct CommandTagBehavior20,508
	const char *name;name22,544
	const bool	event_trigger_ok;23,563
	const bool	table_rewrite_ok;24,593
	const bool	display_rowcount;25,623
} CommandTagBehavior;26,653
#define PG_CMDTAG(28,676
const CommandTagBehavior tag_behavior[tag_behavior31,767
#undef PG_CMDTAG35,863
InitializeQueryCompletion(38,886
GetCommandTagName(45,1006
command_tag_display_rowcount(51,1096
command_tag_event_trigger_ok(57,1209
command_tag_table_rewrite_ok(63,1322
GetCommandTagEnum(74,1539

/home/seinoyu/pgsql/master/postgresql/src/backend/tcop/fastpath.c,369
struct fp_info48,1570
	Oid			funcid;50,1587
	FmgrInfo	flinfo;51,1602
	Oid			namespace;52,1660
	Oid			rettype;53,1710
	Oid			argtypes[argtypes54,1726
	char		fname[fname55,1758
GetOldFunctionMessage(77,2475
SendFunctionResult(136,3875
fetch_fp_info(196,5186
HandleFunctionRequest(259,7135
parse_fcall_arguments(406,10830
parse_fcall_arguments_20(544,14352

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/value.c,80
makeInteger(23,417
makeFloat(38,612
makeString(53,823
makeBitString(68,1025

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/readfuncs.c,4598
#define READ_LOCALS_NO_FIELDS(54,1872
#define READ_TEMP_LOCALS(58,2030
#define READ_LOCALS(63,2126
#define READ_INT_FIELD(68,2289
#define READ_UINT_FIELD(74,2538
#define READ_UINT64_FIELD(80,2792
#define READ_LONG_FIELD(86,3060
#define READ_OID_FIELD(92,3315
#define READ_CHAR_FIELD(98,3543
#define READ_ENUM_FIELD(105,3906
#define READ_FLOAT_FIELD(111,4129
#define READ_BOOL_FIELD(117,4334
#define READ_STRING_FIELD(123,4552
#define READ_LOCATION_FIELD(130,4855
#define READ_LOCATION_FIELD(135,5072
#define READ_NODE_FIELD(143,5357
#define READ_BITMAPSET_FIELD(149,5568
#define READ_ATTRNUMBER_ARRAY(155,5791
#define READ_OID_ARRAY(160,5961
#define READ_INT_ARRAY(165,6117
#define READ_BOOL_ARRAY(170,6273
#define READ_DONE(175,6426
#define atoui(185,6736
#define strtobool(187,6795
#define nullable_string(189,6849
_readBitmapset(197,6989
readBitmapset(238,7932
_readQuery(247,8019
_readNotifyStmt(296,9371
_readDeclareCursorStmt(310,9564
_readWithCheckOption(325,9786
_readSortGroupClause(342,10064
_readGroupingSet(359,10333
_readWindowClause(374,10554
_readRowMarkClause(400,11113
_readCommonTableExpr(416,11391
_readSetOperationStmt(439,11894
_readAlias(461,12256
_readRangeVar(472,12392
_readTableFunc(492,12753
_readIntoClause(514,13224
_readVar(534,13574
_readConst(555,13920
_readParam(580,14420
_readAggref(598,14703
_readGroupingFunc(627,15318
_readWindowFunc(644,15572
_readSubscriptingRef(666,15972
_readFuncExpr(686,16343
_readNamedArgExpr(707,16737
_readOpExpr(723,16957
_readDistinctExpr(743,17290
_readNullIfExpr(763,17631
_readScalarArrayOpExpr(783,17982
_readBoolExpr(801,18268
_readSubLink(827,18854
_readFieldSelect(849,19233
_readFieldStore(866,19491
_readRelabelType(882,19716
_readCoerceViaIO(900,20028
_readArrayCoerceExpr(917,20316
_readConvertRowtypeExpr(936,20677
_readCollateExpr(952,20941
_readCaseExpr(967,21135
_readCaseWhen(985,21406
_readCaseTestExpr(1000,21603
_readArrayExpr(1015,21799
_readRowExpr(1033,22090
_readRowCompareExpr(1050,22364
_readCoalesceExpr(1068,22670
_readMinMaxExpr(1084,22909
_readSQLValueFunction(1102,23214
_readXmlExpr(1118,23457
_readNullTest(1139,23828
_readBooleanTest(1155,24070
_readCoerceToDomain(1170,24296
_readCoerceToDomainValue(1188,24631
_readSetToDefault(1204,24879
_readCurrentOfExpr(1220,25115
_readNextValueExpr(1235,25332
_readInferenceElem(1249,25508
_readTargetEntry(1264,25716
_readRangeTblRef(1283,26032
_readJoinExpr(1296,26171
_readFromExpr(1316,26500
_readOnConflictExpr(1330,26672
_readAppendRelInfo(1357,27216
_readRangeTblEntry(1381,27674
_readRangeTblFunction(1474,29975
_readTableSampleClause(1493,30345
_readDefElem(1508,30551
_readPlannedStmt(1529,30859
ReadCommonPlan(1565,31773
_readPlan(1589,32293
_readResult(1602,32427
_readProjectSet(1617,32606
_readModifyTable(1630,32769
_readAppend(1665,33638
_readMergeAppend(1683,33921
_readRecursiveUnion(1705,34419
_readBitmapAnd(1725,34819
_readBitmapOr(1740,34996
ReadCommonScan(1757,35256
_readScan(1770,35416
_readSeqScan(1783,35552
_readSampleScan(1796,35700
_readIndexScan(1811,35881
_readIndexOnlyScan(1832,36276
_readBitmapIndexScan(1851,36609
_readBitmapHeapScan(1869,36895
_readTidScan(1884,37083
_readSubqueryScan(1899,37261
_readFunctionScan(1914,37448
_readValuesScan(1930,37667
_readTableFuncScan(1945,37857
_readCteScan(1960,38038
_readNamedTuplestoreScan(1976,38257
_readWorkTableScan(1991,38462
_readForeignScan(2006,38648
_readCustomScan(2028,39064
ReadCommonJoin(2058,39799
_readJoin(2073,40028
_readNestLoop(2086,40166
_readMergeJoin(2101,40342
_readHashJoin(2126,40797
_readMaterial(2144,41067
ReadCommonSort(2158,41277
_readSort(2175,41645
_readIncrementalSort(2188,41797
_readGroup(2203,41982
_readAgg(2221,42297
_readWindowAgg(2246,42859
_readUnique(2277,43688
_readGather(2295,44014
_readGatherMerge(2314,44315
_readHash(2336,44789
_readSetOp(2355,45066
_readLockRows(2378,45553
_readLimit(2394,45746
_readNestLoopParam(2415,46205
_readPlanRowMark(2429,46382
_readPartitionPruneInfo(2446,46751
_readPartitionedRelPruneInfo(2457,46939
_readPartitionPruneStepOp(2475,47418
_readPartitionPruneStepCombine(2489,47686
_readPlanInvalItem(2504,47956
_readSubPlan(2518,48126
_readAlternativeSubPlan(2546,48754
_readExtensibleNode(2559,48921
_readPartitionBoundSpec(2589,49626
_readPartitionRangeDatum(2609,50011
parseNodeString(2629,50426
#define MATCH(2640,50620
readDatum(2901,59698
readAttrNumberCols(2958,60893
readOidCols(2982,61253
readIntCols(3006,61587
readBoolCols(3030,61921

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/list.c,1925
#define DEBUG_LIST_MEMORY_USAGE43,1569
#define LIST_HEADER_OVERHEAD 47,1683
#define IsPointerList(54,1924
#define IsIntegerList(55,1981
#define IsOidList(56,2041
check_list_invariants(63,2212
#define check_list_invariants(77,2490
new_list(88,2873
enlarge_list(152,5217
list_make1_impl(233,7646
list_make2_impl(243,7809
list_make3_impl(254,8018
list_make4_impl(267,8277
new_head_cell(287,8749
new_tail_cell(305,9210
lappend(321,9672
lappend_int(339,9969
lappend_oid(357,10271
insert_new_cell(379,10818
list_insert_nth(400,11377
list_insert_nth_int(414,11630
list_insert_nth_oid(428,11893
lcons(453,12613
lcons_int(471,12897
lcons_oid(489,13186
list_concat(515,13898
list_concat_copy(552,14866
list_truncate(585,15773
list_member(613,16696
list_member_ptr(634,17054
list_member_int(654,17361
list_member_oid(674,17660
list_delete_nth_cell(696,18003
list_delete_cell(767,19818
list_delete(777,20041
list_delete_ptr(796,20390
list_delete_int(815,20723
list_delete_oid(834,21054
list_delete_first(860,21692
list_delete_last(877,22046
list_union(915,23206
list_union_ptr(939,23657
list_union_int(962,24093
list_union_oid(985,24537
list_intersection(1018,25429
list_intersection_int(1044,25893
list_difference(1076,26634
list_difference_ptr(1102,27122
list_difference_int(1127,27592
list_difference_oid(1152,28070
list_append_unique(1180,28628
list_append_unique_ptr(1193,28873
list_append_unique_int(1205,29100
list_append_unique_oid(1217,29325
list_concat_unique(1237,29930
list_concat_unique_ptr(1259,30339
list_concat_unique_int(1280,30730
list_concat_unique_oid(1301,31129
list_deduplicate_oid(1325,31634
list_free_private(1350,32105
list_free(1376,32701
list_free_deep(1390,33101
list_copy(1403,33334
list_copy_tail(1422,33710
list_copy_deep(1448,34359
list_sort(1481,35215
	typedef int (*qsort_comparator)qsort_comparator1483,35265
list_oid_cmp(1498,35624

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/nodes.c,55
Node	   *newNodeMacroHolder;newNodeMacroHolder31,871

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/read.c,383
static const char *pg_strtok_ptr pg_strtok_ptr31,741
bool		restore_location_fields 35,896
stringToNodeInternal(48,1271
stringToNode(89,2321
stringToNodeWithLocations(97,2441
pg_strtok(152,4797
debackslash(213,6105
#define RIGHT_PAREN 229,6364
#define LEFT_PAREN	230,6398
#define LEFT_BRACE	231,6431
#define OTHER_TOKEN 232,6464
nodeTokenType(245,6832
nodeRead(316,8965

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/makefuncs.c,847
makeA_Expr(30,721
makeSimpleA_Expr(48,1050
makeVar(66,1373
makeVarFromTargetEntry(103,2248
makeWholeRowVar(133,3434
makeTargetEntry(238,5811
flatCopyTargetEntry(271,6532
makeFromExpr(285,6781
makeConst(299,6977
makeNullConst(337,7985
makeBoolConst(357,8377
makeBoolExpr(369,8654
makeAlias(387,8974
makeRelabelType(402,9208
makeRangeVar(422,9596
makeTypeName(444,10042
makeTypeNameFromNameList(456,10325
makeTypeNameFromOid(472,10609
makeColumnDef(490,10975
makeFuncExpr(519,11620
makeDefElem(546,12317
makeDefElemExtended(564,12659
makeFuncCall(585,13132
make_opclause(609,13660
make_andclause(635,14244
make_orclause(651,14512
make_notclause(667,14780
make_and_qual(688,15302
make_ands_explicit(707,15823
make_ands_implicit(718,16065
makeIndexInfo(742,16729
makeGroupingSet(793,17905
makeVacuumRelation(808,18177

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/extensible.c,463
static HTAB *extensible_node_methods extensible_node_methods26,911
static HTAB *custom_scan_methods custom_scan_methods27,956
	char		extnodename[extnodename31,1015
	const void *extnodemethods;extnodemethods32,1056
} ExtensibleNodeEntry;33,1085
RegisterExtensibleNodeEntry(39,1189
RegisterExtensibleNodeMethods(76,2069
RegisterCustomScanMethods(88,2335
GetExtensibleNodeEntry(100,2633
GetExtensibleNodeMethods(125,3206
GetCustomScanMethods(137,3504

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/bitmapset.c,1208
#define WORDNUM(29,894
#define BITNUM(30,941
#define BITMAPSET_SIZE(32,988
#define RIGHTMOST_ONE(52,1775
#define HAS_MULTIPLE_ONES(54,1854
#define bmw_leftmost_one_pos(58,2023
#define bmw_rightmost_one_pos(59,2081
#define bmw_popcount(60,2140
#define bmw_leftmost_one_pos(62,2216
#define bmw_rightmost_one_pos(63,2274
#define bmw_popcount(64,2333
bms_copy(74,2498
bms_equal(94,2915
bms_compare(147,4007
bms_make_singleton(186,4793
bms_free(208,5243
bms_union(225,5435
bms_intersect(259,6090
bms_difference(291,6753
bms_is_subset(315,7241
bms_subset_compare(352,8013
bms_is_member(427,9472
bms_member_index(453,10001
bms_overlap(494,10896
bms_overlap_list(516,11320
bms_nonempty_difference(545,11834
bms_singleton_member(577,12446
bms_get_singleton_member(615,13376
bms_num_members(646,13920
bms_membership(672,14423
bms_is_empty(701,14928
bms_add_member(736,15532
bms_del_member(773,16291
bms_add_members(793,16676
bms_add_range(834,17601
bms_int_members(902,19235
bms_del_members(928,19738
bms_join(949,20170
bms_first_member(996,21220
bms_next_member(1043,22375
bms_prev_member(1102,23953
bms_hash_value(1154,25152
bitmap_hash(1177,25706
bitmap_match(1187,25922

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/print.c,431
print(36,807
pprint(54,1038
elog_node_display(72,1303
format_node_dump(97,1787
#define LINELEN	99,1824
#undef LINELEN140,2496
pretty_format_node_dump(151,2676
#define INDENTSTOP	153,2720
#define MAXINDENT	154,2741
#define LINELEN	155,2762
#undef INDENTSTOP244,4804
#undef MAXINDENT245,4822
#undef LINELEN246,4839
print_rt(254,4916
print_expr(321,6338
print_pathkeys(427,8483
print_tl(467,9231
print_slot(493,9740

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/copyfuncs.c,8810
#define COPY_SCALAR_FIELD(41,1353
#define COPY_NODE_FIELD(45,1498
#define COPY_BITMAPSET_FIELD(49,1638
#define COPY_STRING_FIELD(53,1793
#define COPY_POINTER_FIELD(57,1984
#define COPY_LOCATION_FIELD(65,2235
_copyPlannedStmt(78,2536
CopyPlanFields(116,3577
_copyPlan(138,4103
_copyResult(155,4303
_copyProjectSet(176,4614
_copyModifyTable(192,4868
_copyAppend(233,5872
_copyMergeAppend(257,6290
_copyRecursiveUnion(285,6978
_copyBitmapAnd(314,7600
_copyBitmapOr(335,7913
_copyGather(357,8249
_copyGatherMerge(382,8692
CopyScanFields(413,9501
_copyScan(424,9676
_copySeqScan(440,9901
_copySampleScan(456,10144
_copyIndexScan(477,10462
_copyIndexOnlyScan(504,10983
_copyBitmapIndexScan(529,11449
_copyBitmapHeapScan(553,11887
_copyTidScan(574,12220
_copySubqueryScan(595,12532
_copyFunctionScan(616,12860
_copyTableFuncScan(638,13228
_copyValuesScan(659,13558
_copyCteScan(680,13873
_copyNamedTuplestoreScan(702,14232
_copyWorkTableScan(723,14592
_copyForeignScan(744,14924
_copyCustomScan(772,15477
CopyJoinFields(808,16319
_copyJoin(822,16556
_copyNestLoop(839,16760
_copyMergeJoin(861,17072
_copyHashJoin(892,17756
_copyMaterial(917,18162
CopySortFields(937,18536
_copySort(952,18968
_copyIncrementalSort(969,19186
_copyGroup(991,19522
_copyAgg(1009,19929
_copyWindowAgg(1037,20596
_copyUnique(1074,21653
_copyHash(1098,22146
_copySetOp(1123,22560
_copyLockRows(1152,23203
_copyLimit(1174,23534
_copyNestLoopParam(1201,24151
_copyPlanRowMark(1215,24377
_copyPartitionPruneInfo(1232,24756
_copyPartitionedRelPruneInfo(1243,25000
_copyPartitionPruneStepOp(1264,25622
_copyPartitionPruneStepCombine(1281,25997
_copyPlanInvalItem(1296,26317
_copyAlias(1315,26712
_copyRangeVar(1329,26905
_copyTableFunc(1348,27264
_copyIntoClause(1373,27803
_copyVar(1400,28444
_copyConst(1421,28841
_copyParam(1459,29581
_copyAggref(1477,29900
_copyGroupingFunc(1506,30565
_copyWindowFunc(1523,30865
_copySubscriptingRef(1545,31323
_copyFuncExpr(1565,31756
_copyNamedArgExpr(1586,32194
_copyOpExpr(1602,32461
_copyDistinctExpr(1622,32863
_copyNullIfExpr(1642,33282
_copyScalarArrayOpExpr(1662,33690
_copyBoolExpr(1680,34041
_copySubLink(1695,34268
_copySubPlan(1713,34589
_copyAlternativeSubPlan(1741,35263
_copyFieldSelect(1754,35480
_copyFieldStore(1771,35792
_copyRelabelType(1787,36060
_copyCoerceViaIO(1805,36411
_copyArrayCoerceExpr(1822,36735
_copyConvertRowtypeExpr(1841,37143
_copyCollateExpr(1857,37454
_copyCaseExpr(1872,37693
_copyCaseWhen(1890,38008
_copyCaseTestExpr(1905,38243
_copyArrayExpr(1920,38492
_copyRowExpr(1938,38833
_copyRowCompareExpr(1955,39135
_copyCoalesceExpr(1973,39475
_copyMinMaxExpr(1989,39764
_copySQLValueFunction(2007,40110
_copyXmlExpr(2023,40393
_copyNullTest(2044,40785
_copyBooleanTest(2060,41055
_copyCoerceToDomain(2075,41311
_copyCoerceToDomainValue(2093,41691
_copySetToDefault(2109,42006
_copyCurrentOfExpr(2125,42295
_copyNextValueExpr(2140,42566
_copyInferenceElem(2154,42794
_copyTargetEntry(2169,43054
_copyRangeTblRef(2188,43425
_copyJoinExpr(2201,43609
_copyFromExpr(2221,43973
_copyOnConflictExpr(2235,44183
_copyPathKey(2263,44924
_copyRestrictInfo(2280,45283
_copyPlaceHolderVar(2325,46691
_copySpecialJoinInfo(2341,46987
_copyAppendRelInfo(2364,47558
_copyPlaceHolderInfo(2384,48058
_copyRangeTblEntry(2404,48572
_copyRangeTblFunction(2449,49858
_copyTableSampleClause(2465,50250
_copyWithCheckOption(2477,50498
_copySortGroupClause(2491,50790
_copyGroupingSet(2505,51094
_copyWindowClause(2517,51314
_copyRowMarkClause(2540,51908
_copyWithClause(2553,52168
_copyInferClause(2565,52385
_copyOnConflictClause(2578,52646
_copyCommonTableExpr(2592,52950
_copyAExpr(2612,53452
_copyColumnRef(2626,53698
_copyParamRef(2637,53880
_copyAConst(2648,54060
_copyFuncCall(2679,54618
_copyAStar(2698,55041
_copyAIndices(2706,55154
_copyA_Indirection(2718,55360
_copyA_ArrayExpr(2729,55556
_copyResTarget(2740,55748
_copyMultiAssignRef(2753,55990
_copyTypeName(2765,56216
_copySortBy(2782,56565
_copyWindowDef(2796,56827
_copyRangeSubselect(2813,57204
_copyRangeFunction(2825,57434
_copyRangeTableSample(2840,57759
_copyRangeTableFunc(2854,58056
_copyRangeTableFuncCol(2870,58405
_copyTypeCast(2886,58775
_copyCollateClause(2898,58984
_copyIndexElem(2910,59207
_copyColumnDef(2927,59569
_copyConstraint(2953,60222
_copyDefElem(2990,61249
_copyLockingClause(3004,61521
_copyXmlSerialize(3016,61756
_copyRoleSpec(3029,62006
_copyTriggerTransition(3041,62228
_copyQuery(3053,62462
_copyRawStmt(3099,63758
_copyInsertStmt(3111,63969
_copyDeleteStmt(3127,64309
_copyUpdateStmt(3141,64591
_copySelectStmt(3156,64902
_copySetOperationStmt(3184,65602
_copyAlterTableStmt(3201,65979
_copyAlterTableCmd(3214,66240
_copyAlterCollationStmt(3230,66582
_copyAlterDomainStmt(3240,66776
_copyGrantStmt(3255,67092
_copyObjectWithArgs(3272,67460
_copyAccessPriv(3284,67697
_copyGrantRoleStmt(3295,67884
_copyAlterDefaultPrivilegesStmt(3310,68225
_copyDeclareCursorStmt(3321,68478
_copyClosePortalStmt(3333,68726
_copyCallStmt(3343,68905
_copyClusterStmt(3354,69085
_copyCopyStmt(3366,69304
CopyCreateStmtFields(3389,69819
_copyCreateStmt(3406,70279
_copyTableLikeClause(3416,70451
_copyDefineStmt(3427,70657
_copyDropStmt(3443,70986
_copyTruncateStmt(3457,71264
_copyCommentStmt(3469,71495
_copySecLabelStmt(3481,71714
_copyFetchStmt(3494,71962
_copyIndexStmt(3507,72207
_copyCreateStatsStmt(3539,73096
_copyAlterStatsStmt(3554,73428
_copyCreateFunctionStmt(3566,73676
_copyFunctionParameter(3581,74022
_copyAlterFunctionStmt(3594,74292
_copyDoStmt(3606,74525
_copyRenameStmt(3616,74665
_copyAlterObjectDependsStmt(3633,75046
_copyAlterObjectSchemaStmt(3647,75375
_copyAlterOwnerStmt(3661,75701
_copyAlterOperatorStmt(3674,75967
_copyAlterTypeStmt(3685,76182
_copyRuleStmt(3696,76376
_copyNotifyStmt(3712,76700
_copyListenStmt(3723,76893
_copyUnlistenStmt(3733,77059
_copyTransactionStmt(3743,77236
_copyCompositeTypeStmt(3757,77533
_copyCreateEnumStmt(3768,77751
_copyCreateRangeStmt(3779,77953
_copyAlterEnumStmt(3790,78159
_copyViewStmt(3805,78493
_copyLoadStmt(3820,78783
_copyCreateDomainStmt(3830,78942
_copyCreateOpClassStmt(3843,79221
_copyCreateOpClassItem(3858,79560
_copyCreateOpFamilyStmt(3873,79899
_copyAlterOpFamilyStmt(3884,80127
_copyCreatedbStmt(3897,80399
_copyAlterDatabaseStmt(3908,80598
_copyAlterDatabaseSetStmt(3919,80820
_copyDropdbStmt(3930,81044
_copyVacuumStmt(3942,81260
_copyVacuumRelation(3954,81478
_copyExplainStmt(3966,81704
_copyCreateTableAsStmt(3977,81896
_copyRefreshMatViewStmt(3991,82210
_copyReplicaIdentityStmt(4003,82470
_copyAlterSystemStmt(4014,82701
_copyCreateSeqStmt(4024,82880
_copyAlterSeqStmt(4038,83176
_copyVariableSetStmt(4051,83439
_copyVariableShowStmt(4064,83700
_copyDiscardStmt(4074,83880
_copyCreateTableSpaceStmt(4084,84051
_copyDropTableSpaceStmt(4097,84346
_copyAlterTableSpaceOptionsStmt(4108,84591
_copyAlterTableMoveAllStmt(4120,84887
_copyCreateExtensionStmt(4134,85232
_copyAlterExtensionStmt(4146,85496
_copyAlterExtensionContentsStmt(4157,85729
_copyCreateFdwStmt(4170,86037
_copyAlterFdwStmt(4182,86268
_copyCreateForeignServerStmt(4194,86506
_copyAlterForeignServerStmt(4209,86883
_copyCreateUserMappingStmt(4222,87192
_copyAlterUserMappingStmt(4235,87493
_copyDropUserMappingStmt(4247,87754
_copyCreateForeignTableStmt(4259,88019
_copyImportForeignSchemaStmt(4272,88343
_copyCreateTransformStmt(4287,88723
_copyCreateAmStmt(4301,89026
_copyCreateTrigStmt(4313,89255
_copyCreateEventTrigStmt(4336,89820
_copyAlterEventTrigStmt(4349,90112
_copyCreatePLangStmt(4360,90339
_copyCreateRoleStmt(4375,90668
_copyAlterRoleStmt(4387,90900
_copyAlterRoleSetStmt(4399,91126
_copyDropRoleStmt(4411,91362
_copyLockStmt(4422,91554
_copyConstraintsSetStmt(4434,91768
_copyReindexStmt(4445,91991
_copyCreateSchemaStmt(4459,92271
_copyCreateConversionStmt(4472,92559
_copyCreateCastStmt(4486,92898
_copyPrepareStmt(4500,93184
_copyExecuteStmt(4512,93397
_copyDeallocateStmt(4523,93586
_copyDropOwnedStmt(4533,93760
_copyReassignOwnedStmt(4544,93963
_copyAlterTSDictionaryStmt(4555,94183
_copyAlterTSConfigurationStmt(4566,94425
_copyCreatePolicyStmt(4582,94814
_copyAlterPolicyStmt(4598,95171
_copyPartitionElem(4612,95460
_copyPartitionSpec(4626,95742
_copyPartitionBoundSpec(4638,95983
_copyPartitionRangeDatum(4655,96399
_copyPartitionCmd(4667,96649
_copyCreatePublicationStmt(4678,96846
_copyAlterPublicationStmt(4691,97147
_copyCreateSubscriptionStmt(4705,97479
_copyAlterSubscriptionStmt(4718,97784
_copyDropSubscriptionStmt(4732,98110
_copyExtensibleNode(4748,98549
_copyValue(4769,99122
_copyForeignKeyCacheInfo(4799,99642
copyObjectImpl(4823,100385

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/tidbitmap.c,3488
#define MAX_TUPLES_PER_PAGE 56,2307
#define PAGES_PER_CHUNK 73,3213
#define WORDNUM(77,3333
#define BITNUM(78,3380
#define WORDS_PER_PAGE	81,3475
#define WORDS_PER_CHUNK 83,3600
typedef struct PagetableEntry99,4425
	BlockNumber blockno;101,4457
	char		status;102,4514
	bool		ischunk;103,4555
	bool		recheck;104,4607
	bitmapword	words[words105,4662
} PagetableEntry;106,4719
typedef struct PTEntryArray111,4782
	pg_atomic_uint32 refcount;113,4812
	PagetableEntry ptentry[ptentry114,4871
} PTEntryArray;115,4919
	TBM_EMPTY,130,5587
	TBM_ONE_PAGE,131,5637
	TBM_HASH	132,5694
} TBMStatus;133,5748
	TBM_NOT_ITERATING,140,5823
	TBM_ITERATING_PRIVATE,141,5893
	TBM_ITERATING_SHARED	142,5964
} TBMIteratingState;143,6034
struct TIDBitmap148,6116
	NodeTag		type;150,6135
	MemoryContext mcxt;151,6183
	TBMStatus	status;152,6241
	struct pagetable_hash *pagetable;pagetable153,6284
	int			nentries;154,6356
	int			maxentries;155,6411
	int			npages;156,6468
	int			nchunks;157,6528
	TBMIteratingState iterating;158,6588
	uint32		lossify_start;159,6650
	PagetableEntry entry1;160,6720
	PagetableEntry **spages;spages162,6831
	PagetableEntry **schunks;schunks163,6895
	dsa_pointer dsapagetable;164,6961
	dsa_pointer dsapagetableold;165,7027
	dsa_pointer ptpages;166,7100
	dsa_pointer ptchunks;167,7159
	dsa_area   *dsa;dsa168,7220
struct TBMIterator177,7539
	TIDBitmap  *tbm;tbm179,7560
	int			spageptr;180,7617
	int			schunkptr;181,7659
	int			schunkbit;182,7703
	TBMIterateResult output;183,7764
typedef struct TBMSharedIteratorState190,7939
	int			nentries;192,7979
	int			maxentries;193,8034
	int			npages;194,8091
	int			nchunks;195,8151
	dsa_pointer pagetable;196,8211
	dsa_pointer spages;197,8281
	dsa_pointer schunks;198,8336
	LWLock		lock;199,8392
	int			spageptr;200,8445
	int			schunkptr;201,8487
	int			schunkbit;202,8531
} TBMSharedIteratorState;203,8592
typedef struct PTIterationArray208,8656
	pg_atomic_uint32 refcount;210,8690
	int			index[index211,8749
} PTIterationArray;212,8804
struct TBMSharedIterator218,8954
	TBMSharedIteratorState *state;state220,8981
	PTEntryArray *ptbase;ptbase221,9032
	PTIterationArray *ptpages;ptpages222,9086
	PTIterationArray *ptchunks;ptchunks223,9149
	TBMIterateResult output;224,9213
#define SH_USE_NONDEFAULT_ALLOCATOR242,10074
#define SH_PREFIX 243,10110
#define SH_ELEMENT_TYPE 244,10138
#define SH_KEY_TYPE 245,10177
#define SH_KEY 246,10209
#define SH_HASH_KEY(247,10232
#define SH_EQUAL(248,10279
#define SH_SCOPE 249,10313
#define SH_DEFINE250,10344
#define SH_DECLARE251,10362
tbm_create(265,10815
tbm_create_pagetable(291,11438
tbm_free(321,12044
tbm_free_shared_area(340,12458
tbm_add_tuples(376,13452
tbm_add_page(442,15180
tbm_union(457,15549
tbm_union_page(480,16102
tbm_intersect(539,17287
tbm_intersect_page(588,18393
tbm_is_empty(669,20210
tbm_begin_iterate(688,20875
tbm_prepare_shared_iterate(765,23046
tbm_extract_page_tuple(910,27397
tbm_advance_schunkbit(940,27899
tbm_iterate(970,28894
tbm_shared_iterate(1051,30974
tbm_end_iterate(1145,33422
tbm_end_shared_iterate(1157,33680
tbm_find_pageentry(1168,33919
tbm_get_pageentry(1201,34731
tbm_page_is_lossy(1248,35620
tbm_mark_page_lossy(1282,36441
tbm_lossify(1354,38233
tbm_comparator(1423,40547
tbm_shared_comparator(1441,40981
tbm_attach_shared_iterate(1464,41612
pagetable_allocate(1497,42531
pagetable_free(1525,43317
tbm_calculate_entries(1545,43788

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/params.c,259
makeParamList(43,1232
copyParamList(77,2170
paramlist_parser_setup(119,3124
paramlist_param_ref(130,3399
EstimateParamListSpace(166,4323
SerializeParamList(228,6151
RestoreParamList(291,7802
BuildParamLogString(334,9000
ParamsErrorCallback(406,11011

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/equalfuncs.c,7504
#define COMPARE_SCALAR_FIELD(46,1650
#define COMPARE_NODE_FIELD(53,1839
#define COMPARE_BITMAPSET_FIELD(60,2013
#define COMPARE_STRING_FIELD(67,2212
#define equalstr(74,2395
#define COMPARE_POINTER_FIELD(78,2567
#define COMPARE_LOCATION_FIELD(85,2775
#define COMPARE_COERCIONFORM_FIELD(89,2908
_equalAlias(98,3014
_equalRangeVar(107,3155
_equalTableFunc(121,3473
_equalIntoClause(141,3987
_equalVar(163,4606
_equalConst(183,5100
_equalParam(204,5683
_equalAggref(217,5966
_equalGroupingFunc(241,6635
_equalWindowFunc(256,6888
_equalSubscriptingRef(273,7302
_equalFuncExpr(288,7694
_equalNamedArgExpr(304,8095
_equalOpExpr(315,8316
_equalDistinctExpr(341,8977
_equalNullIfExpr(367,9656
_equalScalarArrayOpExpr(393,10329
_equalBoolExpr(417,10950
_equalSubLink(427,11128
_equalSubPlan(440,11409
_equalAlternativeSubPlan(463,12051
_equalFieldSelect(471,12197
_equalFieldStore(483,12459
_equalRelabelType(494,12673
_equalCoerceViaIO(507,12981
_equalArrayCoerceExpr(519,13251
_equalConvertRowtypeExpr(533,13601
_equalCollateExpr(544,13856
_equalCaseExpr(554,14043
_equalCaseWhen(567,14316
_equalCaseTestExpr(577,14492
_equalArrayExpr(587,14686
_equalRowExpr(600,14987
_equalRowCompareExpr(612,15238
_equalCoalesceExpr(625,15524
_equalMinMaxExpr(636,15759
_equalSQLValueFunction(649,16047
_equalXmlExpr(660,16278
_equalNullTest(676,16637
_equalBooleanTest(687,16853
_equalCoerceToDomain(697,17045
_equalCoerceToDomainValue(710,17363
_equalSetToDefault(721,17613
_equalCurrentOfExpr(732,17842
_equalNextValueExpr(742,18046
_equalInferenceElem(751,18207
_equalTargetEntry(761,18407
_equalRangeTblRef(775,18732
_equalJoinExpr(783,18858
_equalFromExpr(798,19186
_equalOnConflictExpr(807,19330
_equalPathKey(826,19749
_equalRestrictInfo(838,20048
_equalPlaceHolderVar(857,20553
_equalSpecialJoinInfo(882,21522
_equalAppendRelInfo(900,22051
_equalPlaceHolderInfo(915,22495
_equalExtensibleNode(931,22865
_equalQuery(952,23293
_equalRawStmt(996,24701
_equalInsertStmt(1006,24883
_equalDeleteStmt(1020,25206
_equalUpdateStmt(1032,25465
_equalSelectStmt(1045,25756
_equalSetOperationStmt(1071,26469
_equalAlterTableStmt(1086,26822
_equalAlterTableCmd(1097,27050
_equalAlterCollationStmt(1111,27364
_equalAlterDomainStmt(1119,27510
_equalGrantStmt(1132,27802
_equalObjectWithArgs(1147,28152
_equalAccessPriv(1157,28356
_equalGrantRoleStmt(1166,28508
_equalAlterDefaultPrivilegesStmt(1179,28810
_equalDeclareCursorStmt(1188,29008
_equalClosePortalStmt(1198,29215
_equalCallStmt(1206,29356
_equalClusterStmt(1215,29503
_equalCopyStmt(1225,29694
_equalCreateStmt(1240,30032
_equalTableLikeClause(1259,30528
_equalDefineStmt(1268,30697
_equalDropStmt(1282,31011
_equalTruncateStmt(1294,31264
_equalCommentStmt(1304,31463
_equalSecLabelStmt(1314,31650
_equalFetchStmt(1325,31871
_equalIndexStmt(1336,32091
_equalCreateStatsStmt(1366,33006
_equalAlterStatsStmt(1379,33309
_equalCreateFunctionStmt(1389,33516
_equalFunctionParameter(1402,33827
_equalAlterFunctionStmt(1413,34057
_equalDoStmt(1423,34258
_equalRenameStmt(1431,34364
_equalAlterObjectDependsStmt(1446,34719
_equalAlterObjectSchemaStmt(1458,35002
_equalAlterOwnerStmt(1470,35290
_equalAlterOperatorStmt(1481,35519
_equalAlterTypeStmt(1490,35692
_equalRuleStmt(1499,35853
_equalNotifyStmt(1513,36160
_equalListenStmt(1522,36321
_equalUnlistenStmt(1530,36450
_equalTransactionStmt(1538,36585
_equalCompositeTypeStmt(1550,36847
_equalCreateEnumStmt(1559,37022
_equalCreateRangeStmt(1568,37183
_equalAlterEnumStmt(1577,37349
_equalViewStmt(1590,37662
_equalLoadStmt(1603,37934
_equalCreateDomainStmt(1611,38052
_equalCreateOpClassStmt(1622,38292
_equalCreateOpClassItem(1635,38597
_equalCreateOpFamilyStmt(1648,38901
_equalAlterOpFamilyStmt(1657,39082
_equalCreatedbStmt(1668,39319
_equalAlterDatabaseStmt(1677,39477
_equalAlterDatabaseSetStmt(1686,39650
_equalDropdbStmt(1695,39832
_equalVacuumStmt(1705,40019
_equalVacuumRelation(1715,40204
_equalExplainStmt(1725,40396
_equalCreateTableAsStmt(1734,40548
_equalRefreshMatViewStmt(1746,40824
_equalReplicaIdentityStmt(1756,41038
_equalAlterSystemStmt(1765,41223
_equalCreateSeqStmt(1774,41360
_equalAlterSeqStmt(1786,41628
_equalVariableSetStmt(1797,41858
_equalVariableShowStmt(1808,42082
_equalDiscardStmt(1816,42220
_equalCreateTableSpaceStmt(1824,42345
_equalDropTableSpaceStmt(1835,42596
_equalAlterTableSpaceOptionsStmt(1844,42785
_equalAlterTableMoveAllStmt(1855,43034
_equalCreateExtensionStmt(1868,43343
_equalAlterExtensionStmt(1878,43561
_equalAlterExtensionContentsStmt(1887,43738
_equalCreateFdwStmt(1898,44001
_equalAlterFdwStmt(1908,44198
_equalCreateForeignServerStmt(1918,44392
_equalAlterForeignServerStmt(1931,44724
_equalCreateUserMappingStmt(1942,44984
_equalAlterUserMappingStmt(1953,45238
_equalDropUserMappingStmt(1963,45451
_equalCreateForeignTableStmt(1973,45666
_equalImportForeignSchemaStmt(1985,45919
_equalCreateTransformStmt(1998,46257
_equalCreateAmStmt(2010,46526
_equalCreateTrigStmt(2020,46720
_equalCreateEventTrigStmt(2041,47276
_equalAlterEventTrigStmt(2052,47525
_equalCreatePLangStmt(2061,47707
_equalCreateRoleStmt(2074,48007
_equalAlterRoleStmt(2084,48203
_equalAlterRoleSetStmt(2094,48391
_equalDropRoleStmt(2104,48590
_equalLockStmt(2113,48750
_equalConstraintsSetStmt(2123,48927
_equalReindexStmt(2132,49109
_equalCreateSchemaStmt(2144,49359
_equalCreateConversionStmt(2155,49605
_equalCreateCastStmt(2167,49907
_equalPrepareStmt(2179,50165
_equalExecuteStmt(2189,50347
_equalDeallocateStmt(2198,50499
_equalDropOwnedStmt(2206,50631
_equalReassignOwnedStmt(2215,50792
_equalAlterTSDictionaryStmt(2224,50962
_equalAlterTSConfigurationStmt(2233,51147
_equalCreatePublicationStmt(2248,51509
_equalAlterPublicationStmt(2260,51770
_equalCreateSubscriptionStmt(2273,52066
_equalAlterSubscriptionStmt(2285,52330
_equalDropSubscriptionStmt(2298,52619
_equalCreatePolicyStmt(2309,52849
_equalAlterPolicyStmt(2323,53178
_equalAExpr(2335,53436
_equalColumnRef(2347,53661
_equalParamRef(2356,53813
_equalAConst(2365,53964
_equalFuncCall(2375,54162
_equalAStar(2392,54581
_equalAIndices(2398,54658
_equalA_Indirection(2408,54832
_equalA_ArrayExpr(2417,54992
_equalResTarget(2426,55152
_equalMultiAssignRef(2437,55364
_equalTypeName(2447,55559
_equalTypeCast(2462,55898
_equalCollateClause(2472,56075
_equalSortBy(2482,56267
_equalWindowDef(2494,56508
_equalRangeSubselect(2509,56867
_equalRangeFunction(2519,57061
_equalRangeTableSample(2532,57357
_equalRangeTableFunc(2544,57621
_equalRangeTableFuncCol(2558,57942
_equalIndexElem(2573,58291
_equalColumnDef(2588,58640
_equalConstraint(2612,59306
_equalDefElem(2647,60382
_equalLockingClause(2659,60628
_equalRangeTblEntry(2669,60829
_equalRangeTblFunction(2712,62176
_equalTableSampleClause(2726,62538
_equalWithCheckOption(2736,62745
_equalSortGroupClause(2748,63004
_equalGroupingSet(2760,63279
_equalWindowClause(2770,63467
_equalRowMarkClause(2791,64060
_equalWithClause(2802,64291
_equalInferClause(2812,64478
_equalOnConflictClause(2823,64706
_equalCommonTableExpr(2835,64976
_equalXmlSerialize(2853,65472
_equalRoleSpec(2864,65696
_equalTriggerTransition(2874,65882
_equalPartitionElem(2884,66085
_equalPartitionSpec(2896,66338
_equalPartitionBoundSpec(2906,66539
_equalPartitionRangeDatum(2921,66924
_equalPartitionCmd(2931,67134
_equalList(2944,67318
_equalValue(3003,68446
equal(3033,68916

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/outfuncs.c,7017
#define WRITE_NODE_TYPE(51,1678
#define WRITE_INT_FIELD(55,1821
#define WRITE_UINT_FIELD(59,2002
#define WRITE_UINT64_FIELD(63,2186
#define WRITE_OID_FIELD(68,2395
#define WRITE_LONG_FIELD(72,2535
#define WRITE_CHAR_FIELD(76,2695
#define WRITE_ENUM_FIELD(81,2877
#define WRITE_FLOAT_FIELD(86,3083
#define WRITE_BOOL_FIELD(90,3232
#define WRITE_STRING_FIELD(95,3412
#define WRITE_LOCATION_FIELD(100,3610
#define WRITE_NODE_FIELD(104,3747
#define WRITE_BITMAPSET_FIELD(109,3909
#define WRITE_ATTRNUMBER_ARRAY(113,4051
#define WRITE_OID_ARRAY(120,4270
#define WRITE_INT_ARRAY(127,4482
#define WRITE_BOOL_ARRAY(134,4694
#define booltostr(142,4919
outToken(153,5194
outChar(189,6133
_outList(200,6245
outBitmapset(243,7225
outDatum(259,7537
_outPlannedStmt(296,8275
_outPlanInfo(329,9218
_outScanInfo(351,9814
_outJoinPlanInfo(362,10018
_outPlan(373,10230
_outResult(381,10358
_outProjectSet(391,10529
_outModifyTable(399,10675
_outAppend(429,11569
_outMergeAppend(442,11845
_outRecursiveUnion(459,12315
_outBitmapAnd(474,12704
_outBitmapOr(484,12880
_outGather(495,13082
_outGatherMerge(509,13377
_outScan(526,13843
_outSeqScan(534,13956
_outSampleScan(542,14093
_outIndexScan(552,14272
_outIndexOnlyScan(568,14662
_outBitmapIndexScan(582,14988
_outBitmapHeapScan(595,15270
_outTidScan(605,15464
_outSubqueryScan(615,15631
_outFunctionScan(625,15812
_outTableFuncScan(636,16030
_outValuesScan(646,16216
_outCteScan(656,16396
_outNamedTuplestoreScan(667,16591
_outWorkTableScan(677,16795
_outForeignScan(687,16978
_outCustomScan(704,17398
_outJoin(722,17891
_outNestLoop(730,18023
_outMergeJoin(740,18199
_outHashJoin(760,18656
_outAgg(773,18931
_outWindowAgg(793,19476
_outGroup(819,20288
_outMaterial(832,20593
_outSortInfo(840,20733
_outSort(852,21057
_outIncrementalSort(860,21170
_outUnique(870,21366
_outHash(883,21677
_outSetOp(897,21966
_outLockRows(915,22438
_outLimit(926,22636
_outNestLoopParam(942,23068
_outPlanRowMark(951,23238
_outPartitionPruneInfo(966,23624
_outPartitionedRelPruneInfo(975,23825
_outPartitionPruneStepOp(991,24314
_outPartitionPruneStepCombine(1003,24598
_outPlanInvalItem(1013,24870
_outAlias(1028,25234
_outRangeVar(1037,25385
_outTableFunc(1054,25773
_outIntoClause(1074,26272
_outVar(1089,26634
_outConst(1105,26982
_outParam(1125,27471
_outAggref(1138,27753
_outGroupingFunc(1162,28367
_outWindowFunc(1174,28618
_outSubscriptingRef(1191,29008
_outFuncExpr(1206,29386
_outNamedArgExpr(1222,29773
_outOpExpr(1233,29997
_outDistinctExpr(1248,30320
_outNullIfExpr(1263,30661
_outScalarArrayOpExpr(1278,30996
_outBoolExpr(1291,31289
_outSubLink(1318,31742
_outSubPlan(1331,32033
_outAlternativeSubPlan(1354,32664
_outFieldSelect(1362,32822
_outFieldStore(1374,33076
_outRelabelType(1385,33293
_outCoerceViaIO(1398,33600
_outArrayCoerceExpr(1410,33874
_outConvertRowtypeExpr(1424,34221
_outCollateExpr(1435,34485
_outCaseExpr(1445,34673
_outCaseWhen(1458,34938
_outCaseTestExpr(1468,35118
_outArrayExpr(1478,35311
_outRowExpr(1491,35599
_outRowCompareExpr(1503,35853
_outCoalesceExpr(1516,36151
_outMinMaxExpr(1527,36382
_outSQLValueFunction(1540,36667
_outXmlExpr(1551,36916
_outNullTest(1567,37287
_outBooleanTest(1578,37519
_outCoerceToDomain(1588,37731
_outCoerceToDomainValue(1601,38048
_outSetToDefault(1612,38295
_outCurrentOfExpr(1623,38521
_outNextValueExpr(1633,38728
_outInferenceElem(1642,38893
_outTargetEntry(1652,39095
_outRangeTblRef(1666,39407
_outJoinExpr(1674,39542
_outFromExpr(1689,39871
_outOnConflictExpr(1698,40025
_outPathInfo(1729,41070
_outJoinPathInfo(1754,41829
_outPath(1766,42120
_outIndexPath(1774,42248
_outBitmapHeapPath(1790,42664
_outBitmapAndPath(1800,42854
_outBitmapOrPath(1811,43089
_outTidPath(1822,43321
_outSubqueryScanPath(1832,43488
_outForeignPath(1842,43681
_outCustomPath(1853,43897
_outAppendPath(1867,44225
_outMergeAppendPath(1880,44518
_outGroupResultPath(1892,44788
_outMaterialPath(1902,44976
_outUniquePath(1912,45157
_outGatherPath(1925,45442
_outProjectionPath(1937,45680
_outProjectSetPath(1948,45895
_outSortPath(1958,46082
_outGroupPath(1968,46251
_outUpperUniquePath(1980,46480
_outAggPath(1991,46697
_outRollupData(2007,47081
_outGroupingSetData(2020,47369
_outGroupingSetsPath(2029,47543
_outMinMaxAggPath(2043,47872
_outWindowAggPath(2054,48087
_outSetOpPath(2065,48301
_outRecursiveUnionPath(2081,48682
_outLockRowsPath(2095,49011
_outModifyTablePath(2107,49249
_outLimitPath(2129,49843
_outGatherMergePath(2142,50123
_outNestPath(2153,50344
_outMergePath(2161,50492
_outHashPath(2175,50826
_outPlannerGlobal(2187,51089
_outPlannerInfo(2213,51872
_outRelOptInfo(2265,53601
_outIndexOptInfo(2319,55476
_outForeignKeyOptInfo(2344,56264
_outStatisticExtInfo(2369,57061
_outEquivalenceClass(2381,57383
_outEquivalenceMember(2408,58142
_outPathKey(2421,58470
_outPathTarget(2432,58693
_outParamPathInfo(2451,59135
_outRestrictInfo(2461,59358
_outIndexClause(2493,60477
_outPlaceHolderVar(2505,60726
_outSpecialJoinInfo(2516,60958
_outAppendRelInfo(2534,61479
_outPlaceHolderInfo(2549,61890
_outMinMaxAggInfo(2562,62197
_outPlannerParamItem(2576,62559
_outExtensibleNode(2591,62927
_outCreateStmtInfo(2615,63517
_outCreateStmt(2632,63986
_outCreateForeignTableStmt(2640,64144
_outImportForeignSchemaStmt(2651,64400
_outIndexStmt(2664,64763
_outCreateStatsStmt(2694,65618
_outAlterStatsStmt(2707,65921
_outNotifyStmt(2717,66131
_outDeclareCursorStmt(2726,66298
_outSelectStmt(2736,66506
_outFuncCall(2762,67212
_outDefElem(2779,67617
_outTableLikeClause(2791,67880
_outLockingClause(2800,68057
_outXmlSerialize(2810,68298
_outTriggerTransition(2821,68541
_outColumnDef(2831,68748
_outTypeName(2855,69376
_outTypeCast(2870,69703
_outCollateClause(2880,69888
_outIndexElem(2890,70088
_outQuery(2905,70455
_outWithCheckOption(2974,72460
_outSortGroupClause(2986,72728
_outGroupingSet(2998,72995
_outWindowClause(3008,73206
_outRowMarkClause(3029,73765
_outWithClause(3040,74030
_outCommonTableExpr(3050,74223
_outSetOperationStmt(3068,74720
_outRangeTblEntry(3083,75081
_outRangeTblFunction(3161,77099
_outTableSampleClause(3175,77458
_outAExpr(3185,77670
_outValue(3267,79623
_outColumnRef(3308,80633
_outParamRef(3317,80795
_outRawStmt(3330,81031
_outAConst(3340,81218
_outA_Star(3350,81417
_outA_Indices(3356,81509
_outA_Indirection(3366,81690
_outA_ArrayExpr(3375,81860
_outResTarget(3384,82030
_outMultiAssignRef(3395,82248
_outSortBy(3405,82445
_outWindowDef(3417,82710
_outRangeSubselect(3432,83064
_outRangeFunction(3442,83264
_outRangeTableSample(3455,83556
_outRangeTableFunc(3467,83824
_outRangeTableFuncCol(3481,84143
_outConstraint(3495,84487
_outForeignKeyCacheInfo(3614,87579
_outPartitionElem(3628,87954
_outPartitionSpec(3640,88211
_outPartitionBoundSpec(3650,88420
_outPartitionRangeDatum(3665,88793
outNode(3679,89109
nodeToString(4360,104036
bmsToString(4375,104323

/home/seinoyu/pgsql/master/postgresql/src/backend/nodes/nodeFuncs.c,1083
exprType(41,1196
exprTypmod(275,7341
exprIsLengthCoercion(512,13975
relabel_to_typmod(587,15887
strip_implicit_coercions(611,16668
expression_returns_set(669,18140
expression_returns_set_walker(675,18247
exprCollation(719,19404
exprInputCollation(924,24985
exprSetCollation(972,26040
exprSetInputCollation(1127,30511
exprLocation(1191,32933
leftmostLoc(1566,43461
fix_opfuncids(1587,43940
fix_opfuncids_walker(1594,44084
set_opfuncid(1618,44805
set_sa_opfuncid(1629,44997
check_functions_in_node(1656,46105
expression_tree_walker(1839,52468
query_tree_walker(2273,63982
range_table_walker(2372,66718
range_table_entry_walker(2393,67097
expression_tree_mutator(2516,71528
#define FLATCOPY(2525,71744
#define CHECKFLATCOPY(2529,71895
#define MUTATE(2534,72091
query_tree_mutator(3202,90604
range_table_mutator(3291,93360
query_or_expression_tree_walker(3363,95241
query_or_expression_tree_mutator(3386,95853
raw_expression_tree_walker(3417,96917
planstate_tree_walker(3882,108256
planstate_walk_subplans(3969,110440
planstate_walk_members(3991,110817

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/path/pathkeys.c,1175
make_canonical_pathkey(54,1775
pathkey_is_redundant(135,4784
make_pathkey_from_sortinfo(177,6174
make_pathkey_from_sortop(236,8035
compare_pathkeys(285,9395
pathkeys_contained_in(324,10347
pathkeys_count_contained_in(343,10699
get_cheapest_path_for_pathkeys(404,12172
get_cheapest_fractional_path_for_pathkeys(449,13550
get_cheapest_parallel_safe_total_inner(482,14346
build_index_pathkeys(523,15756
partkey_is_bool_constant_for_query(629,18999
matches_boolean_partition_clause(664,20036
build_partition_pathkeys(699,20986
build_expression_pathkey(782,23610
convert_subquery_pathkeys(838,25300
find_var_for_subquery_tle(1039,31558
build_join_pathkeys(1082,32869
make_pathkeys_for_sortclauses(1125,34520
initialize_mergeclause_eclasses(1179,36465
update_mergeclause_eclasses(1228,37929
find_mergeclauses_for_outer_pathkeys(1262,39308
select_outer_pathkeys_for_merge(1375,43665
make_inner_pathkeys_for_merge(1547,47910
trim_mergeclauses_for_inner_pathkeys(1650,51262
pathkeys_useful_for_merging(1745,54406
right_merge_direction(1812,56045
pathkeys_useful_for_ordering(1849,57299
truncate_useless_pathkeys(1870,57776
has_useful_pathkeys(1910,59134

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/path/equivclass.c,1252
process_equivalence(118,5062
canonicalize_ec_expression(499,18112
add_eq_member(549,19633
get_eclass_for_sort_expr(625,22828
find_em_expr_for_rel(782,26892
generate_base_implied_equalities(855,30343
generate_base_implied_equalities_const(929,32504
generate_base_implied_equalities_no_const(1006,34692
generate_base_implied_equalities_broken(1097,37916
generate_join_implied_equalities(1154,40508
generate_join_implied_equalities_for_ecs(1232,42654
generate_join_implied_equalities_normal(1303,44576
generate_join_implied_equalities_broken(1479,49856
select_equality_operator(1528,51463
create_join_clause(1563,52503
reconsider_outer_join_clauses(1716,59208
reconsider_outer_join_clause(1811,61799
reconsider_full_join_clause(1936,65277
exprs_known_equal(2113,70704
match_eclasses_to_foreign_key_col(2160,72082
add_child_rel_equivalences(2256,75181
add_child_join_rel_equivalences(2384,79358
generate_implied_equalities_for_column(2525,84225
have_relevant_eclass_joinclause(2655,88204
has_relevant_eclass_joinclause(2722,90457
eclass_useful_for_merging(2766,91647
is_redundant_derived_clause(2824,93113
is_redundant_with_indexclauses(2851,93779
get_eclass_indexes_for_relids(2887,94734
get_common_eclass_indexes(2911,95326

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/path/tidpath.c,278
IsCTIDVar(53,1971
IsTidEqualClause(73,2456
IsTidEqualAnyClause(126,3647
IsCurrentOfClause(165,4547
TidQualFromRestrictInfo(193,5357
TidQualFromRestrictInfoList(230,6303
BuildParameterizedTidPaths(313,8400
ec_member_matches_ctid(368,10274
create_tidscan_paths(385,10704

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/path/joinrels.c,572
join_search_one_level(71,2755
make_rels_by_clause_joins(297,10367
make_rels_by_clauseless_joins(331,11456
join_is_legal(364,12436
make_join_rel(686,24198
populate_joinrel_with_paths(776,26585
have_join_order_restriction(951,32960
has_join_restriction(1064,36509
has_legal_joinclause(1120,38388
have_dangerous_phv(1184,40703
is_dummy_rel(1212,41445
mark_dummy_rel(1261,43078
restriction_is_constant_false(1304,44301
try_partitionwise_join(1358,46000
build_child_join_sjinfo(1560,52143
compute_partition_bounds(1601,53514
get_matching_part_pairs(1692,56274

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/path/allpaths.c,2260
typedef struct pushdown_safety_info54,1449
	bool	   *unsafeColumns;unsafeColumns56,1487
	bool		unsafeVolatile;57,1557
	bool		unsafeLeaky;58,1617
} pushdown_safety_info;59,1671
bool		enable_geqo 62,1734
int			geqo_threshold;63,1799
int			min_parallel_table_scan_size;64,1821
int			min_parallel_index_scan_size;65,1857
set_rel_pathlist_hook_type set_rel_pathlist_hook 68,1954
join_search_hook_type join_search_hook 71,2069
make_one_rel(152,6033
set_base_rel_consider_startup(248,8759
set_base_rel_sizes(291,10321
set_base_rel_pathlists(334,11583
set_rel_size(361,12156
set_rel_pathlist(470,15094
set_plain_rel_size(574,18048
set_rel_consider_parallel(591,18534
set_plain_rel_pathlist(766,24267
create_plain_partial_paths(796,25083
set_tablesample_rel_size(816,25654
set_tablesample_rel_pathlist(856,26862
set_foreign_size(904,28663
set_foreign_pathlist(924,29254
set_append_rel_size(942,30003
set_append_rel_pathlist(1221,39516
add_paths_to_append_rel(1297,41744
generate_orderedappend_paths(1746,56284
get_cheapest_parameterized_child_path(1957,63336
accumulate_append_subpath(2045,66477
get_singleton_append_subpath(2091,67707
set_dummy_rel_pathlist(2125,68597
has_multiple_baserels(2151,69390
set_subquery_pathlist(2184,70389
set_function_pathlist(2388,77103
set_values_pathlist(2456,78971
set_tablefunc_pathlist(2476,79508
set_cte_pathlist(2500,80195
set_namedtuplestore_pathlist(2566,82107
set_result_pathlist(2596,82974
set_worktable_pathlist(2626,83814
generate_gather_paths(2685,85988
get_useful_pathkeys_for_relation(2752,88194
generate_useful_gather_paths(2816,90296
make_rel_from_joinlist(2957,94008
standard_join_search(3062,97394
subquery_is_pushdown_safe(3220,104191
recurse_pushdown_safe(3272,105678
check_output_expressions(3339,108337
compare_tlist_datatypes(3407,110510
targetIsInAllPartitionLists(3440,111538
qual_is_pushdown_safe(3482,112974
subquery_push_qual(3573,115230
recurse_push_qual(3620,116839
remove_unused_subquery_outputs(3667,118561
create_partial_bitmap_paths(3772,121794
compute_parallel_worker(3808,122972
generate_partitionwise_join_paths(3896,125744
print_relids(3965,127467
print_restrictclauses(3985,127831
print_path(4000,128077
debug_print_rel(4225,132868

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/path/costsize.c,3418
#define LOG2(101,4411
#define APPEND_CPU_COST_MULTIPLIER 108,4681
double		seq_page_cost 111,4722
double		random_page_cost 112,4769
double		cpu_tuple_cost 113,4822
double		cpu_index_tuple_cost 114,4871
double		cpu_operator_cost 115,4932
double		parallel_tuple_cost 116,4987
double		parallel_setup_cost 117,5046
int			effective_cache_size 119,5106
Cost		disable_cost 121,5166
int			max_parallel_workers_per_gather 123,5196
bool		enable_seqscan 125,5240
bool		enable_indexscan 126,5269
bool		enable_indexonlyscan 127,5300
bool		enable_bitmapscan 128,5335
bool		enable_tidscan 129,5367
bool		enable_sort 130,5396
bool		enable_incremental_sort 131,5422
bool		enable_hashagg 132,5460
bool		hashagg_avoid_disk_plan 133,5489
bool		enable_nestloop 134,5527
bool		enable_material 135,5557
bool		enable_mergejoin 136,5587
bool		enable_hashjoin 137,5618
bool		enable_gathermerge 138,5648
bool		enable_partitionwise_join 139,5681
bool		enable_partitionwise_aggregate 140,5722
bool		enable_parallel_append 141,5768
bool		enable_parallel_hash 142,5805
bool		enable_partition_pruning 143,5840
	PlannerInfo *root;root147,5897
	QualCost	total;148,5917
} cost_qual_eval_context;149,5934
clamp_row_est(190,7559
cost_seqscan(214,8083
cost_samplescan(291,10311
cost_gather(366,12892
cost_gather_merge(404,14065
cost_index(479,16614
extract_nonindex_conditions(770,27093
index_pages_fetched(828,29445
get_indexpath_pages(893,31036
cost_bitmap_heap_scan(943,32290
cost_bitmap_tree_node(1044,35316
cost_bitmap_and_node(1087,36584
cost_bitmap_or_node(1131,37668
cost_tidscan(1179,39067
cost_subqueryscan(1285,42139
cost_functionscan(1334,43717
cost_tablefuncscan(1395,45688
cost_valuesscan(1451,47418
cost_ctescan(1501,48988
cost_namedtuplestorescan(1542,50170
cost_resultscan(1579,51200
cost_recursive_union(1616,52222
cost_tuplesort(1687,55127
cost_incremental_sort(1789,58244
cost_sort(1928,63249
append_nonpartial_cost(1959,64024
cost_append(2035,65596
cost_merge_append(2208,71183
cost_material(2257,72601
cost_agg(2311,74503
cost_windowagg(2495,80758
cost_group(2569,83159
initial_cost_nestloop(2639,85466
final_cost_nestloop(2714,87865
initial_cost_mergejoin(2921,96196
final_cost_mergejoin(3151,104159
cached_scansel(3400,113697
initial_cost_hashjoin(3479,116443
final_cost_hashjoin(3587,120272
cost_subplan(3842,129503
cost_rescan(3935,132733
cost_qual_eval(4042,135943
cost_qual_eval_node(4068,136436
cost_qual_eval_walker(4082,136700
get_restriction_qual_cost(4328,145061
compute_semi_anti_join_factors(4370,146623
has_indexed_join_quals(4479,150007
approx_tuple_count(4571,152924
set_baserel_size_estimates(4627,154666
get_parameterized_baserel_size(4657,155350
set_joinrel_size_estimates(4706,157253
get_parameterized_joinrel_size(4738,158317
calc_joinrel_size_estimate(4779,159661
get_foreign_key_join_selectivity(4931,164483
set_subquery_size_estimates(5135,172147
set_function_size_estimates(5215,174864
set_tablefunc_size_estimates(5253,175868
set_values_size_estimates(5275,176469
set_cte_size_estimates(5307,177507
set_namedtuplestore_size_estimates(5344,178446
set_result_size_estimates(5377,179399
set_foreign_size_estimates(5406,180503
set_rel_width(5441,181793
set_pathtarget_cost_width(5599,186366
relation_byte_size(5677,188119
page_size(5688,188396
get_parallel_divisor(5698,188632
compute_bitmap_pages(5731,189681

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/path/clausesel.c,490
typedef struct RangeQueryClause33,913
	struct RangeQueryClause *next;next35,947
	Node	   *var;var36,1005
	bool		have_lobound;37,1063
	bool		have_hibound;38,1120
	Selectivity lobound;39,1178
	Selectivity hibound;40,1247
} RangeQueryClause;41,1316
clauselist_selectivity(69,2515
clauselist_selectivity_simple(150,6081
addRangeClause(360,11441
find_single_rel_for_clauses(456,13467
bms_is_subset_singleton(501,14773
treat_as_join_clause(522,15221
clause_selectivity(600,18038

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/path/indxpath.c,2049
#define IndexCollMatchesExprColl(40,1103
	ST_INDEXSCAN,46,1325
	ST_BITMAPSCAN,47,1373
	ST_ANYSCAN	48,1423
} ScanTypeControl;49,1460
	bool		nonempty;54,1566
	List	   *indexclauses[indexclauses56,1683
} IndexClauseSet;57,1723
	Path	   *path;path62,1811
	List	   *quals;quals63,1877
	List	   *preds;preds64,1928
	Bitmapset  *clauseids;clauseids65,1989
	bool		unclassifiable;66,2059
} PathClauseUsage;67,2125
	IndexOptInfo *index;index72,2217
	int			indexcol;73,2270
} ec_member_matches_arg;74,2327
create_index_paths(231,9540
consider_index_join_clauses(429,15993
consider_index_join_outer_rels(495,18837
get_join_index_paths(598,22611
eclass_already_used(676,24875
bms_equal_any(700,25396
get_index_paths(729,26328
build_index_paths(851,31116
build_paths_for_OR(1156,40573
generate_bitmap_or_paths(1251,43357
choose_bitmap_and(1358,45952
path_usage_comparator(1564,53283
bitmap_scan_cost_est(1597,53977
bitmap_and_cost_est(1631,54887
classify_index_clause_usage(1660,55847
find_indexpath_quals(1728,57962
find_list_position(1775,59085
check_index_only(1801,59456
get_loop_count(1913,63582
adjust_rowcount_for_semijoins(1966,65213
approximate_joinrel_size(2009,66519
match_restriction_clauses_to_index(2051,67581
match_join_clauses_to_index(2066,68083
match_eclass_clauses_to_index(2096,68896
match_clauses_to_index(2134,69993
match_clause_to_index(2167,71082
match_clause_to_indexcol(2286,75675
match_boolean_index_clause(2371,78160
match_opclause_to_indexcol(2457,80506
match_funcclause_to_indexcol(2576,83902
get_index_clause_from_support(2622,85180
match_saopclause_to_indexcol(2687,86708
match_rowcompare_to_indexcol(2754,88549
expand_indexqual_rowcompare(2859,92244
match_pathkeys_to_index(3079,99083
match_clause_to_ordering_op(3194,102954
check_index_predicates(3308,106343
ec_member_matches_indexcol(3441,110906
relation_has_unique_index_for(3499,113360
indexcol_is_bool_constant_for_query(3670,118363
match_index_to_operand(3719,119898
is_pseudo_constant_for_index(3804,122456

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/path/joinpath.c,722
set_join_pathlist_hook_type set_join_pathlist_hook 27,749
#define PATH_PARAM_BY_PARENT(33,915
#define PATH_PARAM_BY_REL_SELF(36,1056
#define PATH_PARAM_BY_REL(39,1176
add_paths_to_joinrel(117,4433
allow_star_schema_join(345,13314
try_nestloop_path(363,13810
try_partial_nestloop_path(475,17154
try_mergejoin_path(557,19516
try_partial_mergejoin_path(652,21833
try_hashjoin_path(722,23649
try_partial_hashjoin_path(788,25592
clause_sides_match_join(849,27575
sort_inner_and_outer(881,28520
generate_mergejoin_paths(1083,35868
match_unsorted_outer(1331,43885
consider_parallel_mergejoin(1564,50743
consider_parallel_nestloop(1604,51898
hash_inner_and_outer(1676,54020
select_mergejoin_clauses(1931,62424

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/util/joininfo.c,106
have_relevant_joinclause(36,1120
add_join_clause_to_rels(95,2594
remove_join_clause_from_rels(122,3321

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/util/paramassign.c,447
assign_param_for_var(66,3100
replace_outer_var(119,4592
assign_param_for_placeholdervar(148,5418
replace_outer_placeholdervar(196,6839
replace_outer_agg(223,7648
replace_outer_grouping(269,9003
replace_nestloop_param_var(315,10342
replace_nestloop_param_placeholdervar(364,11704
process_subquery_nestloop_params(428,14016
identify_current_nestloop_params(508,16206
generate_new_exec_param(557,17676
assign_special_exec_param(584,18569

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/util/pathnode.c,2550
	COSTS_EQUAL,40,1046
	COSTS_BETTER1,41,1098
	COSTS_BETTER2,42,1157
	COSTS_DIFFERENT	43,1216
} PathCostComparison;44,1283
#define STD_FUZZ_FACTOR 51,1534
compare_path_costs(71,2261
compare_fractional_path_costs(117,3393
compare_path_costs_fuzzily(166,5427
#define CONSIDER_PATH_STARTUP_COST(168,5502
#undef CONSIDER_PATH_STARTUP_COST213,6884
set_cheapest(244,8296
add_path(422,15060
add_path_precheck(644,22718
add_partial_path(749,26946
add_partial_path_precheck(867,30272
create_seqscan_path(929,32386
create_samplescan_path(954,33120
create_index_path(997,34735
create_bitmap_heap_path(1046,36262
create_bitmap_and_path(1079,37220
create_bitmap_or_path(1131,38771
create_tidscan_path(1183,40334
create_append_path(1215,41277
append_total_cost_compare(1337,45543
append_startup_cost_compare(1359,46205
create_merge_append_path(1377,46656
create_group_result_path(1479,49643
create_material_path(1527,51109
create_unique_path(1566,52349
create_gather_merge_path(1786,58971
translate_sub_tlist(1851,60948
create_gather_path(1877,61452
create_subqueryscan_path(1916,62551
create_functionscan_path(1944,63436
create_tablefuncscan_path(1970,64163
create_valuesscan_path(1996,64889
create_ctescan_path(2022,65614
create_namedtuplestorescan_path(2047,66341
create_resultscan_path(2073,67094
create_worktablescan_path(2099,67817
create_foreignscan_path(2132,68989
create_foreign_join_path(2176,70536
create_foreign_upper_path(2226,72433
calc_nestloop_required_outer(2266,73584
calc_non_nestloop_required_outer(2299,74587
create_nestloop_path(2332,75775
create_mergejoin_path(2420,78750
create_hashjoin_path(2486,81202
create_projection_path(2552,83640
apply_projection_to_path(2643,87017
create_set_projection_path(2732,89707
create_incremental_sort_path(2801,91969
create_sort_path(2850,93534
create_group_path(2894,94915
create_upper_unique_path(2953,96792
create_agg_path(3005,98654
create_groupingsets_path(3072,100898
create_minmaxagg_path(3233,105363
create_windowagg_path(3304,107538
create_setop_path(3366,109758
create_recursiveunion_path(3428,111873
create_lockrows_path(3473,113312
create_modifytable_path(3532,115592
create_limit_path(3634,119452
adjust_limit_rows_costs(3689,121388
reparameterize_path(3757,123361
reparameterize_path_by_child(3875,126995
#define FLAT_COPY_PATH(3879,127089
#define ADJUST_CHILD_ATTRS(3883,127227
#define REPARAMETERIZE_CHILD_PATH(3889,127422
#define REPARAMETERIZE_CHILD_PATH_LIST(3896,127590
reparameterize_pathlist_by_child(4143,134052

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/util/restrictinfo.c,389
make_restrictinfo(59,1840
make_restrictinfo_internal(102,3015
make_sub_restrictinfos(228,7386
commute_restrictinfo(306,9760
restriction_is_or_clause(361,11495
restriction_is_securely_promotable(376,11822
get_actual_clauses(399,12462
extract_actual_clauses(422,12917
extract_actual_join_clauses(449,13588
join_clause_is_movable_to(504,15389
join_clause_is_movable_into(577,18900

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/util/var.c,1191
	Relids		varnos;33,886
	int			sublevels_up;34,903
} pull_varnos_context;35,924
	Bitmapset  *varattnos;varattnos39,965
	Index		varno;40,989
} pull_varattnos_context;41,1004
	List	   *vars;vars45,1048
	int			sublevels_up;46,1064
} pull_vars_context;47,1085
	int			var_location;51,1124
	int			sublevels_up;52,1145
} locate_var_of_level_context;53,1166
	List	   *varlist;varlist57,1215
	int			flags;58,1234
} pull_var_clause_context;59,1248
	Query	   *query;query63,1293
	int			sublevels_up;64,1331
	bool		possible_sublink;65,1352
	bool		inserted_sublink;66,1416
} flatten_join_alias_vars_context;67,1475
pull_varnos(95,2727
pull_varnos_of_level(120,3273
pull_varnos_walker(140,3702
pull_varattnos(219,6362
pull_varattnos_walker(232,6615
pull_vars_of_level(263,7370
pull_vars_walker(283,7788
contain_var_clause(331,8981
contain_var_clause_walker(337,9076
contain_vars_of_level(369,9913
contain_vars_of_level_walker(380,10154
locate_var_of_level(437,11765
locate_var_of_level_walker(453,12127
pull_var_clause(535,14783
pull_var_clause_walker(555,15449
flatten_join_alias_vars(670,19507
flatten_join_alias_vars_mutator(685,19949
alias_relid_set(826,24330

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/util/orclauses.c,142
extract_restriction_or_clauses(76,3449
is_safe_restriction_clause_for(132,5040
extract_or_clause(162,5917
consider_new_or_clause(260,9172

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/util/clauses.c,3639
	PlannerInfo *root;root59,1564
	AggSplit	aggsplit;60,1584
	AggClauseCosts *costs;costs61,1604
} get_agg_clause_costs_context;62,1628
	ParamListInfo boundParams;66,1678
	PlannerInfo *root;root67,1706
	List	   *active_fns;active_fns68,1726
	Node	   *case_val;case_val69,1748
	bool		estimate;70,1768
} eval_const_expressions_context;71,1785
	int			nargs;75,1837
	List	   *args;args76,1851
	int		   *usecounts;usecounts77,1867
} substitute_actual_parameters_context;78,1888
	int			nargs;82,1946
	List	   *args;args83,1960
	int			sublevels_up;84,1976
} substitute_actual_srf_parameters_context;85,1997
	char	   *proname;proname89,2059
	char	   *prosrc;prosrc90,2078
} inline_error_callback_arg;91,2096
	char		max_hazard;95,2143
	char		max_interesting;96,2207
	List	   *safe_param_ids;safe_param_ids97,2274
} max_parallel_hazard_context;98,2344
contain_agg_clause(181,6539
contain_agg_clause_walker(187,6638
get_agg_clause_costs(231,8260
get_agg_clause_costs_walker(243,8550
contain_window_function(496,16510
find_window_functions(509,16825
find_window_functions_walker(521,17157
expression_returns_set_rows(571,18901
contain_subplans(612,20013
contain_subplans_walker(618,20108
contain_mutable_functions(647,21126
contain_mutable_functions_checker(653,21239
contain_mutable_functions_walker(659,21377
contain_volatile_functions(726,23743
contain_volatile_functions_checker(732,23858
contain_volatile_functions_walker(738,23996
contain_volatile_functions_not_nextval(776,25003
contain_volatile_functions_not_nextval_checker(782,25142
contain_volatile_functions_not_nextval_walker(789,25323
max_parallel_hazard(837,27019
is_parallel_safe(856,27537
max_parallel_hazard_test(897,28856
max_parallel_hazard_checker(925,29641
max_parallel_hazard_walker(932,29822
contain_nonstrict_functions(1096,35191
contain_nonstrict_functions_checker(1102,35308
contain_nonstrict_functions_walker(1108,35420
contain_context_dependent_node(1245,39194
#define CCDN_CASETESTEXPR_OK	1252,39326
contain_context_dependent_node_walker(1255,39405
contain_leaked_vars(1329,41816
contain_leaked_vars_checker(1335,41917
contain_leaked_vars_walker(1341,42028
find_nonnullable_rels(1503,46790
find_nonnullable_rels_walker(1509,46897
find_nonnullable_vars(1728,53864
find_nonnullable_vars_walker(1734,53971
find_forced_null_vars(1921,59420
find_forced_null_var(1980,61167
is_strict_saop(2029,62385
is_pseudo_constant_clause(2091,64648
is_pseudo_constant_clause_relids(2111,65265
NumRelids(2133,65815
CommuteOpExpr(2148,66071
rowtype_field_matches(2187,67215
eval_const_expressions(2255,69822
estimate_expression_value(2288,71164
#define ece_generic_processing(2310,72194
#define ece_all_arguments_const(2319,72548
#define ece_evaluate_expr(2323,72712
eval_const_expressions_mutator(2333,72996
contain_non_const_walker(3550,111000
ece_function_is_safe(3566,111399
apply_const_relabel(3588,112107
simplify_or_arguments(3656,114305
simplify_and_arguments(3762,117675
simplify_boolean_equality(3856,120449
simplify_function(3925,122598
expand_function_arguments(4032,126254
reorder_function_arguments(4075,127421
add_function_defaults(4145,129126
fetch_function_defaults(4170,129908
recheck_cast_function_args(4205,131002
evaluate_function(4249,132548
inline_function(4376,137168
substitute_actual_parameters(4707,147567
substitute_actual_parameters_mutator(4720,147863
sql_inline_error_callback(4749,148761
evaluate_expr(4773,149441
inline_set_returning_function(4865,152355
substitute_actual_srf_parameters(5123,160676
substitute_actual_srf_parameters_mutator(5138,161006

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/util/relnode.c,1055
typedef struct JoinHashEntry35,907
	Relids		join_relids;37,938
	RelOptInfo *join_rel;join_rel38,993
} JoinHashEntry;39,1016
setup_simple_rel_arrays(83,2768
expand_planner_arrays(152,4769
build_simple_rel(194,5905
find_base_rel(374,11481
build_join_rel_hash(397,11885
find_join_rel(439,12932
set_foreign_rel_properties(502,14737
add_join_rel(540,15910
build_join_rel(577,17095
build_child_join_rel(785,24525
min_join_parameterization(929,29582
build_joinrel_tlist(972,31226
build_joinrel_restrictlist(1058,34690
build_joinrel_joinlist(1088,35582
subbuild_joinrel_restrictlist(1106,36110
subbuild_joinrel_joinlist(1140,36981
fetch_upper_rel(1192,38566
find_childrel_parents(1243,40157
get_baserel_parampathinfo(1279,41259
get_joinrel_parampathinfo(1369,44485
get_appendrel_parampathinfo(1576,52142
find_param_path_info(1608,53084
build_joinrel_partition_info(1630,53561
have_partkey_equi_join(1701,56008
match_expr_to_partition_keys(1825,59444
set_joinrel_partition_key_exprs(1874,60640
build_child_join_reltarget(2013,65749

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/util/inherit.c,215
expand_inherited_rtentry(79,3054
expand_partitioned_rtentry(284,9304
expand_single_inheritance_child(414,13851
translate_col_privs(602,21096
expand_appendrel_subquery(652,22651
apply_child_basequals(693,23895

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/util/plancat.c,932
int			constraint_exclusion 57,1530
get_relation_info_hook_type get_relation_info_hook 60,1653
get_relation_info(113,3888
get_relation_foreign_keys(488,16266
infer_arbiter_indexes(601,20483
infer_collation_opclass_match(867,29014
estimate_rel_size(949,31370
get_rel_data_width(1090,35746
get_relation_data_width(1132,36664
get_relation_constraints(1172,37896
get_relation_statistics(1294,41282
relation_excluded_by_constraints(1387,43748
build_physical_tlist(1583,50717
build_index_tlist(1704,53465
restriction_selectivity(1766,54949
join_selectivity(1805,55951
function_selectivity(1846,57014
add_function_cost(1908,58869
get_function_rows(1969,60564
has_unique_index(2027,62055
has_row_triggers(2059,62913
has_stored_generated_columns(2100,63815
set_relation_partition_info(2124,64369
find_partition_scheme(2150,65186
set_baserel_partition_key_exprs(2257,68715
set_baserel_partition_constraint(2325,70634

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/util/placeholder.c,342
make_placeholder_expr(39,1068
find_placeholder_info(69,2102
find_placeholders_in_jointree(144,4693
find_placeholders_recurse(163,5210
find_placeholders_in_expr(213,6232
update_placeholder_eval_levels(265,8139
fix_placeholder_input_needed_levels(350,11068
add_placeholders_to_base_rels(379,12060
add_placeholders_to_joinrel(411,12988

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/util/appendinfo.c,467
	PlannerInfo *root;root29,736
	int			nappinfos;30,756
	AppendRelInfo **appinfos;appinfos31,774
} adjust_appendrel_attrs_context;32,801
make_append_rel_info(49,1287
make_inh_translation_list(78,2399
adjust_appendrel_attrs(194,6221
adjust_appendrel_attrs_mutator(244,7439
adjust_appendrel_attrs_multilevel(502,15196
adjust_child_relids(541,16299
adjust_child_relids_multilevel(576,17179
adjust_inherited_tlist(640,19115
find_appinfos_by_relids(728,21379

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/util/predtest.c,2685
#define MAX_SAOP_ARRAY_SIZE	39,1168
	CLASS_ATOM,51,1631
	CLASS_AND,52,1686
	CLASS_OR	53,1738
} PredClass;54,1787
typedef struct PredIterInfoData *PredIterInfo;PredIterInfo56,1801
typedef struct PredIterInfoData58,1849
	void	   *state;state61,1925
	List	   *state_list;state_list62,1942
	void		(*startup_fn)startup_fn64,2002
	Node	   *(*next_fn)next_fn66,2099
	void		(*cleanup_fn)cleanup_fn68,2191
} PredIterInfoData;69,2233
#define iterate_begin(71,2254
#define iterate_end(77,2418
predicate_implied_by(151,6052
predicate_refuted_by(221,8903
predicate_implied_by_recurse(289,11448
predicate_refuted_by_recurse(530,17194
predicate_classify(825,24182
list_startup_fn(907,26529
list_next_fn(914,26687
list_cleanup_fn(927,26903
boolexpr_startup_fn(937,27082
	OpExpr		opexpr;949,27364
	Const		constexpr;950,27381
	int			next_elem;951,27400
	int			num_elems;952,27418
	Datum	   *elem_values;elem_values953,27436
	bool	   *elem_nulls;elem_nulls954,27460
} ArrayConstIterState;955,27482
arrayconst_startup_fn(958,27518
arrayconst_next_fn(1007,29117
arrayconst_cleanup_fn(1020,29492
	OpExpr		opexpr;1036,29847
	ListCell   *next;next1037,29864
} ArrayExprIterState;1038,29883
arrayexpr_startup_fn(1041,29918
arrayexpr_next_fn(1068,30814
arrayexpr_cleanup_fn(1080,31115
predicate_implied_by_simple_clause(1117,32578
predicate_refuted_by_simple_clause(1179,34897
extract_not_arg(1249,37008
extract_strong_not_arg(1277,37606
clause_is_strict_for(1323,39173
#define BTLT 1525,46554
#define BTLE 1526,46588
#define BTEQ 1527,46627
#define BTGE 1528,46662
#define BTGT 1529,46704
#define BTNE 1530,46741
#define none 1533,46833
static const bool BT_implies_table[BT_implies_table1535,46849
static const bool BT_refutes_table[BT_refutes_table1548,47254
static const StrategyNumber BT_implic_table[BT_implic_table1561,47659
static const StrategyNumber BT_refute_table[BT_refute_table1574,48073
operator_predicate_proof(1642,51802
operator_same_subexprs_proof(1895,59163
typedef struct OprProofCacheKey1937,60743
	Oid			pred_op;1939,60777
	Oid			clause_op;1940,60819
} OprProofCacheKey;1941,60860
typedef struct OprProofCacheEntry1943,60881
	OprProofCacheKey key;1946,60958
	bool		have_implic;1948,60982
	bool		have_refute;1949,61043
	bool		same_subexprs_implies;1950,61103
	bool		same_subexprs_refutes;1951,61174
	Oid			implic_test_op;1952,61245
	Oid			refute_test_op;1953,61313
} OprProofCacheEntry;1954,61381
static HTAB *OprProofCacheHash OprProofCacheHash1956,61404
lookup_proof_cache(1964,61567
operator_same_subexprs_lookup(2169,67398
get_btree_test_op(2194,68202
InvalidateOprProofCacheCallBack(2210,68525

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/util/tlist.c,1670
#define IS_SRF_CALL(25,676
	Node	   *expr;expr36,1084
	Index		sortgroupref;37,1143
} split_pathtarget_item;38,1202
	List	   *input_target_exprs;input_target_exprs43,1288
	List	   *level_srfs;level_srfs45,1410
	List	   *level_input_vars;level_input_vars46,1475
	List	   *level_input_srfs;level_input_srfs47,1541
	List	   *current_input_vars;current_input_vars49,1657
	List	   *current_input_srfs;current_input_srfs50,1724
	int			current_depth;52,1860
	Index		current_sgref;53,1921
} split_pathtarget_context;54,1987
tlist_member(73,2671
tlist_member_ignore_relabel(94,3135
tlist_member_match_var(124,3906
add_to_flat_tlist(154,4598
get_tlist_exprs(185,5150
count_nonjunk_tlist_entries(208,5486
tlist_same_exprs(240,6556
tlist_same_datatypes(270,7228
tlist_same_collations(304,7945
apply_tlist_labeling(340,8757
get_sortgroupref_tle(367,9468
get_sortgroupclause_tle(389,9940
get_sortgroupclause_expr(401,10247
get_sortgrouplist_exprs(414,10556
get_sortgroupref_clause(444,11398
get_sortgroupref_clause_noerr(465,11846
extract_grouping_ops(485,12192
extract_grouping_collations(511,12753
extract_grouping_cols(536,13355
grouping_is_sortable(562,13978
grouping_is_hashable(582,14375
make_pathtarget_from_tlist(613,15264
make_tlist_from_pathtarget(639,15764
copy_pathtarget(672,16365
create_empty_pathtarget(696,16975
add_column_to_pathtarget(710,17303
add_new_column_to_pathtarget(746,18480
add_new_columns_to_pathtarget(757,18747
apply_pathtarget_labeling_to_tlist(779,19321
split_pathtarget_at_srfs(886,23578
split_pathtarget_walker(1082,29646
add_sp_item_to_pathtarget(1207,34146
add_sp_items_to_pathtarget(1253,35219

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/plan/planmain.c,23
query_planner(55,2100

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/plan/planner.c,3168
double		cursor_tuple_fraction 69,1849
int			force_parallel_mode 70,1912
bool		parallel_leader_participation 71,1960
planner_hook_type planner_hook 74,2056
create_upper_paths_hook_type create_upper_paths_hook 77,2175
#define EXPRKIND_QUAL	81,2292
#define EXPRKIND_TARGET	82,2319
#define EXPRKIND_RTFUNC	83,2348
#define EXPRKIND_RTFUNC_LATERAL	84,2377
#define EXPRKIND_VALUES	85,2412
#define EXPRKIND_VALUES_LATERAL	86,2441
#define EXPRKIND_LIMIT	87,2476
#define EXPRKIND_APPINFO	88,2504
#define EXPRKIND_PHV	89,2533
#define EXPRKIND_TABLESAMPLE	90,2559
#define EXPRKIND_ARBITER_ELEM	91,2591
#define EXPRKIND_TABLEFUNC	92,2625
#define EXPRKIND_TABLEFUNC_LATERAL	93,2657
	List	   *activeWindows;activeWindows98,2761
	List	   *groupClause;groupClause99,2815
} standard_qp_extra;100,2873
	List	   *rollups;rollups108,2954
	List	   *hash_sets_idx;hash_sets_idx109,2973
	double		dNumHashGroups;110,2998
	bool		any_hashable;111,3023
	Bitmapset  *unsortable_refs;unsortable_refs112,3044
	Bitmapset  *unhashable_refs;unhashable_refs113,3074
	List	   *unsortable_sets;unsortable_sets114,3104
	int		   *tleref_to_colnum_map;tleref_to_colnum_map115,3131
} grouping_sets_data;116,3163
	WindowClause *wc;wc124,3350
	List	   *uniqueOrder;uniqueOrder125,3369
} WindowClauseSortData;127,3467
planner(267,9701
standard_planner(280,10036
subquery_planner(597,21488
preprocess_expression(1049,36862
preprocess_qual_conditions(1140,40138
preprocess_phv_expression(1184,41431
inheritance_planner(1209,42433
grouping_planner(1833,65044
preprocess_grouping_sets(2438,85592
remap_to_groupclause_idx(2613,90850
preprocess_rowmarks(2650,91506
select_rowmark_type(2761,94575
preprocess_limit(2827,96702
limit_needed(3012,101753
remove_useless_groupby_columns(3071,103442
preprocess_groupclause(3232,108779
extract_rollup_sets(3335,112196
reorder_grouping_sets(3547,117609
standard_qp_callback(3593,118631
get_number_of_groups(3683,121848
create_grouping_paths(3804,124907
make_grouping_rel(3914,128651
is_degenerate_grouping(3967,130183
create_degenerate_grouping_paths(3988,130984
create_ordinary_grouping_paths(4053,132772
consider_groupingsets_paths(4189,137405
create_window_paths(4550,148515
create_one_window_path(4634,151166
create_distinct_paths(4727,154000
create_ordered_paths(4936,160899
make_group_input_target(5207,169729
make_partial_grouping_target(5294,172506
mark_partial_aggref(5397,175385
postprocess_setop_tlist(5432,176567
select_active_windows(5465,177552
common_prefix_cmp(5545,180643
make_window_input_target(5614,183363
make_pathkeys_for_window(5732,186770
make_sort_input_target(5826,191600
get_cheapest_fractional_path(5997,196567
adjust_paths_for_srfs(6040,197954
expression_planner(6156,202136
expression_planner_with_deps(6183,202939
plan_cluster_use_sort(6236,204403
plan_create_index_workers(6354,208118
add_paths_to_grouping_rel(6482,211749
create_partial_grouping_paths(6852,222134
gather_grouping_paths(7267,234978
can_partial_agg(7355,237224
apply_scanjoin_target_to_paths(7397,238561
create_partitionwise_grouping_paths(7629,246915
group_by_has_partkey(7769,251202

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/plan/subselect.c,1796
typedef struct convert_testexpr_context42,1209
	PlannerInfo *root;root44,1251
	List	   *subst_nodes;subst_nodes45,1271
} convert_testexpr_context;46,1331
typedef struct process_sublinks_context48,1360
	PlannerInfo *root;root50,1402
	bool		isTopQual;51,1422
} process_sublinks_context;52,1440
typedef struct finalize_primnode_context54,1469
	PlannerInfo *root;root56,1512
	Bitmapset  *paramids;paramids57,1532
} finalize_primnode_context;58,1598
typedef struct inline_cte_walker_context60,1628
	const char *ctename;ctename62,1671
	int			levelsup;63,1738
	int			refcount;64,1755
	Query	   *ctequery;ctequery65,1810
} inline_cte_walker_context;66,1858
get_first_col_type(117,4098
make_subplan(161,5904
build_subplan(319,11422
generate_subquery_params(587,19913
generate_subquery_vars(620,20694
convert_testexpr(649,21395
convert_testexpr_mutator(661,21643
subplan_is_hashable(716,23539
testexpr_is_hashable(738,24112
hash_ok_operator(782,25231
SS_process_ctes(830,26561
contain_dml(1007,32428
contain_dml_walker(1013,32509
contain_outer_selfref(1034,32973
contain_outer_selfref_walker(1048,33241
inline_cte(1089,34195
inline_cte_walker(1106,34658
convert_ANY_sublink_to_join(1212,38349
convert_EXISTS_sublink_to_join(1319,41354
simplify_EXISTS_query(1482,46953
convert_EXISTS_to_ANY(1570,50090
SS_replace_correlation_vars(1809,58598
replace_correlation_vars_mutator(1816,58782
SS_process_sublinks(1854,59871
process_sublinks_mutator(1864,60091
SS_identify_outer_params(2001,64230
SS_charge_for_initplans(2063,66291
SS_attach_initplans(2120,68035
SS_finalize_plan(2135,68489
finalize_plan(2173,70229
finalize_primnode(2784,87805
finalize_agg_primnode(2849,89808
SS_make_initplan_output_param(2876,90643
SS_make_initplan_from_plan(2892,91169

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/plan/createplan.c,3891
#define CP_EXACT_TLIST	68,2360
#define CP_SMALL_TLIST	69,2430
#define CP_LABEL_TLIST	70,2490
#define CP_IGNORE_TLIST	71,2560
create_plan(321,15445
create_plan_recurse(372,17121
create_scan_plan(537,21305
build_path_tlist(777,27820
use_physical_tlist(817,28782
get_gating_quals(938,32175
create_gating_plan(958,32721
create_join_plan(1017,34659
create_append_plan(1077,36186
create_merge_append_plan(1287,42902
create_group_result_plan(1448,48185
create_project_set_plan(1473,48720
create_material_plan(1499,49324
create_unique_plan(1527,49991
create_gather_plan(1726,56167
create_gather_merge_plan(1764,57172
create_projection_plan(1823,59103
inject_projection_plan(1924,62783
change_plan_targetlist(1956,63845
create_sort_plan(1984,64604
create_incrementalsort_plan(2018,65617
create_group_plan(2045,66380
create_upper_unique_plan(2084,67382
create_agg_plan(2112,68040
remap_groupColIdx(2158,69318
create_groupingsets_plan(2196,70364
create_minmaxagg_plan(2359,74765
create_windowagg_plan(2430,77110
create_setop_plan(2535,80377
create_recursiveunion_plan(2571,81277
create_lockrows_plan(2607,82226
create_modifytable_plan(2630,82766
create_limit_plan(2691,84708
create_seqscan_plan(2752,86510
create_samplescan_plan(2790,87565
create_indexscan_plan(2841,89171
create_bitmap_scan_plan(3014,95414
create_bitmap_subplan(3144,100639
create_tidscan_plan(3352,107281
create_subqueryscan_plan(3449,110746
create_functionscan_plan(3499,112228
create_tablefuncscan_plan(3542,113588
create_valuesscan_plan(3585,114932
create_ctescan_plan(3629,116255
create_namedtuplestorescan_plan(3723,118881
create_resultscan_plan(3762,120014
create_worktablescan_plan(3799,121108
create_foreignscan_plan(3859,122920
create_customscan_plan(4003,127658
create_nestloop_plan(4074,129727
create_mergejoin_plan(4150,132036
create_hashjoin_plan(4457,142491
replace_nestloop_params(4646,148457
replace_nestloop_params_mutator(4653,148636
fix_indexqual_references(4737,151891
fix_indexorderby_references(4778,153098
fix_indexqual_clause(4807,153865
fix_indexqual_operand(4878,155880
get_switched_clauses(4953,158106
order_qual_clauses(5030,161118
		Node	   *clause;clause5034,161192
		Cost		cost;5035,161211
		Index		security_level;5036,161225
	} QualItem;5037,161250
copy_generic_path_info(5124,163684
copy_plan_costsize(5139,164116
label_sort_with_costsize(5161,164949
bitmap_subplan_mark_shared(5193,165874
make_seqscan(5223,167067
make_samplescan(5240,167374
make_indexscan(5259,167750
make_indexonlyscan(5290,168519
make_bitmap_indexscan(5317,169154
make_bitmap_heapscan(5338,169652
make_tidscan(5358,170083
make_subqueryscan(5377,170450
make_functionscan(5396,170832
make_tablefuncscan(5417,171288
make_valuesscan(5436,171685
make_ctescan(5455,172065
make_namedtuplestorescan(5476,172486
make_worktablescan(5496,172934
make_foreignscan(5515,173312
make_recursive_union(5549,174286
make_bitmap_and(5605,175718
make_bitmap_or(5620,175990
make_nestloop(5635,176260
make_hashjoin(5660,176819
make_hash(5691,177557
make_mergejoin(5714,178013
make_sort(5755,179104
make_incrementalsort(5785,179821
prepare_sort_from_pathkeys(5851,182569
find_ec_member_for_tle(6078,189345
make_sort_from_pathkeys(6130,190658
make_incrementalsort_from_pathkeys(6165,191708
make_sort_from_sortclauses(6199,192625
make_sort_from_groupcols(6248,194254
make_material(6289,195478
materialize_finished_plan(6311,196077
make_agg(6345,197084
make_windowagg(6379,198058
make_group(6418,199321
make_unique_from_sortclauses(6448,200014
make_unique_from_pathkeys(6497,201360
make_gather(6603,204286
make_setop(6632,204957
make_lockrows(6688,206463
make_limit(6709,206843
make_result(6737,207537
make_project_set(6758,207915
make_modifytable(6777,208239
is_projection_capable_path(6925,213042
is_projection_capable_plan(6970,214060

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/plan/analyzejoins.c,432
remove_useless_joins(61,2302
clause_sides_match_join(127,4428
join_is_removable(159,5441
remove_rel_from_query(312,10904
remove_rel_from_joinlist(454,15892
reduce_unique_semijoins(508,17223
rel_supports_distinctness(585,19617
rel_is_distinct_for(641,21582
query_supports_distinctness(738,24652
query_is_distinct_for(775,26021
distinct_col_search(924,30356
innerrel_is_unique(964,31954
is_innerrel_unique_for(1072,35519

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/plan/setrefs.c,2262
	Index		varno;34,912
	AttrNumber	varattno;35,951
	AttrNumber	resno;36,999
} tlist_vinfo;37,1046
	List	   *tlist;tlist41,1079
	int			num_vars;42,1127
	bool		has_ph_vars;43,1185
	bool		has_non_vars;44,1245
	tlist_vinfo vars[vars45,1297
} indexed_tlist;46,1366
	PlannerInfo *root;root50,1401
	int			rtoffset;51,1421
} fix_scan_expr_context;52,1438
	PlannerInfo *root;root56,1481
	indexed_tlist *outer_itlist;outer_itlist57,1501
	indexed_tlist *inner_itlist;inner_itlist58,1531
	Index		acceptable_rel;59,1561
	int			rtoffset;60,1585
} fix_join_expr_context;61,1602
	PlannerInfo *root;root65,1645
	indexed_tlist *subplan_itlist;subplan_itlist66,1665
	Index		newvarno;67,1697
	int			rtoffset;68,1715
} fix_upper_expr_context;69,1732
#define ISREGCLASSCONST(78,2101
#define fix_scan_list(82,2227
set_plan_references(223,8780
add_rtes_to_flat_rtable(287,10583
flatten_unplanned_rtes(373,13410
flatten_rtes_walker(383,13682
add_rte_to_flat_rtable(419,14771
set_plan_refs(472,16508
set_indexonlyscan_references(1015,32136
set_subqueryscan_references(1056,33364
trivial_subqueryscan(1105,34741
clean_up_removed_plan_level(1163,36142
set_foreignscan_references(1184,36745
set_customscan_references(1253,38616
set_append_references(1319,40486
set_mergeappend_references(1383,42162
set_hash_references(1444,43744
offset_relid_set(1475,44545
copyVar(1497,45096
fix_expr_common(1519,45813
fix_param_node(1607,48016
fix_scan_expr(1637,49065
fix_scan_expr_mutator(1669,50026
fix_scan_expr_walker(1738,51940
set_join_references(1757,52614
set_upper_references(1901,57005
set_param_references(1961,58586
convert_combining_aggrefs(2016,60426
set_dummy_tlist_references(2085,62721
build_tlist_index(2152,64666
build_tlist_index_other_vars(2202,65961
search_indexed_tlist_for_var(2253,67229
search_indexed_tlist_for_non_var(2293,68319
search_indexed_tlist_for_sortgroupref(2333,69524
fix_join_expr(2397,71985
fix_join_expr_mutator(2415,72442
fix_upper_expr(2542,76576
fix_upper_expr_mutator(2558,76932
set_returning_clause_references(2661,80420
record_plan_function_dependency(2710,82004
record_plan_type_dependency(2750,83491
extract_query_dependencies(2791,84993
extract_query_dependencies_walker(2827,86034

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/plan/planagg.c,160
preprocess_minmax_aggregates(72,2568
find_minmax_aggs_walker(247,8735
build_minmax_path(342,11611
minmax_qp_callback(502,16701
fetch_agg_sort_op(521,17174

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/plan/initsplan.c,972
int			from_collapse_limit;38,1107
int			join_collapse_limit;39,1134
typedef struct PostponedQual43,1237
	Node	   *qual;qual45,1268
	Relids		relids;46,1330
} PostponedQual;47,1389
add_base_rels_to_query(105,3710
add_other_rels_to_query(143,4573
build_base_rel_tlists(182,5618
add_vars_to_targetlist(229,7185
find_lateral_references(303,9675
extract_lateral_references(351,11382
create_lateral_join_info(449,14214
deconstruct_jointree(686,21957
deconstruct_recurse(732,23484
process_security_barrier_quals(1083,34663
make_outerjoininfo(1149,36702
compute_semijoin_info(1397,45751
distribute_qual_to_rels(1614,53818
check_outerjoin_delay(2047,71148
check_equivalence_delay(2131,73913
check_redundant_nullability_qual(2166,74939
distribute_restrictinfo_to_rels(2204,75997
process_implied_equality(2288,78894
build_implied_join_equality(2353,80769
match_foreign_keys_to_quals(2411,82595
check_mergejoinable(2580,88103
check_hashjoinable(2617,89169

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_misc.c,83
avg_pool(34,863
print_pool(57,1389
print_gen(91,1972
print_edge_table(112,2400

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_erx.c,185
alloc_edge_table(54,1728
free_edge_table(74,2076
gimme_edge_table(93,2518
gimme_edge(152,4161
gimme_tour(194,5045
remove_gene(240,6120
gimme_gene(282,6990
edge_failure(373,9208

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_copy.c,19
geqo_copy(45,1422

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_pmx.c,13
pmx(47,1435

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_main.c,228
int			Geqo_effort;39,1132
int			Geqo_pool_size;40,1151
int			Geqo_generations;41,1173
double		Geqo_selection_bias;42,1197
double		Geqo_seed;43,1226
geqo(67,1729
gimme_pool_size(310,8275
gimme_number_generations(342,8997

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_px.c,12
px(47,1422

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_random.c,40
geqo_set_seed(20,469
geqo_rand(35,876

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_selection.c,45
geqo_selection(54,1732
linear_rand(92,2774

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_mutation.c,23
geqo_mutation(41,1323

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_eval.c,164
	RelOptInfo *joinrel;joinrel38,1064
	int			size;39,1126
} Clump;40,1182
geqo_eval(57,1592
gimme_tree(163,5503
merge_clump(238,7880
desirable_join(325,10358

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_pool.c,172
alloc_pool(42,1138
free_pool(69,1756
random_init_pool(91,2106
sort_pool(135,3211
compare(145,3391
alloc_chromo(162,3756
free_chromo(176,4046
spread_chromo(187,4286

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_recombination.c,69
init_tour(34,923
alloc_city_table(69,1918
free_city_table(87,2262

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_ox2.c,13
ox2(47,1423

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_cx.c,12
cx(48,1403

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/geqo/geqo_ox1.c,13
ox1(47,1404

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/prep/prepunion.c,394
plan_set_operations(103,3873
recurse_set_operations(207,7536
generate_recursion_path(433,14618
generate_union_paths(539,17434
generate_nonunion_paths(699,22111
plan_union_children(876,27429
make_union_unique(935,29045
postprocess_setop_rel(998,30753
choose_hashed_setop(1016,31191
generate_setop_tlist(1121,34622
generate_append_tlist(1263,39230
generate_setop_grouplist(1391,42536

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/prep/preptlist.c,87
preprocess_targetlist(69,2758
expand_targetlist(256,8214
get_plan_rowmark(425,13046

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/prep/prepjointree.c,2333
typedef struct pullup_replace_vars_context43,1214
	PlannerInfo *root;root45,1259
	List	   *targetlist;targetlist46,1279
	RangeTblEntry *target_rte;target_rte47,1342
	Relids		relids;48,1392
	bool	   *outer_hasSubLinks;outer_hasSubLinks50,1511
	int			varno;51,1575
	bool		need_phvs;52,1615
	bool		wrap_non_vars;53,1668
	Node	  **rv_cache;rv_cache54,1730
} pullup_replace_vars_context;55,1785
typedef struct reduce_outer_joins_state57,1817
	Relids		relids;59,1859
	bool		contains_outer;60,1916
	List	   *sub_states;sub_states61,1981
} reduce_outer_joins_state;62,2048
replace_empty_jointree(148,6200
pull_up_sublinks(206,8371
pull_up_sublinks_jointree_recurse(233,9119
pull_up_sublinks_qual_recurse(387,14091
preprocess_function_rtes(637,22194
pull_up_subqueries(678,23326
pull_up_subqueries_recurse(728,25792
pull_up_simple_subquery(880,30311
pull_up_simple_union_all(1215,41874
pull_up_union_leaf_queries(1296,44564
make_setop_translation_list(1363,46908
is_simple_subquery(1401,48012
pull_up_simple_values(1535,52648
is_simple_values(1631,55399
pull_up_constant_function(1690,57580
is_simple_union_all(1816,61373
is_simple_union_all_recurse(1844,62099
is_safe_append_member(1884,63213
jointree_contains_lateral_outer_refs(1932,64878
perform_pullup_replace_vars(2004,66705
replace_vars_in_jointree(2092,69991
pullup_replace_vars(2213,73647
pullup_replace_vars_callback(2223,73904
pullup_replace_vars_subquery(2416,80496
flatten_simple_union_all(2443,81492
reduce_outer_joins(2561,86185
reduce_outer_joins_pass1(2590,87254
reduce_outer_joins_pass2(2662,89331
remove_useless_result_rtes(2974,100585
remove_useless_results_recurse(3013,101904
get_result_relid(3218,108514
remove_result_refs(3248,109510
	Relids		relids;3281,110522
	int			sublevels_up;3282,110539
} find_dependent_phvs_context;3283,110560
find_dependent_phvs_walker(3286,110604
find_dependent_phvs(3323,111551
find_dependent_phvs_in_jointree(3341,111952
	int			varno;3399,113737
	int			sublevels_up;3400,113751
	Relids		subrelids;3401,113772
} substitute_phv_relids_context;3402,113792
substitute_phv_relids_walker(3405,113838
substitute_phv_relids(3449,115011
fix_append_rel_relids(3477,115857
get_relids_in_jointree(3515,116944
get_relids_for_join(3559,117911
find_jointree_node_for_rel(3576,118320

/home/seinoyu/pgsql/master/postgresql/src/backend/optimizer/prep/prepqual.c,154
negate_clause(74,3117
canonicalize_qual(292,9202
pull_ands(322,9954
pull_ors(348,10515
find_duplicate_ors(405,12642
process_duplicate_ors(516,15313

/home/seinoyu/pgsql/master/postgresql/src/backend/lib/bloomfilter.c,381
#define MAX_HASH_FUNCS	42,1708
struct bloom_filter44,1736
	int			k_hash_funcs;47,1816
	uint64		seed;48,1837
	uint64		m;50,1920
	unsigned char bitset[bitset51,1932
bloom_create(88,3722
bloom_free(127,4969
bloom_add_element(136,5066
bloom_lacks_element(158,5656
bloom_prop_bits_set(188,6605
my_bloom_power(211,7427
optimal_k(230,7842
k_hashes(251,8554
mod_m(289,9420

/home/seinoyu/pgsql/master/postgresql/src/backend/lib/integerset.c,2253
#define SIMPLE8B_MAX_VALUES_PER_CODEWORD 85,2994
#define MAX_INTERNAL_ITEMS	96,3369
#define MAX_LEAF_ITEMS	97,3399
#define MAX_TREE_LEVELS	111,3882
typedef struct intset_node intset_node;135,5097
typedef struct intset_leaf_node intset_leaf_node;136,5137
typedef struct intset_internal_node intset_internal_node;137,5187
struct intset_node140,5302
	uint16		level;142,5323
	uint16		num_items;143,5371
struct intset_internal_node147,5451
	uint16		level;150,5526
	uint16		num_items;151,5573
	uint64		values[values157,5731
	intset_node *downlinks[downlinks158,5768
	uint64		first;164,5850
	uint64		codeword;165,5901
} leaf_item;166,5969
#define MAX_VALUES_PER_LEAF_ITEM	168,5983
struct intset_leaf_node170,6056
	uint16		level;173,6127
	uint16		num_items;174,6162
	intset_leaf_node *next;next176,6183
	leaf_item	items[items178,6238
#define MAX_BUFFERED_VALUES	188,6666
struct IntegerSet198,7068
	MemoryContext context;208,7360
	uint64		mem_used;209,7384
	uint64		num_entries;211,7404
	uint64		highest_value;212,7461
	int			num_levels;223,7884
	intset_node *root;root224,7929
	intset_node *rightmost_nodes[rightmost_nodes225,7967
	intset_leaf_node *leftmost_leaf;leftmost_leaf226,8015
	uint64		buffered_values[buffered_values231,8159
	int			num_buffered_values;232,8206
	bool		iter_active;248,8832
	const uint64 *iter_values;iter_values250,8885
	int			iter_num_values;251,8913
	int			iter_valueno;252,8979
	intset_leaf_node *iter_node;iter_node254,9037
	int			iter_itemno;255,9091
	uint64		iter_values_buf[iter_values_buf257,9153
intset_create(285,10146
intset_new_internal_node(317,10823
intset_new_leaf_node(332,11153
intset_num_entries(351,11498
intset_memory_usage(360,11641
intset_add_member(371,11788
intset_flush_buffered_values(397,12555
intset_update_upper(482,14779
intset_is_member(555,16673
intset_begin_iterate(627,18336
intset_iterate_next(646,18921
intset_binsrch_uint64(717,20918
intset_binsrch_leaf(750,21361
static const struct simple8b_mode824,23951
	uint8		bits_per_int;826,23987
	uint8		num_ints;827,24009
}			simple8b_modes[simple8b_modes828,24027
#define EMPTY_CODEWORD	860,25242
simple8b_encode(876,25806
simple8b_decode(978,28490
simple8b_contains(1007,29176

/home/seinoyu/pgsql/master/postgresql/src/backend/lib/ilist.c,63
slist_delete(31,822
dlist_check(59,1258
slist_check(96,2120

/home/seinoyu/pgsql/master/postgresql/src/backend/lib/rbtree.c,736
#define RBTBLACK	35,1189
#define RBTRED	36,1210
struct RBTree41,1266
	RBTNode    *root;root43,1282
	Size		node_size;47,1403
	rbt_comparator comparator;49,1504
	rbt_combiner combiner;50,1532
	rbt_allocfunc allocfunc;51,1556
	rbt_freefunc freefunc;52,1582
	void	   *arg;arg54,1666
#define RBTNIL 61,1821
static RBTNode sentinel 63,1849
rbt_create(102,3406
rbt_copy_data(127,3955
rbt_find(145,4542
rbt_leftmost(173,5107
rbt_rotate_left(201,5655
rbt_rotate_right(238,6258
rbt_insert_fixup(282,7344
rbt_insert(391,10337
rbt_delete_fixup(459,11583
rbt_delete_node(557,13696
rbt_delete(633,15397
rbt_left_right_iterator(643,15664
rbt_right_left_iterator(685,16564
rbt_begin_iterate(740,17952
rbt_iterate(764,18597

/home/seinoyu/pgsql/master/postgresql/src/backend/lib/binaryheap.c,387
binaryheap_allocate(33,890
binaryheap_reset(57,1397
binaryheap_free(69,1576
left_offset(84,2004
right_offset(90,2065
parent_offset(96,2127
binaryheap_add_unordered(110,2465
binaryheap_build(126,2840
binaryheap_add(142,3132
binaryheap_first(159,3570
binaryheap_remove_first(174,3955
binaryheap_replace_first(204,4657
swap_nodes(218,4911
sift_up(232,5173
sift_down(264,5841

/home/seinoyu/pgsql/master/postgresql/src/backend/lib/dshash.c,1928
struct dshash_table_item46,1760
	dsa_pointer next;49,1828
	dshash_hash hash;51,1903
#define DSHASH_NUM_PARTITIONS_LOG2 61,2272
#define DSHASH_NUM_PARTITIONS 62,2309
#define DSHASH_MAGIC 65,2428
typedef struct dshash_partition75,2849
	LWLock		lock;77,2883
	size_t		count;78,2946
} dshash_partition;79,3009
typedef struct dshash_table_control85,3124
	dshash_table_handle handle;87,3162
	uint32		magic;88,3191
	dshash_partition partitions[partitions89,3207
	int			lwlock_tranche_id;90,3260
	size_t		size_log2;98,3506
	dsa_pointer buckets;99,3557
} dshash_table_control;100,3607
struct dshash_table105,3686
	dsa_area   *area;area107,3708
	dshash_parameters params;108,3771
	void	   *arg;arg109,3816
	dshash_table_control *control;control110,3867
	dsa_pointer *buckets;buckets111,3928
	size_t		size_log2;112,3990
	bool		find_locked;113,4041
	bool		find_exclusively_locked;114,4105
#define ENTRY_FROM_ITEM(118,4235
#define ITEM_FROM_ENTRY(122,4388
#define NUM_SPLITS(127,4594
#define BUCKETS_PER_PARTITION(131,4741
#define MAX_COUNT_PER_PARTITION(135,4904
#define PARTITION_FOR_HASH(140,5129
#define BUCKET_INDEX_FOR_HASH_AND_SIZE(149,5506
#define BUCKET_INDEX_FOR_PARTITION(153,5684
#define BUCKET_FOR_HASH(157,5853
#define PARTITION_LOCK(186,7118
dshash_create(196,7491
dshash_attach(263,9615
dshash_detach(302,10856
dshash_destroy(318,11412
dshash_get_hash_table_handle(362,12525
dshash_find(385,13492
dshash_find_or_insert(430,14791
dshash_delete_key(502,16943
dshash_delete_entry(540,17951
dshash_release_lock(561,18602
dshash_memcmp(581,19220
dshash_memhash(590,19386
dshash_dump(600,19614
delete_item(654,20979
resize(680,21647
ensure_valid_bucket_pointers(757,24019
find_in_bucket(771,24422
insert_item_into_bucket(790,24837
insert_into_bucket(806,25224
delete_key_from_bucket(826,25788
delete_item_from_bucket(855,26340
hash_key(883,26891
equal_keys(894,27130

/home/seinoyu/pgsql/master/postgresql/src/backend/lib/knapsack.c,26
DiscreteKnapsack(54,1921

/home/seinoyu/pgsql/master/postgresql/src/backend/lib/hyperloglog.c,207
#define POW_2_32	53,2121
#define NEG_POW_2_32	54,2155
initHyperLogLog(65,2421
initHyperLogLogError(127,4158
freeHyperLogLog(150,4542
addHyperLogLog(166,5053
estimateHyperLogLog(185,5602
rho(241,6915

/home/seinoyu/pgsql/master/postgresql/src/backend/lib/pairingheap.c,276
pairingheap_allocate(42,1342
pairingheap_free(63,1708
merge(79,2121
pairingheap_add(112,2697
pairingheap_first(130,3190
pairingheap_remove_first(145,3558
pairingheap_remove(170,4057
merge_children(234,5707
pairingheap_dump_recurse(296,6963
pairingheap_dump(318,7553

/home/seinoyu/pgsql/master/postgresql/src/backend/lib/bipartite_match.c,133
#define HK_INFINITY 29,869
BipartiteMatch(39,1193
BipartiteMatchFree(78,2240
hk_breadth_search(93,2568
hk_depth_search(146,3595

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/dict_simple.c,115
	StopList	stoplist;24,539
	bool		accept;25,559
} DictSimple;26,574
dsimple_init(30,596
dsimple_lexize(75,1665

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/regis.c,235
#define RS_IN_ONEOF 20,417
#define RS_IN_ONEOF_IN	21,439
#define RS_IN_NONEOF	22,464
#define RS_IN_WAIT	23,487
RS_isRegis(31,617
newRegisNode(74,1370
RS_compile(85,1531
RS_free(166,3231
mb_strchr(182,3390
RS_execute(213,3750

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/dict.c,18
ts_lexize(26,552

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/ts_parse.c,955
#define IGNORE_LONGLEXEME	20,434
typedef struct ParsedLex26,491
	int			type;28,518
	char	   *lemm;lemm29,531
	int			lenlemm;30,547
	struct ParsedLex *next;next31,563
} ParsedLex;32,588
typedef struct ListParsedLex34,602
	ParsedLex  *head;head36,633
	ParsedLex  *tail;tail37,652
} ListParsedLex;38,671
	TSConfigCacheEntry *cfg;cfg42,706
	Oid			curDictId;43,732
	int			posDict;44,750
	DictSubState dictState;45,766
	ParsedLex  *curSub;curSub46,791
	ListParsedLex towork;47,812
	ListParsedLex waste;48,863
	ParsedLex  *lastRes;lastRes55,1052
	TSLexeme   *tmpRes;tmpRes56,1074
} LexizeData;57,1095
LexizeInit(60,1122
LPLAddTail(72,1392
LPLRemoveHead(85,1601
LexizeAddLemm(99,1796
RemoveHead(111,2074
setCorrLex(119,2190
moveToWaste(141,2502
setNewTmpRes(157,2720
LexizeExec(172,2974
parsetext(354,7203
hladdword(437,9305
hlfinditem(453,9849
addHLParsedLex(488,10779
hlparsetext(529,11473
generateHeadline(594,13039

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/wparser.c,1154
	int			cur;31,706
	LexDescr   *list;list32,718
} TSTokenTypeStorage;33,737
typedef struct HeadlineJsonState36,795
	HeadlineParsedText *prs;prs38,830
	TSConfigCacheEntry *cfg;cfg39,856
	TSParserCacheEntry *prsobj;prsobj40,882
	TSQuery		query;41,911
	List	   *prsoptions;prsoptions42,928
	bool		transformed;43,950
} HeadlineJsonState;44,970
tt_setup_firstcall(49,1085
tt_process_call(82,2116
ts_token_type_byid(111,2708
ts_token_type_byname(130,3066
	int			type;154,3555
	char	   *lexeme;lexeme155,3568
} LexemeEntry;156,3586
	int			cur;160,3619
	int			len;161,3631
	LexemeEntry *list;list162,3643
} PrsStorage;163,3663
prs_setup_firstcall(167,3691
prs_process_call(223,5290
ts_parse_byid(249,5783
ts_parse_byname(271,6210
ts_headline_byid_opt(295,6729
ts_headline_byid(346,8036
ts_headline(355,8233
ts_headline_opt(364,8449
ts_headline_jsonb_byid_opt(374,8699
ts_headline_jsonb(422,10023
ts_headline_jsonb_byid(431,10251
ts_headline_jsonb_opt(440,10460
ts_headline_json_byid_opt(450,10722
ts_headline_json(498,12046
ts_headline_json_byid(507,12272
ts_headline_json_opt(516,12479
headline_json_value(530,12821

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/wparser_def.c,13538
#define ASCIIWORD	34,722
#define WORD_T	35,743
#define NUMWORD	36,762
#define EMAIL	37,782
#define URL_T	38,800
#define HOST	39,818
#define SCIENTIFIC	40,835
#define VERSIONNUMBER	41,857
#define NUMPARTHWORD	42,881
#define PARTHWORD	43,904
#define ASCIIPARTHWORD	44,926
#define SPACE	45,952
#define TAG_T	46,971
#define PROTOCOL	47,990
#define NUMHWORD	48,1011
#define ASCIIHWORD	49,1032
#define HWORD	50,1055
#define URLPATH	51,1074
#define FILEPATH	52,1095
#define DECIMAL_T	53,1116
#define SIGNEDINT	54,1138
#define UNSIGNEDINT	55,1160
#define XMLENTITY	56,1184
#define LASTNUM	58,1207
static const char *const tok_alias[tok_alias60,1229
static const char *const lex_descr[lex_descr87,1545
	TPS_Base 119,2162
	TPS_InNumWord,120,2177
	TPS_InAsciiWord,121,2193
	TPS_InWord,122,2211
	TPS_InUnsignedInt,123,2224
	TPS_InSignedIntFirst,124,2244
	TPS_InSignedInt,125,2267
	TPS_InSpace,126,2285
	TPS_InUDecimalFirst,127,2299
	TPS_InUDecimal,128,2321
	TPS_InDecimalFirst,129,2338
	TPS_InDecimal,130,2359
	TPS_InVerVersion,131,2375
	TPS_InSVerVersion,132,2394
	TPS_InVersionFirst,133,2414
	TPS_InVersion,134,2435
	TPS_InMantissaFirst,135,2451
	TPS_InMantissaSign,136,2473
	TPS_InMantissa,137,2494
	TPS_InXMLEntityFirst,138,2511
	TPS_InXMLEntity,139,2534
	TPS_InXMLEntityNumFirst,140,2552
	TPS_InXMLEntityNum,141,2578
	TPS_InXMLEntityHexNumFirst,142,2599
	TPS_InXMLEntityHexNum,143,2628
	TPS_InXMLEntityEnd,144,2652
	TPS_InTagFirst,145,2673
	TPS_InXMLBegin,146,2690
	TPS_InTagCloseFirst,147,2707
	TPS_InTagName,148,2729
	TPS_InTagBeginEnd,149,2745
	TPS_InTag,150,2765
	TPS_InTagEscapeK,151,2777
	TPS_InTagEscapeKK,152,2796
	TPS_InTagBackSleshed,153,2816
	TPS_InTagEnd,154,2839
	TPS_InCommentFirst,155,2854
	TPS_InCommentLast,156,2875
	TPS_InComment,157,2895
	TPS_InCloseCommentFirst,158,2911
	TPS_InCloseCommentLast,159,2937
	TPS_InCommentEnd,160,2962
	TPS_InHostFirstDomain,161,2981
	TPS_InHostDomainSecond,162,3005
	TPS_InHostDomain,163,3030
	TPS_InPortFirst,164,3049
	TPS_InPort,165,3067
	TPS_InHostFirstAN,166,3080
	TPS_InHost,167,3100
	TPS_InEmail,168,3113
	TPS_InFileFirst,169,3127
	TPS_InFileTwiddle,170,3145
	TPS_InPathFirst,171,3165
	TPS_InPathFirstFirst,172,3183
	TPS_InPathSecond,173,3206
	TPS_InFile,174,3225
	TPS_InFileNext,175,3238
	TPS_InURLPathFirst,176,3255
	TPS_InURLPathStart,177,3276
	TPS_InURLPath,178,3297
	TPS_InFURL,179,3313
	TPS_InProtocolFirst,180,3326
	TPS_InProtocolSecond,181,3348
	TPS_InProtocolEnd,182,3371
	TPS_InHyphenAsciiWordFirst,183,3391
	TPS_InHyphenAsciiWord,184,3420
	TPS_InHyphenWordFirst,185,3444
	TPS_InHyphenWord,186,3468
	TPS_InHyphenNumWordFirst,187,3487
	TPS_InHyphenNumWord,188,3514
	TPS_InHyphenDigitLookahead,189,3536
	TPS_InParseHyphen,190,3565
	TPS_InParseHyphenHyphen,191,3585
	TPS_InHyphenWordPart,192,3611
	TPS_InHyphenAsciiWordPart,193,3634
	TPS_InHyphenNumWordPart,194,3662
	TPS_InHyphenUnsignedInt,195,3688
	TPS_Null	196,3714
} TParserState;197,3758
typedef int (*TParserCharTest)TParserCharTest202,3818
typedef void (*TParserSpecial)TParserSpecial204,3925
	TParserCharTest isclass;209,4053
	char		c;210,4079
	uint16		flags;211,4089
	TParserState tostate;212,4105
	int			type;213,4128
	TParserSpecial special;214,4141
} TParserStateActionItem;215,4166
#define A_NEXT	218,4241
#define A_BINGO	219,4264
#define A_POP	220,4288
#define A_PUSH	221,4310
#define A_RERUN	222,4333
#define A_CLEAR	223,4357
#define A_MERGE	224,4381
#define A_CLRALL	225,4405
typedef struct TParserPosition227,4430
	int			posbyte;229,4463
	int			poschar;230,4514
	int			charlen;231,4570
	int			lenbytetoken;232,4616
	int			lenchartoken;233,4675
	TParserState state;234,4715
	struct TParserPosition *prev;prev235,4736
	const TParserStateActionItem *pushedAtAction;pushedAtAction236,4767
} TParserPosition;237,4814
typedef struct TParser239,4834
	char	   *str;str242,4898
	int			lenstr;243,4938
	wchar_t    *wstr;wstr244,4980
	pg_wchar   *pgwstr;pgwstr245,5029
	bool		usewide;246,5093
	int			charmaxlen;249,5132
	TParserPosition *state;state250,5151
	bool		ignore;251,5176
	bool		wanthost;252,5191
	char		c;255,5227
	char	   *token;token258,5249
	int			lenbytetoken;259,5266
	int			lenchartoken;260,5287
	int			type;261,5308
} TParser;262,5321
newTParserPosition(270,5424
TParserInit(287,5736
TParserCopyInit(345,7357
TParserClose(371,7961
TParserCopyClose(396,8327
#define p_iswhat(423,8920
p_iswhat(453,9888
p_isEOF(473,10278
p_iseqC(480,10419
p_isneC(486,10486
p_isascii(492,10554
p_isasclet(498,10700
p_isurlchar(504,10793
_make_compiler_happy(536,11342
SpecialTags(563,11788
SpecialFURL(587,12337
SpecialHyphen(595,12503
SpecialVerVersion(602,12648
p_isstophost(611,12858
p_isignore(622,12975
p_ishost(628,13047
p_isURLPath(650,13527
p_isspecial(679,14323
static const TParserStateActionItem actionTPS_Base[actionTPS_Base958,25833
static const TParserStateActionItem actionTPS_InNumWord[actionTPS_InNumWord975,26555
static const TParserStateActionItem actionTPS_InAsciiWord[actionTPS_InAsciiWord986,27023
static const TParserStateActionItem actionTPS_InWord[actionTPS_InWord1004,27851
static const TParserStateActionItem actionTPS_InUnsignedInt[actionTPS_InUnsignedInt1013,28202
static const TParserStateActionItem actionTPS_InSignedIntFirst[actionTPS_InSignedIntFirst1030,28991
static const TParserStateActionItem actionTPS_InSignedInt[actionTPS_InSignedInt1036,29203
static const TParserStateActionItem actionTPS_InSpace[actionTPS_InSpace1045,29577
static const TParserStateActionItem actionTPS_InUDecimalFirst[actionTPS_InUDecimalFirst1057,30071
static const TParserStateActionItem actionTPS_InUDecimal[actionTPS_InUDecimal1063,30272
static const TParserStateActionItem actionTPS_InDecimalFirst[actionTPS_InDecimalFirst1072,30651
static const TParserStateActionItem actionTPS_InDecimal[actionTPS_InDecimal1078,30850
static const TParserStateActionItem actionTPS_InVerVersion[actionTPS_InVerVersion1087,31225
static const TParserStateActionItem actionTPS_InSVerVersion[actionTPS_InSVerVersion1093,31439
static const TParserStateActionItem actionTPS_InVersionFirst[actionTPS_InVersionFirst1100,31658
static const TParserStateActionItem actionTPS_InVersion[actionTPS_InVersion1106,31857
static const TParserStateActionItem actionTPS_InMantissaFirst[actionTPS_InMantissaFirst1113,32132
static const TParserStateActionItem actionTPS_InMantissaSign[actionTPS_InMantissaSign1121,32441
static const TParserStateActionItem actionTPS_InMantissa[actionTPS_InMantissa1127,32641
static const TParserStateActionItem actionTPS_InXMLEntityFirst[actionTPS_InXMLEntityFirst1133,32858
static const TParserStateActionItem actionTPS_InXMLEntity[actionTPS_InXMLEntity1142,33222
static const TParserStateActionItem actionTPS_InXMLEntityNumFirst[actionTPS_InXMLEntityNumFirst1153,33677
static const TParserStateActionItem actionTPS_InXMLEntityHexNumFirst[actionTPS_InXMLEntityHexNumFirst1161,34009
static const TParserStateActionItem actionTPS_InXMLEntityNum[actionTPS_InXMLEntityNum1167,34224
static const TParserStateActionItem actionTPS_InXMLEntityHexNum[actionTPS_InXMLEntityHexNum1174,34481
static const TParserStateActionItem actionTPS_InXMLEntityEnd[actionTPS_InXMLEntityEnd1181,34745
static const TParserStateActionItem actionTPS_InTagFirst[actionTPS_InTagFirst1185,34873
static const TParserStateActionItem actionTPS_InXMLBegin[actionTPS_InXMLBegin1196,35325
static const TParserStateActionItem actionTPS_InTagCloseFirst[actionTPS_InTagCloseFirst1204,35609
static const TParserStateActionItem actionTPS_InTagName[actionTPS_InTagName1210,35809
static const TParserStateActionItem actionTPS_InTagBeginEnd[actionTPS_InTagBeginEnd1224,36351
static const TParserStateActionItem actionTPS_InTag[actionTPS_InTag1230,36547
static const TParserStateActionItem actionTPS_InTagEscapeK[actionTPS_InTagEscapeK1252,37472
static const TParserStateActionItem actionTPS_InTagEscapeKK[actionTPS_InTagEscapeKK1259,37731
static const TParserStateActionItem actionTPS_InTagBackSleshed[actionTPS_InTagBackSleshed1266,37991
static const TParserStateActionItem actionTPS_InTagEnd[actionTPS_InTagEnd1271,38144
static const TParserStateActionItem actionTPS_InCommentFirst[actionTPS_InCommentFirst1275,38263
static const TParserStateActionItem actionTPS_InCommentLast[actionTPS_InCommentLast1284,38577
static const TParserStateActionItem actionTPS_InComment[actionTPS_InComment1290,38774
static const TParserStateActionItem actionTPS_InCloseCommentFirst[actionTPS_InCloseCommentFirst1296,38978
static const TParserStateActionItem actionTPS_InCloseCommentLast[actionTPS_InCloseCommentLast1302,39196
static const TParserStateActionItem actionTPS_InCommentEnd[actionTPS_InCommentEnd1309,39451
static const TParserStateActionItem actionTPS_InHostFirstDomain[actionTPS_InHostFirstDomain1313,39574
static const TParserStateActionItem actionTPS_InHostDomainSecond[actionTPS_InHostDomainSecond1320,39831
static const TParserStateActionItem actionTPS_InHostDomain[actionTPS_InHostDomain1331,40293
static const TParserStateActionItem actionTPS_InPortFirst[actionTPS_InPortFirst1346,40993
static const TParserStateActionItem actionTPS_InPort[actionTPS_InPort1352,41185
static const TParserStateActionItem actionTPS_InHostFirstAN[actionTPS_InHostFirstAN1360,41522
static const TParserStateActionItem actionTPS_InHost[actionTPS_InHost1367,41763
static const TParserStateActionItem actionTPS_InEmail[actionTPS_InEmail1378,42207
static const TParserStateActionItem actionTPS_InFileFirst[actionTPS_InFileFirst1384,42413
static const TParserStateActionItem actionTPS_InFileTwiddle[actionTPS_InFileTwiddle1394,42802
static const TParserStateActionItem actionTPS_InPathFirst[actionTPS_InPathFirst1403,43140
static const TParserStateActionItem actionTPS_InPathFirstFirst[actionTPS_InPathFirstFirst1413,43528
static const TParserStateActionItem actionTPS_InPathSecond[actionTPS_InPathSecond1420,43782
static const TParserStateActionItem actionTPS_InFile[actionTPS_InFile1428,44132
static const TParserStateActionItem actionTPS_InFileNext[actionTPS_InFileNext1439,44577
static const TParserStateActionItem actionTPS_InURLPathFirst[actionTPS_InURLPathFirst1447,44864
static const TParserStateActionItem actionTPS_InURLPathStart[actionTPS_InURLPathStart1453,45065
static const TParserStateActionItem actionTPS_InURLPath[actionTPS_InURLPath1457,45179
static const TParserStateActionItem actionTPS_InFURL[actionTPS_InFURL1463,45390
static const TParserStateActionItem actionTPS_InProtocolFirst[actionTPS_InProtocolFirst1469,45600
static const TParserStateActionItem actionTPS_InProtocolSecond[actionTPS_InProtocolSecond1475,45806
static const TParserStateActionItem actionTPS_InProtocolEnd[actionTPS_InProtocolEnd1481,46010
static const TParserStateActionItem actionTPS_InHyphenAsciiWordFirst[actionTPS_InHyphenAsciiWordFirst1485,46137
static const TParserStateActionItem actionTPS_InHyphenAsciiWord[actionTPS_InHyphenAsciiWord1493,46466
static const TParserStateActionItem actionTPS_InHyphenWordFirst[actionTPS_InHyphenWordFirst1503,46979
static const TParserStateActionItem actionTPS_InHyphenWord[actionTPS_InHyphenWord1510,47245
static const TParserStateActionItem actionTPS_InHyphenNumWordFirst[actionTPS_InHyphenNumWordFirst1519,47680
static const TParserStateActionItem actionTPS_InHyphenNumWord[actionTPS_InHyphenNumWord1526,47952
static const TParserStateActionItem actionTPS_InHyphenDigitLookahead[actionTPS_InHyphenDigitLookahead1534,48350
static const TParserStateActionItem actionTPS_InParseHyphen[actionTPS_InParseHyphen1542,48681
static const TParserStateActionItem actionTPS_InParseHyphenHyphen[actionTPS_InParseHyphenHyphen1551,49069
static const TParserStateActionItem actionTPS_InHyphenWordPart[actionTPS_InHyphenWordPart1558,49361
static const TParserStateActionItem actionTPS_InHyphenAsciiWordPart[actionTPS_InHyphenAsciiWordPart1566,49714
static const TParserStateActionItem actionTPS_InHyphenNumWordPart[actionTPS_InHyphenNumWordPart1575,50144
static const TParserStateActionItem actionTPS_InHyphenUnsignedInt[actionTPS_InHyphenUnsignedInt1582,50453
	const TParserStateActionItem *action;action1596,50840
	TParserState state;1597,50907
	const char *state_name;state_name1599,50984
} TParserStateAction;1601,51047
#define TPARSERSTATEACTION(1604,51091
#define TPARSERSTATEACTION(1607,51189
static const TParserStateAction Actions[Actions1615,51340
TParserGet(1697,54490
prsd_lextype(1863,58998
prsd_start(1881,59339
prsd_nexttoken(1887,59463
prsd_end(1903,59766
#define LEAVETOKEN(1917,59970
#define COMPLEXTOKEN(1918,60007
#define ENDPUNCTOKEN(1919,60096
#define TS_IDIGNORE(1921,60136
#define HLIDREPLACE(1922,60223
#define HLIDSKIP(1923,60261
#define XMLHLIDSKIP(1924,60347
#define NONWORDTOKEN(1925,60435
#define NOENDTOKEN(1926,60507
#define INTERESTINGWORD(1935,60918
#define BADENDPOINT(1939,61071
	int32		startpos;1946,61278
	int32		endpos;1947,61334
	int32		poslen;1948,61388
	int32		curlen;1949,61440
	bool		chosen;1950,61486
	bool		excluded;1951,61517
} CoverPos;1952,61551
	HeadlineWordEntry *words;words1957,61624
	int			len;1958,61651
} hlCheck;1959,61663
checkcondition_HL(1966,61777
hlFirstIndex(2006,62633
hlCover(2041,63517
mark_fragment(2100,65072
get_next_fragment(2136,65933
mark_hl_fragments(2187,67210
mark_hl_words(2370,71749
prsd_headline(2533,75504

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/ts_locale.c,299
#define WC_BUF_LEN 33,1087
t_isdigit(36,1114
t_isspace(52,1480
t_isalpha(68,1846
t_isprint(84,2212
tsearch_readline_begin(124,3400
tsearch_readline(146,4036
tsearch_readline_end(161,4286
tsearch_readline_callback(173,4550
t_readline(205,5556
lowerstr(239,6239
lowerstr_with_len(252,6462

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/ts_utils.c,83
get_tsearch_config_filename(33,753
readstoplist(68,1988
searchstoplist(141,3371

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/dict_thesaurus.c,1221
#define DT_USEASIS	28,670
typedef struct LexemeInfo30,698
	uint32		idsubst;32,726
	uint16		posinsubst;33,790
	uint16		tnvariant;34,836
	struct LexemeInfo *nextentry;nextentry35,896
	struct LexemeInfo *nextvariant;nextvariant36,927
} LexemeInfo;37,960
	char	   *lexeme;lexeme41,992
	LexemeInfo *entries;entries42,1010
} TheLexeme;43,1032
	uint16		lastlexeme;47,1063
	uint16		reslen;48,1120
	TSLexeme   *res;res49,1137
} TheSubstitute;50,1191
	Oid			subdictOid;55,1268
	TSDictionaryCacheEntry *subdict;subdict56,1287
	TheLexeme  *wrds;wrds59,1367
	int			nwrds;60,1386
	int			ntwrds;61,1432
	TheSubstitute *subst;subst66,1559
	int			nsubst;67,1582
} DictThesaurus;68,1597
newLexeme(72,1628
addWrd(106,2310
#define TR_WAITLEX	162,3398
#define TR_INLEX	163,3419
#define TR_WAITSUBS 164,3438
#define TR_INSUBS	165,3460
thesaurusRead(168,3493
addCompiledLexeme(308,6574
cmpLexemeInfo(339,7273
cmpLexeme(361,7657
cmpLexemeQ(377,7892
cmpTheLexeme(383,8014
compileTheLexeme(396,8281
compileTheSubstitute(507,10895
thesaurus_init(601,13060
findTheLexeme(660,14536
matchIdSubst(679,14836
findVariant(699,15098
copyTSLexeme(756,16148
checkMatch(774,16455
thesaurus_lexize(791,16809

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/ts_selfuncs.c,400
#define DEFAULT_TS_MATCH_SEL 33,876
	text	   *element;element38,990
	float4		frequency;39,1009
} TextFreq;40,1029
	char	   *lexeme;lexeme45,1124
	int			length;46,1142
} LexemeKey;47,1157
#define tsquery_opr_selec_no_stats(57,1575
tsmatchsel(68,1828
tsmatchjoinsel(140,3554
tsquerysel(151,3750
mcelem_tsquery_selec(208,5161
tsquery_opr_selec(279,7323
compare_lexeme_textfreq(435,11685

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/dict_ispell.c,118
	StopList	stoplist;25,543
	IspellDict	obj;26,563
} DictISpell;27,580
dispell_init(30,601
dispell_lexize(111,2466

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/ts_typanalyze.c,418
	char	   *lexeme;lexeme27,635
	int			length;28,691
} LexemeHashKey;29,734
	LexemeHashKey key;34,827
	int			frequency;35,890
	int			delta;36,928
} TrackItem;37,971
ts_typanalyze(55,1642
compute_tsvector_stats(140,6201
prune_lexemes_hashtable(452,15697
lexeme_hash(477,16314
lexeme_match(489,16594
lexeme_compare(499,16826
trackitem_compare_frequencies_desc(517,17323
trackitem_compare_lexemes(529,17637

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/to_tsany.c,992
typedef struct MorphOpaque23,514
	Oid			cfg_id;25,543
	int			qoperator;26,558
} MorphOpaque;27,598
typedef struct TSVectorBuildState29,614
	ParsedText *prs;prs31,650
	Oid			cfgId;32,668
} TSVectorBuildState;33,682
get_current_ts_config(39,788
compareWORD(48,908
uniqueWORD(68,1370
make_tsvector(156,3354
to_tsvector_byid(234,5054
to_tsvector(259,5595
jsonb_to_tsvector_worker(274,5920
jsonb_string_to_tsvector_byid(290,6206
jsonb_string_to_tsvector(303,6468
jsonb_to_tsvector_byid(317,6741
jsonb_to_tsvector(333,7116
json_to_tsvector_worker(353,7575
json_string_to_tsvector_byid(369,7862
json_string_to_tsvector(382,8126
json_to_tsvector_byid(396,8401
json_to_tsvector(412,8778
add_to_tsvector(432,9257
pushval_morph(481,10517
to_tsquery_byid(569,12456
to_tsquery(587,12774
plainto_tsquery_byid(599,13023
plainto_tsquery(617,13356
phraseto_tsquery_byid(630,13616
phraseto_tsquery(648,13953
websearch_to_tsquery_byid(660,14214
websearch_to_tsquery(679,14558

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/dict_synonym.c,288
	char	   *in;in23,531
	char	   *out;out24,545
	int			outlen;25,560
	uint16		flags;26,575
} Syn;27,591
	int			len;31,616
	Syn		   *syn;syn32,656
	bool		case_sensitive;33,671
} DictSyn;34,694
findwrd(44,1033
compareSyn(85,1603
dsynonym_init(92,1718
dsynonym_lexize(210,4139

/home/seinoyu/pgsql/master/postgresql/src/backend/tsearch/spell.c,1948
#define tmpalloc(78,3025
#define tmpalloc0(79,3088
NIStartBuild(87,3287
NIFinishBuild(102,3656
#define COMPACT_ALLOC_CHUNK 125,4458
#define COMPACT_MAX_REQ	126,4531
compact_palloc0(129,4612
#define cpalloc(157,5156
#define cpalloc0(158,5206
cpstrdup(161,5272
lowerstr_ctx(174,5487
#define MAX_NORM 186,5699
#define MAXNORMLEN 187,5721
#define STRNCMP(189,5745
#define GETWCHAR(190,5797
#define GETCHAR(191,5893
static char *VoidString VoidString193,5960
cmpspell(196,6002
cmpspellaffix(202,6135
cmpcmdflag(209,6283
findchar(228,6653
findchar2(241,6795
strbcmp(256,7022
strbncmp(279,7368
cmpaffix(310,7943
getNextFlagFromString(348,9068
IsAffixFlagInUse(453,11637
NIAddSpell(485,12295
NIImportDictionary(516,13098
FindWord(601,14860
NIAddAffix(676,16854
#define PAE_WAIT_MASK	764,19126
#define PAE_INMASK	765,19150
#define PAE_WAIT_FIND	766,19172
#define PAE_INFIND	767,19196
#define PAE_WAIT_REPL	768,19218
#define PAE_INREPL	769,19242
#define PAE_WAIT_TYPE	770,19264
#define PAE_WAIT_FLAG	771,19288
get_nextfield(784,19656
parse_ooaffentry(850,20887
parse_affentry(906,22063
setCompoundAffixFlagValue(1024,24319
addCompoundAffixFlagValue(1059,25112
getCompoundAffixFlagValue(1116,26419
getAffixFlagSet(1152,27222
NIImportOOAffixes(1189,28071
NIImportAffixes(1418,34281
MergeAffix(1565,37401
makeCompoundFlags(1611,38543
mkSPNode(1628,38952
NISortDictionary(1710,40990
mkANode(1818,43924
mkVoidAffix(1895,45720
isAffixInUse(1949,46945
NISortAffixes(1964,47210
FindAffixes(2016,48727
CheckAffix(2059,49585
addToResult(2149,51585
NormalizeSubWord(2164,51828
typedef struct SplitVar2273,54309
	int			nstem;2275,54335
	int			lenstem;2276,54349
	char	  **stem;stem2277,54365
	struct SplitVar *next;next2278,54381
} SplitVar;2279,54405
CheckCompoundAffixes(2282,54429
CopyVar(2324,55180
AddStem(2349,55652
SplitToVariants(2362,55873
addNorm(2509,59437
NINormalizeWord(2525,59788

/home/seinoyu/pgsql/master/postgresql/src/backend/port/sysv_shmem.c,806
typedef key_t IpcMemoryKey;73,2789
typedef int IpcMemoryId;74,2862
	SHMSTATE_ANALYSIS_FAILURE,89,3555
	SHMSTATE_ATTACHED,90,3626
	SHMSTATE_ENOENT,91,3694
	SHMSTATE_FOREIGN,92,3742
	SHMSTATE_UNATTACHED	93,3806
} IpcMemoryState;94,3874
unsigned long UsedShmemSegID 97,3894
void	   *UsedShmemSegAddr UsedShmemSegAddr98,3928
static Size AnonymousShmemSize;100,3963
static void *AnonymousShmem AnonymousShmem101,3995
InternalIpcMemoryCreate(124,4917
IpcMemoryDetach(279,10671
IpcMemoryDelete(291,11181
PGSharedMemoryIsInUse(310,11821
PGSharedMemoryAttach(340,12622
GetHugePageSize(472,17080
CreateAnonymousSegment(558,19212
AnonymousShmemDetach(626,21073
PGSharedMemoryCreate(651,21843
PGSharedMemoryReAttach(829,27255
PGSharedMemoryNoReAttach(878,28861
PGSharedMemoryDetach(909,29761

/home/seinoyu/pgsql/master/postgresql/src/backend/port/win32_shmem.c,533
#define PROTECTIVE_REGION_SIZE 39,1727
void	   *ShmemProtectiveRegion ShmemProtectiveRegion40,1784
HANDLE		UsedShmemSegID 42,1824
void	   *UsedShmemSegAddr UsedShmemSegAddr43,1871
static Size UsedShmemSegSize 44,1905
GetSharedMemName(63,2768
PGSharedMemoryIsInUse(111,4229
EnableLockPagesPrivilege(135,4634
PGSharedMemoryCreate(197,6479
PGSharedMemoryReAttach(401,12282
PGSharedMemoryNoReAttach(449,14145
PGSharedMemoryDetach(482,15196
pgwin32_SharedMemoryDelete(526,16293
pgwin32_ReserveSharedMemoryRegion(550,17241

/home/seinoyu/pgsql/master/postgresql/src/backend/port/sysv_sema.c,1111
typedef struct PGSemaphoreData34,757
	int			semId;36,790
	int			semNum;37,837
} PGSemaphoreData;38,888
union semun41,933
	int			val;43,947
	struct semid_ds *buf;buf44,959
	unsigned short *array;array45,982
typedef key_t IpcSemaphoreKey;49,1017
typedef int IpcSemaphoreId;50,1088
#define SEMAS_PER_SET	58,1459
#define IPCProtection	60,1485
#define PGSemaMagic	62,1548
static PGSemaphore sharedSemas;65,1607
static int	numSharedSemas;66,1687
static int	maxSharedSemas;67,1760
static IpcSemaphoreId *mySemaSets;mySemaSets68,1834
static int	numSemaSets;69,1908
static int	maxSemaSets;70,1975
static IpcSemaphoreKey nextSemaKey;71,2041
static int	nextSemaNumber;72,2105
InternalIpcSemaphoreCreate(97,3020
IpcSemaphoreInitialize(146,4595
IpcSemaphoreKill(169,5179
IpcSemaphoreGetValue(181,5474
IpcSemaphoreGetLastPID(192,5736
IpcSemaphoreCreate(212,6319
PGSemaphoreShmemSize(291,8607
PGReserveSemaphores(314,9565
ReleaseSemaphores(358,10926
PGSemaphoreCreate(373,11172
PGSemaphoreReset(408,12099
PGSemaphoreLock(419,12298
PGSemaphoreUnlock(452,13066
PGSemaphoreTryLock(482,13758

/home/seinoyu/pgsql/master/postgresql/src/backend/port/posix_sema.c,755
typedef union SemTPadded45,1514
	sem_t		pgsem;47,1541
	char		pad[pad48,1556
} SemTPadded;49,1588
typedef struct PGSemaphoreData52,1663
	SemTPadded	sem_padded;54,1696
} PGSemaphoreData;55,1720
#define PG_SEM_REF(57,1740
#define IPCProtection	59,1788
static sem_t **mySemPointers;mySemPointers62,1885
static PGSemaphore sharedSemas;64,1960
static int	numSems;66,2047
static int	maxSems;67,2107
static int	nextSemKey;68,2166
PosixSemaphoreCreate(86,2570
PosixSemaphoreCreate(135,3500
PosixSemaphoreKill(147,3716
PGSemaphoreShmemSize(165,4098
PGReserveSemaphores(196,5359
ReleaseSemaphores(240,6586
PGSemaphoreCreate(262,7003
PGSemaphoreReset(295,7652
PGSemaphoreLock(320,8173
PGSemaphoreUnlock(340,8528
PGSemaphoreTryLock(365,9094

/home/seinoyu/pgsql/master/postgresql/src/backend/port/win32/socket.c,512
int			pgwin32_noblock 28,833
#undef socket31,938
#undef bind32,952
#undef listen33,964
#undef accept34,978
#undef connect35,992
#undef select36,1007
#undef recv37,1021
#undef send38,1033
TranslateSocketError(56,1659
pgwin32_poll_signals(144,3305
isDataGram(156,3462
pgwin32_waitforsinglesocket(168,3655
pgwin32_socket(278,6431
pgwin32_bind(301,6789
pgwin32_listen(312,6954
pgwin32_accept(323,7097
pgwin32_connect(345,7493
pgwin32_recv(368,7904
pgwin32_send(445,9738
pgwin32_select(503,10923

/home/seinoyu/pgsql/master/postgresql/src/backend/port/win32/signal.c,582
volatile int pg_signal_queue;24,704
int			pg_signal_mask;25,734
HANDLE		pgwin32_signal_event;27,757
HANDLE		pgwin32_initial_signal_pipe 28,787
static CRITICAL_SECTION pg_signal_crit_sec;34,1001
static pqsigfunc pg_signal_array[pg_signal_array37,1124
static pqsigfunc pg_signal_defaults[pg_signal_defaults38,1175
pg_usleep(53,1576
pgwin32_signal_initialize(69,1864
pgwin32_dispatch_queued_signals(108,3011
pqsigsetmask(147,4001
pqsignal(170,4389
pgwin32_create_signal_listener(183,4674
pg_queue_signal(215,5463
pg_signal_thread(230,5840
pg_console_handler(333,8896

/home/seinoyu/pgsql/master/postgresql/src/backend/port/win32/timer.c,258
typedef struct timerCA23,577
	struct itimerval value;25,602
	HANDLE		event;26,627
	CRITICAL_SECTION crit_sec;27,643
} timerCA;28,671
static timerCA timerCommArea;30,683
static HANDLE timerThreadHandle 31,713
pg_timer_thread(36,821
setitimer(86,1951

/home/seinoyu/pgsql/master/postgresql/src/backend/port/win32/crashdump.c,156
#define WIN32_LEAN_AND_MEAN41,1494
typedef BOOL (WINAPI * MINIDUMPWRITEDUMP)73,2423
crashDumpHandler(92,3271
pgwin32_install_crashdump_handler(180,5968

/home/seinoyu/pgsql/master/postgresql/src/backend/port/atomics.c,487
pg_spinlock_barrier(29,657
pg_extern_compiler_barrier(45,1098
pg_atomic_init_flag_impl(55,1206
pg_atomic_test_set_flag_impl(76,1736
pg_atomic_clear_flag_impl(89,1971
pg_atomic_unlocked_test_flag_impl(97,2142
pg_atomic_init_u32_impl(106,2329
pg_atomic_write_u32_impl(124,2790
pg_atomic_compare_exchange_u32_impl(137,3193
pg_atomic_fetch_add_u32_impl(165,3961
pg_atomic_init_u64_impl(182,4294
pg_atomic_compare_exchange_u64_impl(200,4755
pg_atomic_fetch_add_u64_impl(228,5523

/home/seinoyu/pgsql/master/postgresql/src/backend/port/win32_sema.c,317
static HANDLE *mySemSet;mySemSet20,462
static int	numSems;21,527
static int	maxSems;22,591
PGSemaphoreShmemSize(31,776
PGReserveSemaphores(47,1244
ReleaseSemaphores(64,1620
PGSemaphoreCreate(79,1851
PGSemaphoreReset(116,2688
PGSemaphoreLock(132,3012
PGSemaphoreUnlock(196,4597
PGSemaphoreTryLock(210,4873

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/api.c,111
extern struct SN_env * SN_create_env(3,21
extern void SN_close_env(40,870
extern int SN_set_current(58,1180

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_hungarian.c,9778
static const symbol s_0_0[s_0_038,972
static const symbol s_0_1[s_0_139,1017
static const symbol s_0_2[s_0_240,1067
static const symbol s_0_3[s_0_341,1112
static const symbol s_0_4[s_0_442,1157
static const symbol s_0_5[s_0_543,1202
static const symbol s_0_6[s_0_644,1247
static const symbol s_0_7[s_0_745,1292
static const struct among a_0[a_047,1338
static const symbol s_1_0[s_1_059,1642
static const symbol s_1_1[s_1_160,1689
static const struct among a_1[a_162,1737
static const symbol s_2_0[s_2_068,1841
static const symbol s_2_1[s_2_169,1886
static const symbol s_2_2[s_2_270,1931
static const symbol s_2_3[s_2_371,1976
static const symbol s_2_4[s_2_472,2021
static const symbol s_2_5[s_2_573,2066
static const symbol s_2_6[s_2_674,2111
static const symbol s_2_7[s_2_775,2156
static const symbol s_2_8[s_2_876,2201
static const symbol s_2_9[s_2_977,2246
static const symbol s_2_10[s_2_1078,2291
static const symbol s_2_11[s_2_1179,2337
static const symbol s_2_12[s_2_1280,2383
static const symbol s_2_13[s_2_1381,2434
static const symbol s_2_14[s_2_1482,2480
static const symbol s_2_15[s_2_1583,2531
static const symbol s_2_16[s_2_1684,2577
static const symbol s_2_17[s_2_1785,2623
static const symbol s_2_18[s_2_1886,2674
static const symbol s_2_19[s_2_1987,2725
static const symbol s_2_20[s_2_2088,2776
static const symbol s_2_21[s_2_2189,2827
static const symbol s_2_22[s_2_2290,2878
static const struct among a_2[a_292,2925
static const symbol s_3_0[s_3_0119,3738
static const symbol s_3_1[s_3_1120,3783
static const struct among a_3[a_3122,3829
static const symbol s_4_0[s_4_0128,3933
static const symbol s_4_1[s_4_1129,3978
static const symbol s_4_2[s_4_2130,4023
static const symbol s_4_3[s_4_3131,4068
static const symbol s_4_4[s_4_4132,4113
static const symbol s_4_5[s_4_5133,4158
static const symbol s_4_6[s_4_6134,4208
static const symbol s_4_7[s_4_7135,4258
static const symbol s_4_8[s_4_8136,4308
static const symbol s_4_9[s_4_9137,4358
static const symbol s_4_10[s_4_10138,4403
static const symbol s_4_11[s_4_11139,4461
static const symbol s_4_12[s_4_12140,4519
static const symbol s_4_13[s_4_13141,4577
static const symbol s_4_14[s_4_14142,4635
static const symbol s_4_15[s_4_15143,4693
static const symbol s_4_16[s_4_16144,4751
static const symbol s_4_17[s_4_17145,4809
static const symbol s_4_18[s_4_18146,4867
static const symbol s_4_19[s_4_19147,4920
static const symbol s_4_20[s_4_20148,4961
static const symbol s_4_21[s_4_21149,5007
static const symbol s_4_22[s_4_22150,5058
static const symbol s_4_23[s_4_23151,5104
static const symbol s_4_24[s_4_24152,5155
static const symbol s_4_25[s_4_25153,5228
static const symbol s_4_26[s_4_26154,5274
static const symbol s_4_27[s_4_27155,5327
static const symbol s_4_28[s_4_28156,5390
static const symbol s_4_29[s_4_29157,5441
static const symbol s_4_30[s_4_30158,5482
static const symbol s_4_31[s_4_31159,5528
static const symbol s_4_32[s_4_32160,5574
static const symbol s_4_33[s_4_33161,5637
static const symbol s_4_34[s_4_34162,5710
static const symbol s_4_35[s_4_35163,5783
static const symbol s_4_36[s_4_36164,5856
static const symbol s_4_37[s_4_37165,5902
static const symbol s_4_38[s_4_38166,5960
static const symbol s_4_39[s_4_39167,6013
static const symbol s_4_40[s_4_40168,6064
static const symbol s_4_41[s_4_41169,6115
static const symbol s_4_42[s_4_42170,6173
static const symbol s_4_43[s_4_43171,6226
static const struct among a_4[a_4173,6280
static const symbol s_5_0[s_5_0221,7807
static const symbol s_5_1[s_5_1222,7859
static const symbol s_5_2[s_5_2223,7911
static const struct among a_5[a_5225,7991
static const symbol s_6_0[s_6_0232,8127
static const symbol s_6_1[s_6_1233,8182
static const symbol s_6_2[s_6_2234,8242
static const symbol s_6_3[s_6_3235,8309
static const symbol s_6_4[s_6_4236,8371
static const symbol s_6_5[s_6_5237,8438
static const struct among a_6[a_6239,8513
static const symbol s_7_0[s_7_0249,8741
static const symbol s_7_1[s_7_1250,8788
static const struct among a_7[a_7252,8836
static const symbol s_8_0[s_8_0258,8940
static const symbol s_8_1[s_8_1259,8980
static const symbol s_8_2[s_8_2260,9025
static const symbol s_8_3[s_8_3261,9070
static const symbol s_8_4[s_8_4262,9115
static const symbol s_8_5[s_8_5263,9167
static const symbol s_8_6[s_8_6264,9219
static const struct among a_8[a_8266,9272
static const symbol s_9_0[s_9_0277,9530
static const symbol s_9_1[s_9_1278,9582
static const symbol s_9_2[s_9_2279,9646
static const symbol s_9_3[s_9_3280,9710
static const symbol s_9_4[s_9_4281,9757
static const symbol s_9_5[s_9_5282,9809
static const symbol s_9_6[s_9_6283,9866
static const symbol s_9_7[s_9_7284,9923
static const symbol s_9_8[s_9_8285,9980
static const symbol s_9_9[s_9_9286,10044
static const symbol s_9_10[s_9_10287,10108
static const symbol s_9_11[s_9_11288,10173
static const struct among a_9[a_9290,10234
static const symbol s_10_0[s_10_0306,10651
static const symbol s_10_1[s_10_1307,10692
static const symbol s_10_2[s_10_2308,10738
static const symbol s_10_3[s_10_3309,10779
static const symbol s_10_4[s_10_4310,10825
static const symbol s_10_5[s_10_5311,10871
static const symbol s_10_6[s_10_6312,10917
static const symbol s_10_7[s_10_7313,10970
static const symbol s_10_8[s_10_8314,11023
static const symbol s_10_9[s_10_9315,11076
static const symbol s_10_10[s_10_10316,11117
static const symbol s_10_11[s_10_11317,11164
static const symbol s_10_12[s_10_12318,11211
static const symbol s_10_13[s_10_13319,11263
static const symbol s_10_14[s_10_14320,11322
static const symbol s_10_15[s_10_15321,11381
static const symbol s_10_16[s_10_16322,11440
static const symbol s_10_17[s_10_17323,11487
static const symbol s_10_18[s_10_18324,11539
static const symbol s_10_19[s_10_19325,11603
static const symbol s_10_20[s_10_20326,11657
static const symbol s_10_21[s_10_21327,11716
static const symbol s_10_22[s_10_22328,11787
static const symbol s_10_23[s_10_23329,11829
static const symbol s_10_24[s_10_24330,11876
static const symbol s_10_25[s_10_25331,11923
static const symbol s_10_26[s_10_26332,11970
static const symbol s_10_27[s_10_27333,12024
static const symbol s_10_28[s_10_28334,12078
static const symbol s_10_29[s_10_29335,12120
static const symbol s_10_30[s_10_30336,12169
static const struct among a_10[a_10338,12219
static const symbol s_11_0[s_11_0373,13297
static const symbol s_11_1[s_11_1374,13343
static const symbol s_11_2[s_11_2375,13394
static const symbol s_11_3[s_11_3376,13450
static const symbol s_11_4[s_11_4377,13501
static const symbol s_11_5[s_11_5378,13557
static const symbol s_11_6[s_11_6379,13615
static const symbol s_11_7[s_11_7380,13673
static const symbol s_11_8[s_11_8381,13714
static const symbol s_11_9[s_11_9382,13760
static const symbol s_11_10[s_11_10383,13811
static const symbol s_11_11[s_11_11384,13858
static const symbol s_11_12[s_11_12385,13910
static const symbol s_11_13[s_11_13386,13964
static const symbol s_11_14[s_11_14387,14018
static const symbol s_11_15[s_11_15388,14075
static const symbol s_11_16[s_11_16389,14137
static const symbol s_11_17[s_11_17390,14204
static const symbol s_11_18[s_11_18391,14273
static const symbol s_11_19[s_11_19392,14320
static const symbol s_11_20[s_11_20393,14372
static const symbol s_11_21[s_11_21394,14429
static const symbol s_11_22[s_11_22395,14481
static const symbol s_11_23[s_11_23396,14538
static const symbol s_11_24[s_11_24397,14597
static const symbol s_11_25[s_11_25398,14656
static const symbol s_11_26[s_11_26399,14708
static const symbol s_11_27[s_11_27400,14765
static const symbol s_11_28[s_11_28401,14827
static const symbol s_11_29[s_11_29402,14884
static const symbol s_11_30[s_11_30403,14946
static const symbol s_11_31[s_11_31404,15010
static const symbol s_11_32[s_11_32405,15074
static const symbol s_11_33[s_11_33406,15136
static const symbol s_11_34[s_11_34407,15203
static const symbol s_11_35[s_11_35408,15272
static const symbol s_11_36[s_11_36409,15319
static const symbol s_11_37[s_11_37410,15371
static const symbol s_11_38[s_11_38411,15428
static const symbol s_11_39[s_11_39412,15480
static const symbol s_11_40[s_11_40413,15537
static const symbol s_11_41[s_11_41414,15596
static const struct among a_11[a_11416,15656
static const unsigned char g_v[g_v462,17105
static const symbol s_0[s_0464,17256
static const symbol s_1[s_1465,17293
static const symbol s_2[s_2466,17330
static const symbol s_3[s_3467,17367
static const symbol s_4[s_4468,17404
static const symbol s_5[s_5469,17441
static const symbol s_6[s_6470,17478
static const symbol s_7[s_7471,17515
static const symbol s_8[s_8472,17552
static const symbol s_9[s_9473,17589
static const symbol s_10[s_10474,17626
static const symbol s_11[s_11475,17664
static const symbol s_12[s_12476,17702
static const symbol s_13[s_13477,17740
static int r_mark_regions(479,17779
static int r_R1(512,19045
static int r_v_ending(517,19219
static int r_double(542,20036
static int r_undouble(551,20395
static int r_instrum(568,20906
static int r_case(588,21572
static int r_case_special(604,22078
static int r_case_other(629,22906
static int r_factive(659,23858
static int r_plural(679,24558
static int r_owned(709,25502
static int r_sing_owner(739,26477
static int r_plur_owner(768,27371
extern int hungarian_UTF_8_stem(798,28371
extern struct SN_env * hungarian_UTF_8_create_env(865,30570
extern void hungarian_UTF_8_close_env(867,30662

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_danish.c,2454
static const symbol s_0_0[s_0_029,622
static const symbol s_0_1[s_0_130,672
static const symbol s_0_2[s_0_231,732
static const symbol s_0_3[s_0_332,787
static const symbol s_0_4[s_0_433,827
static const symbol s_0_5[s_0_534,887
static const symbol s_0_6[s_0_635,942
static const symbol s_0_7[s_0_736,1007
static const symbol s_0_8[s_0_837,1057
static const symbol s_0_9[s_0_938,1112
static const symbol s_0_10[s_0_1039,1162
static const symbol s_0_11[s_0_1140,1208
static const symbol s_0_12[s_0_1241,1269
static const symbol s_0_13[s_0_1342,1325
static const symbol s_0_14[s_0_1443,1371
static const symbol s_0_15[s_0_1544,1432
static const symbol s_0_16[s_0_1645,1488
static const symbol s_0_17[s_0_1746,1529
static const symbol s_0_18[s_0_1847,1585
static const symbol s_0_19[s_0_1948,1631
static const symbol s_0_20[s_0_2049,1692
static const symbol s_0_21[s_0_2150,1763
static const symbol s_0_22[s_0_2251,1819
static const symbol s_0_23[s_0_2352,1880
static const symbol s_0_24[s_0_2453,1936
static const symbol s_0_25[s_0_2554,1987
static const symbol s_0_26[s_0_2655,2053
static const symbol s_0_27[s_0_2756,2114
static const symbol s_0_28[s_0_2857,2165
static const symbol s_0_29[s_0_2958,2216
static const symbol s_0_30[s_0_3059,2277
static const symbol s_0_31[s_0_3160,2323
static const struct among a_0[a_062,2380
static const symbol s_1_0[s_1_098,3460
static const symbol s_1_1[s_1_199,3505
static const symbol s_1_2[s_1_2100,3550
static const symbol s_1_3[s_1_3101,3595
static const struct among a_1[a_1103,3641
static const symbol s_2_0[s_2_0111,3813
static const symbol s_2_1[s_2_1112,3858
static const symbol s_2_2[s_2_2113,3908
static const symbol s_2_3[s_2_3114,3963
static const symbol s_2_4[s_2_4115,4013
static const struct among a_2[a_2117,4070
static const unsigned char g_c[g_c126,4268
static const unsigned char g_v[g_v128,4326
static const unsigned char g_s_ending[g_s_ending130,4429
static const symbol s_0[s_0132,4533
static const symbol s_1[s_1133,4575
static const symbol s_2[s_2134,4617
static int r_mark_regions(136,4666
static int r_main_suffix(160,5559
static int r_consonant_pair(189,6615
static int r_other_suffix(212,7469
static int r_undouble(257,9119
extern int danish_ISO_8859_1_stem(276,9815
extern struct SN_env * danish_ISO_8859_1_create_env(313,11005
extern void danish_ISO_8859_1_close_env(315,11099

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_french.c,8772
static const symbol s_0_0[s_0_036,908
static const symbol s_0_1[s_0_137,958
static const symbol s_0_2[s_0_238,1008
static const struct among a_0[a_040,1059
static const symbol s_1_1[s_1_147,1198
static const symbol s_1_2[s_1_248,1238
static const symbol s_1_3[s_1_349,1283
static const symbol s_1_4[s_1_450,1328
static const symbol s_1_5[s_1_551,1368
static const symbol s_1_6[s_1_652,1408
static const struct among a_1[a_154,1449
static const symbol s_2_0[s_2_065,1703
static const symbol s_2_1[s_2_166,1753
static const symbol s_2_2[s_2_267,1803
static const symbol s_2_3[s_2_368,1854
static const symbol s_2_4[s_2_469,1905
static const symbol s_2_5[s_2_570,1955
static const struct among a_2[a_272,2001
static const symbol s_3_0[s_3_082,2233
static const symbol s_3_1[s_3_183,2278
static const symbol s_3_2[s_3_284,2333
static const struct among a_3[a_386,2379
static const symbol s_4_0[s_4_093,2515
static const symbol s_4_1[s_4_194,2570
static const symbol s_4_2[s_4_295,2635
static const symbol s_4_3[s_4_396,2690
static const symbol s_4_4[s_4_497,2745
static const symbol s_4_5[s_4_598,2805
static const symbol s_4_6[s_4_699,2860
static const symbol s_4_7[s_4_7100,2915
static const symbol s_4_8[s_4_8101,2970
static const symbol s_4_9[s_4_9102,3025
static const symbol s_4_10[s_4_10103,3075
static const symbol s_4_11[s_4_11104,3121
static const symbol s_4_12[s_4_12105,3182
static const symbol s_4_13[s_4_13106,3243
static const symbol s_4_14[s_4_14107,3304
static const symbol s_4_15[s_4_15108,3365
static const symbol s_4_16[s_4_16109,3426
static const symbol s_4_17[s_4_17110,3497
static const symbol s_4_18[s_4_18111,3558
static const symbol s_4_19[s_4_19112,3619
static const symbol s_4_20[s_4_20113,3685
static const symbol s_4_21[s_4_21114,3746
static const symbol s_4_22[s_4_22115,3807
static const symbol s_4_23[s_4_23116,3868
static const symbol s_4_24[s_4_24117,3929
static const symbol s_4_25[s_4_25118,3985
static const symbol s_4_26[s_4_26119,4036
static const symbol s_4_27[s_4_27120,4102
static const symbol s_4_28[s_4_28121,4168
static const symbol s_4_29[s_4_29122,4234
static const symbol s_4_30[s_4_30123,4300
static const symbol s_4_31[s_4_31124,4361
static const symbol s_4_32[s_4_32125,4427
static const symbol s_4_33[s_4_33126,4508
static const symbol s_4_34[s_4_34127,4565
static const symbol s_4_35[s_4_35128,4621
static const symbol s_4_36[s_4_36129,4682
static const symbol s_4_37[s_4_37130,4758
static const symbol s_4_38[s_4_38131,4824
static const symbol s_4_39[s_4_39132,4890
static const symbol s_4_40[s_4_40133,4941
static const symbol s_4_41[s_4_41134,4997
static const symbol s_4_42[s_4_42135,5048
static const struct among a_4[a_4137,5101
static const symbol s_5_0[s_5_0184,6560
static const symbol s_5_1[s_5_1185,6610
static const symbol s_5_2[s_5_2186,6655
static const symbol s_5_3[s_5_3187,6710
static const symbol s_5_4[s_5_4188,6780
static const symbol s_5_5[s_5_5189,6820
static const symbol s_5_6[s_5_6190,6875
static const symbol s_5_7[s_5_7191,6920
static const symbol s_5_8[s_5_8192,6975
static const symbol s_5_9[s_5_9193,7025
static const symbol s_5_10[s_5_10194,7081
static const symbol s_5_11[s_5_11195,7142
static const symbol s_5_12[s_5_12196,7218
static const symbol s_5_13[s_5_13197,7275
static const symbol s_5_14[s_5_14198,7321
static const symbol s_5_15[s_5_15199,7382
static const symbol s_5_16[s_5_16200,7448
static const symbol s_5_17[s_5_17201,7514
static const symbol s_5_18[s_5_18202,7585
static const symbol s_5_19[s_5_19203,7646
static const symbol s_5_20[s_5_20204,7712
static const symbol s_5_21[s_5_21205,7783
static const symbol s_5_22[s_5_22206,7829
static const symbol s_5_23[s_5_23207,7890
static const symbol s_5_24[s_5_24208,7956
static const symbol s_5_25[s_5_25209,8022
static const symbol s_5_26[s_5_26210,8093
static const symbol s_5_27[s_5_27211,8169
static const symbol s_5_28[s_5_28212,8230
static const symbol s_5_29[s_5_29213,8296
static const symbol s_5_30[s_5_30214,8357
static const symbol s_5_31[s_5_31215,8404
static const symbol s_5_32[s_5_32216,8465
static const symbol s_5_33[s_5_33217,8531
static const symbol s_5_34[s_5_34218,8587
static const struct among a_5[a_5220,8649
static const symbol s_6_0[s_6_0259,9834
static const symbol s_6_1[s_6_1260,9874
static const symbol s_6_2[s_6_2261,9924
static const symbol s_6_3[s_6_3262,9979
static const symbol s_6_4[s_6_4263,10034
static const symbol s_6_5[s_6_5264,10080
static const symbol s_6_6[s_6_6265,10125
static const symbol s_6_7[s_6_7266,10180
static const symbol s_6_8[s_6_8267,10225
static const symbol s_6_9[s_6_9268,10270
static const symbol s_6_10[s_6_10269,10325
static const symbol s_6_11[s_6_11270,10382
static const symbol s_6_12[s_6_12271,10443
static const symbol s_6_13[s_6_13272,10504
static const symbol s_6_14[s_6_14273,10561
static const symbol s_6_15[s_6_15274,10613
static const symbol s_6_16[s_6_16275,10664
static const symbol s_6_17[s_6_17276,10725
static const symbol s_6_18[s_6_18277,10781
static const symbol s_6_19[s_6_19278,10847
static const symbol s_6_20[s_6_20279,10918
static const symbol s_6_21[s_6_21280,10979
static const symbol s_6_22[s_6_22281,11035
static const symbol s_6_23[s_6_23282,11082
static const symbol s_6_24[s_6_24283,11133
static const symbol s_6_25[s_6_25284,11194
static const symbol s_6_26[s_6_26285,11245
static const symbol s_6_27[s_6_27286,11306
static const symbol s_6_28[s_6_28287,11377
static const symbol s_6_29[s_6_29288,11439
static const symbol s_6_30[s_6_30289,11505
static const symbol s_6_31[s_6_31290,11566
static const symbol s_6_32[s_6_32291,11613
static const symbol s_6_33[s_6_33292,11659
static const symbol s_6_34[s_6_34293,11710
static const symbol s_6_35[s_6_35294,11771
static const symbol s_6_36[s_6_36295,11837
static const symbol s_6_37[s_6_37296,11893
static const struct among a_6[a_6298,11936
static const symbol s_7_0[s_7_0340,13218
static const symbol s_7_1[s_7_1341,13258
static const symbol s_7_2[s_7_2342,13314
static const symbol s_7_3[s_7_3343,13370
static const symbol s_7_4[s_7_4344,13420
static const symbol s_7_5[s_7_5345,13470
static const struct among a_7[a_7347,13521
static const symbol s_8_0[s_8_0357,13751
static const symbol s_8_1[s_8_1358,13801
static const symbol s_8_2[s_8_2359,13856
static const symbol s_8_3[s_8_3360,13906
static const symbol s_8_4[s_8_4361,13956
static const struct among a_8[a_8363,14007
static const unsigned char g_v[g_v372,14212
static const unsigned char g_keep_with_s[g_keep_with_s374,14321
static const symbol s_0[s_0376,14426
static const symbol s_1[s_1377,14463
static const symbol s_2[s_2378,14500
static const symbol s_3[s_3379,14537
static const symbol s_4[s_4380,14579
static const symbol s_5[s_5381,14621
static const symbol s_6[s_6382,14658
static const symbol s_7[s_7383,14695
static const symbol s_8[s_8384,14732
static const symbol s_9[s_9385,14769
static const symbol s_10[s_10386,14806
static const symbol s_11[s_11387,14845
static const symbol s_12[s_12388,14884
static const symbol s_13[s_13389,14927
static const symbol s_14[s_14390,14975
static const symbol s_15[s_15391,15023
static const symbol s_16[s_16392,15061
static const symbol s_17[s_17393,15109
static const symbol s_18[s_18394,15152
static const symbol s_19[s_19395,15200
static const symbol s_20[s_20396,15238
static const symbol s_21[s_21397,15286
static const symbol s_22[s_22398,15334
static const symbol s_23[s_23399,15377
static const symbol s_24[s_24400,15420
static const symbol s_25[s_25401,15468
static const symbol s_26[s_26402,15516
static const symbol s_27[s_27403,15559
static const symbol s_28[s_28404,15607
static const symbol s_29[s_29405,15655
static const symbol s_30[s_30406,15703
static const symbol s_31[s_31407,15746
static const symbol s_32[s_32408,15784
static const symbol s_33[s_33409,15822
static const symbol s_34[s_34410,15860
static int r_prelude(412,15899
static int r_mark_regions(510,19836
static int r_postlude(570,22021
static int r_RV(624,23814
static int r_R1(629,23988
static int r_R2(634,24162
static int r_standard_suffix(639,24336
static int r_i_verb_suffix(969,38317
static int r_verb_suffix(994,39352
static int r_residual_suffix(1041,41124
static int r_un_double(1110,43867
static int r_un_accent(1126,44462
extern int french_ISO_8859_1_stem(1154,45290
extern struct SN_env * french_ISO_8859_1_create_env(1250,48969
extern void french_ISO_8859_1_close_env(1252,49063

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_norwegian.c,2346
static const symbol s_0_0[s_0_028,589
static const symbol s_0_1[s_0_129,629
static const symbol s_0_2[s_0_230,669
static const symbol s_0_3[s_0_331,719
static const symbol s_0_4[s_0_432,774
static const symbol s_0_5[s_0_533,829
static const symbol s_0_6[s_0_634,879
static const symbol s_0_7[s_0_735,929
static const symbol s_0_8[s_0_836,994
static const symbol s_0_9[s_0_937,1049
static const symbol s_0_10[s_0_1038,1094
static const symbol s_0_11[s_0_1139,1155
static const symbol s_0_12[s_0_1240,1201
static const symbol s_0_13[s_0_1341,1247
static const symbol s_0_14[s_0_1442,1308
static const symbol s_0_15[s_0_1543,1349
static const symbol s_0_16[s_0_1644,1395
static const symbol s_0_17[s_0_1745,1441
static const symbol s_0_18[s_0_1846,1497
static const symbol s_0_19[s_0_1947,1558
static const symbol s_0_20[s_0_2048,1614
static const symbol s_0_21[s_0_2149,1685
static const symbol s_0_22[s_0_2250,1736
static const symbol s_0_23[s_0_2351,1802
static const symbol s_0_24[s_0_2452,1853
static const symbol s_0_25[s_0_2553,1904
static const symbol s_0_26[s_0_2654,1950
static const symbol s_0_27[s_0_2755,2001
static const symbol s_0_28[s_0_2856,2052
static const struct among a_0[a_058,2104
static const symbol s_1_0[s_1_091,3084
static const symbol s_1_1[s_1_192,3129
static const struct among a_1[a_194,3175
static const symbol s_2_0[s_2_0100,3281
static const symbol s_2_1[s_2_1101,3331
static const symbol s_2_2[s_2_2102,3386
static const symbol s_2_3[s_2_3103,3431
static const symbol s_2_4[s_2_4104,3481
static const symbol s_2_5[s_2_5105,3531
static const symbol s_2_6[s_2_6106,3586
static const symbol s_2_7[s_2_7107,3636
static const symbol s_2_8[s_2_8108,3686
static const symbol s_2_9[s_2_9109,3741
static const symbol s_2_10[s_2_10110,3796
static const struct among a_2[a_2112,3868
static const unsigned char g_v[g_v127,4255
static const unsigned char g_s_ending[g_s_ending129,4358
static const symbol s_0[s_0131,4423
static int r_mark_regions(133,4466
static int r_main_suffix(157,5359
static int r_consonant_pair(200,6956
static int r_other_suffix(223,7783
extern int norwegian_ISO_8859_1_stem(240,8430
extern struct SN_env * norwegian_ISO_8859_1_create_env(271,9420
extern void norwegian_ISO_8859_1_close_env(273,9517

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_romanian.c,11499
static const symbol s_0_1[s_0_135,849
static const symbol s_0_2[s_0_236,889
static const struct among a_0[a_038,930
static const symbol s_1_0[s_1_045,1060
static const symbol s_1_1[s_1_146,1105
static const symbol s_1_2[s_1_247,1167
static const symbol s_1_3[s_1_348,1217
static const symbol s_1_4[s_1_449,1267
static const symbol s_1_5[s_1_550,1329
static const symbol s_1_6[s_1_651,1379
static const symbol s_1_7[s_1_752,1429
static const symbol s_1_8[s_1_853,1484
static const symbol s_1_9[s_1_954,1534
static const symbol s_1_10[s_1_1055,1589
static const symbol s_1_11[s_1_1156,1635
static const symbol s_1_12[s_1_1257,1691
static const symbol s_1_13[s_1_1358,1737
static const symbol s_1_14[s_1_1459,1793
static const symbol s_1_15[s_1_1560,1849
static const struct among a_1[a_162,1911
static const symbol s_2_0[s_2_082,2469
static const symbol s_2_1[s_2_183,2529
static const symbol s_2_2[s_2_284,2589
static const symbol s_2_3[s_2_385,2649
static const symbol s_2_4[s_2_486,2709
static const symbol s_2_5[s_2_587,2769
static const symbol s_2_6[s_2_688,2841
static const symbol s_2_7[s_2_789,2913
static const symbol s_2_8[s_2_890,2978
static const symbol s_2_9[s_2_991,3043
static const symbol s_2_10[s_2_1092,3115
static const symbol s_2_11[s_2_1193,3186
static const symbol s_2_12[s_2_1294,3267
static const symbol s_2_13[s_2_1395,3348
static const symbol s_2_14[s_2_1496,3419
static const symbol s_2_15[s_2_1597,3480
static const symbol s_2_16[s_2_1698,3541
static const symbol s_2_17[s_2_1799,3602
static const symbol s_2_18[s_2_18100,3663
static const symbol s_2_19[s_2_19101,3724
static const symbol s_2_20[s_2_20102,3795
static const symbol s_2_21[s_2_21103,3856
static const symbol s_2_22[s_2_22104,3924
static const symbol s_2_23[s_2_23105,3995
static const symbol s_2_24[s_2_24106,4076
static const symbol s_2_25[s_2_25107,4147
static const symbol s_2_26[s_2_26108,4208
static const symbol s_2_27[s_2_27109,4269
static const symbol s_2_28[s_2_28110,4330
static const symbol s_2_29[s_2_29111,4403
static const symbol s_2_30[s_2_30112,4486
static const symbol s_2_31[s_2_31113,4559
static const symbol s_2_32[s_2_32114,4644
static const symbol s_2_33[s_2_33115,4740
static const symbol s_2_34[s_2_34116,4825
static const symbol s_2_35[s_2_35117,4881
static const symbol s_2_36[s_2_36118,4937
static const symbol s_2_37[s_2_37119,5003
static const symbol s_2_38[s_2_38120,5059
static const symbol s_2_39[s_2_39121,5122
static const symbol s_2_40[s_2_40122,5178
static const symbol s_2_41[s_2_41123,5234
static const symbol s_2_42[s_2_42124,5290
static const symbol s_2_43[s_2_43125,5358
static const symbol s_2_44[s_2_44126,5426
static const symbol s_2_45[s_2_45127,5494
static const struct among a_2[a_2129,5563
static const symbol s_3_0[s_3_0179,7113
static const symbol s_3_1[s_3_1180,7163
static const symbol s_3_2[s_3_2181,7223
static const symbol s_3_3[s_3_3182,7283
static const symbol s_3_4[s_3_4183,7338
static const symbol s_3_5[s_3_5184,7388
static const symbol s_3_6[s_3_6185,7438
static const symbol s_3_7[s_3_7186,7493
static const symbol s_3_8[s_3_8187,7548
static const symbol s_3_9[s_3_9188,7598
static const symbol s_3_10[s_3_10189,7648
static const symbol s_3_11[s_3_11190,7694
static const symbol s_3_12[s_3_12191,7745
static const symbol s_3_13[s_3_13192,7806
static const symbol s_3_14[s_3_14193,7867
static const symbol s_3_15[s_3_15194,7923
static const symbol s_3_16[s_3_16195,7979
static const symbol s_3_17[s_3_17196,8035
static const symbol s_3_18[s_3_18197,8086
static const symbol s_3_19[s_3_19198,8147
static const symbol s_3_20[s_3_20199,8198
static const symbol s_3_21[s_3_21200,8254
static const symbol s_3_22[s_3_22201,8310
static const symbol s_3_23[s_3_23202,8361
static const symbol s_3_24[s_3_24203,8412
static const symbol s_3_25[s_3_25204,8463
static const symbol s_3_26[s_3_26205,8524
static const symbol s_3_27[s_3_27206,8585
static const symbol s_3_28[s_3_28207,8641
static const symbol s_3_29[s_3_29208,8702
static const symbol s_3_30[s_3_30209,8753
static const symbol s_3_31[s_3_31210,8804
static const symbol s_3_32[s_3_32211,8865
static const symbol s_3_33[s_3_33212,8916
static const symbol s_3_34[s_3_34213,8972
static const symbol s_3_35[s_3_35214,9028
static const symbol s_3_36[s_3_36215,9079
static const symbol s_3_37[s_3_37216,9142
static const symbol s_3_38[s_3_38217,9193
static const symbol s_3_39[s_3_39218,9256
static const symbol s_3_40[s_3_40219,9314
static const symbol s_3_41[s_3_41220,9389
static const symbol s_3_42[s_3_42221,9445
static const symbol s_3_43[s_3_43222,9501
static const symbol s_3_44[s_3_44223,9552
static const symbol s_3_45[s_3_45224,9608
static const symbol s_3_46[s_3_46225,9654
static const symbol s_3_47[s_3_47226,9700
static const symbol s_3_48[s_3_48227,9746
static const symbol s_3_49[s_3_49228,9797
static const symbol s_3_50[s_3_50229,9848
static const symbol s_3_51[s_3_51230,9894
static const symbol s_3_52[s_3_52231,9940
static const symbol s_3_53[s_3_53232,9998
static const symbol s_3_54[s_3_54233,10066
static const symbol s_3_55[s_3_55234,10134
static const symbol s_3_56[s_3_56235,10197
static const symbol s_3_57[s_3_57236,10255
static const symbol s_3_58[s_3_58237,10313
static const symbol s_3_59[s_3_59238,10376
static const symbol s_3_60[s_3_60239,10439
static const symbol s_3_61[s_3_61240,10497
static const struct among a_3[a_3242,10556
static const symbol s_4_0[s_4_0308,12633
static const symbol s_4_1[s_4_1309,12678
static const symbol s_4_2[s_4_2310,12723
static const symbol s_4_3[s_4_3311,12773
static const symbol s_4_4[s_4_4312,12830
static const symbol s_4_5[s_4_5313,12880
static const symbol s_4_6[s_4_6314,12937
static const symbol s_4_7[s_4_7315,12987
static const symbol s_4_8[s_4_8316,13037
static const symbol s_4_9[s_4_9317,13087
static const symbol s_4_10[s_4_10318,13144
static const symbol s_4_11[s_4_11319,13190
static const symbol s_4_12[s_4_12320,13241
static const symbol s_4_13[s_4_13321,13297
static const symbol s_4_14[s_4_14322,13348
static const symbol s_4_15[s_4_15323,13399
static const symbol s_4_16[s_4_16324,13457
static const symbol s_4_17[s_4_17325,13520
static const symbol s_4_18[s_4_18326,13590
static const symbol s_4_19[s_4_19327,13641
static const symbol s_4_20[s_4_20328,13687
static const symbol s_4_21[s_4_21329,13738
static const symbol s_4_22[s_4_22330,13789
static const symbol s_4_23[s_4_23331,13840
static const symbol s_4_24[s_4_24332,13903
static const symbol s_4_25[s_4_25333,13973
static const symbol s_4_26[s_4_26334,14019
static const symbol s_4_27[s_4_27335,14070
static const symbol s_4_28[s_4_28336,14128
static const symbol s_4_29[s_4_29337,14191
static const symbol s_4_30[s_4_30338,14259
static const symbol s_4_31[s_4_31339,14332
static const symbol s_4_32[s_4_32340,14400
static const symbol s_4_33[s_4_33341,14468
static const symbol s_4_34[s_4_34342,14543
static const symbol s_4_35[s_4_35343,14601
static const symbol s_4_36[s_4_36344,14659
static const symbol s_4_37[s_4_37345,14724
static const symbol s_4_38[s_4_38346,14777
static const symbol s_4_39[s_4_39347,14835
static const symbol s_4_40[s_4_40348,14898
static const symbol s_4_41[s_4_41349,14961
static const symbol s_4_42[s_4_42350,15019
static const symbol s_4_43[s_4_43351,15077
static const symbol s_4_44[s_4_44352,15152
static const symbol s_4_45[s_4_45353,15232
static const symbol s_4_46[s_4_46354,15317
static const symbol s_4_47[s_4_47355,15408
static const symbol s_4_48[s_4_48356,15493
static const symbol s_4_49[s_4_49357,15578
static const symbol s_4_50[s_4_50358,15671
static const symbol s_4_51[s_4_51359,15746
static const symbol s_4_52[s_4_52360,15821
static const symbol s_4_53[s_4_53361,15903
static const symbol s_4_54[s_4_54362,15968
static const symbol s_4_55[s_4_55363,16014
static const symbol s_4_56[s_4_56364,16065
static const symbol s_4_57[s_4_57365,16116
static const symbol s_4_58[s_4_58366,16162
static const symbol s_4_59[s_4_59367,16218
static const symbol s_4_60[s_4_60368,16279
static const symbol s_4_61[s_4_61369,16335
static const symbol s_4_62[s_4_62370,16391
static const symbol s_4_63[s_4_63371,16454
static const symbol s_4_64[s_4_64372,16500
static const symbol s_4_65[s_4_65373,16553
static const symbol s_4_66[s_4_66374,16616
static const symbol s_4_67[s_4_67375,16684
static const symbol s_4_68[s_4_68376,16757
static const symbol s_4_69[s_4_69377,16835
static const symbol s_4_70[s_4_70378,16908
static const symbol s_4_71[s_4_71379,16981
static const symbol s_4_72[s_4_72380,17061
static const symbol s_4_73[s_4_73381,17124
static const symbol s_4_74[s_4_74382,17187
static const symbol s_4_75[s_4_75383,17257
static const symbol s_4_76[s_4_76384,17310
static const symbol s_4_77[s_4_77385,17356
static const symbol s_4_78[s_4_78386,17407
static const symbol s_4_79[s_4_79387,17458
static const symbol s_4_80[s_4_80388,17514
static const symbol s_4_81[s_4_81389,17577
static const symbol s_4_82[s_4_82390,17623
static const symbol s_4_83[s_4_83391,17691
static const symbol s_4_84[s_4_84392,17749
static const symbol s_4_85[s_4_85393,17812
static const symbol s_4_86[s_4_86394,17880
static const symbol s_4_87[s_4_87395,17953
static const symbol s_4_88[s_4_88396,18021
static const symbol s_4_89[s_4_89397,18089
static const symbol s_4_90[s_4_90398,18164
static const symbol s_4_91[s_4_91399,18222
static const symbol s_4_92[s_4_92400,18280
static const symbol s_4_93[s_4_93401,18345
static const struct among a_4[a_4403,18409
static const symbol s_5_0[s_5_0501,21544
static const symbol s_5_1[s_5_1502,21584
static const symbol s_5_2[s_5_2503,21624
static const symbol s_5_3[s_5_3504,21669
static const symbol s_5_4[s_5_4505,21709
static const struct among a_5[a_5507,21757
static const unsigned char g_v[g_v516,21956
static const symbol s_0[s_0518,22063
static const symbol s_1[s_1519,22100
static const symbol s_2[s_2520,22137
static const symbol s_3[s_3521,22174
static const symbol s_4[s_4522,22211
static const symbol s_5[s_5523,22248
static const symbol s_6[s_6524,22285
static const symbol s_7[s_7525,22322
static const symbol s_8[s_8526,22364
static const symbol s_9[s_9527,22401
static const symbol s_10[s_10528,22443
static const symbol s_11[s_11529,22498
static const symbol s_12[s_12530,22551
static const symbol s_13[s_13531,22604
static const symbol s_14[s_14532,22647
static const symbol s_15[s_15533,22690
static const symbol s_16[s_16534,22733
static const symbol s_17[s_17535,22776
static const symbol s_18[s_18536,22821
static const symbol s_19[s_19537,22859
static int r_prelude(539,22908
static int r_mark_regions(584,24490
static int r_postlude(666,27577
static int r_RV(702,28723
static int r_R1(707,28897
static int r_R2(712,29071
static int r_step_0(717,29245
static int r_combo_suffix(773,31107
static int r_standard_suffix(821,32801
static int r_verb_suffix(866,34253
static int r_vowel_suffix(902,35570
extern int romanian_UTF_8_stem(915,35984
extern struct SN_env * romanian_UTF_8_create_env(971,37789
extern void romanian_UTF_8_close_env(973,37880

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_finnish.c,5119
static const symbol s_0_0[s_0_035,858
static const symbol s_0_1[s_0_136,903
static const symbol s_0_2[s_0_237,953
static const symbol s_0_3[s_0_338,1008
static const symbol s_0_4[s_0_439,1058
static const symbol s_0_5[s_0_540,1108
static const symbol s_0_6[s_0_641,1159
static const symbol s_0_7[s_0_742,1216
static const symbol s_0_8[s_0_843,1261
static const symbol s_0_9[s_0_944,1307
static const struct among a_0[a_046,1354
static const symbol s_1_0[s_1_060,1715
static const symbol s_1_1[s_1_161,1765
static const symbol s_1_2[s_1_262,1810
static const symbol s_1_3[s_1_363,1860
static const symbol s_1_4[s_1_464,1905
static const symbol s_1_5[s_1_565,1955
static const struct among a_1[a_167,2006
static const symbol s_2_0[s_2_077,2242
static const symbol s_2_1[s_2_178,2293
static const symbol s_2_2[s_2_279,2339
static const symbol s_2_3[s_2_380,2390
static const symbol s_2_4[s_2_481,2436
static const symbol s_2_5[s_2_582,2487
static const struct among a_2[a_284,2539
static const symbol s_3_0[s_3_094,2775
static const symbol s_3_1[s_3_195,2825
static const struct among a_3[a_397,2876
static const symbol s_4_0[s_4_0103,2982
static const symbol s_4_1[s_4_1104,3032
static const symbol s_4_2[s_4_2105,3082
static const symbol s_4_3[s_4_3106,3132
static const symbol s_4_4[s_4_4107,3177
static const symbol s_4_5[s_4_5108,3222
static const symbol s_4_6[s_4_6109,3267
static const symbol s_4_7[s_4_7110,3312
static const symbol s_4_8[s_4_8111,3358
static const struct among a_4[a_4113,3410
static const symbol s_5_0[s_5_0126,3738
static const symbol s_5_1[s_5_1127,3783
static const symbol s_5_2[s_5_2128,3828
static const symbol s_5_3[s_5_3129,3873
static const symbol s_5_4[s_5_4130,3918
static const symbol s_5_5[s_5_5131,3963
static const symbol s_5_6[s_5_6132,4010
static const struct among a_5[a_5134,4058
static const symbol s_6_0[s_6_0145,4329
static const symbol s_6_1[s_6_1146,4369
static const symbol s_6_2[s_6_2147,4419
static const symbol s_6_3[s_6_3148,4464
static const symbol s_6_4[s_6_4149,4514
static const symbol s_6_5[s_6_5150,4559
static const symbol s_6_6[s_6_6151,4609
static const symbol s_6_7[s_6_7152,4659
static const symbol s_6_8[s_6_8153,4709
static const symbol s_6_9[s_6_9154,4759
static const symbol s_6_10[s_6_10155,4809
static const symbol s_6_11[s_6_11156,4860
static const symbol s_6_12[s_6_12157,4901
static const symbol s_6_13[s_6_13158,4952
static const symbol s_6_14[s_6_14159,5003
static const symbol s_6_15[s_6_15160,5059
static const symbol s_6_16[s_6_16161,5110
static const symbol s_6_17[s_6_17162,5166
static const symbol s_6_18[s_6_18163,5217
static const symbol s_6_19[s_6_19164,5273
static const symbol s_6_20[s_6_20165,5324
static const symbol s_6_21[s_6_21166,5376
static const symbol s_6_22[s_6_22167,5428
static const symbol s_6_23[s_6_23168,5470
static const symbol s_6_24[s_6_24169,5522
static const symbol s_6_25[s_6_25170,5569
static const symbol s_6_26[s_6_26171,5621
static const symbol s_6_27[s_6_27172,5668
static const symbol s_6_28[s_6_28173,5720
static const symbol s_6_29[s_6_29174,5772
static const struct among a_6[a_6176,5825
static const symbol s_7_0[s_7_0210,6872
static const symbol s_7_1[s_7_1211,6922
static const symbol s_7_2[s_7_2212,6972
static const symbol s_7_3[s_7_3213,7027
static const symbol s_7_4[s_7_4214,7077
static const symbol s_7_5[s_7_5215,7132
static const symbol s_7_6[s_7_6216,7182
static const symbol s_7_7[s_7_7217,7237
static const symbol s_7_8[s_7_8218,7287
static const symbol s_7_9[s_7_9219,7342
static const symbol s_7_10[s_7_10220,7393
static const symbol s_7_11[s_7_11221,7445
static const symbol s_7_12[s_7_12222,7502
static const symbol s_7_13[s_7_13223,7554
static const struct among a_7[a_7225,7612
static const symbol s_8_0[s_8_0243,8109
static const symbol s_8_1[s_8_1244,8149
static const struct among a_8[a_8246,8190
static const symbol s_9_0[s_9_0252,8296
static const symbol s_9_1[s_9_1253,8346
static const struct among a_9[a_9255,8402
static const unsigned char g_AEI[g_AEI261,8506
static const unsigned char g_C[g_C263,8600
static const unsigned char g_V1[g_V1265,8658
static const unsigned char g_V2[g_V2267,8760
static const unsigned char g_particle_end[g_particle_end269,8862
static const symbol s_0[s_0271,8974
static const symbol s_1[s_1272,9021
static const symbol s_2[s_2273,9068
static const symbol s_3[s_3274,9110
static const symbol s_4[s_4275,9152
static int r_mark_regions(277,9195
static int r_R2(297,9991
static int r_particle_etc(302,10165
static int r_possessive(330,11070
static int r_LONG(396,13492
static int r_VI(401,13634
static int r_case_ending(408,13881
static int r_other_endings(480,16616
static int r_i_plural(508,17507
static int r_t_plural(525,18127
static int r_tidy(571,19783
extern int finnish_ISO_8859_1_stem(654,23160
extern struct SN_env * finnish_ISO_8859_1_create_env(715,25150
extern void finnish_ISO_8859_1_close_env(717,25245

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_porter.c,4516
static const symbol s_0_0[s_0_035,817
static const symbol s_0_1[s_0_136,857
static const symbol s_0_2[s_0_237,907
static const symbol s_0_3[s_0_338,962
static const struct among a_0[a_040,1008
static const symbol s_1_1[s_1_148,1174
static const symbol s_1_2[s_1_249,1219
static const symbol s_1_3[s_1_350,1264
static const symbol s_1_4[s_1_451,1309
static const symbol s_1_5[s_1_552,1354
static const symbol s_1_6[s_1_653,1399
static const symbol s_1_7[s_1_754,1444
static const symbol s_1_8[s_1_855,1489
static const symbol s_1_9[s_1_956,1534
static const symbol s_1_10[s_1_1057,1579
static const symbol s_1_11[s_1_1158,1625
static const symbol s_1_12[s_1_1259,1671
static const struct among a_1[a_161,1718
static const symbol s_2_0[s_2_078,2162
static const symbol s_2_1[s_2_179,2207
static const symbol s_2_2[s_2_280,2257
static const struct among a_2[a_282,2308
static const symbol s_3_0[s_3_089,2443
static const symbol s_3_1[s_3_190,2498
static const symbol s_3_2[s_3_291,2553
static const symbol s_3_3[s_3_392,2608
static const symbol s_3_4[s_3_493,2658
static const symbol s_3_5[s_3_594,2713
static const symbol s_3_6[s_3_695,2773
static const symbol s_3_7[s_3_796,2833
static const symbol s_3_8[s_3_897,2893
static const symbol s_3_9[s_3_998,2958
static const symbol s_3_10[s_3_1099,3018
static const symbol s_3_11[s_3_11100,3084
static const symbol s_3_12[s_3_12101,3155
static const symbol s_3_13[s_3_13102,3216
static const symbol s_3_14[s_3_14103,3277
static const symbol s_3_15[s_3_15104,3348
static const symbol s_3_16[s_3_16105,3404
static const symbol s_3_17[s_3_17106,3460
static const symbol s_3_18[s_3_18107,3531
static const symbol s_3_19[s_3_19108,3602
static const struct among a_3[a_3110,3674
static const symbol s_4_0[s_4_0134,4371
static const symbol s_4_1[s_4_1135,4431
static const symbol s_4_2[s_4_2136,4491
static const symbol s_4_3[s_4_3137,4551
static const symbol s_4_4[s_4_4138,4611
static const symbol s_4_5[s_4_5139,4666
static const symbol s_4_6[s_4_6140,4716
static const struct among a_4[a_4142,4772
static const symbol s_5_0[s_5_0153,5036
static const symbol s_5_1[s_5_1154,5081
static const symbol s_5_2[s_5_2155,5136
static const symbol s_5_3[s_5_3156,5191
static const symbol s_5_4[s_5_4157,5246
static const symbol s_5_5[s_5_5158,5301
static const symbol s_5_6[s_5_6159,5351
static const symbol s_5_7[s_5_7160,5401
static const symbol s_5_8[s_5_8161,5451
static const symbol s_5_9[s_5_9162,5501
static const symbol s_5_10[s_5_10163,5546
static const symbol s_5_11[s_5_11164,5597
static const symbol s_5_12[s_5_12165,5648
static const symbol s_5_13[s_5_13166,5694
static const symbol s_5_14[s_5_14167,5745
static const symbol s_5_15[s_5_15168,5796
static const symbol s_5_16[s_5_16169,5847
static const symbol s_5_17[s_5_17170,5903
static const symbol s_5_18[s_5_18171,5964
static const struct among a_5[a_5173,6011
static const unsigned char g_v[g_v196,6669
static const unsigned char g_v_WXY[g_v_WXY198,6724
static const symbol s_0[s_0200,6787
static const symbol s_1[s_1201,6829
static const symbol s_2[s_2202,6866
static const symbol s_3[s_3203,6908
static const symbol s_4[s_4204,6945
static const symbol s_5[s_5205,6982
static const symbol s_6[s_6206,7019
static const symbol s_7[s_7207,7071
static const symbol s_8[s_8208,7123
static const symbol s_9[s_9209,7175
static const symbol s_10[s_10210,7227
static const symbol s_11[s_11211,7275
static const symbol s_12[s_12212,7313
static const symbol s_13[s_13213,7361
static const symbol s_14[s_14214,7409
static const symbol s_15[s_15215,7452
static const symbol s_16[s_16216,7500
static const symbol s_17[s_17217,7548
static const symbol s_18[s_18218,7596
static const symbol s_19[s_19219,7644
static const symbol s_20[s_20220,7687
static const symbol s_21[s_21221,7730
static const symbol s_22[s_22222,7768
static const symbol s_23[s_23223,7806
static int r_shortv(225,7845
static int r_R1(232,8165
static int r_R2(237,8339
static int r_Step_1a(242,8513
static int r_Step_1b(269,9360
static int r_Step_1c(346,12552
static int r_Step_2(370,13292
static int r_Step_3(450,15892
static int r_Step_4(480,16883
static int r_Step_5a(515,18116
static int r_Step_5b(548,19127
extern int porter_UTF_8_stem(564,19652
extern struct SN_env * porter_UTF_8_create_env(722,25018
extern void porter_UTF_8_close_env(724,25107

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/utilities.c,1034
#define CREATE_SIZE 3,21
extern symbol * create_s(5,44
extern void lose_s(15,305
extern int skip_utf8(28,649
static int get_utf8(61,1527
static int get_b_utf8(83,2115
extern int in_grouping_U(107,2705
extern int in_grouping_b_U(119,3072
extern int out_grouping_U(131,3444
extern int out_grouping_b_U(143,3815
extern int in_grouping(157,4243
extern int in_grouping_b(169,4590
extern int out_grouping(181,4944
extern int out_grouping_b(193,5295
extern int eq_s(205,5653
extern int eq_s_b(210,5849
extern int eq_v(215,6057
extern int eq_v_b(219,6147
extern int find_among(223,6241
extern int find_among_b(288,7974
static symbol * increase_size(345,9517
extern int replace_s(364,10054
static int slice_check(395,10991
extern int slice_from_s(412,11334
extern int slice_from_v(417,11505
extern int slice_del(421,11611
extern int insert_s(425,11690
extern int insert_v(434,11981
extern symbol * slice_to(438,12107
extern symbol * assign_to(456,12522
extern int len_utf8(468,12802
extern void debug(479,13002

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_dutch.c,2663
static const symbol s_0_1[s_0_133,769
static const symbol s_0_2[s_0_234,810
static const symbol s_0_3[s_0_335,851
static const symbol s_0_4[s_0_436,892
static const symbol s_0_5[s_0_537,933
static const symbol s_0_6[s_0_638,974
static const symbol s_0_7[s_0_739,1015
static const symbol s_0_8[s_0_840,1056
static const symbol s_0_9[s_0_941,1097
static const symbol s_0_10[s_0_1042,1138
static const struct among a_0[a_044,1181
static const symbol s_1_1[s_1_159,1561
static const symbol s_1_2[s_1_260,1601
static const struct among a_1[a_162,1642
static const symbol s_2_0[s_2_069,1772
static const symbol s_2_1[s_2_170,1817
static const symbol s_2_2[s_2_271,1862
static const struct among a_2[a_273,1908
static const symbol s_3_0[s_3_080,2047
static const symbol s_3_1[s_3_181,2097
static const symbol s_3_2[s_3_282,2142
static const symbol s_3_3[s_3_383,2187
static const symbol s_3_4[s_3_484,2247
static const struct among a_3[a_386,2288
static const symbol s_4_0[s_4_095,2487
static const symbol s_4_1[s_4_196,2537
static const symbol s_4_2[s_4_297,2582
static const symbol s_4_3[s_4_398,2632
static const symbol s_4_4[s_4_499,2687
static const symbol s_4_5[s_4_5100,2742
static const struct among a_4[a_4102,2793
static const symbol s_5_0[s_5_0112,3025
static const symbol s_5_1[s_5_1113,3070
static const symbol s_5_2[s_5_2114,3115
static const symbol s_5_3[s_5_3115,3160
static const struct among a_5[a_5117,3206
static const unsigned char g_v[g_v125,3378
static const unsigned char g_v_I[g_v_I127,3474
static const unsigned char g_v_j[g_v_j129,3581
static const symbol s_0[s_0131,3679
static const symbol s_1[s_1132,3716
static const symbol s_2[s_2133,3753
static const symbol s_3[s_3134,3790
static const symbol s_4[s_4135,3827
static const symbol s_5[s_5136,3864
static const symbol s_6[s_6137,3901
static const symbol s_7[s_7138,3938
static const symbol s_8[s_8139,3975
static const symbol s_9[s_9140,4012
static const symbol s_10[s_10141,4049
static const symbol s_11[s_11142,4097
static const symbol s_12[s_12143,4150
static const symbol s_13[s_13144,4203
static const symbol s_14[s_14145,4246
static int r_prelude(147,4290
static int r_mark_regions(248,7859
static int r_postlude(280,8962
static int r_R1(314,10018
static int r_R2(319,10192
static int r_undouble(324,10366
static int r_e_ending(340,10954
static int r_en_ending(363,11744
static int r_standard_suffix(386,12498
extern int dutch_ISO_8859_1_stem(574,20192
extern struct SN_env * dutch_ISO_8859_1_create_env(603,21045
extern void dutch_ISO_8859_1_close_env(605,21138

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_english.c,7527
static const symbol s_0_0[s_0_039,1010
static const symbol s_0_1[s_0_140,1070
static const symbol s_0_2[s_0_241,1135
static const struct among a_0[a_043,1196
static const symbol s_1_0[s_1_050,1335
static const symbol s_1_1[s_1_151,1376
static const symbol s_1_2[s_1_252,1428
static const struct among a_1[a_154,1475
static const symbol s_2_0[s_2_061,1610
static const symbol s_2_1[s_2_162,1660
static const symbol s_2_2[s_2_263,1700
static const symbol s_2_3[s_2_364,1750
static const symbol s_2_4[s_2_465,1805
static const symbol s_2_5[s_2_566,1850
static const struct among a_2[a_268,1896
static const symbol s_3_1[s_3_178,2126
static const symbol s_3_2[s_3_279,2171
static const symbol s_3_3[s_3_380,2216
static const symbol s_3_4[s_3_481,2261
static const symbol s_3_5[s_3_582,2306
static const symbol s_3_6[s_3_683,2351
static const symbol s_3_7[s_3_784,2396
static const symbol s_3_8[s_3_885,2441
static const symbol s_3_9[s_3_986,2486
static const symbol s_3_10[s_3_1087,2531
static const symbol s_3_11[s_3_1188,2577
static const symbol s_3_12[s_3_1289,2623
static const struct among a_3[a_391,2670
static const symbol s_4_0[s_4_0108,3114
static const symbol s_4_1[s_4_1109,3159
static const symbol s_4_2[s_4_2110,3209
static const symbol s_4_3[s_4_3111,3259
static const symbol s_4_4[s_4_4112,3314
static const symbol s_4_5[s_4_5113,3374
static const struct among a_4[a_4115,3435
static const symbol s_5_0[s_5_0125,3665
static const symbol s_5_1[s_5_1126,3720
static const symbol s_5_2[s_5_2127,3775
static const symbol s_5_3[s_5_3128,3825
static const symbol s_5_4[s_5_4129,3870
static const symbol s_5_5[s_5_5130,3920
static const symbol s_5_6[s_5_6131,3975
static const symbol s_5_7[s_5_7132,4030
static const symbol s_5_8[s_5_8133,4090
static const symbol s_5_9[s_5_9134,4155
static const symbol s_5_10[s_5_10135,4215
static const symbol s_5_11[s_5_11136,4276
static const symbol s_5_12[s_5_12137,4337
static const symbol s_5_13[s_5_13138,4403
static const symbol s_5_14[s_5_14139,4464
static const symbol s_5_15[s_5_15140,4530
static const symbol s_5_16[s_5_16141,4601
static const symbol s_5_17[s_5_17142,4662
static const symbol s_5_18[s_5_18143,4723
static const symbol s_5_19[s_5_19144,4794
static const symbol s_5_20[s_5_20145,4850
static const symbol s_5_21[s_5_21146,4906
static const symbol s_5_22[s_5_22147,4977
static const symbol s_5_23[s_5_23148,5048
static const struct among a_5[a_5150,5120
static const symbol s_6_0[s_6_0178,5945
static const symbol s_6_1[s_6_1179,6005
static const symbol s_6_2[s_6_2180,6065
static const symbol s_6_3[s_6_3181,6125
static const symbol s_6_4[s_6_4182,6185
static const symbol s_6_5[s_6_5183,6240
static const symbol s_6_6[s_6_6184,6305
static const symbol s_6_7[s_6_7185,6375
static const symbol s_6_8[s_6_8186,6425
static const struct among a_6[a_6188,6481
static const symbol s_7_0[s_7_0201,6808
static const symbol s_7_1[s_7_1202,6853
static const symbol s_7_2[s_7_2203,6908
static const symbol s_7_3[s_7_3204,6963
static const symbol s_7_4[s_7_4205,7018
static const symbol s_7_5[s_7_5206,7073
static const symbol s_7_6[s_7_6207,7123
static const symbol s_7_7[s_7_7208,7173
static const symbol s_7_8[s_7_8209,7223
static const symbol s_7_9[s_7_9210,7273
static const symbol s_7_10[s_7_10211,7318
static const symbol s_7_11[s_7_11212,7369
static const symbol s_7_12[s_7_12213,7420
static const symbol s_7_13[s_7_13214,7466
static const symbol s_7_14[s_7_14215,7517
static const symbol s_7_15[s_7_15216,7568
static const symbol s_7_16[s_7_16217,7619
static const symbol s_7_17[s_7_17218,7675
static const struct among a_7[a_7220,7737
static const symbol s_8_0[s_8_0242,8362
static const symbol s_8_1[s_8_1243,8402
static const struct among a_8[a_8245,8443
static const symbol s_9_0[s_9_0251,8547
static const symbol s_9_1[s_9_1252,8617
static const symbol s_9_2[s_9_2253,8687
static const symbol s_9_3[s_9_3254,8752
static const symbol s_9_4[s_9_4255,8822
static const symbol s_9_5[s_9_5256,8887
static const symbol s_9_6[s_9_6257,8957
static const symbol s_9_7[s_9_7258,9027
static const struct among a_9[a_9260,9093
static const symbol s_10_0[s_10_0272,9397
static const symbol s_10_1[s_10_1273,9458
static const symbol s_10_2[s_10_2274,9519
static const symbol s_10_3[s_10_3275,9575
static const symbol s_10_4[s_10_4276,9641
static const symbol s_10_5[s_10_5277,9702
static const symbol s_10_6[s_10_6278,9763
static const symbol s_10_7[s_10_7279,9829
static const symbol s_10_8[s_10_8280,9885
static const symbol s_10_9[s_10_9281,9941
static const symbol s_10_10[s_10_10282,10002
static const symbol s_10_11[s_10_11283,10059
static const symbol s_10_12[s_10_12284,10116
static const symbol s_10_13[s_10_13285,10183
static const symbol s_10_14[s_10_14286,10245
static const symbol s_10_15[s_10_15287,10302
static const symbol s_10_16[s_10_16288,10354
static const symbol s_10_17[s_10_17289,10416
static const struct among a_10[a_10291,10474
static const unsigned char g_v[g_v313,11127
static const unsigned char g_v_WXY[g_v_WXY315,11182
static const unsigned char g_valid_LI[g_valid_LI317,11245
static const symbol s_0[s_0319,11304
static const symbol s_1[s_1320,11341
static const symbol s_2[s_2321,11378
static const symbol s_3[s_3322,11420
static const symbol s_4[s_4323,11457
static const symbol s_5[s_5324,11499
static const symbol s_6[s_6325,11541
static const symbol s_7[s_7326,11578
static const symbol s_8[s_8327,11615
static const symbol s_9[s_9328,11652
static const symbol s_10[s_10329,11704
static const symbol s_11[s_11330,11757
static const symbol s_12[s_12331,11810
static const symbol s_13[s_13332,11863
static const symbol s_14[s_14333,11911
static const symbol s_15[s_15334,11959
static const symbol s_16[s_16335,12007
static const symbol s_17[s_17336,12050
static const symbol s_18[s_18337,12098
static const symbol s_19[s_19338,12146
static const symbol s_20[s_20339,12194
static const symbol s_21[s_21340,12242
static const symbol s_22[s_22341,12285
static const symbol s_23[s_23342,12338
static const symbol s_24[s_24343,12391
static const symbol s_25[s_25344,12439
static const symbol s_26[s_26345,12482
static const symbol s_27[s_27346,12525
static const symbol s_28[s_28347,12573
static const symbol s_29[s_29348,12621
static const symbol s_30[s_30349,12669
static const symbol s_31[s_31350,12717
static const symbol s_32[s_32351,12765
static const symbol s_33[s_33352,12813
static const symbol s_34[s_34353,12871
static const symbol s_35[s_35354,12924
static const symbol s_36[s_36355,12982
static const symbol s_37[s_37356,13035
static const symbol s_38[s_38357,13093
static int r_prelude(359,13132
static int r_mark_regions(416,14996
static int r_shortv(456,16441
static int r_R1(472,17116
static int r_R2(477,17290
static int r_Step_1a(482,17464
static int r_Step_1b(540,19590
static int r_Step_1c(615,22705
static int r_Step_2(639,23457
static int r_Step_3(732,26606
static int r_Step_4(780,28195
static int r_Step_5(815,29438
static int r_exception2(864,31223
static int r_exception1(873,31595
static int r_postlude(941,33860
extern int english_ISO_8859_1_stem(970,34682
extern struct SN_env * english_ISO_8859_1_create_env(1065,37975
extern void english_ISO_8859_1_close_env(1067,38070

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_arabic.c,14792
static const symbol s_0_0[s_0_045,1443
static const symbol s_0_1[s_0_146,1490
static const symbol s_0_2[s_0_247,1537
static const symbol s_0_3[s_0_348,1584
static const symbol s_0_4[s_0_449,1631
static const symbol s_0_5[s_0_550,1678
static const symbol s_0_6[s_0_651,1725
static const symbol s_0_7[s_0_752,1772
static const symbol s_0_8[s_0_853,1819
static const symbol s_0_9[s_0_954,1866
static const symbol s_0_10[s_0_1055,1913
static const symbol s_0_11[s_0_1156,1961
static const symbol s_0_12[s_0_1257,2009
static const symbol s_0_13[s_0_1358,2057
static const symbol s_0_14[s_0_1459,2105
static const symbol s_0_15[s_0_1560,2153
static const symbol s_0_16[s_0_1661,2201
static const symbol s_0_17[s_0_1762,2249
static const symbol s_0_18[s_0_1863,2297
static const symbol s_0_19[s_0_1964,2345
static const symbol s_0_20[s_0_2065,2399
static const symbol s_0_21[s_0_2166,2453
static const symbol s_0_22[s_0_2267,2507
static const symbol s_0_23[s_0_2368,2561
static const symbol s_0_24[s_0_2469,2615
static const symbol s_0_25[s_0_2570,2669
static const symbol s_0_26[s_0_2671,2723
static const symbol s_0_27[s_0_2772,2777
static const symbol s_0_28[s_0_2873,2831
static const symbol s_0_29[s_0_2974,2885
static const symbol s_0_30[s_0_3075,2939
static const symbol s_0_31[s_0_3176,2993
static const symbol s_0_32[s_0_3277,3047
static const symbol s_0_33[s_0_3378,3101
static const symbol s_0_34[s_0_3479,3155
static const symbol s_0_35[s_0_3580,3209
static const symbol s_0_36[s_0_3681,3263
static const symbol s_0_37[s_0_3782,3317
static const symbol s_0_38[s_0_3883,3371
static const symbol s_0_39[s_0_3984,3425
static const symbol s_0_40[s_0_4085,3479
static const symbol s_0_41[s_0_4186,3533
static const symbol s_0_42[s_0_4287,3587
static const symbol s_0_43[s_0_4388,3641
static const symbol s_0_44[s_0_4489,3695
static const symbol s_0_45[s_0_4590,3749
static const symbol s_0_46[s_0_4691,3803
static const symbol s_0_47[s_0_4792,3857
static const symbol s_0_48[s_0_4893,3911
static const symbol s_0_49[s_0_4994,3965
static const symbol s_0_50[s_0_5095,4019
static const symbol s_0_51[s_0_5196,4073
static const symbol s_0_52[s_0_5297,4127
static const symbol s_0_53[s_0_5398,4181
static const symbol s_0_54[s_0_5499,4235
static const symbol s_0_55[s_0_55100,4289
static const symbol s_0_56[s_0_56101,4343
static const symbol s_0_57[s_0_57102,4397
static const symbol s_0_58[s_0_58103,4451
static const symbol s_0_59[s_0_59104,4505
static const symbol s_0_60[s_0_60105,4559
static const symbol s_0_61[s_0_61106,4613
static const symbol s_0_62[s_0_62107,4667
static const symbol s_0_63[s_0_63108,4721
static const symbol s_0_64[s_0_64109,4775
static const symbol s_0_65[s_0_65110,4829
static const symbol s_0_66[s_0_66111,4883
static const symbol s_0_67[s_0_67112,4937
static const symbol s_0_68[s_0_68113,4991
static const symbol s_0_69[s_0_69114,5045
static const symbol s_0_70[s_0_70115,5099
static const symbol s_0_71[s_0_71116,5153
static const symbol s_0_72[s_0_72117,5207
static const symbol s_0_73[s_0_73118,5261
static const symbol s_0_74[s_0_74119,5315
static const symbol s_0_75[s_0_75120,5369
static const symbol s_0_76[s_0_76121,5423
static const symbol s_0_77[s_0_77122,5477
static const symbol s_0_78[s_0_78123,5531
static const symbol s_0_79[s_0_79124,5585
static const symbol s_0_80[s_0_80125,5639
static const symbol s_0_81[s_0_81126,5693
static const symbol s_0_82[s_0_82127,5747
static const symbol s_0_83[s_0_83128,5801
static const symbol s_0_84[s_0_84129,5855
static const symbol s_0_85[s_0_85130,5909
static const symbol s_0_86[s_0_86131,5963
static const symbol s_0_87[s_0_87132,6017
static const symbol s_0_88[s_0_88133,6071
static const symbol s_0_89[s_0_89134,6125
static const symbol s_0_90[s_0_90135,6179
static const symbol s_0_91[s_0_91136,6233
static const symbol s_0_92[s_0_92137,6287
static const symbol s_0_93[s_0_93138,6341
static const symbol s_0_94[s_0_94139,6395
static const symbol s_0_95[s_0_95140,6449
static const symbol s_0_96[s_0_96141,6503
static const symbol s_0_97[s_0_97142,6557
static const symbol s_0_98[s_0_98143,6611
static const symbol s_0_99[s_0_99144,6665
static const symbol s_0_100[s_0_100145,6719
static const symbol s_0_101[s_0_101146,6774
static const symbol s_0_102[s_0_102147,6829
static const symbol s_0_103[s_0_103148,6884
static const symbol s_0_104[s_0_104149,6939
static const symbol s_0_105[s_0_105150,6994
static const symbol s_0_106[s_0_106151,7049
static const symbol s_0_107[s_0_107152,7104
static const symbol s_0_108[s_0_108153,7159
static const symbol s_0_109[s_0_109154,7214
static const symbol s_0_110[s_0_110155,7269
static const symbol s_0_111[s_0_111156,7324
static const symbol s_0_112[s_0_112157,7379
static const symbol s_0_113[s_0_113158,7434
static const symbol s_0_114[s_0_114159,7489
static const symbol s_0_115[s_0_115160,7544
static const symbol s_0_116[s_0_116161,7599
static const symbol s_0_117[s_0_117162,7654
static const symbol s_0_118[s_0_118163,7709
static const symbol s_0_119[s_0_119164,7764
static const symbol s_0_120[s_0_120165,7819
static const symbol s_0_121[s_0_121166,7874
static const symbol s_0_122[s_0_122167,7929
static const symbol s_0_123[s_0_123168,7984
static const symbol s_0_124[s_0_124169,8039
static const symbol s_0_125[s_0_125170,8094
static const symbol s_0_126[s_0_126171,8149
static const symbol s_0_127[s_0_127172,8204
static const symbol s_0_128[s_0_128173,8259
static const symbol s_0_129[s_0_129174,8314
static const symbol s_0_130[s_0_130175,8369
static const symbol s_0_131[s_0_131176,8424
static const symbol s_0_132[s_0_132177,8479
static const symbol s_0_133[s_0_133178,8534
static const symbol s_0_134[s_0_134179,8589
static const symbol s_0_135[s_0_135180,8644
static const symbol s_0_136[s_0_136181,8699
static const symbol s_0_137[s_0_137182,8754
static const symbol s_0_138[s_0_138183,8809
static const symbol s_0_139[s_0_139184,8864
static const symbol s_0_140[s_0_140185,8919
static const symbol s_0_141[s_0_141186,8974
static const symbol s_0_142[s_0_142187,9029
static const symbol s_0_143[s_0_143188,9084
static const struct among a_0[a_0190,9140
static const symbol s_1_0[s_1_0338,14095
static const symbol s_1_1[s_1_1339,14142
static const symbol s_1_2[s_1_2340,14189
static const symbol s_1_3[s_1_3341,14236
static const symbol s_1_4[s_1_4342,14283
static const struct among a_1[a_1344,14331
static const symbol s_2_0[s_2_0353,14531
static const symbol s_2_1[s_2_1354,14578
static const symbol s_2_2[s_2_2355,14625
static const symbol s_2_3[s_2_3356,14672
static const symbol s_2_4[s_2_4357,14719
static const struct among a_2[a_2359,14767
static const symbol s_3_0[s_3_0368,14967
static const symbol s_3_1[s_3_1369,15026
static const symbol s_3_2[s_3_2370,15097
static const symbol s_3_3[s_3_3371,15168
static const struct among a_3[a_3373,15228
static const symbol s_4_0[s_4_0381,15396
static const symbol s_4_1[s_4_1382,15455
static const symbol s_4_2[s_4_2383,15514
static const symbol s_4_3[s_4_3384,15573
static const symbol s_4_4[s_4_4385,15632
static const struct among a_4[a_4387,15692
static const symbol s_5_0[s_5_0396,15892
static const symbol s_5_1[s_5_1397,15939
static const struct among a_5[a_5399,15987
static const symbol s_6_0[s_6_0405,16091
static const symbol s_6_1[s_6_1406,16150
static const symbol s_6_2[s_6_2407,16221
static const symbol s_6_3[s_6_3408,16292
static const struct among a_6[a_6410,16352
static const symbol s_7_0[s_7_0418,16520
static const symbol s_7_1[s_7_1419,16567
static const symbol s_7_2[s_7_2420,16626
static const struct among a_7[a_7422,16686
static const symbol s_8_0[s_8_0429,16821
static const symbol s_8_1[s_8_1430,16880
static const symbol s_8_2[s_8_2431,16939
static const symbol s_8_3[s_8_3432,16998
static const struct among a_8[a_8434,17058
static const symbol s_9_0[s_9_0442,17226
static const symbol s_9_1[s_9_1443,17297
static const symbol s_9_2[s_9_2444,17368
static const struct among a_9[a_9446,17440
static const symbol s_10_0[s_10_0453,17576
static const symbol s_10_1[s_10_1454,17624
static const symbol s_10_2[s_10_2455,17684
static const symbol s_10_3[s_10_3456,17744
static const symbol s_10_4[s_10_4457,17804
static const symbol s_10_5[s_10_5458,17852
static const symbol s_10_6[s_10_6459,17900
static const symbol s_10_7[s_10_7460,17972
static const symbol s_10_8[s_10_8461,18044
static const symbol s_10_9[s_10_9462,18104
static const struct among a_10[a_10464,18165
static const symbol s_11_0[s_11_0478,18537
static const struct among a_11[a_11480,18586
static const symbol s_12_0[s_12_0485,18660
static const symbol s_12_1[s_12_1486,18708
static const symbol s_12_2[s_12_2487,18756
static const struct among a_12[a_12489,18805
static const symbol s_13_0[s_13_0496,18945
static const struct among a_13[a_13498,19006
static const symbol s_14_0[s_14_0503,19080
static const struct among a_14[a_14505,19129
static const symbol s_15_0[s_15_0510,19203
static const struct among a_15[a_15512,19252
static const symbol s_16_0[s_16_0517,19326
static const struct among a_16[a_16519,19375
static const symbol s_17_0[s_17_0524,19449
static const symbol s_17_1[s_17_1525,19497
static const symbol s_17_2[s_17_2526,19557
static const symbol s_17_3[s_17_3527,19617
static const symbol s_17_4[s_17_4528,19677
static const symbol s_17_5[s_17_5529,19737
static const symbol s_17_6[s_17_6530,19785
static const symbol s_17_7[s_17_7531,19857
static const symbol s_17_8[s_17_8532,19917
static const symbol s_17_9[s_17_9533,19989
static const symbol s_17_10[s_17_10534,20061
static const symbol s_17_11[s_17_11535,20122
static const struct among a_17[a_17537,20184
static const symbol s_18_0[s_18_0553,20624
static const symbol s_18_1[s_18_1554,20672
static const symbol s_18_2[s_18_2555,20732
static const symbol s_18_3[s_18_3556,20792
static const symbol s_18_4[s_18_4557,20852
static const symbol s_18_5[s_18_5558,20912
static const symbol s_18_6[s_18_6559,20960
static const symbol s_18_7[s_18_7560,21008
static const symbol s_18_8[s_18_8561,21080
static const symbol s_18_9[s_18_9562,21140
static const symbol s_18_10[s_18_10563,21200
static const struct among a_18[a_18565,21250
static const symbol s_19_0[s_19_0580,21649
static const symbol s_19_1[s_19_1581,21709
static const struct among a_19[a_19583,21770
static const symbol s_20_0[s_20_0589,21877
static const symbol s_20_1[s_20_1590,21925
static const struct among a_20[a_20592,21998
static const symbol s_21_0[s_21_0598,22104
static const struct among a_21[a_21600,22153
static const symbol s_0[s_0605,22227
static const symbol s_1[s_1606,22264
static const symbol s_2[s_2607,22301
static const symbol s_3[s_3608,22338
static const symbol s_4[s_4609,22375
static const symbol s_5[s_5610,22412
static const symbol s_6[s_6611,22449
static const symbol s_7[s_7612,22486
static const symbol s_8[s_8613,22523
static const symbol s_9[s_9614,22560
static const symbol s_10[s_10615,22597
static const symbol s_11[s_11616,22642
static const symbol s_12[s_12617,22687
static const symbol s_13[s_13618,22732
static const symbol s_14[s_14619,22777
static const symbol s_15[s_15620,22822
static const symbol s_16[s_16621,22867
static const symbol s_17[s_17622,22912
static const symbol s_18[s_18623,22957
static const symbol s_19[s_19624,23002
static const symbol s_20[s_20625,23047
static const symbol s_21[s_21626,23092
static const symbol s_22[s_22627,23137
static const symbol s_23[s_23628,23182
static const symbol s_24[s_24629,23227
static const symbol s_25[s_25630,23272
static const symbol s_26[s_26631,23317
static const symbol s_27[s_27632,23362
static const symbol s_28[s_28633,23407
static const symbol s_29[s_29634,23452
static const symbol s_30[s_30635,23497
static const symbol s_31[s_31636,23542
static const symbol s_32[s_32637,23587
static const symbol s_33[s_33638,23632
static const symbol s_34[s_34639,23677
static const symbol s_35[s_35640,23722
static const symbol s_36[s_36641,23767
static const symbol s_37[s_37642,23812
static const symbol s_38[s_38643,23857
static const symbol s_39[s_39644,23902
static const symbol s_40[s_40645,23947
static const symbol s_41[s_41646,23992
static const symbol s_42[s_42647,24037
static const symbol s_43[s_43648,24082
static const symbol s_44[s_44649,24127
static const symbol s_45[s_45650,24172
static const symbol s_46[s_46651,24217
static const symbol s_47[s_47652,24274
static const symbol s_48[s_48653,24331
static const symbol s_49[s_49654,24388
static const symbol s_50[s_50655,24445
static const symbol s_51[s_51656,24490
static const symbol s_52[s_52657,24535
static const symbol s_53[s_53658,24580
static const symbol s_54[s_54659,24625
static const symbol s_55[s_55660,24670
static const symbol s_56[s_56661,24715
static const symbol s_57[s_57662,24760
static const symbol s_58[s_58663,24805
static const symbol s_59[s_59664,24862
static const symbol s_60[s_60665,24919
static const symbol s_61[s_61666,24976
static const symbol s_62[s_62667,25021
static const symbol s_63[s_63668,25066
static const symbol s_64[s_64669,25111
static const symbol s_65[s_65670,25156
static const symbol s_66[s_66671,25201
static const symbol s_67[s_67672,25246
static const symbol s_68[s_68673,25315
static int r_Normalize_pre(675,25361
static int r_Normalize_post(962,37611
static int r_Checks1(1024,39895
static int r_Prefix_Step1(1048,40925
static int r_Prefix_Step2(1084,42449
static int r_Prefix_Step3a_Noun(1108,43289
static int r_Prefix_Step3b_Noun(1132,44238
static int r_Prefix_Step3_Verb(1168,45632
static int r_Prefix_Step4_Verb(1203,47054
static int r_Suffix_Noun_Step1a(1217,47644
static int r_Suffix_Noun_Step1b(1246,48781
static int r_Suffix_Noun_Step2a(1258,49277
static int r_Suffix_Noun_Step2b(1269,49711
static int r_Suffix_Noun_Step2c1(1281,50209
static int r_Suffix_Noun_Step2c2(1293,50708
static int r_Suffix_Noun_Step3(1305,51207
static int r_Suffix_Verb_Step1(1317,51704
static int r_Suffix_Verb_Step2a(1346,52840
static int r_Suffix_Verb_Step2b(1381,54242
static int r_Suffix_Verb_Step2c(1393,54767
static int r_Suffix_All_alef_maqsura(1417,55698
extern int arabic_UTF_8_stem(1428,56103
extern struct SN_env * arabic_UTF_8_create_env(1674,66250
extern void arabic_UTF_8_close_env(1676,66339

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_spanish.c,10379
static const symbol s_0_1[s_0_134,819
static const symbol s_0_2[s_0_235,866
static const symbol s_0_3[s_0_336,913
static const symbol s_0_4[s_0_437,960
static const symbol s_0_5[s_0_538,1007
static const struct among a_0[a_040,1055
static const symbol s_1_0[s_1_050,1278
static const symbol s_1_1[s_1_151,1323
static const symbol s_1_2[s_1_252,1378
static const symbol s_1_3[s_1_353,1423
static const symbol s_1_4[s_1_454,1468
static const symbol s_1_5[s_1_555,1513
static const symbol s_1_6[s_1_656,1558
static const symbol s_1_7[s_1_757,1613
static const symbol s_1_8[s_1_858,1663
static const symbol s_1_9[s_1_959,1723
static const symbol s_1_10[s_1_1060,1773
static const symbol s_1_11[s_1_1161,1824
static const symbol s_1_12[s_1_1262,1885
static const struct among a_1[a_164,1937
static const symbol s_2_0[s_2_081,2407
static const symbol s_2_1[s_2_182,2462
static const symbol s_2_2[s_2_283,2522
static const symbol s_2_3[s_2_384,2582
static const symbol s_2_4[s_2_485,2644
static const symbol s_2_5[s_2_586,2711
static const symbol s_2_6[s_2_687,2756
static const symbol s_2_7[s_2_788,2801
static const symbol s_2_8[s_2_889,2846
static const symbol s_2_9[s_2_990,2898
static const symbol s_2_10[s_2_1091,2950
static const struct among a_2[a_293,3004
static const symbol s_3_0[s_3_0108,3398
static const symbol s_3_1[s_3_1109,3443
static const symbol s_3_2[s_3_2110,3488
static const symbol s_3_3[s_3_3111,3533
static const struct among a_3[a_3113,3579
static const symbol s_4_0[s_4_0121,3750
static const symbol s_4_1[s_4_1122,3805
static const symbol s_4_2[s_4_2123,3860
static const struct among a_4[a_4125,3916
static const symbol s_5_0[s_5_0132,4052
static const symbol s_5_1[s_5_1133,4097
static const symbol s_5_2[s_5_2134,4152
static const struct among a_5[a_5136,4198
static const symbol s_6_0[s_6_0143,4334
static const symbol s_6_1[s_6_1144,4384
static const symbol s_6_2[s_6_2145,4444
static const symbol s_6_3[s_6_3146,4504
static const symbol s_6_4[s_6_4147,4564
static const symbol s_6_5[s_6_5148,4614
static const symbol s_6_6[s_6_6149,4669
static const symbol s_6_7[s_6_7150,4719
static const symbol s_6_8[s_6_8151,4774
static const symbol s_6_9[s_6_9152,4841
static const symbol s_6_10[s_6_10153,4896
static const symbol s_6_11[s_6_11154,4952
static const symbol s_6_12[s_6_12155,5008
static const symbol s_6_13[s_6_13156,5064
static const symbol s_6_14[s_6_14157,5125
static const symbol s_6_15[s_6_15158,5191
static const symbol s_6_16[s_6_16159,5259
static const symbol s_6_17[s_6_17160,5327
static const symbol s_6_18[s_6_18161,5378
static const symbol s_6_19[s_6_19162,5434
static const symbol s_6_20[s_6_20163,5485
static const symbol s_6_21[s_6_21164,5556
static const symbol s_6_22[s_6_22165,5627
static const symbol s_6_23[s_6_23166,5678
static const symbol s_6_24[s_6_24167,5734
static const symbol s_6_25[s_6_25168,5790
static const symbol s_6_26[s_6_26169,5856
static const symbol s_6_27[s_6_27170,5922
static const symbol s_6_28[s_6_28171,5988
static const symbol s_6_29[s_6_29172,6044
static const symbol s_6_30[s_6_30173,6105
static const symbol s_6_31[s_6_31174,6161
static const symbol s_6_32[s_6_32175,6222
static const symbol s_6_33[s_6_33176,6295
static const symbol s_6_34[s_6_34177,6361
static const symbol s_6_35[s_6_35178,6422
static const symbol s_6_36[s_6_36179,6483
static const symbol s_6_37[s_6_37180,6554
static const symbol s_6_38[s_6_38181,6625
static const symbol s_6_39[s_6_39182,6691
static const symbol s_6_40[s_6_40183,6752
static const symbol s_6_41[s_6_41184,6808
static const symbol s_6_42[s_6_42185,6869
static const symbol s_6_43[s_6_43186,6925
static const symbol s_6_44[s_6_44187,7001
static const symbol s_6_45[s_6_45188,7077
static const struct among a_6[a_6190,7134
static const symbol s_7_0[s_7_0240,8683
static const symbol s_7_1[s_7_1241,8728
static const symbol s_7_2[s_7_2242,8773
static const symbol s_7_3[s_7_3243,8823
static const symbol s_7_4[s_7_4244,8873
static const symbol s_7_5[s_7_5245,8933
static const symbol s_7_6[s_7_6246,8993
static const symbol s_7_7[s_7_7247,9038
static const symbol s_7_8[s_7_8248,9088
static const symbol s_7_9[s_7_9249,9138
static const symbol s_7_10[s_7_10250,9193
static const symbol s_7_11[s_7_11251,9254
static const struct among a_7[a_7253,9308
static const symbol s_8_0[s_8_0269,9735
static const symbol s_8_1[s_8_1270,9785
static const symbol s_8_2[s_8_2271,9835
static const symbol s_8_3[s_8_3272,9885
static const symbol s_8_4[s_8_4273,9935
static const symbol s_8_5[s_8_5274,9990
static const symbol s_8_6[s_8_6275,10042
static const symbol s_8_7[s_8_7276,10104
static const symbol s_8_8[s_8_8277,10166
static const symbol s_8_9[s_8_9278,10228
static const symbol s_8_10[s_8_10279,10273
static const symbol s_8_11[s_8_11280,10319
static const symbol s_8_12[s_8_12281,10365
static const symbol s_8_13[s_8_13282,10416
static const symbol s_8_14[s_8_14283,10472
static const symbol s_8_15[s_8_15284,10528
static const symbol s_8_16[s_8_16285,10584
static const symbol s_8_17[s_8_17286,10630
static const symbol s_8_18[s_8_18287,10686
static const symbol s_8_19[s_8_19288,10742
static const symbol s_8_20[s_8_20289,10803
static const symbol s_8_21[s_8_21290,10861
static const symbol s_8_22[s_8_22291,10929
static const symbol s_8_23[s_8_23292,10997
static const symbol s_8_24[s_8_24293,11065
static const symbol s_8_25[s_8_25294,11111
static const symbol s_8_26[s_8_26295,11167
static const symbol s_8_27[s_8_27296,11228
static const symbol s_8_28[s_8_28297,11284
static const symbol s_8_29[s_8_29298,11345
static const symbol s_8_30[s_8_30299,11408
static const symbol s_8_31[s_8_31300,11471
static const symbol s_8_32[s_8_32301,11534
static const symbol s_8_33[s_8_33302,11585
static const symbol s_8_34[s_8_34303,11636
static const symbol s_8_35[s_8_35304,11692
static const symbol s_8_36[s_8_36305,11753
static const symbol s_8_37[s_8_37306,11799
static const symbol s_8_38[s_8_38307,11845
static const symbol s_8_39[s_8_39308,11891
static const symbol s_8_40[s_8_40309,11937
static const symbol s_8_41[s_8_41310,11993
static const symbol s_8_42[s_8_42311,12049
static const symbol s_8_43[s_8_43312,12105
static const symbol s_8_44[s_8_44313,12161
static const symbol s_8_45[s_8_45314,12222
static const symbol s_8_46[s_8_46315,12280
static const symbol s_8_47[s_8_47316,12348
static const symbol s_8_48[s_8_48317,12416
static const symbol s_8_49[s_8_49318,12484
static const symbol s_8_50[s_8_50319,12530
static const symbol s_8_51[s_8_51320,12586
static const symbol s_8_52[s_8_52321,12647
static const symbol s_8_53[s_8_53322,12708
static const symbol s_8_54[s_8_54323,12769
static const symbol s_8_55[s_8_55324,12835
static const symbol s_8_56[s_8_56325,12898
static const symbol s_8_57[s_8_57326,12971
static const symbol s_8_58[s_8_58327,13044
static const symbol s_8_59[s_8_59328,13117
static const symbol s_8_60[s_8_60329,13178
static const symbol s_8_61[s_8_61330,13244
static const symbol s_8_62[s_8_62331,13310
static const symbol s_8_63[s_8_63332,13376
static const symbol s_8_64[s_8_64333,13434
static const symbol s_8_65[s_8_65334,13492
static const symbol s_8_66[s_8_66335,13560
static const symbol s_8_67[s_8_67336,13628
static const symbol s_8_68[s_8_68337,13696
static const symbol s_8_69[s_8_69338,13752
static const symbol s_8_70[s_8_70339,13808
static const symbol s_8_71[s_8_71340,13864
static const symbol s_8_72[s_8_72341,13937
static const symbol s_8_73[s_8_73342,14010
static const symbol s_8_74[s_8_74343,14088
static const symbol s_8_75[s_8_75344,14156
static const symbol s_8_76[s_8_76345,14234
static const symbol s_8_77[s_8_77346,14312
static const symbol s_8_78[s_8_78347,14390
static const symbol s_8_79[s_8_79348,14446
static const symbol s_8_80[s_8_80349,14512
static const symbol s_8_81[s_8_81350,14578
static const symbol s_8_82[s_8_82351,14644
static const symbol s_8_83[s_8_83352,14717
static const symbol s_8_84[s_8_84353,14795
static const symbol s_8_85[s_8_85354,14851
static const symbol s_8_86[s_8_86355,14914
static const symbol s_8_87[s_8_87356,14977
static const symbol s_8_88[s_8_88357,15040
static const symbol s_8_89[s_8_89358,15093
static const symbol s_8_90[s_8_90359,15151
static const symbol s_8_91[s_8_91360,15209
static const symbol s_8_92[s_8_92361,15267
static const symbol s_8_93[s_8_93362,15325
static const symbol s_8_94[s_8_94363,15383
static const symbol s_8_95[s_8_95364,15441
static const struct among a_8[a_8366,15495
static const symbol s_9_0[s_9_0466,18691
static const symbol s_9_1[s_9_1467,18731
static const symbol s_9_2[s_9_2468,18771
static const symbol s_9_3[s_9_3469,18811
static const symbol s_9_4[s_9_4470,18856
static const symbol s_9_5[s_9_5471,18903
static const symbol s_9_6[s_9_6472,18950
static const symbol s_9_7[s_9_7473,18997
static const struct among a_9[a_9475,19045
static const unsigned char g_v[g_v487,19341
static const symbol s_0[s_0489,19446
static const symbol s_1[s_1490,19483
static const symbol s_2[s_2491,19520
static const symbol s_3[s_3492,19557
static const symbol s_4[s_4493,19594
static const symbol s_5[s_5494,19631
static const symbol s_6[s_6495,19688
static const symbol s_7[s_7496,19740
static const symbol s_8[s_8497,19782
static const symbol s_9[s_9498,19824
static const symbol s_10[s_10499,19866
static const symbol s_11[s_11500,19909
static const symbol s_12[s_12501,19957
static const symbol s_13[s_13502,19995
static const symbol s_14[s_14503,20048
static const symbol s_15[s_15504,20091
static int r_mark_regions(506,20135
static int r_postlude(588,23222
static int r_RV(639,24935
static int r_R1(644,25109
static int r_R2(649,25283
static int r_attached_pronoun(654,25457
static int r_standard_suffix(713,27576
static int r_y_verb_suffix(885,34832
static int r_verb_suffix(903,35442
static int r_residual_suffix(942,36853
extern int spanish_UTF_8_stem(989,38678
extern struct SN_env * spanish_UTF_8_create_env(1043,40443
extern void spanish_UTF_8_close_env(1045,40533

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_irish.c,4414
static const symbol s_0_0[s_0_032,701
static const symbol s_0_1[s_0_133,747
static const symbol s_0_2[s_0_234,792
static const symbol s_0_3[s_0_335,842
static const symbol s_0_4[s_0_436,887
static const symbol s_0_5[s_0_537,932
static const symbol s_0_6[s_0_638,978
static const symbol s_0_7[s_0_739,1034
static const symbol s_0_8[s_0_840,1079
static const symbol s_0_9[s_0_941,1124
static const symbol s_0_10[s_0_1042,1169
static const symbol s_0_11[s_0_1143,1215
static const symbol s_0_12[s_0_1244,1261
static const symbol s_0_13[s_0_1345,1307
static const symbol s_0_14[s_0_1446,1354
static const symbol s_0_15[s_0_1547,1400
static const symbol s_0_16[s_0_1648,1446
static const symbol s_0_17[s_0_1749,1492
static const symbol s_0_18[s_0_1850,1538
static const symbol s_0_19[s_0_1951,1584
static const symbol s_0_20[s_0_2052,1630
static const symbol s_0_21[s_0_2153,1676
static const symbol s_0_22[s_0_2254,1722
static const symbol s_0_23[s_0_2355,1768
static const struct among a_0[a_057,1815
static const symbol s_1_0[s_1_085,2637
static const symbol s_1_1[s_1_186,2709
static const symbol s_1_2[s_1_287,2786
static const symbol s_1_3[s_1_388,2836
static const symbol s_1_4[s_1_489,2891
static const symbol s_1_5[s_1_590,2941
static const symbol s_1_6[s_1_691,2996
static const symbol s_1_7[s_1_792,3046
static const symbol s_1_8[s_1_893,3101
static const symbol s_1_9[s_1_994,3151
static const symbol s_1_10[s_1_1095,3206
static const symbol s_1_11[s_1_1196,3257
static const symbol s_1_12[s_1_1297,3313
static const symbol s_1_13[s_1_1398,3381
static const symbol s_1_14[s_1_1499,3454
static const symbol s_1_15[s_1_15100,3512
static const struct among a_1[a_1102,3576
static const symbol s_2_0[s_2_0122,4130
static const symbol s_2_1[s_2_1123,4212
static const symbol s_2_2[s_2_2124,4282
static const symbol s_2_3[s_2_3125,4342
static const symbol s_2_4[s_2_4126,4417
static const symbol s_2_5[s_2_5127,4482
static const symbol s_2_6[s_2_6128,4580
static const symbol s_2_7[s_2_7129,4640
static const symbol s_2_8[s_2_8130,4690
static const symbol s_2_9[s_2_9131,4745
static const symbol s_2_10[s_2_10132,4822
static const symbol s_2_11[s_2_11133,4893
static const symbol s_2_12[s_2_12134,4959
static const symbol s_2_13[s_2_13135,5048
static const symbol s_2_14[s_2_14136,5119
static const symbol s_2_15[s_2_15137,5192
static const symbol s_2_16[s_2_16138,5270
static const symbol s_2_17[s_2_17139,5353
static const symbol s_2_18[s_2_18140,5419
static const symbol s_2_19[s_2_19141,5480
static const symbol s_2_20[s_2_20142,5536
static const symbol s_2_21[s_2_21143,5607
static const symbol s_2_22[s_2_22144,5668
static const symbol s_2_23[s_2_23145,5762
static const symbol s_2_24[s_2_24146,5851
static const struct among a_2[a_2148,5963
static const symbol s_3_0[s_3_0177,6818
static const symbol s_3_1[s_3_1178,6873
static const symbol s_3_2[s_3_2179,6933
static const symbol s_3_3[s_3_3180,6995
static const symbol s_3_4[s_3_4181,7062
static const symbol s_3_5[s_3_5182,7112
static const symbol s_3_6[s_3_6183,7167
static const symbol s_3_7[s_3_7184,7227
static const symbol s_3_8[s_3_8185,7282
static const symbol s_3_9[s_3_9186,7339
static const symbol s_3_10[s_3_10187,7389
static const symbol s_3_11[s_3_11188,7445
static const struct among a_3[a_3190,7497
static const unsigned char g_v[g_v206,7921
static const symbol s_0[s_0208,8025
static const symbol s_1[s_1209,8062
static const symbol s_2[s_2210,8099
static const symbol s_3[s_3211,8136
static const symbol s_4[s_4212,8173
static const symbol s_5[s_5213,8210
static const symbol s_6[s_6214,8247
static const symbol s_7[s_7215,8284
static const symbol s_8[s_8216,8321
static const symbol s_9[s_9217,8358
static const symbol s_10[s_10218,8405
static const symbol s_11[s_11219,8453
static const symbol s_12[s_12220,8506
static const symbol s_13[s_13221,8564
static int r_mark_regions(223,8620
static int r_initial_morph(266,10083
static int r_RV(327,11990
static int r_R1(332,12164
static int r_R2(337,12339
static int r_noun_sfx(342,12514
static int r_deriv(369,13375
static int r_verb_sfx(413,14769
extern int irish_UTF_8_stem(441,15741
extern struct SN_env * irish_UTF_8_create_env(476,16834
extern void irish_UTF_8_close_env(478,16922

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_lithuanian.c,13543
static const symbol s_0_0[s_0_030,635
static const symbol s_0_1[s_0_131,675
static const symbol s_0_2[s_0_232,720
static const symbol s_0_3[s_0_333,775
static const symbol s_0_4[s_0_434,830
static const symbol s_0_5[s_0_535,890
static const symbol s_0_6[s_0_636,950
static const symbol s_0_7[s_0_737,1015
static const symbol s_0_8[s_0_838,1070
static const symbol s_0_9[s_0_939,1132
static const symbol s_0_10[s_0_1040,1172
static const symbol s_0_11[s_0_1141,1218
static const symbol s_0_12[s_0_1242,1274
static const symbol s_0_13[s_0_1343,1330
static const symbol s_0_14[s_0_1444,1381
static const symbol s_0_15[s_0_1545,1437
static const symbol s_0_16[s_0_1646,1488
static const symbol s_0_17[s_0_1747,1544
static const symbol s_0_18[s_0_1848,1595
static const symbol s_0_19[s_0_1949,1656
static const symbol s_0_20[s_0_2050,1717
static const symbol s_0_21[s_0_2151,1775
static const symbol s_0_22[s_0_2252,1826
static const symbol s_0_23[s_0_2353,1882
static const symbol s_0_24[s_0_2454,1938
static const symbol s_0_25[s_0_2555,1989
static const symbol s_0_26[s_0_2656,2047
static const symbol s_0_27[s_0_2757,2120
static const symbol s_0_28[s_0_2858,2171
static const symbol s_0_29[s_0_2959,2227
static const symbol s_0_30[s_0_3060,2283
static const symbol s_0_31[s_0_3161,2344
static const symbol s_0_32[s_0_3262,2395
static const symbol s_0_33[s_0_3363,2456
static const symbol s_0_34[s_0_3464,2517
static const symbol s_0_35[s_0_3565,2575
static const symbol s_0_36[s_0_3666,2626
static const symbol s_0_37[s_0_3767,2682
static const symbol s_0_38[s_0_3868,2733
static const symbol s_0_39[s_0_3969,2789
static const symbol s_0_40[s_0_4070,2845
static const symbol s_0_41[s_0_4171,2896
static const symbol s_0_42[s_0_4272,2952
static const symbol s_0_43[s_0_4373,3010
static const symbol s_0_44[s_0_4474,3083
static const symbol s_0_45[s_0_4575,3124
static const symbol s_0_46[s_0_4676,3170
static const symbol s_0_47[s_0_4777,3221
static const symbol s_0_48[s_0_4878,3282
static const symbol s_0_49[s_0_4979,3328
static const symbol s_0_50[s_0_5080,3389
static const symbol s_0_51[s_0_5181,3435
static const symbol s_0_52[s_0_5282,3486
static const symbol s_0_53[s_0_5383,3547
static const symbol s_0_54[s_0_5484,3598
static const symbol s_0_55[s_0_5585,3654
static const symbol s_0_56[s_0_5686,3700
static const symbol s_0_57[s_0_5787,3751
static const symbol s_0_58[s_0_5888,3807
static const symbol s_0_59[s_0_5989,3858
static const symbol s_0_60[s_0_6090,3914
static const symbol s_0_61[s_0_6191,3975
static const symbol s_0_62[s_0_6292,4026
static const symbol s_0_63[s_0_6393,4082
static const symbol s_0_64[s_0_6494,4138
static const symbol s_0_65[s_0_6595,4209
static const symbol s_0_66[s_0_6696,4265
static const symbol s_0_67[s_0_6797,4316
static const symbol s_0_68[s_0_6898,4384
static const symbol s_0_69[s_0_6999,4440
static const symbol s_0_70[s_0_70100,4501
static const symbol s_0_71[s_0_71101,4567
static const symbol s_0_72[s_0_72102,4618
static const symbol s_0_73[s_0_73103,4674
static const symbol s_0_74[s_0_74104,4747
static const symbol s_0_75[s_0_75105,4805
static const symbol s_0_76[s_0_76106,4863
static const symbol s_0_77[s_0_77107,4921
static const symbol s_0_78[s_0_78108,4984
static const symbol s_0_79[s_0_79109,5030
static const symbol s_0_80[s_0_80110,5086
static const symbol s_0_81[s_0_81111,5142
static const symbol s_0_82[s_0_82112,5193
static const symbol s_0_83[s_0_83113,5249
static const symbol s_0_84[s_0_84114,5305
static const symbol s_0_85[s_0_85115,5366
static const symbol s_0_86[s_0_86116,5422
static const symbol s_0_87[s_0_87117,5483
static const symbol s_0_88[s_0_88118,5534
static const symbol s_0_89[s_0_89119,5592
static const symbol s_0_90[s_0_90120,5665
static const symbol s_0_91[s_0_91121,5733
static const symbol s_0_92[s_0_92122,5806
static const symbol s_0_93[s_0_93123,5852
static const symbol s_0_94[s_0_94124,5903
static const symbol s_0_95[s_0_95125,5964
static const symbol s_0_96[s_0_96126,6010
static const symbol s_0_97[s_0_97127,6063
static const symbol s_0_98[s_0_98128,6104
static const symbol s_0_99[s_0_99129,6150
static const symbol s_0_100[s_0_100130,6201
static const symbol s_0_101[s_0_101131,6253
static const symbol s_0_102[s_0_102132,6300
static const symbol s_0_103[s_0_103133,6352
static const symbol s_0_104[s_0_104134,6399
static const symbol s_0_105[s_0_105135,6451
static const symbol s_0_106[s_0_106136,6505
static const symbol s_0_107[s_0_107137,6574
static const symbol s_0_108[s_0_108138,6621
static const symbol s_0_109[s_0_109139,6668
static const symbol s_0_110[s_0_110140,6720
static const symbol s_0_111[s_0_111141,6767
static const symbol s_0_112[s_0_112142,6819
static const symbol s_0_113[s_0_113143,6873
static const symbol s_0_114[s_0_114144,6915
static const symbol s_0_115[s_0_115145,6962
static const symbol s_0_116[s_0_116146,7019
static const symbol s_0_117[s_0_117147,7078
static const symbol s_0_118[s_0_118148,7125
static const symbol s_0_119[s_0_119149,7167
static const symbol s_0_120[s_0_120150,7214
static const symbol s_0_121[s_0_121151,7266
static const symbol s_0_122[s_0_122152,7313
static const symbol s_0_123[s_0_123153,7365
static const symbol s_0_124[s_0_124154,7412
static const symbol s_0_125[s_0_125155,7464
static const symbol s_0_126[s_0_126156,7521
static const symbol s_0_127[s_0_127157,7588
static const symbol s_0_128[s_0_128158,7645
static const symbol s_0_129[s_0_129159,7712
static const symbol s_0_130[s_0_130160,7769
static const symbol s_0_131[s_0_131161,7831
static const symbol s_0_132[s_0_132162,7888
static const symbol s_0_133[s_0_133163,7952
static const symbol s_0_134[s_0_134164,8009
static const symbol s_0_135[s_0_135165,8066
static const symbol s_0_136[s_0_136166,8123
static const symbol s_0_137[s_0_137167,8175
static const symbol s_0_138[s_0_138168,8232
static const symbol s_0_139[s_0_139169,8289
static const symbol s_0_140[s_0_140170,8341
static const symbol s_0_141[s_0_141171,8403
static const symbol s_0_142[s_0_142172,8465
static const symbol s_0_143[s_0_143173,8517
static const symbol s_0_144[s_0_144174,8574
static const symbol s_0_145[s_0_145175,8626
static const symbol s_0_146[s_0_146176,8685
static const symbol s_0_147[s_0_147177,8737
static const symbol s_0_148[s_0_148178,8784
static const symbol s_0_149[s_0_149179,8836
static const symbol s_0_150[s_0_150180,8888
static const symbol s_0_151[s_0_151181,8945
static const symbol s_0_152[s_0_152182,8997
static const symbol s_0_153[s_0_153183,9044
static const symbol s_0_154[s_0_154184,9096
static const symbol s_0_155[s_0_155185,9153
static const symbol s_0_156[s_0_156186,9205
static const symbol s_0_157[s_0_157187,9252
static const symbol s_0_158[s_0_158188,9309
static const symbol s_0_159[s_0_159189,9366
static const symbol s_0_160[s_0_160190,9420
static const symbol s_0_161[s_0_161191,9479
static const symbol s_0_162[s_0_162192,9533
static const symbol s_0_163[s_0_163193,9597
static const symbol s_0_164[s_0_164194,9666
static const symbol s_0_165[s_0_165195,9730
static const symbol s_0_166[s_0_166196,9799
static const symbol s_0_167[s_0_167197,9868
static const symbol s_0_168[s_0_168198,9932
static const symbol s_0_169[s_0_169199,10003
static const symbol s_0_170[s_0_170200,10089
static const symbol s_0_171[s_0_171201,10153
static const symbol s_0_172[s_0_172202,10222
static const symbol s_0_173[s_0_173203,10291
static const symbol s_0_174[s_0_174204,10355
static const symbol s_0_175[s_0_175205,10426
static const symbol s_0_176[s_0_176206,10512
static const symbol s_0_177[s_0_177207,10566
static const symbol s_0_178[s_0_178208,10620
static const symbol s_0_179[s_0_179209,10679
static const symbol s_0_180[s_0_180210,10726
static const symbol s_0_181[s_0_181211,10778
static const symbol s_0_182[s_0_182212,10825
static const symbol s_0_183[s_0_183213,10877
static const symbol s_0_184[s_0_184214,10924
static const symbol s_0_185[s_0_185215,10978
static const symbol s_0_186[s_0_186216,11047
static const symbol s_0_187[s_0_187217,11089
static const symbol s_0_188[s_0_188218,11136
static const symbol s_0_189[s_0_189219,11188
static const symbol s_0_190[s_0_190220,11252
static const symbol s_0_191[s_0_191221,11299
static const symbol s_0_192[s_0_192222,11356
static const symbol s_0_193[s_0_193223,11408
static const symbol s_0_194[s_0_194224,11450
static const symbol s_0_195[s_0_195225,11499
static const symbol s_0_196[s_0_196226,11553
static const symbol s_0_197[s_0_197227,11602
static const symbol s_0_198[s_0_198228,11651
static const symbol s_0_199[s_0_199229,11700
static const symbol s_0_200[s_0_200230,11759
static const symbol s_0_201[s_0_201231,11818
static const symbol s_0_202[s_0_202232,11867
static const symbol s_0_203[s_0_203233,11921
static const struct among a_0[a_0235,11981
static const symbol s_1_0[s_1_0443,19110
static const symbol s_1_1[s_1_1444,19160
static const symbol s_1_2[s_1_2445,19205
static const symbol s_1_3[s_1_3446,19255
static const symbol s_1_4[s_1_4447,19305
static const symbol s_1_5[s_1_5448,19350
static const symbol s_1_6[s_1_6449,19400
static const symbol s_1_7[s_1_7450,19450
static const symbol s_1_8[s_1_8451,19505
static const symbol s_1_9[s_1_9452,19555
static const symbol s_1_10[s_1_10453,19607
static const symbol s_1_11[s_1_11454,19665
static const symbol s_1_12[s_1_12455,19718
static const symbol s_1_13[s_1_13456,19771
static const symbol s_1_14[s_1_14457,19829
static const symbol s_1_15[s_1_15458,19875
static const symbol s_1_16[s_1_16459,19926
static const symbol s_1_17[s_1_17460,19977
static const symbol s_1_18[s_1_18461,20038
static const symbol s_1_19[s_1_19462,20106
static const symbol s_1_20[s_1_20463,20164
static const symbol s_1_21[s_1_21464,20215
static const symbol s_1_22[s_1_22465,20261
static const symbol s_1_23[s_1_23466,20314
static const symbol s_1_24[s_1_24467,20360
static const symbol s_1_25[s_1_25468,20411
static const symbol s_1_26[s_1_26469,20462
static const symbol s_1_27[s_1_27470,20518
static const symbol s_1_28[s_1_28471,20569
static const symbol s_1_29[s_1_29472,20620
static const symbol s_1_30[s_1_30473,20666
static const symbol s_1_31[s_1_31474,20717
static const symbol s_1_32[s_1_32475,20768
static const symbol s_1_33[s_1_33476,20819
static const symbol s_1_34[s_1_34477,20870
static const symbol s_1_35[s_1_35478,20926
static const symbol s_1_36[s_1_36479,20972
static const symbol s_1_37[s_1_37480,21023
static const symbol s_1_38[s_1_38481,21074
static const symbol s_1_39[s_1_39482,21130
static const symbol s_1_40[s_1_40483,21181
static const symbol s_1_41[s_1_41484,21237
static const symbol s_1_42[s_1_42485,21290
static const symbol s_1_43[s_1_43486,21348
static const symbol s_1_44[s_1_44487,21401
static const symbol s_1_45[s_1_45488,21474
static const symbol s_1_46[s_1_46489,21525
static const symbol s_1_47[s_1_47490,21581
static const symbol s_1_48[s_1_48491,21642
static const symbol s_1_49[s_1_49492,21693
static const symbol s_1_50[s_1_50493,21739
static const symbol s_1_51[s_1_51494,21790
static const symbol s_1_52[s_1_52495,21846
static const symbol s_1_53[s_1_53496,21892
static const symbol s_1_54[s_1_54497,21945
static const symbol s_1_55[s_1_55498,22008
static const symbol s_1_56[s_1_56499,22059
static const symbol s_1_57[s_1_57500,22110
static const symbol s_1_58[s_1_58501,22156
static const symbol s_1_59[s_1_59502,22209
static const symbol s_1_60[s_1_60503,22279
static const symbol s_1_61[s_1_61504,22327
static const struct among a_1[a_1506,22393
static const symbol s_2_0[s_2_0572,24527
static const symbol s_2_1[s_2_1573,24587
static const symbol s_2_2[s_2_2574,24654
static const symbol s_2_3[s_2_3575,24714
static const symbol s_2_4[s_2_4576,24774
static const symbol s_2_5[s_2_5577,24829
static const symbol s_2_6[s_2_6578,24884
static const symbol s_2_7[s_2_7579,24944
static const symbol s_2_8[s_2_8580,25016
static const symbol s_2_9[s_2_9581,25083
static const symbol s_2_10[s_2_10582,25150
static const struct among a_2[a_2584,25207
static const symbol s_3_0[s_3_0599,25601
static const symbol s_3_1[s_3_1600,25648
static const struct among a_3[a_3602,25701
static const symbol s_4_0[s_4_0608,25805
static const struct among a_4[a_4610,25851
static const unsigned char g_v[g_v615,25923
static const symbol s_0[s_0617,26074
static const symbol s_1[s_1618,26133
static const symbol s_2[s_2619,26192
static const symbol s_3[s_3620,26261
static const symbol s_4[s_4621,26313
static const symbol s_5[s_5622,26365
static const symbol s_6[s_6623,26427
static const symbol s_7[s_7624,26489
static const symbol s_8[s_8625,26553
static const symbol s_9[s_9626,26590
static const symbol s_10[s_10627,26627
static int r_R1(629,26666
static int r_step1(634,26840
static int r_step2(653,27435
static int r_fix_conflicts(677,28142
static int r_fix_chdz(729,29864
static int r_fix_gd(751,30597
extern int lithuanian_UTF_8_stem(762,30984
extern struct SN_env * lithuanian_UTF_8_create_env(835,33547
extern void lithuanian_UTF_8_close_env(837,33640

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_KOI8_R_russian.c,6638
static const symbol s_0_0[s_0_034,812
static const symbol s_0_1[s_0_135,865
static const symbol s_0_2[s_0_236,924
static const symbol s_0_3[s_0_337,983
static const symbol s_0_4[s_0_438,1024
static const symbol s_0_5[s_0_539,1071
static const symbol s_0_6[s_0_640,1118
static const symbol s_0_7[s_0_741,1183
static const symbol s_0_8[s_0_842,1254
static const struct among a_0[a_044,1326
static const symbol s_1_0[s_1_057,1648
static const symbol s_1_1[s_1_158,1695
static const symbol s_1_2[s_1_259,1742
static const symbol s_1_3[s_1_360,1789
static const symbol s_1_4[s_1_461,1836
static const symbol s_1_5[s_1_562,1883
static const symbol s_1_6[s_1_663,1930
static const symbol s_1_7[s_1_764,1977
static const symbol s_1_8[s_1_865,2024
static const symbol s_1_9[s_1_966,2071
static const symbol s_1_10[s_1_1067,2118
static const symbol s_1_11[s_1_1168,2172
static const symbol s_1_12[s_1_1269,2226
static const symbol s_1_13[s_1_1370,2274
static const symbol s_1_14[s_1_1471,2322
static const symbol s_1_15[s_1_1572,2370
static const symbol s_1_16[s_1_1673,2418
static const symbol s_1_17[s_1_1774,2466
static const symbol s_1_18[s_1_1875,2514
static const symbol s_1_19[s_1_1976,2562
static const symbol s_1_20[s_1_2077,2610
static const symbol s_1_21[s_1_2178,2664
static const symbol s_1_22[s_1_2279,2718
static const symbol s_1_23[s_1_2380,2766
static const symbol s_1_24[s_1_2481,2814
static const symbol s_1_25[s_1_2582,2868
static const struct among a_1[a_184,2923
static const symbol s_2_0[s_2_0114,3812
static const symbol s_2_1[s_2_1115,3859
static const symbol s_2_2[s_2_2116,3906
static const symbol s_2_3[s_2_3117,3953
static const symbol s_2_4[s_2_4118,4006
static const symbol s_2_5[s_2_5119,4059
static const symbol s_2_6[s_2_6120,4100
static const symbol s_2_7[s_2_7121,4147
static const struct among a_2[a_2123,4201
static const symbol s_3_0[s_3_0135,4493
static const symbol s_3_1[s_3_1136,4540
static const struct among a_3[a_3138,4588
static const symbol s_4_0[s_4_0144,4692
static const symbol s_4_1[s_4_1145,4733
static const symbol s_4_2[s_4_2146,4780
static const symbol s_4_3[s_4_3147,4827
static const symbol s_4_4[s_4_4148,4880
static const symbol s_4_5[s_4_5149,4933
static const symbol s_4_6[s_4_6150,4980
static const symbol s_4_7[s_4_7151,5033
static const symbol s_4_8[s_4_8152,5086
static const symbol s_4_9[s_4_9153,5139
static const symbol s_4_10[s_4_10154,5192
static const symbol s_4_11[s_4_11155,5252
static const symbol s_4_12[s_4_12156,5312
static const symbol s_4_13[s_4_13157,5360
static const symbol s_4_14[s_4_14158,5414
static const symbol s_4_15[s_4_15159,5468
static const symbol s_4_16[s_4_16160,5510
static const symbol s_4_17[s_4_17161,5558
static const symbol s_4_18[s_4_18162,5606
static const symbol s_4_19[s_4_19163,5648
static const symbol s_4_20[s_4_20164,5696
static const symbol s_4_21[s_4_21165,5744
static const symbol s_4_22[s_4_22166,5792
static const symbol s_4_23[s_4_23167,5840
static const symbol s_4_24[s_4_24168,5888
static const symbol s_4_25[s_4_25169,5930
static const symbol s_4_26[s_4_26170,5978
static const symbol s_4_27[s_4_27171,6026
static const symbol s_4_28[s_4_28172,6080
static const symbol s_4_29[s_4_29173,6134
static const symbol s_4_30[s_4_30174,6182
static const symbol s_4_31[s_4_31175,6236
static const symbol s_4_32[s_4_32176,6290
static const symbol s_4_33[s_4_33177,6338
static const symbol s_4_34[s_4_34178,6392
static const symbol s_4_35[s_4_35179,6440
static const symbol s_4_36[s_4_36180,6494
static const symbol s_4_37[s_4_37181,6542
static const symbol s_4_38[s_4_38182,6590
static const symbol s_4_39[s_4_39183,6638
static const symbol s_4_40[s_4_40184,6686
static const symbol s_4_41[s_4_41185,6740
static const symbol s_4_42[s_4_42186,6794
static const symbol s_4_43[s_4_43187,6848
static const symbol s_4_44[s_4_44188,6902
static const symbol s_4_45[s_4_45189,6950
static const struct among a_4[a_4191,7005
static const symbol s_5_0[s_5_0241,8548
static const symbol s_5_1[s_5_1242,8589
static const symbol s_5_2[s_5_2243,8636
static const symbol s_5_3[s_5_3244,8683
static const symbol s_5_4[s_5_4245,8724
static const symbol s_5_5[s_5_5246,8765
static const symbol s_5_6[s_5_6247,8812
static const symbol s_5_7[s_5_7248,8859
static const symbol s_5_8[s_5_8249,8906
static const symbol s_5_9[s_5_9250,8953
static const symbol s_5_10[s_5_10251,9006
static const symbol s_5_11[s_5_11252,9048
static const symbol s_5_12[s_5_12253,9096
static const symbol s_5_13[s_5_13254,9144
static const symbol s_5_14[s_5_14255,9198
static const symbol s_5_15[s_5_15256,9252
static const symbol s_5_16[s_5_16257,9312
static const symbol s_5_17[s_5_17258,9354
static const symbol s_5_18[s_5_18259,9402
static const symbol s_5_19[s_5_19260,9456
static const symbol s_5_20[s_5_20261,9504
static const symbol s_5_21[s_5_21262,9552
static const symbol s_5_22[s_5_22263,9600
static const symbol s_5_23[s_5_23264,9648
static const symbol s_5_24[s_5_24265,9702
static const symbol s_5_25[s_5_25266,9750
static const symbol s_5_26[s_5_26267,9798
static const symbol s_5_27[s_5_27268,9852
static const symbol s_5_28[s_5_28269,9894
static const symbol s_5_29[s_5_29270,9936
static const symbol s_5_30[s_5_30271,9984
static const symbol s_5_31[s_5_31272,10032
static const symbol s_5_32[s_5_32273,10074
static const symbol s_5_33[s_5_33274,10122
static const symbol s_5_34[s_5_34275,10170
static const symbol s_5_35[s_5_35276,10212
static const struct among a_5[a_5278,10255
static const symbol s_6_0[s_6_0318,11469
static const symbol s_6_1[s_6_1319,11522
static const struct among a_6[a_6321,11582
static const symbol s_7_0[s_7_0327,11686
static const symbol s_7_1[s_7_1328,11745
static const symbol s_7_2[s_7_2329,11786
static const symbol s_7_3[s_7_3330,11827
static const struct among a_7[a_7332,11881
static const unsigned char g_v[g_v340,12049
static const symbol s_0[s_0342,12106
static int r_mark_regions(344,12145
static int r_R2(376,13235
static int r_perfective_gerund(381,13409
static int r_adjective(413,14561
static int r_adjectival(424,14990
static int r_reflexive(463,16513
static int r_verb(474,16922
static int r_noun(506,18071
static int r_derivational(517,18496
static int r_tidy_up(531,18999
extern int russian_KOI8_R_stem(569,20432
extern struct SN_env * russian_KOI8_R_create_env(680,24379
extern void russian_KOI8_R_close_env(682,24470

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_basque.c,20176
static const symbol s_0_0[s_0_031,659
static const symbol s_0_1[s_0_132,714
static const symbol s_0_2[s_0_233,774
static const symbol s_0_3[s_0_334,834
static const symbol s_0_4[s_0_435,894
static const symbol s_0_5[s_0_536,959
static const symbol s_0_6[s_0_637,1019
static const symbol s_0_7[s_0_738,1084
static const symbol s_0_8[s_0_839,1154
static const symbol s_0_9[s_0_940,1214
static const symbol s_0_10[s_0_1041,1274
static const symbol s_0_11[s_0_1142,1335
static const symbol s_0_12[s_0_1243,1391
static const symbol s_0_13[s_0_1344,1452
static const symbol s_0_14[s_0_1445,1518
static const symbol s_0_15[s_0_1546,1579
static const symbol s_0_16[s_0_1647,1645
static const symbol s_0_17[s_0_1748,1711
static const symbol s_0_18[s_0_1849,1757
static const symbol s_0_19[s_0_1950,1818
static const symbol s_0_20[s_0_2051,1864
static const symbol s_0_21[s_0_2152,1920
static const symbol s_0_22[s_0_2253,1976
static const symbol s_0_23[s_0_2354,2032
static const symbol s_0_24[s_0_2455,2093
static const symbol s_0_25[s_0_2556,2159
static const symbol s_0_26[s_0_2657,2215
static const symbol s_0_27[s_0_2758,2271
static const symbol s_0_28[s_0_2859,2337
static const symbol s_0_29[s_0_2960,2388
static const symbol s_0_30[s_0_3061,2444
static const symbol s_0_31[s_0_3162,2515
static const symbol s_0_32[s_0_3263,2571
static const symbol s_0_33[s_0_3364,2627
static const symbol s_0_34[s_0_3465,2683
static const symbol s_0_35[s_0_3566,2744
static const symbol s_0_36[s_0_3667,2800
static const symbol s_0_37[s_0_3768,2856
static const symbol s_0_38[s_0_3869,2912
static const symbol s_0_39[s_0_3970,2968
static const symbol s_0_40[s_0_4071,3019
static const symbol s_0_41[s_0_4172,3075
static const symbol s_0_42[s_0_4273,3141
static const symbol s_0_43[s_0_4374,3192
static const symbol s_0_44[s_0_4475,3258
static const symbol s_0_45[s_0_4576,3309
static const symbol s_0_46[s_0_4677,3375
static const symbol s_0_47[s_0_4778,3441
static const symbol s_0_48[s_0_4879,3507
static const symbol s_0_49[s_0_4980,3558
static const symbol s_0_50[s_0_5081,3614
static const symbol s_0_51[s_0_5182,3670
static const symbol s_0_52[s_0_5283,3726
static const symbol s_0_53[s_0_5384,3787
static const symbol s_0_54[s_0_5485,3848
static const symbol s_0_55[s_0_5586,3909
static const symbol s_0_56[s_0_5687,3955
static const symbol s_0_57[s_0_5788,4011
static const symbol s_0_58[s_0_5889,4072
static const symbol s_0_59[s_0_5990,4138
static const symbol s_0_60[s_0_6091,4194
static const symbol s_0_61[s_0_6192,4250
static const symbol s_0_62[s_0_6293,4301
static const symbol s_0_63[s_0_6394,4357
static const symbol s_0_64[s_0_6495,4408
static const symbol s_0_65[s_0_6596,4464
static const symbol s_0_66[s_0_6697,4525
static const symbol s_0_67[s_0_6798,4571
static const symbol s_0_68[s_0_6899,4622
static const symbol s_0_69[s_0_69100,4678
static const symbol s_0_70[s_0_70101,4734
static const symbol s_0_71[s_0_71102,4790
static const symbol s_0_72[s_0_72103,4851
static const symbol s_0_73[s_0_73104,4912
static const symbol s_0_74[s_0_74105,4973
static const symbol s_0_75[s_0_75106,5034
static const symbol s_0_76[s_0_76107,5100
static const symbol s_0_77[s_0_77108,5146
static const symbol s_0_78[s_0_78109,5197
static const symbol s_0_79[s_0_79110,5253
static const symbol s_0_80[s_0_80111,5304
static const symbol s_0_81[s_0_81112,5360
static const symbol s_0_82[s_0_82113,5431
static const symbol s_0_83[s_0_83114,5482
static const symbol s_0_84[s_0_84115,5533
static const symbol s_0_85[s_0_85116,5584
static const symbol s_0_86[s_0_86117,5645
static const symbol s_0_87[s_0_87118,5701
static const symbol s_0_88[s_0_88119,5762
static const symbol s_0_89[s_0_89120,5813
static const symbol s_0_90[s_0_90121,5874
static const symbol s_0_91[s_0_91122,5920
static const symbol s_0_92[s_0_92123,5971
static const symbol s_0_93[s_0_93124,6022
static const symbol s_0_94[s_0_94125,6078
static const symbol s_0_95[s_0_95126,6124
static const symbol s_0_96[s_0_96127,6175
static const symbol s_0_97[s_0_97128,6231
static const symbol s_0_98[s_0_98129,6277
static const symbol s_0_99[s_0_99130,6338
static const symbol s_0_100[s_0_100131,6384
static const symbol s_0_101[s_0_101132,6436
static const symbol s_0_102[s_0_102133,6503
static const symbol s_0_103[s_0_103134,6560
static const symbol s_0_104[s_0_104135,6627
static const symbol s_0_105[s_0_105136,6674
static const symbol s_0_106[s_0_106137,6736
static const symbol s_0_107[s_0_107138,6793
static const symbol s_0_108[s_0_108139,6855
static const struct among a_0[a_0141,6918
static const symbol s_1_0[s_1_0254,10557
static const symbol s_1_1[s_1_1255,10607
static const symbol s_1_2[s_1_2256,10662
static const symbol s_1_3[s_1_3257,10717
static const symbol s_1_4[s_1_4258,10777
static const symbol s_1_5[s_1_5259,10837
static const symbol s_1_6[s_1_6260,10897
static const symbol s_1_7[s_1_7261,10957
static const symbol s_1_8[s_1_8262,11022
static const symbol s_1_9[s_1_9263,11087
static const symbol s_1_10[s_1_10264,11147
static const symbol s_1_11[s_1_11265,11208
static const symbol s_1_12[s_1_12266,11274
static const symbol s_1_13[s_1_13267,11335
static const symbol s_1_14[s_1_14268,11391
static const symbol s_1_15[s_1_15269,11452
static const symbol s_1_16[s_1_16270,11503
static const symbol s_1_17[s_1_17271,11559
static const symbol s_1_18[s_1_18272,11625
static const symbol s_1_19[s_1_19273,11681
static const symbol s_1_20[s_1_20274,11742
static const symbol s_1_21[s_1_21275,11793
static const symbol s_1_22[s_1_22276,11859
static const symbol s_1_23[s_1_23277,11910
static const symbol s_1_24[s_1_24278,11971
static const symbol s_1_25[s_1_25279,12032
static const symbol s_1_26[s_1_26280,12093
static const symbol s_1_27[s_1_27281,12154
static const symbol s_1_28[s_1_28282,12200
static const symbol s_1_29[s_1_29283,12256
static const symbol s_1_30[s_1_30284,12312
static const symbol s_1_31[s_1_31285,12373
static const symbol s_1_32[s_1_32286,12439
static const symbol s_1_33[s_1_33287,12505
static const symbol s_1_34[s_1_34288,12571
static const symbol s_1_35[s_1_35289,12627
static const symbol s_1_36[s_1_36290,12683
static const symbol s_1_37[s_1_37291,12744
static const symbol s_1_38[s_1_38292,12805
static const symbol s_1_39[s_1_39293,12866
static const symbol s_1_40[s_1_40294,12922
static const symbol s_1_41[s_1_41295,12973
static const symbol s_1_42[s_1_42296,13034
static const symbol s_1_43[s_1_43297,13085
static const symbol s_1_44[s_1_44298,13141
static const symbol s_1_45[s_1_45299,13197
static const symbol s_1_46[s_1_46300,13258
static const symbol s_1_47[s_1_47301,13319
static const symbol s_1_48[s_1_48302,13380
static const symbol s_1_49[s_1_49303,13436
static const symbol s_1_50[s_1_50304,13497
static const symbol s_1_51[s_1_51305,13558
static const symbol s_1_52[s_1_52306,13624
static const symbol s_1_53[s_1_53307,13690
static const symbol s_1_54[s_1_54308,13756
static const symbol s_1_55[s_1_55309,13817
static const symbol s_1_56[s_1_56310,13873
static const symbol s_1_57[s_1_57311,13924
static const symbol s_1_58[s_1_58312,13980
static const symbol s_1_59[s_1_59313,14041
static const symbol s_1_60[s_1_60314,14107
static const symbol s_1_61[s_1_61315,14153
static const symbol s_1_62[s_1_62316,14209
static const symbol s_1_63[s_1_63317,14270
static const symbol s_1_64[s_1_64318,14321
static const symbol s_1_65[s_1_65319,14372
static const symbol s_1_66[s_1_66320,14423
static const symbol s_1_67[s_1_67321,14489
static const symbol s_1_68[s_1_68322,14545
static const symbol s_1_69[s_1_69323,14606
static const symbol s_1_70[s_1_70324,14667
static const symbol s_1_71[s_1_71325,14723
static const symbol s_1_72[s_1_72326,14774
static const symbol s_1_73[s_1_73327,14820
static const symbol s_1_74[s_1_74328,14876
static const symbol s_1_75[s_1_75329,14927
static const symbol s_1_76[s_1_76330,14998
static const symbol s_1_77[s_1_77331,15069
static const symbol s_1_78[s_1_78332,15135
static const symbol s_1_79[s_1_79333,15196
static const symbol s_1_80[s_1_80334,15262
static const symbol s_1_81[s_1_81335,15318
static const symbol s_1_82[s_1_82336,15374
static const symbol s_1_83[s_1_83337,15435
static const symbol s_1_84[s_1_84338,15486
static const symbol s_1_85[s_1_85339,15542
static const symbol s_1_86[s_1_86340,15603
static const symbol s_1_87[s_1_87341,15669
static const symbol s_1_88[s_1_88342,15730
static const symbol s_1_89[s_1_89343,15796
static const symbol s_1_90[s_1_90344,15852
static const symbol s_1_91[s_1_91345,15908
static const symbol s_1_92[s_1_92346,15959
static const symbol s_1_93[s_1_93347,16020
static const symbol s_1_94[s_1_94348,16076
static const symbol s_1_95[s_1_95349,16127
static const symbol s_1_96[s_1_96350,16188
static const symbol s_1_97[s_1_97351,16244
static const symbol s_1_98[s_1_98352,16305
static const symbol s_1_99[s_1_99353,16366
static const symbol s_1_100[s_1_100354,16422
static const symbol s_1_101[s_1_101355,16479
static const symbol s_1_102[s_1_102356,16536
static const symbol s_1_103[s_1_103357,16588
static const symbol s_1_104[s_1_104358,16645
static const symbol s_1_105[s_1_105359,16702
static const symbol s_1_106[s_1_106360,16759
static const symbol s_1_107[s_1_107361,16816
static const symbol s_1_108[s_1_108362,16875
static const symbol s_1_109[s_1_109363,16922
static const symbol s_1_110[s_1_110364,16974
static const symbol s_1_111[s_1_111365,17031
static const symbol s_1_112[s_1_112366,17093
static const symbol s_1_113[s_1_113367,17155
static const symbol s_1_114[s_1_114368,17212
static const symbol s_1_115[s_1_115369,17274
static const symbol s_1_116[s_1_116370,17336
static const symbol s_1_117[s_1_117371,17393
static const symbol s_1_118[s_1_118372,17450
static const symbol s_1_119[s_1_119373,17507
static const symbol s_1_120[s_1_120374,17559
static const symbol s_1_121[s_1_121375,17626
static const symbol s_1_122[s_1_122376,17688
static const symbol s_1_123[s_1_123377,17740
static const symbol s_1_124[s_1_124378,17787
static const symbol s_1_125[s_1_125379,17839
static const symbol s_1_126[s_1_126380,17886
static const symbol s_1_127[s_1_127381,17938
static const symbol s_1_128[s_1_128382,17995
static const symbol s_1_129[s_1_129383,18047
static const symbol s_1_130[s_1_130384,18099
static const symbol s_1_131[s_1_131385,18166
static const symbol s_1_132[s_1_132386,18228
static const symbol s_1_133[s_1_133387,18290
static const symbol s_1_134[s_1_134388,18352
static const symbol s_1_135[s_1_135389,18414
static const symbol s_1_136[s_1_136390,18471
static const symbol s_1_137[s_1_137391,18523
static const symbol s_1_138[s_1_138392,18590
static const symbol s_1_139[s_1_139393,18652
static const symbol s_1_140[s_1_140394,18709
static const symbol s_1_141[s_1_141395,18761
static const symbol s_1_142[s_1_142396,18818
static const symbol s_1_143[s_1_143397,18865
static const symbol s_1_144[s_1_144398,18917
static const symbol s_1_145[s_1_145399,18979
static const symbol s_1_146[s_1_146400,19031
static const symbol s_1_147[s_1_147401,19098
static const symbol s_1_148[s_1_148402,19160
static const symbol s_1_149[s_1_149403,19227
static const symbol s_1_150[s_1_150404,19294
static const symbol s_1_151[s_1_151405,19361
static const symbol s_1_152[s_1_152406,19418
static const symbol s_1_153[s_1_153407,19475
static const symbol s_1_154[s_1_154408,19532
static const symbol s_1_155[s_1_155409,19589
static const symbol s_1_156[s_1_156410,19651
static const symbol s_1_157[s_1_157411,19713
static const symbol s_1_158[s_1_158412,19770
static const symbol s_1_159[s_1_159413,19817
static const symbol s_1_160[s_1_160414,19874
static const symbol s_1_161[s_1_161415,19936
static const symbol s_1_162[s_1_162416,19993
static const symbol s_1_163[s_1_163417,20045
static const symbol s_1_164[s_1_164418,20102
static const symbol s_1_165[s_1_165419,20149
static const symbol s_1_166[s_1_166420,20211
static const symbol s_1_167[s_1_167421,20263
static const symbol s_1_168[s_1_168422,20320
static const symbol s_1_169[s_1_169423,20367
static const symbol s_1_170[s_1_170424,20429
static const symbol s_1_171[s_1_171425,20476
static const symbol s_1_172[s_1_172426,20533
static const symbol s_1_173[s_1_173427,20590
static const symbol s_1_174[s_1_174428,20647
static const symbol s_1_175[s_1_175429,20704
static const symbol s_1_176[s_1_176430,20756
static const symbol s_1_177[s_1_177431,20803
static const symbol s_1_178[s_1_178432,20860
static const symbol s_1_179[s_1_179433,20922
static const symbol s_1_180[s_1_180434,20984
static const symbol s_1_181[s_1_181435,21046
static const symbol s_1_182[s_1_182436,21108
static const symbol s_1_183[s_1_183437,21160
static const symbol s_1_184[s_1_184438,21212
static const symbol s_1_185[s_1_185439,21269
static const symbol s_1_186[s_1_186440,21326
static const symbol s_1_187[s_1_187441,21383
static const symbol s_1_188[s_1_188442,21435
static const symbol s_1_189[s_1_189443,21482
static const symbol s_1_190[s_1_190444,21539
static const symbol s_1_191[s_1_191445,21586
static const symbol s_1_192[s_1_192446,21638
static const symbol s_1_193[s_1_193447,21690
static const symbol s_1_194[s_1_194448,21742
static const symbol s_1_195[s_1_195449,21799
static const symbol s_1_196[s_1_196450,21856
static const symbol s_1_197[s_1_197451,21913
static const symbol s_1_198[s_1_198452,21975
static const symbol s_1_199[s_1_199453,22037
static const symbol s_1_200[s_1_200454,22099
static const symbol s_1_201[s_1_201455,22156
static const symbol s_1_202[s_1_202456,22208
static const symbol s_1_203[s_1_203457,22255
static const symbol s_1_204[s_1_204458,22317
static const symbol s_1_205[s_1_205459,22371
static const symbol s_1_206[s_1_206460,22418
static const symbol s_1_207[s_1_207461,22465
static const symbol s_1_208[s_1_208462,22527
static const symbol s_1_209[s_1_209463,22589
static const symbol s_1_210[s_1_210464,22641
static const symbol s_1_211[s_1_211465,22698
static const symbol s_1_212[s_1_212466,22750
static const symbol s_1_213[s_1_213467,22802
static const symbol s_1_214[s_1_214468,22859
static const symbol s_1_215[s_1_215469,22906
static const symbol s_1_216[s_1_216470,22958
static const symbol s_1_217[s_1_217471,23025
static const symbol s_1_218[s_1_218472,23092
static const symbol s_1_219[s_1_219473,23154
static const symbol s_1_220[s_1_220474,23206
static const symbol s_1_221[s_1_221475,23263
static const symbol s_1_222[s_1_222476,23320
static const symbol s_1_223[s_1_223477,23382
static const symbol s_1_224[s_1_224478,23434
static const symbol s_1_225[s_1_225479,23486
static const symbol s_1_226[s_1_226480,23538
static const symbol s_1_227[s_1_227481,23595
static const symbol s_1_228[s_1_228482,23657
static const symbol s_1_229[s_1_229483,23719
static const symbol s_1_230[s_1_230484,23776
static const symbol s_1_231[s_1_231485,23838
static const symbol s_1_232[s_1_232486,23885
static const symbol s_1_233[s_1_233487,23937
static const symbol s_1_234[s_1_234488,23989
static const symbol s_1_235[s_1_235489,24036
static const symbol s_1_236[s_1_236490,24098
static const symbol s_1_237[s_1_237491,24155
static const symbol s_1_238[s_1_238492,24217
static const symbol s_1_239[s_1_239493,24269
static const symbol s_1_240[s_1_240494,24336
static const symbol s_1_241[s_1_241495,24388
static const symbol s_1_242[s_1_242496,24445
static const symbol s_1_243[s_1_243497,24522
static const symbol s_1_244[s_1_244498,24574
static const symbol s_1_245[s_1_245499,24621
static const symbol s_1_246[s_1_246500,24678
static const symbol s_1_247[s_1_247501,24725
static const symbol s_1_248[s_1_248502,24777
static const symbol s_1_249[s_1_249503,24839
static const symbol s_1_250[s_1_250504,24896
static const symbol s_1_251[s_1_251505,24953
static const symbol s_1_252[s_1_252506,25005
static const symbol s_1_253[s_1_253507,25062
static const symbol s_1_254[s_1_254508,25114
static const symbol s_1_255[s_1_255509,25166
static const symbol s_1_256[s_1_256510,25213
static const symbol s_1_257[s_1_257511,25265
static const symbol s_1_258[s_1_258512,25317
static const symbol s_1_259[s_1_259513,25369
static const symbol s_1_260[s_1_260514,25421
static const symbol s_1_261[s_1_261515,25488
static const symbol s_1_262[s_1_262516,25542
static const symbol s_1_263[s_1_263517,25589
static const symbol s_1_264[s_1_264518,25636
static const symbol s_1_265[s_1_265519,25688
static const symbol s_1_266[s_1_266520,25750
static const symbol s_1_267[s_1_267521,25812
static const symbol s_1_268[s_1_268522,25869
static const symbol s_1_269[s_1_269523,25926
static const symbol s_1_270[s_1_270524,25978
static const symbol s_1_271[s_1_271525,26035
static const symbol s_1_272[s_1_272526,26082
static const symbol s_1_273[s_1_273527,26134
static const symbol s_1_274[s_1_274528,26181
static const symbol s_1_275[s_1_275529,26233
static const symbol s_1_276[s_1_276530,26280
static const symbol s_1_277[s_1_277531,26342
static const symbol s_1_278[s_1_278532,26399
static const symbol s_1_279[s_1_279533,26456
static const symbol s_1_280[s_1_280534,26513
static const symbol s_1_281[s_1_281535,26570
static const symbol s_1_282[s_1_282536,26622
static const symbol s_1_283[s_1_283537,26669
static const symbol s_1_284[s_1_284538,26726
static const symbol s_1_285[s_1_285539,26788
static const symbol s_1_286[s_1_286540,26845
static const symbol s_1_287[s_1_287541,26897
static const symbol s_1_288[s_1_288542,26944
static const symbol s_1_289[s_1_289543,26996
static const symbol s_1_290[s_1_290544,27063
static const symbol s_1_291[s_1_291545,27105
static const symbol s_1_292[s_1_292546,27152
static const symbol s_1_293[s_1_293547,27209
static const symbol s_1_294[s_1_294548,27256
static const struct among a_1[a_1550,27319
static const symbol s_2_0[s_2_0849,37385
static const symbol s_2_1[s_2_1850,37440
static const symbol s_2_2[s_2_2851,37500
static const symbol s_2_3[s_2_3852,37545
static const symbol s_2_4[s_2_4853,37595
static const symbol s_2_5[s_2_5854,37650
static const symbol s_2_6[s_2_6855,37705
static const symbol s_2_7[s_2_7856,37760
static const symbol s_2_8[s_2_8857,37815
static const symbol s_2_9[s_2_9858,37860
static const symbol s_2_10[s_2_10859,37905
static const symbol s_2_11[s_2_11860,37951
static const symbol s_2_12[s_2_12861,38012
static const symbol s_2_13[s_2_13862,38063
static const symbol s_2_14[s_2_14863,38124
static const symbol s_2_15[s_2_15864,38180
static const symbol s_2_16[s_2_16865,38226
static const symbol s_2_17[s_2_17866,38272
static const symbol s_2_18[s_2_18867,38323
static const struct among a_2[a_2869,38370
static const unsigned char g_v[g_v892,39028
static const symbol s_0[s_0894,39080
static const symbol s_1[s_1895,39147
static const symbol s_2[s_2896,39214
static const symbol s_3[s_3897,39276
static const symbol s_4[s_4898,39323
static const symbol s_5[s_5899,39370
static const symbol s_6[s_6900,39432
static const symbol s_7[s_7901,39489
static const symbol s_8[s_8902,39546
static const symbol s_9[s_9903,39603
static const symbol s_10[s_10904,39660
static int r_mark_regions(906,39699
static int r_RV(988,42786
static int r_R2(993,42960
static int r_R1(998,43134
static int r_aditzak(1003,43308
static int r_izenak(1046,44751
static int r_adjetiboak(1117,47105
extern int basque_UTF_8_stem(1142,47971
extern struct SN_env * basque_UTF_8_create_env(1183,49076
extern void basque_UTF_8_close_env(1185,49165

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_dutch.c,2648
static const symbol s_0_1[s_0_133,754
static const symbol s_0_2[s_0_234,801
static const symbol s_0_3[s_0_335,848
static const symbol s_0_4[s_0_436,895
static const symbol s_0_5[s_0_537,942
static const symbol s_0_6[s_0_638,989
static const symbol s_0_7[s_0_739,1036
static const symbol s_0_8[s_0_840,1083
static const symbol s_0_9[s_0_941,1130
static const symbol s_0_10[s_0_1042,1177
static const struct among a_0[a_044,1226
static const symbol s_1_1[s_1_159,1606
static const symbol s_1_2[s_1_260,1646
static const struct among a_1[a_162,1687
static const symbol s_2_0[s_2_069,1817
static const symbol s_2_1[s_2_170,1862
static const symbol s_2_2[s_2_271,1907
static const struct among a_2[a_273,1953
static const symbol s_3_0[s_3_080,2092
static const symbol s_3_1[s_3_181,2142
static const symbol s_3_2[s_3_282,2187
static const symbol s_3_3[s_3_383,2232
static const symbol s_3_4[s_3_484,2292
static const struct among a_3[a_386,2333
static const symbol s_4_0[s_4_095,2532
static const symbol s_4_1[s_4_196,2582
static const symbol s_4_2[s_4_297,2627
static const symbol s_4_3[s_4_398,2677
static const symbol s_4_4[s_4_499,2732
static const symbol s_4_5[s_4_5100,2787
static const struct among a_4[a_4102,2838
static const symbol s_5_0[s_5_0112,3070
static const symbol s_5_1[s_5_1113,3115
static const symbol s_5_2[s_5_2114,3160
static const symbol s_5_3[s_5_3115,3205
static const struct among a_5[a_5117,3251
static const unsigned char g_v[g_v125,3423
static const unsigned char g_v_I[g_v_I127,3519
static const unsigned char g_v_j[g_v_j129,3626
static const symbol s_0[s_0131,3724
static const symbol s_1[s_1132,3761
static const symbol s_2[s_2133,3798
static const symbol s_3[s_3134,3835
static const symbol s_4[s_4135,3872
static const symbol s_5[s_5136,3909
static const symbol s_6[s_6137,3946
static const symbol s_7[s_7138,3983
static const symbol s_8[s_8139,4020
static const symbol s_9[s_9140,4057
static const symbol s_10[s_10141,4094
static const symbol s_11[s_11142,4142
static const symbol s_12[s_12143,4195
static const symbol s_13[s_13144,4248
static const symbol s_14[s_14145,4291
static int r_prelude(147,4335
static int r_mark_regions(252,8092
static int r_postlude(284,9203
static int r_R1(320,10349
static int r_R2(325,10523
static int r_undouble(330,10697
static int r_e_ending(348,11352
static int r_en_ending(371,12144
static int r_standard_suffix(394,12900
extern int dutch_UTF_8_stem(584,20675
extern struct SN_env * dutch_UTF_8_create_env(613,21523
extern void dutch_UTF_8_close_env(615,21611

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_italian.c,10233
static const symbol s_0_1[s_0_134,825
static const symbol s_0_2[s_0_235,870
static const symbol s_0_3[s_0_336,911
static const symbol s_0_4[s_0_437,952
static const symbol s_0_5[s_0_538,993
static const symbol s_0_6[s_0_639,1034
static const struct among a_0[a_041,1076
static const symbol s_1_1[s_1_152,1330
static const symbol s_1_2[s_1_253,1370
static const struct among a_1[a_155,1411
static const symbol s_2_0[s_2_062,1541
static const symbol s_2_1[s_2_163,1586
static const symbol s_2_2[s_2_264,1641
static const symbol s_2_3[s_2_365,1706
static const symbol s_2_4[s_2_466,1761
static const symbol s_2_5[s_2_567,1816
static const symbol s_2_6[s_2_668,1871
static const symbol s_2_7[s_2_769,1916
static const symbol s_2_8[s_2_870,1971
static const symbol s_2_9[s_2_971,2036
static const symbol s_2_10[s_2_1072,2091
static const symbol s_2_11[s_2_1173,2147
static const symbol s_2_12[s_2_1274,2203
static const symbol s_2_13[s_2_1375,2249
static const symbol s_2_14[s_2_1476,2305
static const symbol s_2_15[s_2_1577,2371
static const symbol s_2_16[s_2_1678,2427
static const symbol s_2_17[s_2_1779,2483
static const symbol s_2_18[s_2_1880,2539
static const symbol s_2_19[s_2_1981,2595
static const symbol s_2_20[s_2_2082,2641
static const symbol s_2_21[s_2_2183,2687
static const symbol s_2_22[s_2_2284,2743
static const symbol s_2_23[s_2_2385,2809
static const symbol s_2_24[s_2_2486,2865
static const symbol s_2_25[s_2_2587,2921
static const symbol s_2_26[s_2_2688,2977
static const symbol s_2_27[s_2_2789,3028
static const symbol s_2_28[s_2_2890,3074
static const symbol s_2_29[s_2_2991,3120
static const symbol s_2_30[s_2_3092,3166
static const symbol s_2_31[s_2_3193,3212
static const symbol s_2_32[s_2_3294,3258
static const symbol s_2_33[s_2_3395,3314
static const symbol s_2_34[s_2_3496,3380
static const symbol s_2_35[s_2_3597,3436
static const symbol s_2_36[s_2_3698,3492
static const struct among a_2[a_2100,3549
static const symbol s_3_0[s_3_0141,4828
static const symbol s_3_1[s_3_1142,4883
static const symbol s_3_2[s_3_2143,4938
static const symbol s_3_3[s_3_3144,4983
static const symbol s_3_4[s_3_4145,5028
static const struct among a_3[a_3147,5074
static const symbol s_4_0[s_4_0156,5274
static const symbol s_4_1[s_4_1157,5319
static const symbol s_4_2[s_4_2158,5374
static const symbol s_4_3[s_4_3159,5419
static const struct among a_4[a_4161,5465
static const symbol s_5_0[s_5_0169,5636
static const symbol s_5_1[s_5_1170,5681
static const symbol s_5_2[s_5_2171,5736
static const struct among a_5[a_5173,5782
static const symbol s_6_0[s_6_0180,5918
static const symbol s_6_1[s_6_1181,5968
static const symbol s_6_2[s_6_2182,6028
static const symbol s_6_3[s_6_3183,6078
static const symbol s_6_4[s_6_4184,6133
static const symbol s_6_5[s_6_5185,6183
static const symbol s_6_6[s_6_6186,6238
static const symbol s_6_7[s_6_7187,6293
static const symbol s_6_8[s_6_8188,6343
static const symbol s_6_9[s_6_9189,6408
static const symbol s_6_10[s_6_10190,6463
static const symbol s_6_11[s_6_11191,6524
static const symbol s_6_12[s_6_12192,6585
static const symbol s_6_13[s_6_13193,6646
static const symbol s_6_14[s_6_14194,6712
static const symbol s_6_15[s_6_15195,6778
static const symbol s_6_16[s_6_16196,6844
static const symbol s_6_17[s_6_17197,6905
static const symbol s_6_18[s_6_18198,6956
static const symbol s_6_19[s_6_19199,7012
static const symbol s_6_20[s_6_20200,7073
static const symbol s_6_21[s_6_21201,7139
static const symbol s_6_22[s_6_22202,7195
static const symbol s_6_23[s_6_23203,7246
static const symbol s_6_24[s_6_24204,7302
static const symbol s_6_25[s_6_25205,7358
static const symbol s_6_26[s_6_26206,7409
static const symbol s_6_27[s_6_27207,7475
static const symbol s_6_28[s_6_28208,7531
static const symbol s_6_29[s_6_29209,7592
static const symbol s_6_30[s_6_30210,7653
static const symbol s_6_31[s_6_31211,7709
static const symbol s_6_32[s_6_32212,7775
static const symbol s_6_33[s_6_33213,7841
static const symbol s_6_34[s_6_34214,7907
static const symbol s_6_35[s_6_35215,7968
static const symbol s_6_36[s_6_36216,8019
static const symbol s_6_37[s_6_37217,8075
static const symbol s_6_38[s_6_38218,8141
static const symbol s_6_39[s_6_39219,8207
static const symbol s_6_40[s_6_40220,8263
static const symbol s_6_41[s_6_41221,8314
static const symbol s_6_42[s_6_42222,8365
static const symbol s_6_43[s_6_43223,8421
static const symbol s_6_44[s_6_44224,8472
static const symbol s_6_45[s_6_45225,8538
static const symbol s_6_46[s_6_46226,8604
static const symbol s_6_47[s_6_47227,8655
static const symbol s_6_48[s_6_48228,8707
static const symbol s_6_49[s_6_49229,8764
static const symbol s_6_50[s_6_50230,8821
static const struct among a_6[a_6232,8879
static const symbol s_7_0[s_7_0287,10592
static const symbol s_7_1[s_7_1288,10647
static const symbol s_7_2[s_7_2289,10702
static const symbol s_7_3[s_7_3290,10752
static const symbol s_7_4[s_7_4291,10802
static const symbol s_7_5[s_7_5292,10852
static const symbol s_7_6[s_7_6293,10902
static const symbol s_7_7[s_7_7294,10952
static const symbol s_7_8[s_7_8295,11002
static const symbol s_7_9[s_7_9296,11067
static const symbol s_7_10[s_7_10297,11132
static const symbol s_7_11[s_7_11298,11188
static const symbol s_7_12[s_7_12299,11244
static const symbol s_7_13[s_7_13300,11295
static const symbol s_7_14[s_7_14301,11346
static const symbol s_7_15[s_7_15302,11397
static const symbol s_7_16[s_7_16303,11453
static const symbol s_7_17[s_7_17304,11504
static const symbol s_7_18[s_7_18305,11565
static const symbol s_7_19[s_7_19306,11626
static const symbol s_7_20[s_7_20307,11687
static const symbol s_7_21[s_7_21308,11738
static const symbol s_7_22[s_7_22309,11799
static const symbol s_7_23[s_7_23310,11860
static const symbol s_7_24[s_7_24311,11911
static const symbol s_7_25[s_7_25312,11977
static const symbol s_7_26[s_7_26313,12043
static const symbol s_7_27[s_7_27314,12094
static const symbol s_7_28[s_7_28315,12150
static const symbol s_7_29[s_7_29316,12206
static const symbol s_7_30[s_7_30317,12262
static const symbol s_7_31[s_7_31318,12318
static const symbol s_7_32[s_7_32319,12374
static const symbol s_7_33[s_7_33320,12430
static const symbol s_7_34[s_7_34321,12486
static const symbol s_7_35[s_7_35322,12537
static const symbol s_7_36[s_7_36323,12588
static const symbol s_7_37[s_7_37324,12654
static const symbol s_7_38[s_7_38325,12720
static const symbol s_7_39[s_7_39326,12771
static const symbol s_7_40[s_7_40327,12822
static const symbol s_7_41[s_7_41328,12873
static const symbol s_7_42[s_7_42329,12924
static const symbol s_7_43[s_7_43330,12980
static const symbol s_7_44[s_7_44331,13036
static const symbol s_7_45[s_7_45332,13092
static const symbol s_7_46[s_7_46333,13148
static const symbol s_7_47[s_7_47334,13204
static const symbol s_7_48[s_7_48335,13265
static const symbol s_7_49[s_7_49336,13326
static const symbol s_7_50[s_7_50337,13387
static const symbol s_7_51[s_7_51338,13448
static const symbol s_7_52[s_7_52339,13509
static const symbol s_7_53[s_7_53340,13575
static const symbol s_7_54[s_7_54341,13631
static const symbol s_7_55[s_7_55342,13687
static const symbol s_7_56[s_7_56343,13753
static const symbol s_7_57[s_7_57344,13819
static const symbol s_7_58[s_7_58345,13875
static const symbol s_7_59[s_7_59346,13926
static const symbol s_7_60[s_7_60347,13992
static const symbol s_7_61[s_7_61348,14053
static const symbol s_7_62[s_7_62349,14114
static const symbol s_7_63[s_7_63350,14175
static const symbol s_7_64[s_7_64351,14241
static const symbol s_7_65[s_7_65352,14307
static const symbol s_7_66[s_7_66353,14358
static const symbol s_7_67[s_7_67354,14424
static const symbol s_7_68[s_7_68355,14485
static const symbol s_7_69[s_7_69356,14546
static const symbol s_7_70[s_7_70357,14607
static const symbol s_7_71[s_7_71358,14683
static const symbol s_7_72[s_7_72359,14759
static const symbol s_7_73[s_7_73360,14825
static const symbol s_7_74[s_7_74361,14891
static const symbol s_7_75[s_7_75362,14957
static const symbol s_7_76[s_7_76363,15008
static const symbol s_7_77[s_7_77364,15059
static const symbol s_7_78[s_7_78365,15110
static const symbol s_7_79[s_7_79366,15161
static const symbol s_7_80[s_7_80367,15212
static const symbol s_7_81[s_7_81368,15263
static const symbol s_7_82[s_7_82369,15309
static const symbol s_7_83[s_7_83370,15355
static const symbol s_7_84[s_7_84371,15407
static const symbol s_7_85[s_7_85372,15459
static const symbol s_7_86[s_7_86373,15511
static const struct among a_7[a_7375,15564
static const unsigned char g_v[g_v466,18466
static const unsigned char g_AEIO[g_AEIO468,18573
static const unsigned char g_CG[g_CG470,18679
static const symbol s_0[s_0472,18724
static const symbol s_1[s_1473,18762
static const symbol s_2[s_2474,18800
static const symbol s_3[s_3475,18838
static const symbol s_4[s_4476,18876
static const symbol s_5[s_5477,18914
static const symbol s_6[s_6478,18956
static const symbol s_7[s_7479,18993
static const symbol s_8[s_8480,19030
static const symbol s_9[s_9481,19067
static const symbol s_10[s_10482,19104
static const symbol s_11[s_11483,19142
static const symbol s_12[s_12484,19185
static const symbol s_13[s_13485,19233
static const symbol s_14[s_14486,19271
static const symbol s_15[s_15487,19324
static const symbol s_16[s_16488,19367
static const symbol s_17[s_17489,19410
static int r_prelude(491,19454
static int r_mark_regions(586,22812
static int r_postlude(666,25783
static int r_RV(700,26839
static int r_R1(705,27013
static int r_R2(710,27187
static int r_attached_pronoun(715,27361
static int r_standard_suffix(742,28358
static int r_verb_suffix(908,35287
static int r_vowel_suffix(924,35813
extern int italian_ISO_8859_1_stem(969,37587
extern struct SN_env * italian_ISO_8859_1_create_env(1022,39286
extern void italian_ISO_8859_1_close_env(1024,39381

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_norwegian.c,2331
static const symbol s_0_0[s_0_028,574
static const symbol s_0_1[s_0_129,614
static const symbol s_0_2[s_0_230,654
static const symbol s_0_3[s_0_331,704
static const symbol s_0_4[s_0_432,759
static const symbol s_0_5[s_0_533,814
static const symbol s_0_6[s_0_634,864
static const symbol s_0_7[s_0_735,914
static const symbol s_0_8[s_0_836,979
static const symbol s_0_9[s_0_937,1034
static const symbol s_0_10[s_0_1038,1079
static const symbol s_0_11[s_0_1139,1140
static const symbol s_0_12[s_0_1240,1186
static const symbol s_0_13[s_0_1341,1232
static const symbol s_0_14[s_0_1442,1293
static const symbol s_0_15[s_0_1543,1334
static const symbol s_0_16[s_0_1644,1380
static const symbol s_0_17[s_0_1745,1426
static const symbol s_0_18[s_0_1846,1482
static const symbol s_0_19[s_0_1947,1543
static const symbol s_0_20[s_0_2048,1599
static const symbol s_0_21[s_0_2149,1670
static const symbol s_0_22[s_0_2250,1721
static const symbol s_0_23[s_0_2351,1787
static const symbol s_0_24[s_0_2452,1838
static const symbol s_0_25[s_0_2553,1889
static const symbol s_0_26[s_0_2654,1935
static const symbol s_0_27[s_0_2755,1986
static const symbol s_0_28[s_0_2856,2037
static const struct among a_0[a_058,2089
static const symbol s_1_0[s_1_091,3069
static const symbol s_1_1[s_1_192,3114
static const struct among a_1[a_194,3160
static const symbol s_2_0[s_2_0100,3266
static const symbol s_2_1[s_2_1101,3316
static const symbol s_2_2[s_2_2102,3371
static const symbol s_2_3[s_2_3103,3416
static const symbol s_2_4[s_2_4104,3466
static const symbol s_2_5[s_2_5105,3516
static const symbol s_2_6[s_2_6106,3571
static const symbol s_2_7[s_2_7107,3621
static const symbol s_2_8[s_2_8108,3671
static const symbol s_2_9[s_2_9109,3726
static const symbol s_2_10[s_2_10110,3781
static const struct among a_2[a_2112,3853
static const unsigned char g_v[g_v127,4240
static const unsigned char g_s_ending[g_s_ending129,4343
static const symbol s_0[s_0131,4408
static int r_mark_regions(133,4451
static int r_main_suffix(157,5361
static int r_consonant_pair(200,6962
static int r_other_suffix(225,7856
extern int norwegian_UTF_8_stem(242,8503
extern struct SN_env * norwegian_UTF_8_create_env(273,9488
extern void norwegian_UTF_8_close_env(275,9580

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_greek.c,51370
static const symbol s_0_1[s_0_158,1742
static const symbol s_0_2[s_0_259,1789
static const symbol s_0_3[s_0_360,1836
static const symbol s_0_4[s_0_461,1883
static const symbol s_0_5[s_0_562,1930
static const symbol s_0_6[s_0_663,1977
static const symbol s_0_7[s_0_764,2024
static const symbol s_0_8[s_0_865,2071
static const symbol s_0_9[s_0_966,2118
static const symbol s_0_10[s_0_1067,2165
static const symbol s_0_11[s_0_1168,2213
static const symbol s_0_12[s_0_1269,2261
static const symbol s_0_13[s_0_1370,2309
static const symbol s_0_14[s_0_1471,2357
static const symbol s_0_15[s_0_1572,2405
static const symbol s_0_16[s_0_1673,2453
static const symbol s_0_17[s_0_1774,2501
static const symbol s_0_18[s_0_1875,2549
static const symbol s_0_19[s_0_1976,2597
static const symbol s_0_20[s_0_2077,2645
static const symbol s_0_21[s_0_2178,2693
static const symbol s_0_22[s_0_2279,2741
static const symbol s_0_23[s_0_2380,2789
static const symbol s_0_24[s_0_2481,2837
static const symbol s_0_25[s_0_2582,2885
static const symbol s_0_26[s_0_2683,2933
static const symbol s_0_27[s_0_2784,2981
static const symbol s_0_28[s_0_2885,3029
static const symbol s_0_29[s_0_2986,3077
static const symbol s_0_30[s_0_3087,3125
static const symbol s_0_31[s_0_3188,3173
static const symbol s_0_32[s_0_3289,3221
static const symbol s_0_33[s_0_3390,3269
static const symbol s_0_34[s_0_3491,3317
static const symbol s_0_35[s_0_3592,3365
static const symbol s_0_36[s_0_3693,3413
static const symbol s_0_37[s_0_3794,3461
static const symbol s_0_38[s_0_3895,3509
static const symbol s_0_39[s_0_3996,3557
static const symbol s_0_40[s_0_4097,3605
static const symbol s_0_41[s_0_4198,3653
static const symbol s_0_42[s_0_4299,3701
static const symbol s_0_43[s_0_43100,3749
static const symbol s_0_44[s_0_44101,3797
static const symbol s_0_45[s_0_45102,3845
static const struct among a_0[a_0104,3894
static const symbol s_1_0[s_1_0154,5420
static const symbol s_1_1[s_1_1155,5552
static const symbol s_1_2[s_1_2156,5623
static const symbol s_1_3[s_1_3157,5719
static const symbol s_1_4[s_1_4158,5815
static const symbol s_1_5[s_1_5159,5911
static const symbol s_1_6[s_1_6160,6067
static const symbol s_1_7[s_1_7161,6163
static const symbol s_1_8[s_1_8162,6283
static const symbol s_1_9[s_1_9163,6403
static const symbol s_1_10[s_1_10164,6523
static const symbol s_1_11[s_1_11165,6668
static const symbol s_1_12[s_1_12166,6789
static const symbol s_1_13[s_1_13167,6898
static const symbol s_1_14[s_1_14168,7019
static const symbol s_1_15[s_1_15169,7128
static const symbol s_1_16[s_1_16170,7261
static const symbol s_1_17[s_1_17171,7382
static const symbol s_1_18[s_1_18172,7527
static const symbol s_1_19[s_1_19173,7611
static const symbol s_1_20[s_1_20174,7720
static const symbol s_1_21[s_1_21175,7829
static const symbol s_1_22[s_1_22176,7938
static const symbol s_1_23[s_1_23177,8071
static const symbol s_1_24[s_1_24178,8168
static const symbol s_1_25[s_1_25179,8277
static const symbol s_1_26[s_1_26180,8374
static const symbol s_1_27[s_1_27181,8495
static const symbol s_1_28[s_1_28182,8604
static const symbol s_1_29[s_1_29183,8713
static const symbol s_1_30[s_1_30184,8870
static const symbol s_1_31[s_1_31185,8967
static const symbol s_1_32[s_1_32186,9088
static const symbol s_1_33[s_1_33187,9209
static const symbol s_1_34[s_1_34188,9330
static const symbol s_1_35[s_1_35189,9475
static const symbol s_1_36[s_1_36190,9584
static const symbol s_1_37[s_1_37191,9705
static const symbol s_1_38[s_1_38192,9814
static const symbol s_1_39[s_1_39193,9947
static const struct among a_1[a_1195,10069
static const symbol s_2_0[s_2_0239,11466
static const symbol s_2_1[s_2_1240,11525
static const symbol s_2_2[s_2_2241,11633
static const symbol s_2_3[s_2_3242,11704
static const symbol s_2_4[s_2_4243,11812
static const symbol s_2_5[s_2_5244,11920
static const symbol s_2_6[s_2_6245,12003
static const symbol s_2_7[s_2_7246,12086
static const symbol s_2_8[s_2_8247,12169
static const struct among a_2[a_2249,12290
static const symbol s_3_0[s_3_0262,12616
static const symbol s_3_1[s_3_1263,12663
static const symbol s_3_2[s_3_2264,12734
static const symbol s_3_3[s_3_3265,12781
static const symbol s_3_4[s_3_4266,12840
static const symbol s_3_5[s_3_5267,12911
static const symbol s_3_6[s_3_6268,12982
static const symbol s_3_7[s_3_7269,13090
static const symbol s_3_8[s_3_8270,13186
static const symbol s_3_9[s_3_9271,13282
static const symbol s_3_10[s_3_10272,13353
static const symbol s_3_11[s_3_11273,13425
static const symbol s_3_12[s_3_12274,13546
static const symbol s_3_13[s_3_13275,13655
static const symbol s_3_14[s_3_14276,13764
static const symbol s_3_15[s_3_15277,13836
static const symbol s_3_16[s_3_16278,13884
static const symbol s_3_17[s_3_17279,13993
static const symbol s_3_18[s_3_18280,14077
static const symbol s_3_19[s_3_19281,14161
static const symbol s_3_20[s_3_20282,14209
static const symbol s_3_21[s_3_21283,14257
static const struct among a_3[a_3285,14342
static const symbol s_4_0[s_4_0311,15094
static const symbol s_4_1[s_4_1312,15177
static const symbol s_4_2[s_4_2313,15273
static const symbol s_4_3[s_4_3314,15344
static const symbol s_4_4[s_4_4315,15415
static const symbol s_4_5[s_4_5316,15511
static const symbol s_4_6[s_4_6317,15607
static const symbol s_4_7[s_4_7318,15678
static const symbol s_4_8[s_4_8319,15786
static const symbol s_4_9[s_4_9320,15882
static const symbol s_4_10[s_4_10321,15990
static const symbol s_4_11[s_4_11322,16087
static const symbol s_4_12[s_4_12323,16171
static const symbol s_4_13[s_4_13324,16268
static const struct among a_4[a_4326,16353
static const symbol s_5_0[s_5_0344,16854
static const symbol s_5_1[s_5_1345,16901
static const symbol s_5_2[s_5_2346,16948
static const symbol s_5_3[s_5_3347,17007
static const symbol s_5_4[s_5_4348,17066
static const symbol s_5_5[s_5_5349,17125
static const symbol s_5_6[s_5_6350,17184
static const symbol s_5_7[s_5_7351,17243
static const struct among a_5[a_5353,17303
static const symbol s_6_0[s_6_0365,17599
static const symbol s_6_1[s_6_1366,17707
static const symbol s_6_2[s_6_2367,17803
static const symbol s_6_3[s_6_3368,17923
static const symbol s_6_4[s_6_4369,18019
static const symbol s_6_5[s_6_5370,18139
static const symbol s_6_6[s_6_6371,18259
static const struct among a_6[a_6373,18368
static const symbol s_7_0[s_7_0384,18639
static const symbol s_7_1[s_7_1385,18747
static const symbol s_7_2[s_7_2386,18818
static const symbol s_7_3[s_7_3387,18926
static const symbol s_7_4[s_7_4388,19034
static const symbol s_7_5[s_7_5389,19117
static const symbol s_7_6[s_7_6390,19237
static const symbol s_7_7[s_7_7391,19345
static const symbol s_7_8[s_7_8392,19404
static const symbol s_7_9[s_7_9393,19475
static const symbol s_7_10[s_7_10394,19583
static const symbol s_7_11[s_7_11395,19655
static const symbol s_7_12[s_7_12396,19727
static const symbol s_7_13[s_7_13397,19836
static const symbol s_7_14[s_7_14398,19920
static const symbol s_7_15[s_7_15399,20029
static const symbol s_7_16[s_7_16400,20138
static const symbol s_7_17[s_7_17401,20222
static const symbol s_7_18[s_7_18402,20306
static const struct among a_7[a_7404,20428
static const symbol s_8_0[s_8_0427,21094
static const symbol s_8_1[s_8_1428,21141
static const symbol s_8_2[s_8_2429,21212
static const symbol s_8_3[s_8_3430,21344
static const symbol s_8_4[s_8_4431,21403
static const symbol s_8_5[s_8_5432,21547
static const symbol s_8_6[s_8_6433,21606
static const symbol s_8_7[s_8_7434,21677
static const symbol s_8_8[s_8_8435,21736
static const symbol s_8_9[s_8_9436,21783
static const symbol s_8_10[s_8_10437,21891
static const symbol s_8_11[s_8_11438,21963
static const symbol s_8_12[s_8_12439,22023
static const struct among a_8[a_8441,22096
static const symbol s_9_0[s_9_0458,22556
static const symbol s_9_1[s_9_1459,22639
static const symbol s_9_2[s_9_2460,22710
static const symbol s_9_3[s_9_3461,22781
static const symbol s_9_4[s_9_4462,22877
static const symbol s_9_5[s_9_5463,22973
static const symbol s_9_6[s_9_6464,23069
static const struct among a_9[a_9466,23153
static const symbol s_10_0[s_10_0477,23420
static const symbol s_10_1[s_10_1478,23529
static const symbol s_10_2[s_10_2479,23601
static const symbol s_10_3[s_10_3480,23710
static const symbol s_10_4[s_10_4481,23819
static const symbol s_10_5[s_10_5482,23903
static const symbol s_10_6[s_10_6483,24024
static const symbol s_10_7[s_10_7484,24133
static const symbol s_10_8[s_10_8485,24193
static const symbol s_10_9[s_10_9486,24265
static const symbol s_10_10[s_10_10487,24374
static const symbol s_10_11[s_10_11488,24447
static const symbol s_10_12[s_10_12489,24520
static const symbol s_10_13[s_10_13490,24630
static const symbol s_10_14[s_10_14491,24715
static const symbol s_10_15[s_10_15492,24825
static const symbol s_10_16[s_10_16493,24935
static const symbol s_10_17[s_10_17494,25020
static const symbol s_10_18[s_10_18495,25105
static const struct among a_10[a_10497,25228
static const symbol s_11_0[s_11_0520,25914
static const symbol s_11_1[s_11_1521,26011
static const symbol s_11_2[s_11_2522,26083
static const symbol s_11_3[s_11_3523,26180
static const symbol s_11_4[s_11_4524,26289
static const symbol s_11_5[s_11_5525,26398
static const symbol s_11_6[s_11_6526,26482
static const struct among a_11[a_11528,26580
static const symbol s_12_0[s_12_0539,26857
static const symbol s_12_1[s_12_1540,26917
static const symbol s_12_2[s_12_2541,26989
static const symbol s_12_3[s_12_3542,27061
static const symbol s_12_4[s_12_4543,27133
static const symbol s_12_5[s_12_5544,27242
static const symbol s_12_6[s_12_6545,27326
static const struct among a_12[a_12547,27448
static const symbol s_13_0[s_13_0558,27720
static const symbol s_13_1[s_13_1559,27768
static const symbol s_13_2[s_13_2560,27840
static const symbol s_13_3[s_13_3561,27900
static const symbol s_13_4[s_13_4562,27972
static const symbol s_13_5[s_13_5563,28044
static const symbol s_13_6[s_13_6564,28104
static const symbol s_13_7[s_13_7565,28176
static const symbol s_13_8[s_13_8566,28236
static const symbol s_13_9[s_13_9567,28308
static const symbol s_13_10[s_13_10568,28368
static const symbol s_13_11[s_13_11569,28441
static const symbol s_13_12[s_13_12570,28502
static const symbol s_13_13[s_13_13571,28575
static const symbol s_13_14[s_13_14572,28636
static const symbol s_13_15[s_13_15573,28709
static const symbol s_13_16[s_13_16574,28782
static const symbol s_13_17[s_13_17575,28843
static const symbol s_13_18[s_13_18576,28916
static const symbol s_13_19[s_13_19577,28977
static const symbol s_13_20[s_13_20578,29050
static const symbol s_13_21[s_13_21579,29123
static const symbol s_13_22[s_13_22580,29196
static const symbol s_13_23[s_13_23581,29257
static const symbol s_13_24[s_13_24582,29330
static const symbol s_13_25[s_13_25583,29403
static const symbol s_13_26[s_13_26584,29464
static const symbol s_13_27[s_13_27585,29537
static const symbol s_13_28[s_13_28586,29610
static const symbol s_13_29[s_13_29587,29683
static const symbol s_13_30[s_13_30588,29756
static const symbol s_13_31[s_13_31589,29805
static const symbol s_13_32[s_13_32590,29878
static const struct among a_13[a_13592,29952
static const symbol s_14_0[s_14_0629,31102
static const symbol s_14_1[s_14_1630,31211
static const symbol s_14_2[s_14_2631,31308
static const symbol s_14_3[s_14_3632,31405
static const symbol s_14_4[s_14_4633,31502
static const symbol s_14_5[s_14_5634,31599
static const symbol s_14_6[s_14_6635,31683
static const symbol s_14_7[s_14_7636,31767
static const symbol s_14_8[s_14_8637,31851
static const symbol s_14_9[s_14_9638,31948
static const symbol s_14_10[s_14_10639,32045
static const struct among a_14[a_14641,32131
static const symbol s_15_0[s_15_0656,32544
static const symbol s_15_1[s_15_1657,32604
static const symbol s_15_2[s_15_2658,32713
static const symbol s_15_3[s_15_3659,32834
static const symbol s_15_4[s_15_4660,32931
static const struct among a_15[a_15662,33041
static const symbol s_16_0[s_16_0671,33249
static const symbol s_16_1[s_16_1672,33333
static const struct among a_16[a_16674,33467
static const symbol s_17_0[s_17_0680,33574
static const symbol s_17_1[s_17_1681,33671
static const symbol s_17_2[s_17_2682,33792
static const symbol s_17_3[s_17_3683,33913
static const symbol s_17_4[s_17_4684,34046
static const symbol s_17_5[s_17_5685,34179
static const symbol s_17_6[s_17_6686,34288
static const symbol s_17_7[s_17_7687,34385
static const symbol s_17_8[s_17_8688,34506
static const symbol s_17_9[s_17_9689,34663
static const struct among a_17[a_17691,34797
static const symbol s_18_0[s_18_0705,35179
static const symbol s_18_1[s_18_1706,35288
static const symbol s_18_2[s_18_2707,35385
static const symbol s_18_3[s_18_3708,35482
static const symbol s_18_4[s_18_4709,35579
static const symbol s_18_5[s_18_5710,35676
static const struct among a_18[a_18712,35761
static const symbol s_19_0[s_19_0722,36005
static const symbol s_19_1[s_19_1723,36053
static const struct among a_19[a_19725,36102
static const symbol s_20_0[s_20_0731,36209
static const symbol s_20_1[s_20_1732,36318
static const symbol s_20_2[s_20_2733,36439
static const symbol s_20_3[s_20_3734,36536
static const struct among a_20[a_20736,36646
static const symbol s_21_0[s_21_0744,36823
static const symbol s_21_1[s_21_1745,36932
static const symbol s_21_2[s_21_2746,36980
static const symbol s_21_3[s_21_3747,37040
static const symbol s_21_4[s_21_4748,37124
static const symbol s_21_5[s_21_5749,37208
static const symbol s_21_6[s_21_6750,37280
static const symbol s_21_7[s_21_7751,37364
static const symbol s_21_8[s_21_8752,37436
static const symbol s_21_9[s_21_9753,37484
static const symbol s_21_10[s_21_10754,37593
static const symbol s_21_11[s_21_11755,37691
static const symbol s_21_12[s_21_12756,37752
static const symbol s_21_13[s_21_13757,37801
static const symbol s_21_14[s_21_14758,37862
static const symbol s_21_15[s_21_15759,37960
static const symbol s_21_16[s_21_16760,38009
static const symbol s_21_17[s_21_17761,38094
static const symbol s_21_18[s_21_18762,38179
static const symbol s_21_19[s_21_19763,38325
static const symbol s_21_20[s_21_20764,38386
static const symbol s_21_21[s_21_21765,38435
static const symbol s_21_22[s_21_22766,38496
static const symbol s_21_23[s_21_23767,38594
static const symbol s_21_24[s_21_24768,38667
static const symbol s_21_25[s_21_25769,38728
static const symbol s_21_26[s_21_26770,38801
static const symbol s_21_27[s_21_27771,38886
static const symbol s_21_28[s_21_28772,38959
static const symbol s_21_29[s_21_29773,39044
static const symbol s_21_30[s_21_30774,39129
static const symbol s_21_31[s_21_31775,39214
static const symbol s_21_32[s_21_32776,39299
static const struct among a_21[a_21778,39373
static const symbol s_22_0[s_22_0815,40526
static const symbol s_22_1[s_22_1816,40574
static const symbol s_22_2[s_22_2817,40671
static const symbol s_22_3[s_22_3818,40743
static const symbol s_22_4[s_22_4819,40815
static const symbol s_22_5[s_22_5820,40863
static const symbol s_22_6[s_22_6821,40947
static const symbol s_22_7[s_22_7822,40995
static const symbol s_22_8[s_22_8823,41055
static const symbol s_22_9[s_22_9824,41127
static const symbol s_22_10[s_22_10825,41187
static const symbol s_22_11[s_22_11826,41297
static const symbol s_22_12[s_22_12827,41407
static const symbol s_22_13[s_22_13828,41492
static const symbol s_22_14[s_22_14829,41614
static const struct among a_22[a_22831,41688
static const symbol s_23_0[s_23_0850,42234
static const symbol s_23_1[s_23_1851,42331
static const symbol s_23_2[s_23_2852,42428
static const symbol s_23_3[s_23_3853,42512
static const symbol s_23_4[s_23_4854,42596
static const symbol s_23_5[s_23_5855,42705
static const symbol s_23_6[s_23_6856,42777
static const symbol s_23_7[s_23_7857,42874
static const struct among a_23[a_23859,42972
static const symbol s_24_0[s_24_0871,43280
static const symbol s_24_1[s_24_1872,43340
static const symbol s_24_2[s_24_2873,43412
static const symbol s_24_3[s_24_3874,43496
static const struct among a_24[a_24876,43569
static const symbol s_25_0[s_25_0884,43742
static const symbol s_25_1[s_25_1885,43790
static const struct among a_25[a_25887,43888
static const symbol s_26_0[s_26_0893,43996
static const symbol s_26_1[s_26_1894,44080
static const symbol s_26_2[s_26_2895,44177
static const struct among a_26[a_26897,44262
static const symbol s_27_0[s_27_0904,44403
static const symbol s_27_1[s_27_1905,44451
static const symbol s_27_2[s_27_2906,44511
static const symbol s_27_3[s_27_3907,44559
static const symbol s_27_4[s_27_4908,44631
static const symbol s_27_5[s_27_5909,44728
static const symbol s_27_6[s_27_6910,44812
static const struct among a_27[a_27912,44885
static const symbol s_28_0[s_28_0923,45158
static const symbol s_28_1[s_28_1924,45255
static const symbol s_28_2[s_28_2925,45352
static const symbol s_28_3[s_28_3926,45436
static const struct among a_28[a_28928,45521
static const symbol s_29_0[s_29_0936,45696
static const symbol s_29_1[s_29_1937,45780
static const struct among a_29[a_29939,45865
static const symbol s_30_0[s_30_0945,45972
static const symbol s_30_1[s_30_1946,46069
static const symbol s_30_2[s_30_2947,46141
static const symbol s_30_3[s_30_3948,46238
static const symbol s_30_4[s_30_4949,46335
static const symbol s_30_5[s_30_5950,46432
static const symbol s_30_6[s_30_6951,46529
static const symbol s_30_7[s_30_7952,46601
static const symbol s_30_8[s_30_8953,46661
static const symbol s_30_9[s_30_9954,46733
static const struct among a_30[a_30956,46806
static const symbol s_31_0[s_31_0970,47193
static const symbol s_31_1[s_31_1971,47277
static const struct among a_31[a_31973,47362
static const symbol s_32_0[s_32_0979,47469
static const symbol s_32_1[s_32_1980,47566
static const symbol s_32_2[s_32_2981,47626
static const symbol s_32_3[s_32_3982,47698
static const symbol s_32_4[s_32_4983,47770
static const symbol s_32_5[s_32_5984,47830
static const symbol s_32_6[s_32_6985,47902
static const symbol s_32_7[s_32_7986,47962
static const struct among a_32[a_32988,48035
static const symbol s_33_0[s_33_01000,48341
static const symbol s_33_1[s_33_11001,48438
static const struct among a_33[a_331003,48536
static const symbol s_34_0[s_34_01009,48645
static const symbol s_34_1[s_34_11010,48705
static const symbol s_34_2[s_34_21011,48765
static const symbol s_34_3[s_34_31012,48813
static const symbol s_34_4[s_34_41013,48885
static const symbol s_34_5[s_34_51014,48969
static const symbol s_34_6[s_34_61015,49029
static const symbol s_34_7[s_34_71016,49101
static const symbol s_34_8[s_34_81017,49161
static const symbol s_34_9[s_34_91018,49270
static const symbol s_34_10[s_34_101019,49354
static const symbol s_34_11[s_34_111020,49415
static const symbol s_34_12[s_34_121021,49513
static const symbol s_34_13[s_34_131022,49586
static const symbol s_34_14[s_34_141023,49647
static const struct among a_34[a_341025,49733
static const symbol s_35_0[s_35_01044,50277
static const symbol s_35_1[s_35_11045,50349
static const struct among a_35[a_351047,50422
static const symbol s_36_0[s_36_01053,50529
static const symbol s_36_1[s_36_11054,50577
static const symbol s_36_2[s_36_21055,50649
static const symbol s_36_3[s_36_31056,50697
static const symbol s_36_4[s_36_41057,50757
static const symbol s_36_5[s_36_51058,50805
static const symbol s_36_6[s_36_61059,50877
static const symbol s_36_7[s_36_71060,50937
static const struct among a_36[a_361062,50986
static const symbol s_37_0[s_37_01074,51290
static const symbol s_37_1[s_37_11075,51362
static const symbol s_37_2[s_37_21076,51422
static const struct among a_37[a_371078,51495
static const symbol s_38_0[s_38_01085,51635
static const symbol s_38_1[s_38_11086,51719
static const symbol s_38_2[s_38_21087,51791
static const symbol s_38_3[s_38_31088,51875
static const struct among a_38[a_381090,51948
static const symbol s_39_0[s_39_01098,52121
static const symbol s_39_1[s_39_11099,52205
static const symbol s_39_2[s_39_21100,52277
static const symbol s_39_3[s_39_31101,52386
static const symbol s_39_4[s_39_41102,52470
static const symbol s_39_5[s_39_51103,52554
static const symbol s_39_6[s_39_61104,52626
static const symbol s_39_7[s_39_71105,52698
static const symbol s_39_8[s_39_81106,52782
static const symbol s_39_9[s_39_91107,52866
static const symbol s_39_10[s_39_101108,52987
static const symbol s_39_11[s_39_111109,53060
static const symbol s_39_12[s_39_121110,53170
static const symbol s_39_13[s_39_131111,53255
static const symbol s_39_14[s_39_141112,53316
static const symbol s_39_15[s_39_151113,53414
static const symbol s_39_16[s_39_161114,53512
static const symbol s_39_17[s_39_171115,53610
static const symbol s_39_18[s_39_181116,53683
static const symbol s_39_19[s_39_191117,53768
static const symbol s_39_20[s_39_201118,53878
static const symbol s_39_21[s_39_211119,53976
static const symbol s_39_22[s_39_221120,54037
static const symbol s_39_23[s_39_231121,54122
static const symbol s_39_24[s_39_241122,54195
static const symbol s_39_25[s_39_251123,54280
static const symbol s_39_26[s_39_261124,54341
static const symbol s_39_27[s_39_271125,54463
static const symbol s_39_28[s_39_281126,54585
static const symbol s_39_29[s_39_291127,54670
static const symbol s_39_30[s_39_301128,54755
static const symbol s_39_31[s_39_311129,54840
static const symbol s_39_32[s_39_321130,54925
static const symbol s_39_33[s_39_331131,55010
static const symbol s_39_34[s_39_341132,55120
static const symbol s_39_35[s_39_351133,55242
static const struct among a_39[a_391135,55341
static const symbol s_40_0[s_40_01175,56610
static const symbol s_40_1[s_40_11176,56719
static const symbol s_40_2[s_40_21177,56816
static const symbol s_40_3[s_40_31178,56913
static const symbol s_40_4[s_40_41179,57010
static const struct among a_40[a_401181,57132
static const symbol s_41_0[s_41_01190,57342
static const symbol s_41_1[s_41_11191,57426
static const symbol s_41_2[s_41_21192,57510
static const symbol s_41_3[s_41_31193,57607
static const symbol s_41_4[s_41_41194,57679
static const symbol s_41_5[s_41_51195,57727
static const symbol s_41_6[s_41_61196,57799
static const symbol s_41_7[s_41_71197,57883
static const symbol s_41_8[s_41_81198,57955
static const symbol s_41_9[s_41_91199,58027
static const symbol s_41_10[s_41_101200,58111
static const symbol s_41_11[s_41_111201,58196
static const struct among a_41[a_411203,58270
static const symbol s_42_0[s_42_01219,58710
static const symbol s_42_1[s_42_11220,58770
static const struct among a_42[a_421222,58831
static const symbol s_43_0[s_43_01228,58938
static const symbol s_43_1[s_43_11229,59047
static const symbol s_43_2[s_43_21230,59144
static const symbol s_43_3[s_43_31231,59265
static const symbol s_43_4[s_43_41232,59398
static const symbol s_43_5[s_43_51233,59507
static const symbol s_43_6[s_43_61234,59628
static const symbol s_43_7[s_43_71235,59725
static const symbol s_43_8[s_43_81236,59834
static const symbol s_43_9[s_43_91237,59931
static const symbol s_43_10[s_43_101238,60028
static const struct among a_43[a_431240,60151
static const symbol s_44_0[s_44_01255,60564
static const symbol s_44_1[s_44_11256,60612
static const symbol s_44_2[s_44_21257,60672
static const symbol s_44_3[s_44_31258,60793
static const symbol s_44_4[s_44_41259,60877
static const symbol s_44_5[s_44_51260,61022
static const symbol s_44_6[s_44_61261,61106
static const symbol s_44_7[s_44_71262,61178
static const symbol s_44_8[s_44_81263,61287
static const symbol s_44_9[s_44_91264,61396
static const symbol s_44_10[s_44_101265,61468
static const symbol s_44_11[s_44_111266,61529
static const symbol s_44_12[s_44_121267,61627
static const symbol s_44_13[s_44_131268,61700
static const symbol s_44_14[s_44_141269,61810
static const symbol s_44_15[s_44_151270,61920
static const symbol s_44_16[s_44_161271,61969
static const symbol s_44_17[s_44_171272,62103
static const symbol s_44_18[s_44_181273,62176
static const symbol s_44_19[s_44_191274,62249
static const symbol s_44_20[s_44_201275,62347
static const symbol s_44_21[s_44_211276,62432
static const symbol s_44_22[s_44_221277,62517
static const symbol s_44_23[s_44_231278,62602
static const symbol s_44_24[s_44_241279,62724
static const symbol s_44_25[s_44_251280,62797
static const symbol s_44_26[s_44_261281,62907
static const symbol s_44_27[s_44_271282,63005
static const symbol s_44_28[s_44_281283,63090
static const symbol s_44_29[s_44_291284,63188
static const symbol s_44_30[s_44_301285,63237
static const symbol s_44_31[s_44_311286,63359
static const symbol s_44_32[s_44_321287,63481
static const symbol s_44_33[s_44_331288,63554
static const symbol s_44_34[s_44_341289,63639
static const symbol s_44_35[s_44_351290,63724
static const symbol s_44_36[s_44_361291,63858
static const symbol s_44_37[s_44_371292,63956
static const symbol s_44_38[s_44_381293,64066
static const symbol s_44_39[s_44_391294,64115
static const symbol s_44_40[s_44_401295,64237
static const symbol s_44_41[s_44_411296,64322
static const symbol s_44_42[s_44_421297,64432
static const symbol s_44_43[s_44_431298,64602
static const symbol s_44_44[s_44_441299,64772
static const symbol s_44_45[s_44_451300,64942
static const symbol s_44_46[s_44_461301,65015
static const symbol s_44_47[s_44_471302,65088
static const symbol s_44_48[s_44_481303,65173
static const symbol s_44_49[s_44_491304,65295
static const symbol s_44_50[s_44_501305,65368
static const symbol s_44_51[s_44_511306,65453
static const symbol s_44_52[s_44_521307,65587
static const symbol s_44_53[s_44_531308,65636
static const symbol s_44_54[s_44_541309,65734
static const symbol s_44_55[s_44_551310,65832
static const symbol s_44_56[s_44_561311,65893
static const symbol s_44_57[s_44_571312,65978
static const symbol s_44_58[s_44_581313,66063
static const symbol s_44_59[s_44_591314,66161
static const symbol s_44_60[s_44_601315,66271
static const symbol s_44_61[s_44_611316,66369
static const symbol s_44_62[s_44_621317,66454
static const symbol s_44_63[s_44_631318,66539
static const symbol s_44_64[s_44_641319,66612
static const symbol s_44_65[s_44_651320,66734
static const symbol s_44_66[s_44_661321,66783
static const symbol s_44_67[s_44_671322,66893
static const symbol s_44_68[s_44_681323,66966
static const symbol s_44_69[s_44_691324,67051
static const symbol s_44_70[s_44_701325,67136
static const symbol s_44_71[s_44_711326,67246
static const symbol s_44_72[s_44_721327,67319
static const symbol s_44_73[s_44_731328,67417
static const symbol s_44_74[s_44_741329,67478
static const symbol s_44_75[s_44_751330,67563
static const symbol s_44_76[s_44_761331,67661
static const symbol s_44_77[s_44_771332,67722
static const symbol s_44_78[s_44_781333,67807
static const symbol s_44_79[s_44_791334,67917
static const symbol s_44_80[s_44_801335,68015
static const symbol s_44_81[s_44_811336,68088
static const symbol s_44_82[s_44_821337,68161
static const symbol s_44_83[s_44_831338,68283
static const symbol s_44_84[s_44_841339,68405
static const symbol s_44_85[s_44_851340,68515
static const symbol s_44_86[s_44_861341,68625
static const symbol s_44_87[s_44_871342,68698
static const symbol s_44_88[s_44_881343,68808
static const symbol s_44_89[s_44_891344,68857
static const symbol s_44_90[s_44_901345,68979
static const symbol s_44_91[s_44_911346,69077
static const symbol s_44_92[s_44_921347,69211
static const symbol s_44_93[s_44_931348,69345
static const symbol s_44_94[s_44_941349,69394
static const struct among a_44[a_441351,69529
static const symbol s_45_0[s_45_01450,72831
static const struct among a_45[a_451452,72929
static const symbol s_46_0[s_46_01457,73004
static const symbol s_46_1[s_46_11458,73076
static const symbol s_46_2[s_46_21459,73148
static const symbol s_46_3[s_46_31460,73220
static const symbol s_46_4[s_46_41461,73292
static const symbol s_46_5[s_46_51462,73352
static const symbol s_46_6[s_46_61463,73424
static const symbol s_46_7[s_46_71464,73496
static const symbol s_46_8[s_46_81465,73568
static const symbol s_46_9[s_46_91466,73628
static const symbol s_46_10[s_46_101467,73712
static const symbol s_46_11[s_46_111468,73785
static const symbol s_46_12[s_46_121469,73846
static const symbol s_46_13[s_46_131470,73944
static const symbol s_46_14[s_46_141471,74005
static const symbol s_46_15[s_46_151472,74078
static const symbol s_46_16[s_46_161473,74151
static const symbol s_46_17[s_46_171474,74224
static const symbol s_46_18[s_46_181475,74309
static const symbol s_46_19[s_46_191476,74382
static const symbol s_46_20[s_46_201477,74455
static const symbol s_46_21[s_46_211478,74528
static const symbol s_46_22[s_46_221479,74613
static const symbol s_46_23[s_46_231480,74686
static const symbol s_46_24[s_46_241481,74759
static const symbol s_46_25[s_46_251482,74832
static const symbol s_46_26[s_46_261483,74917
static const symbol s_46_27[s_46_271484,74990
static const symbol s_46_28[s_46_281485,75063
static const symbol s_46_29[s_46_291486,75136
static const symbol s_46_30[s_46_301487,75209
static const struct among a_46[a_461489,75283
static const symbol s_47_0[s_47_01524,76370
static const symbol s_47_1[s_47_11525,76454
static const symbol s_47_2[s_47_21526,76526
static const symbol s_47_3[s_47_31527,76610
static const symbol s_47_4[s_47_41528,76682
static const symbol s_47_5[s_47_51529,76766
static const symbol s_47_6[s_47_61530,76850
static const symbol s_47_7[s_47_71531,76922
static const symbol s_47_8[s_47_81532,77006
static const symbol s_47_9[s_47_91533,77054
static const symbol s_47_10[s_47_101534,77138
static const symbol s_47_11[s_47_111535,77211
static const symbol s_47_12[s_47_121536,77284
static const symbol s_47_13[s_47_131537,77333
static const symbol s_47_14[s_47_141538,77394
static const symbol s_47_15[s_47_151539,77443
static const symbol s_47_16[s_47_161540,77504
static const symbol s_47_17[s_47_171541,77565
static const symbol s_47_18[s_47_181542,77638
static const symbol s_47_19[s_47_191543,77711
static const symbol s_47_20[s_47_201544,77833
static const symbol s_47_21[s_47_211545,77918
static const symbol s_47_22[s_47_221546,77979
static const symbol s_47_23[s_47_231547,78040
static const symbol s_47_24[s_47_241548,78113
static const struct among a_47[a_471550,78212
static const symbol s_48_0[s_48_01579,79096
static const symbol s_48_1[s_48_11580,79193
static const struct among a_48[a_481582,79291
static const symbol s_49_0[s_49_01588,79400
static const symbol s_49_1[s_49_11589,79509
static const struct among a_49[a_491591,79631
static const symbol s_50_0[s_50_01597,79739
static const symbol s_50_1[s_50_11598,79787
static const symbol s_50_2[s_50_21599,79847
static const symbol s_50_3[s_50_31600,79956
static const symbol s_50_4[s_50_41601,80040
static const symbol s_50_5[s_50_51602,80137
static const struct among a_50[a_501604,80259
static const symbol s_51_0[s_51_01614,80497
static const symbol s_51_1[s_51_11615,80557
static const symbol s_51_2[s_51_21616,80629
static const symbol s_51_3[s_51_31617,80677
static const symbol s_51_4[s_51_41618,80737
static const symbol s_51_5[s_51_51619,80858
static const symbol s_51_6[s_51_61620,80955
static const symbol s_51_7[s_51_71621,81003
static const symbol s_51_8[s_51_81622,81051
static const struct among a_51[a_511624,81124
static const symbol s_52_0[s_52_01637,81463
static const symbol s_52_1[s_52_11638,81572
static const symbol s_52_2[s_52_21639,81669
static const struct among a_52[a_521641,81767
static const symbol s_53_0[s_53_01648,81910
static const symbol s_53_1[s_53_11649,81970
static const symbol s_53_2[s_53_21650,82054
static const symbol s_53_3[s_53_31651,82126
static const symbol s_53_4[s_53_41652,82186
static const symbol s_53_5[s_53_51653,82283
static const struct among a_53[a_531655,82368
static const symbol s_54_0[s_54_01665,82608
static const symbol s_54_1[s_54_11666,82656
static const symbol s_54_2[s_54_21667,82753
static const symbol s_54_3[s_54_31668,82898
static const symbol s_54_4[s_54_41669,82982
static const struct among a_54[a_541671,83067
static const symbol s_55_0[s_55_01680,83271
static const symbol s_55_1[s_55_11681,83355
static const symbol s_55_2[s_55_21682,83427
static const struct among a_55[a_551684,83500
static const symbol s_56_0[s_56_01691,83640
static const symbol s_56_1[s_56_11692,83724
static const symbol s_56_2[s_56_21693,83821
static const symbol s_56_3[s_56_31694,83905
static const symbol s_56_4[s_56_41695,84002
static const symbol s_56_5[s_56_51696,84111
static const symbol s_56_6[s_56_61697,84183
static const symbol s_56_7[s_56_71698,84255
static const symbol s_56_8[s_56_81699,84327
static const symbol s_56_9[s_56_91700,84411
static const symbol s_56_10[s_56_101701,84520
static const symbol s_56_11[s_56_111702,84605
static const struct among a_56[a_561704,84667
static const symbol s_57_0[s_57_01720,85111
static const symbol s_57_1[s_57_11721,85208
static const symbol s_57_2[s_57_21722,85256
static const symbol s_57_3[s_57_31723,85353
static const symbol s_57_4[s_57_41724,85486
static const symbol s_57_5[s_57_51725,85558
static const symbol s_57_6[s_57_61726,85679
static const symbol s_57_7[s_57_71727,85812
static const symbol s_57_8[s_57_81728,85884
static const symbol s_57_9[s_57_91729,85956
static const symbol s_57_10[s_57_101730,86028
static const symbol s_57_11[s_57_111731,86101
static const symbol s_57_12[s_57_121732,86211
static const symbol s_57_13[s_57_131733,86272
static const symbol s_57_14[s_57_141734,86345
static const symbol s_57_15[s_57_151735,86443
static const symbol s_57_16[s_57_161736,86553
static const symbol s_57_17[s_57_171737,86626
static const symbol s_57_18[s_57_181738,86736
static const symbol s_57_19[s_57_191739,86809
static const symbol s_57_20[s_57_201740,86894
static const symbol s_57_21[s_57_211741,86943
static const symbol s_57_22[s_57_221742,86992
static const symbol s_57_23[s_57_231743,87053
static const symbol s_57_24[s_57_241744,87138
static const struct among a_57[a_571746,87261
static const symbol s_58_0[s_58_01775,88151
static const symbol s_58_1[s_58_11776,88248
static const symbol s_58_2[s_58_21777,88332
static const struct among a_58[a_581779,88417
static const symbol s_59_0[s_59_01786,88558
static const symbol s_59_1[s_59_11787,88630
static const struct among a_59[a_591789,88740
static const symbol s_60_0[s_60_01795,88850
static const symbol s_60_1[s_60_11796,88910
static const symbol s_60_2[s_60_21797,88970
static const symbol s_60_3[s_60_31798,89030
static const symbol s_60_4[s_60_41799,89114
static const symbol s_60_5[s_60_51800,89174
static const symbol s_60_6[s_60_61801,89234
static const symbol s_60_7[s_60_71802,89306
static const symbol s_60_8[s_60_81803,89378
static const symbol s_60_9[s_60_91804,89438
static const struct among a_60[a_601806,89523
static const symbol s_61_0[s_61_01820,89895
static const symbol s_61_1[s_61_11821,89943
static const symbol s_61_2[s_61_21822,90015
static const symbol s_61_3[s_61_31823,90099
static const symbol s_61_4[s_61_41824,90196
static const symbol s_61_5[s_61_51825,90280
static const symbol s_61_6[s_61_61826,90364
static const symbol s_61_7[s_61_71827,90497
static const symbol s_61_8[s_61_81828,90618
static const symbol s_61_9[s_61_91829,90727
static const symbol s_61_10[s_61_101830,90811
static const symbol s_61_11[s_61_111831,90945
static const symbol s_61_12[s_61_121832,91030
static const symbol s_61_13[s_61_131833,91079
static const symbol s_61_14[s_61_141834,91140
static const symbol s_61_15[s_61_151835,91213
static const symbol s_61_16[s_61_161836,91311
static const symbol s_61_17[s_61_171837,91384
static const symbol s_61_18[s_61_181838,91469
static const symbol s_61_19[s_61_191839,91554
static const symbol s_61_20[s_61_201840,91603
static const symbol s_61_21[s_61_211841,91701
static const symbol s_61_22[s_61_221842,91799
static const symbol s_61_23[s_61_231843,91897
static const symbol s_61_24[s_61_241844,92007
static const symbol s_61_25[s_61_251845,92092
static const symbol s_61_26[s_61_261846,92177
static const symbol s_61_27[s_61_271847,92262
static const symbol s_61_28[s_61_281848,92347
static const symbol s_61_29[s_61_291849,92432
static const symbol s_61_30[s_61_301850,92517
static const symbol s_61_31[s_61_311851,92615
static const symbol s_61_32[s_61_321852,92688
static const symbol s_61_33[s_61_331853,92786
static const symbol s_61_34[s_61_341854,92847
static const symbol s_61_35[s_61_351855,92920
static const symbol s_61_36[s_61_361856,93005
static const symbol s_61_37[s_61_371857,93090
static const symbol s_61_38[s_61_381858,93200
static const symbol s_61_39[s_61_391859,93249
static const symbol s_61_40[s_61_401860,93334
static const symbol s_61_41[s_61_411861,93383
static const symbol s_61_42[s_61_421862,93481
static const symbol s_61_43[s_61_431863,93542
static const struct among a_61[a_611865,93653
static const symbol s_62_0[s_62_01913,95185
static const symbol s_62_1[s_62_11914,95269
static const symbol s_62_2[s_62_21915,95341
static const struct among a_62[a_621917,95414
static const symbol s_63_0[s_63_01924,95554
static const symbol s_63_1[s_63_11925,95638
static const symbol s_63_2[s_63_21926,95710
static const struct among a_63[a_631928,95783
static const symbol s_64_0[s_64_01935,95923
static const symbol s_64_1[s_64_11936,95971
static const symbol s_64_2[s_64_21937,96068
static const symbol s_64_3[s_64_31938,96189
static const symbol s_64_4[s_64_41939,96298
static const symbol s_64_5[s_64_51940,96419
static const struct among a_64[a_641942,96529
static const symbol s_65_0[s_65_01952,96768
static const struct among a_65[a_651954,96853
static const symbol s_66_0[s_66_01959,96927
static const symbol s_66_1[s_66_11960,96987
static const symbol s_66_2[s_66_21961,97084
static const symbol s_66_3[s_66_31962,97168
static const symbol s_66_4[s_66_41963,97240
static const symbol s_66_5[s_66_51964,97361
static const symbol s_66_6[s_66_61965,97470
static const symbol s_66_7[s_66_71966,97530
static const symbol s_66_8[s_66_81967,97602
static const symbol s_66_9[s_66_91968,97674
static const struct among a_66[a_661970,97772
static const symbol s_67_0[s_67_01984,98143
static const symbol s_67_1[s_67_11985,98227
static const symbol s_67_2[s_67_21986,98336
static const struct among a_67[a_671988,98446
static const symbol s_68_0[s_68_01995,98586
static const symbol s_68_1[s_68_11996,98634
static const symbol s_68_2[s_68_21997,98803
static const symbol s_68_3[s_68_31998,98948
static const symbol s_68_4[s_68_41999,99020
static const symbol s_68_5[s_68_52000,99068
static const struct among a_68[a_682002,99153
static const symbol s_69_0[s_69_02012,99393
static const symbol s_69_1[s_69_12013,99477
static const symbol s_69_2[s_69_22014,99586
static const struct among a_69[a_692016,99696
static const symbol s_70_0[s_70_02023,99836
static const symbol s_70_1[s_70_12024,99933
static const symbol s_70_2[s_70_22025,100066
static const symbol s_70_3[s_70_32026,100199
static const symbol s_70_4[s_70_42027,100247
static const symbol s_70_5[s_70_52028,100295
static const symbol s_70_6[s_70_62029,100355
static const struct among a_70[a_702031,100465
static const symbol s_71_0[s_71_02042,100740
static const symbol s_71_1[s_71_12043,100837
static const symbol s_71_2[s_71_22044,100921
static const struct among a_71[a_712046,101019
static const symbol s_72_0[s_72_02053,101161
static const symbol s_72_1[s_72_12054,101221
static const symbol s_72_2[s_72_22055,101293
static const symbol s_72_3[s_72_32056,101353
static const symbol s_72_4[s_72_42057,101413
static const symbol s_72_5[s_72_52058,101497
static const symbol s_72_6[s_72_62059,101581
static const symbol s_72_7[s_72_72060,101641
static const symbol s_72_8[s_72_82061,101713
static const symbol s_72_9[s_72_92062,101810
static const symbol s_72_10[s_72_102063,101870
static const symbol s_72_11[s_72_112064,101919
static const symbol s_72_12[s_72_122065,101980
static const symbol s_72_13[s_72_132066,102029
static const symbol s_72_14[s_72_142067,102102
static const symbol s_72_15[s_72_152068,102163
static const symbol s_72_16[s_72_162069,102236
static const symbol s_72_17[s_72_172070,102285
static const symbol s_72_18[s_72_182071,102383
static const symbol s_72_19[s_72_192072,102493
static const symbol s_72_20[s_72_202073,102615
static const symbol s_72_21[s_72_212074,102725
static const symbol s_72_22[s_72_222075,102847
static const symbol s_72_23[s_72_232076,102896
static const symbol s_72_24[s_72_242077,103018
static const symbol s_72_25[s_72_252078,103128
static const symbol s_72_26[s_72_262079,103250
static const symbol s_72_27[s_72_272080,103372
static const symbol s_72_28[s_72_282081,103506
static const symbol s_72_29[s_72_292082,103628
static const symbol s_72_30[s_72_302083,103738
static const symbol s_72_31[s_72_312084,103836
static const symbol s_72_32[s_72_322085,103934
static const symbol s_72_33[s_72_332086,104032
static const symbol s_72_34[s_72_342087,104154
static const symbol s_72_35[s_72_352088,104239
static const symbol s_72_36[s_72_362089,104349
static const symbol s_72_37[s_72_372090,104398
static const symbol s_72_38[s_72_382091,104447
static const symbol s_72_39[s_72_392092,104532
static const symbol s_72_40[s_72_402093,104617
static const symbol s_72_41[s_72_412094,104715
static const symbol s_72_42[s_72_422095,104800
static const symbol s_72_43[s_72_432096,104885
static const symbol s_72_44[s_72_442097,104983
static const symbol s_72_45[s_72_452098,105093
static const symbol s_72_46[s_72_462099,105215
static const symbol s_72_47[s_72_472100,105313
static const symbol s_72_48[s_72_482101,105411
static const symbol s_72_49[s_72_492102,105496
static const symbol s_72_50[s_72_502103,105594
static const symbol s_72_51[s_72_512104,105679
static const symbol s_72_52[s_72_522105,105740
static const symbol s_72_53[s_72_532106,105825
static const symbol s_72_54[s_72_542107,105898
static const symbol s_72_55[s_72_552108,105983
static const symbol s_72_56[s_72_562109,106044
static const symbol s_72_57[s_72_572110,106117
static const symbol s_72_58[s_72_582111,106215
static const symbol s_72_59[s_72_592112,106313
static const symbol s_72_60[s_72_602113,106423
static const symbol s_72_61[s_72_612114,106521
static const symbol s_72_62[s_72_622115,106619
static const symbol s_72_63[s_72_632116,106729
static const symbol s_72_64[s_72_642117,106790
static const symbol s_72_65[s_72_652118,106875
static const symbol s_72_66[s_72_662119,106936
static const symbol s_72_67[s_72_672120,107034
static const symbol s_72_68[s_72_682121,107168
static const symbol s_72_69[s_72_692122,107314
static const symbol s_72_70[s_72_702123,107399
static const symbol s_72_71[s_72_712124,107521
static const symbol s_72_72[s_72_722125,107655
static const symbol s_72_73[s_72_732126,107777
static const symbol s_72_74[s_72_742127,107911
static const symbol s_72_75[s_72_752128,108021
static const symbol s_72_76[s_72_762129,108143
static const symbol s_72_77[s_72_772130,108241
static const symbol s_72_78[s_72_782131,108351
static const symbol s_72_79[s_72_792132,108436
static const symbol s_72_80[s_72_802133,108534
static const symbol s_72_81[s_72_812134,108619
static const symbol s_72_82[s_72_822135,108704
static const symbol s_72_83[s_72_832136,108814
static const struct among a_72[a_722138,108864
static const symbol s_73_0[s_73_02226,111792
static const symbol s_73_1[s_73_12227,111889
static const symbol s_73_2[s_73_22228,111973
static const symbol s_73_3[s_73_32229,112057
static const symbol s_73_4[s_73_42230,112141
static const symbol s_73_5[s_73_52231,112238
static const symbol s_73_6[s_73_62232,112322
static const symbol s_73_7[s_73_72233,112406
static const struct among a_73[a_732235,112491
static const unsigned char g_v[g_v2247,112798
static const unsigned char g_v2[g_v22249,112853
static const symbol s_0[s_02251,112908
static const symbol s_1[s_12252,112952
static const symbol s_2[s_22253,112996
static const symbol s_3[s_32254,113040
static const symbol s_4[s_42255,113084
static const symbol s_5[s_52256,113128
static const symbol s_6[s_62257,113172
static const symbol s_7[s_72258,113216
static const symbol s_8[s_82259,113260
static const symbol s_9[s_92260,113304
static const symbol s_10[s_102261,113348
static const symbol s_11[s_112262,113393
static const symbol s_12[s_122263,113438
static const symbol s_13[s_132264,113483
static const symbol s_14[s_142265,113528
static const symbol s_15[s_152266,113573
static const symbol s_16[s_162267,113618
static const symbol s_17[s_172268,113663
static const symbol s_18[s_182269,113708
static const symbol s_19[s_192270,113753
static const symbol s_20[s_202271,113798
static const symbol s_21[s_212272,113843
static const symbol s_22[s_222273,113888
static const symbol s_23[s_232274,113933
static const symbol s_24[s_242275,113978
static const symbol s_25[s_252276,114035
static const symbol s_26[s_262277,114104
static const symbol s_27[s_272278,114173
static const symbol s_28[s_282279,114230
static const symbol s_29[s_292280,114311
static const symbol s_30[s_302281,114380
static const symbol s_31[s_312282,114449
static const symbol s_32[s_322283,114518
static const symbol s_33[s_332284,114575
static const symbol s_34[s_342285,114680
static const symbol s_35[s_352286,114773
static const symbol s_36[s_362287,114818
static const symbol s_37[s_372288,114875
static const symbol s_38[s_382289,114932
static const symbol s_39[s_392290,115001
static const symbol s_40[s_402291,115058
static const symbol s_41[s_412292,115103
static const symbol s_42[s_422293,115160
static const symbol s_43[s_432294,115205
static const symbol s_44[s_442295,115250
static const symbol s_45[s_452296,115319
static const symbol s_46[s_462297,115388
static const symbol s_47[s_472298,115433
static const symbol s_48[s_482299,115538
static const symbol s_49[s_492300,115619
static const symbol s_50[s_502301,115712
static const symbol s_51[s_512302,115781
static const symbol s_52[s_522303,115886
static const symbol s_53[s_532304,115979
static const symbol s_54[s_542305,116048
static const symbol s_55[s_552306,116177
static const symbol s_56[s_562307,116282
static const symbol s_57[s_572308,116375
static const symbol s_58[s_582309,116456
static const symbol s_59[s_592310,116513
static const symbol s_60[s_602311,116582
static const symbol s_61[s_612312,116651
static const symbol s_62[s_622313,116720
static const symbol s_63[s_632314,116777
static const symbol s_64[s_642315,116834
static const symbol s_65[s_652316,116903
static const symbol s_66[s_662317,116960
static const symbol s_67[s_672318,117017
static const symbol s_68[s_682319,117086
static const symbol s_69[s_692320,117131
static const symbol s_70[s_702321,117176
static const symbol s_71[s_712322,117233
static const symbol s_72[s_722323,117290
static const symbol s_73[s_732324,117383
static const symbol s_74[s_742325,117464
static const symbol s_75[s_752326,117533
static const symbol s_76[s_762327,117590
static const symbol s_77[s_772328,117671
static const symbol s_78[s_782329,117740
static const symbol s_79[s_792330,117797
static const symbol s_80[s_802331,117854
static const symbol s_81[s_812332,117923
static const symbol s_82[s_822333,117980
static const symbol s_83[s_832334,118037
static const symbol s_84[s_842335,118094
static const symbol s_85[s_852336,118163
static const symbol s_86[s_862337,118232
static const symbol s_87[s_872338,118301
static const symbol s_88[s_882339,118370
static const symbol s_89[s_892340,118427
static const symbol s_90[s_902341,118520
static const symbol s_91[s_912342,118613
static const symbol s_92[s_922343,118694
static const symbol s_93[s_932344,118775
static const symbol s_94[s_942345,118856
static const symbol s_95[s_952346,118913
static const symbol s_96[s_962347,118970
static const symbol s_97[s_972348,119039
static const symbol s_98[s_982349,119108
static const symbol s_99[s_992350,119189
static const symbol s_100[s_1002351,119246
static const symbol s_101[s_1012352,119304
static const symbol s_102[s_1022353,119362
static const symbol s_103[s_1032354,119420
static const symbol s_104[s_1042355,119490
static const symbol s_105[s_1052356,119560
static const symbol s_106[s_1062357,119630
static int r_has_min_length(2359,119689
static int r_tolower(2364,119880
static int r_step1(2509,124957
static int r_steps1(2576,127099
static int r_steps2(2608,128376
static int r_steps3(2626,129042
static int r_steps4(2666,130619
static int r_steps5(2685,131404
static int r_steps6(2717,132657
static int r_steps7(2811,136187
static int r_steps8(2831,137033
static int r_steps9(2871,138514
static int r_steps10(2903,139820
static int r_step2a(2921,140489
static int r_step2b(2947,141374
static int r_step2c(2965,142119
static int r_step2d(2982,142776
static int r_step3(3001,143533
static int r_step4(3018,144154
static int r_step5a(3048,145236
static int r_step5b(3087,146727
static int r_step5c(3137,148717
static int r_step5d(3188,150607
static int r_step5e(3219,151750
static int r_step5f(3238,152474
static int r_step5g(3275,153972
static int r_step5h(3317,155550
static int r_step5i(3347,156648
static int r_step5j(3399,158636
static int r_step5k(3418,159367
static int r_step5l(3437,160099
static int r_step5m(3456,160830
static int r_step6(3475,161561
static int r_step7(3496,162320
extern int greek_UTF_8_stem(3507,162726
extern struct SN_env * greek_UTF_8_create_env(3716,169743
extern void greek_UTF_8_close_env(3718,169831

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_catalan.c,26436
static const symbol s_0_1[s_0_132,751
static const symbol s_0_2[s_0_233,792
static const symbol s_0_3[s_0_334,833
static const symbol s_0_4[s_0_435,874
static const symbol s_0_5[s_0_536,915
static const symbol s_0_6[s_0_637,956
static const symbol s_0_7[s_0_738,997
static const symbol s_0_8[s_0_839,1038
static const symbol s_0_9[s_0_940,1079
static const symbol s_0_10[s_0_1041,1120
static const symbol s_0_11[s_0_1142,1162
static const symbol s_0_12[s_0_1243,1204
static const struct among a_0[a_045,1247
static const symbol s_1_0[s_1_062,1691
static const symbol s_1_1[s_1_163,1736
static const symbol s_1_2[s_1_264,1786
static const symbol s_1_3[s_1_365,1841
static const symbol s_1_4[s_1_466,1886
static const symbol s_1_5[s_1_567,1931
static const symbol s_1_6[s_1_668,1981
static const symbol s_1_7[s_1_769,2026
static const symbol s_1_8[s_1_870,2076
static const symbol s_1_9[s_1_971,2121
static const symbol s_1_10[s_1_1072,2172
static const symbol s_1_11[s_1_1173,2218
static const symbol s_1_12[s_1_1274,2269
static const symbol s_1_13[s_1_1375,2316
static const symbol s_1_14[s_1_1476,2363
static const symbol s_1_15[s_1_1577,2409
static const symbol s_1_16[s_1_1678,2456
static const symbol s_1_17[s_1_1779,2502
static const symbol s_1_18[s_1_1880,2548
static const symbol s_1_19[s_1_1981,2600
static const symbol s_1_20[s_1_2082,2646
static const symbol s_1_21[s_1_2183,2702
static const symbol s_1_22[s_1_2284,2749
static const symbol s_1_23[s_1_2385,2800
static const symbol s_1_24[s_1_2486,2861
static const symbol s_1_25[s_1_2587,2912
static const symbol s_1_26[s_1_2688,2968
static const symbol s_1_27[s_1_2789,3020
static const symbol s_1_28[s_1_2890,3071
static const symbol s_1_29[s_1_2991,3123
static const symbol s_1_30[s_1_3092,3174
static const symbol s_1_31[s_1_3193,3225
static const symbol s_1_32[s_1_3294,3276
static const symbol s_1_33[s_1_3395,3337
static const symbol s_1_34[s_1_3496,3388
static const symbol s_1_35[s_1_3597,3444
static const symbol s_1_36[s_1_3698,3495
static const symbol s_1_37[s_1_3799,3541
static const symbol s_1_38[s_1_38100,3592
static const struct among a_1[a_1102,3640
static const symbol s_2_0[s_2_0145,4954
static const symbol s_2_1[s_2_1146,5004
static const symbol s_2_2[s_2_2147,5070
static const symbol s_2_3[s_2_3148,5125
static const symbol s_2_4[s_2_4149,5175
static const symbol s_2_5[s_2_5150,5235
static const symbol s_2_6[s_2_6151,5295
static const symbol s_2_7[s_2_7152,5356
static const symbol s_2_8[s_2_8153,5412
static const symbol s_2_9[s_2_9154,5472
static const symbol s_2_10[s_2_10155,5527
static const symbol s_2_11[s_2_11156,5589
static const symbol s_2_12[s_2_12157,5645
static const symbol s_2_13[s_2_13158,5702
static const symbol s_2_14[s_2_14159,5769
static const symbol s_2_15[s_2_15160,5825
static const symbol s_2_16[s_2_16161,5881
static const symbol s_2_17[s_2_17162,5943
static const symbol s_2_18[s_2_18163,5994
static const symbol s_2_19[s_2_19164,6061
static const symbol s_2_20[s_2_20165,6138
static const symbol s_2_21[s_2_21166,6189
static const symbol s_2_22[s_2_22167,6240
static const symbol s_2_23[s_2_23168,6291
static const symbol s_2_24[s_2_24169,6352
static const symbol s_2_25[s_2_25170,6403
static const symbol s_2_26[s_2_26171,6459
static const symbol s_2_27[s_2_27172,6520
static const symbol s_2_28[s_2_28173,6581
static const symbol s_2_29[s_2_29174,6632
static const symbol s_2_30[s_2_30175,6683
static const symbol s_2_31[s_2_31176,6739
static const symbol s_2_32[s_2_32177,6795
static const symbol s_2_33[s_2_33178,6851
static const symbol s_2_34[s_2_34179,6902
static const symbol s_2_35[s_2_35180,6953
static const symbol s_2_36[s_2_36181,7004
static const symbol s_2_37[s_2_37182,7060
static const symbol s_2_38[s_2_38183,7131
static const symbol s_2_39[s_2_39184,7202
static const symbol s_2_40[s_2_40185,7253
static const symbol s_2_41[s_2_41186,7314
static const symbol s_2_42[s_2_42187,7366
static const symbol s_2_43[s_2_43188,7428
static const symbol s_2_44[s_2_44189,7474
static const symbol s_2_45[s_2_45190,7536
static const symbol s_2_46[s_2_46191,7587
static const symbol s_2_47[s_2_47192,7638
static const symbol s_2_48[s_2_48193,7684
static const symbol s_2_49[s_2_49194,7740
static const symbol s_2_50[s_2_50195,7791
static const symbol s_2_51[s_2_51196,7847
static const symbol s_2_52[s_2_52197,7903
static const symbol s_2_53[s_2_53198,7959
static const symbol s_2_54[s_2_54199,8030
static const symbol s_2_55[s_2_55200,8101
static const symbol s_2_56[s_2_56201,8167
static const symbol s_2_57[s_2_57202,8223
static const symbol s_2_58[s_2_58203,8279
static const symbol s_2_59[s_2_59204,8335
static const symbol s_2_60[s_2_60205,8386
static const symbol s_2_61[s_2_61206,8438
static const symbol s_2_62[s_2_62207,8494
static const symbol s_2_63[s_2_63208,8545
static const symbol s_2_64[s_2_64209,8601
static const symbol s_2_65[s_2_65210,8647
static const symbol s_2_66[s_2_66211,8693
static const symbol s_2_67[s_2_67212,8744
static const symbol s_2_68[s_2_68213,8795
static const symbol s_2_69[s_2_69214,8852
static const symbol s_2_70[s_2_70215,8908
static const symbol s_2_71[s_2_71216,8969
static const symbol s_2_72[s_2_72217,9031
static const symbol s_2_73[s_2_73218,9093
static const symbol s_2_74[s_2_74219,9155
static const symbol s_2_75[s_2_75220,9227
static const symbol s_2_76[s_2_76221,9283
static const symbol s_2_77[s_2_77222,9345
static const symbol s_2_78[s_2_78223,9391
static const symbol s_2_79[s_2_79224,9457
static const symbol s_2_80[s_2_80225,9513
static const symbol s_2_81[s_2_81226,9569
static const symbol s_2_82[s_2_82227,9625
static const symbol s_2_83[s_2_83228,9686
static const symbol s_2_84[s_2_84229,9737
static const symbol s_2_85[s_2_85230,9783
static const symbol s_2_86[s_2_86231,9834
static const symbol s_2_87[s_2_87232,9885
static const symbol s_2_88[s_2_88233,9946
static const symbol s_2_89[s_2_89234,9997
static const symbol s_2_90[s_2_90235,10064
static const symbol s_2_91[s_2_91236,10115
static const symbol s_2_92[s_2_92237,10171
static const symbol s_2_93[s_2_93238,10227
static const symbol s_2_94[s_2_94239,10293
static const symbol s_2_95[s_2_95240,10359
static const symbol s_2_96[s_2_96241,10426
static const symbol s_2_97[s_2_97242,10488
static const symbol s_2_98[s_2_98243,10554
static const symbol s_2_99[s_2_99244,10615
static const symbol s_2_100[s_2_100245,10677
static const symbol s_2_101[s_2_101246,10739
static const symbol s_2_102[s_2_102247,10802
static const symbol s_2_103[s_2_103248,10875
static const symbol s_2_104[s_2_104249,10932
static const symbol s_2_105[s_2_105250,10994
static const symbol s_2_106[s_2_106251,11056
static const symbol s_2_107[s_2_107252,11113
static const symbol s_2_108[s_2_108253,11186
static const symbol s_2_109[s_2_109254,11269
static const symbol s_2_110[s_2_110255,11336
static const symbol s_2_111[s_2_111256,11398
static const symbol s_2_112[s_2_112257,11475
static const symbol s_2_113[s_2_113258,11532
static const symbol s_2_114[s_2_114259,11589
static const symbol s_2_115[s_2_115260,11646
static const symbol s_2_116[s_2_116261,11708
static const symbol s_2_117[s_2_117262,11775
static const symbol s_2_118[s_2_118263,11837
static const symbol s_2_119[s_2_119264,11894
static const symbol s_2_120[s_2_120265,11951
static const symbol s_2_121[s_2_121266,12013
static const symbol s_2_122[s_2_122267,12075
static const symbol s_2_123[s_2_123268,12132
static const symbol s_2_124[s_2_124269,12189
static const symbol s_2_125[s_2_125270,12251
static const symbol s_2_126[s_2_126271,12328
static const symbol s_2_127[s_2_127272,12405
static const symbol s_2_128[s_2_128273,12467
static const symbol s_2_129[s_2_129274,12545
static const symbol s_2_130[s_2_130275,12602
static const symbol s_2_131[s_2_131276,12669
static const symbol s_2_132[s_2_132277,12737
static const symbol s_2_133[s_2_133278,12820
static const symbol s_2_134[s_2_134279,12877
static const symbol s_2_135[s_2_135280,12935
static const symbol s_2_136[s_2_136281,12997
static const symbol s_2_137[s_2_137282,13054
static const symbol s_2_138[s_2_138283,13116
static const symbol s_2_139[s_2_139284,13163
static const symbol s_2_140[s_2_140285,13215
static const symbol s_2_141[s_2_141286,13272
static const symbol s_2_142[s_2_142287,13324
static const symbol s_2_143[s_2_143288,13392
static const symbol s_2_144[s_2_144289,13470
static const symbol s_2_145[s_2_145290,13527
static const symbol s_2_146[s_2_146291,13589
static const symbol s_2_147[s_2_147292,13656
static const symbol s_2_148[s_2_148293,13713
static const symbol s_2_149[s_2_149294,13770
static const symbol s_2_150[s_2_150295,13832
static const symbol s_2_151[s_2_151296,13894
static const symbol s_2_152[s_2_152297,13946
static const symbol s_2_153[s_2_153298,13998
static const symbol s_2_154[s_2_154299,14055
static const symbol s_2_155[s_2_155300,14117
static const symbol s_2_156[s_2_156301,14179
static const symbol s_2_157[s_2_157302,14231
static const symbol s_2_158[s_2_158303,14293
static const symbol s_2_159[s_2_159304,14370
static const symbol s_2_160[s_2_160305,14442
static const symbol s_2_161[s_2_161306,14524
static const symbol s_2_162[s_2_162307,14587
static const symbol s_2_163[s_2_163308,14639
static const symbol s_2_164[s_2_164309,14696
static const symbol s_2_165[s_2_165310,14753
static const symbol s_2_166[s_2_166311,14815
static const symbol s_2_167[s_2_167312,14882
static const symbol s_2_168[s_2_168313,14934
static const symbol s_2_169[s_2_169314,14986
static const symbol s_2_170[s_2_170315,15038
static const symbol s_2_171[s_2_171316,15100
static const symbol s_2_172[s_2_172317,15162
static const symbol s_2_173[s_2_173318,15210
static const symbol s_2_174[s_2_174319,15258
static const symbol s_2_175[s_2_175320,15306
static const symbol s_2_176[s_2_176321,15359
static const symbol s_2_177[s_2_177322,15407
static const symbol s_2_178[s_2_178323,15464
static const symbol s_2_179[s_2_179324,15536
static const symbol s_2_180[s_2_180325,15603
static const symbol s_2_181[s_2_181326,15680
static const symbol s_2_182[s_2_182327,15738
static const symbol s_2_183[s_2_183328,15785
static const symbol s_2_184[s_2_184329,15837
static const symbol s_2_185[s_2_185330,15889
static const symbol s_2_186[s_2_186331,15946
static const symbol s_2_187[s_2_187332,16003
static const symbol s_2_188[s_2_188333,16065
static const symbol s_2_189[s_2_189334,16137
static const symbol s_2_190[s_2_190335,16184
static const symbol s_2_191[s_2_191336,16246
static const symbol s_2_192[s_2_192337,16309
static const symbol s_2_193[s_2_193338,16372
static const symbol s_2_194[s_2_194339,16429
static const symbol s_2_195[s_2_195340,16492
static const symbol s_2_196[s_2_196341,16549
static const symbol s_2_197[s_2_197342,16592
static const symbol s_2_198[s_2_198343,16640
static const symbol s_2_199[s_2_199344,16693
static const struct among a_2[a_2346,16752
static const symbol s_3_0[s_3_0550,23522
static const symbol s_3_1[s_3_1551,23572
static const symbol s_3_2[s_3_2552,23627
static const symbol s_3_3[s_3_3553,23682
static const symbol s_3_4[s_3_4554,23738
static const symbol s_3_5[s_3_5555,23788
static const symbol s_3_6[s_3_6556,23838
static const symbol s_3_7[s_3_7557,23888
static const symbol s_3_8[s_3_8558,23939
static const symbol s_3_9[s_3_9559,23984
static const symbol s_3_10[s_3_10560,24039
static const symbol s_3_11[s_3_11561,24095
static const symbol s_3_12[s_3_12562,24146
static const symbol s_3_13[s_3_13563,24202
static const symbol s_3_14[s_3_14564,24253
static const symbol s_3_15[s_3_15565,24314
static const symbol s_3_16[s_3_16566,24366
static const symbol s_3_17[s_3_17567,24417
static const symbol s_3_18[s_3_18568,24468
static const symbol s_3_19[s_3_19569,24524
static const symbol s_3_20[s_3_20570,24571
static const symbol s_3_21[s_3_21571,24628
static const symbol s_3_22[s_3_22572,24685
static const symbol s_3_23[s_3_23573,24742
static const symbol s_3_24[s_3_24574,24789
static const symbol s_3_25[s_3_25575,24840
static const symbol s_3_26[s_3_26576,24892
static const symbol s_3_27[s_3_27577,24938
static const symbol s_3_28[s_3_28578,24984
static const symbol s_3_29[s_3_29579,25030
static const symbol s_3_30[s_3_30580,25076
static const symbol s_3_31[s_3_31581,25122
static const symbol s_3_32[s_3_32582,25173
static const symbol s_3_33[s_3_33583,25224
static const symbol s_3_34[s_3_34584,25280
static const symbol s_3_35[s_3_35585,25336
static const symbol s_3_36[s_3_36586,25392
static const symbol s_3_37[s_3_37587,25438
static const symbol s_3_38[s_3_38588,25489
static const symbol s_3_39[s_3_39589,25550
static const symbol s_3_40[s_3_40590,25606
static const symbol s_3_41[s_3_41591,25662
static const symbol s_3_42[s_3_42592,25708
static const symbol s_3_43[s_3_43593,25754
static const symbol s_3_44[s_3_44594,25810
static const symbol s_3_45[s_3_45595,25866
static const symbol s_3_46[s_3_46596,25923
static const symbol s_3_47[s_3_47597,25980
static const symbol s_3_48[s_3_48598,26042
static const symbol s_3_49[s_3_49599,26104
static const symbol s_3_50[s_3_50600,26165
static const symbol s_3_51[s_3_51601,26227
static const symbol s_3_52[s_3_52602,26283
static const symbol s_3_53[s_3_53603,26340
static const symbol s_3_54[s_3_54604,26397
static const symbol s_3_55[s_3_55605,26459
static const symbol s_3_56[s_3_56606,26511
static const symbol s_3_57[s_3_57607,26573
static const symbol s_3_58[s_3_58608,26635
static const symbol s_3_59[s_3_59609,26696
static const symbol s_3_60[s_3_60610,26757
static const symbol s_3_61[s_3_61611,26818
static const symbol s_3_62[s_3_62612,26880
static const symbol s_3_63[s_3_63613,26942
static const symbol s_3_64[s_3_64614,27004
static const symbol s_3_65[s_3_65615,27066
static const symbol s_3_66[s_3_66616,27113
static const symbol s_3_67[s_3_67617,27159
static const symbol s_3_68[s_3_68618,27215
static const symbol s_3_69[s_3_69619,27276
static const symbol s_3_70[s_3_70620,27332
static const symbol s_3_71[s_3_71621,27393
static const symbol s_3_72[s_3_72622,27449
static const symbol s_3_73[s_3_73623,27501
static const symbol s_3_74[s_3_74624,27563
static const symbol s_3_75[s_3_75625,27625
static const symbol s_3_76[s_3_76626,27687
static const symbol s_3_77[s_3_77627,27733
static const symbol s_3_78[s_3_78628,27784
static const symbol s_3_79[s_3_79629,27845
static const symbol s_3_80[s_3_80630,27906
static const symbol s_3_81[s_3_81631,27962
static const symbol s_3_82[s_3_82632,28018
static const symbol s_3_83[s_3_83633,28074
static const symbol s_3_84[s_3_84634,28131
static const symbol s_3_85[s_3_85635,28188
static const symbol s_3_86[s_3_86636,28244
static const symbol s_3_87[s_3_87637,28305
static const symbol s_3_88[s_3_88638,28366
static const symbol s_3_89[s_3_89639,28427
static const symbol s_3_90[s_3_90640,28488
static const symbol s_3_91[s_3_91641,28550
static const symbol s_3_92[s_3_92642,28612
static const symbol s_3_93[s_3_93643,28678
static const symbol s_3_94[s_3_94644,28744
static const symbol s_3_95[s_3_95645,28811
static const symbol s_3_96[s_3_96646,28867
static const symbol s_3_97[s_3_97647,28923
static const symbol s_3_98[s_3_98648,28984
static const symbol s_3_99[s_3_99649,29041
static const symbol s_3_100[s_3_100650,29093
static const symbol s_3_101[s_3_101651,29140
static const symbol s_3_102[s_3_102652,29197
static const symbol s_3_103[s_3_103653,29249
static const symbol s_3_104[s_3_104654,29306
static const symbol s_3_105[s_3_105655,29368
static const symbol s_3_106[s_3_106656,29430
static const symbol s_3_107[s_3_107657,29492
static const symbol s_3_108[s_3_108658,29555
static const symbol s_3_109[s_3_109659,29622
static const symbol s_3_110[s_3_110660,29684
static const symbol s_3_111[s_3_111661,29741
static const symbol s_3_112[s_3_112662,29803
static const symbol s_3_113[s_3_113663,29861
static const symbol s_3_114[s_3_114664,29919
static const symbol s_3_115[s_3_115665,29977
static const symbol s_3_116[s_3_116666,30030
static const symbol s_3_117[s_3_117667,30082
static const symbol s_3_118[s_3_118668,30134
static const symbol s_3_119[s_3_119669,30191
static const symbol s_3_120[s_3_120670,30253
static const symbol s_3_121[s_3_121671,30300
static const symbol s_3_122[s_3_122672,30352
static const symbol s_3_123[s_3_123673,30409
static const symbol s_3_124[s_3_124674,30462
static const symbol s_3_125[s_3_125675,30519
static const symbol s_3_126[s_3_126676,30566
static const symbol s_3_127[s_3_127677,30623
static const symbol s_3_128[s_3_128678,30670
static const symbol s_3_129[s_3_129679,30732
static const symbol s_3_130[s_3_130680,30779
static const symbol s_3_131[s_3_131681,30836
static const symbol s_3_132[s_3_132682,30883
static const symbol s_3_133[s_3_133683,30940
static const symbol s_3_134[s_3_134684,30997
static const symbol s_3_135[s_3_135685,31054
static const symbol s_3_136[s_3_136686,31111
static const symbol s_3_137[s_3_137687,31173
static const symbol s_3_138[s_3_138688,31226
static const symbol s_3_139[s_3_139689,31289
static const symbol s_3_140[s_3_140690,31352
static const symbol s_3_141[s_3_141691,31415
static const symbol s_3_142[s_3_142692,31467
static const symbol s_3_143[s_3_143693,31514
static const symbol s_3_144[s_3_144694,31571
static const symbol s_3_145[s_3_145695,31628
static const symbol s_3_146[s_3_146696,31685
static const symbol s_3_147[s_3_147697,31743
static const symbol s_3_148[s_3_148698,31805
static const symbol s_3_149[s_3_149699,31857
static const symbol s_3_150[s_3_150700,31919
static const symbol s_3_151[s_3_151701,31981
static const symbol s_3_152[s_3_152702,32038
static const symbol s_3_153[s_3_153703,32095
static const symbol s_3_154[s_3_154704,32162
static const symbol s_3_155[s_3_155705,32220
static const symbol s_3_156[s_3_156706,32277
static const symbol s_3_157[s_3_157707,32339
static const symbol s_3_158[s_3_158708,32401
static const symbol s_3_159[s_3_159709,32463
static const symbol s_3_160[s_3_160710,32525
static const symbol s_3_161[s_3_161711,32588
static const symbol s_3_162[s_3_162712,32645
static const symbol s_3_163[s_3_163713,32712
static const symbol s_3_164[s_3_164714,32780
static const symbol s_3_165[s_3_165715,32837
static const symbol s_3_166[s_3_166716,32894
static const symbol s_3_167[s_3_167717,32956
static const symbol s_3_168[s_3_168718,33014
static const symbol s_3_169[s_3_169719,33067
static const symbol s_3_170[s_3_170720,33129
static const symbol s_3_171[s_3_171721,33191
static const symbol s_3_172[s_3_172722,33258
static const symbol s_3_173[s_3_173723,33316
static const symbol s_3_174[s_3_174724,33384
static const symbol s_3_175[s_3_175725,33452
static const symbol s_3_176[s_3_176726,33520
static const symbol s_3_177[s_3_177727,33582
static const symbol s_3_178[s_3_178728,33649
static const symbol s_3_179[s_3_179729,33716
static const symbol s_3_180[s_3_180730,33783
static const symbol s_3_181[s_3_181731,33840
static const symbol s_3_182[s_3_182732,33892
static const symbol s_3_183[s_3_183733,33949
static const symbol s_3_184[s_3_184734,34011
static const symbol s_3_185[s_3_185735,34073
static const symbol s_3_186[s_3_186736,34135
static const symbol s_3_187[s_3_187737,34198
static const symbol s_3_188[s_3_188738,34265
static const symbol s_3_189[s_3_189739,34327
static const symbol s_3_190[s_3_190740,34389
static const symbol s_3_191[s_3_191741,34442
static const symbol s_3_192[s_3_192742,34505
static const symbol s_3_193[s_3_193743,34568
static const symbol s_3_194[s_3_194744,34631
static const symbol s_3_195[s_3_195745,34683
static const symbol s_3_196[s_3_196746,34740
static const symbol s_3_197[s_3_197747,34797
static const symbol s_3_198[s_3_198748,34854
static const symbol s_3_199[s_3_199749,34922
static const symbol s_3_200[s_3_200750,34990
static const symbol s_3_201[s_3_201751,35063
static const symbol s_3_202[s_3_202752,35126
static const symbol s_3_203[s_3_203753,35199
static const symbol s_3_204[s_3_204754,35272
static const symbol s_3_205[s_3_205755,35345
static const symbol s_3_206[s_3_206756,35412
static const symbol s_3_207[s_3_207757,35479
static const symbol s_3_208[s_3_208758,35546
static const symbol s_3_209[s_3_209759,35614
static const symbol s_3_210[s_3_210760,35687
static const symbol s_3_211[s_3_211761,35744
static const symbol s_3_212[s_3_212762,35806
static const symbol s_3_213[s_3_213763,35858
static const symbol s_3_214[s_3_214764,35920
static const symbol s_3_215[s_3_215765,35972
static const symbol s_3_216[s_3_216766,36024
static const symbol s_3_217[s_3_217767,36076
static const symbol s_3_218[s_3_218768,36133
static const symbol s_3_219[s_3_219769,36181
static const symbol s_3_220[s_3_220770,36239
static const symbol s_3_221[s_3_221771,36297
static const symbol s_3_222[s_3_222772,36355
static const symbol s_3_223[s_3_223773,36413
static const symbol s_3_224[s_3_224774,36471
static const symbol s_3_225[s_3_225775,36519
static const symbol s_3_226[s_3_226776,36577
static const symbol s_3_227[s_3_227777,36625
static const symbol s_3_228[s_3_228778,36678
static const symbol s_3_229[s_3_229779,36725
static const symbol s_3_230[s_3_230780,36772
static const symbol s_3_231[s_3_231781,36824
static const symbol s_3_232[s_3_232782,36876
static const symbol s_3_233[s_3_233783,36928
static const symbol s_3_234[s_3_234784,36975
static const symbol s_3_235[s_3_235785,37023
static const symbol s_3_236[s_3_236786,37070
static const symbol s_3_237[s_3_237787,37127
static const symbol s_3_238[s_3_238788,37179
static const symbol s_3_239[s_3_239789,37236
static const symbol s_3_240[s_3_240790,37293
static const symbol s_3_241[s_3_241791,37350
static const symbol s_3_242[s_3_242792,37408
static const symbol s_3_243[s_3_243793,37466
static const symbol s_3_244[s_3_244794,37528
static const symbol s_3_245[s_3_245795,37590
static const symbol s_3_246[s_3_246796,37662
static const symbol s_3_247[s_3_247797,37725
static const symbol s_3_248[s_3_248798,37788
static const symbol s_3_249[s_3_249799,37850
static const symbol s_3_250[s_3_250800,37913
static const symbol s_3_251[s_3_251801,37971
static const symbol s_3_252[s_3_252802,38029
static const symbol s_3_253[s_3_253803,38091
static const symbol s_3_254[s_3_254804,38144
static const symbol s_3_255[s_3_255805,38207
static const symbol s_3_256[s_3_256806,38260
static const symbol s_3_257[s_3_257807,38323
static const symbol s_3_258[s_3_258808,38386
static const symbol s_3_259[s_3_259809,38448
static const symbol s_3_260[s_3_260810,38510
static const symbol s_3_261[s_3_261811,38573
static const symbol s_3_262[s_3_262812,38636
static const symbol s_3_263[s_3_263813,38699
static const symbol s_3_264[s_3_264814,38762
static const symbol s_3_265[s_3_265815,38810
static const symbol s_3_266[s_3_266816,38857
static const symbol s_3_267[s_3_267817,38909
static const symbol s_3_268[s_3_268818,38957
static const symbol s_3_269[s_3_269819,39009
static const symbol s_3_270[s_3_270820,39057
static const symbol s_3_271[s_3_271821,39110
static const symbol s_3_272[s_3_272822,39163
static const symbol s_3_273[s_3_273823,39221
static const symbol s_3_274[s_3_274824,39274
static const symbol s_3_275[s_3_275825,39327
static const symbol s_3_276[s_3_276826,39380
static const symbol s_3_277[s_3_277827,39433
static const symbol s_3_278[s_3_278828,39486
static const symbol s_3_279[s_3_279829,39539
static const symbol s_3_280[s_3_280830,39592
static const symbol s_3_281[s_3_281831,39635
static const symbol s_3_282[s_3_282832,39683
static const struct among a_3[a_3834,39732
static const symbol s_4_0[s_4_01121,49356
static const symbol s_4_1[s_4_11122,49396
static const symbol s_4_2[s_4_21123,49436
static const symbol s_4_3[s_4_31124,49476
static const symbol s_4_4[s_4_41125,49522
static const symbol s_4_5[s_4_51126,49562
static const symbol s_4_6[s_4_61127,49607
static const symbol s_4_7[s_4_71128,49647
static const symbol s_4_8[s_4_81129,49692
static const symbol s_4_9[s_4_91130,49737
static const symbol s_4_10[s_4_101131,49783
static const symbol s_4_11[s_4_111132,49829
static const symbol s_4_12[s_4_121133,49875
static const symbol s_4_13[s_4_131134,49921
static const symbol s_4_14[s_4_141135,49972
static const symbol s_4_15[s_4_151136,50023
static const symbol s_4_16[s_4_161137,50065
static const symbol s_4_17[s_4_171138,50107
static const symbol s_4_18[s_4_181139,50149
static const symbol s_4_19[s_4_191140,50191
static const symbol s_4_20[s_4_201141,50233
static const symbol s_4_21[s_4_211142,50275
static const struct among a_4[a_41144,50318
static const unsigned char g_v[g_v1170,51072
static const symbol s_0[s_01172,51181
static const symbol s_1[s_11173,51218
static const symbol s_2[s_21174,51255
static const symbol s_3[s_31175,51292
static const symbol s_4[s_41176,51329
static const symbol s_5[s_51177,51366
static const symbol s_6[s_61178,51403
static const symbol s_7[s_71179,51450
static const symbol s_8[s_81180,51492
static const symbol s_9[s_91181,51529
static int r_mark_regions(1183,51572
static int r_cleaning(1215,52658
static int r_R1(1268,54335
static int r_R2(1273,54509
static int r_attached_pronoun(1278,54683
static int r_standard_suffix(1292,55209
static int r_verb_suffix(1343,56899
static int r_residual_suffix(1370,57764
extern int catalan_ISO_8859_1_stem(1397,58639
extern struct SN_env * catalan_ISO_8859_1_create_env(1444,60165
extern void catalan_ISO_8859_1_close_env(1446,60260

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_tamil.c,15681
static const symbol s_0_0[s_0_038,1113
static const symbol s_0_1[s_0_139,1166
static const symbol s_0_2[s_0_240,1219
static const symbol s_0_3[s_0_341,1272
static const symbol s_0_4[s_0_442,1325
static const symbol s_0_5[s_0_543,1378
static const symbol s_0_6[s_0_644,1431
static const symbol s_0_7[s_0_745,1484
static const symbol s_0_8[s_0_846,1537
static const symbol s_0_9[s_0_947,1590
static const struct among a_0[a_049,1644
static const symbol s_1_0[s_1_063,2015
static const symbol s_1_1[s_1_164,2123
static const symbol s_1_2[s_1_265,2194
static const struct among a_1[a_167,2284
static const symbol s_2_0[s_2_074,2424
static const symbol s_2_1[s_2_175,2477
static const symbol s_2_2[s_2_276,2530
static const struct among a_2[a_278,2584
static const symbol s_3_0[s_3_085,2723
static const symbol s_3_1[s_3_186,2776
static const symbol s_3_2[s_3_287,2829
static const symbol s_3_3[s_3_388,2882
static const symbol s_3_4[s_3_489,2935
static const symbol s_3_5[s_3_590,2988
static const struct among a_3[a_392,3042
static const symbol s_4_0[s_4_0102,3280
static const symbol s_4_1[s_4_1103,3333
static const symbol s_4_2[s_4_2104,3386
static const symbol s_4_3[s_4_3105,3439
static const symbol s_4_4[s_4_4106,3492
static const symbol s_4_5[s_4_5107,3545
static const struct among a_4[a_4109,3599
static const symbol s_5_0[s_5_0119,3837
static const symbol s_5_1[s_5_1120,3890
static const symbol s_5_2[s_5_2121,3943
static const symbol s_5_3[s_5_3122,3996
static const symbol s_5_4[s_5_4123,4049
static const symbol s_5_5[s_5_5124,4102
static const struct among a_5[a_5126,4156
static const symbol s_6_0[s_6_0136,4394
static const symbol s_6_1[s_6_1137,4447
static const symbol s_6_2[s_6_2138,4500
static const symbol s_6_3[s_6_3139,4553
static const symbol s_6_4[s_6_4140,4606
static const symbol s_6_5[s_6_5141,4659
static const struct among a_6[a_6143,4713
static const symbol s_7_0[s_7_0153,4951
static const symbol s_7_1[s_7_1154,5004
static const symbol s_7_2[s_7_2155,5057
static const symbol s_7_3[s_7_3156,5110
static const symbol s_7_4[s_7_4157,5163
static const symbol s_7_5[s_7_5158,5216
static const struct among a_7[a_7160,5270
static const symbol s_8_0[s_8_0170,5508
static const symbol s_8_1[s_8_1171,5579
static const symbol s_8_2[s_8_2172,5632
static const struct among a_8[a_8174,5686
static const symbol s_9_0[s_9_0181,5825
static const symbol s_9_1[s_9_1182,5878
static const symbol s_9_2[s_9_2183,5931
static const symbol s_9_3[s_9_3184,5984
static const symbol s_9_4[s_9_4185,6037
static const symbol s_9_5[s_9_5186,6090
static const symbol s_9_6[s_9_6187,6143
static const symbol s_9_7[s_9_7188,6196
static const struct among a_9[a_9190,6250
static const symbol s_10_0[s_10_0202,6554
static const symbol s_10_1[s_10_1203,6608
static const symbol s_10_2[s_10_2204,6662
static const symbol s_10_3[s_10_3205,6716
static const symbol s_10_4[s_10_4206,6770
static const symbol s_10_5[s_10_5207,6824
static const symbol s_10_6[s_10_6208,6878
static const symbol s_10_7[s_10_7209,6932
static const struct among a_10[a_10211,6987
static const symbol s_11_0[s_11_0223,7300
static const symbol s_11_1[s_11_1224,7354
static const symbol s_11_2[s_11_2225,7408
static const struct among a_11[a_11227,7463
static const symbol s_12_0[s_12_0234,7606
static const symbol s_12_1[s_12_1235,7660
static const symbol s_12_2[s_12_2236,7714
static const symbol s_12_3[s_12_3237,7768
static const symbol s_12_4[s_12_4238,7822
static const symbol s_12_5[s_12_5239,7876
static const symbol s_12_6[s_12_6240,7930
static const symbol s_12_7[s_12_7241,7984
static const symbol s_12_8[s_12_8242,8038
static const symbol s_12_9[s_12_9243,8092
static const struct among a_12[a_12245,8147
static const symbol s_13_0[s_13_0259,8529
static const symbol s_13_1[s_13_1260,8583
static const symbol s_13_2[s_13_2261,8637
static const symbol s_13_3[s_13_3262,8691
static const symbol s_13_4[s_13_4263,8745
static const symbol s_13_5[s_13_5264,8799
static const struct among a_13[a_13266,8854
static const symbol s_14_0[s_14_0276,9099
static const symbol s_14_1[s_14_1277,9153
static const symbol s_14_2[s_14_2278,9207
static const struct among a_14[a_14280,9262
static const symbol s_15_0[s_15_0287,9405
static const symbol s_15_1[s_15_1288,9477
static const struct among a_15[a_15290,9550
static const symbol s_16_0[s_16_0296,9659
static const symbol s_16_1[s_16_1297,9713
static const symbol s_16_2[s_16_2298,9767
static const symbol s_16_3[s_16_3299,9821
static const symbol s_16_4[s_16_4300,9875
static const symbol s_16_5[s_16_5301,9929
static const symbol s_16_6[s_16_6302,9983
static const symbol s_16_7[s_16_7303,10037
static const struct among a_16[a_16305,10092
static const symbol s_17_0[s_17_0317,10405
static const symbol s_17_1[s_17_1318,10532
static const symbol s_17_2[s_17_2319,10677
static const symbol s_17_3[s_17_3320,10767
static const symbol s_17_4[s_17_4321,10876
static const symbol s_17_5[s_17_5322,11021
static const symbol s_17_6[s_17_6323,11184
static const symbol s_17_7[s_17_7324,11293
static const symbol s_17_8[s_17_8325,11420
static const symbol s_17_9[s_17_9326,11510
static const symbol s_17_10[s_17_10327,11655
static const symbol s_17_11[s_17_11328,11783
static const symbol s_17_12[s_17_12329,11874
static const struct among a_17[a_17331,12003
static const symbol s_18_0[s_18_0348,12499
static const symbol s_18_1[s_18_1349,12553
static const symbol s_18_2[s_18_2350,12607
static const symbol s_18_3[s_18_3351,12661
static const symbol s_18_4[s_18_4352,12715
static const symbol s_18_5[s_18_5353,12769
static const struct among a_18[a_18355,12824
static const symbol s_19_0[s_19_0365,13069
static const symbol s_19_1[s_19_1366,13123
static const symbol s_19_2[s_19_2367,13177
static const symbol s_19_3[s_19_3368,13231
static const symbol s_19_4[s_19_4369,13285
static const symbol s_19_5[s_19_5370,13339
static const struct among a_19[a_19372,13394
static const symbol s_20_0[s_20_0382,13639
static const symbol s_20_1[s_20_1383,13693
static const symbol s_20_2[s_20_2384,13747
static const symbol s_20_3[s_20_3385,13801
static const symbol s_20_4[s_20_4386,13855
static const symbol s_20_5[s_20_5387,13909
static const symbol s_20_6[s_20_6388,13963
static const symbol s_20_7[s_20_7389,14017
static const struct among a_20[a_20391,14072
static const symbol s_21_0[s_21_0403,14385
static const symbol s_21_1[s_21_1404,14439
static const symbol s_21_2[s_21_2405,14493
static const symbol s_21_3[s_21_3406,14547
static const symbol s_21_4[s_21_4407,14601
static const symbol s_21_5[s_21_5408,14655
static const symbol s_21_6[s_21_6409,14709
static const symbol s_21_7[s_21_7410,14763
static const struct among a_21[a_21412,14818
static const symbol s_22_0[s_22_0424,15131
static const symbol s_22_1[s_22_1425,15221
static const struct among a_22[a_22427,15403
static const symbol s_23_0[s_23_0433,15513
static const symbol s_23_1[s_23_1434,15567
static const symbol s_23_2[s_23_2435,15621
static const symbol s_23_3[s_23_3436,15675
static const symbol s_23_4[s_23_4437,15729
static const symbol s_23_5[s_23_5438,15783
static const symbol s_23_6[s_23_6439,15837
static const symbol s_23_7[s_23_7440,15891
static const symbol s_23_8[s_23_8441,15945
static const symbol s_23_9[s_23_9442,15999
static const symbol s_23_10[s_23_10443,16053
static const symbol s_23_11[s_23_11444,16108
static const struct among a_23[a_23446,16164
static const symbol s_24_0[s_24_0462,16616
static const symbol s_24_1[s_24_1463,16670
static const symbol s_24_2[s_24_2464,16724
static const symbol s_24_3[s_24_3465,16778
static const symbol s_24_4[s_24_4466,16832
static const symbol s_24_5[s_24_5467,16886
static const symbol s_24_6[s_24_6468,16940
static const symbol s_24_7[s_24_7469,16994
static const struct among a_24[a_24471,17049
static const symbol s_25_0[s_25_0483,17362
static const symbol s_25_1[s_25_1484,17507
static const symbol s_25_2[s_25_2485,17670
static const symbol s_25_3[s_25_3486,17779
static const symbol s_25_4[s_25_4487,17906
static const symbol s_25_5[s_25_5488,18051
static const struct among a_25[a_25490,18142
static const symbol s_0[s_0500,18392
static const symbol s_1[s_1501,18460
static const symbol s_2[s_2502,18528
static const symbol s_3[s_3503,18578
static const symbol s_4[s_4504,18646
static const symbol s_5[s_5505,18714
static const symbol s_6[s_6506,18764
static const symbol s_7[s_7507,18832
static const symbol s_8[s_8508,18900
static const symbol s_9[s_9509,18950
static const symbol s_10[s_10510,19018
static const symbol s_11[s_11511,19087
static const symbol s_12[s_12512,19138
static const symbol s_13[s_13513,19189
static const symbol s_14[s_14514,19240
static const symbol s_15[s_15515,19309
static const symbol s_16[s_16516,19414
static const symbol s_17[s_17517,19519
static const symbol s_18[s_18518,19588
static const symbol s_19[s_19519,19693
static const symbol s_20[s_20520,19762
static const symbol s_21[s_21521,19867
static const symbol s_22[s_22522,19936
static const symbol s_23[s_23523,20041
static const symbol s_24[s_24524,20110
static const symbol s_25[s_25525,20215
static const symbol s_26[s_26526,20266
static const symbol s_27[s_27527,20335
static const symbol s_28[s_28528,20422
static const symbol s_29[s_29529,20545
static const symbol s_30[s_30530,20596
static const symbol s_31[s_31531,20647
static const symbol s_32[s_32532,20698
static const symbol s_33[s_33533,20785
static const symbol s_34[s_34534,20836
static const symbol s_35[s_35535,20887
static const symbol s_36[s_36536,20938
static const symbol s_37[s_37537,20989
static const symbol s_38[s_38538,21040
static const symbol s_39[s_39539,21109
static const symbol s_40[s_40540,21178
static const symbol s_41[s_41541,21229
static const symbol s_42[s_42542,21298
static const symbol s_43[s_43543,21367
static const symbol s_44[s_44544,21418
static const symbol s_45[s_45545,21469
static const symbol s_46[s_46546,21520
static const symbol s_47[s_47547,21661
static const symbol s_48[s_48548,21712
static const symbol s_49[s_49549,21835
static const symbol s_50[s_50550,21904
static const symbol s_51[s_51551,22027
static const symbol s_52[s_52552,22096
static const symbol s_53[s_53553,22183
static const symbol s_54[s_54554,22234
static const symbol s_55[s_55555,22321
static const symbol s_56[s_56556,22372
static const symbol s_57[s_57557,22477
static const symbol s_58[s_58558,22600
static const symbol s_59[s_59559,22705
static const symbol s_60[s_60560,22828
static const symbol s_61[s_61561,22915
static const symbol s_62[s_62562,23020
static const symbol s_63[s_63563,23143
static const symbol s_64[s_64564,23248
static const symbol s_65[s_65565,23353
static const symbol s_66[s_66566,23440
static const symbol s_67[s_67567,23563
static const symbol s_68[s_68568,23650
static const symbol s_69[s_69569,23719
static const symbol s_70[s_70570,23806
static const symbol s_71[s_71571,23857
static const symbol s_72[s_72572,23926
static const symbol s_73[s_73573,24013
static const symbol s_74[s_74574,24064
static const symbol s_75[s_75575,24115
static const symbol s_76[s_76576,24166
static const symbol s_77[s_77577,24217
static const symbol s_78[s_78578,24304
static const symbol s_79[s_79579,24391
static const symbol s_80[s_80580,24478
static const symbol s_81[s_81581,24565
static const symbol s_82[s_82582,24652
static const symbol s_83[s_83583,24703
static const symbol s_84[s_84584,24826
static const symbol s_85[s_85585,24985
static const symbol s_86[s_86586,25072
static const symbol s_87[s_87587,25177
static const symbol s_88[s_88588,25264
static const symbol s_89[s_89589,25351
static const symbol s_90[s_90590,25456
static const symbol s_91[s_91591,25525
static const symbol s_92[s_92592,25612
static const symbol s_93[s_93593,25663
static const symbol s_94[s_94594,25750
static const symbol s_95[s_95595,25855
static const symbol s_96[s_96596,25960
static const symbol s_97[s_97597,26065
static const symbol s_98[s_98598,26170
static const symbol s_99[s_99599,26275
static const symbol s_100[s_100600,26344
static const symbol s_101[s_101601,26396
static const symbol s_102[s_102602,26448
static const symbol s_103[s_103603,26536
static const symbol s_104[s_104604,26588
static const symbol s_105[s_105605,26694
static const symbol s_106[s_106606,26800
static const symbol s_107[s_107607,26888
static const symbol s_108[s_108608,26994
static const symbol s_109[s_109609,27100
static const symbol s_110[s_110610,27206
static const symbol s_111[s_111611,27294
static const symbol s_112[s_112612,27382
static const symbol s_113[s_113613,27470
static const symbol s_114[s_114614,27558
static const symbol s_115[s_115615,27646
static const symbol s_116[s_116616,27698
static const symbol s_117[s_117617,27750
static const symbol s_118[s_118618,27802
static const symbol s_119[s_119619,27854
static const symbol s_120[s_120620,27906
static const symbol s_121[s_121621,27994
static const symbol s_122[s_122622,28082
static const symbol s_123[s_123623,28170
static const symbol s_124[s_124624,28240
static const symbol s_125[s_125625,28364
static const symbol s_126[s_126626,28452
static const symbol s_127[s_127627,28540
static const symbol s_128[s_128628,28646
static const symbol s_129[s_129629,28752
static const symbol s_130[s_130630,28858
static const symbol s_131[s_131631,28964
static const symbol s_132[s_132632,29034
static const symbol s_133[s_133633,29104
static const symbol s_134[s_134634,29192
static const symbol s_135[s_135635,29244
static const symbol s_136[s_136636,29332
static const symbol s_137[s_137637,29420
static const symbol s_138[s_138638,29508
static const symbol s_139[s_139639,29560
static const symbol s_140[s_140640,29648
static const symbol s_141[s_141641,29736
static const symbol s_142[s_142642,29824
static const symbol s_143[s_143643,29912
static const symbol s_144[s_144644,30018
static const symbol s_145[s_145645,30124
static const symbol s_146[s_146646,30230
static const symbol s_147[s_147647,30336
static const symbol s_148[s_148648,30424
static const symbol s_149[s_149649,30530
static const symbol s_150[s_150650,30636
static const symbol s_151[s_151651,30724
static const symbol s_152[s_152652,30830
static const symbol s_153[s_153653,30882
static const symbol s_154[s_154654,30952
static const symbol s_155[s_155655,31022
static int r_has_min_length(657,31075
static int r_fix_va_start(662,31263
static int r_fix_endings(734,33692
static int r_remove_question_prefixes(753,34168
static int r_fix_ending(771,34812
static int r_remove_pronoun_prefixes(1005,43663
static int r_remove_plural_suffix(1026,44522
static int r_remove_question_suffixes(1080,46434
static int r_remove_command_suffixes(1106,47329
static int r_remove_um(1125,48016
static int r_remove_common_word_endings(1149,48816
static int r_remove_vetrumai_urupukal(1254,52901
static int r_remove_tense_suffixes(1480,62085
static int r_remove_tense_suffix(1500,62661
extern int tamil_UTF_8_stem(1809,76306
extern struct SN_env * tamil_UTF_8_create_env(1877,78625
extern void tamil_UTF_8_close_env(1879,78713

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_danish.c,2438
static const symbol s_0_0[s_0_029,607
static const symbol s_0_1[s_0_130,657
static const symbol s_0_2[s_0_231,717
static const symbol s_0_3[s_0_332,772
static const symbol s_0_4[s_0_433,812
static const symbol s_0_5[s_0_534,872
static const symbol s_0_6[s_0_635,927
static const symbol s_0_7[s_0_736,992
static const symbol s_0_8[s_0_837,1042
static const symbol s_0_9[s_0_938,1097
static const symbol s_0_10[s_0_1039,1147
static const symbol s_0_11[s_0_1140,1193
static const symbol s_0_12[s_0_1241,1254
static const symbol s_0_13[s_0_1342,1310
static const symbol s_0_14[s_0_1443,1356
static const symbol s_0_15[s_0_1544,1417
static const symbol s_0_16[s_0_1645,1473
static const symbol s_0_17[s_0_1746,1514
static const symbol s_0_18[s_0_1847,1570
static const symbol s_0_19[s_0_1948,1616
static const symbol s_0_20[s_0_2049,1677
static const symbol s_0_21[s_0_2150,1748
static const symbol s_0_22[s_0_2251,1804
static const symbol s_0_23[s_0_2352,1865
static const symbol s_0_24[s_0_2453,1921
static const symbol s_0_25[s_0_2554,1972
static const symbol s_0_26[s_0_2655,2038
static const symbol s_0_27[s_0_2756,2099
static const symbol s_0_28[s_0_2857,2150
static const symbol s_0_29[s_0_2958,2201
static const symbol s_0_30[s_0_3059,2262
static const symbol s_0_31[s_0_3160,2308
static const struct among a_0[a_062,2365
static const symbol s_1_0[s_1_098,3445
static const symbol s_1_1[s_1_199,3490
static const symbol s_1_2[s_1_2100,3535
static const symbol s_1_3[s_1_3101,3580
static const struct among a_1[a_1103,3626
static const symbol s_2_0[s_2_0111,3798
static const symbol s_2_1[s_2_1112,3843
static const symbol s_2_2[s_2_2113,3893
static const symbol s_2_3[s_2_3114,3948
static const symbol s_2_4[s_2_4115,3998
static const struct among a_2[a_2117,4061
static const unsigned char g_c[g_c126,4259
static const unsigned char g_v[g_v128,4317
static const unsigned char g_s_ending[g_s_ending130,4420
static const symbol s_0[s_0132,4524
static const symbol s_1[s_1133,4566
static const symbol s_2[s_2134,4608
static int r_mark_regions(136,4663
static int r_main_suffix(160,5573
static int r_consonant_pair(189,6631
static int r_other_suffix(214,7552
static int r_undouble(259,9202
extern int danish_UTF_8_stem(278,9900
extern struct SN_env * danish_UTF_8_create_env(315,11085
extern void danish_UTF_8_close_env(317,11174

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_english.c,7510
static const symbol s_0_0[s_0_039,995
static const symbol s_0_1[s_0_140,1055
static const symbol s_0_2[s_0_241,1120
static const struct among a_0[a_043,1181
static const symbol s_1_0[s_1_050,1320
static const symbol s_1_1[s_1_151,1361
static const symbol s_1_2[s_1_252,1413
static const struct among a_1[a_154,1460
static const symbol s_2_0[s_2_061,1595
static const symbol s_2_1[s_2_162,1645
static const symbol s_2_2[s_2_263,1685
static const symbol s_2_3[s_2_364,1735
static const symbol s_2_4[s_2_465,1790
static const symbol s_2_5[s_2_566,1835
static const struct among a_2[a_268,1881
static const symbol s_3_1[s_3_178,2111
static const symbol s_3_2[s_3_279,2156
static const symbol s_3_3[s_3_380,2201
static const symbol s_3_4[s_3_481,2246
static const symbol s_3_5[s_3_582,2291
static const symbol s_3_6[s_3_683,2336
static const symbol s_3_7[s_3_784,2381
static const symbol s_3_8[s_3_885,2426
static const symbol s_3_9[s_3_986,2471
static const symbol s_3_10[s_3_1087,2516
static const symbol s_3_11[s_3_1188,2562
static const symbol s_3_12[s_3_1289,2608
static const struct among a_3[a_391,2655
static const symbol s_4_0[s_4_0108,3099
static const symbol s_4_1[s_4_1109,3144
static const symbol s_4_2[s_4_2110,3194
static const symbol s_4_3[s_4_3111,3244
static const symbol s_4_4[s_4_4112,3299
static const symbol s_4_5[s_4_5113,3359
static const struct among a_4[a_4115,3420
static const symbol s_5_0[s_5_0125,3650
static const symbol s_5_1[s_5_1126,3705
static const symbol s_5_2[s_5_2127,3760
static const symbol s_5_3[s_5_3128,3810
static const symbol s_5_4[s_5_4129,3855
static const symbol s_5_5[s_5_5130,3905
static const symbol s_5_6[s_5_6131,3960
static const symbol s_5_7[s_5_7132,4015
static const symbol s_5_8[s_5_8133,4075
static const symbol s_5_9[s_5_9134,4140
static const symbol s_5_10[s_5_10135,4200
static const symbol s_5_11[s_5_11136,4261
static const symbol s_5_12[s_5_12137,4322
static const symbol s_5_13[s_5_13138,4388
static const symbol s_5_14[s_5_14139,4449
static const symbol s_5_15[s_5_15140,4515
static const symbol s_5_16[s_5_16141,4586
static const symbol s_5_17[s_5_17142,4647
static const symbol s_5_18[s_5_18143,4708
static const symbol s_5_19[s_5_19144,4779
static const symbol s_5_20[s_5_20145,4835
static const symbol s_5_21[s_5_21146,4891
static const symbol s_5_22[s_5_22147,4962
static const symbol s_5_23[s_5_23148,5033
static const struct among a_5[a_5150,5105
static const symbol s_6_0[s_6_0178,5930
static const symbol s_6_1[s_6_1179,5990
static const symbol s_6_2[s_6_2180,6050
static const symbol s_6_3[s_6_3181,6110
static const symbol s_6_4[s_6_4182,6170
static const symbol s_6_5[s_6_5183,6225
static const symbol s_6_6[s_6_6184,6290
static const symbol s_6_7[s_6_7185,6360
static const symbol s_6_8[s_6_8186,6410
static const struct among a_6[a_6188,6466
static const symbol s_7_0[s_7_0201,6793
static const symbol s_7_1[s_7_1202,6838
static const symbol s_7_2[s_7_2203,6893
static const symbol s_7_3[s_7_3204,6948
static const symbol s_7_4[s_7_4205,7003
static const symbol s_7_5[s_7_5206,7058
static const symbol s_7_6[s_7_6207,7108
static const symbol s_7_7[s_7_7208,7158
static const symbol s_7_8[s_7_8209,7208
static const symbol s_7_9[s_7_9210,7258
static const symbol s_7_10[s_7_10211,7303
static const symbol s_7_11[s_7_11212,7354
static const symbol s_7_12[s_7_12213,7405
static const symbol s_7_13[s_7_13214,7451
static const symbol s_7_14[s_7_14215,7502
static const symbol s_7_15[s_7_15216,7553
static const symbol s_7_16[s_7_16217,7604
static const symbol s_7_17[s_7_17218,7660
static const struct among a_7[a_7220,7722
static const symbol s_8_0[s_8_0242,8347
static const symbol s_8_1[s_8_1243,8387
static const struct among a_8[a_8245,8428
static const symbol s_9_0[s_9_0251,8532
static const symbol s_9_1[s_9_1252,8602
static const symbol s_9_2[s_9_2253,8672
static const symbol s_9_3[s_9_3254,8737
static const symbol s_9_4[s_9_4255,8807
static const symbol s_9_5[s_9_5256,8872
static const symbol s_9_6[s_9_6257,8942
static const symbol s_9_7[s_9_7258,9012
static const struct among a_9[a_9260,9078
static const symbol s_10_0[s_10_0272,9382
static const symbol s_10_1[s_10_1273,9443
static const symbol s_10_2[s_10_2274,9504
static const symbol s_10_3[s_10_3275,9560
static const symbol s_10_4[s_10_4276,9626
static const symbol s_10_5[s_10_5277,9687
static const symbol s_10_6[s_10_6278,9748
static const symbol s_10_7[s_10_7279,9814
static const symbol s_10_8[s_10_8280,9870
static const symbol s_10_9[s_10_9281,9926
static const symbol s_10_10[s_10_10282,9987
static const symbol s_10_11[s_10_11283,10044
static const symbol s_10_12[s_10_12284,10101
static const symbol s_10_13[s_10_13285,10168
static const symbol s_10_14[s_10_14286,10230
static const symbol s_10_15[s_10_15287,10287
static const symbol s_10_16[s_10_16288,10339
static const symbol s_10_17[s_10_17289,10401
static const struct among a_10[a_10291,10459
static const unsigned char g_v[g_v313,11112
static const unsigned char g_v_WXY[g_v_WXY315,11167
static const unsigned char g_valid_LI[g_valid_LI317,11230
static const symbol s_0[s_0319,11289
static const symbol s_1[s_1320,11326
static const symbol s_2[s_2321,11363
static const symbol s_3[s_3322,11405
static const symbol s_4[s_4323,11442
static const symbol s_5[s_5324,11484
static const symbol s_6[s_6325,11526
static const symbol s_7[s_7326,11563
static const symbol s_8[s_8327,11600
static const symbol s_9[s_9328,11637
static const symbol s_10[s_10329,11689
static const symbol s_11[s_11330,11742
static const symbol s_12[s_12331,11795
static const symbol s_13[s_13332,11848
static const symbol s_14[s_14333,11896
static const symbol s_15[s_15334,11944
static const symbol s_16[s_16335,11992
static const symbol s_17[s_17336,12035
static const symbol s_18[s_18337,12083
static const symbol s_19[s_19338,12131
static const symbol s_20[s_20339,12179
static const symbol s_21[s_21340,12227
static const symbol s_22[s_22341,12270
static const symbol s_23[s_23342,12323
static const symbol s_24[s_24343,12376
static const symbol s_25[s_25344,12424
static const symbol s_26[s_26345,12467
static const symbol s_27[s_27346,12510
static const symbol s_28[s_28347,12558
static const symbol s_29[s_29348,12606
static const symbol s_30[s_30349,12654
static const symbol s_31[s_31350,12702
static const symbol s_32[s_32351,12750
static const symbol s_33[s_33352,12798
static const symbol s_34[s_34353,12856
static const symbol s_35[s_35354,12909
static const symbol s_36[s_36355,12967
static const symbol s_37[s_37356,13020
static const symbol s_38[s_38357,13078
static int r_prelude(359,13117
static int r_mark_regions(418,15073
static int r_shortv(458,16526
static int r_R1(474,17211
static int r_R2(479,17385
static int r_Step_1a(484,17559
static int r_Step_1b(544,19783
static int r_Step_1c(621,22999
static int r_Step_2(645,23753
static int r_Step_3(738,26904
static int r_Step_4(786,28493
static int r_Step_5(821,29736
static int r_exception2(870,31521
static int r_exception1(879,31893
static int r_postlude(947,34158
extern int english_UTF_8_stem(978,35062
extern struct SN_env * english_UTF_8_create_env(1073,38363
extern void english_UTF_8_close_env(1075,38453

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_nepali.c,5702
static const symbol s_0_0[s_0_028,583
static const symbol s_0_1[s_0_129,654
static const symbol s_0_2[s_0_230,743
static const symbol s_0_3[s_0_331,814
static const symbol s_0_4[s_0_432,903
static const symbol s_0_5[s_0_533,974
static const symbol s_0_6[s_0_634,1082
static const symbol s_0_7[s_0_735,1153
static const symbol s_0_8[s_0_836,1224
static const symbol s_0_9[s_0_937,1313
static const symbol s_0_10[s_0_1038,1402
static const symbol s_0_11[s_0_1139,1547
static const symbol s_0_12[s_0_1240,1619
static const symbol s_0_13[s_0_1341,1691
static const symbol s_0_14[s_0_1442,1763
static const symbol s_0_15[s_0_1543,1908
static const symbol s_0_16[s_0_1644,1980
static const struct among a_0[a_046,2071
static const symbol s_1_0[s_1_067,2666
static const symbol s_1_1[s_1_168,2719
static const symbol s_1_2[s_1_269,2772
static const struct among a_1[a_171,2826
static const symbol s_2_0[s_2_078,2965
static const symbol s_2_1[s_2_179,3018
static const symbol s_2_2[s_2_280,3071
static const struct among a_2[a_282,3125
static const symbol s_3_0[s_3_089,3261
static const symbol s_3_1[s_3_190,3350
static const symbol s_3_2[s_3_291,3439
static const symbol s_3_3[s_3_392,3547
static const symbol s_3_4[s_3_493,3655
static const symbol s_3_5[s_3_594,3763
static const symbol s_3_6[s_3_695,3834
static const symbol s_3_7[s_3_796,3905
static const symbol s_3_8[s_3_897,3976
static const symbol s_3_9[s_3_998,4065
static const symbol s_3_10[s_3_1099,4173
static const symbol s_3_11[s_3_11100,4263
static const symbol s_3_12[s_3_12101,4335
static const symbol s_3_13[s_3_13102,4425
static const symbol s_3_14[s_3_14103,4515
static const symbol s_3_15[s_3_15104,4587
static const symbol s_3_16[s_3_16105,4659
static const symbol s_3_17[s_3_17106,4731
static const symbol s_3_18[s_3_18107,4821
static const symbol s_3_19[s_3_19108,4930
static const symbol s_3_20[s_3_20109,5020
static const symbol s_3_21[s_3_21110,5092
static const symbol s_3_22[s_3_22111,5182
static const symbol s_3_23[s_3_23112,5272
static const symbol s_3_24[s_3_24113,5362
static const symbol s_3_25[s_3_25114,5471
static const symbol s_3_26[s_3_26115,5561
static const symbol s_3_27[s_3_27116,5670
static const symbol s_3_28[s_3_28117,5779
static const symbol s_3_29[s_3_29118,5851
static const symbol s_3_30[s_3_30119,5941
static const symbol s_3_31[s_3_31120,6031
static const symbol s_3_32[s_3_32121,6103
static const symbol s_3_33[s_3_33122,6193
static const symbol s_3_34[s_3_34123,6302
static const symbol s_3_35[s_3_35124,6392
static const symbol s_3_36[s_3_36125,6482
static const symbol s_3_37[s_3_37126,6591
static const symbol s_3_38[s_3_38127,6700
static const symbol s_3_39[s_3_39128,6772
static const symbol s_3_40[s_3_40129,6862
static const symbol s_3_41[s_3_41130,6952
static const symbol s_3_42[s_3_42131,7061
static const symbol s_3_43[s_3_43132,7151
static const symbol s_3_44[s_3_44133,7241
static const symbol s_3_45[s_3_45134,7313
static const symbol s_3_46[s_3_46135,7422
static const symbol s_3_47[s_3_47136,7531
static const symbol s_3_48[s_3_48137,7640
static const symbol s_3_49[s_3_49138,7730
static const symbol s_3_50[s_3_50139,7839
static const symbol s_3_51[s_3_51140,7948
static const symbol s_3_52[s_3_52141,8075
static const symbol s_3_53[s_3_53142,8184
static const symbol s_3_54[s_3_54143,8293
static const symbol s_3_55[s_3_55144,8402
static const symbol s_3_56[s_3_56145,8511
static const symbol s_3_57[s_3_57146,8620
static const symbol s_3_58[s_3_58147,8710
static const symbol s_3_59[s_3_59148,8800
static const symbol s_3_60[s_3_60149,8927
static const symbol s_3_61[s_3_61150,9036
static const symbol s_3_62[s_3_62151,9145
static const symbol s_3_63[s_3_63152,9235
static const symbol s_3_64[s_3_64153,9344
static const symbol s_3_65[s_3_65154,9453
static const symbol s_3_66[s_3_66155,9580
static const symbol s_3_67[s_3_67156,9689
static const symbol s_3_68[s_3_68157,9798
static const symbol s_3_69[s_3_69158,9888
static const symbol s_3_70[s_3_70159,9997
static const symbol s_3_71[s_3_71160,10087
static const symbol s_3_72[s_3_72161,10141
static const symbol s_3_73[s_3_73162,10213
static const symbol s_3_74[s_3_74163,10285
static const symbol s_3_75[s_3_75164,10375
static const symbol s_3_76[s_3_76165,10502
static const symbol s_3_77[s_3_77166,10629
static const symbol s_3_78[s_3_78167,10738
static const symbol s_3_79[s_3_79168,10847
static const symbol s_3_80[s_3_80169,10919
static const symbol s_3_81[s_3_81170,10991
static const symbol s_3_82[s_3_82171,11081
static const symbol s_3_83[s_3_83172,11190
static const symbol s_3_84[s_3_84173,11280
static const symbol s_3_85[s_3_85174,11389
static const symbol s_3_86[s_3_86175,11498
static const symbol s_3_87[s_3_87176,11570
static const symbol s_3_88[s_3_88177,11660
static const symbol s_3_89[s_3_89178,11750
static const symbol s_3_90[s_3_90179,11859
static const struct among a_3[a_3181,11969
static const symbol s_0[s_0276,15039
static const symbol s_1[s_1277,15089
static const symbol s_2[s_2278,15139
static const symbol s_3[s_3279,15207
static const symbol s_4[s_4280,15275
static const symbol s_5[s_5281,15343
static const symbol s_6[s_6282,15411
static int r_remove_category_1(284,15498
static int r_check_category_2(319,16674
static int r_remove_category_2(327,17012
static int r_remove_category_3(366,18458
extern int nepali_UTF_8_stem(376,18783
extern struct SN_env * nepali_UTF_8_create_env(419,20307
extern void nepali_UTF_8_close_env(421,20396

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_german.c,2234
static const symbol s_0_1[s_0_130,630
static const symbol s_0_2[s_0_231,670
static const symbol s_0_3[s_0_332,710
static const symbol s_0_4[s_0_433,757
static const symbol s_0_5[s_0_534,804
static const struct among a_0[a_036,852
static const symbol s_1_0[s_1_046,1075
static const symbol s_1_1[s_1_147,1115
static const symbol s_1_2[s_1_248,1160
static const symbol s_1_3[s_1_349,1205
static const symbol s_1_4[s_1_450,1255
static const symbol s_1_5[s_1_551,1300
static const symbol s_1_6[s_1_652,1340
static const struct among a_1[a_154,1386
static const symbol s_2_0[s_2_065,1649
static const symbol s_2_1[s_2_166,1694
static const symbol s_2_2[s_2_267,1739
static const symbol s_2_3[s_2_368,1784
static const struct among a_2[a_270,1835
static const symbol s_3_0[s_3_078,2002
static const symbol s_3_1[s_3_179,2047
static const struct among a_3[a_381,2103
static const symbol s_4_0[s_4_087,2207
static const symbol s_4_1[s_4_188,2257
static const symbol s_4_2[s_4_289,2302
static const symbol s_4_3[s_4_390,2352
static const symbol s_4_4[s_4_491,2407
static const symbol s_4_5[s_4_592,2462
static const symbol s_4_6[s_4_693,2507
static const symbol s_4_7[s_4_794,2562
static const struct among a_4[a_496,2618
static const unsigned char g_v[g_v108,2914
static const unsigned char g_s_ending[g_s_ending110,3018
static const unsigned char g_st_ending[g_st_ending112,3077
static const symbol s_0[s_0114,3137
static const symbol s_1[s_1115,3181
static const symbol s_2[s_2116,3223
static const symbol s_3[s_3117,3260
static const symbol s_4[s_4118,3297
static const symbol s_5[s_5119,3334
static const symbol s_6[s_6120,3371
static const symbol s_7[s_7121,3408
static const symbol s_8[s_8122,3445
static const symbol s_9[s_9123,3492
static const symbol s_10[s_10124,3534
static const symbol s_11[s_11125,3577
static int r_prelude(127,3621
static int r_mark_regions(199,6071
static int r_postlude(239,7468
static int r_R1(284,8876
static int r_R2(289,9050
static int r_standard_suffix(294,9224
extern int german_UTF_8_stem(471,16924
extern struct SN_env * german_UTF_8_create_env(500,17773
extern void german_UTF_8_close_env(502,17862

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_indonesian.c,2204
static const symbol s_0_0[s_0_034,895
static const symbol s_0_1[s_0_135,945
static const symbol s_0_2[s_0_236,995
static const struct among a_0[a_038,1046
static const symbol s_1_0[s_1_045,1182
static const symbol s_1_1[s_1_146,1232
static const symbol s_1_2[s_1_247,1277
static const struct among a_1[a_149,1323
static const symbol s_2_0[s_2_056,1459
static const symbol s_2_1[s_2_157,1499
static const symbol s_2_2[s_2_258,1544
static const struct among a_2[a_260,1595
static const symbol s_3_0[s_3_067,1769
static const symbol s_3_1[s_3_168,1814
static const symbol s_3_2[s_3_269,1859
static const symbol s_3_3[s_3_370,1904
static const symbol s_3_4[s_3_471,1954
static const symbol s_3_5[s_3_572,2004
static const symbol s_3_6[s_3_673,2059
static const symbol s_3_7[s_3_774,2114
static const symbol s_3_8[s_3_875,2164
static const symbol s_3_9[s_3_976,2214
static const symbol s_3_10[s_3_1077,2269
static const symbol s_3_11[s_3_1178,2325
static const struct among a_3[a_380,2377
static const symbol s_4_0[s_4_096,2810
static const symbol s_4_1[s_4_197,2855
static const symbol s_4_2[s_4_298,2925
static const symbol s_4_3[s_4_399,2975
static const symbol s_4_4[s_4_4100,3020
static const symbol s_4_5[s_4_5101,3090
static const struct among a_4[a_4103,3141
static const unsigned char g_vowel[g_vowel113,3373
static const symbol s_0[s_0115,3429
static const symbol s_1[s_1116,3471
static const symbol s_2[s_2117,3508
static const symbol s_3[s_3118,3545
static const symbol s_4[s_4119,3582
static const symbol s_5[s_5120,3619
static const symbol s_6[s_6121,3671
static int r_remove_particle(123,3724
static int r_remove_possessive_pronoun(135,4201
static int r_SUFFIX_KAN_OK(147,4687
static int r_SUFFIX_AN_OK(154,4990
static int r_SUFFIX_I_OK(159,5171
static int r_remove_suffix(171,5574
static int r_VOWEL(183,6050
static int r_KER(188,6211
static int r_remove_first_order_prefix(194,6428
static int r_remove_second_order_prefix(274,9705
extern int indonesian_ISO_8859_1_stem(313,11247
extern struct SN_env * indonesian_ISO_8859_1_create_env(405,14891
extern void indonesian_ISO_8859_1_close_env(407,14989

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_turkish.c,9245
static const symbol s_0_0[s_0_064,2319
static const symbol s_0_1[s_0_165,2359
static const symbol s_0_2[s_0_266,2399
static const symbol s_0_3[s_0_367,2449
static const symbol s_0_4[s_0_468,2499
static const symbol s_0_5[s_0_569,2549
static const symbol s_0_6[s_0_670,2599
static const symbol s_0_7[s_0_771,2656
static const symbol s_0_8[s_0_872,2713
static const symbol s_0_9[s_0_973,2770
static const struct among a_0[a_075,2828
static const symbol s_1_0[s_1_089,3199
static const symbol s_1_1[s_1_190,3254
static const struct among a_1[a_192,3317
static const symbol s_2_0[s_2_098,3423
static const symbol s_2_1[s_2_199,3468
static const symbol s_2_2[s_2_2100,3513
static const symbol s_2_3[s_2_3101,3565
static const struct among a_2[a_2103,3618
static const symbol s_3_0[s_3_0111,3790
static const symbol s_3_1[s_3_1112,3835
static const symbol s_3_2[s_3_2113,3880
static const symbol s_3_3[s_3_3114,3932
static const struct among a_3[a_3116,3985
static const symbol s_4_0[s_4_0124,4157
static const symbol s_4_1[s_4_1125,4197
static const struct among a_4[a_4127,4238
static const symbol s_5_0[s_5_0133,4344
static const symbol s_5_1[s_5_1134,4389
static const struct among a_5[a_5136,4435
static const symbol s_6_0[s_6_0142,4541
static const symbol s_6_1[s_6_1143,4586
static const symbol s_6_2[s_6_2144,4631
static const symbol s_6_3[s_6_3145,4676
static const struct among a_6[a_6147,4722
static const symbol s_7_0[s_7_0155,4894
static const symbol s_7_1[s_7_1156,4944
static const struct among a_7[a_7158,4995
static const symbol s_8_0[s_8_0164,5101
static const symbol s_8_1[s_8_1165,5151
static const symbol s_8_2[s_8_2166,5201
static const symbol s_8_3[s_8_3167,5251
static const struct among a_8[a_8169,5302
static const symbol s_9_0[s_9_0177,5474
static const symbol s_9_1[s_9_1178,5529
static const struct among a_9[a_9180,5585
static const symbol s_10_0[s_10_0186,5691
static const symbol s_10_1[s_10_1187,5737
static const struct among a_10[a_10189,5784
static const symbol s_11_0[s_11_0195,5893
static const symbol s_11_1[s_11_1196,5939
static const struct among a_11[a_11198,5986
static const symbol s_12_0[s_12_0204,6095
static const symbol s_12_1[s_12_1205,6141
static const symbol s_12_2[s_12_2206,6187
static const symbol s_12_3[s_12_3207,6240
static const struct among a_12[a_12209,6294
static const symbol s_13_0[s_13_0217,6471
static const symbol s_13_1[s_13_1218,6522
static const symbol s_13_2[s_13_2219,6573
static const symbol s_13_3[s_13_3220,6631
static const struct among a_13[a_13222,6690
static const symbol s_14_0[s_14_0230,6867
static const symbol s_14_1[s_14_1231,6913
static const symbol s_14_2[s_14_2232,6959
static const symbol s_14_3[s_14_3233,7012
static const struct among a_14[a_14235,7066
static const symbol s_15_0[s_15_0243,7243
static const symbol s_15_1[s_15_1244,7304
static const symbol s_15_2[s_15_2245,7365
static const symbol s_15_3[s_15_3246,7440
static const struct among a_15[a_15248,7516
static const symbol s_16_0[s_16_0256,7693
static const symbol s_16_1[s_16_1257,7744
static const struct among a_16[a_16259,7796
static const symbol s_17_0[s_17_0265,7905
static const symbol s_17_1[s_17_1266,7956
static const symbol s_17_2[s_17_2267,8007
static const symbol s_17_3[s_17_3268,8065
static const struct among a_17[a_17270,8124
static const symbol s_18_0[s_18_0278,8301
static const symbol s_18_1[s_18_1279,8352
static const symbol s_18_2[s_18_2280,8403
static const symbol s_18_3[s_18_3281,8454
static const symbol s_18_4[s_18_4282,8505
static const symbol s_18_5[s_18_5283,8563
static const symbol s_18_6[s_18_6284,8621
static const symbol s_18_7[s_18_7285,8679
static const struct among a_18[a_18287,8738
static const symbol s_19_0[s_19_0299,9051
static const symbol s_19_1[s_19_1300,9124
static const struct among a_19[a_19302,9191
static const symbol s_20_0[s_20_0308,9300
static const symbol s_20_1[s_20_1309,9346
static const symbol s_20_2[s_20_2310,9392
static const symbol s_20_3[s_20_3311,9443
static const symbol s_20_4[s_20_4312,9494
static const symbol s_20_5[s_20_5313,9545
static const symbol s_20_6[s_20_6314,9596
static const symbol s_20_7[s_20_7315,9654
static const symbol s_20_8[s_20_8316,9712
static const symbol s_20_9[s_20_9317,9770
static const symbol s_20_10[s_20_10318,9828
static const symbol s_20_11[s_20_11319,9880
static const symbol s_20_12[s_20_12320,9932
static const symbol s_20_13[s_20_13321,9984
static const symbol s_20_14[s_20_14322,10036
static const symbol s_20_15[s_20_15323,10095
static const symbol s_20_16[s_20_16324,10154
static const symbol s_20_17[s_20_17325,10213
static const symbol s_20_18[s_20_18326,10272
static const symbol s_20_19[s_20_19327,10324
static const symbol s_20_20[s_20_20328,10376
static const symbol s_20_21[s_20_21329,10428
static const symbol s_20_22[s_20_22330,10480
static const symbol s_20_23[s_20_23331,10539
static const symbol s_20_24[s_20_24332,10598
static const symbol s_20_25[s_20_25333,10657
static const symbol s_20_26[s_20_26334,10716
static const symbol s_20_27[s_20_27335,10763
static const symbol s_20_28[s_20_28336,10810
static const symbol s_20_29[s_20_29337,10864
static const symbol s_20_30[s_20_30338,10918
static const symbol s_20_31[s_20_31339,10972
static const struct among a_20[a_20341,11027
static const symbol s_21_0[s_21_0377,12179
static const symbol s_21_1[s_21_1378,12225
static const symbol s_21_2[s_21_2379,12271
static const symbol s_21_3[s_21_3380,12322
static const symbol s_21_4[s_21_4381,12373
static const symbol s_21_5[s_21_5382,12424
static const symbol s_21_6[s_21_6383,12475
static const symbol s_21_7[s_21_7384,12526
static const struct among a_21[a_21386,12578
static const symbol s_22_0[s_22_0398,12891
static const symbol s_22_1[s_22_1399,12949
static const symbol s_22_2[s_22_2400,13007
static const symbol s_22_3[s_22_3401,13072
static const struct among a_22[a_22403,13138
static const symbol s_23_0[s_23_0411,13315
static const symbol s_23_1[s_23_1412,13356
static const symbol s_23_2[s_23_2413,13397
static const symbol s_23_3[s_23_3414,13438
static const struct among a_23[a_23416,13487
static const unsigned char g_vowel[g_vowel424,13660
static const unsigned char g_U[g_U426,13789
static const unsigned char g_vowel1[g_vowel1428,13908
static const unsigned char g_vowel2[g_vowel2430,14036
static const unsigned char g_vowel3[g_vowel3432,14141
static const unsigned char g_vowel4[g_vowel4434,14267
static const unsigned char g_vowel5[g_vowel5436,14316
static const unsigned char g_vowel6[g_vowel6438,14365
static const symbol s_0[s_0440,14414
static const symbol s_1[s_1441,14458
static const symbol s_2[s_2442,14502
static const symbol s_3[s_3443,14546
static const symbol s_4[s_4444,14588
static const symbol s_5[s_5445,14635
static const symbol s_6[s_6446,14672
static const symbol s_7[s_7447,14716
static const symbol s_8[s_8448,14753
static const symbol s_9[s_9449,14790
static const symbol s_10[s_10450,14834
static const symbol s_11[s_11451,14879
static const symbol s_12[s_12452,14917
static const symbol s_13[s_13453,14955
static const symbol s_14[s_14454,15000
static const symbol s_15[s_15455,15045
static const symbol s_16[s_16456,15090
static const symbol s_17[s_17457,15133
static int r_check_vowel_harmony(459,15182
static int r_mark_suffix_with_optional_n_consonant(512,17741
static int r_mark_suffix_with_optional_s_consonant(546,19026
static int r_mark_suffix_with_optional_y_consonant(580,20311
static int r_mark_suffix_with_optional_U_vowel(614,21596
static int r_mark_possessives(646,22831
static int r_mark_sU(655,23249
static int r_mark_lArI(666,23696
static int r_mark_yU(672,23933
static int r_mark_nU(683,24380
static int r_mark_nUn(691,24651
static int r_mark_yA(703,25146
static int r_mark_nA(715,25662
static int r_mark_DA(724,26021
static int r_mark_ndA(733,26380
static int r_mark_DAn(742,26740
static int r_mark_ndAn(751,27074
static int r_mark_ylA(760,27409
static int r_mark_ki(772,27931
static int r_mark_ncA(777,28073
static int r_mark_yUm(789,28595
static int r_mark_sUn(801,29091
static int r_mark_yUz(810,29426
static int r_mark_sUnUz(822,29922
static int r_mark_lAr(828,30134
static int r_mark_nUz(837,30469
static int r_mark_DUr(846,30804
static int r_mark_cAsInA(855,31139
static int r_mark_yDU(861,31378
static int r_mark_ysA(872,31813
static int r_mark_ymUs_(881,32232
static int r_mark_yken(893,32730
static int r_stem_nominal_verb_suffixes(901,33035
static int r_stem_suffix_chain_before_ki(1158,42007
static int r_stem_noun_suffixes(1354,50053
static int r_post_process_last_consonants(1864,70516
static int r_append_U_to_stems_ending_with_d_or_g(1895,71501
static int r_is_reserved_word(2005,75623
static int r_more_than_one_syllable_word(2016,76009
static int r_postlude(2038,76663
extern int turkish_UTF_8_stem(2066,77610
extern struct SN_env * turkish_UTF_8_create_env(2092,78573
extern void turkish_UTF_8_close_env(2094,78663

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_russian.c,7099
static const symbol s_0_0[s_0_034,809
static const symbol s_0_1[s_0_135,905
static const symbol s_0_2[s_0_236,1013
static const symbol s_0_3[s_0_337,1121
static const symbol s_0_4[s_0_438,1168
static const symbol s_0_5[s_0_539,1227
static const symbol s_0_6[s_0_640,1286
static const symbol s_0_7[s_0_741,1357
static const symbol s_0_8[s_0_842,1440
static const struct among a_0[a_044,1524
static const symbol s_1_0[s_1_057,1849
static const symbol s_1_1[s_1_158,1920
static const symbol s_1_2[s_1_259,1991
static const symbol s_1_3[s_1_360,2050
static const symbol s_1_4[s_1_461,2109
static const symbol s_1_5[s_1_562,2168
static const symbol s_1_6[s_1_663,2227
static const symbol s_1_7[s_1_764,2286
static const symbol s_1_8[s_1_865,2345
static const symbol s_1_9[s_1_966,2404
static const symbol s_1_10[s_1_1067,2463
static const symbol s_1_11[s_1_1168,2523
static const symbol s_1_12[s_1_1269,2583
static const symbol s_1_13[s_1_1370,2643
static const symbol s_1_14[s_1_1471,2703
static const symbol s_1_15[s_1_1572,2775
static const symbol s_1_16[s_1_1673,2847
static const symbol s_1_17[s_1_1774,2907
static const symbol s_1_18[s_1_1875,2967
static const symbol s_1_19[s_1_1976,3027
static const symbol s_1_20[s_1_2077,3087
static const symbol s_1_21[s_1_2178,3147
static const symbol s_1_22[s_1_2279,3207
static const symbol s_1_23[s_1_2380,3267
static const symbol s_1_24[s_1_2481,3327
static const symbol s_1_25[s_1_2582,3399
static const struct among a_1[a_184,3472
static const symbol s_2_0[s_2_0114,4361
static const symbol s_2_1[s_2_1115,4420
static const symbol s_2_2[s_2_2116,4491
static const symbol s_2_3[s_2_3117,4562
static const symbol s_2_4[s_2_4118,4609
static const symbol s_2_5[s_2_5119,4668
static const symbol s_2_6[s_2_6120,4739
static const symbol s_2_7[s_2_7121,4798
static const struct among a_2[a_2123,4858
static const symbol s_3_0[s_3_0135,5150
static const symbol s_3_1[s_3_1136,5209
static const struct among a_3[a_3138,5269
static const symbol s_4_0[s_4_0144,5373
static const symbol s_4_1[s_4_1145,5432
static const symbol s_4_2[s_4_2146,5491
static const symbol s_4_3[s_4_3147,5562
static const symbol s_4_4[s_4_4148,5621
static const symbol s_4_5[s_4_5149,5680
static const symbol s_4_6[s_4_6150,5751
static const symbol s_4_7[s_4_7151,5810
static const symbol s_4_8[s_4_8152,5869
static const symbol s_4_9[s_4_9153,5940
static const symbol s_4_10[s_4_10154,5999
static const symbol s_4_11[s_4_11155,6071
static const symbol s_4_12[s_4_12156,6143
static const symbol s_4_13[s_4_13157,6215
static const symbol s_4_14[s_4_14158,6287
static const symbol s_4_15[s_4_15159,6335
static const symbol s_4_16[s_4_16160,6395
static const symbol s_4_17[s_4_17161,6455
static const symbol s_4_18[s_4_18162,6527
static const symbol s_4_19[s_4_19163,6599
static const symbol s_4_20[s_4_20164,6659
static const symbol s_4_21[s_4_21165,6731
static const symbol s_4_22[s_4_22166,6803
static const symbol s_4_23[s_4_23167,6875
static const symbol s_4_24[s_4_24168,6947
static const symbol s_4_25[s_4_25169,7031
static const symbol s_4_26[s_4_26170,7115
static const symbol s_4_27[s_4_27171,7175
static const symbol s_4_28[s_4_28172,7247
static const symbol s_4_29[s_4_29173,7319
static const symbol s_4_30[s_4_30174,7367
static const symbol s_4_31[s_4_31175,7427
static const symbol s_4_32[s_4_32176,7487
static const symbol s_4_33[s_4_33177,7535
static const symbol s_4_34[s_4_34178,7595
static const symbol s_4_35[s_4_35179,7655
static const symbol s_4_36[s_4_36180,7715
static const symbol s_4_37[s_4_37181,7775
static const symbol s_4_38[s_4_38182,7835
static const symbol s_4_39[s_4_39183,7883
static const symbol s_4_40[s_4_40184,7943
static const symbol s_4_41[s_4_41185,8003
static const symbol s_4_42[s_4_42186,8075
static const symbol s_4_43[s_4_43187,8147
static const symbol s_4_44[s_4_44188,8207
static const symbol s_4_45[s_4_45189,8279
static const struct among a_4[a_4191,8352
static const symbol s_5_0[s_5_0241,9896
static const symbol s_5_1[s_5_1242,9943
static const symbol s_5_2[s_5_2243,10002
static const symbol s_5_3[s_5_3244,10073
static const symbol s_5_4[s_5_4245,10132
static const symbol s_5_5[s_5_5246,10179
static const symbol s_5_6[s_5_6247,10226
static const symbol s_5_7[s_5_7248,10273
static const symbol s_5_8[s_5_8249,10332
static const symbol s_5_9[s_5_9250,10391
static const symbol s_5_10[s_5_10251,10438
static const symbol s_5_11[s_5_11252,10498
static const symbol s_5_12[s_5_12253,10558
static const symbol s_5_13[s_5_13254,10606
static const symbol s_5_14[s_5_14255,10666
static const symbol s_5_15[s_5_15256,10726
static const symbol s_5_16[s_5_16257,10774
static const symbol s_5_17[s_5_17258,10834
static const symbol s_5_18[s_5_18259,10894
static const symbol s_5_19[s_5_19260,10942
static const symbol s_5_20[s_5_20261,11002
static const symbol s_5_21[s_5_21262,11062
static const symbol s_5_22[s_5_22263,11134
static const symbol s_5_23[s_5_23264,11218
static const symbol s_5_24[s_5_24265,11290
static const symbol s_5_25[s_5_25266,11338
static const symbol s_5_26[s_5_26267,11398
static const symbol s_5_27[s_5_27268,11470
static const symbol s_5_28[s_5_28269,11530
static const symbol s_5_29[s_5_29270,11590
static const symbol s_5_30[s_5_30271,11650
static const symbol s_5_31[s_5_31272,11722
static const symbol s_5_32[s_5_32273,11782
static const symbol s_5_33[s_5_33274,11842
static const symbol s_5_34[s_5_34275,11914
static const symbol s_5_35[s_5_35276,11974
static const struct among a_5[a_5278,12023
static const symbol s_6_0[s_6_0318,13237
static const symbol s_6_1[s_6_1319,13308
static const struct among a_6[a_6321,13392
static const symbol s_7_0[s_7_0327,13496
static const symbol s_7_1[s_7_1328,13567
static const symbol s_7_2[s_7_2329,13614
static const symbol s_7_3[s_7_3330,13697
static const struct among a_7[a_7332,13745
static const unsigned char g_v[g_v340,13913
static const symbol s_0[s_0342,13969
static const symbol s_1[s_1343,14013
static const symbol s_2[s_2344,14057
static const symbol s_3[s_3345,14101
static const symbol s_4[s_4346,14145
static const symbol s_5[s_5347,14189
static const symbol s_6[s_6348,14233
static const symbol s_7[s_7349,14277
static const symbol s_8[s_8350,14321
static const symbol s_9[s_9351,14365
static const symbol s_10[s_10352,14409
static const symbol s_11[s_11353,14454
static int r_mark_regions(355,14500
static int r_R2(387,15606
static int r_perfective_gerund(392,15780
static int r_adjective(421,16737
static int r_adjectival(431,17054
static int r_reflexive(467,18346
static int r_verb(478,18755
static int r_noun(507,19709
static int r_derivational(517,20025
static int r_tidy_up(531,20528
extern int russian_UTF_8_stem(565,21734
extern struct SN_env * russian_UTF_8_create_env(676,25693
extern void russian_UTF_8_close_env(678,25783

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_italian.c,10218
static const symbol s_0_1[s_0_134,810
static const symbol s_0_2[s_0_235,855
static const symbol s_0_3[s_0_336,902
static const symbol s_0_4[s_0_437,949
static const symbol s_0_5[s_0_538,996
static const symbol s_0_6[s_0_639,1043
static const struct among a_0[a_041,1091
static const symbol s_1_1[s_1_152,1345
static const symbol s_1_2[s_1_253,1385
static const struct among a_1[a_155,1426
static const symbol s_2_0[s_2_062,1556
static const symbol s_2_1[s_2_163,1601
static const symbol s_2_2[s_2_264,1656
static const symbol s_2_3[s_2_365,1721
static const symbol s_2_4[s_2_466,1776
static const symbol s_2_5[s_2_567,1831
static const symbol s_2_6[s_2_668,1886
static const symbol s_2_7[s_2_769,1931
static const symbol s_2_8[s_2_870,1986
static const symbol s_2_9[s_2_971,2051
static const symbol s_2_10[s_2_1072,2106
static const symbol s_2_11[s_2_1173,2162
static const symbol s_2_12[s_2_1274,2218
static const symbol s_2_13[s_2_1375,2264
static const symbol s_2_14[s_2_1476,2320
static const symbol s_2_15[s_2_1577,2386
static const symbol s_2_16[s_2_1678,2442
static const symbol s_2_17[s_2_1779,2498
static const symbol s_2_18[s_2_1880,2554
static const symbol s_2_19[s_2_1981,2610
static const symbol s_2_20[s_2_2082,2656
static const symbol s_2_21[s_2_2183,2702
static const symbol s_2_22[s_2_2284,2758
static const symbol s_2_23[s_2_2385,2824
static const symbol s_2_24[s_2_2486,2880
static const symbol s_2_25[s_2_2587,2936
static const symbol s_2_26[s_2_2688,2992
static const symbol s_2_27[s_2_2789,3043
static const symbol s_2_28[s_2_2890,3089
static const symbol s_2_29[s_2_2991,3135
static const symbol s_2_30[s_2_3092,3181
static const symbol s_2_31[s_2_3193,3227
static const symbol s_2_32[s_2_3294,3273
static const symbol s_2_33[s_2_3395,3329
static const symbol s_2_34[s_2_3496,3395
static const symbol s_2_35[s_2_3597,3451
static const symbol s_2_36[s_2_3698,3507
static const struct among a_2[a_2100,3564
static const symbol s_3_0[s_3_0141,4843
static const symbol s_3_1[s_3_1142,4898
static const symbol s_3_2[s_3_2143,4953
static const symbol s_3_3[s_3_3144,4998
static const symbol s_3_4[s_3_4145,5043
static const struct among a_3[a_3147,5089
static const symbol s_4_0[s_4_0156,5289
static const symbol s_4_1[s_4_1157,5334
static const symbol s_4_2[s_4_2158,5389
static const symbol s_4_3[s_4_3159,5434
static const struct among a_4[a_4161,5480
static const symbol s_5_0[s_5_0169,5651
static const symbol s_5_1[s_5_1170,5696
static const symbol s_5_2[s_5_2171,5751
static const struct among a_5[a_5173,5797
static const symbol s_6_0[s_6_0180,5933
static const symbol s_6_1[s_6_1181,5983
static const symbol s_6_2[s_6_2182,6043
static const symbol s_6_3[s_6_3183,6093
static const symbol s_6_4[s_6_4184,6148
static const symbol s_6_5[s_6_5185,6198
static const symbol s_6_6[s_6_6186,6253
static const symbol s_6_7[s_6_7187,6308
static const symbol s_6_8[s_6_8188,6358
static const symbol s_6_9[s_6_9189,6423
static const symbol s_6_10[s_6_10190,6478
static const symbol s_6_11[s_6_11191,6539
static const symbol s_6_12[s_6_12192,6600
static const symbol s_6_13[s_6_13193,6661
static const symbol s_6_14[s_6_14194,6727
static const symbol s_6_15[s_6_15195,6793
static const symbol s_6_16[s_6_16196,6859
static const symbol s_6_17[s_6_17197,6920
static const symbol s_6_18[s_6_18198,6971
static const symbol s_6_19[s_6_19199,7027
static const symbol s_6_20[s_6_20200,7088
static const symbol s_6_21[s_6_21201,7154
static const symbol s_6_22[s_6_22202,7210
static const symbol s_6_23[s_6_23203,7261
static const symbol s_6_24[s_6_24204,7317
static const symbol s_6_25[s_6_25205,7373
static const symbol s_6_26[s_6_26206,7424
static const symbol s_6_27[s_6_27207,7490
static const symbol s_6_28[s_6_28208,7546
static const symbol s_6_29[s_6_29209,7607
static const symbol s_6_30[s_6_30210,7668
static const symbol s_6_31[s_6_31211,7724
static const symbol s_6_32[s_6_32212,7790
static const symbol s_6_33[s_6_33213,7856
static const symbol s_6_34[s_6_34214,7922
static const symbol s_6_35[s_6_35215,7983
static const symbol s_6_36[s_6_36216,8034
static const symbol s_6_37[s_6_37217,8090
static const symbol s_6_38[s_6_38218,8156
static const symbol s_6_39[s_6_39219,8222
static const symbol s_6_40[s_6_40220,8278
static const symbol s_6_41[s_6_41221,8329
static const symbol s_6_42[s_6_42222,8380
static const symbol s_6_43[s_6_43223,8436
static const symbol s_6_44[s_6_44224,8487
static const symbol s_6_45[s_6_45225,8553
static const symbol s_6_46[s_6_46226,8619
static const symbol s_6_47[s_6_47227,8670
static const symbol s_6_48[s_6_48228,8728
static const symbol s_6_49[s_6_49229,8791
static const symbol s_6_50[s_6_50230,8854
static const struct among a_6[a_6232,8918
static const symbol s_7_0[s_7_0287,10631
static const symbol s_7_1[s_7_1288,10686
static const symbol s_7_2[s_7_2289,10741
static const symbol s_7_3[s_7_3290,10791
static const symbol s_7_4[s_7_4291,10841
static const symbol s_7_5[s_7_5292,10891
static const symbol s_7_6[s_7_6293,10941
static const symbol s_7_7[s_7_7294,10991
static const symbol s_7_8[s_7_8295,11041
static const symbol s_7_9[s_7_9296,11106
static const symbol s_7_10[s_7_10297,11171
static const symbol s_7_11[s_7_11298,11227
static const symbol s_7_12[s_7_12299,11283
static const symbol s_7_13[s_7_13300,11334
static const symbol s_7_14[s_7_14301,11385
static const symbol s_7_15[s_7_15302,11436
static const symbol s_7_16[s_7_16303,11492
static const symbol s_7_17[s_7_17304,11543
static const symbol s_7_18[s_7_18305,11604
static const symbol s_7_19[s_7_19306,11665
static const symbol s_7_20[s_7_20307,11726
static const symbol s_7_21[s_7_21308,11777
static const symbol s_7_22[s_7_22309,11838
static const symbol s_7_23[s_7_23310,11899
static const symbol s_7_24[s_7_24311,11950
static const symbol s_7_25[s_7_25312,12016
static const symbol s_7_26[s_7_26313,12082
static const symbol s_7_27[s_7_27314,12133
static const symbol s_7_28[s_7_28315,12189
static const symbol s_7_29[s_7_29316,12245
static const symbol s_7_30[s_7_30317,12301
static const symbol s_7_31[s_7_31318,12357
static const symbol s_7_32[s_7_32319,12413
static const symbol s_7_33[s_7_33320,12469
static const symbol s_7_34[s_7_34321,12525
static const symbol s_7_35[s_7_35322,12576
static const symbol s_7_36[s_7_36323,12627
static const symbol s_7_37[s_7_37324,12693
static const symbol s_7_38[s_7_38325,12759
static const symbol s_7_39[s_7_39326,12810
static const symbol s_7_40[s_7_40327,12861
static const symbol s_7_41[s_7_41328,12912
static const symbol s_7_42[s_7_42329,12963
static const symbol s_7_43[s_7_43330,13019
static const symbol s_7_44[s_7_44331,13075
static const symbol s_7_45[s_7_45332,13131
static const symbol s_7_46[s_7_46333,13187
static const symbol s_7_47[s_7_47334,13243
static const symbol s_7_48[s_7_48335,13304
static const symbol s_7_49[s_7_49336,13365
static const symbol s_7_50[s_7_50337,13426
static const symbol s_7_51[s_7_51338,13487
static const symbol s_7_52[s_7_52339,13548
static const symbol s_7_53[s_7_53340,13614
static const symbol s_7_54[s_7_54341,13670
static const symbol s_7_55[s_7_55342,13726
static const symbol s_7_56[s_7_56343,13792
static const symbol s_7_57[s_7_57344,13858
static const symbol s_7_58[s_7_58345,13914
static const symbol s_7_59[s_7_59346,13965
static const symbol s_7_60[s_7_60347,14031
static const symbol s_7_61[s_7_61348,14092
static const symbol s_7_62[s_7_62349,14153
static const symbol s_7_63[s_7_63350,14214
static const symbol s_7_64[s_7_64351,14280
static const symbol s_7_65[s_7_65352,14346
static const symbol s_7_66[s_7_66353,14397
static const symbol s_7_67[s_7_67354,14463
static const symbol s_7_68[s_7_68355,14524
static const symbol s_7_69[s_7_69356,14585
static const symbol s_7_70[s_7_70357,14646
static const symbol s_7_71[s_7_71358,14722
static const symbol s_7_72[s_7_72359,14798
static const symbol s_7_73[s_7_73360,14864
static const symbol s_7_74[s_7_74361,14930
static const symbol s_7_75[s_7_75362,14996
static const symbol s_7_76[s_7_76363,15047
static const symbol s_7_77[s_7_77364,15098
static const symbol s_7_78[s_7_78365,15149
static const symbol s_7_79[s_7_79366,15200
static const symbol s_7_80[s_7_80367,15251
static const symbol s_7_81[s_7_81368,15302
static const symbol s_7_82[s_7_82369,15348
static const symbol s_7_83[s_7_83370,15394
static const symbol s_7_84[s_7_84371,15452
static const symbol s_7_85[s_7_85372,15510
static const symbol s_7_86[s_7_86373,15568
static const struct among a_7[a_7375,15627
static const unsigned char g_v[g_v466,18529
static const unsigned char g_AEIO[g_AEIO468,18636
static const unsigned char g_CG[g_CG470,18742
static const symbol s_0[s_0472,18787
static const symbol s_1[s_1473,18831
static const symbol s_2[s_2474,18875
static const symbol s_3[s_3475,18919
static const symbol s_4[s_4476,18963
static const symbol s_5[s_5477,19007
static const symbol s_6[s_6478,19049
static const symbol s_7[s_7479,19086
static const symbol s_8[s_8480,19123
static const symbol s_9[s_9481,19160
static const symbol s_10[s_10482,19197
static const symbol s_11[s_11483,19235
static const symbol s_12[s_12484,19278
static const symbol s_13[s_13485,19326
static const symbol s_14[s_14486,19364
static const symbol s_15[s_15487,19417
static const symbol s_16[s_16488,19460
static const symbol s_17[s_17489,19503
static int r_prelude(491,19547
static int r_mark_regions(590,23091
static int r_postlude(672,26178
static int r_RV(708,27324
static int r_R1(713,27498
static int r_R2(718,27672
static int r_attached_pronoun(723,27846
static int r_standard_suffix(750,28843
static int r_verb_suffix(916,35772
static int r_vowel_suffix(932,36298
extern int italian_UTF_8_stem(977,38076
extern struct SN_env * italian_UTF_8_create_env(1030,39770
extern void italian_UTF_8_close_env(1032,39860

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_german.c,2209
static const symbol s_0_1[s_0_130,645
static const symbol s_0_2[s_0_231,685
static const symbol s_0_3[s_0_332,725
static const symbol s_0_4[s_0_433,766
static const symbol s_0_5[s_0_534,807
static const struct among a_0[a_036,849
static const symbol s_1_0[s_1_046,1072
static const symbol s_1_1[s_1_147,1112
static const symbol s_1_2[s_1_248,1157
static const symbol s_1_3[s_1_349,1202
static const symbol s_1_4[s_1_450,1252
static const symbol s_1_5[s_1_551,1297
static const symbol s_1_6[s_1_652,1337
static const struct among a_1[a_154,1383
static const symbol s_2_0[s_2_065,1646
static const symbol s_2_1[s_2_166,1691
static const symbol s_2_2[s_2_267,1736
static const symbol s_2_3[s_2_368,1781
static const struct among a_2[a_270,1832
static const symbol s_3_0[s_3_078,1999
static const symbol s_3_1[s_3_179,2044
static const struct among a_3[a_381,2100
static const symbol s_4_0[s_4_087,2204
static const symbol s_4_1[s_4_188,2254
static const symbol s_4_2[s_4_289,2299
static const symbol s_4_3[s_4_390,2349
static const symbol s_4_4[s_4_491,2404
static const symbol s_4_5[s_4_592,2459
static const symbol s_4_6[s_4_693,2504
static const symbol s_4_7[s_4_794,2559
static const struct among a_4[a_496,2615
static const unsigned char g_v[g_v108,2911
static const unsigned char g_s_ending[g_s_ending110,3015
static const unsigned char g_st_ending[g_st_ending112,3074
static const symbol s_0[s_0114,3134
static const symbol s_1[s_1115,3176
static const symbol s_2[s_2116,3213
static const symbol s_3[s_3117,3250
static const symbol s_4[s_4118,3287
static const symbol s_5[s_5119,3324
static const symbol s_6[s_6120,3361
static const symbol s_7[s_7121,3398
static const symbol s_8[s_8122,3445
static const symbol s_9[s_9123,3487
static const symbol s_10[s_10124,3529
static int r_prelude(126,3573
static int r_mark_regions(195,5885
static int r_postlude(235,7261
static int r_R1(278,8579
static int r_R2(283,8753
static int r_standard_suffix(288,8927
extern int german_ISO_8859_1_stem(465,16609
extern struct SN_env * german_ISO_8859_1_create_env(494,17463
extern void german_ISO_8859_1_close_env(496,17557

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_porter.c,4531
static const symbol s_0_0[s_0_035,832
static const symbol s_0_1[s_0_136,872
static const symbol s_0_2[s_0_237,922
static const symbol s_0_3[s_0_338,977
static const struct among a_0[a_040,1023
static const symbol s_1_1[s_1_148,1189
static const symbol s_1_2[s_1_249,1234
static const symbol s_1_3[s_1_350,1279
static const symbol s_1_4[s_1_451,1324
static const symbol s_1_5[s_1_552,1369
static const symbol s_1_6[s_1_653,1414
static const symbol s_1_7[s_1_754,1459
static const symbol s_1_8[s_1_855,1504
static const symbol s_1_9[s_1_956,1549
static const symbol s_1_10[s_1_1057,1594
static const symbol s_1_11[s_1_1158,1640
static const symbol s_1_12[s_1_1259,1686
static const struct among a_1[a_161,1733
static const symbol s_2_0[s_2_078,2177
static const symbol s_2_1[s_2_179,2222
static const symbol s_2_2[s_2_280,2272
static const struct among a_2[a_282,2323
static const symbol s_3_0[s_3_089,2458
static const symbol s_3_1[s_3_190,2513
static const symbol s_3_2[s_3_291,2568
static const symbol s_3_3[s_3_392,2623
static const symbol s_3_4[s_3_493,2673
static const symbol s_3_5[s_3_594,2728
static const symbol s_3_6[s_3_695,2788
static const symbol s_3_7[s_3_796,2848
static const symbol s_3_8[s_3_897,2908
static const symbol s_3_9[s_3_998,2973
static const symbol s_3_10[s_3_1099,3033
static const symbol s_3_11[s_3_11100,3099
static const symbol s_3_12[s_3_12101,3170
static const symbol s_3_13[s_3_13102,3231
static const symbol s_3_14[s_3_14103,3292
static const symbol s_3_15[s_3_15104,3363
static const symbol s_3_16[s_3_16105,3419
static const symbol s_3_17[s_3_17106,3475
static const symbol s_3_18[s_3_18107,3546
static const symbol s_3_19[s_3_19108,3617
static const struct among a_3[a_3110,3689
static const symbol s_4_0[s_4_0134,4386
static const symbol s_4_1[s_4_1135,4446
static const symbol s_4_2[s_4_2136,4506
static const symbol s_4_3[s_4_3137,4566
static const symbol s_4_4[s_4_4138,4626
static const symbol s_4_5[s_4_5139,4681
static const symbol s_4_6[s_4_6140,4731
static const struct among a_4[a_4142,4787
static const symbol s_5_0[s_5_0153,5051
static const symbol s_5_1[s_5_1154,5096
static const symbol s_5_2[s_5_2155,5151
static const symbol s_5_3[s_5_3156,5206
static const symbol s_5_4[s_5_4157,5261
static const symbol s_5_5[s_5_5158,5316
static const symbol s_5_6[s_5_6159,5366
static const symbol s_5_7[s_5_7160,5416
static const symbol s_5_8[s_5_8161,5466
static const symbol s_5_9[s_5_9162,5516
static const symbol s_5_10[s_5_10163,5561
static const symbol s_5_11[s_5_11164,5612
static const symbol s_5_12[s_5_12165,5663
static const symbol s_5_13[s_5_13166,5709
static const symbol s_5_14[s_5_14167,5760
static const symbol s_5_15[s_5_15168,5811
static const symbol s_5_16[s_5_16169,5862
static const symbol s_5_17[s_5_17170,5918
static const symbol s_5_18[s_5_18171,5979
static const struct among a_5[a_5173,6026
static const unsigned char g_v[g_v196,6684
static const unsigned char g_v_WXY[g_v_WXY198,6739
static const symbol s_0[s_0200,6802
static const symbol s_1[s_1201,6844
static const symbol s_2[s_2202,6881
static const symbol s_3[s_3203,6923
static const symbol s_4[s_4204,6960
static const symbol s_5[s_5205,6997
static const symbol s_6[s_6206,7034
static const symbol s_7[s_7207,7086
static const symbol s_8[s_8208,7138
static const symbol s_9[s_9209,7190
static const symbol s_10[s_10210,7242
static const symbol s_11[s_11211,7290
static const symbol s_12[s_12212,7328
static const symbol s_13[s_13213,7376
static const symbol s_14[s_14214,7424
static const symbol s_15[s_15215,7467
static const symbol s_16[s_16216,7515
static const symbol s_17[s_17217,7563
static const symbol s_18[s_18218,7611
static const symbol s_19[s_19219,7659
static const symbol s_20[s_20220,7702
static const symbol s_21[s_21221,7745
static const symbol s_22[s_22222,7783
static const symbol s_23[s_23223,7821
static int r_shortv(225,7860
static int r_R1(232,8174
static int r_R2(237,8348
static int r_Step_1a(242,8522
static int r_Step_1b(269,9369
static int r_Step_1c(344,12460
static int r_Step_2(368,13198
static int r_Step_3(448,15798
static int r_Step_4(478,16789
static int r_Step_5a(513,18022
static int r_Step_5b(546,19033
extern int porter_ISO_8859_1_stem(562,19558
extern struct SN_env * porter_ISO_8859_1_create_env(716,24739
extern void porter_ISO_8859_1_close_env(718,24833

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_finnish.c,5180
static const symbol s_0_0[s_0_035,843
static const symbol s_0_1[s_0_136,888
static const symbol s_0_2[s_0_237,938
static const symbol s_0_3[s_0_338,993
static const symbol s_0_4[s_0_439,1043
static const symbol s_0_5[s_0_540,1093
static const symbol s_0_6[s_0_641,1150
static const symbol s_0_7[s_0_742,1219
static const symbol s_0_8[s_0_843,1264
static const symbol s_0_9[s_0_944,1316
static const struct among a_0[a_046,1369
static const symbol s_1_0[s_1_060,1730
static const symbol s_1_1[s_1_161,1780
static const symbol s_1_2[s_1_262,1825
static const symbol s_1_3[s_1_363,1875
static const symbol s_1_4[s_1_464,1920
static const symbol s_1_5[s_1_565,1970
static const struct among a_1[a_167,2021
static const symbol s_2_0[s_2_077,2257
static const symbol s_2_1[s_2_178,2314
static const symbol s_2_2[s_2_279,2366
static const symbol s_2_3[s_2_380,2423
static const symbol s_2_4[s_2_481,2475
static const symbol s_2_5[s_2_582,2532
static const struct among a_2[a_284,2590
static const symbol s_3_0[s_3_094,2826
static const symbol s_3_1[s_3_195,2876
static const struct among a_3[a_397,2927
static const symbol s_4_0[s_4_0103,3033
static const symbol s_4_1[s_4_1104,3083
static const symbol s_4_2[s_4_2105,3133
static const symbol s_4_3[s_4_3106,3183
static const symbol s_4_4[s_4_4107,3228
static const symbol s_4_5[s_4_5108,3273
static const symbol s_4_6[s_4_6109,3318
static const symbol s_4_7[s_4_7110,3363
static const symbol s_4_8[s_4_8111,3415
static const struct among a_4[a_4113,3473
static const symbol s_5_0[s_5_0126,3801
static const symbol s_5_1[s_5_1127,3846
static const symbol s_5_2[s_5_2128,3891
static const symbol s_5_3[s_5_3129,3936
static const symbol s_5_4[s_5_4130,3981
static const symbol s_5_5[s_5_5131,4026
static const symbol s_5_6[s_5_6132,4085
static const struct among a_5[a_5134,4145
static const symbol s_6_0[s_6_0145,4416
static const symbol s_6_1[s_6_1146,4456
static const symbol s_6_2[s_6_2147,4506
static const symbol s_6_3[s_6_3148,4551
static const symbol s_6_4[s_6_4149,4601
static const symbol s_6_5[s_6_5150,4646
static const symbol s_6_6[s_6_6151,4696
static const symbol s_6_7[s_6_7152,4746
static const symbol s_6_8[s_6_8153,4796
static const symbol s_6_9[s_6_9154,4846
static const symbol s_6_10[s_6_10155,4896
static const symbol s_6_11[s_6_11156,4947
static const symbol s_6_12[s_6_12157,4988
static const symbol s_6_13[s_6_13158,5039
static const symbol s_6_14[s_6_14159,5090
static const symbol s_6_15[s_6_15160,5146
static const symbol s_6_16[s_6_16161,5197
static const symbol s_6_17[s_6_17162,5253
static const symbol s_6_18[s_6_18163,5304
static const symbol s_6_19[s_6_19164,5360
static const symbol s_6_20[s_6_20165,5411
static const symbol s_6_21[s_6_21166,5469
static const symbol s_6_22[s_6_22167,5527
static const symbol s_6_23[s_6_23168,5575
static const symbol s_6_24[s_6_24169,5633
static const symbol s_6_25[s_6_25170,5686
static const symbol s_6_26[s_6_26171,5744
static const symbol s_6_27[s_6_27172,5797
static const symbol s_6_28[s_6_28173,5855
static const symbol s_6_29[s_6_29174,5913
static const struct among a_6[a_6176,5972
static const symbol s_7_0[s_7_0210,7019
static const symbol s_7_1[s_7_1211,7069
static const symbol s_7_2[s_7_2212,7119
static const symbol s_7_3[s_7_3213,7174
static const symbol s_7_4[s_7_4214,7224
static const symbol s_7_5[s_7_5215,7279
static const symbol s_7_6[s_7_6216,7329
static const symbol s_7_7[s_7_7217,7384
static const symbol s_7_8[s_7_8218,7434
static const symbol s_7_9[s_7_9219,7489
static const symbol s_7_10[s_7_10220,7546
static const symbol s_7_11[s_7_11221,7604
static const symbol s_7_12[s_7_12222,7667
static const symbol s_7_13[s_7_13223,7725
static const struct among a_7[a_7225,7789
static const symbol s_8_0[s_8_0243,8286
static const symbol s_8_1[s_8_1244,8326
static const struct among a_8[a_8246,8367
static const symbol s_9_0[s_9_0252,8473
static const symbol s_9_1[s_9_1253,8523
static const struct among a_9[a_9255,8579
static const unsigned char g_AEI[g_AEI261,8683
static const unsigned char g_C[g_C263,8777
static const unsigned char g_V1[g_V1265,8835
static const unsigned char g_V2[g_V2267,8937
static const unsigned char g_particle_end[g_particle_end269,9039
static const symbol s_0[s_0271,9151
static const symbol s_1[s_1272,9198
static const symbol s_2[s_2273,9245
static const symbol s_3[s_3274,9289
static const symbol s_4[s_4275,9333
static const symbol s_5[s_5276,9375
static const symbol s_6[s_6277,9417
static int r_mark_regions(279,9460
static int r_R2(299,10264
static int r_particle_etc(304,10438
static int r_possessive(332,11345
static int r_LONG(398,13767
static int r_VI(403,13909
static int r_case_ending(410,14158
static int r_other_endings(482,16918
static int r_i_plural(510,17809
static int r_t_plural(527,18429
static int r_tidy(573,20087
extern int finnish_UTF_8_stem(658,23563
extern struct SN_env * finnish_UTF_8_create_env(719,25548
extern void finnish_UTF_8_close_env(721,25638

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_2_romanian.c,11471
static const symbol s_0_1[s_0_135,864
static const symbol s_0_2[s_0_236,904
static const struct among a_0[a_038,945
static const symbol s_1_0[s_1_045,1075
static const symbol s_1_1[s_1_146,1120
static const symbol s_1_2[s_1_247,1176
static const symbol s_1_3[s_1_348,1226
static const symbol s_1_4[s_1_449,1276
static const symbol s_1_5[s_1_550,1332
static const symbol s_1_6[s_1_651,1382
static const symbol s_1_7[s_1_752,1432
static const symbol s_1_8[s_1_853,1487
static const symbol s_1_9[s_1_954,1537
static const symbol s_1_10[s_1_1055,1592
static const symbol s_1_11[s_1_1156,1638
static const symbol s_1_12[s_1_1257,1694
static const symbol s_1_13[s_1_1358,1740
static const symbol s_1_14[s_1_1459,1796
static const symbol s_1_15[s_1_1560,1852
static const struct among a_1[a_162,1914
static const symbol s_2_0[s_2_082,2472
static const symbol s_2_1[s_2_183,2532
static const symbol s_2_2[s_2_284,2592
static const symbol s_2_3[s_2_385,2652
static const symbol s_2_4[s_2_486,2712
static const symbol s_2_5[s_2_587,2772
static const symbol s_2_6[s_2_688,2838
static const symbol s_2_7[s_2_789,2904
static const symbol s_2_8[s_2_890,2969
static const symbol s_2_9[s_2_991,3034
static const symbol s_2_10[s_2_1092,3100
static const symbol s_2_11[s_2_1193,3171
static const symbol s_2_12[s_2_1294,3252
static const symbol s_2_13[s_2_1395,3333
static const symbol s_2_14[s_2_1496,3404
static const symbol s_2_15[s_2_1597,3465
static const symbol s_2_16[s_2_1698,3526
static const symbol s_2_17[s_2_1799,3587
static const symbol s_2_18[s_2_18100,3648
static const symbol s_2_19[s_2_19101,3709
static const symbol s_2_20[s_2_20102,3780
static const symbol s_2_21[s_2_21103,3841
static const symbol s_2_22[s_2_22104,3903
static const symbol s_2_23[s_2_23105,3974
static const symbol s_2_24[s_2_24106,4055
static const symbol s_2_25[s_2_25107,4126
static const symbol s_2_26[s_2_26108,4187
static const symbol s_2_27[s_2_27109,4248
static const symbol s_2_28[s_2_28110,4309
static const symbol s_2_29[s_2_29111,4376
static const symbol s_2_30[s_2_30112,4453
static const symbol s_2_31[s_2_31113,4520
static const symbol s_2_32[s_2_32114,4593
static const symbol s_2_33[s_2_33115,4676
static const symbol s_2_34[s_2_34116,4749
static const symbol s_2_35[s_2_35117,4805
static const symbol s_2_36[s_2_36118,4861
static const symbol s_2_37[s_2_37119,4927
static const symbol s_2_38[s_2_38120,4983
static const symbol s_2_39[s_2_39121,5040
static const symbol s_2_40[s_2_40122,5096
static const symbol s_2_41[s_2_41123,5152
static const symbol s_2_42[s_2_42124,5208
static const symbol s_2_43[s_2_43125,5270
static const symbol s_2_44[s_2_44126,5332
static const symbol s_2_45[s_2_45127,5394
static const struct among a_2[a_2129,5457
static const symbol s_3_0[s_3_0179,7006
static const symbol s_3_1[s_3_1180,7056
static const symbol s_3_2[s_3_2181,7116
static const symbol s_3_3[s_3_3182,7176
static const symbol s_3_4[s_3_4183,7231
static const symbol s_3_5[s_3_5184,7281
static const symbol s_3_6[s_3_6185,7331
static const symbol s_3_7[s_3_7186,7386
static const symbol s_3_8[s_3_8187,7441
static const symbol s_3_9[s_3_9188,7491
static const symbol s_3_10[s_3_10189,7541
static const symbol s_3_11[s_3_11190,7587
static const symbol s_3_12[s_3_12191,7638
static const symbol s_3_13[s_3_13192,7699
static const symbol s_3_14[s_3_14193,7760
static const symbol s_3_15[s_3_15194,7816
static const symbol s_3_16[s_3_16195,7872
static const symbol s_3_17[s_3_17196,7928
static const symbol s_3_18[s_3_18197,7979
static const symbol s_3_19[s_3_19198,8040
static const symbol s_3_20[s_3_20199,8091
static const symbol s_3_21[s_3_21200,8147
static const symbol s_3_22[s_3_22201,8203
static const symbol s_3_23[s_3_23202,8254
static const symbol s_3_24[s_3_24203,8305
static const symbol s_3_25[s_3_25204,8356
static const symbol s_3_26[s_3_26205,8417
static const symbol s_3_27[s_3_27206,8478
static const symbol s_3_28[s_3_28207,8534
static const symbol s_3_29[s_3_29208,8595
static const symbol s_3_30[s_3_30209,8646
static const symbol s_3_31[s_3_31210,8697
static const symbol s_3_32[s_3_32211,8758
static const symbol s_3_33[s_3_33212,8809
static const symbol s_3_34[s_3_34213,8865
static const symbol s_3_35[s_3_35214,8921
static const symbol s_3_36[s_3_36215,8972
static const symbol s_3_37[s_3_37216,9029
static const symbol s_3_38[s_3_38217,9080
static const symbol s_3_39[s_3_39218,9132
static const symbol s_3_40[s_3_40219,9189
static const symbol s_3_41[s_3_41220,9252
static const symbol s_3_42[s_3_42221,9308
static const symbol s_3_43[s_3_43222,9364
static const symbol s_3_44[s_3_44223,9415
static const symbol s_3_45[s_3_45224,9471
static const symbol s_3_46[s_3_46225,9517
static const symbol s_3_47[s_3_47226,9563
static const symbol s_3_48[s_3_48227,9609
static const symbol s_3_49[s_3_49228,9660
static const symbol s_3_50[s_3_50229,9711
static const symbol s_3_51[s_3_51230,9757
static const symbol s_3_52[s_3_52231,9803
static const symbol s_3_53[s_3_53232,9855
static const symbol s_3_54[s_3_54233,9917
static const symbol s_3_55[s_3_55234,9979
static const symbol s_3_56[s_3_56235,10036
static const symbol s_3_57[s_3_57236,10088
static const symbol s_3_58[s_3_58237,10140
static const symbol s_3_59[s_3_59238,10197
static const symbol s_3_60[s_3_60239,10254
static const symbol s_3_61[s_3_61240,10306
static const struct among a_3[a_3242,10359
static const symbol s_4_0[s_4_0308,12436
static const symbol s_4_1[s_4_1309,12481
static const symbol s_4_2[s_4_2310,12526
static const symbol s_4_3[s_4_3311,12576
static const symbol s_4_4[s_4_4312,12627
static const symbol s_4_5[s_4_5313,12677
static const symbol s_4_6[s_4_6314,12728
static const symbol s_4_7[s_4_7315,12778
static const symbol s_4_8[s_4_8316,12828
static const symbol s_4_9[s_4_9317,12878
static const symbol s_4_10[s_4_10318,12929
static const symbol s_4_11[s_4_11319,12975
static const symbol s_4_12[s_4_12320,13026
static const symbol s_4_13[s_4_13321,13082
static const symbol s_4_14[s_4_14322,13133
static const symbol s_4_15[s_4_15323,13184
static const symbol s_4_16[s_4_16324,13236
static const symbol s_4_17[s_4_17325,13293
static const symbol s_4_18[s_4_18326,13351
static const symbol s_4_19[s_4_19327,13402
static const symbol s_4_20[s_4_20328,13448
static const symbol s_4_21[s_4_21329,13499
static const symbol s_4_22[s_4_22330,13550
static const symbol s_4_23[s_4_23331,13601
static const symbol s_4_24[s_4_24332,13658
static const symbol s_4_25[s_4_25333,13716
static const symbol s_4_26[s_4_26334,13762
static const symbol s_4_27[s_4_27335,13813
static const symbol s_4_28[s_4_28336,13865
static const symbol s_4_29[s_4_29337,13922
static const symbol s_4_30[s_4_30338,13984
static const symbol s_4_31[s_4_31339,14051
static const symbol s_4_32[s_4_32340,14113
static const symbol s_4_33[s_4_33341,14175
static const symbol s_4_34[s_4_34342,14238
static const symbol s_4_35[s_4_35343,14290
static const symbol s_4_36[s_4_36344,14342
static const symbol s_4_37[s_4_37345,14395
static const symbol s_4_38[s_4_38346,14442
static const symbol s_4_39[s_4_39347,14494
static const symbol s_4_40[s_4_40348,14551
static const symbol s_4_41[s_4_41349,14608
static const symbol s_4_42[s_4_42350,14660
static const symbol s_4_43[s_4_43351,14712
static const symbol s_4_44[s_4_44352,14765
static const symbol s_4_45[s_4_45353,14828
static const symbol s_4_46[s_4_46354,14896
static const symbol s_4_47[s_4_47355,14969
static const symbol s_4_48[s_4_48356,15047
static const symbol s_4_49[s_4_49357,15120
static const symbol s_4_50[s_4_50358,15193
static const symbol s_4_51[s_4_51359,15267
static const symbol s_4_52[s_4_52360,15330
static const symbol s_4_53[s_4_53361,15393
static const symbol s_4_54[s_4_54362,15457
static const symbol s_4_55[s_4_55363,15503
static const symbol s_4_56[s_4_56364,15554
static const symbol s_4_57[s_4_57365,15605
static const symbol s_4_58[s_4_58366,15651
static const symbol s_4_59[s_4_59367,15707
static const symbol s_4_60[s_4_60368,15768
static const symbol s_4_61[s_4_61369,15824
static const symbol s_4_62[s_4_62370,15880
static const symbol s_4_63[s_4_63371,15937
static const symbol s_4_64[s_4_64372,15983
static const symbol s_4_65[s_4_65373,16030
static const symbol s_4_66[s_4_66374,16077
static const symbol s_4_67[s_4_67375,16134
static const symbol s_4_68[s_4_68376,16196
static const symbol s_4_69[s_4_69377,16263
static const symbol s_4_70[s_4_70378,16335
static const symbol s_4_71[s_4_71379,16402
static const symbol s_4_72[s_4_72380,16469
static const symbol s_4_73[s_4_73381,16537
static const symbol s_4_74[s_4_74382,16594
static const symbol s_4_75[s_4_75383,16651
static const symbol s_4_76[s_4_76384,16709
static const symbol s_4_77[s_4_77385,16755
static const symbol s_4_78[s_4_78386,16806
static const symbol s_4_79[s_4_79387,16857
static const symbol s_4_80[s_4_80388,16913
static const symbol s_4_81[s_4_81389,16970
static const symbol s_4_82[s_4_82390,17016
static const symbol s_4_83[s_4_83391,17078
static const symbol s_4_84[s_4_84392,17130
static const symbol s_4_85[s_4_85393,17187
static const symbol s_4_86[s_4_86394,17249
static const symbol s_4_87[s_4_87395,17316
static const symbol s_4_88[s_4_88396,17378
static const symbol s_4_89[s_4_89397,17440
static const symbol s_4_90[s_4_90398,17503
static const symbol s_4_91[s_4_91399,17555
static const symbol s_4_92[s_4_92400,17607
static const symbol s_4_93[s_4_93401,17660
static const struct among a_4[a_4403,17718
static const symbol s_5_0[s_5_0501,20851
static const symbol s_5_1[s_5_1502,20891
static const symbol s_5_2[s_5_2503,20931
static const symbol s_5_3[s_5_3504,20976
static const symbol s_5_4[s_5_4505,21016
static const struct among a_5[a_5507,21058
static const unsigned char g_v[g_v516,21257
static const symbol s_0[s_0518,21355
static const symbol s_1[s_1519,21392
static const symbol s_2[s_2520,21429
static const symbol s_3[s_3521,21466
static const symbol s_4[s_4522,21503
static const symbol s_5[s_5523,21540
static const symbol s_6[s_6524,21577
static const symbol s_7[s_7525,21614
static const symbol s_8[s_8526,21656
static const symbol s_9[s_9527,21693
static const symbol s_10[s_10528,21735
static const symbol s_11[s_11529,21784
static const symbol s_12[s_12530,21837
static const symbol s_13[s_13531,21890
static const symbol s_14[s_14532,21933
static const symbol s_15[s_15533,21976
static const symbol s_16[s_16534,22019
static const symbol s_17[s_17535,22062
static const symbol s_18[s_18536,22100
static int r_prelude(538,22149
static int r_mark_regions(581,23643
static int r_postlude(661,26614
static int r_RV(695,27670
static int r_R1(700,27844
static int r_R2(705,28018
static int r_step_0(710,28192
static int r_combo_suffix(766,30054
static int r_standard_suffix(814,31748
static int r_verb_suffix(860,33238
static int r_vowel_suffix(896,34553
extern int romanian_ISO_8859_2_stem(909,34967
extern struct SN_env * romanian_ISO_8859_2_create_env(965,36777
extern void romanian_ISO_8859_2_close_env(967,36873

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_portuguese.c,9712
static const symbol s_0_1[s_0_134,819
static const symbol s_0_2[s_0_235,866
static const struct among a_0[a_037,914
static const symbol s_1_1[s_1_144,1044
static const symbol s_1_2[s_1_245,1089
static const struct among a_1[a_147,1135
static const symbol s_2_0[s_2_054,1265
static const symbol s_2_1[s_2_155,1310
static const symbol s_2_2[s_2_256,1355
static const symbol s_2_3[s_2_357,1400
static const struct among a_2[a_259,1446
static const symbol s_3_0[s_3_067,1617
static const symbol s_3_1[s_3_168,1672
static const symbol s_3_2[s_3_269,1727
static const struct among a_3[a_371,1790
static const symbol s_4_0[s_4_078,1926
static const symbol s_4_1[s_4_179,1971
static const symbol s_4_2[s_4_280,2026
static const struct among a_4[a_482,2072
static const symbol s_5_0[s_5_089,2208
static const symbol s_5_1[s_5_190,2258
static const symbol s_5_2[s_5_291,2325
static const symbol s_5_3[s_5_392,2392
static const symbol s_5_4[s_5_493,2452
static const symbol s_5_5[s_5_594,2502
static const symbol s_5_6[s_5_695,2562
static const symbol s_5_7[s_5_796,2612
static const symbol s_5_8[s_5_897,2667
static const symbol s_5_9[s_5_998,2717
static const symbol s_5_10[s_5_1099,2767
static const symbol s_5_11[s_5_11100,2828
static const symbol s_5_12[s_5_12101,2884
static const symbol s_5_13[s_5_13102,2945
static const symbol s_5_14[s_5_14103,3011
static const symbol s_5_15[s_5_15104,3074
static const symbol s_5_16[s_5_16105,3137
static const symbol s_5_17[s_5_17106,3188
static const symbol s_5_18[s_5_18107,3244
static const symbol s_5_19[s_5_19108,3295
static const symbol s_5_20[s_5_20109,3361
static const symbol s_5_21[s_5_21110,3427
static const symbol s_5_22[s_5_22111,3478
static const symbol s_5_23[s_5_23112,3546
static const symbol s_5_24[s_5_24113,3614
static const symbol s_5_25[s_5_25114,3670
static const symbol s_5_26[s_5_26115,3726
static const symbol s_5_27[s_5_27116,3799
static const symbol s_5_28[s_5_28117,3865
static const symbol s_5_29[s_5_29118,3921
static const symbol s_5_30[s_5_30119,3987
static const symbol s_5_31[s_5_31120,4043
static const symbol s_5_32[s_5_32121,4104
static const symbol s_5_33[s_5_33122,4160
static const symbol s_5_34[s_5_34123,4216
static const symbol s_5_35[s_5_35124,4282
static const symbol s_5_36[s_5_36125,4348
static const symbol s_5_37[s_5_37126,4409
static const symbol s_5_38[s_5_38127,4482
static const symbol s_5_39[s_5_39128,4555
static const symbol s_5_40[s_5_40129,4611
static const symbol s_5_41[s_5_41130,4672
static const symbol s_5_42[s_5_42131,4728
static const symbol s_5_43[s_5_43132,4799
static const symbol s_5_44[s_5_44133,4870
static const struct among a_5[a_5135,4927
static const symbol s_6_0[s_6_0184,6443
static const symbol s_6_1[s_6_1185,6493
static const symbol s_6_2[s_6_2186,6543
static const symbol s_6_3[s_6_3187,6588
static const symbol s_6_4[s_6_4188,6643
static const symbol s_6_5[s_6_5189,6698
static const symbol s_6_6[s_6_6190,6753
static const symbol s_6_7[s_6_7191,6803
static const symbol s_6_8[s_6_8192,6853
static const symbol s_6_9[s_6_9193,6903
static const symbol s_6_10[s_6_10194,6953
static const symbol s_6_11[s_6_11195,7009
static const symbol s_6_12[s_6_12196,7065
static const symbol s_6_13[s_6_13197,7121
static const symbol s_6_14[s_6_14198,7177
static const symbol s_6_15[s_6_15199,7233
static const symbol s_6_16[s_6_16200,7289
static const symbol s_6_17[s_6_17201,7335
static const symbol s_6_18[s_6_18202,7391
static const symbol s_6_19[s_6_19203,7447
static const symbol s_6_20[s_6_20204,7503
static const symbol s_6_21[s_6_21205,7549
static const symbol s_6_22[s_6_22206,7600
static const symbol s_6_23[s_6_23207,7661
static const symbol s_6_24[s_6_24208,7722
static const symbol s_6_25[s_6_25209,7783
static const symbol s_6_26[s_6_26210,7839
static const symbol s_6_27[s_6_27211,7895
static const symbol s_6_28[s_6_28212,7951
static const symbol s_6_29[s_6_29213,8007
static const symbol s_6_30[s_6_30214,8053
static const symbol s_6_31[s_6_31215,8109
static const symbol s_6_32[s_6_32216,8165
static const symbol s_6_33[s_6_33217,8221
static const symbol s_6_34[s_6_34218,8282
static const symbol s_6_35[s_6_35219,8343
static const symbol s_6_36[s_6_36220,8404
static const symbol s_6_37[s_6_37221,8455
static const symbol s_6_38[s_6_38222,8506
static const symbol s_6_39[s_6_39223,8562
static const symbol s_6_40[s_6_40224,8618
static const symbol s_6_41[s_6_41225,8674
static const symbol s_6_42[s_6_42226,8735
static const symbol s_6_43[s_6_43227,8796
static const symbol s_6_44[s_6_44228,8857
static const symbol s_6_45[s_6_45229,8903
static const symbol s_6_46[s_6_46230,8949
static const symbol s_6_47[s_6_47231,8995
static const symbol s_6_48[s_6_48232,9041
static const symbol s_6_49[s_6_49233,9097
static const symbol s_6_50[s_6_50234,9153
static const symbol s_6_51[s_6_51235,9204
static const symbol s_6_52[s_6_52236,9265
static const symbol s_6_53[s_6_53237,9326
static const symbol s_6_54[s_6_54238,9387
static const symbol s_6_55[s_6_55239,9443
static const symbol s_6_56[s_6_56240,9499
static const symbol s_6_57[s_6_57241,9555
static const symbol s_6_58[s_6_58242,9611
static const symbol s_6_59[s_6_59243,9657
static const symbol s_6_60[s_6_60244,9718
static const symbol s_6_61[s_6_61245,9779
static const symbol s_6_62[s_6_62246,9840
static const symbol s_6_63[s_6_63247,9896
static const symbol s_6_64[s_6_64248,9952
static const symbol s_6_65[s_6_65249,10008
static const symbol s_6_66[s_6_66250,10069
static const symbol s_6_67[s_6_67251,10130
static const symbol s_6_68[s_6_68252,10191
static const symbol s_6_69[s_6_69253,10252
static const symbol s_6_70[s_6_70254,10313
static const symbol s_6_71[s_6_71255,10374
static const symbol s_6_72[s_6_72256,10420
static const symbol s_6_73[s_6_73257,10471
static const symbol s_6_74[s_6_74258,10522
static const symbol s_6_75[s_6_75259,10583
static const symbol s_6_76[s_6_76260,10644
static const symbol s_6_77[s_6_77261,10705
static const symbol s_6_78[s_6_78262,10773
static const symbol s_6_79[s_6_79263,10841
static const symbol s_6_80[s_6_80264,10909
static const symbol s_6_81[s_6_81265,10982
static const symbol s_6_82[s_6_82266,11055
static const symbol s_6_83[s_6_83267,11128
static const symbol s_6_84[s_6_84268,11196
static const symbol s_6_85[s_6_85269,11259
static const symbol s_6_86[s_6_86270,11332
static const symbol s_6_87[s_6_87271,11405
static const symbol s_6_88[s_6_88272,11478
static const symbol s_6_89[s_6_89273,11534
static const symbol s_6_90[s_6_90274,11590
static const symbol s_6_91[s_6_91275,11646
static const symbol s_6_92[s_6_92276,11719
static const symbol s_6_93[s_6_93277,11792
static const symbol s_6_94[s_6_94278,11865
static const symbol s_6_95[s_6_95279,11938
static const symbol s_6_96[s_6_96280,12006
static const symbol s_6_97[s_6_97281,12084
static const symbol s_6_98[s_6_98282,12162
static const symbol s_6_99[s_6_99283,12240
static const symbol s_6_100[s_6_100284,12296
static const symbol s_6_101[s_6_101285,12363
static const symbol s_6_102[s_6_102286,12430
static const symbol s_6_103[s_6_103287,12497
static const symbol s_6_104[s_6_104288,12576
static const symbol s_6_105[s_6_105289,12655
static const symbol s_6_106[s_6_106290,12734
static const symbol s_6_107[s_6_107291,12791
static const symbol s_6_108[s_6_108292,12853
static const symbol s_6_109[s_6_109293,12915
static const symbol s_6_110[s_6_110294,12977
static const symbol s_6_111[s_6_111295,13041
static const symbol s_6_112[s_6_112296,13105
static const symbol s_6_113[s_6_113297,13169
static const symbol s_6_114[s_6_114298,13233
static const symbol s_6_115[s_6_115299,13280
static const symbol s_6_116[s_6_116300,13327
static const symbol s_6_117[s_6_117301,13374
static const symbol s_6_118[s_6_118302,13433
static const symbol s_6_119[s_6_119303,13492
static const struct among a_6[a_6305,13552
static const symbol s_7_0[s_7_0429,17561
static const symbol s_7_1[s_7_1430,17601
static const symbol s_7_2[s_7_2431,17641
static const symbol s_7_3[s_7_3432,17681
static const symbol s_7_4[s_7_4433,17726
static const symbol s_7_5[s_7_5434,17773
static const symbol s_7_6[s_7_6435,17820
static const struct among a_7[a_7437,17868
static const symbol s_8_0[s_8_0448,18132
static const symbol s_8_1[s_8_1449,18172
static const symbol s_8_2[s_8_2450,18219
static const symbol s_8_3[s_8_3451,18266
static const struct among a_8[a_8453,18314
static const unsigned char g_v[g_v461,18482
static const symbol s_0[s_0463,18587
static const symbol s_1[s_1464,18629
static const symbol s_2[s_2465,18671
static const symbol s_3[s_3466,18715
static const symbol s_4[s_4467,18759
static const symbol s_5[s_5468,18806
static const symbol s_6[s_6469,18843
static const symbol s_7[s_7470,18895
static const symbol s_8[s_8471,18937
static const symbol s_9[s_9472,18979
static const symbol s_10[s_10473,19021
static int r_prelude(475,19060
static int r_mark_regions(511,20211
static int r_postlude(593,23298
static int r_RV(629,24423
static int r_R1(634,24597
static int r_R2(639,24771
static int r_standard_suffix(644,24945
static int r_verb_suffix(804,31699
static int r_residual_suffix(820,32226
static int r_residual_form(833,32643
extern int portuguese_UTF_8_stem(886,34699
extern struct SN_env * portuguese_UTF_8_create_env(966,37723
extern void portuguese_UTF_8_close_env(968,37816

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_french.c,8963
static const symbol s_0_0[s_0_036,893
static const symbol s_0_1[s_0_137,943
static const symbol s_0_2[s_0_238,993
static const struct among a_0[a_040,1044
static const symbol s_1_1[s_1_147,1183
static const symbol s_1_2[s_1_248,1223
static const symbol s_1_3[s_1_349,1268
static const symbol s_1_4[s_1_450,1313
static const symbol s_1_5[s_1_551,1353
static const symbol s_1_6[s_1_652,1393
static const struct among a_1[a_154,1434
static const symbol s_2_0[s_2_065,1688
static const symbol s_2_1[s_2_166,1738
static const symbol s_2_2[s_2_267,1788
static const symbol s_2_3[s_2_368,1845
static const symbol s_2_4[s_2_469,1902
static const symbol s_2_5[s_2_570,1952
static const struct among a_2[a_272,1998
static const symbol s_3_0[s_3_082,2230
static const symbol s_3_1[s_3_183,2275
static const symbol s_3_2[s_3_284,2330
static const struct among a_3[a_386,2376
static const symbol s_4_0[s_4_093,2512
static const symbol s_4_1[s_4_194,2567
static const symbol s_4_2[s_4_295,2632
static const symbol s_4_3[s_4_396,2687
static const symbol s_4_4[s_4_497,2742
static const symbol s_4_5[s_4_598,2802
static const symbol s_4_6[s_4_699,2857
static const symbol s_4_7[s_4_7100,2912
static const symbol s_4_8[s_4_8101,2967
static const symbol s_4_9[s_4_9102,3022
static const symbol s_4_10[s_4_10103,3072
static const symbol s_4_11[s_4_11104,3118
static const symbol s_4_12[s_4_12105,3179
static const symbol s_4_13[s_4_13106,3240
static const symbol s_4_14[s_4_14107,3301
static const symbol s_4_15[s_4_15108,3362
static const symbol s_4_16[s_4_16109,3423
static const symbol s_4_17[s_4_17110,3494
static const symbol s_4_18[s_4_18111,3555
static const symbol s_4_19[s_4_19112,3616
static const symbol s_4_20[s_4_20113,3682
static const symbol s_4_21[s_4_21114,3743
static const symbol s_4_22[s_4_22115,3804
static const symbol s_4_23[s_4_23116,3865
static const symbol s_4_24[s_4_24117,3926
static const symbol s_4_25[s_4_25118,3982
static const symbol s_4_26[s_4_26119,4033
static const symbol s_4_27[s_4_27120,4099
static const symbol s_4_28[s_4_28121,4165
static const symbol s_4_29[s_4_29122,4231
static const symbol s_4_30[s_4_30123,4297
static const symbol s_4_31[s_4_31124,4358
static const symbol s_4_32[s_4_32125,4424
static const symbol s_4_33[s_4_33126,4505
static const symbol s_4_34[s_4_34127,4568
static const symbol s_4_35[s_4_35128,4624
static const symbol s_4_36[s_4_36129,4685
static const symbol s_4_37[s_4_37130,4761
static const symbol s_4_38[s_4_38131,4827
static const symbol s_4_39[s_4_39132,4893
static const symbol s_4_40[s_4_40133,4944
static const symbol s_4_41[s_4_41134,5000
static const symbol s_4_42[s_4_42135,5051
static const struct among a_4[a_4137,5110
static const symbol s_5_0[s_5_0184,6569
static const symbol s_5_1[s_5_1185,6619
static const symbol s_5_2[s_5_2186,6664
static const symbol s_5_3[s_5_3187,6719
static const symbol s_5_4[s_5_4188,6789
static const symbol s_5_5[s_5_5189,6829
static const symbol s_5_6[s_5_6190,6884
static const symbol s_5_7[s_5_7191,6929
static const symbol s_5_8[s_5_8192,6984
static const symbol s_5_9[s_5_9193,7034
static const symbol s_5_10[s_5_10194,7096
static const symbol s_5_11[s_5_11195,7157
static const symbol s_5_12[s_5_12196,7233
static const symbol s_5_13[s_5_13197,7296
static const symbol s_5_14[s_5_14198,7342
static const symbol s_5_15[s_5_15199,7403
static const symbol s_5_16[s_5_16200,7469
static const symbol s_5_17[s_5_17201,7535
static const symbol s_5_18[s_5_18202,7606
static const symbol s_5_19[s_5_19203,7667
static const symbol s_5_20[s_5_20204,7733
static const symbol s_5_21[s_5_21205,7804
static const symbol s_5_22[s_5_22206,7850
static const symbol s_5_23[s_5_23207,7911
static const symbol s_5_24[s_5_24208,7977
static const symbol s_5_25[s_5_25209,8043
static const symbol s_5_26[s_5_26210,8114
static const symbol s_5_27[s_5_27211,8190
static const symbol s_5_28[s_5_28212,8251
static const symbol s_5_29[s_5_29213,8317
static const symbol s_5_30[s_5_30214,8378
static const symbol s_5_31[s_5_31215,8431
static const symbol s_5_32[s_5_32216,8492
static const symbol s_5_33[s_5_33217,8558
static const symbol s_5_34[s_5_34218,8614
static const struct among a_5[a_5220,8676
static const symbol s_6_0[s_6_0259,9861
static const symbol s_6_1[s_6_1260,9901
static const symbol s_6_2[s_6_2261,9951
static const symbol s_6_3[s_6_3262,10006
static const symbol s_6_4[s_6_4263,10061
static const symbol s_6_5[s_6_5264,10113
static const symbol s_6_6[s_6_6265,10158
static const symbol s_6_7[s_6_7266,10213
static const symbol s_6_8[s_6_8267,10258
static const symbol s_6_9[s_6_9268,10303
static const symbol s_6_10[s_6_10269,10358
static const symbol s_6_11[s_6_11270,10421
static const symbol s_6_12[s_6_12271,10482
static const symbol s_6_13[s_6_13272,10543
static const symbol s_6_14[s_6_14273,10606
static const symbol s_6_15[s_6_15274,10664
static const symbol s_6_16[s_6_16275,10715
static const symbol s_6_17[s_6_17276,10776
static const symbol s_6_18[s_6_18277,10832
static const symbol s_6_19[s_6_19278,10898
static const symbol s_6_20[s_6_20279,10969
static const symbol s_6_21[s_6_21280,11030
static const symbol s_6_22[s_6_22281,11086
static const symbol s_6_23[s_6_23282,11139
static const symbol s_6_24[s_6_24283,11190
static const symbol s_6_25[s_6_25284,11251
static const symbol s_6_26[s_6_26285,11302
static const symbol s_6_27[s_6_27286,11363
static const symbol s_6_28[s_6_28287,11434
static const symbol s_6_29[s_6_29288,11502
static const symbol s_6_30[s_6_30289,11568
static const symbol s_6_31[s_6_31290,11629
static const symbol s_6_32[s_6_32291,11682
static const symbol s_6_33[s_6_33292,11728
static const symbol s_6_34[s_6_34293,11779
static const symbol s_6_35[s_6_35294,11840
static const symbol s_6_36[s_6_36295,11906
static const symbol s_6_37[s_6_37296,11962
static const struct among a_6[a_6298,12011
static const symbol s_7_0[s_7_0340,13293
static const symbol s_7_1[s_7_1341,13333
static const symbol s_7_2[s_7_2342,13395
static const symbol s_7_3[s_7_3343,13457
static const symbol s_7_4[s_7_4344,13507
static const symbol s_7_5[s_7_5345,13557
static const struct among a_7[a_7347,13608
static const symbol s_8_0[s_8_0357,13838
static const symbol s_8_1[s_8_1358,13888
static const symbol s_8_2[s_8_2359,13943
static const symbol s_8_3[s_8_3360,13993
static const symbol s_8_4[s_8_4361,14043
static const struct among a_8[a_8363,14094
static const unsigned char g_v[g_v372,14299
static const unsigned char g_keep_with_s[g_keep_with_s374,14408
static const symbol s_0[s_0376,14513
static const symbol s_1[s_1377,14550
static const symbol s_2[s_2378,14587
static const symbol s_3[s_3379,14624
static const symbol s_4[s_4380,14668
static const symbol s_5[s_5381,14710
static const symbol s_6[s_6382,14754
static const symbol s_7[s_7383,14796
static const symbol s_8[s_8384,14833
static const symbol s_9[s_9385,14870
static const symbol s_10[s_10386,14907
static const symbol s_11[s_11387,14945
static const symbol s_12[s_12388,14983
static const symbol s_13[s_13389,15028
static const symbol s_14[s_14390,15073
static const symbol s_15[s_15391,15116
static const symbol s_16[s_16392,15164
static const symbol s_17[s_17393,15212
static const symbol s_18[s_18394,15250
static const symbol s_19[s_19395,15298
static const symbol s_20[s_20396,15341
static const symbol s_21[s_21397,15389
static const symbol s_22[s_22398,15427
static const symbol s_23[s_23399,15475
static const symbol s_24[s_24400,15523
static const symbol s_25[s_25401,15566
static const symbol s_26[s_26402,15609
static const symbol s_27[s_27403,15657
static const symbol s_28[s_28404,15705
static const symbol s_29[s_29405,15748
static const symbol s_30[s_30406,15796
static const symbol s_31[s_31407,15844
static const symbol s_32[s_32408,15892
static const symbol s_33[s_33409,15935
static const symbol s_34[s_34410,15973
static const symbol s_35[s_35411,16018
static const symbol s_36[s_36412,16063
static const symbol s_37[s_37413,16101
static const symbol s_38[s_38414,16139
static const symbol s_39[s_39415,16184
static int r_prelude(417,16223
static int r_mark_regions(515,20170
static int r_postlude(579,22533
static int r_RV(635,24418
static int r_R1(640,24592
static int r_R2(645,24766
static int r_standard_suffix(650,24940
static int r_i_verb_suffix(980,38925
static int r_verb_suffix(1005,39962
static int r_residual_suffix(1052,41734
static int r_un_double(1121,44479
static int r_un_accent(1139,45141
extern int french_UTF_8_stem(1165,45903
extern struct SN_env * french_UTF_8_create_env(1260,49527
extern void french_UTF_8_close_env(1262,49616

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_portuguese.c,9726
static const symbol s_0_1[s_0_134,834
static const symbol s_0_2[s_0_235,875
static const struct among a_0[a_037,917
static const symbol s_1_1[s_1_144,1047
static const symbol s_1_2[s_1_245,1092
static const struct among a_1[a_147,1138
static const symbol s_2_0[s_2_054,1268
static const symbol s_2_1[s_2_155,1313
static const symbol s_2_2[s_2_256,1358
static const symbol s_2_3[s_2_357,1403
static const struct among a_2[a_259,1449
static const symbol s_3_0[s_3_067,1620
static const symbol s_3_1[s_3_168,1675
static const symbol s_3_2[s_3_269,1730
static const struct among a_3[a_371,1787
static const symbol s_4_0[s_4_078,1923
static const symbol s_4_1[s_4_179,1968
static const symbol s_4_2[s_4_280,2023
static const struct among a_4[a_482,2069
static const symbol s_5_0[s_5_089,2205
static const symbol s_5_1[s_5_190,2255
static const symbol s_5_2[s_5_291,2316
static const symbol s_5_3[s_5_392,2377
static const symbol s_5_4[s_5_493,2437
static const symbol s_5_5[s_5_594,2487
static const symbol s_5_6[s_5_695,2547
static const symbol s_5_7[s_5_796,2597
static const symbol s_5_8[s_5_897,2652
static const symbol s_5_9[s_5_998,2702
static const symbol s_5_10[s_5_1099,2752
static const symbol s_5_11[s_5_11100,2813
static const symbol s_5_12[s_5_12101,2869
static const symbol s_5_13[s_5_13102,2930
static const symbol s_5_14[s_5_14103,2996
static const symbol s_5_15[s_5_15104,3053
static const symbol s_5_16[s_5_16105,3110
static const symbol s_5_17[s_5_17106,3161
static const symbol s_5_18[s_5_18107,3217
static const symbol s_5_19[s_5_19108,3268
static const symbol s_5_20[s_5_20109,3334
static const symbol s_5_21[s_5_21110,3400
static const symbol s_5_22[s_5_22111,3451
static const symbol s_5_23[s_5_23112,3513
static const symbol s_5_24[s_5_24113,3575
static const symbol s_5_25[s_5_25114,3631
static const symbol s_5_26[s_5_26115,3687
static const symbol s_5_27[s_5_27116,3754
static const symbol s_5_28[s_5_28117,3820
static const symbol s_5_29[s_5_29118,3876
static const symbol s_5_30[s_5_30119,3942
static const symbol s_5_31[s_5_31120,3998
static const symbol s_5_32[s_5_32121,4059
static const symbol s_5_33[s_5_33122,4115
static const symbol s_5_34[s_5_34123,4171
static const symbol s_5_35[s_5_35124,4237
static const symbol s_5_36[s_5_36125,4303
static const symbol s_5_37[s_5_37126,4364
static const symbol s_5_38[s_5_38127,4431
static const symbol s_5_39[s_5_39128,4498
static const symbol s_5_40[s_5_40129,4554
static const symbol s_5_41[s_5_41130,4615
static const symbol s_5_42[s_5_42131,4671
static const symbol s_5_43[s_5_43132,4742
static const symbol s_5_44[s_5_44133,4813
static const struct among a_5[a_5135,4870
static const symbol s_6_0[s_6_0184,6386
static const symbol s_6_1[s_6_1185,6436
static const symbol s_6_2[s_6_2186,6486
static const symbol s_6_3[s_6_3187,6531
static const symbol s_6_4[s_6_4188,6586
static const symbol s_6_5[s_6_5189,6641
static const symbol s_6_6[s_6_6190,6696
static const symbol s_6_7[s_6_7191,6746
static const symbol s_6_8[s_6_8192,6796
static const symbol s_6_9[s_6_9193,6846
static const symbol s_6_10[s_6_10194,6896
static const symbol s_6_11[s_6_11195,6952
static const symbol s_6_12[s_6_12196,7008
static const symbol s_6_13[s_6_13197,7064
static const symbol s_6_14[s_6_14198,7120
static const symbol s_6_15[s_6_15199,7176
static const symbol s_6_16[s_6_16200,7232
static const symbol s_6_17[s_6_17201,7278
static const symbol s_6_18[s_6_18202,7334
static const symbol s_6_19[s_6_19203,7390
static const symbol s_6_20[s_6_20204,7446
static const symbol s_6_21[s_6_21205,7492
static const symbol s_6_22[s_6_22206,7543
static const symbol s_6_23[s_6_23207,7604
static const symbol s_6_24[s_6_24208,7665
static const symbol s_6_25[s_6_25209,7726
static const symbol s_6_26[s_6_26210,7782
static const symbol s_6_27[s_6_27211,7838
static const symbol s_6_28[s_6_28212,7894
static const symbol s_6_29[s_6_29213,7950
static const symbol s_6_30[s_6_30214,7996
static const symbol s_6_31[s_6_31215,8052
static const symbol s_6_32[s_6_32216,8108
static const symbol s_6_33[s_6_33217,8164
static const symbol s_6_34[s_6_34218,8225
static const symbol s_6_35[s_6_35219,8286
static const symbol s_6_36[s_6_36220,8347
static const symbol s_6_37[s_6_37221,8398
static const symbol s_6_38[s_6_38222,8449
static const symbol s_6_39[s_6_39223,8505
static const symbol s_6_40[s_6_40224,8561
static const symbol s_6_41[s_6_41225,8617
static const symbol s_6_42[s_6_42226,8678
static const symbol s_6_43[s_6_43227,8739
static const symbol s_6_44[s_6_44228,8800
static const symbol s_6_45[s_6_45229,8846
static const symbol s_6_46[s_6_46230,8892
static const symbol s_6_47[s_6_47231,8938
static const symbol s_6_48[s_6_48232,8984
static const symbol s_6_49[s_6_49233,9040
static const symbol s_6_50[s_6_50234,9096
static const symbol s_6_51[s_6_51235,9147
static const symbol s_6_52[s_6_52236,9208
static const symbol s_6_53[s_6_53237,9269
static const symbol s_6_54[s_6_54238,9330
static const symbol s_6_55[s_6_55239,9386
static const symbol s_6_56[s_6_56240,9442
static const symbol s_6_57[s_6_57241,9498
static const symbol s_6_58[s_6_58242,9554
static const symbol s_6_59[s_6_59243,9600
static const symbol s_6_60[s_6_60244,9661
static const symbol s_6_61[s_6_61245,9722
static const symbol s_6_62[s_6_62246,9783
static const symbol s_6_63[s_6_63247,9839
static const symbol s_6_64[s_6_64248,9895
static const symbol s_6_65[s_6_65249,9951
static const symbol s_6_66[s_6_66250,10012
static const symbol s_6_67[s_6_67251,10073
static const symbol s_6_68[s_6_68252,10134
static const symbol s_6_69[s_6_69253,10195
static const symbol s_6_70[s_6_70254,10256
static const symbol s_6_71[s_6_71255,10317
static const symbol s_6_72[s_6_72256,10363
static const symbol s_6_73[s_6_73257,10414
static const symbol s_6_74[s_6_74258,10465
static const symbol s_6_75[s_6_75259,10526
static const symbol s_6_76[s_6_76260,10587
static const symbol s_6_77[s_6_77261,10648
static const symbol s_6_78[s_6_78262,10710
static const symbol s_6_79[s_6_79263,10772
static const symbol s_6_80[s_6_80264,10834
static const symbol s_6_81[s_6_81265,10901
static const symbol s_6_82[s_6_82266,10968
static const symbol s_6_83[s_6_83267,11035
static const symbol s_6_84[s_6_84268,11097
static const symbol s_6_85[s_6_85269,11154
static const symbol s_6_86[s_6_86270,11221
static const symbol s_6_87[s_6_87271,11288
static const symbol s_6_88[s_6_88272,11355
static const symbol s_6_89[s_6_89273,11411
static const symbol s_6_90[s_6_90274,11467
static const symbol s_6_91[s_6_91275,11523
static const symbol s_6_92[s_6_92276,11590
static const symbol s_6_93[s_6_93277,11657
static const symbol s_6_94[s_6_94278,11724
static const symbol s_6_95[s_6_95279,11791
static const symbol s_6_96[s_6_96280,11853
static const symbol s_6_97[s_6_97281,11925
static const symbol s_6_98[s_6_98282,11997
static const symbol s_6_99[s_6_99283,12069
static const symbol s_6_100[s_6_100284,12125
static const symbol s_6_101[s_6_101285,12192
static const symbol s_6_102[s_6_102286,12259
static const symbol s_6_103[s_6_103287,12326
static const symbol s_6_104[s_6_104288,12399
static const symbol s_6_105[s_6_105289,12472
static const symbol s_6_106[s_6_106290,12545
static const symbol s_6_107[s_6_107291,12602
static const symbol s_6_108[s_6_108292,12664
static const symbol s_6_109[s_6_109293,12726
static const symbol s_6_110[s_6_110294,12788
static const symbol s_6_111[s_6_111295,12846
static const symbol s_6_112[s_6_112296,12904
static const symbol s_6_113[s_6_113297,12962
static const symbol s_6_114[s_6_114298,13020
static const symbol s_6_115[s_6_115299,13067
static const symbol s_6_116[s_6_116300,13114
static const symbol s_6_117[s_6_117301,13161
static const symbol s_6_118[s_6_118302,13214
static const symbol s_6_119[s_6_119303,13267
static const struct among a_6[a_6305,13321
static const symbol s_7_0[s_7_0429,17330
static const symbol s_7_1[s_7_1430,17370
static const symbol s_7_2[s_7_2431,17410
static const symbol s_7_3[s_7_3432,17450
static const symbol s_7_4[s_7_4433,17495
static const symbol s_7_5[s_7_5434,17536
static const symbol s_7_6[s_7_6435,17577
static const struct among a_7[a_7437,17619
static const symbol s_8_0[s_8_0448,17883
static const symbol s_8_1[s_8_1449,17923
static const symbol s_8_2[s_8_2450,17964
static const symbol s_8_3[s_8_3451,18005
static const struct among a_8[a_8453,18047
static const unsigned char g_v[g_v461,18215
static const symbol s_0[s_0463,18320
static const symbol s_1[s_1464,18362
static const symbol s_2[s_2465,18404
static const symbol s_3[s_3466,18442
static const symbol s_4[s_4467,18480
static const symbol s_5[s_5468,18527
static const symbol s_6[s_6469,18564
static const symbol s_7[s_7470,18616
static const symbol s_8[s_8471,18658
static const symbol s_9[s_9472,18700
static const symbol s_10[s_10473,18742
static int r_prelude(475,18781
static int r_mark_regions(509,19838
static int r_postlude(589,22809
static int r_RV(623,23844
static int r_R1(628,24018
static int r_R2(633,24192
static int r_standard_suffix(638,24366
static int r_verb_suffix(798,31120
static int r_residual_suffix(814,31647
static int r_residual_form(827,32064
extern int portuguese_ISO_8859_1_stem(880,34120
extern struct SN_env * portuguese_ISO_8859_1_create_env(960,37149
extern void portuguese_ISO_8859_1_close_env(962,37247

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_swedish.c,2668
static const symbol s_0_0[s_0_028,568
static const symbol s_0_1[s_0_129,608
static const symbol s_0_2[s_0_230,663
static const symbol s_0_3[s_0_331,718
static const symbol s_0_4[s_0_432,788
static const symbol s_0_5[s_0_533,843
static const symbol s_0_6[s_0_634,888
static const symbol s_0_7[s_0_735,928
static const symbol s_0_8[s_0_836,978
static const symbol s_0_9[s_0_937,1033
static const symbol s_0_10[s_0_1038,1088
static const symbol s_0_11[s_0_1139,1139
static const symbol s_0_12[s_0_1240,1195
static const symbol s_0_13[s_0_1341,1241
static const symbol s_0_14[s_0_1442,1302
static const symbol s_0_15[s_0_1543,1358
static const symbol s_0_16[s_0_1644,1419
static const symbol s_0_17[s_0_1745,1470
static const symbol s_0_18[s_0_1846,1516
static const symbol s_0_19[s_0_1947,1562
static const symbol s_0_20[s_0_2048,1623
static const symbol s_0_21[s_0_2149,1669
static const symbol s_0_22[s_0_2250,1710
static const symbol s_0_23[s_0_2351,1756
static const symbol s_0_24[s_0_2452,1817
static const symbol s_0_25[s_0_2553,1878
static const symbol s_0_26[s_0_2654,1939
static const symbol s_0_27[s_0_2755,1985
static const symbol s_0_28[s_0_2856,2041
static const symbol s_0_29[s_0_2957,2102
static const symbol s_0_30[s_0_3058,2153
static const symbol s_0_31[s_0_3159,2214
static const symbol s_0_32[s_0_3260,2280
static const symbol s_0_33[s_0_3361,2336
static const symbol s_0_34[s_0_3462,2382
static const symbol s_0_35[s_0_3563,2443
static const symbol s_0_36[s_0_3664,2494
static const struct among a_0[a_066,2546
static const symbol s_1_0[s_1_0107,3789
static const symbol s_1_1[s_1_1108,3834
static const symbol s_1_2[s_1_2109,3879
static const symbol s_1_3[s_1_3110,3924
static const symbol s_1_4[s_1_4111,3969
static const symbol s_1_5[s_1_5112,4014
static const symbol s_1_6[s_1_6113,4059
static const struct among a_1[a_1115,4105
static const symbol s_2_0[s_2_0126,4376
static const symbol s_2_1[s_2_1127,4421
static const symbol s_2_2[s_2_2128,4471
static const symbol s_2_3[s_2_3129,4521
static const symbol s_2_4[s_2_4130,4581
static const struct among a_2[a_2132,4644
static const unsigned char g_v[g_v141,4843
static const unsigned char g_s_ending[g_s_ending143,4945
static const symbol s_0[s_0145,5007
static const symbol s_1[s_1146,5061
static int r_mark_regions(148,5114
static int r_main_suffix(172,6024
static int r_consonant_pair(201,7082
static int r_other_suffix(225,8054
extern int swedish_UTF_8_stem(258,9247
extern struct SN_env * swedish_UTF_8_create_env(289,10230
extern void swedish_UTF_8_close_env(291,10320

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_hindi.c,6081
static const symbol s_0_0[s_0_025,420
static const symbol s_0_1[s_0_126,473
static const symbol s_0_2[s_0_227,581
static const symbol s_0_3[s_0_328,689
static const symbol s_0_4[s_0_429,797
static const symbol s_0_5[s_0_530,923
static const symbol s_0_6[s_0_631,1049
static const symbol s_0_7[s_0_732,1157
static const symbol s_0_8[s_0_833,1283
static const symbol s_0_9[s_0_934,1409
static const symbol s_0_10[s_0_1035,1498
static const symbol s_0_11[s_0_1136,1588
static const symbol s_0_12[s_0_1237,1678
static const symbol s_0_13[s_0_1338,1787
static const symbol s_0_14[s_0_1439,1896
static const symbol s_0_15[s_0_1540,1986
static const symbol s_0_16[s_0_1641,2095
static const symbol s_0_17[s_0_1742,2204
static const symbol s_0_18[s_0_1843,2276
static const symbol s_0_19[s_0_1944,2366
static const symbol s_0_20[s_0_2045,2456
static const symbol s_0_21[s_0_2146,2546
static const symbol s_0_22[s_0_2247,2618
static const symbol s_0_23[s_0_2348,2708
static const symbol s_0_24[s_0_2449,2780
static const symbol s_0_25[s_0_2550,2852
static const symbol s_0_26[s_0_2651,2961
static const symbol s_0_27[s_0_2752,3088
static const symbol s_0_28[s_0_2853,3215
static const symbol s_0_29[s_0_2954,3324
static const symbol s_0_30[s_0_3055,3378
static const symbol s_0_31[s_0_3156,3450
static const symbol s_0_32[s_0_3257,3540
static const symbol s_0_33[s_0_3358,3649
static const symbol s_0_34[s_0_3459,3758
static const symbol s_0_35[s_0_3560,3867
static const symbol s_0_36[s_0_3661,3939
static const symbol s_0_37[s_0_3762,4029
static const symbol s_0_38[s_0_3863,4119
static const symbol s_0_39[s_0_3964,4191
static const symbol s_0_40[s_0_4065,4263
static const symbol s_0_41[s_0_4166,4353
static const symbol s_0_42[s_0_4267,4443
static const symbol s_0_43[s_0_4368,4515
static const symbol s_0_44[s_0_4469,4624
static const symbol s_0_45[s_0_4570,4751
static const symbol s_0_46[s_0_4671,4878
static const symbol s_0_47[s_0_4772,4987
static const symbol s_0_48[s_0_4873,5059
static const symbol s_0_49[s_0_4974,5149
static const symbol s_0_50[s_0_5075,5239
static const symbol s_0_51[s_0_5176,5329
static const symbol s_0_52[s_0_5277,5419
static const symbol s_0_53[s_0_5378,5528
static const symbol s_0_54[s_0_5479,5655
static const symbol s_0_55[s_0_5580,5764
static const symbol s_0_56[s_0_5681,5891
static const symbol s_0_57[s_0_5782,5963
static const symbol s_0_58[s_0_5883,6053
static const symbol s_0_59[s_0_5984,6143
static const symbol s_0_60[s_0_6085,6233
static const symbol s_0_61[s_0_6186,6323
static const symbol s_0_62[s_0_6287,6432
static const symbol s_0_63[s_0_6388,6559
static const symbol s_0_64[s_0_6489,6668
static const symbol s_0_65[s_0_6590,6795
static const symbol s_0_66[s_0_6691,6867
static const symbol s_0_67[s_0_6792,6976
static const symbol s_0_68[s_0_6893,7103
static const symbol s_0_69[s_0_6994,7230
static const symbol s_0_70[s_0_7095,7339
static const symbol s_0_71[s_0_7196,7393
static const symbol s_0_72[s_0_7297,7447
static const symbol s_0_73[s_0_7398,7501
static const symbol s_0_74[s_0_7499,7555
static const symbol s_0_75[s_0_75100,7609
static const symbol s_0_76[s_0_76101,7718
static const symbol s_0_77[s_0_77102,7827
static const symbol s_0_78[s_0_78103,7954
static const symbol s_0_79[s_0_79104,8081
static const symbol s_0_80[s_0_80105,8171
static const symbol s_0_81[s_0_81106,8261
static const symbol s_0_82[s_0_82107,8370
static const symbol s_0_83[s_0_83108,8479
static const symbol s_0_84[s_0_84109,8551
static const symbol s_0_85[s_0_85110,8641
static const symbol s_0_86[s_0_86111,8731
static const symbol s_0_87[s_0_87112,8821
static const symbol s_0_88[s_0_88113,8893
static const symbol s_0_89[s_0_89114,8983
static const symbol s_0_90[s_0_90115,9073
static const symbol s_0_91[s_0_91116,9163
static const symbol s_0_92[s_0_92117,9217
static const symbol s_0_93[s_0_93118,9289
static const symbol s_0_94[s_0_94119,9361
static const symbol s_0_95[s_0_95120,9415
static const symbol s_0_96[s_0_96121,9469
static const symbol s_0_97[s_0_97122,9523
static const symbol s_0_98[s_0_98123,9577
static const symbol s_0_99[s_0_99124,9631
static const symbol s_0_100[s_0_100125,9703
static const symbol s_0_101[s_0_101126,9776
static const symbol s_0_102[s_0_102127,9867
static const symbol s_0_103[s_0_103128,9958
static const symbol s_0_104[s_0_104129,10031
static const symbol s_0_105[s_0_105130,10104
static const symbol s_0_106[s_0_106131,10159
static const symbol s_0_107[s_0_107132,10232
static const symbol s_0_108[s_0_108133,10305
static const symbol s_0_109[s_0_109134,10378
static const symbol s_0_110[s_0_110135,10469
static const symbol s_0_111[s_0_111136,10560
static const symbol s_0_112[s_0_112137,10651
static const symbol s_0_113[s_0_113138,10706
static const symbol s_0_114[s_0_114139,10816
static const symbol s_0_115[s_0_115140,10926
static const symbol s_0_116[s_0_116141,11054
static const symbol s_0_117[s_0_117142,11182
static const symbol s_0_118[s_0_118143,11273
static const symbol s_0_119[s_0_119144,11364
static const symbol s_0_120[s_0_120145,11474
static const symbol s_0_121[s_0_121146,11584
static const symbol s_0_122[s_0_122147,11657
static const symbol s_0_123[s_0_123148,11748
static const symbol s_0_124[s_0_124149,11839
static const symbol s_0_125[s_0_125150,11930
static const symbol s_0_126[s_0_126151,12003
static const symbol s_0_127[s_0_127152,12094
static const symbol s_0_128[s_0_128153,12185
static const symbol s_0_129[s_0_129154,12276
static const symbol s_0_130[s_0_130155,12367
static const symbol s_0_131[s_0_131156,12458
static const struct among a_0[a_0158,12514
static const unsigned char g_consonant[g_consonant294,17244
static int r_CONSONANT(297,17335
extern int hindi_UTF_8_stem(302,17516
extern struct SN_env * hindi_UTF_8_create_env(329,18385
extern void hindi_UTF_8_close_env(331,18473

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_swedish.c,2683
static const symbol s_0_0[s_0_028,583
static const symbol s_0_1[s_0_129,623
static const symbol s_0_2[s_0_230,678
static const symbol s_0_3[s_0_331,733
static const symbol s_0_4[s_0_432,803
static const symbol s_0_5[s_0_533,858
static const symbol s_0_6[s_0_634,903
static const symbol s_0_7[s_0_735,943
static const symbol s_0_8[s_0_836,993
static const symbol s_0_9[s_0_937,1048
static const symbol s_0_10[s_0_1038,1103
static const symbol s_0_11[s_0_1139,1154
static const symbol s_0_12[s_0_1240,1210
static const symbol s_0_13[s_0_1341,1256
static const symbol s_0_14[s_0_1442,1317
static const symbol s_0_15[s_0_1543,1373
static const symbol s_0_16[s_0_1644,1434
static const symbol s_0_17[s_0_1745,1485
static const symbol s_0_18[s_0_1846,1531
static const symbol s_0_19[s_0_1947,1577
static const symbol s_0_20[s_0_2048,1638
static const symbol s_0_21[s_0_2149,1684
static const symbol s_0_22[s_0_2250,1725
static const symbol s_0_23[s_0_2351,1771
static const symbol s_0_24[s_0_2452,1832
static const symbol s_0_25[s_0_2553,1893
static const symbol s_0_26[s_0_2654,1954
static const symbol s_0_27[s_0_2755,2000
static const symbol s_0_28[s_0_2856,2056
static const symbol s_0_29[s_0_2957,2117
static const symbol s_0_30[s_0_3058,2168
static const symbol s_0_31[s_0_3159,2229
static const symbol s_0_32[s_0_3260,2295
static const symbol s_0_33[s_0_3361,2351
static const symbol s_0_34[s_0_3462,2397
static const symbol s_0_35[s_0_3563,2458
static const symbol s_0_36[s_0_3664,2509
static const struct among a_0[a_066,2561
static const symbol s_1_0[s_1_0107,3804
static const symbol s_1_1[s_1_1108,3849
static const symbol s_1_2[s_1_2109,3894
static const symbol s_1_3[s_1_3110,3939
static const symbol s_1_4[s_1_4111,3984
static const symbol s_1_5[s_1_5112,4029
static const symbol s_1_6[s_1_6113,4074
static const struct among a_1[a_1115,4120
static const symbol s_2_0[s_2_0126,4391
static const symbol s_2_1[s_2_1127,4436
static const symbol s_2_2[s_2_2128,4486
static const symbol s_2_3[s_2_3129,4536
static const symbol s_2_4[s_2_4130,4596
static const struct among a_2[a_2132,4653
static const unsigned char g_v[g_v141,4852
static const unsigned char g_s_ending[g_s_ending143,4954
static const symbol s_0[s_0145,5016
static const symbol s_1[s_1146,5064
static int r_mark_regions(148,5117
static int r_main_suffix(172,6010
static int r_consonant_pair(201,7066
static int r_other_suffix(223,7955
extern int swedish_ISO_8859_1_stem(256,9148
extern struct SN_env * swedish_ISO_8859_1_create_env(287,10136
extern void swedish_ISO_8859_1_close_env(289,10231

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_basque.c,20191
static const symbol s_0_0[s_0_031,674
static const symbol s_0_1[s_0_132,729
static const symbol s_0_2[s_0_233,789
static const symbol s_0_3[s_0_334,849
static const symbol s_0_4[s_0_435,909
static const symbol s_0_5[s_0_536,974
static const symbol s_0_6[s_0_637,1034
static const symbol s_0_7[s_0_738,1099
static const symbol s_0_8[s_0_839,1169
static const symbol s_0_9[s_0_940,1229
static const symbol s_0_10[s_0_1041,1289
static const symbol s_0_11[s_0_1142,1350
static const symbol s_0_12[s_0_1243,1406
static const symbol s_0_13[s_0_1344,1467
static const symbol s_0_14[s_0_1445,1533
static const symbol s_0_15[s_0_1546,1594
static const symbol s_0_16[s_0_1647,1660
static const symbol s_0_17[s_0_1748,1726
static const symbol s_0_18[s_0_1849,1772
static const symbol s_0_19[s_0_1950,1833
static const symbol s_0_20[s_0_2051,1879
static const symbol s_0_21[s_0_2152,1935
static const symbol s_0_22[s_0_2253,1991
static const symbol s_0_23[s_0_2354,2047
static const symbol s_0_24[s_0_2455,2108
static const symbol s_0_25[s_0_2556,2174
static const symbol s_0_26[s_0_2657,2230
static const symbol s_0_27[s_0_2758,2286
static const symbol s_0_28[s_0_2859,2352
static const symbol s_0_29[s_0_2960,2403
static const symbol s_0_30[s_0_3061,2459
static const symbol s_0_31[s_0_3162,2530
static const symbol s_0_32[s_0_3263,2586
static const symbol s_0_33[s_0_3364,2642
static const symbol s_0_34[s_0_3465,2698
static const symbol s_0_35[s_0_3566,2759
static const symbol s_0_36[s_0_3667,2815
static const symbol s_0_37[s_0_3768,2871
static const symbol s_0_38[s_0_3869,2927
static const symbol s_0_39[s_0_3970,2983
static const symbol s_0_40[s_0_4071,3034
static const symbol s_0_41[s_0_4172,3090
static const symbol s_0_42[s_0_4273,3156
static const symbol s_0_43[s_0_4374,3207
static const symbol s_0_44[s_0_4475,3273
static const symbol s_0_45[s_0_4576,3324
static const symbol s_0_46[s_0_4677,3390
static const symbol s_0_47[s_0_4778,3456
static const symbol s_0_48[s_0_4879,3522
static const symbol s_0_49[s_0_4980,3573
static const symbol s_0_50[s_0_5081,3629
static const symbol s_0_51[s_0_5182,3685
static const symbol s_0_52[s_0_5283,3741
static const symbol s_0_53[s_0_5384,3802
static const symbol s_0_54[s_0_5485,3863
static const symbol s_0_55[s_0_5586,3924
static const symbol s_0_56[s_0_5687,3970
static const symbol s_0_57[s_0_5788,4026
static const symbol s_0_58[s_0_5889,4087
static const symbol s_0_59[s_0_5990,4153
static const symbol s_0_60[s_0_6091,4209
static const symbol s_0_61[s_0_6192,4265
static const symbol s_0_62[s_0_6293,4316
static const symbol s_0_63[s_0_6394,4372
static const symbol s_0_64[s_0_6495,4423
static const symbol s_0_65[s_0_6596,4479
static const symbol s_0_66[s_0_6697,4540
static const symbol s_0_67[s_0_6798,4586
static const symbol s_0_68[s_0_6899,4637
static const symbol s_0_69[s_0_69100,4693
static const symbol s_0_70[s_0_70101,4749
static const symbol s_0_71[s_0_71102,4805
static const symbol s_0_72[s_0_72103,4866
static const symbol s_0_73[s_0_73104,4927
static const symbol s_0_74[s_0_74105,4988
static const symbol s_0_75[s_0_75106,5049
static const symbol s_0_76[s_0_76107,5115
static const symbol s_0_77[s_0_77108,5161
static const symbol s_0_78[s_0_78109,5212
static const symbol s_0_79[s_0_79110,5268
static const symbol s_0_80[s_0_80111,5319
static const symbol s_0_81[s_0_81112,5375
static const symbol s_0_82[s_0_82113,5446
static const symbol s_0_83[s_0_83114,5497
static const symbol s_0_84[s_0_84115,5548
static const symbol s_0_85[s_0_85116,5599
static const symbol s_0_86[s_0_86117,5660
static const symbol s_0_87[s_0_87118,5716
static const symbol s_0_88[s_0_88119,5777
static const symbol s_0_89[s_0_89120,5828
static const symbol s_0_90[s_0_90121,5889
static const symbol s_0_91[s_0_91122,5935
static const symbol s_0_92[s_0_92123,5986
static const symbol s_0_93[s_0_93124,6037
static const symbol s_0_94[s_0_94125,6093
static const symbol s_0_95[s_0_95126,6139
static const symbol s_0_96[s_0_96127,6190
static const symbol s_0_97[s_0_97128,6246
static const symbol s_0_98[s_0_98129,6292
static const symbol s_0_99[s_0_99130,6353
static const symbol s_0_100[s_0_100131,6399
static const symbol s_0_101[s_0_101132,6451
static const symbol s_0_102[s_0_102133,6518
static const symbol s_0_103[s_0_103134,6575
static const symbol s_0_104[s_0_104135,6642
static const symbol s_0_105[s_0_105136,6689
static const symbol s_0_106[s_0_106137,6751
static const symbol s_0_107[s_0_107138,6808
static const symbol s_0_108[s_0_108139,6870
static const struct among a_0[a_0141,6933
static const symbol s_1_0[s_1_0254,10572
static const symbol s_1_1[s_1_1255,10622
static const symbol s_1_2[s_1_2256,10677
static const symbol s_1_3[s_1_3257,10732
static const symbol s_1_4[s_1_4258,10792
static const symbol s_1_5[s_1_5259,10852
static const symbol s_1_6[s_1_6260,10912
static const symbol s_1_7[s_1_7261,10972
static const symbol s_1_8[s_1_8262,11037
static const symbol s_1_9[s_1_9263,11102
static const symbol s_1_10[s_1_10264,11162
static const symbol s_1_11[s_1_11265,11223
static const symbol s_1_12[s_1_12266,11289
static const symbol s_1_13[s_1_13267,11350
static const symbol s_1_14[s_1_14268,11406
static const symbol s_1_15[s_1_15269,11467
static const symbol s_1_16[s_1_16270,11518
static const symbol s_1_17[s_1_17271,11574
static const symbol s_1_18[s_1_18272,11640
static const symbol s_1_19[s_1_19273,11696
static const symbol s_1_20[s_1_20274,11757
static const symbol s_1_21[s_1_21275,11808
static const symbol s_1_22[s_1_22276,11874
static const symbol s_1_23[s_1_23277,11925
static const symbol s_1_24[s_1_24278,11986
static const symbol s_1_25[s_1_25279,12047
static const symbol s_1_26[s_1_26280,12108
static const symbol s_1_27[s_1_27281,12169
static const symbol s_1_28[s_1_28282,12215
static const symbol s_1_29[s_1_29283,12271
static const symbol s_1_30[s_1_30284,12327
static const symbol s_1_31[s_1_31285,12388
static const symbol s_1_32[s_1_32286,12454
static const symbol s_1_33[s_1_33287,12520
static const symbol s_1_34[s_1_34288,12586
static const symbol s_1_35[s_1_35289,12642
static const symbol s_1_36[s_1_36290,12698
static const symbol s_1_37[s_1_37291,12759
static const symbol s_1_38[s_1_38292,12820
static const symbol s_1_39[s_1_39293,12881
static const symbol s_1_40[s_1_40294,12937
static const symbol s_1_41[s_1_41295,12988
static const symbol s_1_42[s_1_42296,13049
static const symbol s_1_43[s_1_43297,13100
static const symbol s_1_44[s_1_44298,13156
static const symbol s_1_45[s_1_45299,13212
static const symbol s_1_46[s_1_46300,13273
static const symbol s_1_47[s_1_47301,13334
static const symbol s_1_48[s_1_48302,13395
static const symbol s_1_49[s_1_49303,13451
static const symbol s_1_50[s_1_50304,13512
static const symbol s_1_51[s_1_51305,13573
static const symbol s_1_52[s_1_52306,13639
static const symbol s_1_53[s_1_53307,13705
static const symbol s_1_54[s_1_54308,13771
static const symbol s_1_55[s_1_55309,13832
static const symbol s_1_56[s_1_56310,13888
static const symbol s_1_57[s_1_57311,13939
static const symbol s_1_58[s_1_58312,13995
static const symbol s_1_59[s_1_59313,14056
static const symbol s_1_60[s_1_60314,14122
static const symbol s_1_61[s_1_61315,14168
static const symbol s_1_62[s_1_62316,14224
static const symbol s_1_63[s_1_63317,14285
static const symbol s_1_64[s_1_64318,14336
static const symbol s_1_65[s_1_65319,14387
static const symbol s_1_66[s_1_66320,14438
static const symbol s_1_67[s_1_67321,14504
static const symbol s_1_68[s_1_68322,14560
static const symbol s_1_69[s_1_69323,14621
static const symbol s_1_70[s_1_70324,14682
static const symbol s_1_71[s_1_71325,14738
static const symbol s_1_72[s_1_72326,14789
static const symbol s_1_73[s_1_73327,14835
static const symbol s_1_74[s_1_74328,14891
static const symbol s_1_75[s_1_75329,14942
static const symbol s_1_76[s_1_76330,15013
static const symbol s_1_77[s_1_77331,15084
static const symbol s_1_78[s_1_78332,15150
static const symbol s_1_79[s_1_79333,15211
static const symbol s_1_80[s_1_80334,15277
static const symbol s_1_81[s_1_81335,15333
static const symbol s_1_82[s_1_82336,15389
static const symbol s_1_83[s_1_83337,15450
static const symbol s_1_84[s_1_84338,15501
static const symbol s_1_85[s_1_85339,15557
static const symbol s_1_86[s_1_86340,15618
static const symbol s_1_87[s_1_87341,15684
static const symbol s_1_88[s_1_88342,15745
static const symbol s_1_89[s_1_89343,15811
static const symbol s_1_90[s_1_90344,15867
static const symbol s_1_91[s_1_91345,15923
static const symbol s_1_92[s_1_92346,15974
static const symbol s_1_93[s_1_93347,16035
static const symbol s_1_94[s_1_94348,16091
static const symbol s_1_95[s_1_95349,16142
static const symbol s_1_96[s_1_96350,16203
static const symbol s_1_97[s_1_97351,16259
static const symbol s_1_98[s_1_98352,16320
static const symbol s_1_99[s_1_99353,16381
static const symbol s_1_100[s_1_100354,16437
static const symbol s_1_101[s_1_101355,16494
static const symbol s_1_102[s_1_102356,16551
static const symbol s_1_103[s_1_103357,16603
static const symbol s_1_104[s_1_104358,16660
static const symbol s_1_105[s_1_105359,16717
static const symbol s_1_106[s_1_106360,16774
static const symbol s_1_107[s_1_107361,16831
static const symbol s_1_108[s_1_108362,16884
static const symbol s_1_109[s_1_109363,16931
static const symbol s_1_110[s_1_110364,16983
static const symbol s_1_111[s_1_111365,17040
static const symbol s_1_112[s_1_112366,17102
static const symbol s_1_113[s_1_113367,17164
static const symbol s_1_114[s_1_114368,17221
static const symbol s_1_115[s_1_115369,17283
static const symbol s_1_116[s_1_116370,17345
static const symbol s_1_117[s_1_117371,17402
static const symbol s_1_118[s_1_118372,17459
static const symbol s_1_119[s_1_119373,17516
static const symbol s_1_120[s_1_120374,17568
static const symbol s_1_121[s_1_121375,17635
static const symbol s_1_122[s_1_122376,17697
static const symbol s_1_123[s_1_123377,17749
static const symbol s_1_124[s_1_124378,17796
static const symbol s_1_125[s_1_125379,17848
static const symbol s_1_126[s_1_126380,17895
static const symbol s_1_127[s_1_127381,17947
static const symbol s_1_128[s_1_128382,18004
static const symbol s_1_129[s_1_129383,18056
static const symbol s_1_130[s_1_130384,18108
static const symbol s_1_131[s_1_131385,18175
static const symbol s_1_132[s_1_132386,18237
static const symbol s_1_133[s_1_133387,18299
static const symbol s_1_134[s_1_134388,18361
static const symbol s_1_135[s_1_135389,18423
static const symbol s_1_136[s_1_136390,18480
static const symbol s_1_137[s_1_137391,18532
static const symbol s_1_138[s_1_138392,18599
static const symbol s_1_139[s_1_139393,18661
static const symbol s_1_140[s_1_140394,18718
static const symbol s_1_141[s_1_141395,18770
static const symbol s_1_142[s_1_142396,18827
static const symbol s_1_143[s_1_143397,18874
static const symbol s_1_144[s_1_144398,18926
static const symbol s_1_145[s_1_145399,18988
static const symbol s_1_146[s_1_146400,19040
static const symbol s_1_147[s_1_147401,19107
static const symbol s_1_148[s_1_148402,19169
static const symbol s_1_149[s_1_149403,19236
static const symbol s_1_150[s_1_150404,19303
static const symbol s_1_151[s_1_151405,19370
static const symbol s_1_152[s_1_152406,19427
static const symbol s_1_153[s_1_153407,19484
static const symbol s_1_154[s_1_154408,19541
static const symbol s_1_155[s_1_155409,19598
static const symbol s_1_156[s_1_156410,19660
static const symbol s_1_157[s_1_157411,19722
static const symbol s_1_158[s_1_158412,19779
static const symbol s_1_159[s_1_159413,19826
static const symbol s_1_160[s_1_160414,19883
static const symbol s_1_161[s_1_161415,19945
static const symbol s_1_162[s_1_162416,20002
static const symbol s_1_163[s_1_163417,20054
static const symbol s_1_164[s_1_164418,20111
static const symbol s_1_165[s_1_165419,20158
static const symbol s_1_166[s_1_166420,20220
static const symbol s_1_167[s_1_167421,20272
static const symbol s_1_168[s_1_168422,20329
static const symbol s_1_169[s_1_169423,20376
static const symbol s_1_170[s_1_170424,20438
static const symbol s_1_171[s_1_171425,20485
static const symbol s_1_172[s_1_172426,20542
static const symbol s_1_173[s_1_173427,20599
static const symbol s_1_174[s_1_174428,20656
static const symbol s_1_175[s_1_175429,20713
static const symbol s_1_176[s_1_176430,20765
static const symbol s_1_177[s_1_177431,20812
static const symbol s_1_178[s_1_178432,20869
static const symbol s_1_179[s_1_179433,20931
static const symbol s_1_180[s_1_180434,20993
static const symbol s_1_181[s_1_181435,21055
static const symbol s_1_182[s_1_182436,21117
static const symbol s_1_183[s_1_183437,21169
static const symbol s_1_184[s_1_184438,21221
static const symbol s_1_185[s_1_185439,21278
static const symbol s_1_186[s_1_186440,21335
static const symbol s_1_187[s_1_187441,21392
static const symbol s_1_188[s_1_188442,21444
static const symbol s_1_189[s_1_189443,21491
static const symbol s_1_190[s_1_190444,21548
static const symbol s_1_191[s_1_191445,21595
static const symbol s_1_192[s_1_192446,21647
static const symbol s_1_193[s_1_193447,21699
static const symbol s_1_194[s_1_194448,21751
static const symbol s_1_195[s_1_195449,21808
static const symbol s_1_196[s_1_196450,21865
static const symbol s_1_197[s_1_197451,21922
static const symbol s_1_198[s_1_198452,21984
static const symbol s_1_199[s_1_199453,22046
static const symbol s_1_200[s_1_200454,22108
static const symbol s_1_201[s_1_201455,22165
static const symbol s_1_202[s_1_202456,22217
static const symbol s_1_203[s_1_203457,22264
static const symbol s_1_204[s_1_204458,22326
static const symbol s_1_205[s_1_205459,22374
static const symbol s_1_206[s_1_206460,22421
static const symbol s_1_207[s_1_207461,22468
static const symbol s_1_208[s_1_208462,22530
static const symbol s_1_209[s_1_209463,22592
static const symbol s_1_210[s_1_210464,22644
static const symbol s_1_211[s_1_211465,22701
static const symbol s_1_212[s_1_212466,22753
static const symbol s_1_213[s_1_213467,22805
static const symbol s_1_214[s_1_214468,22862
static const symbol s_1_215[s_1_215469,22909
static const symbol s_1_216[s_1_216470,22961
static const symbol s_1_217[s_1_217471,23028
static const symbol s_1_218[s_1_218472,23095
static const symbol s_1_219[s_1_219473,23157
static const symbol s_1_220[s_1_220474,23209
static const symbol s_1_221[s_1_221475,23266
static const symbol s_1_222[s_1_222476,23323
static const symbol s_1_223[s_1_223477,23385
static const symbol s_1_224[s_1_224478,23437
static const symbol s_1_225[s_1_225479,23489
static const symbol s_1_226[s_1_226480,23541
static const symbol s_1_227[s_1_227481,23598
static const symbol s_1_228[s_1_228482,23660
static const symbol s_1_229[s_1_229483,23722
static const symbol s_1_230[s_1_230484,23779
static const symbol s_1_231[s_1_231485,23841
static const symbol s_1_232[s_1_232486,23888
static const symbol s_1_233[s_1_233487,23940
static const symbol s_1_234[s_1_234488,23992
static const symbol s_1_235[s_1_235489,24039
static const symbol s_1_236[s_1_236490,24101
static const symbol s_1_237[s_1_237491,24158
static const symbol s_1_238[s_1_238492,24220
static const symbol s_1_239[s_1_239493,24272
static const symbol s_1_240[s_1_240494,24339
static const symbol s_1_241[s_1_241495,24391
static const symbol s_1_242[s_1_242496,24448
static const symbol s_1_243[s_1_243497,24525
static const symbol s_1_244[s_1_244498,24577
static const symbol s_1_245[s_1_245499,24624
static const symbol s_1_246[s_1_246500,24681
static const symbol s_1_247[s_1_247501,24728
static const symbol s_1_248[s_1_248502,24780
static const symbol s_1_249[s_1_249503,24842
static const symbol s_1_250[s_1_250504,24899
static const symbol s_1_251[s_1_251505,24956
static const symbol s_1_252[s_1_252506,25008
static const symbol s_1_253[s_1_253507,25065
static const symbol s_1_254[s_1_254508,25117
static const symbol s_1_255[s_1_255509,25169
static const symbol s_1_256[s_1_256510,25216
static const symbol s_1_257[s_1_257511,25268
static const symbol s_1_258[s_1_258512,25320
static const symbol s_1_259[s_1_259513,25372
static const symbol s_1_260[s_1_260514,25424
static const symbol s_1_261[s_1_261515,25491
static const symbol s_1_262[s_1_262516,25539
static const symbol s_1_263[s_1_263517,25586
static const symbol s_1_264[s_1_264518,25633
static const symbol s_1_265[s_1_265519,25685
static const symbol s_1_266[s_1_266520,25747
static const symbol s_1_267[s_1_267521,25809
static const symbol s_1_268[s_1_268522,25866
static const symbol s_1_269[s_1_269523,25923
static const symbol s_1_270[s_1_270524,25975
static const symbol s_1_271[s_1_271525,26032
static const symbol s_1_272[s_1_272526,26079
static const symbol s_1_273[s_1_273527,26131
static const symbol s_1_274[s_1_274528,26178
static const symbol s_1_275[s_1_275529,26230
static const symbol s_1_276[s_1_276530,26277
static const symbol s_1_277[s_1_277531,26339
static const symbol s_1_278[s_1_278532,26396
static const symbol s_1_279[s_1_279533,26453
static const symbol s_1_280[s_1_280534,26510
static const symbol s_1_281[s_1_281535,26567
static const symbol s_1_282[s_1_282536,26619
static const symbol s_1_283[s_1_283537,26666
static const symbol s_1_284[s_1_284538,26723
static const symbol s_1_285[s_1_285539,26785
static const symbol s_1_286[s_1_286540,26842
static const symbol s_1_287[s_1_287541,26894
static const symbol s_1_288[s_1_288542,26941
static const symbol s_1_289[s_1_289543,26993
static const symbol s_1_290[s_1_290544,27060
static const symbol s_1_291[s_1_291545,27102
static const symbol s_1_292[s_1_292546,27149
static const symbol s_1_293[s_1_293547,27206
static const symbol s_1_294[s_1_294548,27253
static const struct among a_1[a_1550,27316
static const symbol s_2_0[s_2_0849,37382
static const symbol s_2_1[s_2_1850,37437
static const symbol s_2_2[s_2_2851,37497
static const symbol s_2_3[s_2_3852,37542
static const symbol s_2_4[s_2_4853,37592
static const symbol s_2_5[s_2_5854,37647
static const symbol s_2_6[s_2_6855,37702
static const symbol s_2_7[s_2_7856,37757
static const symbol s_2_8[s_2_8857,37812
static const symbol s_2_9[s_2_9858,37857
static const symbol s_2_10[s_2_10859,37902
static const symbol s_2_11[s_2_11860,37948
static const symbol s_2_12[s_2_12861,38009
static const symbol s_2_13[s_2_13862,38060
static const symbol s_2_14[s_2_14863,38121
static const symbol s_2_15[s_2_15864,38177
static const symbol s_2_16[s_2_16865,38223
static const symbol s_2_17[s_2_17866,38269
static const symbol s_2_18[s_2_18867,38320
static const struct among a_2[a_2869,38367
static const unsigned char g_v[g_v892,39025
static const symbol s_0[s_0894,39077
static const symbol s_1[s_1895,39144
static const symbol s_2[s_2896,39211
static const symbol s_3[s_3897,39273
static const symbol s_4[s_4898,39320
static const symbol s_5[s_5899,39367
static const symbol s_6[s_6900,39429
static const symbol s_7[s_7901,39486
static const symbol s_8[s_8902,39543
static const symbol s_9[s_9903,39600
static const symbol s_10[s_10904,39657
static int r_mark_regions(906,39696
static int r_RV(986,42667
static int r_R2(991,42841
static int r_R1(996,43015
static int r_aditzak(1001,43189
static int r_izenak(1044,44632
static int r_adjetiboak(1115,46986
extern int basque_ISO_8859_1_stem(1140,47852
extern struct SN_env * basque_ISO_8859_1_create_env(1181,48962
extern void basque_ISO_8859_1_close_env(1183,49056

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_catalan.c,26426
static const symbol s_0_1[s_0_132,736
static const symbol s_0_2[s_0_233,783
static const symbol s_0_3[s_0_334,830
static const symbol s_0_4[s_0_435,877
static const symbol s_0_5[s_0_536,924
static const symbol s_0_6[s_0_637,971
static const symbol s_0_7[s_0_738,1018
static const symbol s_0_8[s_0_839,1065
static const symbol s_0_9[s_0_940,1112
static const symbol s_0_10[s_0_1041,1159
static const symbol s_0_11[s_0_1142,1207
static const symbol s_0_12[s_0_1243,1255
static const struct among a_0[a_045,1304
static const symbol s_1_0[s_1_062,1748
static const symbol s_1_1[s_1_163,1793
static const symbol s_1_2[s_1_264,1843
static const symbol s_1_3[s_1_365,1898
static const symbol s_1_4[s_1_466,1943
static const symbol s_1_5[s_1_567,1988
static const symbol s_1_6[s_1_668,2038
static const symbol s_1_7[s_1_769,2083
static const symbol s_1_8[s_1_870,2133
static const symbol s_1_9[s_1_971,2178
static const symbol s_1_10[s_1_1072,2229
static const symbol s_1_11[s_1_1173,2275
static const symbol s_1_12[s_1_1274,2326
static const symbol s_1_13[s_1_1375,2373
static const symbol s_1_14[s_1_1476,2420
static const symbol s_1_15[s_1_1577,2466
static const symbol s_1_16[s_1_1678,2513
static const symbol s_1_17[s_1_1779,2559
static const symbol s_1_18[s_1_1880,2605
static const symbol s_1_19[s_1_1981,2657
static const symbol s_1_20[s_1_2082,2703
static const symbol s_1_21[s_1_2183,2759
static const symbol s_1_22[s_1_2284,2806
static const symbol s_1_23[s_1_2385,2857
static const symbol s_1_24[s_1_2486,2918
static const symbol s_1_25[s_1_2587,2969
static const symbol s_1_26[s_1_2688,3025
static const symbol s_1_27[s_1_2789,3077
static const symbol s_1_28[s_1_2890,3128
static const symbol s_1_29[s_1_2991,3180
static const symbol s_1_30[s_1_3092,3231
static const symbol s_1_31[s_1_3193,3282
static const symbol s_1_32[s_1_3294,3333
static const symbol s_1_33[s_1_3395,3394
static const symbol s_1_34[s_1_3496,3445
static const symbol s_1_35[s_1_3597,3501
static const symbol s_1_36[s_1_3698,3552
static const symbol s_1_37[s_1_3799,3598
static const symbol s_1_38[s_1_38100,3649
static const struct among a_1[a_1102,3697
static const symbol s_2_0[s_2_0145,5011
static const symbol s_2_1[s_2_1146,5061
static const symbol s_2_2[s_2_2147,5133
static const symbol s_2_3[s_2_3148,5188
static const symbol s_2_4[s_2_4149,5238
static const symbol s_2_5[s_2_5150,5298
static const symbol s_2_6[s_2_6151,5358
static const symbol s_2_7[s_2_7152,5425
static const symbol s_2_8[s_2_8153,5487
static const symbol s_2_9[s_2_9154,5547
static const symbol s_2_10[s_2_10155,5602
static const symbol s_2_11[s_2_11156,5670
static const symbol s_2_12[s_2_12157,5726
static const symbol s_2_13[s_2_13158,5789
static const symbol s_2_14[s_2_14159,5862
static const symbol s_2_15[s_2_15160,5918
static const symbol s_2_16[s_2_16161,5974
static const symbol s_2_17[s_2_17162,6042
static const symbol s_2_18[s_2_18163,6093
static const symbol s_2_19[s_2_19164,6166
static const symbol s_2_20[s_2_20165,6249
static const symbol s_2_21[s_2_21166,6300
static const symbol s_2_22[s_2_22167,6351
static const symbol s_2_23[s_2_23168,6402
static const symbol s_2_24[s_2_24169,6463
static const symbol s_2_25[s_2_25170,6514
static const symbol s_2_26[s_2_26171,6570
static const symbol s_2_27[s_2_27172,6631
static const symbol s_2_28[s_2_28173,6692
static const symbol s_2_29[s_2_29174,6743
static const symbol s_2_30[s_2_30175,6794
static const symbol s_2_31[s_2_31176,6850
static const symbol s_2_32[s_2_32177,6906
static const symbol s_2_33[s_2_33178,6962
static const symbol s_2_34[s_2_34179,7013
static const symbol s_2_35[s_2_35180,7064
static const symbol s_2_36[s_2_36181,7115
static const symbol s_2_37[s_2_37182,7171
static const symbol s_2_38[s_2_38183,7242
static const symbol s_2_39[s_2_39184,7313
static const symbol s_2_40[s_2_40185,7364
static const symbol s_2_41[s_2_41186,7425
static const symbol s_2_42[s_2_42187,7483
static const symbol s_2_43[s_2_43188,7551
static const symbol s_2_44[s_2_44189,7597
static const symbol s_2_45[s_2_45190,7665
static const symbol s_2_46[s_2_46191,7716
static const symbol s_2_47[s_2_47192,7767
static const symbol s_2_48[s_2_48193,7813
static const symbol s_2_49[s_2_49194,7869
static const symbol s_2_50[s_2_50195,7920
static const symbol s_2_51[s_2_51196,7976
static const symbol s_2_52[s_2_52197,8032
static const symbol s_2_53[s_2_53198,8088
static const symbol s_2_54[s_2_54199,8159
static const symbol s_2_55[s_2_55200,8230
static const symbol s_2_56[s_2_56201,8296
static const symbol s_2_57[s_2_57202,8352
static const symbol s_2_58[s_2_58203,8408
static const symbol s_2_59[s_2_59204,8464
static const symbol s_2_60[s_2_60205,8515
static const symbol s_2_61[s_2_61206,8573
static const symbol s_2_62[s_2_62207,8629
static const symbol s_2_63[s_2_63208,8680
static const symbol s_2_64[s_2_64209,8736
static const symbol s_2_65[s_2_65210,8782
static const symbol s_2_66[s_2_66211,8828
static const symbol s_2_67[s_2_67212,8879
static const symbol s_2_68[s_2_68213,8930
static const symbol s_2_69[s_2_69214,8993
static const symbol s_2_70[s_2_70215,9049
static const symbol s_2_71[s_2_71216,9110
static const symbol s_2_72[s_2_72217,9178
static const symbol s_2_73[s_2_73218,9246
static const symbol s_2_74[s_2_74219,9314
static const symbol s_2_75[s_2_75220,9392
static const symbol s_2_76[s_2_76221,9448
static const symbol s_2_77[s_2_77222,9516
static const symbol s_2_78[s_2_78223,9562
static const symbol s_2_79[s_2_79224,9628
static const symbol s_2_80[s_2_80225,9684
static const symbol s_2_81[s_2_81226,9740
static const symbol s_2_82[s_2_82227,9796
static const symbol s_2_83[s_2_83228,9857
static const symbol s_2_84[s_2_84229,9908
static const symbol s_2_85[s_2_85230,9954
static const symbol s_2_86[s_2_86231,10005
static const symbol s_2_87[s_2_87232,10056
static const symbol s_2_88[s_2_88233,10117
static const symbol s_2_89[s_2_89234,10168
static const symbol s_2_90[s_2_90235,10241
static const symbol s_2_91[s_2_91236,10292
static const symbol s_2_92[s_2_92237,10348
static const symbol s_2_93[s_2_93238,10404
static const symbol s_2_94[s_2_94239,10470
static const symbol s_2_95[s_2_95240,10536
static const symbol s_2_96[s_2_96241,10609
static const symbol s_2_97[s_2_97242,10677
static const symbol s_2_98[s_2_98243,10743
static const symbol s_2_99[s_2_99244,10804
static const symbol s_2_100[s_2_100245,10872
static const symbol s_2_101[s_2_101246,10934
static const symbol s_2_102[s_2_102247,11003
static const symbol s_2_103[s_2_103248,11082
static const symbol s_2_104[s_2_104249,11139
static const symbol s_2_105[s_2_105250,11201
static const symbol s_2_106[s_2_106251,11263
static const symbol s_2_107[s_2_107252,11320
static const symbol s_2_108[s_2_108253,11399
static const symbol s_2_109[s_2_109254,11489
static const symbol s_2_110[s_2_110255,11556
static const symbol s_2_111[s_2_111256,11618
static const symbol s_2_112[s_2_112257,11695
static const symbol s_2_113[s_2_113258,11752
static const symbol s_2_114[s_2_114259,11809
static const symbol s_2_115[s_2_115260,11866
static const symbol s_2_116[s_2_116261,11928
static const symbol s_2_117[s_2_117262,11995
static const symbol s_2_118[s_2_118263,12057
static const symbol s_2_119[s_2_119264,12114
static const symbol s_2_120[s_2_120265,12171
static const symbol s_2_121[s_2_121266,12233
static const symbol s_2_122[s_2_122267,12295
static const symbol s_2_123[s_2_123268,12352
static const symbol s_2_124[s_2_124269,12409
static const symbol s_2_125[s_2_125270,12471
static const symbol s_2_126[s_2_126271,12548
static const symbol s_2_127[s_2_127272,12625
static const symbol s_2_128[s_2_128273,12687
static const symbol s_2_129[s_2_129274,12771
static const symbol s_2_130[s_2_130275,12828
static const symbol s_2_131[s_2_131276,12895
static const symbol s_2_132[s_2_132277,12969
static const symbol s_2_133[s_2_133278,13059
static const symbol s_2_134[s_2_134279,13116
static const symbol s_2_135[s_2_135280,13180
static const symbol s_2_136[s_2_136281,13242
static const symbol s_2_137[s_2_137282,13299
static const symbol s_2_138[s_2_138283,13361
static const symbol s_2_139[s_2_139284,13408
static const symbol s_2_140[s_2_140285,13460
static const symbol s_2_141[s_2_141286,13517
static const symbol s_2_142[s_2_142287,13569
static const symbol s_2_143[s_2_143288,13643
static const symbol s_2_144[s_2_144289,13727
static const symbol s_2_145[s_2_145290,13784
static const symbol s_2_146[s_2_146291,13846
static const symbol s_2_147[s_2_147292,13913
static const symbol s_2_148[s_2_148293,13970
static const symbol s_2_149[s_2_149294,14027
static const symbol s_2_150[s_2_150295,14089
static const symbol s_2_151[s_2_151296,14151
static const symbol s_2_152[s_2_152297,14203
static const symbol s_2_153[s_2_153298,14255
static const symbol s_2_154[s_2_154299,14312
static const symbol s_2_155[s_2_155300,14374
static const symbol s_2_156[s_2_156301,14436
static const symbol s_2_157[s_2_157302,14488
static const symbol s_2_158[s_2_158303,14550
static const symbol s_2_159[s_2_159304,14627
static const symbol s_2_160[s_2_160305,14699
static const symbol s_2_161[s_2_161306,14781
static const symbol s_2_162[s_2_162307,14850
static const symbol s_2_163[s_2_163308,14902
static const symbol s_2_164[s_2_164309,14959
static const symbol s_2_165[s_2_165310,15016
static const symbol s_2_166[s_2_166311,15078
static const symbol s_2_167[s_2_167312,15145
static const symbol s_2_168[s_2_168313,15197
static const symbol s_2_169[s_2_169314,15249
static const symbol s_2_170[s_2_170315,15301
static const symbol s_2_171[s_2_171316,15363
static const symbol s_2_172[s_2_172317,15425
static const symbol s_2_173[s_2_173318,15479
static const symbol s_2_174[s_2_174319,15533
static const symbol s_2_175[s_2_175320,15587
static const symbol s_2_176[s_2_176321,15646
static const symbol s_2_177[s_2_177322,15700
static const symbol s_2_178[s_2_178323,15757
static const symbol s_2_179[s_2_179324,15829
static const symbol s_2_180[s_2_180325,15896
static const symbol s_2_181[s_2_181326,15973
static const symbol s_2_182[s_2_182327,16037
static const symbol s_2_183[s_2_183328,16084
static const symbol s_2_184[s_2_184329,16136
static const symbol s_2_185[s_2_185330,16188
static const symbol s_2_186[s_2_186331,16245
static const symbol s_2_187[s_2_187332,16302
static const symbol s_2_188[s_2_188333,16364
static const symbol s_2_189[s_2_189334,16436
static const symbol s_2_190[s_2_190335,16483
static const symbol s_2_191[s_2_191336,16545
static const symbol s_2_192[s_2_192337,16614
static const symbol s_2_193[s_2_193338,16683
static const symbol s_2_194[s_2_194339,16740
static const symbol s_2_195[s_2_195340,16809
static const symbol s_2_196[s_2_196341,16866
static const symbol s_2_197[s_2_197342,16915
static const symbol s_2_198[s_2_198343,16969
static const symbol s_2_199[s_2_199344,17028
static const struct among a_2[a_2346,17093
static const symbol s_3_0[s_3_0550,23865
static const symbol s_3_1[s_3_1551,23915
static const symbol s_3_2[s_3_2552,23970
static const symbol s_3_3[s_3_3553,24025
static const symbol s_3_4[s_3_4554,24087
static const symbol s_3_5[s_3_5555,24137
static const symbol s_3_6[s_3_6556,24187
static const symbol s_3_7[s_3_7557,24237
static const symbol s_3_8[s_3_8558,24294
static const symbol s_3_9[s_3_9559,24339
static const symbol s_3_10[s_3_10560,24394
static const symbol s_3_11[s_3_11561,24450
static const symbol s_3_12[s_3_12562,24501
static const symbol s_3_13[s_3_13563,24557
static const symbol s_3_14[s_3_14564,24608
static const symbol s_3_15[s_3_15565,24669
static const symbol s_3_16[s_3_16566,24727
static const symbol s_3_17[s_3_17567,24778
static const symbol s_3_18[s_3_18568,24829
static const symbol s_3_19[s_3_19569,24885
static const symbol s_3_20[s_3_20570,24938
static const symbol s_3_21[s_3_21571,25001
static const symbol s_3_22[s_3_22572,25064
static const symbol s_3_23[s_3_23573,25127
static const symbol s_3_24[s_3_24574,25180
static const symbol s_3_25[s_3_25575,25231
static const symbol s_3_26[s_3_26576,25289
static const symbol s_3_27[s_3_27577,25335
static const symbol s_3_28[s_3_28578,25381
static const symbol s_3_29[s_3_29579,25427
static const symbol s_3_30[s_3_30580,25473
static const symbol s_3_31[s_3_31581,25519
static const symbol s_3_32[s_3_32582,25570
static const symbol s_3_33[s_3_33583,25621
static const symbol s_3_34[s_3_34584,25677
static const symbol s_3_35[s_3_35585,25733
static const symbol s_3_36[s_3_36586,25789
static const symbol s_3_37[s_3_37587,25835
static const symbol s_3_38[s_3_38588,25886
static const symbol s_3_39[s_3_39589,25947
static const symbol s_3_40[s_3_40590,26003
static const symbol s_3_41[s_3_41591,26059
static const symbol s_3_42[s_3_42592,26105
static const symbol s_3_43[s_3_43593,26151
static const symbol s_3_44[s_3_44594,26207
static const symbol s_3_45[s_3_45595,26263
static const symbol s_3_46[s_3_46596,26326
static const symbol s_3_47[s_3_47597,26389
static const symbol s_3_48[s_3_48598,26457
static const symbol s_3_49[s_3_49599,26525
static const symbol s_3_50[s_3_50600,26586
static const symbol s_3_51[s_3_51601,26654
static const symbol s_3_52[s_3_52602,26710
static const symbol s_3_53[s_3_53603,26773
static const symbol s_3_54[s_3_54604,26836
static const symbol s_3_55[s_3_55605,26904
static const symbol s_3_56[s_3_56606,26962
static const symbol s_3_57[s_3_57607,27030
static const symbol s_3_58[s_3_58608,27098
static const symbol s_3_59[s_3_59609,27159
static const symbol s_3_60[s_3_60610,27220
static const symbol s_3_61[s_3_61611,27281
static const symbol s_3_62[s_3_62612,27349
static const symbol s_3_63[s_3_63613,27417
static const symbol s_3_64[s_3_64614,27485
static const symbol s_3_65[s_3_65615,27553
static const symbol s_3_66[s_3_66616,27606
static const symbol s_3_67[s_3_67617,27652
static const symbol s_3_68[s_3_68618,27708
static const symbol s_3_69[s_3_69619,27769
static const symbol s_3_70[s_3_70620,27825
static const symbol s_3_71[s_3_71621,27886
static const symbol s_3_72[s_3_72622,27942
static const symbol s_3_73[s_3_73623,28000
static const symbol s_3_74[s_3_74624,28068
static const symbol s_3_75[s_3_75625,28136
static const symbol s_3_76[s_3_76626,28204
static const symbol s_3_77[s_3_77627,28250
static const symbol s_3_78[s_3_78628,28301
static const symbol s_3_79[s_3_79629,28362
static const symbol s_3_80[s_3_80630,28423
static const symbol s_3_81[s_3_81631,28479
static const symbol s_3_82[s_3_82632,28535
static const symbol s_3_83[s_3_83633,28591
static const symbol s_3_84[s_3_84634,28654
static const symbol s_3_85[s_3_85635,28717
static const symbol s_3_86[s_3_86636,28773
static const symbol s_3_87[s_3_87637,28834
static const symbol s_3_88[s_3_88638,28895
static const symbol s_3_89[s_3_89639,28956
static const symbol s_3_90[s_3_90640,29017
static const symbol s_3_91[s_3_91641,29085
static const symbol s_3_92[s_3_92642,29153
static const symbol s_3_93[s_3_93643,29219
static const symbol s_3_94[s_3_94644,29285
static const symbol s_3_95[s_3_95645,29358
static const symbol s_3_96[s_3_96646,29414
static const symbol s_3_97[s_3_97647,29470
static const symbol s_3_98[s_3_98648,29531
static const symbol s_3_99[s_3_99649,29594
static const symbol s_3_100[s_3_100650,29652
static const symbol s_3_101[s_3_101651,29699
static const symbol s_3_102[s_3_102652,29756
static const symbol s_3_103[s_3_103653,29808
static const symbol s_3_104[s_3_104654,29865
static const symbol s_3_105[s_3_105655,29927
static const symbol s_3_106[s_3_106656,29989
static const symbol s_3_107[s_3_107657,30051
static const symbol s_3_108[s_3_108658,30120
static const symbol s_3_109[s_3_109659,30187
static const symbol s_3_110[s_3_110660,30249
static const symbol s_3_111[s_3_111661,30306
static const symbol s_3_112[s_3_112662,30368
static const symbol s_3_113[s_3_113663,30432
static const symbol s_3_114[s_3_114664,30496
static const symbol s_3_115[s_3_115665,30560
static const symbol s_3_116[s_3_116666,30619
static const symbol s_3_117[s_3_117667,30671
static const symbol s_3_118[s_3_118668,30723
static const symbol s_3_119[s_3_119669,30780
static const symbol s_3_120[s_3_120670,30842
static const symbol s_3_121[s_3_121671,30889
static const symbol s_3_122[s_3_122672,30941
static const symbol s_3_123[s_3_123673,30998
static const symbol s_3_124[s_3_124674,31057
static const symbol s_3_125[s_3_125675,31114
static const symbol s_3_126[s_3_126676,31161
static const symbol s_3_127[s_3_127677,31218
static const symbol s_3_128[s_3_128678,31265
static const symbol s_3_129[s_3_129679,31327
static const symbol s_3_130[s_3_130680,31374
static const symbol s_3_131[s_3_131681,31431
static const symbol s_3_132[s_3_132682,31478
static const symbol s_3_133[s_3_133683,31535
static const symbol s_3_134[s_3_134684,31592
static const symbol s_3_135[s_3_135685,31649
static const symbol s_3_136[s_3_136686,31706
static const symbol s_3_137[s_3_137687,31768
static const symbol s_3_138[s_3_138688,31827
static const symbol s_3_139[s_3_139689,31896
static const symbol s_3_140[s_3_140690,31965
static const symbol s_3_141[s_3_141691,32034
static const symbol s_3_142[s_3_142692,32086
static const symbol s_3_143[s_3_143693,32133
static const symbol s_3_144[s_3_144694,32190
static const symbol s_3_145[s_3_145695,32247
static const symbol s_3_146[s_3_146696,32304
static const symbol s_3_147[s_3_147697,32368
static const symbol s_3_148[s_3_148698,32430
static const symbol s_3_149[s_3_149699,32482
static const symbol s_3_150[s_3_150700,32544
static const symbol s_3_151[s_3_151701,32606
static const symbol s_3_152[s_3_152702,32663
static const symbol s_3_153[s_3_153703,32720
static const symbol s_3_154[s_3_154704,32787
static const symbol s_3_155[s_3_155705,32851
static const symbol s_3_156[s_3_156706,32908
static const symbol s_3_157[s_3_157707,32970
static const symbol s_3_158[s_3_158708,33032
static const symbol s_3_159[s_3_159709,33094
static const symbol s_3_160[s_3_160710,33156
static const symbol s_3_161[s_3_161711,33225
static const symbol s_3_162[s_3_162712,33282
static const symbol s_3_163[s_3_163713,33349
static const symbol s_3_164[s_3_164714,33423
static const symbol s_3_165[s_3_165715,33480
static const symbol s_3_166[s_3_166716,33537
static const symbol s_3_167[s_3_167717,33599
static const symbol s_3_168[s_3_168718,33663
static const symbol s_3_169[s_3_169719,33722
static const symbol s_3_170[s_3_170720,33784
static const symbol s_3_171[s_3_171721,33846
static const symbol s_3_172[s_3_172722,33913
static const symbol s_3_173[s_3_173723,33977
static const symbol s_3_174[s_3_174724,34051
static const symbol s_3_175[s_3_175725,34125
static const symbol s_3_176[s_3_176726,34199
static const symbol s_3_177[s_3_177727,34261
static const symbol s_3_178[s_3_178728,34328
static const symbol s_3_179[s_3_179729,34395
static const symbol s_3_180[s_3_180730,34462
static const symbol s_3_181[s_3_181731,34519
static const symbol s_3_182[s_3_182732,34571
static const symbol s_3_183[s_3_183733,34628
static const symbol s_3_184[s_3_184734,34690
static const symbol s_3_185[s_3_185735,34752
static const symbol s_3_186[s_3_186736,34814
static const symbol s_3_187[s_3_187737,34883
static const symbol s_3_188[s_3_188738,34950
static const symbol s_3_189[s_3_189739,35012
static const symbol s_3_190[s_3_190740,35074
static const symbol s_3_191[s_3_191741,35133
static const symbol s_3_192[s_3_192742,35202
static const symbol s_3_193[s_3_193743,35271
static const symbol s_3_194[s_3_194744,35340
static const symbol s_3_195[s_3_195745,35392
static const symbol s_3_196[s_3_196746,35449
static const symbol s_3_197[s_3_197747,35506
static const symbol s_3_198[s_3_198748,35563
static const symbol s_3_199[s_3_199749,35637
static const symbol s_3_200[s_3_200750,35711
static const symbol s_3_201[s_3_201751,35790
static const symbol s_3_202[s_3_202752,35859
static const symbol s_3_203[s_3_203753,35938
static const symbol s_3_204[s_3_204754,36017
static const symbol s_3_205[s_3_205755,36096
static const symbol s_3_206[s_3_206756,36163
static const symbol s_3_207[s_3_207757,36230
static const symbol s_3_208[s_3_208758,36297
static const symbol s_3_209[s_3_209759,36371
static const symbol s_3_210[s_3_210760,36450
static const symbol s_3_211[s_3_211761,36507
static const symbol s_3_212[s_3_212762,36569
static const symbol s_3_213[s_3_213763,36621
static const symbol s_3_214[s_3_214764,36683
static const symbol s_3_215[s_3_215765,36735
static const symbol s_3_216[s_3_216766,36787
static const symbol s_3_217[s_3_217767,36839
static const symbol s_3_218[s_3_218768,36896
static const symbol s_3_219[s_3_219769,36950
static const symbol s_3_220[s_3_220770,37014
static const symbol s_3_221[s_3_221771,37078
static const symbol s_3_222[s_3_222772,37142
static const symbol s_3_223[s_3_223773,37206
static const symbol s_3_224[s_3_224774,37270
static const symbol s_3_225[s_3_225775,37324
static const symbol s_3_226[s_3_226776,37388
static const symbol s_3_227[s_3_227777,37442
static const symbol s_3_228[s_3_228778,37501
static const symbol s_3_229[s_3_229779,37548
static const symbol s_3_230[s_3_230780,37595
static const symbol s_3_231[s_3_231781,37647
static const symbol s_3_232[s_3_232782,37699
static const symbol s_3_233[s_3_233783,37751
static const symbol s_3_234[s_3_234784,37798
static const symbol s_3_235[s_3_235785,37852
static const symbol s_3_236[s_3_236786,37899
static const symbol s_3_237[s_3_237787,37956
static const symbol s_3_238[s_3_238788,38008
static const symbol s_3_239[s_3_239789,38065
static const symbol s_3_240[s_3_240790,38122
static const symbol s_3_241[s_3_241791,38179
static const symbol s_3_242[s_3_242792,38243
static const symbol s_3_243[s_3_243793,38307
static const symbol s_3_244[s_3_244794,38369
static const symbol s_3_245[s_3_245795,38431
static const symbol s_3_246[s_3_246796,38503
static const symbol s_3_247[s_3_247797,38572
static const symbol s_3_248[s_3_248798,38641
static const symbol s_3_249[s_3_249799,38703
static const symbol s_3_250[s_3_250800,38772
static const symbol s_3_251[s_3_251801,38836
static const symbol s_3_252[s_3_252802,38900
static const symbol s_3_253[s_3_253803,38962
static const symbol s_3_254[s_3_254804,39021
static const symbol s_3_255[s_3_255805,39090
static const symbol s_3_256[s_3_256806,39149
static const symbol s_3_257[s_3_257807,39218
static const symbol s_3_258[s_3_258808,39287
static const symbol s_3_259[s_3_259809,39349
static const symbol s_3_260[s_3_260810,39411
static const symbol s_3_261[s_3_261811,39480
static const symbol s_3_262[s_3_262812,39549
static const symbol s_3_263[s_3_263813,39618
static const symbol s_3_264[s_3_264814,39687
static const symbol s_3_265[s_3_265815,39741
static const symbol s_3_266[s_3_266816,39788
static const symbol s_3_267[s_3_267817,39840
static const symbol s_3_268[s_3_268818,39894
static const symbol s_3_269[s_3_269819,39946
static const symbol s_3_270[s_3_270820,40000
static const symbol s_3_271[s_3_271821,40059
static const symbol s_3_272[s_3_272822,40118
static const symbol s_3_273[s_3_273823,40182
static const symbol s_3_274[s_3_274824,40241
static const symbol s_3_275[s_3_275825,40300
static const symbol s_3_276[s_3_276826,40359
static const symbol s_3_277[s_3_277827,40418
static const symbol s_3_278[s_3_278828,40477
static const symbol s_3_279[s_3_279829,40536
static const symbol s_3_280[s_3_280830,40595
static const symbol s_3_281[s_3_281831,40644
static const symbol s_3_282[s_3_282832,40698
static const struct among a_3[a_3834,40753
static const symbol s_4_0[s_4_01121,50377
static const symbol s_4_1[s_4_11122,50417
static const symbol s_4_2[s_4_21123,50457
static const symbol s_4_3[s_4_31124,50497
static const symbol s_4_4[s_4_41125,50549
static const symbol s_4_5[s_4_51126,50589
static const symbol s_4_6[s_4_61127,50634
static const symbol s_4_7[s_4_71128,50674
static const symbol s_4_8[s_4_81129,50719
static const symbol s_4_9[s_4_91130,50764
static const symbol s_4_10[s_4_101131,50816
static const symbol s_4_11[s_4_111132,50862
static const symbol s_4_12[s_4_121133,50908
static const symbol s_4_13[s_4_131134,50954
static const symbol s_4_14[s_4_141135,51005
static const symbol s_4_15[s_4_151136,51056
static const symbol s_4_16[s_4_161137,51104
static const symbol s_4_17[s_4_171138,51152
static const symbol s_4_18[s_4_181139,51200
static const symbol s_4_19[s_4_191140,51248
static const symbol s_4_20[s_4_201141,51296
static const symbol s_4_21[s_4_211142,51344
static const struct among a_4[a_41144,51393
static const unsigned char g_v[g_v1170,52147
static const symbol s_0[s_01172,52256
static const symbol s_1[s_11173,52293
static const symbol s_2[s_21174,52330
static const symbol s_3[s_31175,52367
static const symbol s_4[s_41176,52404
static const symbol s_5[s_51177,52441
static const symbol s_6[s_61178,52478
static const symbol s_7[s_71179,52525
static const symbol s_8[s_81180,52567
static const symbol s_9[s_91181,52604
static int r_mark_regions(1183,52647
static int r_cleaning(1215,53741
static int r_R1(1271,55635
static int r_R2(1276,55809
static int r_attached_pronoun(1281,55983
static int r_standard_suffix(1295,56509
static int r_verb_suffix(1346,58199
static int r_residual_suffix(1373,59064
extern int catalan_UTF_8_stem(1400,59939
extern struct SN_env * catalan_UTF_8_create_env(1447,61460
extern void catalan_UTF_8_close_env(1449,61550

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_spanish.c,10392
static const symbol s_0_1[s_0_134,834
static const symbol s_0_2[s_0_235,875
static const symbol s_0_3[s_0_336,916
static const symbol s_0_4[s_0_437,957
static const symbol s_0_5[s_0_538,998
static const struct among a_0[a_040,1040
static const symbol s_1_0[s_1_050,1263
static const symbol s_1_1[s_1_151,1308
static const symbol s_1_2[s_1_252,1363
static const symbol s_1_3[s_1_353,1408
static const symbol s_1_4[s_1_454,1453
static const symbol s_1_5[s_1_555,1498
static const symbol s_1_6[s_1_656,1543
static const symbol s_1_7[s_1_757,1598
static const symbol s_1_8[s_1_858,1648
static const symbol s_1_9[s_1_959,1708
static const symbol s_1_10[s_1_1060,1758
static const symbol s_1_11[s_1_1161,1809
static const symbol s_1_12[s_1_1262,1870
static const struct among a_1[a_164,1922
static const symbol s_2_0[s_2_081,2392
static const symbol s_2_1[s_2_182,2447
static const symbol s_2_2[s_2_283,2507
static const symbol s_2_3[s_2_384,2567
static const symbol s_2_4[s_2_485,2623
static const symbol s_2_5[s_2_586,2684
static const symbol s_2_6[s_2_687,2729
static const symbol s_2_7[s_2_788,2774
static const symbol s_2_8[s_2_889,2819
static const symbol s_2_9[s_2_990,2865
static const symbol s_2_10[s_2_1091,2911
static const struct among a_2[a_293,2959
static const symbol s_3_0[s_3_0108,3353
static const symbol s_3_1[s_3_1109,3398
static const symbol s_3_2[s_3_2110,3443
static const symbol s_3_3[s_3_3111,3488
static const struct among a_3[a_3113,3534
static const symbol s_4_0[s_4_0121,3705
static const symbol s_4_1[s_4_1122,3760
static const symbol s_4_2[s_4_2123,3815
static const struct among a_4[a_4125,3871
static const symbol s_5_0[s_5_0132,4007
static const symbol s_5_1[s_5_1133,4052
static const symbol s_5_2[s_5_2134,4107
static const struct among a_5[a_5136,4153
static const symbol s_6_0[s_6_0143,4289
static const symbol s_6_1[s_6_1144,4339
static const symbol s_6_2[s_6_2145,4399
static const symbol s_6_3[s_6_3146,4459
static const symbol s_6_4[s_6_4147,4519
static const symbol s_6_5[s_6_5148,4569
static const symbol s_6_6[s_6_6149,4624
static const symbol s_6_7[s_6_7150,4674
static const symbol s_6_8[s_6_8151,4729
static const symbol s_6_9[s_6_9152,4790
static const symbol s_6_10[s_6_10153,4845
static const symbol s_6_11[s_6_11154,4901
static const symbol s_6_12[s_6_12155,4957
static const symbol s_6_13[s_6_13156,5013
static const symbol s_6_14[s_6_14157,5074
static const symbol s_6_15[s_6_15158,5140
static const symbol s_6_16[s_6_16159,5202
static const symbol s_6_17[s_6_17160,5264
static const symbol s_6_18[s_6_18161,5315
static const symbol s_6_19[s_6_19162,5371
static const symbol s_6_20[s_6_20163,5422
static const symbol s_6_21[s_6_21164,5493
static const symbol s_6_22[s_6_22165,5564
static const symbol s_6_23[s_6_23166,5615
static const symbol s_6_24[s_6_24167,5671
static const symbol s_6_25[s_6_25168,5727
static const symbol s_6_26[s_6_26169,5793
static const symbol s_6_27[s_6_27170,5859
static const symbol s_6_28[s_6_28171,5925
static const symbol s_6_29[s_6_29172,5981
static const symbol s_6_30[s_6_30173,6042
static const symbol s_6_31[s_6_31174,6098
static const symbol s_6_32[s_6_32175,6159
static const symbol s_6_33[s_6_33176,6226
static const symbol s_6_34[s_6_34177,6292
static const symbol s_6_35[s_6_35178,6353
static const symbol s_6_36[s_6_36179,6414
static const symbol s_6_37[s_6_37180,6485
static const symbol s_6_38[s_6_38181,6556
static const symbol s_6_39[s_6_39182,6622
static const symbol s_6_40[s_6_40183,6683
static const symbol s_6_41[s_6_41184,6739
static const symbol s_6_42[s_6_42185,6800
static const symbol s_6_43[s_6_43186,6856
static const symbol s_6_44[s_6_44187,6932
static const symbol s_6_45[s_6_45188,7008
static const struct among a_6[a_6190,7065
static const symbol s_7_0[s_7_0240,8614
static const symbol s_7_1[s_7_1241,8659
static const symbol s_7_2[s_7_2242,8704
static const symbol s_7_3[s_7_3243,8754
static const symbol s_7_4[s_7_4244,8804
static const symbol s_7_5[s_7_5245,8864
static const symbol s_7_6[s_7_6246,8924
static const symbol s_7_7[s_7_7247,8969
static const symbol s_7_8[s_7_8248,9019
static const symbol s_7_9[s_7_9249,9069
static const symbol s_7_10[s_7_10250,9124
static const symbol s_7_11[s_7_11251,9185
static const struct among a_7[a_7253,9233
static const symbol s_8_0[s_8_0269,9660
static const symbol s_8_1[s_8_1270,9710
static const symbol s_8_2[s_8_2271,9760
static const symbol s_8_3[s_8_3272,9810
static const symbol s_8_4[s_8_4273,9860
static const symbol s_8_5[s_8_5274,9915
static const symbol s_8_6[s_8_6275,9961
static const symbol s_8_7[s_8_7276,10017
static const symbol s_8_8[s_8_8277,10073
static const symbol s_8_9[s_8_9278,10129
static const symbol s_8_10[s_8_10279,10174
static const symbol s_8_11[s_8_11280,10220
static const symbol s_8_12[s_8_12281,10266
static const symbol s_8_13[s_8_13282,10317
static const symbol s_8_14[s_8_14283,10373
static const symbol s_8_15[s_8_15284,10429
static const symbol s_8_16[s_8_16285,10485
static const symbol s_8_17[s_8_17286,10531
static const symbol s_8_18[s_8_18287,10587
static const symbol s_8_19[s_8_19288,10643
static const symbol s_8_20[s_8_20289,10704
static const symbol s_8_21[s_8_21290,10756
static const symbol s_8_22[s_8_22291,10818
static const symbol s_8_23[s_8_23292,10880
static const symbol s_8_24[s_8_24293,10942
static const symbol s_8_25[s_8_25294,10988
static const symbol s_8_26[s_8_26295,11044
static const symbol s_8_27[s_8_27296,11105
static const symbol s_8_28[s_8_28297,11161
static const symbol s_8_29[s_8_29298,11222
static const symbol s_8_30[s_8_30299,11279
static const symbol s_8_31[s_8_31300,11336
static const symbol s_8_32[s_8_32301,11393
static const symbol s_8_33[s_8_33302,11444
static const symbol s_8_34[s_8_34303,11495
static const symbol s_8_35[s_8_35304,11551
static const symbol s_8_36[s_8_36305,11612
static const symbol s_8_37[s_8_37306,11658
static const symbol s_8_38[s_8_38307,11704
static const symbol s_8_39[s_8_39308,11750
static const symbol s_8_40[s_8_40309,11796
static const symbol s_8_41[s_8_41310,11852
static const symbol s_8_42[s_8_42311,11908
static const symbol s_8_43[s_8_43312,11964
static const symbol s_8_44[s_8_44313,12020
static const symbol s_8_45[s_8_45314,12081
static const symbol s_8_46[s_8_46315,12133
static const symbol s_8_47[s_8_47316,12195
static const symbol s_8_48[s_8_48317,12257
static const symbol s_8_49[s_8_49318,12319
static const symbol s_8_50[s_8_50319,12365
static const symbol s_8_51[s_8_51320,12421
static const symbol s_8_52[s_8_52321,12482
static const symbol s_8_53[s_8_53322,12543
static const symbol s_8_54[s_8_54323,12604
static const symbol s_8_55[s_8_55324,12670
static const symbol s_8_56[s_8_56325,12727
static const symbol s_8_57[s_8_57326,12794
static const symbol s_8_58[s_8_58327,12861
static const symbol s_8_59[s_8_59328,12928
static const symbol s_8_60[s_8_60329,12989
static const symbol s_8_61[s_8_61330,13055
static const symbol s_8_62[s_8_62331,13121
static const symbol s_8_63[s_8_63332,13187
static const symbol s_8_64[s_8_64333,13239
static const symbol s_8_65[s_8_65334,13291
static const symbol s_8_66[s_8_66335,13353
static const symbol s_8_67[s_8_67336,13415
static const symbol s_8_68[s_8_68337,13477
static const symbol s_8_69[s_8_69338,13533
static const symbol s_8_70[s_8_70339,13589
static const symbol s_8_71[s_8_71340,13645
static const symbol s_8_72[s_8_72341,13712
static const symbol s_8_73[s_8_73342,13779
static const symbol s_8_74[s_8_74343,13851
static const symbol s_8_75[s_8_75344,13913
static const symbol s_8_76[s_8_76345,13985
static const symbol s_8_77[s_8_77346,14057
static const symbol s_8_78[s_8_78347,14129
static const symbol s_8_79[s_8_79348,14185
static const symbol s_8_80[s_8_80349,14251
static const symbol s_8_81[s_8_81350,14317
static const symbol s_8_82[s_8_82351,14383
static const symbol s_8_83[s_8_83352,14450
static const symbol s_8_84[s_8_84353,14522
static const symbol s_8_85[s_8_85354,14578
static const symbol s_8_86[s_8_86355,14635
static const symbol s_8_87[s_8_87356,14692
static const symbol s_8_88[s_8_88357,14749
static const symbol s_8_89[s_8_89358,14796
static const symbol s_8_90[s_8_90359,14848
static const symbol s_8_91[s_8_91360,14900
static const symbol s_8_92[s_8_92361,14952
static const symbol s_8_93[s_8_93362,15004
static const symbol s_8_94[s_8_94363,15056
static const symbol s_8_95[s_8_95364,15108
static const struct among a_8[a_8366,15156
static const symbol s_9_0[s_9_0466,18352
static const symbol s_9_1[s_9_1467,18392
static const symbol s_9_2[s_9_2468,18432
static const symbol s_9_3[s_9_3469,18472
static const symbol s_9_4[s_9_4470,18517
static const symbol s_9_5[s_9_5471,18558
static const symbol s_9_6[s_9_6472,18599
static const symbol s_9_7[s_9_7473,18640
static const struct among a_9[a_9475,18682
static const unsigned char g_v[g_v487,18978
static const symbol s_0[s_0489,19083
static const symbol s_1[s_1490,19120
static const symbol s_2[s_2491,19157
static const symbol s_3[s_3492,19194
static const symbol s_4[s_4493,19231
static const symbol s_5[s_5494,19268
static const symbol s_6[s_6495,19325
static const symbol s_7[s_7496,19377
static const symbol s_8[s_8497,19419
static const symbol s_9[s_9498,19461
static const symbol s_10[s_10499,19503
static const symbol s_11[s_11500,19546
static const symbol s_12[s_12501,19594
static const symbol s_13[s_13502,19632
static const symbol s_14[s_14503,19685
static const symbol s_15[s_15504,19728
static int r_mark_regions(506,19772
static int r_postlude(586,22743
static int r_RV(635,24362
static int r_R1(640,24536
static int r_R2(645,24710
static int r_attached_pronoun(650,24884
static int r_standard_suffix(709,27003
static int r_y_verb_suffix(881,34259
static int r_verb_suffix(899,34869
static int r_residual_suffix(938,36280
extern int spanish_ISO_8859_1_stem(985,38105
extern struct SN_env * spanish_ISO_8859_1_create_env(1039,39875
extern void spanish_ISO_8859_1_close_env(1041,39970

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_2_hungarian.c,9789
static const symbol s_0_0[s_0_038,987
static const symbol s_0_1[s_0_139,1032
static const symbol s_0_2[s_0_240,1082
static const symbol s_0_3[s_0_341,1127
static const symbol s_0_4[s_0_442,1172
static const symbol s_0_5[s_0_543,1217
static const symbol s_0_6[s_0_644,1262
static const symbol s_0_7[s_0_745,1307
static const struct among a_0[a_047,1353
static const symbol s_1_0[s_1_059,1657
static const symbol s_1_1[s_1_160,1698
static const struct among a_1[a_162,1740
static const symbol s_2_0[s_2_068,1844
static const symbol s_2_1[s_2_169,1889
static const symbol s_2_2[s_2_270,1934
static const symbol s_2_3[s_2_371,1979
static const symbol s_2_4[s_2_472,2024
static const symbol s_2_5[s_2_573,2069
static const symbol s_2_6[s_2_674,2114
static const symbol s_2_7[s_2_775,2159
static const symbol s_2_8[s_2_876,2204
static const symbol s_2_9[s_2_977,2249
static const symbol s_2_10[s_2_1078,2294
static const symbol s_2_11[s_2_1179,2340
static const symbol s_2_12[s_2_1280,2386
static const symbol s_2_13[s_2_1381,2437
static const symbol s_2_14[s_2_1482,2483
static const symbol s_2_15[s_2_1583,2534
static const symbol s_2_16[s_2_1684,2580
static const symbol s_2_17[s_2_1785,2626
static const symbol s_2_18[s_2_1886,2677
static const symbol s_2_19[s_2_1987,2728
static const symbol s_2_20[s_2_2088,2779
static const symbol s_2_21[s_2_2189,2830
static const symbol s_2_22[s_2_2290,2881
static const struct among a_2[a_292,2928
static const symbol s_3_0[s_3_0119,3741
static const symbol s_3_1[s_3_1120,3786
static const struct among a_3[a_3122,3832
static const symbol s_4_0[s_4_0128,3936
static const symbol s_4_1[s_4_1129,3981
static const symbol s_4_2[s_4_2130,4026
static const symbol s_4_3[s_4_3131,4071
static const symbol s_4_4[s_4_4132,4116
static const symbol s_4_5[s_4_5133,4161
static const symbol s_4_6[s_4_6134,4211
static const symbol s_4_7[s_4_7135,4261
static const symbol s_4_8[s_4_8136,4311
static const symbol s_4_9[s_4_9137,4361
static const symbol s_4_10[s_4_10138,4406
static const symbol s_4_11[s_4_11139,4458
static const symbol s_4_12[s_4_12140,4510
static const symbol s_4_13[s_4_13141,4562
static const symbol s_4_14[s_4_14142,4614
static const symbol s_4_15[s_4_15143,4666
static const symbol s_4_16[s_4_16144,4718
static const symbol s_4_17[s_4_17145,4770
static const symbol s_4_18[s_4_18146,4822
static const symbol s_4_19[s_4_19147,4869
static const symbol s_4_20[s_4_20148,4910
static const symbol s_4_21[s_4_21149,4956
static const symbol s_4_22[s_4_22150,5007
static const symbol s_4_23[s_4_23151,5053
static const symbol s_4_24[s_4_24152,5104
static const symbol s_4_25[s_4_25153,5171
static const symbol s_4_26[s_4_26154,5217
static const symbol s_4_27[s_4_27155,5264
static const symbol s_4_28[s_4_28156,5321
static const symbol s_4_29[s_4_29157,5372
static const symbol s_4_30[s_4_30158,5413
static const symbol s_4_31[s_4_31159,5459
static const symbol s_4_32[s_4_32160,5505
static const symbol s_4_33[s_4_33161,5562
static const symbol s_4_34[s_4_34162,5629
static const symbol s_4_35[s_4_35163,5696
static const symbol s_4_36[s_4_36164,5763
static const symbol s_4_37[s_4_37165,5809
static const symbol s_4_38[s_4_38166,5861
static const symbol s_4_39[s_4_39167,5908
static const symbol s_4_40[s_4_40168,5959
static const symbol s_4_41[s_4_41169,6010
static const symbol s_4_42[s_4_42170,6062
static const symbol s_4_43[s_4_43171,6109
static const struct among a_4[a_4173,6157
static const symbol s_5_0[s_5_0221,7684
static const symbol s_5_1[s_5_1222,7730
static const symbol s_5_2[s_5_2223,7776
static const struct among a_5[a_5225,7844
static const symbol s_6_0[s_6_0232,7980
static const symbol s_6_1[s_6_1233,8035
static const symbol s_6_2[s_6_2234,8095
static const symbol s_6_3[s_6_3235,8156
static const symbol s_6_4[s_6_4236,8212
static const symbol s_6_5[s_6_5237,8273
static const struct among a_6[a_6239,8336
static const symbol s_7_0[s_7_0249,8564
static const symbol s_7_1[s_7_1250,8605
static const struct among a_7[a_7252,8647
static const symbol s_8_0[s_8_0258,8751
static const symbol s_8_1[s_8_1259,8791
static const symbol s_8_2[s_8_2260,8836
static const symbol s_8_3[s_8_3261,8881
static const symbol s_8_4[s_8_4262,8926
static const symbol s_8_5[s_8_5263,8972
static const symbol s_8_6[s_8_6264,9018
static const struct among a_8[a_8266,9065
static const symbol s_9_0[s_9_0277,9323
static const symbol s_9_1[s_9_1278,9369
static const symbol s_9_2[s_9_2279,9421
static const symbol s_9_3[s_9_3280,9473
static const symbol s_9_4[s_9_4281,9514
static const symbol s_9_5[s_9_5282,9560
static const symbol s_9_6[s_9_6283,9611
static const symbol s_9_7[s_9_7284,9662
static const symbol s_9_8[s_9_8285,9713
static const symbol s_9_9[s_9_9286,9765
static const symbol s_9_10[s_9_10287,9817
static const symbol s_9_11[s_9_11288,9870
static const struct among a_9[a_9290,9919
static const symbol s_10_0[s_10_0306,10336
static const symbol s_10_1[s_10_1307,10377
static const symbol s_10_2[s_10_2308,10423
static const symbol s_10_3[s_10_3309,10464
static const symbol s_10_4[s_10_4310,10510
static const symbol s_10_5[s_10_5311,10556
static const symbol s_10_6[s_10_6312,10602
static const symbol s_10_7[s_10_7313,10649
static const symbol s_10_8[s_10_8314,10696
static const symbol s_10_9[s_10_9315,10743
static const symbol s_10_10[s_10_10316,10784
static const symbol s_10_11[s_10_11317,10831
static const symbol s_10_12[s_10_12318,10878
static const symbol s_10_13[s_10_13319,10930
static const symbol s_10_14[s_10_14320,10983
static const symbol s_10_15[s_10_15321,11036
static const symbol s_10_16[s_10_16322,11089
static const symbol s_10_17[s_10_17323,11136
static const symbol s_10_18[s_10_18324,11188
static const symbol s_10_19[s_10_19325,11246
static const symbol s_10_20[s_10_20326,11294
static const symbol s_10_21[s_10_21327,11347
static const symbol s_10_22[s_10_22328,11406
static const symbol s_10_23[s_10_23329,11448
static const symbol s_10_24[s_10_24330,11495
static const symbol s_10_25[s_10_25331,11542
static const symbol s_10_26[s_10_26332,11589
static const symbol s_10_27[s_10_27333,11637
static const symbol s_10_28[s_10_28334,11685
static const symbol s_10_29[s_10_29335,11727
static const symbol s_10_30[s_10_30336,11770
static const struct among a_10[a_10338,11814
static const symbol s_11_0[s_11_0373,12892
static const symbol s_11_1[s_11_1374,12938
static const symbol s_11_2[s_11_2375,12989
static const symbol s_11_3[s_11_3376,13045
static const symbol s_11_4[s_11_4377,13096
static const symbol s_11_5[s_11_5378,13152
static const symbol s_11_6[s_11_6379,13204
static const symbol s_11_7[s_11_7380,13256
static const symbol s_11_8[s_11_8381,13297
static const symbol s_11_9[s_11_9382,13343
static const symbol s_11_10[s_11_10383,13394
static const symbol s_11_11[s_11_11384,13441
static const symbol s_11_12[s_11_12385,13493
static const symbol s_11_13[s_11_13386,13541
static const symbol s_11_14[s_11_14387,13589
static const symbol s_11_15[s_11_15388,13646
static const symbol s_11_16[s_11_16389,13708
static const symbol s_11_17[s_11_17390,13775
static const symbol s_11_18[s_11_18391,13838
static const symbol s_11_19[s_11_19392,13885
static const symbol s_11_20[s_11_20393,13937
static const symbol s_11_21[s_11_21394,13994
static const symbol s_11_22[s_11_22395,14046
static const symbol s_11_23[s_11_23396,14103
static const symbol s_11_24[s_11_24397,14156
static const symbol s_11_25[s_11_25398,14209
static const symbol s_11_26[s_11_26399,14261
static const symbol s_11_27[s_11_27400,14318
static const symbol s_11_28[s_11_28401,14380
static const symbol s_11_29[s_11_29402,14437
static const symbol s_11_30[s_11_30403,14499
static const symbol s_11_31[s_11_31404,14557
static const symbol s_11_32[s_11_32405,14615
static const symbol s_11_33[s_11_33406,14677
static const symbol s_11_34[s_11_34407,14744
static const symbol s_11_35[s_11_35408,14807
static const symbol s_11_36[s_11_36409,14854
static const symbol s_11_37[s_11_37410,14906
static const symbol s_11_38[s_11_38411,14963
static const symbol s_11_39[s_11_39412,15015
static const symbol s_11_40[s_11_40413,15072
static const symbol s_11_41[s_11_41414,15125
static const struct among a_11[a_11416,15179
static const unsigned char g_v[g_v462,16628
static const symbol s_0[s_0464,16734
static const symbol s_1[s_1465,16771
static const symbol s_2[s_2466,16808
static const symbol s_3[s_3467,16845
static const symbol s_4[s_4468,16882
static const symbol s_5[s_5469,16919
static const symbol s_6[s_6470,16956
static const symbol s_7[s_7471,16993
static const symbol s_8[s_8472,17030
static const symbol s_9[s_9473,17067
static const symbol s_10[s_10474,17104
static const symbol s_11[s_11475,17142
static const symbol s_12[s_12476,17180
static const symbol s_13[s_13477,17218
static int r_mark_regions(479,17257
static int r_R1(510,18433
static int r_v_ending(515,18607
static int r_double(540,19420
static int r_undouble(549,19779
static int r_instrum(564,20210
static int r_case(584,20876
static int r_case_special(600,21382
static int r_case_other(625,22210
static int r_factive(655,23162
static int r_plural(675,23858
static int r_owned(705,24802
static int r_sing_owner(735,25773
static int r_plur_owner(764,26667
extern int hungarian_ISO_8859_2_stem(794,27667
extern struct SN_env * hungarian_ISO_8859_2_create_env(861,29871
extern void hungarian_ISO_8859_2_close_env(863,29968

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_ISO_8859_1_irish.c,4428
static const symbol s_0_0[s_0_032,716
static const symbol s_0_1[s_0_133,762
static const symbol s_0_2[s_0_234,807
static const symbol s_0_3[s_0_335,857
static const symbol s_0_4[s_0_436,902
static const symbol s_0_5[s_0_537,947
static const symbol s_0_6[s_0_638,993
static const symbol s_0_7[s_0_739,1049
static const symbol s_0_8[s_0_840,1094
static const symbol s_0_9[s_0_941,1139
static const symbol s_0_10[s_0_1042,1184
static const symbol s_0_11[s_0_1143,1230
static const symbol s_0_12[s_0_1244,1276
static const symbol s_0_13[s_0_1345,1322
static const symbol s_0_14[s_0_1446,1369
static const symbol s_0_15[s_0_1547,1415
static const symbol s_0_16[s_0_1648,1461
static const symbol s_0_17[s_0_1749,1507
static const symbol s_0_18[s_0_1850,1553
static const symbol s_0_19[s_0_1951,1599
static const symbol s_0_20[s_0_2052,1645
static const symbol s_0_21[s_0_2153,1691
static const symbol s_0_22[s_0_2254,1737
static const symbol s_0_23[s_0_2355,1783
static const struct among a_0[a_057,1830
static const symbol s_1_0[s_1_085,2652
static const symbol s_1_1[s_1_186,2718
static const symbol s_1_2[s_1_287,2789
static const symbol s_1_3[s_1_388,2839
static const symbol s_1_4[s_1_489,2894
static const symbol s_1_5[s_1_590,2944
static const symbol s_1_6[s_1_691,2999
static const symbol s_1_7[s_1_792,3049
static const symbol s_1_8[s_1_893,3104
static const symbol s_1_9[s_1_994,3154
static const symbol s_1_10[s_1_1095,3209
static const symbol s_1_11[s_1_1196,3260
static const symbol s_1_12[s_1_1297,3316
static const symbol s_1_13[s_1_1398,3378
static const symbol s_1_14[s_1_1499,3445
static const symbol s_1_15[s_1_15100,3497
static const struct among a_1[a_1102,3555
static const symbol s_2_0[s_2_0122,4109
static const symbol s_2_1[s_2_1123,4185
static const symbol s_2_2[s_2_2124,4255
static const symbol s_2_3[s_2_3125,4315
static const symbol s_2_4[s_2_4126,4390
static const symbol s_2_5[s_2_5127,4455
static const symbol s_2_6[s_2_6128,4547
static const symbol s_2_7[s_2_7129,4607
static const symbol s_2_8[s_2_8130,4657
static const symbol s_2_9[s_2_9131,4712
static const symbol s_2_10[s_2_10132,4783
static const symbol s_2_11[s_2_11133,4854
static const symbol s_2_12[s_2_12134,4920
static const symbol s_2_13[s_2_13135,5002
static const symbol s_2_14[s_2_14136,5073
static const symbol s_2_15[s_2_15137,5140
static const symbol s_2_16[s_2_16138,5212
static const symbol s_2_17[s_2_17139,5289
static const symbol s_2_18[s_2_18140,5355
static const symbol s_2_19[s_2_19141,5416
static const symbol s_2_20[s_2_20142,5472
static const symbol s_2_21[s_2_21143,5543
static const symbol s_2_22[s_2_22144,5604
static const symbol s_2_23[s_2_23145,5692
static const symbol s_2_24[s_2_24146,5774
static const struct among a_2[a_2148,5874
static const symbol s_3_0[s_3_0177,6727
static const symbol s_3_1[s_3_1178,6782
static const symbol s_3_2[s_3_2179,6842
static const symbol s_3_3[s_3_3180,6898
static const symbol s_3_4[s_3_4181,6959
static const symbol s_3_5[s_3_5182,7009
static const symbol s_3_6[s_3_6183,7064
static const symbol s_3_7[s_3_7184,7124
static const symbol s_3_8[s_3_8185,7179
static const symbol s_3_9[s_3_9186,7230
static const symbol s_3_10[s_3_10187,7280
static const symbol s_3_11[s_3_11188,7336
static const struct among a_3[a_3190,7388
static const unsigned char g_v[g_v206,7812
static const symbol s_0[s_0208,7916
static const symbol s_1[s_1209,7953
static const symbol s_2[s_2210,7990
static const symbol s_3[s_3211,8027
static const symbol s_4[s_4212,8064
static const symbol s_5[s_5213,8101
static const symbol s_6[s_6214,8138
static const symbol s_7[s_7215,8175
static const symbol s_8[s_8216,8212
static const symbol s_9[s_9217,8249
static const symbol s_10[s_10218,8296
static const symbol s_11[s_11219,8344
static const symbol s_12[s_12220,8397
static const symbol s_13[s_13221,8455
static int r_mark_regions(223,8505
static int r_initial_morph(266,9958
static int r_RV(327,11865
static int r_R1(332,12039
static int r_R2(337,12214
static int r_noun_sfx(342,12389
static int r_deriv(369,13250
static int r_verb_sfx(413,14644
extern int irish_ISO_8859_1_stem(441,15616
extern struct SN_env * irish_ISO_8859_1_create_env(476,16714
extern void irish_ISO_8859_1_close_env(478,16807

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/libstemmer/stem_UTF_8_indonesian.c,2189
static const symbol s_0_0[s_0_034,880
static const symbol s_0_1[s_0_135,930
static const symbol s_0_2[s_0_236,980
static const struct among a_0[a_038,1031
static const symbol s_1_0[s_1_045,1167
static const symbol s_1_1[s_1_146,1217
static const symbol s_1_2[s_1_247,1262
static const struct among a_1[a_149,1308
static const symbol s_2_0[s_2_056,1444
static const symbol s_2_1[s_2_157,1484
static const symbol s_2_2[s_2_258,1529
static const struct among a_2[a_260,1580
static const symbol s_3_0[s_3_067,1754
static const symbol s_3_1[s_3_168,1799
static const symbol s_3_2[s_3_269,1844
static const symbol s_3_3[s_3_370,1889
static const symbol s_3_4[s_3_471,1939
static const symbol s_3_5[s_3_572,1989
static const symbol s_3_6[s_3_673,2044
static const symbol s_3_7[s_3_774,2099
static const symbol s_3_8[s_3_875,2149
static const symbol s_3_9[s_3_976,2199
static const symbol s_3_10[s_3_1077,2254
static const symbol s_3_11[s_3_1178,2310
static const struct among a_3[a_380,2362
static const symbol s_4_0[s_4_096,2795
static const symbol s_4_1[s_4_197,2840
static const symbol s_4_2[s_4_298,2910
static const symbol s_4_3[s_4_399,2960
static const symbol s_4_4[s_4_4100,3005
static const symbol s_4_5[s_4_5101,3075
static const struct among a_4[a_4103,3126
static const unsigned char g_vowel[g_vowel113,3358
static const symbol s_0[s_0115,3414
static const symbol s_1[s_1116,3456
static const symbol s_2[s_2117,3493
static const symbol s_3[s_3118,3530
static const symbol s_4[s_4119,3567
static const symbol s_5[s_5120,3604
static const symbol s_6[s_6121,3656
static int r_remove_particle(123,3709
static int r_remove_possessive_pronoun(135,4186
static int r_SUFFIX_KAN_OK(147,4672
static int r_SUFFIX_AN_OK(154,4975
static int r_SUFFIX_I_OK(159,5156
static int r_remove_suffix(171,5559
static int r_VOWEL(183,6035
static int r_KER(188,6198
static int r_remove_first_order_prefix(194,6417
static int r_remove_second_order_prefix(274,9698
extern int indonesian_UTF_8_stem(313,11240
extern struct SN_env * indonesian_UTF_8_create_env(405,14881
extern void indonesian_UTF_8_close_env(407,14974

/home/seinoyu/pgsql/master/postgresql/src/backend/snowball/dict_snowball.c,677
#undef MAXINT21,540
#undef MININT24,575
PG_MODULE_MAGIC;75,3124
typedef struct stemmer_module82,3252
	const char *name;name84,3284
	pg_enc		enc;85,3303
	struct SN_env *(*create)create86,3317
	void		(*close)close87,3351
	int			(*stem)stem88,3386
} stemmer_module;89,3420
#define STEMMER_MODULE(92,3516
static const stemmer_module stemmer_modules[stemmer_modules95,3648
typedef struct DictSnowball156,5971
	struct SN_env *z;z158,6001
	StopList	stoplist;159,6020
	bool		needrecode;160,6040
	int			(*stem)stem161,6104
	MemoryContext dictCtx;168,6353
} DictSnowball;169,6377
locate_stem_module(173,6407
dsnowball_init(214,7352
dsnowball_lexize(264,8510

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/errcodes.h,13610
#define ERRCODE_SUCCESSFUL_COMPLETION 5,168
#define ERRCODE_WARNING 8,267
#define ERRCODE_WARNING_DYNAMIC_RESULT_SETS_RETURNED 9,326
#define ERRCODE_WARNING_IMPLICIT_ZERO_BIT_PADDING 10,414
#define ERRCODE_WARNING_NULL_VALUE_ELIMINATED_IN_SET_FUNCTION 11,499
#define ERRCODE_WARNING_PRIVILEGE_NOT_GRANTED 12,596
#define ERRCODE_WARNING_PRIVILEGE_NOT_REVOKED 13,677
#define ERRCODE_WARNING_STRING_DATA_RIGHT_TRUNCATION 14,758
#define ERRCODE_WARNING_DEPRECATED_FEATURE 15,846
#define ERRCODE_NO_DATA 18,1002
#define ERRCODE_NO_ADDITIONAL_DYNAMIC_RESULT_SETS_RETURNED 19,1061
#define ERRCODE_SQL_STATEMENT_NOT_YET_COMPLETE 22,1204
#define ERRCODE_CONNECTION_EXCEPTION 25,1325
#define ERRCODE_CONNECTION_DOES_NOT_EXIST 26,1397
#define ERRCODE_CONNECTION_FAILURE 27,1474
#define ERRCODE_SQLCLIENT_UNABLE_TO_ESTABLISH_SQLCONNECTION 28,1544
#define ERRCODE_SQLSERVER_REJECTED_ESTABLISHMENT_OF_SQLCONNECTION 29,1639
#define ERRCODE_TRANSACTION_RESOLUTION_UNKNOWN 30,1740
#define ERRCODE_PROTOCOL_VIOLATION 31,1822
#define ERRCODE_TRIGGERED_ACTION_EXCEPTION 34,1937
#define ERRCODE_FEATURE_NOT_SUPPORTED 37,2055
#define ERRCODE_INVALID_TRANSACTION_INITIATION 40,2177
#define ERRCODE_LOCATOR_EXCEPTION 43,2295
#define ERRCODE_L_E_INVALID_SPECIFICATION 44,2364
#define ERRCODE_INVALID_GRANTOR 47,2475
#define ERRCODE_INVALID_GRANT_OPERATION 48,2542
#define ERRCODE_INVALID_ROLE_SPECIFICATION 51,2662
#define ERRCODE_DIAGNOSTICS_EXCEPTION 54,2780
#define ERRCODE_STACKED_DIAGNOSTICS_ACCESSED_WITHOUT_ACTIVE_HANDLER 55,2853
#define ERRCODE_CASE_NOT_FOUND 58,2989
#define ERRCODE_CARDINALITY_VIOLATION 61,3095
#define ERRCODE_DATA_EXCEPTION 64,3201
#define ERRCODE_ARRAY_ELEMENT_ERROR 65,3267
#define ERRCODE_ARRAY_SUBSCRIPT_ERROR 66,3338
#define ERRCODE_CHARACTER_NOT_IN_REPERTOIRE 67,3411
#define ERRCODE_DATETIME_FIELD_OVERFLOW 68,3490
#define ERRCODE_DATETIME_VALUE_OUT_OF_RANGE 69,3565
#define ERRCODE_DIVISION_BY_ZERO 70,3644
#define ERRCODE_ERROR_IN_ASSIGNMENT 71,3712
#define ERRCODE_ESCAPE_CHARACTER_CONFLICT 72,3783
#define ERRCODE_INDICATOR_OVERFLOW 73,3860
#define ERRCODE_INTERVAL_FIELD_OVERFLOW 74,3930
#define ERRCODE_INVALID_ARGUMENT_FOR_LOG 75,4005
#define ERRCODE_INVALID_ARGUMENT_FOR_NTILE 76,4081
#define ERRCODE_INVALID_ARGUMENT_FOR_NTH_VALUE 77,4159
#define ERRCODE_INVALID_ARGUMENT_FOR_POWER_FUNCTION 78,4241
#define ERRCODE_INVALID_ARGUMENT_FOR_WIDTH_BUCKET_FUNCTION 79,4328
#define ERRCODE_INVALID_CHARACTER_VALUE_FOR_CAST 80,4422
#define ERRCODE_INVALID_DATETIME_FORMAT 81,4506
#define ERRCODE_INVALID_ESCAPE_CHARACTER 82,4581
#define ERRCODE_INVALID_ESCAPE_OCTET 83,4657
#define ERRCODE_INVALID_ESCAPE_SEQUENCE 84,4729
#define ERRCODE_NONSTANDARD_USE_OF_ESCAPE_CHARACTER 85,4804
#define ERRCODE_INVALID_INDICATOR_PARAMETER_VALUE 86,4891
#define ERRCODE_INVALID_PARAMETER_VALUE 87,4976
#define ERRCODE_INVALID_PRECEDING_OR_FOLLOWING_SIZE 88,5051
#define ERRCODE_INVALID_REGULAR_EXPRESSION 89,5138
#define ERRCODE_INVALID_ROW_COUNT_IN_LIMIT_CLAUSE 90,5216
#define ERRCODE_INVALID_ROW_COUNT_IN_RESULT_OFFSET_CLAUSE 91,5301
#define ERRCODE_INVALID_TABLESAMPLE_ARGUMENT 92,5394
#define ERRCODE_INVALID_TABLESAMPLE_REPEAT 93,5474
#define ERRCODE_INVALID_TIME_ZONE_DISPLACEMENT_VALUE 94,5552
#define ERRCODE_INVALID_USE_OF_ESCAPE_CHARACTER 95,5640
#define ERRCODE_MOST_SPECIFIC_TYPE_MISMATCH 96,5723
#define ERRCODE_NULL_VALUE_NOT_ALLOWED 97,5802
#define ERRCODE_NULL_VALUE_NO_INDICATOR_PARAMETER 98,5876
#define ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE 99,5961
#define ERRCODE_SEQUENCE_GENERATOR_LIMIT_EXCEEDED 100,6039
#define ERRCODE_STRING_DATA_LENGTH_MISMATCH 101,6124
#define ERRCODE_STRING_DATA_RIGHT_TRUNCATION 102,6203
#define ERRCODE_SUBSTRING_ERROR 103,6283
#define ERRCODE_TRIM_ERROR 104,6350
#define ERRCODE_UNTERMINATED_C_STRING 105,6412
#define ERRCODE_ZERO_LENGTH_CHARACTER_STRING 106,6485
#define ERRCODE_FLOATING_POINT_EXCEPTION 107,6565
#define ERRCODE_INVALID_TEXT_REPRESENTATION 108,6641
#define ERRCODE_INVALID_BINARY_REPRESENTATION 109,6720
#define ERRCODE_BAD_COPY_FILE_FORMAT 110,6801
#define ERRCODE_UNTRANSLATABLE_CHARACTER 111,6873
#define ERRCODE_NOT_AN_XML_DOCUMENT 112,6949
#define ERRCODE_INVALID_XML_DOCUMENT 113,7020
#define ERRCODE_INVALID_XML_CONTENT 114,7092
#define ERRCODE_INVALID_XML_COMMENT 115,7163
#define ERRCODE_INVALID_XML_PROCESSING_INSTRUCTION 116,7234
#define ERRCODE_DUPLICATE_JSON_OBJECT_KEY_VALUE 117,7320
#define ERRCODE_INVALID_ARGUMENT_FOR_SQL_JSON_DATETIME_FUNCTION 118,7403
#define ERRCODE_INVALID_JSON_TEXT 119,7502
#define ERRCODE_INVALID_SQL_JSON_SUBSCRIPT 120,7571
#define ERRCODE_MORE_THAN_ONE_SQL_JSON_ITEM 121,7649
#define ERRCODE_NO_SQL_JSON_ITEM 122,7728
#define ERRCODE_NON_NUMERIC_SQL_JSON_ITEM 123,7796
#define ERRCODE_NON_UNIQUE_KEYS_IN_A_JSON_OBJECT 124,7873
#define ERRCODE_SINGLETON_SQL_JSON_ITEM_REQUIRED 125,7957
#define ERRCODE_SQL_JSON_ARRAY_NOT_FOUND 126,8041
#define ERRCODE_SQL_JSON_MEMBER_NOT_FOUND 127,8117
#define ERRCODE_SQL_JSON_NUMBER_NOT_FOUND 128,8194
#define ERRCODE_SQL_JSON_OBJECT_NOT_FOUND 129,8271
#define ERRCODE_TOO_MANY_JSON_ARRAY_ELEMENTS 130,8348
#define ERRCODE_TOO_MANY_JSON_OBJECT_MEMBERS 131,8428
#define ERRCODE_SQL_JSON_SCALAR_REQUIRED 132,8508
#define ERRCODE_INTEGRITY_CONSTRAINT_VIOLATION 135,8633
#define ERRCODE_RESTRICT_VIOLATION 136,8715
#define ERRCODE_NOT_NULL_VIOLATION 137,8785
#define ERRCODE_FOREIGN_KEY_VIOLATION 138,8855
#define ERRCODE_UNIQUE_VIOLATION 139,8928
#define ERRCODE_CHECK_VIOLATION 140,8996
#define ERRCODE_EXCLUSION_VIOLATION 141,9063
#define ERRCODE_INVALID_CURSOR_STATE 144,9173
#define ERRCODE_INVALID_TRANSACTION_STATE 147,9289
#define ERRCODE_ACTIVE_SQL_TRANSACTION 148,9366
#define ERRCODE_BRANCH_TRANSACTION_ALREADY_ACTIVE 149,9440
#define ERRCODE_HELD_CURSOR_REQUIRES_SAME_ISOLATION_LEVEL 150,9525
#define ERRCODE_INAPPROPRIATE_ACCESS_MODE_FOR_BRANCH_TRANSACTION 151,9618
#define ERRCODE_INAPPROPRIATE_ISOLATION_LEVEL_FOR_BRANCH_TRANSACTION 152,9718
#define ERRCODE_NO_ACTIVE_SQL_TRANSACTION_FOR_BRANCH_TRANSACTION 153,9822
#define ERRCODE_READ_ONLY_SQL_TRANSACTION 154,9922
#define ERRCODE_SCHEMA_AND_DATA_STATEMENT_MIXING_NOT_SUPPORTED 155,9999
#define ERRCODE_NO_ACTIVE_SQL_TRANSACTION 156,10097
#define ERRCODE_IN_FAILED_SQL_TRANSACTION 157,10174
#define ERRCODE_IDLE_IN_TRANSACTION_SESSION_TIMEOUT 158,10251
#define ERRCODE_INVALID_SQL_STATEMENT_NAME 161,10383
#define ERRCODE_TRIGGERED_DATA_CHANGE_VIOLATION 164,10511
#define ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION 167,10648
#define ERRCODE_INVALID_PASSWORD 168,10735
#define ERRCODE_DEPENDENT_PRIVILEGE_DESCRIPTORS_STILL_EXIST 171,10865
#define ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST 172,10960
#define ERRCODE_INVALID_TRANSACTION_TERMINATION 175,11091
#define ERRCODE_SQL_ROUTINE_EXCEPTION 178,11214
#define ERRCODE_S_R_E_FUNCTION_EXECUTED_NO_RETURN_STATEMENT 179,11287
#define ERRCODE_S_R_E_MODIFYING_SQL_DATA_NOT_PERMITTED 180,11382
#define ERRCODE_S_R_E_PROHIBITED_SQL_STATEMENT_ATTEMPTED 181,11472
#define ERRCODE_S_R_E_READING_SQL_DATA_NOT_PERMITTED 182,11564
#define ERRCODE_INVALID_CURSOR_NAME 185,11690
#define ERRCODE_EXTERNAL_ROUTINE_EXCEPTION 188,11806
#define ERRCODE_E_R_E_CONTAINING_SQL_NOT_PERMITTED 189,11884
#define ERRCODE_E_R_E_MODIFYING_SQL_DATA_NOT_PERMITTED 190,11970
#define ERRCODE_E_R_E_PROHIBITED_SQL_STATEMENT_ATTEMPTED 191,12060
#define ERRCODE_E_R_E_READING_SQL_DATA_NOT_PERMITTED 192,12152
#define ERRCODE_EXTERNAL_ROUTINE_INVOCATION_EXCEPTION 195,12296
#define ERRCODE_E_R_I_E_INVALID_SQLSTATE_RETURNED 196,12385
#define ERRCODE_E_R_I_E_NULL_VALUE_NOT_ALLOWED 197,12470
#define ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED 198,12552
#define ERRCODE_E_R_I_E_SRF_PROTOCOL_VIOLATED 199,12637
#define ERRCODE_E_R_I_E_EVENT_TRIGGER_PROTOCOL_VIOLATED 200,12718
#define ERRCODE_SAVEPOINT_EXCEPTION 203,12847
#define ERRCODE_S_E_INVALID_SPECIFICATION 204,12918
#define ERRCODE_INVALID_CATALOG_NAME 207,13034
#define ERRCODE_INVALID_SCHEMA_NAME 210,13144
#define ERRCODE_TRANSACTION_ROLLBACK 213,13254
#define ERRCODE_T_R_INTEGRITY_CONSTRAINT_VIOLATION 214,13326
#define ERRCODE_T_R_SERIALIZATION_FAILURE 215,13412
#define ERRCODE_T_R_STATEMENT_COMPLETION_UNKNOWN 216,13489
#define ERRCODE_T_R_DEADLOCK_DETECTED 217,13573
#define ERRCODE_SYNTAX_ERROR_OR_ACCESS_RULE_VIOLATION 220,13702
#define ERRCODE_SYNTAX_ERROR 221,13791
#define ERRCODE_INSUFFICIENT_PRIVILEGE 222,13855
#define ERRCODE_CANNOT_COERCE 223,13929
#define ERRCODE_GROUPING_ERROR 224,13994
#define ERRCODE_WINDOWING_ERROR 225,14060
#define ERRCODE_INVALID_RECURSION 226,14127
#define ERRCODE_INVALID_FOREIGN_KEY 227,14196
#define ERRCODE_INVALID_NAME 228,14267
#define ERRCODE_NAME_TOO_LONG 229,14331
#define ERRCODE_RESERVED_NAME 230,14396
#define ERRCODE_DATATYPE_MISMATCH 231,14461
#define ERRCODE_INDETERMINATE_DATATYPE 232,14530
#define ERRCODE_COLLATION_MISMATCH 233,14604
#define ERRCODE_INDETERMINATE_COLLATION 234,14674
#define ERRCODE_WRONG_OBJECT_TYPE 235,14749
#define ERRCODE_GENERATED_ALWAYS 236,14818
#define ERRCODE_UNDEFINED_COLUMN 237,14886
#define ERRCODE_UNDEFINED_CURSOR 238,14954
#define ERRCODE_UNDEFINED_DATABASE 239,15022
#define ERRCODE_UNDEFINED_FUNCTION 240,15092
#define ERRCODE_UNDEFINED_PSTATEMENT 241,15162
#define ERRCODE_UNDEFINED_SCHEMA 242,15234
#define ERRCODE_UNDEFINED_TABLE 243,15302
#define ERRCODE_UNDEFINED_PARAMETER 244,15369
#define ERRCODE_UNDEFINED_OBJECT 245,15440
#define ERRCODE_DUPLICATE_COLUMN 246,15508
#define ERRCODE_DUPLICATE_CURSOR 247,15576
#define ERRCODE_DUPLICATE_DATABASE 248,15644
#define ERRCODE_DUPLICATE_FUNCTION 249,15714
#define ERRCODE_DUPLICATE_PSTATEMENT 250,15784
#define ERRCODE_DUPLICATE_SCHEMA 251,15856
#define ERRCODE_DUPLICATE_TABLE 252,15924
#define ERRCODE_DUPLICATE_ALIAS 253,15991
#define ERRCODE_DUPLICATE_OBJECT 254,16058
#define ERRCODE_AMBIGUOUS_COLUMN 255,16126
#define ERRCODE_AMBIGUOUS_FUNCTION 256,16194
#define ERRCODE_AMBIGUOUS_PARAMETER 257,16264
#define ERRCODE_AMBIGUOUS_ALIAS 258,16335
#define ERRCODE_INVALID_COLUMN_REFERENCE 259,16402
#define ERRCODE_INVALID_COLUMN_DEFINITION 260,16478
#define ERRCODE_INVALID_CURSOR_DEFINITION 261,16555
#define ERRCODE_INVALID_DATABASE_DEFINITION 262,16632
#define ERRCODE_INVALID_FUNCTION_DEFINITION 263,16711
#define ERRCODE_INVALID_PSTATEMENT_DEFINITION 264,16790
#define ERRCODE_INVALID_SCHEMA_DEFINITION 265,16871
#define ERRCODE_INVALID_TABLE_DEFINITION 266,16948
#define ERRCODE_INVALID_OBJECT_DEFINITION 267,17024
#define ERRCODE_WITH_CHECK_OPTION_VIOLATION 270,17147
#define ERRCODE_INSUFFICIENT_RESOURCES 273,17267
#define ERRCODE_DISK_FULL 274,17341
#define ERRCODE_OUT_OF_MEMORY 275,17402
#define ERRCODE_TOO_MANY_CONNECTIONS 276,17467
#define ERRCODE_CONFIGURATION_LIMIT_EXCEEDED 277,17539
#define ERRCODE_PROGRAM_LIMIT_EXCEEDED 280,17660
#define ERRCODE_STATEMENT_TOO_COMPLEX 281,17734
#define ERRCODE_TOO_MANY_COLUMNS 282,17807
#define ERRCODE_TOO_MANY_ARGUMENTS 283,17875
#define ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE 286,17996
#define ERRCODE_OBJECT_IN_USE 287,18080
#define ERRCODE_CANT_CHANGE_RUNTIME_PARAM 288,18145
#define ERRCODE_LOCK_NOT_AVAILABLE 289,18222
#define ERRCODE_UNSAFE_NEW_ENUM_VALUE_USAGE 290,18292
#define ERRCODE_OPERATOR_INTERVENTION 293,18411
#define ERRCODE_QUERY_CANCELED 294,18484
#define ERRCODE_ADMIN_SHUTDOWN 295,18550
#define ERRCODE_CRASH_SHUTDOWN 296,18616
#define ERRCODE_CANNOT_CONNECT_NOW 297,18682
#define ERRCODE_DATABASE_DROPPED 298,18752
#define ERRCODE_SYSTEM_ERROR 301,18890
#define ERRCODE_IO_ERROR 302,18954
#define ERRCODE_UNDEFINED_FILE 303,19014
#define ERRCODE_DUPLICATE_FILE 304,19080
#define ERRCODE_SNAPSHOT_TOO_OLD 307,19181
#define ERRCODE_CONFIG_FILE_ERROR 310,19292
#define ERRCODE_LOCK_FILE_EXISTS 311,19361
#define ERRCODE_FDW_ERROR 314,19484
#define ERRCODE_FDW_COLUMN_NAME_NOT_FOUND 315,19545
#define ERRCODE_FDW_DYNAMIC_PARAMETER_VALUE_NEEDED 316,19622
#define ERRCODE_FDW_FUNCTION_SEQUENCE_ERROR 317,19708
#define ERRCODE_FDW_INCONSISTENT_DESCRIPTOR_INFORMATION 318,19787
#define ERRCODE_FDW_INVALID_ATTRIBUTE_VALUE 319,19878
#define ERRCODE_FDW_INVALID_COLUMN_NAME 320,19957
#define ERRCODE_FDW_INVALID_COLUMN_NUMBER 321,20032
#define ERRCODE_FDW_INVALID_DATA_TYPE 322,20109
#define ERRCODE_FDW_INVALID_DATA_TYPE_DESCRIPTORS 323,20182
#define ERRCODE_FDW_INVALID_DESCRIPTOR_FIELD_IDENTIFIER 324,20267
#define ERRCODE_FDW_INVALID_HANDLE 325,20358
#define ERRCODE_FDW_INVALID_OPTION_INDEX 326,20428
#define ERRCODE_FDW_INVALID_OPTION_NAME 327,20504
#define ERRCODE_FDW_INVALID_STRING_LENGTH_OR_BUFFER_LENGTH 328,20579
#define ERRCODE_FDW_INVALID_STRING_FORMAT 329,20673
#define ERRCODE_FDW_INVALID_USE_OF_NULL_POINTER 330,20750
#define ERRCODE_FDW_TOO_MANY_HANDLES 331,20833
#define ERRCODE_FDW_OUT_OF_MEMORY 332,20905
#define ERRCODE_FDW_NO_SCHEMAS 333,20974
#define ERRCODE_FDW_OPTION_NAME_NOT_FOUND 334,21040
#define ERRCODE_FDW_REPLY_HANDLE 335,21117
#define ERRCODE_FDW_SCHEMA_NOT_FOUND 336,21185
#define ERRCODE_FDW_TABLE_NOT_FOUND 337,21257
#define ERRCODE_FDW_UNABLE_TO_CREATE_EXECUTION 338,21328
#define ERRCODE_FDW_UNABLE_TO_CREATE_REPLY 339,21410
#define ERRCODE_FDW_UNABLE_TO_ESTABLISH_CONNECTION 340,21488
#define ERRCODE_PLPGSQL_ERROR 343,21607
#define ERRCODE_RAISE_EXCEPTION 344,21672
#define ERRCODE_NO_DATA_FOUND 345,21739
#define ERRCODE_TOO_MANY_ROWS 346,21804
#define ERRCODE_ASSERT_FAILURE 347,21869
#define ERRCODE_INTERNAL_ERROR 350,21968
#define ERRCODE_DATA_CORRUPTED 351,22034
#define ERRCODE_INDEX_CORRUPTED 352,22100

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/sort/logtape.c,1990
typedef struct TapeBlockTrailer94,4618
	long		prev;96,4652
	long		next;98,4734
} TapeBlockTrailer;100,4834
#define TapeBlockPayloadSize 102,4855
#define TapeBlockGetTrailer(103,4921
#define TapeBlockIsLast(106,5019
#define TapeBlockGetNBytes(107,5085
#define TapeBlockSetNBytes(110,5207
#define TAPE_WRITE_PREALLOC_MIN 123,5785
#define TAPE_WRITE_PREALLOC_MAX 124,5819
typedef struct LogicalTape136,6301
	bool		writing;138,6330
	bool		frozen;139,6376
	bool		dirty;140,6441
	long		firstBlockNumber;153,6964
	long		curBlockNumber;154,6989
	long		nextBlockNumber;155,7012
	long		offsetBlockNumber;156,7036
	char	   *buffer;buffer161,7110
	int			buffer_size;162,7174
	int			max_size;163,7229
	int			pos;164,7286
	int			nbytes;165,7341
	long	   *prealloc;prealloc172,7571
	int			nprealloc;173,7591
	int			prealloc_size;174,7643
} LogicalTape;175,7704
struct LogicalTapeSet183,8004
	BufFile    *pfile;pfile185,8028
	long		nBlocksAllocated;197,8636
	long		nBlocksWritten;198,8689
	long		nHoleBlocks;199,8754
	bool		forgetFreeSpace;209,9135
	long	   *freeBlocks;freeBlocks210,9197
	long		nFreeBlocks;211,9258
	Size		freeBlocksLen;212,9311
	int			nTapes;215,9416
	LogicalTape *tapes;tapes216,9465
ltsWriteBlock(236,10246
ltsReadBlock(284,11947
ltsReadFillBuffer(307,12596
swap_nodes(346,13509
left_offset(356,13675
right_offset(362,13756
parent_offset(368,13833
ltsGetFreeBlock(378,14012
ltsGetPreallocBlock(434,15134
ltsReleaseBlock(472,16177
ltsConcatWorkerTapes(529,17440
ltsInitTape(613,20222
ltsInitReadBuffer(639,20834
LogicalTapeSetCreate(672,22250
LogicalTapeSetClose(723,23636
LogicalTapeSetForgetFreeSpace(750,24357
LogicalTapeWrite(761,24542
LogicalTapeRewindForRead(849,26955
LogicalTapeRewindForWrite(937,29238
LogicalTapeRead(963,29761
LogicalTapeFreeze(1020,31384
LogicalTapeSetExtend(1095,33668
LogicalTapeBackspace(1123,34505
LogicalTapeSeek(1197,36349
LogicalTapeTell(1231,37259
LogicalTapeSetBlocks(1255,37792

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/sort/sharedtuplestore.c,1670
#define STS_CHUNK_PAGES 38,1352
#define STS_CHUNK_HEADER_SIZE 39,1378
#define STS_CHUNK_DATA_SIZE 40,1446
typedef struct SharedTuplestoreChunk43,1555
	int			ntuples;45,1594
	int			overflow;46,1649
	char		data[data47,1715
} SharedTuplestoreChunk;48,1751
typedef struct SharedTuplestoreParticipant51,1813
	LWLock		lock;53,1858
	BlockNumber read_page;54,1873
	BlockNumber npages;55,1931
	bool		writing;56,1985
} SharedTuplestoreParticipant;57,2034
struct SharedTuplestore60,2120
	int			nparticipants;62,2146
	int			flags;63,2213
	size_t		meta_data_size;64,2272
	char		name[name65,2329
	SharedTuplestoreParticipant participants[participants68,2439
struct SharedTuplestoreAccessor72,2573
	int			participant;74,2607
	SharedTuplestore *sts;sts75,2656
	SharedFileSet *fileset;fileset76,2705
	MemoryContext context;77,2770
	int			read_participant;80,2856
	BufFile    *read_file;read_file81,2925
	int			read_ntuples_available;82,2987
	int			read_ntuples;83,3055
	size_t		read_bytes;84,3123
	char	   *read_buffer;read_buffer85,3191
	size_t		read_buffer_size;86,3249
	BlockNumber read_next_page;87,3276
	SharedTuplestoreChunk *write_chunk;write_chunk90,3375
	BufFile    *write_file;write_file91,3438
	BlockNumber write_page;92,3500
	char	   *write_pointer;write_pointer93,3559
	char	   *write_end;write_end94,3626
sts_estimate(105,3921
sts_initialize(127,4827
sts_attach(178,6302
sts_flush_chunk(196,6723
sts_end_write(213,7217
sts_reinitialize(234,7871
sts_begin_parallel_scan(253,8299
sts_end_parallel_scan(281,9105
sts_puttuple(300,9645
sts_read_tuple(410,13184
sts_parallel_scan_next(520,16900
sts_filename(625,19811

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/sort/tuplesort.c,6195
#define HEAP_SORT	119,6213
#define INDEX_SORT	120,6234
#define DATUM_SORT	121,6256
#define CLUSTER_SORT	122,6278
#define PARALLEL_SORT(125,6361
#define INITIAL_MEMTUPSIZE 135,6731
bool		trace_sort 140,6863
bool		optimize_bounded_sort 144,6923
	void	   *tuple;tuple179,8783
	Datum		datum1;180,8825
	bool		isnull1;181,8875
	int			srctape;182,8924
} SortTuple;183,8966
#define SLAB_SLOT_SIZE 196,9408
typedef union SlabSlot198,9437
	union SlabSlot *nextfree;nextfree200,9462
	char		buffer[buffer201,9489
} SlabSlot;202,9520
	TSS_INITIAL,210,9675
	TSS_BOUNDED,211,9740
	TSS_BUILDRUNS,212,9801
	TSS_SORTEDINMEM,213,9858
	TSS_SORTEDONTAPE,214,9918
	TSS_FINALMERGE	215,9982
} TupSortStatus;216,10041
#define MINORDER	229,10535
#define MAXORDER	230,10582
#define TAPE_BUFFER_OVERHEAD	231,10631
#define MERGE_BUFFER_SIZE	232,10668
typedef int (*SortTupleComparator)SortTupleComparator234,10711
struct Tuplesortstate240,10871
	TupSortStatus status;242,10895
	int			nKeys;243,10957
	bool		randomAccess;244,11009
	bool		bounded;245,11070
	bool		boundUsed;247,11161
	int			bound;248,11224
	bool		tuples;249,11287
	int64		availMem;250,11343
	int64		allowedMem;251,11405
	int			maxTapes;252,11463
	int			tapeRange;253,11515
	int64		maxSpace;254,11563
	bool		isMaxSpaceDisk;256,11682
	TupSortStatus maxSpaceStatus;259,11822
	MemoryContext maincontext;260,11897
	MemoryContext sortcontext;262,12019
	MemoryContext tuplecontext;263,12091
	LogicalTapeSet *tapeset;tapeset264,12168
	SortTupleComparator comparetup;275,12624
	void		(*copytup)copytup283,12954
	void		(*writetup)writetup293,13438
	void		(*readtup)readtup301,13745
	SortTuple  *memtuples;memtuples311,14200
	int			memtupcount;312,14258
	int			memtupsize;313,14319
	bool		growmemtuples;314,14381
	bool		slabAllocatorUsed;343,15757
	char	   *slabMemoryBegin;slabMemoryBegin345,15784
	char	   *slabMemoryEnd;slabMemoryEnd346,15848
	SlabSlot   *slabFreeHead;slabFreeHead347,15904
	size_t		read_buffer_size;350,16021
	void	   *lastReturnedTuple;lastReturnedTuple358,16319
	int			currentRun;364,16488
	bool	   *mergeactive;mergeactive376,16833
	int			Level;383,17089
	int			destTape;384,17121
	int		   *tp_fib;tp_fib385,17185
	int		   *tp_runs;tp_runs386,17245
	int		   *tp_dummy;tp_dummy387,17299
	int		   *tp_tapenum;tp_tapenum388,17362
	int			activeTapes;389,17420
	int			result_tape;396,17680
	int			current;397,17744
	bool		eof_reached;398,17806
	long		markpos_block;401,17928
	int			markpos_offset;402,17996
	bool		markpos_eof;403,18066
	int			worker;420,18765
	Sharedsort *shared;shared421,18780
	int			nParticipants;422,18801
	TupleDesc	tupDesc;429,19027
	SortSupport sortKeys;430,19047
	SortSupport onlyKey;436,19249
	int64		abbrevNext;444,19511
	IndexInfo  *indexInfo;indexInfo451,19703
	EState	   *estate;estate452,19776
	Relation	heapRel;458,19992
	Relation	indexRel;459,20052
	bool		enforceUnique;462,20152
	uint32		high_mask;465,20271
	uint32		low_mask;466,20335
	uint32		max_buckets;467,20354
	Oid			datumType;473,20522
	int			datumTypeLen;475,20604
	PGRUsage	ru_start;481,20699
struct Sharedsort489,20835
	slock_t		mutex;492,20903
	int			currentWorker;502,21238
	int			workersFinished;503,21260
	SharedFileSet fileset;506,21313
	int			nTapes;509,21374
	TapeShare	tapes[tapes515,21536
#define IS_SLAB_SLOT(521,21648
#define RELEASE_SLAB_SLOT(529,21880
#define COMPARETUP(541,22135
#define COPYTUP(542,22204
#define WRITETUP(543,22277
#define READTUP(544,22354
#define LACKMEM(545,22438
#define USEMEM(546,22517
#define FREEMEM(547,22572
#define SERIAL(548,22628
#define WORKER(549,22677
#define LEADER(550,22743
#define LogicalTapeReadExact(602,25436
tuplesort_begin_common(702,30431
tuplesort_begin_batch(814,33543
tuplesort_begin_heap(878,35303
tuplesort_begin_cluster(952,37407
tuplesort_begin_index_btree(1047,40075
tuplesort_begin_index_hash(1125,42141
tuplesort_begin_datum(1171,43264
tuplesort_set_bound(1258,46042
tuplesort_used_bound(1304,47340
tuplesort_free(1315,47511
tuplesort_end(1388,49470
tuplesort_updatemax(1405,49760
tuplesort_reset(1456,51527
grow_memtuples(1489,52806
tuplesort_puttupleslot(1608,57176
tuplesort_putheaptuple(1630,57707
tuplesort_putindextuplevalues(1651,58203
tuplesort_putdatum(1729,60455
puttuple_common(1811,62795
consider_abort_common(1920,65879
tuplesort_performsort(1964,67123
tuplesort_gettuple_common(2075,70095
tuplesort_gettupleslot(2332,77522
tuplesort_getheaptuple(2369,78498
tuplesort_getindextuple(2389,79090
tuplesort_getdatum(2418,80140
tuplesort_skiptuples(2458,81121
tuplesort_merge_order(2526,82823
inittapes(2566,84266
inittapestate(2623,85518
selectnewtape(2667,87169
init_slab_allocator(2699,87813
mergeruns(2735,88719
mergeonerun(2962,96120
beginmerge(3025,97855
mergereadnext(3073,98918
dumptuples(3098,99514
tuplesort_rescan(3201,102742
tuplesort_markpos(3236,103497
tuplesort_restorepos(3268,104218
tuplesort_get_stats(3302,105028
tuplesort_method_name(3346,106328
tuplesort_space_type_name(3369,106774
make_bounded_heap(3390,107444
sort_bounded_heap(3439,108634
tuplesort_sort_memtuples(3479,109713
tuplesort_heap_insert(3507,110538
tuplesort_heap_delete_top(3542,111314
tuplesort_heap_replace_top(3566,111897
reversedirection(3606,112820
getlen(3624,113145
markrunend(3637,113444
readtup_alloc(3651,113772
comparetup_heap(3679,114288
copytup_heap(3741,115844
writetup_heap(3819,118260
readtup_heap(3846,119088
comparetup_cluster(3878,120164
copytup_cluster(3989,123124
writetup_cluster(4062,125234
readtup_cluster(4086,126004
comparetup_index_btree(4124,127368
comparetup_index_hash(4257,131110
copytup_index(4312,132547
writetup_index(4319,132711
readtup_index(4341,133334
comparetup_datum(4365,134005
copytup_datum(4386,134562
writetup_datum(4393,134726
readtup_datum(4434,135642
tuplesort_estimate_shared(4481,136684
tuplesort_initialize_shared(4502,137267
tuplesort_attach_shared(4525,137747
worker_get_identifier(4545,138536
worker_freeze_result_tape(4573,139434
worker_nomergeruns(4611,140455
leader_takeover_tapes(4632,141105
free_sort_tuple(4697,143181

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/sort/tuplestore.c,2059
	TSS_INMEM,74,3217
	TSS_WRITEFILE,75,3266
	TSS_READFILE	76,3312
} TupStoreStatus;77,3358
	int			eflags;93,4020
	bool		eof_reached;94,4060
	int			current;95,4107
	int			file;96,4155
	off_t		offset;97,4187
} TSReadPointer;98,4231
struct Tuplestorestate103,4300
	TupStoreStatus status;105,4325
	int			eflags;106,4388
	bool		backward;107,4452
	bool		interXact;108,4510
	bool		truncated;109,4567
	int64		availMem;110,4628
	int64		allowedMem;111,4690
	int64		tuples;112,4748
	BufFile    *myfile;myfile113,4795
	MemoryContext context;114,4857
	ResourceOwner resowner;115,4922
	void	   *(*copytup)copytup131,5674
	void		(*writetup)writetup140,6060
	void	   *(*readtup)readtup148,6361
	void	  **memtuples;memtuples160,6901
	int			memtupdeleted;161,6966
	int			memtupcount;162,7033
	int			memtupsize;163,7094
	bool		growmemtuples;164,7156
	TSReadPointer *readptrs;readptrs174,7593
	int			activeptr;175,7648
	int			readptrcount;176,7706
	int			readptrsize;177,7768
	int			writepos_file;179,7830
	off_t		writepos_offset;180,7890
#define COPYTUP(183,7958
#define WRITETUP(184,8020
#define READTUP(185,8084
#define LACKMEM(186,8146
#define USEMEM(187,8194
#define FREEMEM(188,8249
tuplestore_begin_common(253,11003
tuplestore_begin_heap(318,13016
tuplestore_set_eflags(359,14340
tuplestore_alloc_read_pointer(383,15012
tuplestore_clear(418,15910
tuplestore_end(453,16596
tuplestore_select_read_pointer(473,16978
tuplestore_tuple_count(546,18620
tuplestore_ateof(557,18786
grow_memtuples(578,19772
tuplestore_puttupleslot(708,24722
tuplestore_puttuple(730,25276
tuplestore_putvalues(750,25801
tuplestore_puttuple_common(765,26187
tuplestore_gettuple(903,29929
tuplestore_gettupleslot(1078,34643
tuplestore_advance(1110,35311
tuplestore_skiptuples(1135,35751
dumptuples(1206,37299
tuplestore_rescan(1233,37850
tuplestore_copy_read_pointer(1268,38650
tuplestore_trim(1360,41043
tuplestore_in_memory(1455,43890
getlen(1466,44034
copytup_heap(1494,44737
writetup_heap(1504,44949
readtup_heap(1525,45649

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/sort/sortsupport.c,313
	FmgrInfo	flinfo;29,717
	FunctionCallInfoBaseData fcinfo;30,779
} SortShimExtra;31,847
#define SizeForSortShimExtra(33,865
comparison_shim(43,1229
PrepareSortSupportComparisonShim(68,1889
FinishSortSupportFunction(94,2690
PrepareSortSupportFromOrderingOp(134,3936
PrepareSortSupportFromIndexRel(161,4773

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/sort/qsort_tuple.c,174
swapfunc(55,2562
#define swap(65,2687
#define vecswap(72,2810
med3_tuple(75,2886
qsort_tuple(85,3204
#define cmp_ssup(202,5346
med3_ssup(207,5486
qsort_ssup(217,5757

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/probes.h,6526
#define TRACE_POSTGRESQL_TRANSACTION_START(1,0
#define TRACE_POSTGRESQL_TRANSACTION_START_ENABLED(2,49
#define TRACE_POSTGRESQL_TRANSACTION_COMMIT(3,106
#define TRACE_POSTGRESQL_TRANSACTION_COMMIT_ENABLED(4,156
#define TRACE_POSTGRESQL_TRANSACTION_ABORT(5,214
#define TRACE_POSTGRESQL_TRANSACTION_ABORT_ENABLED(6,263
#define TRACE_POSTGRESQL_LWLOCK_ACQUIRE(7,320
#define TRACE_POSTGRESQL_LWLOCK_ACQUIRE_ENABLED(8,372
#define TRACE_POSTGRESQL_LWLOCK_RELEASE(9,426
#define TRACE_POSTGRESQL_LWLOCK_RELEASE_ENABLED(10,472
#define TRACE_POSTGRESQL_LWLOCK_WAIT_START(11,526
#define TRACE_POSTGRESQL_LWLOCK_WAIT_START_ENABLED(12,581
#define TRACE_POSTGRESQL_LWLOCK_WAIT_DONE(13,638
#define TRACE_POSTGRESQL_LWLOCK_WAIT_DONE_ENABLED(14,692
#define TRACE_POSTGRESQL_LWLOCK_CONDACQUIRE(15,748
#define TRACE_POSTGRESQL_LWLOCK_CONDACQUIRE_ENABLED(16,804
#define TRACE_POSTGRESQL_LWLOCK_CONDACQUIRE_FAIL(17,862
#define TRACE_POSTGRESQL_LWLOCK_CONDACQUIRE_FAIL_ENABLED(18,923
#define TRACE_POSTGRESQL_LWLOCK_ACQUIRE_OR_WAIT(19,986
#define TRACE_POSTGRESQL_LWLOCK_ACQUIRE_OR_WAIT_ENABLED(20,1046
#define TRACE_POSTGRESQL_LWLOCK_ACQUIRE_OR_WAIT_FAIL(21,1108
#define TRACE_POSTGRESQL_LWLOCK_ACQUIRE_OR_WAIT_FAIL_ENABLED(22,1173
#define TRACE_POSTGRESQL_LOCK_WAIT_START(23,1240
#define TRACE_POSTGRESQL_LOCK_WAIT_START_ENABLED(24,1317
#define TRACE_POSTGRESQL_LOCK_WAIT_DONE(25,1372
#define TRACE_POSTGRESQL_LOCK_WAIT_DONE_ENABLED(26,1448
#define TRACE_POSTGRESQL_QUERY_PARSE_START(27,1502
#define TRACE_POSTGRESQL_QUERY_PARSE_START_ENABLED(28,1551
#define TRACE_POSTGRESQL_QUERY_PARSE_DONE(29,1608
#define TRACE_POSTGRESQL_QUERY_PARSE_DONE_ENABLED(30,1656
#define TRACE_POSTGRESQL_QUERY_REWRITE_START(31,1712
#define TRACE_POSTGRESQL_QUERY_REWRITE_START_ENABLED(32,1763
#define TRACE_POSTGRESQL_QUERY_REWRITE_DONE(33,1822
#define TRACE_POSTGRESQL_QUERY_REWRITE_DONE_ENABLED(34,1872
#define TRACE_POSTGRESQL_QUERY_PLAN_START(35,1930
#define TRACE_POSTGRESQL_QUERY_PLAN_START_ENABLED(36,1974
#define TRACE_POSTGRESQL_QUERY_PLAN_DONE(37,2030
#define TRACE_POSTGRESQL_QUERY_PLAN_DONE_ENABLED(38,2073
#define TRACE_POSTGRESQL_QUERY_EXECUTE_START(39,2128
#define TRACE_POSTGRESQL_QUERY_EXECUTE_START_ENABLED(40,2175
#define TRACE_POSTGRESQL_QUERY_EXECUTE_DONE(41,2234
#define TRACE_POSTGRESQL_QUERY_EXECUTE_DONE_ENABLED(42,2280
#define TRACE_POSTGRESQL_QUERY_START(43,2338
#define TRACE_POSTGRESQL_QUERY_START_ENABLED(44,2381
#define TRACE_POSTGRESQL_QUERY_DONE(45,2432
#define TRACE_POSTGRESQL_QUERY_DONE_ENABLED(46,2474
#define TRACE_POSTGRESQL_STATEMENT_STATUS(47,2524
#define TRACE_POSTGRESQL_STATEMENT_STATUS_ENABLED(48,2572
#define TRACE_POSTGRESQL_SORT_START(49,2628
#define TRACE_POSTGRESQL_SORT_START_ENABLED(50,2700
#define TRACE_POSTGRESQL_SORT_DONE(51,2750
#define TRACE_POSTGRESQL_SORT_DONE_ENABLED(52,2797
#define TRACE_POSTGRESQL_BUFFER_READ_START(53,2846
#define TRACE_POSTGRESQL_BUFFER_READ_START_ENABLED(54,2931
#define TRACE_POSTGRESQL_BUFFER_READ_DONE(55,2988
#define TRACE_POSTGRESQL_BUFFER_READ_DONE_ENABLED(56,3078
#define TRACE_POSTGRESQL_BUFFER_FLUSH_START(57,3134
#define TRACE_POSTGRESQL_BUFFER_FLUSH_START_ENABLED(58,3208
#define TRACE_POSTGRESQL_BUFFER_FLUSH_DONE(59,3266
#define TRACE_POSTGRESQL_BUFFER_FLUSH_DONE_ENABLED(60,3339
#define TRACE_POSTGRESQL_BUFFER_CHECKPOINT_START(61,3396
#define TRACE_POSTGRESQL_BUFFER_CHECKPOINT_START_ENABLED(62,3451
#define TRACE_POSTGRESQL_BUFFER_CHECKPOINT_SYNC_START(63,3514
#define TRACE_POSTGRESQL_BUFFER_CHECKPOINT_SYNC_START_ENABLED(64,3570
#define TRACE_POSTGRESQL_BUFFER_CHECKPOINT_DONE(65,3638
#define TRACE_POSTGRESQL_BUFFER_CHECKPOINT_DONE_ENABLED(66,3688
#define TRACE_POSTGRESQL_BUFFER_SYNC_START(67,3750
#define TRACE_POSTGRESQL_BUFFER_SYNC_START_ENABLED(68,3805
#define TRACE_POSTGRESQL_BUFFER_SYNC_WRITTEN(69,3862
#define TRACE_POSTGRESQL_BUFFER_SYNC_WRITTEN_ENABLED(70,3913
#define TRACE_POSTGRESQL_BUFFER_SYNC_DONE(71,3972
#define TRACE_POSTGRESQL_BUFFER_SYNC_DONE_ENABLED(72,4032
#define TRACE_POSTGRESQL_BUFFER_WRITE_DIRTY_START(73,4088
#define TRACE_POSTGRESQL_BUFFER_WRITE_DIRTY_START_ENABLED(74,4168
#define TRACE_POSTGRESQL_BUFFER_WRITE_DIRTY_DONE(75,4232
#define TRACE_POSTGRESQL_BUFFER_WRITE_DIRTY_DONE_ENABLED(76,4311
#define TRACE_POSTGRESQL_DEADLOCK_FOUND(77,4374
#define TRACE_POSTGRESQL_DEADLOCK_FOUND_ENABLED(78,4416
#define TRACE_POSTGRESQL_CHECKPOINT_START(79,4470
#define TRACE_POSTGRESQL_CHECKPOINT_START_ENABLED(80,4518
#define TRACE_POSTGRESQL_CHECKPOINT_DONE(81,4574
#define TRACE_POSTGRESQL_CHECKPOINT_DONE_ENABLED(82,4645
#define TRACE_POSTGRESQL_CLOG_CHECKPOINT_START(83,4700
#define TRACE_POSTGRESQL_CLOG_CHECKPOINT_START_ENABLED(84,4753
#define TRACE_POSTGRESQL_CLOG_CHECKPOINT_DONE(85,4814
#define TRACE_POSTGRESQL_CLOG_CHECKPOINT_DONE_ENABLED(86,4866
#define TRACE_POSTGRESQL_SUBTRANS_CHECKPOINT_START(87,4926
#define TRACE_POSTGRESQL_SUBTRANS_CHECKPOINT_START_ENABLED(88,4983
#define TRACE_POSTGRESQL_SUBTRANS_CHECKPOINT_DONE(89,5048
#define TRACE_POSTGRESQL_SUBTRANS_CHECKPOINT_DONE_ENABLED(90,5104
#define TRACE_POSTGRESQL_MULTIXACT_CHECKPOINT_START(91,5168
#define TRACE_POSTGRESQL_MULTIXACT_CHECKPOINT_START_ENABLED(92,5226
#define TRACE_POSTGRESQL_MULTIXACT_CHECKPOINT_DONE(93,5292
#define TRACE_POSTGRESQL_MULTIXACT_CHECKPOINT_DONE_ENABLED(94,5349
#define TRACE_POSTGRESQL_TWOPHASE_CHECKPOINT_START(95,5414
#define TRACE_POSTGRESQL_TWOPHASE_CHECKPOINT_START_ENABLED(96,5467
#define TRACE_POSTGRESQL_TWOPHASE_CHECKPOINT_DONE(97,5532
#define TRACE_POSTGRESQL_TWOPHASE_CHECKPOINT_DONE_ENABLED(98,5584
#define TRACE_POSTGRESQL_SMGR_MD_READ_START(99,5648
#define TRACE_POSTGRESQL_SMGR_MD_READ_START_ENABLED(100,5728
#define TRACE_POSTGRESQL_SMGR_MD_READ_DONE(101,5786
#define TRACE_POSTGRESQL_SMGR_MD_READ_DONE_ENABLED(102,5877
#define TRACE_POSTGRESQL_SMGR_MD_WRITE_START(103,5934
#define TRACE_POSTGRESQL_SMGR_MD_WRITE_START_ENABLED(104,6015
#define TRACE_POSTGRESQL_SMGR_MD_WRITE_DONE(105,6074
#define TRACE_POSTGRESQL_SMGR_MD_WRITE_DONE_ENABLED(106,6166
#define TRACE_POSTGRESQL_WAL_INSERT(107,6224
#define TRACE_POSTGRESQL_WAL_INSERT_ENABLED(108,6272
#define TRACE_POSTGRESQL_WAL_SWITCH(109,6322
#define TRACE_POSTGRESQL_WAL_SWITCH_ENABLED(110,6360
#define TRACE_POSTGRESQL_WAL_BUFFER_WRITE_DIRTY_START(111,6410
#define TRACE_POSTGRESQL_WAL_BUFFER_WRITE_DIRTY_START_ENABLED(112,6466
#define TRACE_POSTGRESQL_WAL_BUFFER_WRITE_DIRTY_DONE(113,6534
#define TRACE_POSTGRESQL_WAL_BUFFER_WRITE_DIRTY_DONE_ENABLED(114,6589

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/win866.c,13
main(13,169

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/wstrncmp.c,86
pg_wchar_strncmp(40,1798
pg_char_and_wchar_strncmp(55,2015
pg_wchar_strlen(70,2298

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/win1251.c,13
main(13,182

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conv.c,257
local2local(30,1005
latin2mic(71,1829
mic2latin(99,2420
latin2mic_with_table(148,3652
mic2latin_with_table(196,4788
compare3(245,5743
compare4(264,6193
store_coded_char(278,6488
pg_mb_radix_conv(298,6928
UtfToLocal(429,10324
LocalToUtf(621,14459

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_big5/utf8_and_big5.c,67
PG_MODULE_MAGIC;20,575
big5_to_utf8(36,966
utf8_to_big5(54,1339

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_sjis/utf8_and_sjis.c,67
PG_MODULE_MAGIC;20,575
sjis_to_utf8(36,966
utf8_to_sjis(54,1339

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/cyrillic_and_mic/cyrillic_and_mic.c,1256
PG_MODULE_MAGIC;18,509
static const unsigned char iso2koi[iso2koi63,1825
static const unsigned char koi2iso[koi2iso83,2680
static const unsigned char win12512koi[win12512koi103,3532
static const unsigned char koi2win1251[koi2win1251123,4388
static const unsigned char win8662koi[win8662koi143,5243
static const unsigned char koi2win866[koi2win866163,6097
static const unsigned char win8662win1251[win8662win1251183,6952
static const unsigned char win12512win866[win12512win866203,7811
static const unsigned char iso2win1251[iso2win1251223,8674
static const unsigned char win12512iso[win12512iso243,9534
static const unsigned char iso2win866[iso2win866263,10393
static const unsigned char win8662iso[win8662iso283,11251
koi8r_to_mic(304,12089
mic_to_koi8r(318,12421
iso_to_mic(332,12753
mic_to_iso(346,13113
win1251_to_mic(360,13473
mic_to_win1251(374,13835
win866_to_mic(388,14197
mic_to_win866(402,14555
koi8r_to_win1251(416,14913
win1251_to_koi8r(430,15259
koi8r_to_win866(444,15605
win866_to_koi8r(458,15947
win866_to_win1251(472,16289
win1251_to_win866(486,16641
iso_to_koi8r(500,16993
koi8r_to_iso(514,17337
iso_to_win1251(528,17681
win1251_to_iso(542,18035
iso_to_win866(556,18389
win866_to_iso(570,18739

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/latin_and_mic/latin_and_mic.c,163
PG_MODULE_MAGIC;18,501
latin1_to_mic(40,1040
mic_to_latin1(54,1378
latin3_to_mic(68,1716
mic_to_latin3(82,2054
latin4_to_mic(96,2392
mic_to_latin4(110,2730

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/euc2004_sjis2004/euc2004_sjis2004.c,197
PG_MODULE_MAGIC;17,430
euc_jis_2004_to_shift_jis_2004(37,1048
shift_jis_2004_to_euc_jis_2004(51,1403
euc_jis_20042shift_jis_2004(68,1805
get_ten(184,3987
shift_jis_20042euc_jis_2004(216,4379

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/euc_jp_and_sjis/euc_jp_and_sjis.c,347
#define PGSJISALTCODE 22,606
#define PGEUCALTCODE 23,635
PG_MODULE_MAGIC;30,752
euc_jp_to_sjis(58,1750
sjis_to_euc_jp(72,2057
euc_jp_to_mic(86,2364
mic_to_euc_jp(100,2678
sjis_to_mic(114,2992
mic_to_sjis(128,3300
sjis2mic(145,3638
mic2sjis(273,6246
euc_jp2mic(365,7971
mic2euc_jp(415,8806
euc_jp2sjis(467,9699
sjis2euc_jp(560,11337

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_euc_cn/utf8_and_euc_cn.c,71
PG_MODULE_MAGIC;20,585
euc_cn_to_utf8(36,980
utf8_to_euc_cn(54,1361

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_euc_tw/utf8_and_euc_tw.c,71
PG_MODULE_MAGIC;20,585
euc_tw_to_utf8(36,980
utf8_to_euc_tw(54,1361

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_gb18030/utf8_and_gb18030.c,286
PG_MODULE_MAGIC;20,590
gb_linear(32,934
gb_unlinear(44,1230
unicode_to_utf8word(60,1594
utf8word_to_unicode(91,2132
conv_18030_to_utf8(128,2740
#define conv18030(130,2774
conv_utf8_to_18030(155,3626
#define convutf8(159,3703
gb18030_to_utf8(191,4714
utf8_to_gb18030(209,5113

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/euc_cn_and_mic/euc_cn_and_mic.c,111
PG_MODULE_MAGIC;18,503
euc_cn_to_mic(38,1052
mic_to_euc_cn(52,1366
euc_cn2mic(69,1712
mic2euc_cn(102,2260

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_euc_jp/utf8_and_euc_jp.c,71
PG_MODULE_MAGIC;20,585
euc_jp_to_utf8(36,980
utf8_to_euc_jp(54,1361

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_uhc/utf8_and_uhc.c,65
PG_MODULE_MAGIC;20,570
uhc_to_utf8(36,959
utf8_to_uhc(54,1328

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_iso8859_1/utf8_and_iso8859_1.c,77
PG_MODULE_MAGIC;18,506
iso8859_1_to_utf8(35,908
utf8_to_iso8859_1(65,1477

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/latin2_and_win1250/latin2_and_win1250.c,324
PG_MODULE_MAGIC;18,505
static const unsigned char win1250_2_iso88592[win1250_2_iso8859239,1075
static const unsigned char iso88592_2_win1250[iso88592_2_win125059,1942
latin2_to_mic(80,2788
mic_to_latin2(94,3126
win1250_to_mic(108,3464
mic_to_win1250(123,3843
latin2_to_win1250(138,4222
win1250_to_latin2(152,4578

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_iso8859/utf8_and_iso8859.c,258
PG_MODULE_MAGIC;44,1738
	pg_enc		encoding;62,2147
	const pg_mb_radix_tree *map1;map163,2166
	const pg_mb_radix_tree *map2;map264,2220
} pg_conv_map;65,2276
static const pg_conv_map maps[maps67,2292
iso8859_to_utf8(97,3613
utf8_to_iso8859(129,4283

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/euc_tw_and_big5/euc_tw_and_big5.c,279
#define ENCODING_GROWTH_RATE 18,511
PG_MODULE_MAGIC;20,543
euc_tw_to_big5(46,1385
big5_to_euc_tw(64,1815
euc_tw_to_mic(82,2245
mic_to_euc_tw(96,2559
big5_to_mic(110,2873
mic_to_big5(124,3181
euc_tw2mic(141,3521
mic2euc_tw(197,4508
big52mic(253,5534
mic2big5(303,6545

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/euc_tw_and_big5/big5.c,545
	unsigned short code,20,474
				peer;21,496
} codes_t;22,506
static const codes_t big5Level1ToCnsPlane1[big5Level1ToCnsPlane125,567
static const codes_t cnsPlane1ToBig5Level1[cnsPlane1ToBig5Level154,1157
static const codes_t big5Level2ToCnsPlane2[big5Level2ToCnsPlane284,1766
static const codes_t cnsPlane2ToBig5Level2[cnsPlane2ToBig5Level2136,2793
static const unsigned short b1c4[b1c4189,3854
static const unsigned short b2c3[b2c3197,4039
static unsigned short BinarySearchRange207,4217
BIG5toCNS(292,6614
CNStoBIG5(345,7549

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_euc2004/utf8_and_euc2004.c,84
PG_MODULE_MAGIC;20,605
euc_jis_2004_to_utf8(36,1012
utf8_to_euc_jis_2004(54,1474

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_cyrillic/utf8_and_cyrillic.c,116
PG_MODULE_MAGIC;22,674
utf8_to_koi8r(42,1141
koi8r_to_utf8(60,1520
utf8_to_koi8u(78,1897
koi8u_to_utf8(96,2276

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_win/utf8_and_win.c,250
PG_MODULE_MAGIC;40,1474
	pg_enc		encoding;58,1875
	const pg_mb_radix_tree *map1;map159,1894
	const pg_mb_radix_tree *map2;map260,1948
} pg_conv_map;61,2004
static const pg_conv_map maps[maps63,2020
win_to_utf8(78,2819
utf8_to_win(110,3480

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_gbk/utf8_and_gbk.c,65
PG_MODULE_MAGIC;20,570
gbk_to_utf8(36,959
utf8_to_gbk(54,1328

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/euc_kr_and_mic/euc_kr_and_mic.c,111
PG_MODULE_MAGIC;18,503
euc_kr_to_mic(38,1052
mic_to_euc_kr(52,1366
euc_kr2mic(69,1712
mic2euc_kr(106,2324

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_johab/utf8_and_johab.c,69
PG_MODULE_MAGIC;20,580
johab_to_utf8(36,973
utf8_to_johab(54,1350

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_sjis2004/utf8_and_sjis2004.c,88
PG_MODULE_MAGIC;20,613
shift_jis_2004_to_utf8(36,1024
utf8_to_shift_jis_2004(54,1498

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/conversion_procs/utf8_and_euc_kr/utf8_and_euc_kr.c,71
PG_MODULE_MAGIC;20,585
euc_kr_to_utf8(36,980
utf8_to_euc_kr(54,1361

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/wstrcmp.c,34
pg_char_and_wchar_strcmp(41,1818

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/mbutils.c,2451
typedef struct ConvProcInfo53,2093
	int			s_encoding;55,2123
	int			c_encoding;56,2180
	FmgrInfo	to_server_info;57,2199
	FmgrInfo	to_client_info;58,2264
} ConvProcInfo;59,2290
static List *ConvProcList ConvProcList61,2307
static FmgrInfo *ToServerConvProc ToServerConvProc67,2491
static FmgrInfo *ToClientConvProc ToClientConvProc68,2533
static FmgrInfo *Utf8ToServerConvProc Utf8ToServerConvProc75,2775
static const pg_enc2name *ClientEncoding ClientEncoding80,2888
static const pg_enc2name *DatabaseEncoding DatabaseEncoding81,2963
static const pg_enc2name *MessageEncoding MessageEncoding82,3040
static bool backend_startup_complete 90,3408
static int	pending_client_encoding 91,3454
PrepareClientEncoding(110,4047
SetClientEncoding(208,6900
InitializeClientEncoding(281,8571
pg_get_client_encoding(336,10099
pg_get_client_encoding_name(345,10231
pg_do_encoding_conversion(356,10460
pg_convert_to(444,13280
pg_convert_from(469,14028
pg_convert(496,14911
length_in_encoding(558,16651
pg_encoding_max_length_sql(587,17377
pg_client_to_server(603,17720
pg_any_to_server(619,18228
pg_server_to_client(681,20175
pg_server_to_any(692,20421
perform_default_encoding_conversion(726,21571
pg_unicode_to_server(806,23789
pg_mb2wchar(863,25341
pg_mb2wchar_with_len(870,25578
pg_encoding_mb2wchar_with_len(877,25788
pg_wchar2mb(885,26026
pg_wchar2mb_with_len(892,26266
pg_encoding_wchar2mb_with_len(899,26470
pg_mblen(907,26713
pg_dsplen(914,26897
pg_mbstrlen(921,27092
pg_mbstrlen_with_len(941,27441
pg_mbcliplen(967,27928
pg_encoding_mbcliplen(977,28123
pg_mbcharcliplen(1009,28762
cliplen(1034,29198
SetDatabaseEncoding(1045,29337
SetMessageEncoding(1055,29575
raw_pg_bind_textdomain_codeset(1071,30044
pg_bind_textdomain_codeset(1116,31573
GetDatabaseEncoding(1151,32515
GetDatabaseEncodingName(1157,32595
getdatabaseencoding(1163,32668
pg_client_encoding(1169,32795
PG_char_to_encoding(1175,32919
PG_encoding_to_char(1183,33051
GetMessageEncoding(1198,33525
pg_generic_charinc(1215,34079
pg_utf8_increment(1249,35193
pg_eucjp_increment(1327,36954
pg_database_encoding_character_incrementer(1413,38262
pg_database_encoding_max_length(1436,38681
pg_verifymbstr(1446,38923
pg_verify_mbstr(1457,39163
pg_verify_mbstr_len(1474,39661
check_encoding_conversion_args(1546,41145
report_invalid_encoding(1575,42307
report_untranslatable_char(1607,43110
pgwin32_message_to_UTF16(1643,44134

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/iso.c,13
main(13,164

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mb/stringinfo_mb.c,37
appendStringInfoStringQuoted(34,936

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/fmgroids.h,97546
#define FMGROIDS_H22,701
#define F_HEAP_TABLEAM_HANDLER 35,1239
#define F_BYTEAOUT 36,1272
#define F_CHAROUT 37,1294
#define F_NAMEIN 38,1315
#define F_NAMEOUT 39,1335
#define F_INT2IN 40,1356
#define F_INT2OUT 41,1376
#define F_INT2VECTORIN 42,1397
#define F_INT2VECTOROUT 43,1423
#define F_INT4IN 44,1450
#define F_INT4OUT 45,1470
#define F_REGPROCIN 46,1491
#define F_REGPROCOUT 47,1514
#define F_TEXTIN 48,1538
#define F_TEXTOUT 49,1558
#define F_TIDIN 50,1579
#define F_TIDOUT 51,1598
#define F_XIDIN 52,1618
#define F_XIDOUT 53,1637
#define F_CIDIN 54,1657
#define F_CIDOUT 55,1676
#define F_OIDVECTORIN 56,1696
#define F_OIDVECTOROUT 57,1721
#define F_BOOLLT 58,1747
#define F_BOOLGT 59,1767
#define F_BOOLEQ 60,1787
#define F_CHAREQ 61,1807
#define F_NAMEEQ 62,1827
#define F_INT2EQ 63,1847
#define F_INT2LT 64,1867
#define F_INT4EQ 65,1887
#define F_INT4LT 66,1907
#define F_TEXTEQ 67,1927
#define F_XIDEQ 68,1947
#define F_CIDEQ 69,1966
#define F_CHARNE 70,1985
#define F_CHARLE 71,2005
#define F_CHARGT 72,2025
#define F_CHARGE 73,2045
#define F_CHARTOI4 74,2065
#define F_I4TOCHAR 75,2087
#define F_NAMEREGEXEQ 76,2109
#define F_BOOLNE 77,2134
#define F_PG_DDL_COMMAND_IN 78,2154
#define F_PG_DDL_COMMAND_OUT 79,2185
#define F_PG_DDL_COMMAND_RECV 80,2217
#define F_PGSQL_VERSION 81,2250
#define F_PG_DDL_COMMAND_SEND 82,2277
#define F_EQSEL 83,2310
#define F_NEQSEL 84,2330
#define F_SCALARLTSEL 85,2351
#define F_SCALARGTSEL 86,2377
#define F_EQJOINSEL 87,2403
#define F_NEQJOINSEL 88,2427
#define F_SCALARLTJOINSEL 89,2452
#define F_SCALARGTJOINSEL 90,2482
#define F_UNKNOWNIN 91,2512
#define F_UNKNOWNOUT 92,2536
#define F_NUMERIC_FAC 93,2561
#define F_BOX_ABOVE_EQ 94,2587
#define F_BOX_BELOW_EQ 95,2614
#define F_POINT_IN 96,2641
#define F_POINT_OUT 97,2664
#define F_LSEG_IN 98,2688
#define F_LSEG_OUT 99,2710
#define F_PATH_IN 100,2733
#define F_PATH_OUT 101,2755
#define F_BOX_IN 102,2778
#define F_BOX_OUT 103,2799
#define F_BOX_OVERLAP 104,2821
#define F_BOX_GE 105,2847
#define F_BOX_GT 106,2868
#define F_BOX_EQ 107,2889
#define F_BOX_LT 108,2910
#define F_BOX_LE 109,2931
#define F_POINT_ABOVE 110,2952
#define F_POINT_LEFT 111,2978
#define F_POINT_RIGHT 112,3003
#define F_POINT_BELOW 113,3029
#define F_POINT_EQ 114,3055
#define F_ON_PB 115,3078
#define F_ON_PPATH 116,3098
#define F_BOX_CENTER 117,3121
#define F_AREASEL 118,3146
#define F_AREAJOINSEL 119,3168
#define F_INT4MUL 120,3194
#define F_INT4NE 121,3216
#define F_INT2NE 122,3237
#define F_INT2GT 123,3258
#define F_INT4GT 124,3279
#define F_INT2LE 125,3300
#define F_INT4LE 126,3321
#define F_INT4GE 127,3342
#define F_INT2GE 128,3363
#define F_INT2MUL 129,3384
#define F_INT2DIV 130,3406
#define F_INT4DIV 131,3428
#define F_INT2MOD 132,3450
#define F_INT4MOD 133,3472
#define F_TEXTNE 134,3494
#define F_INT24EQ 135,3515
#define F_INT42EQ 136,3537
#define F_INT24LT 137,3559
#define F_INT42LT 138,3581
#define F_INT24GT 139,3603
#define F_INT42GT 140,3625
#define F_INT24NE 141,3647
#define F_INT42NE 142,3669
#define F_INT24LE 143,3691
#define F_INT42LE 144,3713
#define F_INT24GE 145,3735
#define F_INT42GE 146,3757
#define F_INT24MUL 147,3779
#define F_INT42MUL 148,3802
#define F_INT24DIV 149,3825
#define F_INT42DIV 150,3848
#define F_INT2PL 151,3871
#define F_INT4PL 152,3892
#define F_INT24PL 153,3913
#define F_INT42PL 154,3935
#define F_INT2MI 155,3957
#define F_INT4MI 156,3978
#define F_INT24MI 157,3999
#define F_INT42MI 158,4021
#define F_OIDEQ 159,4043
#define F_OIDNE 160,4063
#define F_BOX_SAME 161,4083
#define F_BOX_CONTAIN 162,4106
#define F_BOX_LEFT 163,4132
#define F_BOX_OVERLEFT 164,4155
#define F_BOX_OVERRIGHT 165,4182
#define F_BOX_RIGHT 166,4210
#define F_BOX_CONTAINED 167,4234
#define F_BOX_CONTAIN_PT 168,4262
#define F_PG_NODE_TREE_IN 169,4291
#define F_PG_NODE_TREE_OUT 170,4321
#define F_PG_NODE_TREE_RECV 171,4352
#define F_PG_NODE_TREE_SEND 172,4384
#define F_FLOAT4IN 173,4416
#define F_FLOAT4OUT 174,4439
#define F_FLOAT4MUL 175,4463
#define F_FLOAT4DIV 176,4487
#define F_FLOAT4PL 177,4511
#define F_FLOAT4MI 178,4534
#define F_FLOAT4UM 179,4557
#define F_FLOAT4ABS 180,4580
#define F_FLOAT4_ACCUM 181,4604
#define F_FLOAT4LARGER 182,4631
#define F_FLOAT4SMALLER 183,4658
#define F_INT4UM 184,4686
#define F_INT2UM 185,4707
#define F_FLOAT8IN 186,4728
#define F_FLOAT8OUT 187,4751
#define F_FLOAT8MUL 188,4775
#define F_FLOAT8DIV 189,4799
#define F_FLOAT8PL 190,4823
#define F_FLOAT8MI 191,4846
#define F_FLOAT8UM 192,4869
#define F_FLOAT8ABS 193,4892
#define F_FLOAT8_ACCUM 194,4916
#define F_FLOAT8LARGER 195,4943
#define F_FLOAT8SMALLER 196,4970
#define F_LSEG_CENTER 197,4998
#define F_PATH_CENTER 198,5024
#define F_POLY_CENTER 199,5050
#define F_DROUND 200,5076
#define F_DTRUNC 201,5097
#define F_DSQRT 202,5118
#define F_DCBRT 203,5138
#define F_DPOW 204,5158
#define F_DEXP 205,5177
#define F_DLOG1 206,5196
#define F_I2TOD 207,5216
#define F_I2TOF 208,5236
#define F_DTOI2 209,5256
#define F_FTOI2 210,5276
#define F_LINE_DISTANCE 211,5296
#define F_NAMEEQTEXT 212,5324
#define F_NAMELTTEXT 213,5349
#define F_NAMELETEXT 214,5374
#define F_NAMEGETEXT 215,5399
#define F_NAMEGTTEXT 216,5424
#define F_NAMENETEXT 217,5449
#define F_BTNAMETEXTCMP 218,5474
#define F_TEXTEQNAME 219,5502
#define F_TEXTLTNAME 220,5527
#define F_TEXTLENAME 221,5552
#define F_TEXTGENAME 222,5577
#define F_TEXTGTNAME 223,5602
#define F_TEXTNENAME 224,5627
#define F_BTTEXTNAMECMP 225,5652
#define F_NAMECONCATOID 226,5680
#define F_TABLE_AM_HANDLER_IN 227,5708
#define F_TABLE_AM_HANDLER_OUT 228,5742
#define F_TIMEOFDAY 229,5777
#define F_PG_NEXTOID 230,5801
#define F_FLOAT8_COMBINE 231,5826
#define F_INTER_SL 232,5855
#define F_INTER_LB 233,5878
#define F_FLOAT48MUL 234,5901
#define F_FLOAT48DIV 235,5926
#define F_FLOAT48PL 236,5951
#define F_FLOAT48MI 237,5975
#define F_FLOAT84MUL 238,5999
#define F_FLOAT84DIV 239,6024
#define F_FLOAT84PL 240,6049
#define F_FLOAT84MI 241,6073
#define F_FLOAT4EQ 242,6097
#define F_FLOAT4NE 243,6120
#define F_FLOAT4LT 244,6143
#define F_FLOAT4LE 245,6166
#define F_FLOAT4GT 246,6189
#define F_FLOAT4GE 247,6212
#define F_FLOAT8EQ 248,6235
#define F_FLOAT8NE 249,6258
#define F_FLOAT8LT 250,6281
#define F_FLOAT8LE 251,6304
#define F_FLOAT8GT 252,6327
#define F_FLOAT8GE 253,6350
#define F_FLOAT48EQ 254,6373
#define F_FLOAT48NE 255,6397
#define F_FLOAT48LT 256,6421
#define F_FLOAT48LE 257,6445
#define F_FLOAT48GT 258,6469
#define F_FLOAT48GE 259,6493
#define F_FLOAT84EQ 260,6517
#define F_FLOAT84NE 261,6541
#define F_FLOAT84LT 262,6565
#define F_FLOAT84LE 263,6589
#define F_FLOAT84GT 264,6613
#define F_FLOAT84GE 265,6637
#define F_FTOD 266,6661
#define F_DTOF 267,6680
#define F_I2TOI4 268,6699
#define F_I4TOI2 269,6720
#define F_PG_JIT_AVAILABLE 270,6741
#define F_I4TOD 271,6772
#define F_DTOI4 272,6792
#define F_I4TOF 273,6812
#define F_FTOI4 274,6832
#define F_WIDTH_BUCKET_FLOAT8 275,6852
#define F_JSON_IN 276,6886
#define F_JSON_OUT 277,6908
#define F_JSON_RECV 278,6931
#define F_JSON_SEND 279,6955
#define F_INDEX_AM_HANDLER_IN 280,6979
#define F_INDEX_AM_HANDLER_OUT 281,7013
#define F_HASHMACADDR8 282,7048
#define F_HASH_ACLITEM 283,7075
#define F_BTHANDLER 284,7102
#define F_HASHHANDLER 285,7126
#define F_GISTHANDLER 286,7152
#define F_GINHANDLER 287,7178
#define F_SPGHANDLER 288,7203
#define F_BRINHANDLER 289,7228
#define F_SCALARLESEL 290,7254
#define F_SCALARGESEL 291,7280
#define F_AMVALIDATE 292,7306
#define F_POLY_SAME 293,7331
#define F_POLY_CONTAIN 294,7355
#define F_POLY_LEFT 295,7382
#define F_POLY_OVERLEFT 296,7406
#define F_POLY_OVERRIGHT 297,7434
#define F_POLY_RIGHT 298,7463
#define F_POLY_CONTAINED 299,7488
#define F_POLY_OVERLAP 300,7517
#define F_POLY_IN 301,7544
#define F_POLY_OUT 302,7566
#define F_BTINT2CMP 303,7589
#define F_BTINT4CMP 304,7613
#define F_BTFLOAT4CMP 305,7637
#define F_BTFLOAT8CMP 306,7663
#define F_BTOIDCMP 307,7689
#define F_DIST_BP 308,7712
#define F_BTCHARCMP 309,7734
#define F_BTNAMECMP 310,7758
#define F_BTTEXTCMP 311,7782
#define F_LSEG_DISTANCE 312,7806
#define F_LSEG_INTERPT 313,7834
#define F_DIST_PS 314,7861
#define F_DIST_PB 315,7883
#define F_DIST_SB 316,7905
#define F_CLOSE_PS 317,7927
#define F_CLOSE_PB 318,7950
#define F_CLOSE_SB 319,7973
#define F_ON_PS 320,7996
#define F_PATH_DISTANCE 321,8016
#define F_DIST_PPATH 322,8044
#define F_ON_SB 323,8069
#define F_INTER_SB 324,8089
#define F_TEXT_TO_ARRAY_NULL 325,8112
#define F_CASH_CMP 326,8145
#define F_ARRAY_APPEND 327,8168
#define F_ARRAY_PREPEND 328,8195
#define F_DIST_SP 329,8223
#define F_DIST_BS 330,8245
#define F_BTARRAYCMP 331,8267
#define F_ARRAY_CAT 332,8292
#define F_ARRAY_TO_TEXT_NULL 333,8316
#define F_SCALARLEJOINSEL 334,8349
#define F_ARRAY_NE 335,8379
#define F_ARRAY_LT 336,8402
#define F_ARRAY_GT 337,8425
#define F_ARRAY_LE 338,8448
#define F_TEXT_TO_ARRAY 339,8471
#define F_ARRAY_TO_TEXT 340,8499
#define F_ARRAY_GE 341,8527
#define F_SCALARGEJOINSEL 342,8550
#define F_HASHMACADDR 343,8580
#define F_HASHTEXT 344,8606
#define F_RTRIM1 345,8629
#define F_BTOIDVECTORCMP 346,8650
#define F_NAME_TEXT 347,8679
#define F_TEXT_NAME 348,8703
#define F_NAME_BPCHAR 349,8727
#define F_BPCHAR_NAME 350,8753
#define F_DIST_PATHP 351,8779
#define F_HASHINET 352,8804
#define F_HASHINT4EXTENDED 353,8827
#define F_HASH_NUMERIC 354,8858
#define F_MACADDR_IN 355,8885
#define F_MACADDR_OUT 356,8910
#define F_PG_NUM_NULLS 357,8936
#define F_PG_NUM_NONNULLS 358,8963
#define F_HASHINT2EXTENDED 359,8993
#define F_HASHINT8EXTENDED 360,9024
#define F_HASHFLOAT4EXTENDED 361,9055
#define F_HASHFLOAT8EXTENDED 362,9088
#define F_HASHOIDEXTENDED 363,9121
#define F_HASHCHAREXTENDED 364,9151
#define F_HASHNAMEEXTENDED 365,9182
#define F_HASHTEXTEXTENDED 366,9213
#define F_HASHINT2 367,9244
#define F_HASHINT4 368,9267
#define F_HASHFLOAT4 369,9290
#define F_HASHFLOAT8 370,9315
#define F_HASHOID 371,9340
#define F_HASHCHAR 372,9362
#define F_HASHNAME 373,9385
#define F_HASHVARLENA 374,9408
#define F_HASHOIDVECTOR 375,9434
#define F_TEXT_LARGER 376,9462
#define F_TEXT_SMALLER 377,9488
#define F_INT8IN 378,9515
#define F_INT8OUT 379,9536
#define F_INT8UM 380,9558
#define F_INT8PL 381,9579
#define F_INT8MI 382,9600
#define F_INT8MUL 383,9621
#define F_INT8DIV 384,9643
#define F_INT8EQ 385,9665
#define F_INT8NE 386,9686
#define F_INT8LT 387,9707
#define F_INT8GT 388,9728
#define F_INT8LE 389,9749
#define F_INT8GE 390,9770
#define F_INT84EQ 391,9791
#define F_INT84NE 392,9813
#define F_INT84LT 393,9835
#define F_INT84GT 394,9857
#define F_INT84LE 395,9879
#define F_INT84GE 396,9901
#define F_INT84 397,9923
#define F_INT48 398,9943
#define F_I8TOD 399,9963
#define F_DTOI8 400,9983
#define F_ARRAY_LARGER 401,10003
#define F_ARRAY_SMALLER 402,10030
#define F_INET_ABBREV 403,10058
#define F_CIDR_ABBREV 404,10084
#define F_INET_SET_MASKLEN 405,10110
#define F_OIDVECTORNE 406,10141
#define F_HASH_ARRAY 407,10167
#define F_CIDR_SET_MASKLEN 408,10192
#define F_PG_INDEXAM_HAS_PROPERTY 409,10223
#define F_PG_INDEX_HAS_PROPERTY 410,10261
#define F_PG_INDEX_COLUMN_HAS_PROPERTY 411,10297
#define F_I8TOF 412,10340
#define F_FTOI8 413,10360
#define F_NAMELT 414,10380
#define F_NAMELE 415,10401
#define F_NAMEGT 416,10422
#define F_NAMEGE 417,10443
#define F_NAMENE 418,10464
#define F_BPCHAR 419,10485
#define F_VARCHAR 420,10506
#define F_PG_INDEXAM_PROGRESS_PHASENAME 421,10528
#define F_OIDVECTORLT 422,10572
#define F_OIDVECTORLE 423,10598
#define F_OIDVECTOREQ 424,10624
#define F_OIDVECTORGE 425,10650
#define F_OIDVECTORGT 426,10676
#define F_NETWORK_NETWORK 427,10702
#define F_NETWORK_NETMASK 428,10732
#define F_NETWORK_MASKLEN 429,10762
#define F_NETWORK_BROADCAST 430,10792
#define F_NETWORK_HOST 431,10824
#define F_DIST_LP 432,10851
#define F_DIST_BL 433,10873
#define F_DIST_LS 434,10895
#define F_CURRENT_USER 435,10917
#define F_NETWORK_FAMILY 436,10944
#define F_INT82 437,10973
#define F_BE_LO_CREATE 438,10993
#define F_OIDLT 439,11020
#define F_OIDLE 440,11040
#define F_BYTEAOCTETLEN 441,11060
#define F_BYTEAGETBYTE 442,11088
#define F_BYTEASETBYTE 443,11115
#define F_BYTEAGETBIT 444,11142
#define F_BYTEASETBIT 445,11168
#define F_DIST_PL 446,11194
#define F_DIST_LB 447,11216
#define F_DIST_SL 448,11238
#define F_DIST_CPOLY 449,11260
#define F_POLY_DISTANCE 450,11285
#define F_NETWORK_SHOW 451,11313
#define F_TEXT_LT 452,11340
#define F_TEXT_LE 453,11362
#define F_TEXT_GT 454,11384
#define F_TEXT_GE 455,11406
#define F_ARRAY_EQ 456,11428
#define F_SESSION_USER 457,11451
#define F_ARRAY_DIMS 458,11478
#define F_ARRAY_NDIMS 459,11503
#define F_BYTEAOVERLAY 460,11529
#define F_ARRAY_IN 461,11556
#define F_ARRAY_OUT 462,11579
#define F_BYTEAOVERLAY_NO_LEN 463,11603
#define F_MACADDR_TRUNC 464,11637
#define F_INT28 465,11665
#define F_BE_LO_IMPORT 466,11685
#define F_BE_LO_EXPORT 467,11712
#define F_INT4INC 468,11739
#define F_BE_LO_IMPORT_WITH_OID 469,11761
#define F_INT4LARGER 470,11797
#define F_INT4SMALLER 471,11822
#define F_INT2LARGER 472,11848
#define F_INT2SMALLER 473,11873
#define F_HASHVARLENAEXTENDED 474,11899
#define F_HASHOIDVECTOREXTENDED 475,11933
#define F_HASH_ACLITEM_EXTENDED 476,11969
#define F_HASHMACADDREXTENDED 477,12005
#define F_HASHINETEXTENDED 478,12039
#define F_HASH_NUMERIC_EXTENDED 479,12070
#define F_HASHMACADDR8EXTENDED 480,12106
#define F_HASH_ARRAY_EXTENDED 481,12141
#define F_DIST_POLYC 482,12175
#define F_PG_CLIENT_ENCODING 483,12200
#define F_CURRENT_QUERY 484,12233
#define F_MACADDR_EQ 485,12261
#define F_MACADDR_LT 486,12286
#define F_MACADDR_LE 487,12311
#define F_MACADDR_GT 488,12336
#define F_MACADDR_GE 489,12361
#define F_MACADDR_NE 490,12386
#define F_MACADDR_CMP 491,12411
#define F_INT82PL 492,12437
#define F_INT82MI 493,12459
#define F_INT82MUL 494,12481
#define F_INT82DIV 495,12504
#define F_INT28PL 496,12527
#define F_BTINT8CMP 497,12549
#define F_CASH_MUL_FLT4 498,12573
#define F_CASH_DIV_FLT4 499,12601
#define F_FLT4_MUL_CASH 500,12629
#define F_TEXTPOS 501,12657
#define F_TEXTLIKE 502,12679
#define F_TEXTNLIKE 503,12702
#define F_INT48EQ 504,12726
#define F_INT48NE 505,12748
#define F_INT48LT 506,12770
#define F_INT48GT 507,12792
#define F_INT48LE 508,12814
#define F_INT48GE 509,12836
#define F_NAMELIKE 510,12858
#define F_NAMENLIKE 511,12881
#define F_CHAR_BPCHAR 512,12905
#define F_CURRENT_DATABASE 513,12931
#define F_INT4_MUL_CASH 514,12962
#define F_INT2_MUL_CASH 515,12990
#define F_CASH_MUL_INT4 516,13018
#define F_CASH_DIV_INT4 517,13046
#define F_CASH_MUL_INT2 518,13074
#define F_CASH_DIV_INT2 519,13102
#define F_LOWER 520,13130
#define F_UPPER 521,13150
#define F_INITCAP 522,13170
#define F_LPAD 523,13192
#define F_RPAD 524,13211
#define F_LTRIM 525,13230
#define F_RTRIM 526,13250
#define F_TEXT_SUBSTR 527,13270
#define F_TRANSLATE 528,13296
#define F_LTRIM1 529,13320
#define F_TEXT_SUBSTR_NO_LEN 530,13341
#define F_BTRIM 531,13374
#define F_BTRIM1 532,13394
#define F_CASH_IN 533,13415
#define F_CASH_OUT 534,13437
#define F_CASH_EQ 535,13460
#define F_CASH_NE 536,13482
#define F_CASH_LT 537,13504
#define F_CASH_LE 538,13526
#define F_CASH_GT 539,13548
#define F_CASH_GE 540,13570
#define F_CASH_PL 541,13592
#define F_CASH_MI 542,13614
#define F_CASH_MUL_FLT8 543,13636
#define F_CASH_DIV_FLT8 544,13664
#define F_CASHLARGER 545,13692
#define F_CASHSMALLER 546,13717
#define F_INET_IN 547,13743
#define F_INET_OUT 548,13765
#define F_FLT8_MUL_CASH 549,13788
#define F_NETWORK_EQ 550,13816
#define F_NETWORK_LT 551,13841
#define F_NETWORK_LE 552,13866
#define F_NETWORK_GT 553,13891
#define F_NETWORK_GE 554,13916
#define F_NETWORK_NE 555,13941
#define F_NETWORK_CMP 556,13966
#define F_NETWORK_SUB 557,13992
#define F_NETWORK_SUBEQ 558,14018
#define F_NETWORK_SUP 559,14046
#define F_NETWORK_SUPEQ 560,14072
#define F_CASH_WORDS 561,14100
#define F_GENERATE_SERIES_TIMESTAMP 562,14125
#define F_GENERATE_SERIES_TIMESTAMPTZ 563,14165
#define F_INT28MI 564,14207
#define F_INT28MUL 565,14229
#define F_TEXT_CHAR 566,14252
#define F_INT8MOD 567,14276
#define F_CHAR_TEXT 568,14298
#define F_INT28DIV 569,14322
#define F_HASHINT8 570,14345
#define F_BE_LO_OPEN 571,14368
#define F_BE_LO_CLOSE 572,14393
#define F_BE_LOREAD 573,14419
#define F_BE_LOWRITE 574,14443
#define F_BE_LO_LSEEK 575,14468
#define F_BE_LO_CREAT 576,14494
#define F_BE_LO_TELL 577,14520
#define F_ON_PL 578,14545
#define F_ON_SL 579,14565
#define F_CLOSE_PL 580,14585
#define F_CLOSE_SL 581,14608
#define F_CLOSE_LB 582,14631
#define F_BE_LO_UNLINK 583,14654
#define F_HASHBPCHAREXTENDED 584,14681
#define F_PATH_INTER 585,14714
#define F_BOX_AREA 586,14739
#define F_BOX_WIDTH 587,14762
#define F_BOX_HEIGHT 588,14786
#define F_BOX_DISTANCE 589,14811
#define F_PATH_AREA 590,14838
#define F_BOX_INTERSECT 591,14862
#define F_BOX_DIAGONAL 592,14890
#define F_PATH_N_LT 593,14917
#define F_PATH_N_GT 594,14941
#define F_PATH_N_EQ 595,14965
#define F_PATH_N_LE 596,14989
#define F_PATH_N_GE 597,15013
#define F_PATH_LENGTH 598,15037
#define F_POINT_NE 599,15063
#define F_POINT_VERT 600,15086
#define F_POINT_HORIZ 601,15111
#define F_POINT_DISTANCE 602,15137
#define F_POINT_SLOPE 603,15166
#define F_LSEG_CONSTRUCT 604,15192
#define F_LSEG_INTERSECT 605,15221
#define F_LSEG_PARALLEL 606,15250
#define F_LSEG_PERP 607,15278
#define F_LSEG_VERTICAL 608,15302
#define F_LSEG_HORIZONTAL 609,15330
#define F_LSEG_EQ 610,15360
#define F_BE_LO_TRUNCATE 611,15382
#define F_TEXTLIKE_SUPPORT 612,15412
#define F_TEXTICREGEXEQ_SUPPORT 613,15444
#define F_TEXTICLIKE_SUPPORT 614,15481
#define F_TIMESTAMPTZ_IZONE 615,15515
#define F_GIST_POINT_COMPRESS 616,15548
#define F_ACLITEMIN 617,15583
#define F_ACLITEMOUT 618,15608
#define F_ACLINSERT 619,15634
#define F_ACLREMOVE 620,15659
#define F_ACLCONTAINS 621,15684
#define F_GETDATABASEENCODING 622,15711
#define F_BPCHARIN 623,15746
#define F_BPCHAROUT 624,15770
#define F_VARCHARIN 625,15795
#define F_VARCHAROUT 626,15820
#define F_BPCHAREQ 627,15846
#define F_BPCHARLT 628,15870
#define F_BPCHARLE 629,15894
#define F_BPCHARGT 630,15918
#define F_BPCHARGE 631,15942
#define F_BPCHARNE 632,15966
#define F_ACLITEM_EQ 633,15990
#define F_BPCHAR_LARGER 634,16016
#define F_BPCHAR_SMALLER 635,16045
#define F_PG_PREPARED_XACT 636,16075
#define F_GENERATE_SERIES_STEP_INT4 637,16107
#define F_GENERATE_SERIES_INT4 638,16148
#define F_GENERATE_SERIES_STEP_INT8 639,16184
#define F_GENERATE_SERIES_INT8 640,16225
#define F_BPCHARCMP 641,16261
#define F_TEXT_REGCLASS 642,16286
#define F_HASHBPCHAR 643,16315
#define F_FORMAT_TYPE 644,16341
#define F_DATE_IN 645,16368
#define F_DATE_OUT 646,16391
#define F_DATE_EQ 647,16415
#define F_DATE_LT 648,16438
#define F_DATE_LE 649,16461
#define F_DATE_GT 650,16484
#define F_DATE_GE 651,16507
#define F_DATE_NE 652,16530
#define F_DATE_CMP 653,16553
#define F_TIME_LT 654,16577
#define F_TIME_LE 655,16600
#define F_TIME_GT 656,16623
#define F_TIME_GE 657,16646
#define F_TIME_NE 658,16669
#define F_TIME_CMP 659,16692
#define F_DATE_LARGER 660,16716
#define F_DATE_SMALLER 661,16743
#define F_DATE_MI 662,16771
#define F_DATE_PLI 663,16794
#define F_DATE_MII 664,16818
#define F_TIME_IN 665,16842
#define F_TIME_OUT 666,16865
#define F_TIME_EQ 667,16889
#define F_CIRCLE_ADD_PT 668,16912
#define F_CIRCLE_SUB_PT 669,16941
#define F_CIRCLE_MUL_PT 670,16970
#define F_CIRCLE_DIV_PT 671,16999
#define F_TIMESTAMPTZ_IN 672,17028
#define F_TIMESTAMPTZ_OUT 673,17058
#define F_TIMESTAMP_EQ 674,17089
#define F_TIMESTAMP_NE 675,17117
#define F_TIMESTAMP_LT 676,17145
#define F_TIMESTAMP_LE 677,17173
#define F_TIMESTAMP_GE 678,17201
#define F_TIMESTAMP_GT 679,17229
#define F_FLOAT8_TIMESTAMPTZ 680,17257
#define F_TIMESTAMPTZ_ZONE 681,17291
#define F_INTERVAL_IN 682,17323
#define F_INTERVAL_OUT 683,17350
#define F_INTERVAL_EQ 684,17378
#define F_INTERVAL_NE 685,17405
#define F_INTERVAL_LT 686,17432
#define F_INTERVAL_LE 687,17459
#define F_INTERVAL_GE 688,17486
#define F_INTERVAL_GT 689,17513
#define F_INTERVAL_UM 690,17540
#define F_INTERVAL_PL 691,17567
#define F_INTERVAL_MI 692,17594
#define F_TIMESTAMPTZ_PART 693,17621
#define F_INTERVAL_PART 694,17653
#define F_NETWORK_SUBSET_SUPPORT 695,17682
#define F_DATE_TIMESTAMPTZ 696,17720
#define F_INTERVAL_JUSTIFY_HOURS 697,17752
#define F_JSONB_PATH_EXISTS_TZ 698,17790
#define F_TIMESTAMPTZ_DATE 699,17826
#define F_JSONB_PATH_QUERY_TZ 700,17858
#define F_JSONB_PATH_QUERY_ARRAY_TZ 701,17893
#define F_XID_AGE 702,17934
#define F_TIMESTAMP_MI 703,17957
#define F_TIMESTAMPTZ_PL_INTERVAL 704,17985
#define F_TIMESTAMPTZ_MI_INTERVAL 705,18024
#define F_GENERATE_SUBSCRIPTS 706,18063
#define F_GENERATE_SUBSCRIPTS_NODIR 707,18098
#define F_ARRAY_FILL 708,18139
#define F_DLOG10 709,18165
#define F_TIMESTAMP_SMALLER 710,18187
#define F_TIMESTAMP_LARGER 711,18220
#define F_INTERVAL_SMALLER 712,18252
#define F_INTERVAL_LARGER 713,18284
#define F_TIMESTAMPTZ_AGE 714,18315
#define F_INTERVAL_SCALE 715,18346
#define F_TIMESTAMPTZ_TRUNC 716,18376
#define F_INTERVAL_TRUNC 717,18409
#define F_INT8INC 718,18439
#define F_INT8ABS 719,18462
#define F_INT8LARGER 720,18485
#define F_INT8SMALLER 721,18511
#define F_TEXTICREGEXEQ 722,18538
#define F_TEXTICREGEXNE 723,18567
#define F_NAMEICREGEXEQ 724,18596
#define F_NAMEICREGEXNE 725,18625
#define F_BOOLIN 726,18654
#define F_BOOLOUT 727,18676
#define F_BYTEAIN 728,18699
#define F_CHARIN 729,18722
#define F_CHARLT 730,18744
#define F_UNIQUE_KEY_RECHECK 731,18766
#define F_INT4ABS 732,18800
#define F_NAMEREGEXNE 733,18823
#define F_INT2ABS 734,18850
#define F_TEXTREGEXEQ 735,18873
#define F_TEXTREGEXNE 736,18900
#define F_TEXTLEN 737,18927
#define F_TEXTCAT 738,18950
#define F_PG_CHAR_TO_ENCODING 739,18973
#define F_TIDNE 740,19008
#define F_CIDR_IN 741,19029
#define F_PARSE_IDENT 742,19052
#define F_PG_COLUMN_SIZE 743,19079
#define F_OVERLAPS_TIMETZ 744,19109
#define F_DATETIME_TIMESTAMP 745,19140
#define F_TIMETZ_PART 746,19174
#define F_INT84PL 747,19201
#define F_INT84MI 748,19224
#define F_INT84MUL 749,19247
#define F_INT84DIV 750,19271
#define F_INT48PL 751,19295
#define F_INT48MI 752,19318
#define F_INT48MUL 753,19341
#define F_INT48DIV 754,19365
#define F_QUOTE_IDENT 755,19389
#define F_QUOTE_LITERAL 756,19416
#define F_TIMESTAMPTZ_TRUNC_ZONE 757,19445
#define F_ARRAY_FILL_WITH_LOWER_BOUNDS 758,19483
#define F_I8TOOID 759,19527
#define F_OIDTOI8 760,19550
#define F_QUOTE_NULLABLE 761,19573
#define F_SUPPRESS_REDUNDANT_UPDATES_TRIGGER 762,19603
#define F_TIDEQ 763,19653
#define F_CURRTID_BYRELOID 764,19674
#define F_CURRTID_BYRELNAME 765,19706
#define F_INTERVAL_JUSTIFY_DAYS 766,19739
#define F_DATETIMETZ_TIMESTAMPTZ 767,19776
#define F_NOW 768,19814
#define F_POSITIONSEL 769,19833
#define F_POSITIONJOINSEL 770,19860
#define F_CONTSEL 771,19891
#define F_CONTJOINSEL 772,19914
#define F_OVERLAPS_TIMESTAMP 773,19941
#define F_OVERLAPS_TIME 774,19975
#define F_TIMESTAMP_IN 775,20004
#define F_TIMESTAMP_OUT 776,20032
#define F_TIMESTAMP_CMP 777,20061
#define F_INTERVAL_CMP 778,20090
#define F_TIMESTAMP_TIME 779,20118
#define F_BPCHARLEN 780,20148
#define F_INTERVAL_DIV 781,20173
#define F_OIDVECTORTYPES 782,20201
#define F_TIMETZ_IN 783,20231
#define F_TIMETZ_OUT 784,20256
#define F_TIMETZ_EQ 785,20282
#define F_TIMETZ_NE 786,20307
#define F_TIMETZ_LT 787,20332
#define F_TIMETZ_LE 788,20357
#define F_TIMETZ_GE 789,20382
#define F_TIMETZ_GT 790,20407
#define F_TIMETZ_CMP 791,20432
#define F_NETWORK_HOSTMASK 792,20458
#define F_TEXTREGEXEQ_SUPPORT 793,20490
#define F_MAKEACLITEM 794,20525
#define F_TIME_INTERVAL 795,20552
#define F_PG_LOCK_STATUS 796,20581
#define F_DATE_FINITE 797,20611
#define F_TEXTOCTETLEN 798,20638
#define F_BPCHAROCTETLEN 799,20666
#define F_TIME_LARGER 800,20696
#define F_TIME_SMALLER 801,20723
#define F_TIMETZ_LARGER 802,20751
#define F_TIMETZ_SMALLER 803,20780
#define F_TIME_PART 804,20810
#define F_PG_GET_CONSTRAINTDEF 805,20835
#define F_TIMESTAMPTZ_TIMETZ 806,20871
#define F_TIMESTAMP_FINITE 807,20905
#define F_INTERVAL_FINITE 808,20937
#define F_PG_STAT_GET_BACKEND_START 809,20968
#define F_PG_STAT_GET_BACKEND_CLIENT_ADDR 810,21009
#define F_PG_STAT_GET_BACKEND_CLIENT_PORT 811,21056
#define F_CURRENT_SCHEMA 812,21103
#define F_CURRENT_SCHEMAS 813,21133
#define F_TEXTOVERLAY 814,21164
#define F_TEXTOVERLAY_NO_LEN 815,21191
#define F_LINE_PARALLEL 816,21225
#define F_LINE_PERP 817,21254
#define F_LINE_VERTICAL 818,21279
#define F_LINE_HORIZONTAL 819,21308
#define F_CIRCLE_CENTER 820,21339
#define F_INTERVAL_TIME 821,21368
#define F_POINTS_BOX 822,21397
#define F_BOX_ADD 823,21423
#define F_BOX_SUB 824,21446
#define F_BOX_MUL 825,21469
#define F_BOX_DIV 826,21492
#define F_CIDR_OUT 827,21515
#define F_POLY_CONTAIN_PT 828,21539
#define F_PT_CONTAINED_POLY 829,21570
#define F_PATH_ISCLOSED 830,21603
#define F_PATH_ISOPEN 831,21632
#define F_PATH_NPOINTS 832,21659
#define F_PATH_CLOSE 833,21687
#define F_PATH_OPEN 834,21713
#define F_PATH_ADD 835,21738
#define F_PATH_ADD_PT 836,21762
#define F_PATH_SUB_PT 837,21789
#define F_PATH_MUL_PT 838,21816
#define F_PATH_DIV_PT 839,21843
#define F_CONSTRUCT_POINT 840,21870
#define F_POINT_ADD 841,21901
#define F_POINT_SUB 842,21926
#define F_POINT_MUL 843,21951
#define F_POINT_DIV 844,21976
#define F_POLY_NPOINTS 845,22001
#define F_POLY_BOX 846,22029
#define F_POLY_PATH 847,22053
#define F_BOX_POLY 848,22078
#define F_PATH_POLY 849,22102
#define F_CIRCLE_IN 850,22127
#define F_CIRCLE_OUT 851,22152
#define F_CIRCLE_SAME 852,22178
#define F_CIRCLE_CONTAIN 853,22205
#define F_CIRCLE_LEFT 854,22235
#define F_CIRCLE_OVERLEFT 855,22262
#define F_CIRCLE_OVERRIGHT 856,22293
#define F_CIRCLE_RIGHT 857,22325
#define F_CIRCLE_CONTAINED 858,22353
#define F_CIRCLE_OVERLAP 859,22385
#define F_CIRCLE_BELOW 860,22415
#define F_CIRCLE_ABOVE 861,22443
#define F_CIRCLE_EQ 862,22471
#define F_CIRCLE_NE 863,22496
#define F_CIRCLE_LT 864,22521
#define F_CIRCLE_GT 865,22546
#define F_CIRCLE_LE 866,22571
#define F_CIRCLE_GE 867,22596
#define F_CIRCLE_AREA 868,22621
#define F_CIRCLE_DIAMETER 869,22648
#define F_CIRCLE_RADIUS 870,22679
#define F_CIRCLE_DISTANCE 871,22708
#define F_CR_CIRCLE 872,22739
#define F_POLY_CIRCLE 873,22764
#define F_CIRCLE_POLY 874,22791
#define F_DIST_PC 875,22818
#define F_CIRCLE_CONTAIN_PT 876,22841
#define F_PT_CONTAINED_CIRCLE 877,22874
#define F_BOX_CIRCLE 878,22909
#define F_CIRCLE_BOX 879,22935
#define F_LSEG_NE 880,22961
#define F_LSEG_LT 881,22984
#define F_LSEG_LE 882,23007
#define F_LSEG_GT 883,23030
#define F_LSEG_GE 884,23053
#define F_LSEG_LENGTH 885,23076
#define F_CLOSE_LS 886,23103
#define F_CLOSE_LSEG 887,23127
#define F_LINE_IN 888,23153
#define F_LINE_OUT 889,23176
#define F_LINE_EQ 890,23200
#define F_LINE_CONSTRUCT_PP 891,23223
#define F_LINE_INTERPT 892,23256
#define F_LINE_INTERSECT 893,23284
#define F_BIT_IN 894,23314
#define F_BIT_OUT 895,23336
#define F_PG_GET_RULEDEF 896,23359
#define F_NEXTVAL_OID 897,23389
#define F_CURRVAL_OID 898,23416
#define F_SETVAL_OID 899,23443
#define F_VARBIT_IN 900,23469
#define F_VARBIT_OUT 901,23494
#define F_BITEQ 902,23520
#define F_BITNE 903,23541
#define F_BITGE 904,23562
#define F_BITGT 905,23583
#define F_BITLE 906,23604
#define F_BITLT 907,23625
#define F_BITCMP 908,23646
#define F_PG_ENCODING_TO_CHAR 909,23668
#define F_DRANDOM 910,23703
#define F_SETSEED 911,23726
#define F_DASIN 912,23749
#define F_DACOS 913,23770
#define F_DATAN 914,23791
#define F_DATAN2 915,23812
#define F_DSIN 916,23834
#define F_DCOS 917,23854
#define F_DTAN 918,23874
#define F_DCOT 919,23894
#define F_DEGREES 920,23914
#define F_RADIANS 921,23937
#define F_DPI 922,23960
#define F_INTERVAL_MUL 923,23979
#define F_PG_TYPEOF 924,24007
#define F_ASCII 925,24032
#define F_CHR 926,24053
#define F_REPEAT 927,24072
#define F_SIMILAR_ESCAPE 928,24094
#define F_MUL_D_INTERVAL 929,24124
#define F_TEXTICLIKE 930,24154
#define F_TEXTICNLIKE 931,24180
#define F_NAMEICLIKE 932,24207
#define F_NAMEICNLIKE 933,24233
#define F_LIKE_ESCAPE 934,24260
#define F_OIDGT 935,24287
#define F_OIDGE 936,24308
#define F_PG_GET_VIEWDEF_NAME 937,24329
#define F_PG_GET_VIEWDEF 938,24364
#define F_PG_GET_USERBYID 939,24394
#define F_PG_GET_INDEXDEF 940,24425
#define F_RI_FKEY_CHECK_INS 941,24456
#define F_RI_FKEY_CHECK_UPD 942,24489
#define F_RI_FKEY_CASCADE_DEL 943,24522
#define F_RI_FKEY_CASCADE_UPD 944,24557
#define F_RI_FKEY_RESTRICT_DEL 945,24592
#define F_RI_FKEY_RESTRICT_UPD 946,24628
#define F_RI_FKEY_SETNULL_DEL 947,24664
#define F_RI_FKEY_SETNULL_UPD 948,24699
#define F_RI_FKEY_SETDEFAULT_DEL 949,24734
#define F_RI_FKEY_SETDEFAULT_UPD 950,24772
#define F_RI_FKEY_NOACTION_DEL 951,24810
#define F_RI_FKEY_NOACTION_UPD 952,24846
#define F_PG_GET_TRIGGERDEF 953,24882
#define F_PG_GET_SERIAL_SEQUENCE 954,24915
#define F_BIT_AND 955,24953
#define F_BIT_OR 956,24976
#define F_BITXOR 957,24998
#define F_BITNOT 958,25020
#define F_BITSHIFTLEFT 959,25042
#define F_BITSHIFTRIGHT 960,25070
#define F_BITCAT 961,25099
#define F_BITSUBSTR 962,25121
#define F_BITLENGTH 963,25146
#define F_BITOCTETLENGTH 964,25171
#define F_BITFROMINT4 965,25201
#define F_BITTOINT4 966,25228
#define F_BIT 967,25253
#define F_PG_GET_KEYWORDS 968,25272
#define F_VARBIT 969,25303
#define F_TIME_HASH 970,25325
#define F_ACLEXPLODE 971,25350
#define F_TIME_MI_TIME 972,25376
#define F_BOOLLE 973,25404
#define F_BOOLGE 974,25426
#define F_BTBOOLCMP 975,25448
#define F_TIMETZ_HASH 976,25473
#define F_INTERVAL_HASH 977,25500
#define F_BITPOSITION 978,25529
#define F_BITSUBSTR_NO_LEN 979,25556
#define F_NUMERIC_IN 980,25588
#define F_NUMERIC_OUT 981,25614
#define F_NUMERIC 982,25641
#define F_NUMERIC_ABS 983,25664
#define F_NUMERIC_SIGN 984,25691
#define F_NUMERIC_ROUND 985,25719
#define F_NUMERIC_TRUNC 986,25748
#define F_NUMERIC_CEIL 987,25777
#define F_NUMERIC_FLOOR 988,25805
#define F_LENGTH_IN_ENCODING 989,25834
#define F_PG_CONVERT_FROM 990,25868
#define F_INET_TO_CIDR 991,25899
#define F_PG_GET_EXPR 992,25927
#define F_PG_CONVERT_TO 993,25954
#define F_NUMERIC_EQ 994,25983
#define F_NUMERIC_NE 995,26009
#define F_NUMERIC_GT 996,26035
#define F_NUMERIC_GE 997,26061
#define F_NUMERIC_LT 998,26087
#define F_NUMERIC_LE 999,26113
#define F_NUMERIC_ADD 1000,26139
#define F_NUMERIC_SUB 1001,26166
#define F_NUMERIC_MUL 1002,26193
#define F_NUMERIC_DIV 1003,26220
#define F_NUMERIC_MOD 1004,26247
#define F_NUMERIC_SQRT 1005,26274
#define F_NUMERIC_EXP 1006,26302
#define F_NUMERIC_LN 1007,26329
#define F_NUMERIC_LOG 1008,26355
#define F_NUMERIC_POWER 1009,26382
#define F_INT4_NUMERIC 1010,26411
#define F_FLOAT4_NUMERIC 1011,26439
#define F_FLOAT8_NUMERIC 1012,26469
#define F_NUMERIC_INT4 1013,26499
#define F_NUMERIC_FLOAT4 1014,26527
#define F_NUMERIC_FLOAT8 1015,26557
#define F_TIME_PL_INTERVAL 1016,26587
#define F_TIME_MI_INTERVAL 1017,26619
#define F_TIMETZ_PL_INTERVAL 1018,26651
#define F_TIMETZ_MI_INTERVAL 1019,26685
#define F_NUMERIC_INC 1020,26719
#define F_SETVAL3_OID 1021,26746
#define F_NUMERIC_SMALLER 1022,26773
#define F_NUMERIC_LARGER 1023,26804
#define F_INTERVAL_TO_CHAR 1024,26834
#define F_NUMERIC_CMP 1025,26866
#define F_TIMESTAMPTZ_TO_CHAR 1026,26893
#define F_NUMERIC_UMINUS 1027,26928
#define F_NUMERIC_TO_CHAR 1028,26958
#define F_INT4_TO_CHAR 1029,26989
#define F_INT8_TO_CHAR 1030,27017
#define F_FLOAT4_TO_CHAR 1031,27045
#define F_FLOAT8_TO_CHAR 1032,27075
#define F_NUMERIC_TO_NUMBER 1033,27105
#define F_TO_TIMESTAMP 1034,27138
#define F_NUMERIC_INT8 1035,27166
#define F_TO_DATE 1036,27194
#define F_INT8_NUMERIC 1037,27217
#define F_INT2_NUMERIC 1038,27245
#define F_NUMERIC_INT2 1039,27273
#define F_OIDIN 1040,27301
#define F_OIDOUT 1041,27322
#define F_PG_CONVERT 1042,27344
#define F_ICLIKESEL 1043,27370
#define F_ICNLIKESEL 1044,27395
#define F_ICLIKEJOINSEL 1045,27421
#define F_ICNLIKEJOINSEL 1046,27450
#define F_REGEXEQSEL 1047,27480
#define F_LIKESEL 1048,27506
#define F_ICREGEXEQSEL 1049,27529
#define F_REGEXNESEL 1050,27557
#define F_NLIKESEL 1051,27583
#define F_ICREGEXNESEL 1052,27607
#define F_REGEXEQJOINSEL 1053,27635
#define F_LIKEJOINSEL 1054,27665
#define F_ICREGEXEQJOINSEL 1055,27692
#define F_REGEXNEJOINSEL 1056,27724
#define F_NLIKEJOINSEL 1057,27754
#define F_ICREGEXNEJOINSEL 1058,27782
#define F_FLOAT8_AVG 1059,27814
#define F_FLOAT8_VAR_SAMP 1060,27840
#define F_FLOAT8_STDDEV_SAMP 1061,27871
#define F_NUMERIC_ACCUM 1062,27905
#define F_INT2_ACCUM 1063,27934
#define F_INT4_ACCUM 1064,27960
#define F_INT8_ACCUM 1065,27986
#define F_NUMERIC_AVG 1066,28012
#define F_NUMERIC_VAR_SAMP 1067,28039
#define F_NUMERIC_STDDEV_SAMP 1068,28071
#define F_INT2_SUM 1069,28106
#define F_INT4_SUM 1070,28130
#define F_INT8_SUM 1071,28154
#define F_INTERVAL_ACCUM 1072,28178
#define F_INTERVAL_AVG 1073,28208
#define F_TO_ASCII_DEFAULT 1074,28236
#define F_TO_ASCII_ENC 1075,28268
#define F_TO_ASCII_ENCNAME 1076,28296
#define F_INT28EQ 1077,28328
#define F_INT28NE 1078,28351
#define F_INT28LT 1079,28374
#define F_INT28GT 1080,28397
#define F_INT28LE 1081,28420
#define F_INT28GE 1082,28443
#define F_INT82EQ 1083,28466
#define F_INT82NE 1084,28489
#define F_INT82LT 1085,28512
#define F_INT82GT 1086,28535
#define F_INT82LE 1087,28558
#define F_INT82GE 1088,28581
#define F_INT2AND 1089,28604
#define F_INT2OR 1090,28627
#define F_INT2XOR 1091,28649
#define F_INT2NOT 1092,28672
#define F_INT2SHL 1093,28695
#define F_INT2SHR 1094,28718
#define F_INT4AND 1095,28741
#define F_INT4OR 1096,28764
#define F_INT4XOR 1097,28786
#define F_INT4NOT 1098,28809
#define F_INT4SHL 1099,28832
#define F_INT4SHR 1100,28855
#define F_INT8AND 1101,28878
#define F_INT8OR 1102,28901
#define F_INT8XOR 1103,28923
#define F_INT8NOT 1104,28946
#define F_INT8SHL 1105,28969
#define F_INT8SHR 1106,28992
#define F_INT8UP 1107,29015
#define F_INT2UP 1108,29037
#define F_INT4UP 1109,29059
#define F_FLOAT4UP 1110,29081
#define F_FLOAT8UP 1111,29105
#define F_NUMERIC_UPLUS 1112,29129
#define F_HAS_TABLE_PRIVILEGE_NAME_NAME 1113,29158
#define F_HAS_TABLE_PRIVILEGE_NAME_ID 1114,29203
#define F_HAS_TABLE_PRIVILEGE_ID_NAME 1115,29246
#define F_HAS_TABLE_PRIVILEGE_ID_ID 1116,29289
#define F_HAS_TABLE_PRIVILEGE_NAME 1117,29330
#define F_HAS_TABLE_PRIVILEGE_ID 1118,29370
#define F_PG_STAT_GET_NUMSCANS 1119,29408
#define F_PG_STAT_GET_TUPLES_RETURNED 1120,29444
#define F_PG_STAT_GET_TUPLES_FETCHED 1121,29487
#define F_PG_STAT_GET_TUPLES_INSERTED 1122,29529
#define F_PG_STAT_GET_TUPLES_UPDATED 1123,29572
#define F_PG_STAT_GET_TUPLES_DELETED 1124,29614
#define F_PG_STAT_GET_BLOCKS_FETCHED 1125,29656
#define F_PG_STAT_GET_BLOCKS_HIT 1126,29698
#define F_PG_STAT_GET_BACKEND_IDSET 1127,29736
#define F_PG_STAT_GET_BACKEND_PID 1128,29777
#define F_PG_STAT_GET_BACKEND_DBID 1129,29816
#define F_PG_STAT_GET_BACKEND_USERID 1130,29856
#define F_PG_STAT_GET_BACKEND_ACTIVITY 1131,29898
#define F_PG_STAT_GET_DB_NUMBACKENDS 1132,29942
#define F_PG_STAT_GET_DB_XACT_COMMIT 1133,29984
#define F_PG_STAT_GET_DB_XACT_ROLLBACK 1134,30026
#define F_PG_STAT_GET_DB_BLOCKS_FETCHED 1135,30070
#define F_PG_STAT_GET_DB_BLOCKS_HIT 1136,30115
#define F_BINARY_ENCODE 1137,30156
#define F_BINARY_DECODE 1138,30185
#define F_BYTEAEQ 1139,30214
#define F_BYTEALT 1140,30237
#define F_BYTEALE 1141,30260
#define F_BYTEAGT 1142,30283
#define F_BYTEAGE 1143,30306
#define F_BYTEANE 1144,30329
#define F_BYTEACMP 1145,30352
#define F_TIMESTAMP_SCALE 1146,30376
#define F_INT2_AVG_ACCUM 1147,30407
#define F_INT4_AVG_ACCUM 1148,30437
#define F_INT8_AVG 1149,30467
#define F_OIDLARGER 1150,30491
#define F_OIDSMALLER 1151,30516
#define F_TIMESTAMPTZ_SCALE 1152,30542
#define F_TIME_SCALE 1153,30575
#define F_TIMETZ_SCALE 1154,30601
#define F_PG_STAT_GET_TUPLES_HOT_UPDATED 1155,30629
#define F_NUMERIC_DIV_TRUNC 1156,30675
#define F_SIMILAR_TO_ESCAPE_2 1157,30708
#define F_SIMILAR_TO_ESCAPE_1 1158,30743
#define F_BYTEALIKE 1159,30778
#define F_BYTEANLIKE 1160,30803
#define F_LIKE_ESCAPE_BYTEA 1161,30829
#define F_BYTEACAT 1162,30862
#define F_BYTEA_SUBSTR 1163,30886
#define F_BYTEA_SUBSTR_NO_LEN 1164,30914
#define F_BYTEAPOS 1165,30949
#define F_BYTEATRIM 1166,30973
#define F_TIMESTAMPTZ_TIME 1167,30998
#define F_TIMESTAMP_TRUNC 1168,31030
#define F_TIMESTAMP_PART 1169,31061
#define F_PG_STAT_GET_ACTIVITY 1170,31091
#define F_JSONB_PATH_QUERY_FIRST_TZ 1171,31127
#define F_DATE_TIMESTAMP 1172,31168
#define F_PG_BACKEND_PID 1173,31198
#define F_TIMESTAMPTZ_TIMESTAMP 1174,31228
#define F_TIMESTAMP_TIMESTAMPTZ 1175,31265
#define F_TIMESTAMP_DATE 1176,31302
#define F_JSONB_PATH_MATCH_TZ 1177,31332
#define F_TIMESTAMP_PL_INTERVAL 1178,31367
#define F_TIMESTAMP_MI_INTERVAL 1179,31404
#define F_PG_CONF_LOAD_TIME 1180,31441
#define F_TIMETZ_ZONE 1181,31474
#define F_TIMETZ_IZONE 1182,31501
#define F_TIMESTAMP_HASH 1183,31529
#define F_TIMETZ_TIME 1184,31559
#define F_TIME_TIMETZ 1185,31586
#define F_TIMESTAMP_TO_CHAR 1186,31613
#define F_AGGREGATE_DUMMY 1187,31646
#define F_TIMESTAMP_AGE 1188,31677
#define F_TIMESTAMP_ZONE 1189,31706
#define F_TIMESTAMP_IZONE 1190,31736
#define F_DATE_PL_INTERVAL 1191,31767
#define F_DATE_MI_INTERVAL 1192,31799
#define F_TEXTREGEXSUBSTR 1193,31831
#define F_BITFROMINT8 1194,31862
#define F_BITTOINT8 1195,31889
#define F_SHOW_CONFIG_BY_NAME 1196,31914
#define F_SET_CONFIG_BY_NAME 1197,31949
#define F_PG_TABLE_IS_VISIBLE 1198,31983
#define F_PG_TYPE_IS_VISIBLE 1199,32018
#define F_PG_FUNCTION_IS_VISIBLE 1200,32052
#define F_PG_OPERATOR_IS_VISIBLE 1201,32090
#define F_PG_OPCLASS_IS_VISIBLE 1202,32128
#define F_SHOW_ALL_SETTINGS 1203,32165
#define F_REPLACE_TEXT 1204,32198
#define F_SPLIT_TEXT 1205,32226
#define F_TO_HEX32 1206,32252
#define F_TO_HEX64 1207,32276
#define F_ARRAY_LOWER 1208,32300
#define F_ARRAY_UPPER 1209,32327
#define F_PG_CONVERSION_IS_VISIBLE 1210,32354
#define F_PG_STAT_GET_BACKEND_ACTIVITY_START 1211,32394
#define F_PG_TERMINATE_BACKEND 1212,32444
#define F_PG_GET_FUNCTIONDEF 1213,32480
#define F_TEXT_PATTERN_LT 1214,32514
#define F_TEXT_PATTERN_LE 1215,32545
#define F_PG_GET_FUNCTION_ARGUMENTS 1216,32576
#define F_TEXT_PATTERN_GE 1217,32617
#define F_TEXT_PATTERN_GT 1218,32648
#define F_PG_GET_FUNCTION_RESULT 1219,32679
#define F_BTTEXT_PATTERN_CMP 1220,32717
#define F_PG_DATABASE_SIZE_NAME 1221,32751
#define F_WIDTH_BUCKET_NUMERIC 1222,32788
#define F_PG_CANCEL_BACKEND 1223,32824
#define F_PG_START_BACKUP 1224,32857
#define F_PG_STOP_BACKUP 1225,32888
#define F_BPCHAR_PATTERN_LT 1226,32918
#define F_BPCHAR_PATTERN_LE 1227,32951
#define F_ARRAY_LENGTH 1228,32984
#define F_BPCHAR_PATTERN_GE 1229,33012
#define F_BPCHAR_PATTERN_GT 1230,33045
#define F_GIST_POINT_CONSISTENT 1231,33078
#define F_BTBPCHAR_PATTERN_CMP 1232,33115
#define F_HAS_SEQUENCE_PRIVILEGE_NAME_NAME 1233,33151
#define F_HAS_SEQUENCE_PRIVILEGE_NAME_ID 1234,33199
#define F_HAS_SEQUENCE_PRIVILEGE_ID_NAME 1235,33245
#define F_HAS_SEQUENCE_PRIVILEGE_ID_ID 1236,33291
#define F_HAS_SEQUENCE_PRIVILEGE_NAME 1237,33335
#define F_HAS_SEQUENCE_PRIVILEGE_ID 1238,33378
#define F_BTINT48CMP 1239,33419
#define F_BTINT84CMP 1240,33445
#define F_BTINT24CMP 1241,33471
#define F_BTINT42CMP 1242,33497
#define F_BTINT28CMP 1243,33523
#define F_BTINT82CMP 1244,33549
#define F_BTFLOAT48CMP 1245,33575
#define F_BTFLOAT84CMP 1246,33603
#define F_INET_CLIENT_ADDR 1247,33631
#define F_INET_CLIENT_PORT 1248,33663
#define F_INET_SERVER_ADDR 1249,33695
#define F_INET_SERVER_PORT 1250,33727
#define F_REGPROCEDUREIN 1251,33759
#define F_REGPROCEDUREOUT 1252,33789
#define F_REGOPERIN 1253,33820
#define F_REGOPEROUT 1254,33845
#define F_REGOPERATORIN 1255,33871
#define F_REGOPERATOROUT 1256,33900
#define F_REGCLASSIN 1257,33930
#define F_REGCLASSOUT 1258,33956
#define F_REGTYPEIN 1259,33983
#define F_REGTYPEOUT 1260,34008
#define F_PG_STAT_CLEAR_SNAPSHOT 1261,34034
#define F_PG_GET_FUNCTION_IDENTITY_ARGUMENTS 1262,34072
#define F_HASHTID 1263,34122
#define F_HASHTIDEXTENDED 1264,34145
#define F_FMGR_INTERNAL_VALIDATOR 1265,34176
#define F_FMGR_C_VALIDATOR 1266,34215
#define F_FMGR_SQL_VALIDATOR 1267,34247
#define F_HAS_DATABASE_PRIVILEGE_NAME_NAME 1268,34281
#define F_HAS_DATABASE_PRIVILEGE_NAME_ID 1269,34329
#define F_HAS_DATABASE_PRIVILEGE_ID_NAME 1270,34375
#define F_HAS_DATABASE_PRIVILEGE_ID_ID 1271,34421
#define F_HAS_DATABASE_PRIVILEGE_NAME 1272,34465
#define F_HAS_DATABASE_PRIVILEGE_ID 1273,34508
#define F_HAS_FUNCTION_PRIVILEGE_NAME_NAME 1274,34549
#define F_HAS_FUNCTION_PRIVILEGE_NAME_ID 1275,34597
#define F_HAS_FUNCTION_PRIVILEGE_ID_NAME 1276,34643
#define F_HAS_FUNCTION_PRIVILEGE_ID_ID 1277,34689
#define F_HAS_FUNCTION_PRIVILEGE_NAME 1278,34733
#define F_HAS_FUNCTION_PRIVILEGE_ID 1279,34776
#define F_HAS_LANGUAGE_PRIVILEGE_NAME_NAME 1280,34817
#define F_HAS_LANGUAGE_PRIVILEGE_NAME_ID 1281,34865
#define F_HAS_LANGUAGE_PRIVILEGE_ID_NAME 1282,34911
#define F_HAS_LANGUAGE_PRIVILEGE_ID_ID 1283,34957
#define F_HAS_LANGUAGE_PRIVILEGE_NAME 1284,35001
#define F_HAS_LANGUAGE_PRIVILEGE_ID 1285,35044
#define F_HAS_SCHEMA_PRIVILEGE_NAME_NAME 1286,35085
#define F_HAS_SCHEMA_PRIVILEGE_NAME_ID 1287,35131
#define F_HAS_SCHEMA_PRIVILEGE_ID_NAME 1288,35175
#define F_HAS_SCHEMA_PRIVILEGE_ID_ID 1289,35219
#define F_HAS_SCHEMA_PRIVILEGE_NAME 1290,35261
#define F_HAS_SCHEMA_PRIVILEGE_ID 1291,35302
#define F_PG_STAT_RESET 1292,35341
#define F_TEXTREGEXREPLACE_NOOPT 1293,35370
#define F_TEXTREGEXREPLACE 1294,35408
#define F_PG_TOTAL_RELATION_SIZE 1295,35440
#define F_PG_SIZE_PRETTY 1296,35478
#define F_PG_OPTIONS_TO_TABLE 1297,35508
#define F_RECORD_IN 1298,35543
#define F_RECORD_OUT 1299,35568
#define F_CSTRING_IN 1300,35594
#define F_CSTRING_OUT 1301,35620
#define F_ANY_IN 1302,35647
#define F_ANY_OUT 1303,35669
#define F_ANYARRAY_IN 1304,35692
#define F_ANYARRAY_OUT 1305,35719
#define F_VOID_IN 1306,35747
#define F_VOID_OUT 1307,35770
#define F_TRIGGER_IN 1308,35794
#define F_TRIGGER_OUT 1309,35820
#define F_LANGUAGE_HANDLER_IN 1310,35847
#define F_LANGUAGE_HANDLER_OUT 1311,35882
#define F_INTERNAL_IN 1312,35918
#define F_INTERNAL_OUT 1313,35945
#define F_PG_STAT_GET_SLRU 1314,35973
#define F_PG_STAT_RESET_SLRU 1315,36005
#define F_DCEIL 1316,36039
#define F_DFLOOR 1317,36060
#define F_DSIGN 1318,36082
#define F_MD5_TEXT 1319,36103
#define F_ANYELEMENT_IN 1320,36127
#define F_ANYELEMENT_OUT 1321,36156
#define F_POSTGRESQL_FDW_VALIDATOR 1322,36186
#define F_PG_ENCODING_MAX_LENGTH_SQL 1323,36226
#define F_MD5_BYTEA 1324,36268
#define F_PG_TABLESPACE_SIZE_OID 1325,36293
#define F_PG_TABLESPACE_SIZE_NAME 1326,36331
#define F_PG_DATABASE_SIZE_OID 1327,36370
#define F_ARRAY_UNNEST 1328,36406
#define F_PG_RELATION_SIZE 1329,36434
#define F_ARRAY_AGG_TRANSFN 1330,36466
#define F_ARRAY_AGG_FINALFN 1331,36499
#define F_DATE_LT_TIMESTAMP 1332,36532
#define F_DATE_LE_TIMESTAMP 1333,36565
#define F_DATE_EQ_TIMESTAMP 1334,36598
#define F_DATE_GT_TIMESTAMP 1335,36631
#define F_DATE_GE_TIMESTAMP 1336,36664
#define F_DATE_NE_TIMESTAMP 1337,36697
#define F_DATE_CMP_TIMESTAMP 1338,36730
#define F_DATE_LT_TIMESTAMPTZ 1339,36764
#define F_DATE_LE_TIMESTAMPTZ 1340,36799
#define F_DATE_EQ_TIMESTAMPTZ 1341,36834
#define F_DATE_GT_TIMESTAMPTZ 1342,36869
#define F_DATE_GE_TIMESTAMPTZ 1343,36904
#define F_DATE_NE_TIMESTAMPTZ 1344,36939
#define F_DATE_CMP_TIMESTAMPTZ 1345,36974
#define F_TIMESTAMP_LT_DATE 1346,37010
#define F_TIMESTAMP_LE_DATE 1347,37043
#define F_TIMESTAMP_EQ_DATE 1348,37076
#define F_TIMESTAMP_GT_DATE 1349,37109
#define F_TIMESTAMP_GE_DATE 1350,37142
#define F_TIMESTAMP_NE_DATE 1351,37175
#define F_TIMESTAMP_CMP_DATE 1352,37208
#define F_TIMESTAMPTZ_LT_DATE 1353,37242
#define F_TIMESTAMPTZ_LE_DATE 1354,37277
#define F_TIMESTAMPTZ_EQ_DATE 1355,37312
#define F_TIMESTAMPTZ_GT_DATE 1356,37347
#define F_TIMESTAMPTZ_GE_DATE 1357,37382
#define F_TIMESTAMPTZ_NE_DATE 1358,37417
#define F_TIMESTAMPTZ_CMP_DATE 1359,37452
#define F_HAS_TABLESPACE_PRIVILEGE_NAME_NAME 1360,37488
#define F_HAS_TABLESPACE_PRIVILEGE_NAME_ID 1361,37538
#define F_HAS_TABLESPACE_PRIVILEGE_ID_NAME 1362,37586
#define F_HAS_TABLESPACE_PRIVILEGE_ID_ID 1363,37634
#define F_HAS_TABLESPACE_PRIVILEGE_NAME 1364,37680
#define F_HAS_TABLESPACE_PRIVILEGE_ID 1365,37725
#define F_SHELL_IN 1366,37768
#define F_SHELL_OUT 1367,37792
#define F_ARRAY_RECV 1368,37817
#define F_ARRAY_SEND 1369,37843
#define F_RECORD_RECV 1370,37869
#define F_RECORD_SEND 1371,37896
#define F_INT2RECV 1372,37923
#define F_INT2SEND 1373,37947
#define F_INT4RECV 1374,37971
#define F_INT4SEND 1375,37995
#define F_INT8RECV 1376,38019
#define F_INT8SEND 1377,38043
#define F_INT2VECTORRECV 1378,38067
#define F_INT2VECTORSEND 1379,38097
#define F_BYTEARECV 1380,38127
#define F_BYTEASEND 1381,38152
#define F_TEXTRECV 1382,38177
#define F_TEXTSEND 1383,38201
#define F_UNKNOWNRECV 1384,38225
#define F_UNKNOWNSEND 1385,38252
#define F_OIDRECV 1386,38279
#define F_OIDSEND 1387,38302
#define F_OIDVECTORRECV 1388,38325
#define F_OIDVECTORSEND 1389,38354
#define F_NAMERECV 1390,38383
#define F_NAMESEND 1391,38407
#define F_FLOAT4RECV 1392,38431
#define F_FLOAT4SEND 1393,38457
#define F_FLOAT8RECV 1394,38483
#define F_FLOAT8SEND 1395,38509
#define F_POINT_RECV 1396,38535
#define F_POINT_SEND 1397,38561
#define F_BPCHARRECV 1398,38587
#define F_BPCHARSEND 1399,38613
#define F_VARCHARRECV 1400,38639
#define F_VARCHARSEND 1401,38666
#define F_CHARRECV 1402,38693
#define F_CHARSEND 1403,38717
#define F_BOOLRECV 1404,38741
#define F_BOOLSEND 1405,38765
#define F_TIDRECV 1406,38789
#define F_TIDSEND 1407,38812
#define F_XIDRECV 1408,38835
#define F_XIDSEND 1409,38858
#define F_CIDRECV 1410,38881
#define F_CIDSEND 1411,38904
#define F_REGPROCRECV 1412,38927
#define F_REGPROCSEND 1413,38954
#define F_REGPROCEDURERECV 1414,38981
#define F_REGPROCEDURESEND 1415,39013
#define F_REGOPERRECV 1416,39045
#define F_REGOPERSEND 1417,39072
#define F_REGOPERATORRECV 1418,39099
#define F_REGOPERATORSEND 1419,39130
#define F_REGCLASSRECV 1420,39161
#define F_REGCLASSSEND 1421,39189
#define F_REGTYPERECV 1422,39217
#define F_REGTYPESEND 1423,39244
#define F_BIT_RECV 1424,39271
#define F_BIT_SEND 1425,39295
#define F_VARBIT_RECV 1426,39319
#define F_VARBIT_SEND 1427,39346
#define F_NUMERIC_RECV 1428,39373
#define F_NUMERIC_SEND 1429,39401
#define F_DSINH 1430,39429
#define F_DCOSH 1431,39450
#define F_DTANH 1432,39471
#define F_DASINH 1433,39492
#define F_DACOSH 1434,39514
#define F_DATANH 1435,39536
#define F_DATE_RECV 1436,39558
#define F_DATE_SEND 1437,39583
#define F_TIME_RECV 1438,39608
#define F_TIME_SEND 1439,39633
#define F_TIMETZ_RECV 1440,39658
#define F_TIMETZ_SEND 1441,39685
#define F_TIMESTAMP_RECV 1442,39712
#define F_TIMESTAMP_SEND 1443,39742
#define F_TIMESTAMPTZ_RECV 1444,39772
#define F_TIMESTAMPTZ_SEND 1445,39804
#define F_INTERVAL_RECV 1446,39836
#define F_INTERVAL_SEND 1447,39865
#define F_LSEG_RECV 1448,39894
#define F_LSEG_SEND 1449,39919
#define F_PATH_RECV 1450,39944
#define F_PATH_SEND 1451,39969
#define F_BOX_RECV 1452,39994
#define F_BOX_SEND 1453,40018
#define F_POLY_RECV 1454,40042
#define F_POLY_SEND 1455,40067
#define F_LINE_RECV 1456,40092
#define F_LINE_SEND 1457,40117
#define F_CIRCLE_RECV 1458,40142
#define F_CIRCLE_SEND 1459,40169
#define F_CASH_RECV 1460,40196
#define F_CASH_SEND 1461,40221
#define F_MACADDR_RECV 1462,40246
#define F_MACADDR_SEND 1463,40274
#define F_INET_RECV 1464,40302
#define F_INET_SEND 1465,40327
#define F_CIDR_RECV 1466,40352
#define F_CIDR_SEND 1467,40377
#define F_CSTRING_RECV 1468,40402
#define F_CSTRING_SEND 1469,40430
#define F_ANYARRAY_RECV 1470,40458
#define F_ANYARRAY_SEND 1471,40487
#define F_PG_GET_RULEDEF_EXT 1472,40516
#define F_PG_GET_VIEWDEF_NAME_EXT 1473,40550
#define F_PG_GET_VIEWDEF_EXT 1474,40589
#define F_PG_GET_INDEXDEF_EXT 1475,40623
#define F_PG_GET_CONSTRAINTDEF_EXT 1476,40658
#define F_PG_GET_EXPR_EXT 1477,40698
#define F_PG_PREPARED_STATEMENT 1478,40729
#define F_PG_CURSOR 1479,40766
#define F_FLOAT8_VAR_POP 1480,40791
#define F_FLOAT8_STDDEV_POP 1481,40821
#define F_NUMERIC_VAR_POP 1482,40854
#define F_BOOLAND_STATEFUNC 1483,40885
#define F_BOOLOR_STATEFUNC 1484,40918
#define F_TIMESTAMP_LT_TIMESTAMPTZ 1485,40950
#define F_TIMESTAMP_LE_TIMESTAMPTZ 1486,40990
#define F_TIMESTAMP_EQ_TIMESTAMPTZ 1487,41030
#define F_TIMESTAMP_GT_TIMESTAMPTZ 1488,41070
#define F_TIMESTAMP_GE_TIMESTAMPTZ 1489,41110
#define F_TIMESTAMP_NE_TIMESTAMPTZ 1490,41150
#define F_TIMESTAMP_CMP_TIMESTAMPTZ 1491,41190
#define F_TIMESTAMPTZ_LT_TIMESTAMP 1492,41231
#define F_TIMESTAMPTZ_LE_TIMESTAMP 1493,41271
#define F_TIMESTAMPTZ_EQ_TIMESTAMP 1494,41311
#define F_TIMESTAMPTZ_GT_TIMESTAMP 1495,41351
#define F_TIMESTAMPTZ_GE_TIMESTAMP 1496,41391
#define F_TIMESTAMPTZ_NE_TIMESTAMP 1497,41431
#define F_TIMESTAMPTZ_CMP_TIMESTAMP 1498,41471
#define F_PG_TABLESPACE_DATABASES 1499,41512
#define F_INT4_BOOL 1500,41551
#define F_BOOL_INT4 1501,41576
#define F_LASTVAL 1502,41601
#define F_PG_POSTMASTER_START_TIME 1503,41624
#define F_PG_BLOCKING_PIDS 1504,41664
#define F_BOX_BELOW 1505,41696
#define F_BOX_OVERBELOW 1506,41721
#define F_BOX_OVERABOVE 1507,41750
#define F_BOX_ABOVE 1508,41779
#define F_POLY_BELOW 1509,41804
#define F_POLY_OVERBELOW 1510,41830
#define F_POLY_OVERABOVE 1511,41860
#define F_POLY_ABOVE 1512,41890
#define F_GIST_BOX_CONSISTENT 1513,41916
#define F_JSONB_FLOAT8 1514,41951
#define F_GIST_BOX_PENALTY 1515,41979
#define F_GIST_BOX_PICKSPLIT 1516,42011
#define F_GIST_BOX_UNION 1517,42045
#define F_GIST_BOX_SAME 1518,42075
#define F_GIST_POLY_CONSISTENT 1519,42104
#define F_GIST_POLY_COMPRESS 1520,42140
#define F_CIRCLE_OVERBELOW 1521,42174
#define F_CIRCLE_OVERABOVE 1522,42206
#define F_GIST_CIRCLE_CONSISTENT 1523,42238
#define F_GIST_CIRCLE_COMPRESS 1524,42276
#define F_NUMERIC_STDDEV_POP 1525,42312
#define F_DOMAIN_IN 1526,42346
#define F_DOMAIN_RECV 1527,42371
#define F_PG_TIMEZONE_ABBREVS 1528,42398
#define F_XMLEXISTS 1529,42433
#define F_PG_RELOAD_CONF 1530,42458
#define F_PG_ROTATE_LOGFILE_V2 1531,42488
#define F_PG_STAT_FILE_1ARG 1532,42524
#define F_PG_READ_FILE_OFF_LEN 1533,42557
#define F_PG_LS_DIR_1ARG 1534,42593
#define F_PG_SLEEP 1535,42623
#define F_INETNOT 1536,42647
#define F_INETAND 1537,42670
#define F_INETOR 1538,42693
#define F_INETPL 1539,42715
#define F_INETMI_INT8 1540,42737
#define F_INETMI 1541,42764
#define F_STATEMENT_TIMESTAMP 1542,42786
#define F_CLOCK_TIMESTAMP 1543,42821
#define F_GIN_CMP_PREFIX 1544,42852
#define F_PG_HAS_ROLE_NAME_NAME 1545,42882
#define F_PG_HAS_ROLE_NAME_ID 1546,42919
#define F_PG_HAS_ROLE_ID_NAME 1547,42954
#define F_PG_HAS_ROLE_ID_ID 1548,42989
#define F_PG_HAS_ROLE_NAME 1549,43022
#define F_PG_HAS_ROLE_ID 1550,43054
#define F_INTERVAL_JUSTIFY_INTERVAL 1551,43084
#define F_PG_GET_TRIGGERDEF_EXT 1552,43125
#define F_DASIND 1553,43162
#define F_DACOSD 1554,43184
#define F_DATAND 1555,43206
#define F_DATAN2D 1556,43228
#define F_DSIND 1557,43251
#define F_DCOSD 1558,43272
#define F_DTAND 1559,43293
#define F_DCOTD 1560,43314
#define F_PG_STOP_BACKUP_V2 1561,43335
#define F_NUMERIC_AVG_SERIALIZE 1562,43368
#define F_NUMERIC_AVG_DESERIALIZE 1563,43405
#define F_GINARRAYEXTRACT 1564,43444
#define F_GINARRAYCONSISTENT 1565,43475
#define F_INT8_AVG_ACCUM 1566,43509
#define F_ARRAYOVERLAP 1567,43539
#define F_ARRAYCONTAINS 1568,43567
#define F_ARRAYCONTAINED 1569,43596
#define F_PG_STAT_GET_DB_TUPLES_RETURNED 1570,43626
#define F_PG_STAT_GET_DB_TUPLES_FETCHED 1571,43672
#define F_PG_STAT_GET_DB_TUPLES_INSERTED 1572,43717
#define F_PG_STAT_GET_DB_TUPLES_UPDATED 1573,43763
#define F_PG_STAT_GET_DB_TUPLES_DELETED 1574,43808
#define F_REGEXP_MATCHES_NO_FLAGS 1575,43853
#define F_REGEXP_MATCHES 1576,43892
#define F_REGEXP_SPLIT_TO_TABLE_NO_FLAGS 1577,43922
#define F_REGEXP_SPLIT_TO_TABLE 1578,43968
#define F_REGEXP_SPLIT_TO_ARRAY_NO_FLAGS 1579,44005
#define F_REGEXP_SPLIT_TO_ARRAY 1580,44051
#define F_PG_STAT_GET_BGWRITER_TIMED_CHECKPOINTS 1581,44088
#define F_PG_STAT_GET_BGWRITER_REQUESTED_CHECKPOINTS 1582,44142
#define F_PG_STAT_GET_BGWRITER_BUF_WRITTEN_CHECKPOINTS 1583,44200
#define F_PG_STAT_GET_BGWRITER_BUF_WRITTEN_CLEAN 1584,44260
#define F_PG_STAT_GET_BGWRITER_MAXWRITTEN_CLEAN 1585,44314
#define F_GINQUERYARRAYEXTRACT 1586,44367
#define F_PG_STAT_GET_BUF_WRITTEN_BACKEND 1587,44403
#define F_ANYNONARRAY_IN 1588,44450
#define F_ANYNONARRAY_OUT 1589,44480
#define F_PG_STAT_GET_LAST_VACUUM_TIME 1590,44511
#define F_PG_STAT_GET_LAST_AUTOVACUUM_TIME 1591,44555
#define F_PG_STAT_GET_LAST_ANALYZE_TIME 1592,44603
#define F_PG_STAT_GET_LAST_AUTOANALYZE_TIME 1593,44648
#define F_INT8_AVG_COMBINE 1594,44697
#define F_INT8_AVG_SERIALIZE 1595,44729
#define F_INT8_AVG_DESERIALIZE 1596,44763
#define F_PG_STAT_GET_BACKEND_WAIT_EVENT_TYPE 1597,44799
#define F_TIDGT 1598,44850
#define F_TIDLT 1599,44871
#define F_TIDGE 1600,44892
#define F_TIDLE 1601,44913
#define F_BTTIDCMP 1602,44934
#define F_TIDLARGER 1603,44958
#define F_TIDSMALLER 1604,44983
#define F_INT8INC_ANY 1605,45009
#define F_INT8INC_FLOAT8_FLOAT8 1606,45036
#define F_FLOAT8_REGR_ACCUM 1607,45073
#define F_FLOAT8_REGR_SXX 1608,45106
#define F_FLOAT8_REGR_SYY 1609,45137
#define F_FLOAT8_REGR_SXY 1610,45168
#define F_FLOAT8_REGR_AVGX 1611,45199
#define F_FLOAT8_REGR_AVGY 1612,45231
#define F_FLOAT8_REGR_R2 1613,45263
#define F_FLOAT8_REGR_SLOPE 1614,45293
#define F_FLOAT8_REGR_INTERCEPT 1615,45326
#define F_FLOAT8_COVAR_POP 1616,45363
#define F_FLOAT8_COVAR_SAMP 1617,45395
#define F_FLOAT8_CORR 1618,45428
#define F_PG_STAT_GET_DB_BLK_READ_TIME 1619,45455
#define F_PG_STAT_GET_DB_BLK_WRITE_TIME 1620,45499
#define F_PG_SWITCH_WAL 1621,45544
#define F_PG_CURRENT_WAL_LSN 1622,45573
#define F_PG_WALFILE_NAME_OFFSET 1623,45607
#define F_PG_WALFILE_NAME 1624,45645
#define F_PG_CURRENT_WAL_INSERT_LSN 1625,45676
#define F_PG_STAT_GET_BACKEND_WAIT_EVENT 1626,45717
#define F_PG_MY_TEMP_SCHEMA 1627,45763
#define F_PG_IS_OTHER_TEMP_SCHEMA 1628,45796
#define F_PG_TIMEZONE_NAMES 1629,45835
#define F_PG_STAT_GET_BACKEND_XACT_START 1630,45868
#define F_NUMERIC_AVG_ACCUM 1631,45914
#define F_PG_STAT_GET_BUF_ALLOC 1632,45947
#define F_PG_STAT_GET_LIVE_TUPLES 1633,45984
#define F_PG_STAT_GET_DEAD_TUPLES 1634,46023
#define F_PG_ADVISORY_LOCK_INT8 1635,46062
#define F_PG_ADVISORY_LOCK_SHARED_INT8 1636,46099
#define F_PG_TRY_ADVISORY_LOCK_INT8 1637,46143
#define F_PG_TRY_ADVISORY_LOCK_SHARED_INT8 1638,46184
#define F_PG_ADVISORY_UNLOCK_INT8 1639,46232
#define F_PG_ADVISORY_UNLOCK_SHARED_INT8 1640,46271
#define F_PG_ADVISORY_LOCK_INT4 1641,46317
#define F_PG_ADVISORY_LOCK_SHARED_INT4 1642,46354
#define F_PG_TRY_ADVISORY_LOCK_INT4 1643,46398
#define F_PG_TRY_ADVISORY_LOCK_SHARED_INT4 1644,46439
#define F_PG_ADVISORY_UNLOCK_INT4 1645,46487
#define F_PG_ADVISORY_UNLOCK_SHARED_INT4 1646,46526
#define F_PG_ADVISORY_UNLOCK_ALL 1647,46572
#define F_XML_IN 1648,46610
#define F_XML_OUT 1649,46632
#define F_XMLCOMMENT 1650,46655
#define F_TEXTTOXML 1651,46681
#define F_XMLVALIDATE 1652,46706
#define F_XML_RECV 1653,46733
#define F_XML_SEND 1654,46757
#define F_XMLCONCAT2 1655,46781
#define F_VARBITTYPMODIN 1656,46807
#define F_INTERVALTYPMODIN 1657,46837
#define F_INTERVALTYPMODOUT 1658,46869
#define F_TIMESTAMPTYPMODIN 1659,46902
#define F_TIMESTAMPTYPMODOUT 1660,46935
#define F_TIMESTAMPTZTYPMODIN 1661,46969
#define F_TIMESTAMPTZTYPMODOUT 1662,47004
#define F_TIMETYPMODIN 1663,47040
#define F_TIMETYPMODOUT 1664,47068
#define F_TIMETZTYPMODIN 1665,47097
#define F_TIMETZTYPMODOUT 1666,47127
#define F_BPCHARTYPMODIN 1667,47158
#define F_BPCHARTYPMODOUT 1668,47188
#define F_VARCHARTYPMODIN 1669,47219
#define F_VARCHARTYPMODOUT 1670,47250
#define F_NUMERICTYPMODIN 1671,47282
#define F_NUMERICTYPMODOUT 1672,47313
#define F_BITTYPMODIN 1673,47345
#define F_BITTYPMODOUT 1674,47372
#define F_VARBITTYPMODOUT 1675,47400
#define F_XMLTOTEXT 1676,47431
#define F_TABLE_TO_XML 1677,47456
#define F_QUERY_TO_XML 1678,47484
#define F_CURSOR_TO_XML 1679,47512
#define F_TABLE_TO_XMLSCHEMA 1680,47541
#define F_QUERY_TO_XMLSCHEMA 1681,47575
#define F_CURSOR_TO_XMLSCHEMA 1682,47609
#define F_TABLE_TO_XML_AND_XMLSCHEMA 1683,47644
#define F_QUERY_TO_XML_AND_XMLSCHEMA 1684,47686
#define F_XPATH 1685,47728
#define F_SCHEMA_TO_XML 1686,47749
#define F_SCHEMA_TO_XMLSCHEMA 1687,47778
#define F_SCHEMA_TO_XML_AND_XMLSCHEMA 1688,47813
#define F_DATABASE_TO_XML 1689,47856
#define F_DATABASE_TO_XMLSCHEMA 1690,47887
#define F_DATABASE_TO_XML_AND_XMLSCHEMA 1691,47924
#define F_PG_SNAPSHOT_IN 1692,47969
#define F_PG_SNAPSHOT_OUT 1693,47999
#define F_PG_SNAPSHOT_RECV 1694,48030
#define F_PG_SNAPSHOT_SEND 1695,48062
#define F_PG_CURRENT_XACT_ID 1696,48094
#define F_PG_CURRENT_SNAPSHOT 1697,48128
#define F_PG_SNAPSHOT_XMIN 1698,48163
#define F_PG_SNAPSHOT_XMAX 1699,48195
#define F_PG_SNAPSHOT_XIP 1700,48227
#define F_PG_VISIBLE_IN_SNAPSHOT 1701,48258
#define F_UUID_IN 1702,48296
#define F_UUID_OUT 1703,48319
#define F_UUID_LT 1704,48343
#define F_UUID_LE 1705,48366
#define F_UUID_EQ 1706,48389
#define F_UUID_GE 1707,48412
#define F_UUID_GT 1708,48435
#define F_UUID_NE 1709,48458
#define F_UUID_CMP 1710,48481
#define F_UUID_RECV 1711,48505
#define F_UUID_SEND 1712,48530
#define F_UUID_HASH 1713,48555
#define F_BOOLTEXT 1714,48580
#define F_PG_STAT_GET_FUNCTION_CALLS 1715,48604
#define F_PG_STAT_GET_FUNCTION_TOTAL_TIME 1716,48646
#define F_PG_STAT_GET_FUNCTION_SELF_TIME 1717,48693
#define F_RECORD_EQ 1718,48739
#define F_RECORD_NE 1719,48764
#define F_RECORD_LT 1720,48789
#define F_RECORD_GT 1721,48814
#define F_RECORD_LE 1722,48839
#define F_RECORD_GE 1723,48864
#define F_BTRECORDCMP 1724,48889
#define F_PG_TABLE_SIZE 1725,48916
#define F_PG_INDEXES_SIZE 1726,48945
#define F_PG_RELATION_FILENODE 1727,48976
#define F_HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE_NAME_NAME 1728,49012
#define F_HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE_NAME_ID 1729,49072
#define F_HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE_ID_NAME 1730,49130
#define F_HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE_ID_ID 1731,49188
#define F_HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE_NAME 1732,49244
#define F_HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE_ID 1733,49299
#define F_HAS_SERVER_PRIVILEGE_NAME_NAME 1734,49352
#define F_HAS_SERVER_PRIVILEGE_NAME_ID 1735,49398
#define F_HAS_SERVER_PRIVILEGE_ID_NAME 1736,49442
#define F_HAS_SERVER_PRIVILEGE_ID_ID 1737,49486
#define F_HAS_SERVER_PRIVILEGE_NAME 1738,49528
#define F_HAS_SERVER_PRIVILEGE_ID 1739,49569
#define F_HAS_COLUMN_PRIVILEGE_NAME_NAME_NAME 1740,49608
#define F_HAS_COLUMN_PRIVILEGE_NAME_NAME_ATTNUM 1741,49659
#define F_HAS_COLUMN_PRIVILEGE_NAME_ID_NAME 1742,49712
#define F_HAS_COLUMN_PRIVILEGE_NAME_ID_ATTNUM 1743,49761
#define F_HAS_COLUMN_PRIVILEGE_ID_NAME_NAME 1744,49812
#define F_HAS_COLUMN_PRIVILEGE_ID_NAME_ATTNUM 1745,49861
#define F_HAS_COLUMN_PRIVILEGE_ID_ID_NAME 1746,49912
#define F_HAS_COLUMN_PRIVILEGE_ID_ID_ATTNUM 1747,49959
#define F_HAS_COLUMN_PRIVILEGE_NAME_NAME 1748,50008
#define F_HAS_COLUMN_PRIVILEGE_NAME_ATTNUM 1749,50054
#define F_HAS_COLUMN_PRIVILEGE_ID_NAME 1750,50102
#define F_HAS_COLUMN_PRIVILEGE_ID_ATTNUM 1751,50146
#define F_HAS_ANY_COLUMN_PRIVILEGE_NAME_NAME 1752,50192
#define F_HAS_ANY_COLUMN_PRIVILEGE_NAME_ID 1753,50242
#define F_HAS_ANY_COLUMN_PRIVILEGE_ID_NAME 1754,50290
#define F_HAS_ANY_COLUMN_PRIVILEGE_ID_ID 1755,50338
#define F_HAS_ANY_COLUMN_PRIVILEGE_NAME 1756,50384
#define F_HAS_ANY_COLUMN_PRIVILEGE_ID 1757,50429
#define F_BITOVERLAY 1758,50472
#define F_BITOVERLAY_NO_LEN 1759,50498
#define F_BITGETBIT 1760,50531
#define F_BITSETBIT 1761,50556
#define F_PG_RELATION_FILEPATH 1762,50581
#define F_PG_LISTENING_CHANNELS 1763,50617
#define F_PG_NOTIFY 1764,50654
#define F_PG_STAT_GET_XACT_NUMSCANS 1765,50679
#define F_PG_STAT_GET_XACT_TUPLES_RETURNED 1766,50720
#define F_PG_STAT_GET_XACT_TUPLES_FETCHED 1767,50768
#define F_PG_STAT_GET_XACT_TUPLES_INSERTED 1768,50815
#define F_PG_STAT_GET_XACT_TUPLES_UPDATED 1769,50863
#define F_PG_STAT_GET_XACT_TUPLES_DELETED 1770,50910
#define F_PG_STAT_GET_XACT_TUPLES_HOT_UPDATED 1771,50957
#define F_PG_STAT_GET_XACT_BLOCKS_FETCHED 1772,51008
#define F_PG_STAT_GET_XACT_BLOCKS_HIT 1773,51055
#define F_PG_STAT_GET_XACT_FUNCTION_CALLS 1774,51098
#define F_PG_STAT_GET_XACT_FUNCTION_TOTAL_TIME 1775,51145
#define F_PG_STAT_GET_XACT_FUNCTION_SELF_TIME 1776,51197
#define F_XPATH_EXISTS 1777,51248
#define F_XML_IS_WELL_FORMED 1778,51276
#define F_XML_IS_WELL_FORMED_DOCUMENT 1779,51310
#define F_XML_IS_WELL_FORMED_CONTENT 1780,51353
#define F_PG_STAT_GET_VACUUM_COUNT 1781,51395
#define F_PG_STAT_GET_AUTOVACUUM_COUNT 1782,51435
#define F_PG_STAT_GET_ANALYZE_COUNT 1783,51479
#define F_PG_STAT_GET_AUTOANALYZE_COUNT 1784,51520
#define F_TEXT_CONCAT 1785,51565
#define F_TEXT_CONCAT_WS 1786,51592
#define F_TEXT_LEFT 1787,51622
#define F_TEXT_RIGHT 1788,51647
#define F_TEXT_REVERSE 1789,51673
#define F_PG_STAT_GET_BUF_FSYNC_BACKEND 1790,51701
#define F_GIST_POINT_DISTANCE 1791,51746
#define F_PG_STAT_GET_DB_CONFLICT_TABLESPACE 1792,51781
#define F_PG_STAT_GET_DB_CONFLICT_LOCK 1793,51831
#define F_PG_STAT_GET_DB_CONFLICT_SNAPSHOT 1794,51875
#define F_PG_STAT_GET_DB_CONFLICT_BUFFERPIN 1795,51923
#define F_PG_STAT_GET_DB_CONFLICT_STARTUP_DEADLOCK 1796,51972
#define F_PG_STAT_GET_DB_CONFLICT_ALL 1797,52028
#define F_PG_WAL_REPLAY_PAUSE 1798,52071
#define F_PG_WAL_REPLAY_RESUME 1799,52106
#define F_PG_IS_WAL_REPLAY_PAUSED 1800,52142
#define F_PG_STAT_GET_DB_STAT_RESET_TIME 1801,52181
#define F_PG_STAT_GET_BGWRITER_STAT_RESET_TIME 1802,52227
#define F_GINARRAYEXTRACT_2ARGS 1803,52279
#define F_GIN_EXTRACT_TSVECTOR_2ARGS 1804,52316
#define F_PG_SEQUENCE_PARAMETERS 1805,52358
#define F_PG_AVAILABLE_EXTENSIONS 1806,52396
#define F_PG_AVAILABLE_EXTENSION_VERSIONS 1807,52435
#define F_PG_EXTENSION_UPDATE_PATHS 1808,52482
#define F_PG_EXTENSION_CONFIG_DUMP 1809,52523
#define F_GIN_EXTRACT_TSQUERY_5ARGS 1810,52563
#define F_GIN_TSQUERY_CONSISTENT_6ARGS 1811,52604
#define F_PG_ADVISORY_XACT_LOCK_INT8 1812,52648
#define F_PG_ADVISORY_XACT_LOCK_SHARED_INT8 1813,52690
#define F_PG_TRY_ADVISORY_XACT_LOCK_INT8 1814,52739
#define F_PG_TRY_ADVISORY_XACT_LOCK_SHARED_INT8 1815,52785
#define F_PG_ADVISORY_XACT_LOCK_INT4 1816,52838
#define F_PG_ADVISORY_XACT_LOCK_SHARED_INT4 1817,52880
#define F_PG_TRY_ADVISORY_XACT_LOCK_INT4 1818,52929
#define F_PG_TRY_ADVISORY_XACT_LOCK_SHARED_INT4 1819,52975
#define F_VARCHAR_SUPPORT 1820,53028
#define F_PG_CREATE_RESTORE_POINT 1821,53059
#define F_PG_STAT_GET_WAL_SENDERS 1822,53098
#define F_WINDOW_ROW_NUMBER 1823,53137
#define F_WINDOW_RANK 1824,53170
#define F_WINDOW_DENSE_RANK 1825,53197
#define F_WINDOW_PERCENT_RANK 1826,53230
#define F_WINDOW_CUME_DIST 1827,53265
#define F_WINDOW_NTILE 1828,53297
#define F_WINDOW_LAG 1829,53325
#define F_WINDOW_LAG_WITH_OFFSET 1830,53351
#define F_WINDOW_LAG_WITH_OFFSET_AND_DEFAULT 1831,53389
#define F_WINDOW_LEAD 1832,53439
#define F_WINDOW_LEAD_WITH_OFFSET 1833,53466
#define F_WINDOW_LEAD_WITH_OFFSET_AND_DEFAULT 1834,53505
#define F_WINDOW_FIRST_VALUE 1835,53556
#define F_WINDOW_LAST_VALUE 1836,53590
#define F_WINDOW_NTH_VALUE 1837,53623
#define F_FDW_HANDLER_IN 1838,53655
#define F_FDW_HANDLER_OUT 1839,53685
#define F_VOID_RECV 1840,53716
#define F_VOID_SEND 1841,53741
#define F_BTINT2SORTSUPPORT 1842,53766
#define F_BTINT4SORTSUPPORT 1843,53799
#define F_BTINT8SORTSUPPORT 1844,53832
#define F_BTFLOAT4SORTSUPPORT 1845,53865
#define F_BTFLOAT8SORTSUPPORT 1846,53900
#define F_BTOIDSORTSUPPORT 1847,53935
#define F_BTNAMESORTSUPPORT 1848,53967
#define F_DATE_SORTSUPPORT 1849,54000
#define F_TIMESTAMP_SORTSUPPORT 1850,54032
#define F_HAS_TYPE_PRIVILEGE_NAME_NAME 1851,54069
#define F_HAS_TYPE_PRIVILEGE_NAME_ID 1852,54113
#define F_HAS_TYPE_PRIVILEGE_ID_NAME 1853,54155
#define F_HAS_TYPE_PRIVILEGE_ID_ID 1854,54197
#define F_HAS_TYPE_PRIVILEGE_NAME 1855,54237
#define F_HAS_TYPE_PRIVILEGE_ID 1856,54276
#define F_MACADDR_NOT 1857,54313
#define F_MACADDR_AND 1858,54340
#define F_MACADDR_OR 1859,54367
#define F_PG_STAT_GET_DB_TEMP_FILES 1860,54393
#define F_PG_STAT_GET_DB_TEMP_BYTES 1861,54434
#define F_PG_STAT_GET_DB_DEADLOCKS 1862,54475
#define F_ARRAY_TO_JSON 1863,54515
#define F_ARRAY_TO_JSON_PRETTY 1864,54544
#define F_ROW_TO_JSON 1865,54580
#define F_ROW_TO_JSON_PRETTY 1866,54607
#define F_NUMERIC_SUPPORT 1867,54641
#define F_VARBIT_SUPPORT 1868,54672
#define F_PG_GET_VIEWDEF_WRAP 1869,54702
#define F_PG_STAT_GET_CHECKPOINT_WRITE_TIME 1870,54737
#define F_PG_STAT_GET_CHECKPOINT_SYNC_TIME 1871,54786
#define F_PG_COLLATION_FOR 1872,54834
#define F_PG_TRIGGER_DEPTH 1873,54866
#define F_PG_WAL_LSN_DIFF 1874,54898
#define F_PG_SIZE_PRETTY_NUMERIC 1875,54929
#define F_ARRAY_REMOVE 1876,54967
#define F_ARRAY_REPLACE 1877,54995
#define F_RANGESEL 1878,55024
#define F_BE_LO_LSEEK64 1879,55048
#define F_BE_LO_TELL64 1880,55077
#define F_BE_LO_TRUNCATE64 1881,55105
#define F_JSON_AGG_TRANSFN 1882,55137
#define F_JSON_AGG_FINALFN 1883,55169
#define F_TO_JSON 1884,55201
#define F_PG_STAT_GET_MOD_SINCE_ANALYZE 1885,55224
#define F_NUMERIC_SUM 1886,55269
#define F_ARRAY_CARDINALITY 1887,55296
#define F_JSON_OBJECT_AGG_TRANSFN 1888,55329
#define F_RECORD_IMAGE_EQ 1889,55368
#define F_RECORD_IMAGE_NE 1890,55399
#define F_RECORD_IMAGE_LT 1891,55430
#define F_RECORD_IMAGE_GT 1892,55461
#define F_RECORD_IMAGE_LE 1893,55492
#define F_RECORD_IMAGE_GE 1894,55523
#define F_BTRECORDIMAGECMP 1895,55554
#define F_PG_STAT_GET_ARCHIVER 1896,55586
#define F_JSON_OBJECT_AGG_FINALFN 1897,55622
#define F_JSON_BUILD_ARRAY 1898,55661
#define F_JSON_BUILD_ARRAY_NOARGS 1899,55693
#define F_JSON_BUILD_OBJECT 1900,55732
#define F_JSON_BUILD_OBJECT_NOARGS 1901,55765
#define F_JSON_OBJECT 1902,55805
#define F_JSON_OBJECT_TWO_ARG 1903,55832
#define F_JSON_TO_RECORD 1904,55867
#define F_JSON_TO_RECORDSET 1905,55897
#define F_JSONB_ARRAY_LENGTH 1906,55930
#define F_JSONB_EACH 1907,55964
#define F_JSONB_POPULATE_RECORD 1908,55990
#define F_JSONB_TYPEOF 1909,56027
#define F_JSONB_OBJECT_FIELD_TEXT 1910,56055
#define F_JSONB_ARRAY_ELEMENT 1911,56094
#define F_JSONB_ARRAY_ELEMENT_TEXT 1912,56129
#define F_JSONB_EXTRACT_PATH 1913,56169
#define F_WIDTH_BUCKET_ARRAY 1914,56203
#define F_JSONB_ARRAY_ELEMENTS 1915,56237
#define F_PG_LSN_IN 1916,56273
#define F_PG_LSN_OUT 1917,56298
#define F_PG_LSN_LT 1918,56324
#define F_PG_LSN_LE 1919,56349
#define F_PG_LSN_EQ 1920,56374
#define F_PG_LSN_GE 1921,56399
#define F_PG_LSN_GT 1922,56424
#define F_PG_LSN_NE 1923,56449
#define F_PG_LSN_MI 1924,56474
#define F_PG_LSN_RECV 1925,56499
#define F_PG_LSN_SEND 1926,56526
#define F_PG_LSN_CMP 1927,56553
#define F_PG_LSN_HASH 1928,56579
#define F_BTTEXTSORTSUPPORT 1929,56606
#define F_GENERATE_SERIES_STEP_NUMERIC 1930,56639
#define F_GENERATE_SERIES_NUMERIC 1931,56683
#define F_JSON_STRIP_NULLS 1932,56722
#define F_JSONB_STRIP_NULLS 1933,56754
#define F_JSONB_OBJECT 1934,56787
#define F_JSONB_OBJECT_TWO_ARG 1935,56815
#define F_JSONB_AGG_TRANSFN 1936,56851
#define F_JSONB_AGG_FINALFN 1937,56884
#define F_JSONB_OBJECT_AGG_TRANSFN 1938,56917
#define F_JSONB_OBJECT_AGG_FINALFN 1939,56957
#define F_JSONB_BUILD_ARRAY 1940,56997
#define F_JSONB_BUILD_ARRAY_NOARGS 1941,57030
#define F_JSONB_BUILD_OBJECT 1942,57070
#define F_JSONB_BUILD_OBJECT_NOARGS 1943,57104
#define F_DIST_PPOLY 1944,57145
#define F_ARRAY_POSITION 1945,57171
#define F_ARRAY_POSITION_START 1946,57201
#define F_ARRAY_POSITIONS 1947,57237
#define F_GIST_CIRCLE_DISTANCE 1948,57268
#define F_NUMERIC_SCALE 1949,57304
#define F_GIST_POINT_FETCH 1950,57333
#define F_NUMERIC_SORTSUPPORT 1951,57365
#define F_GIST_POLY_DISTANCE 1952,57400
#define F_DIST_CPOINT 1953,57434
#define F_DIST_POLYP 1954,57461
#define F_PG_READ_FILE_V2 1955,57487
#define F_SHOW_CONFIG_BY_NAME_MISSING_OK 1956,57518
#define F_PG_READ_BINARY_FILE 1957,57564
#define F_PG_NOTIFICATION_QUEUE_USAGE 1958,57599
#define F_PG_LS_DIR 1959,57642
#define F_ROW_SECURITY_ACTIVE 1960,57667
#define F_ROW_SECURITY_ACTIVE_NAME 1961,57702
#define F_UUID_SORTSUPPORT 1962,57742
#define F_JSONB_CONCAT 1963,57774
#define F_JSONB_DELETE 1964,57802
#define F_JSONB_DELETE_IDX 1965,57830
#define F_JSONB_DELETE_PATH 1966,57862
#define F_JSONB_SET 1967,57895
#define F_JSONB_PRETTY 1968,57920
#define F_PG_STAT_FILE 1969,57948
#define F_XIDNEQ 1970,57976
#define F_TSM_HANDLER_IN 1971,57998
#define F_TSM_HANDLER_OUT 1972,58028
#define F_TSM_BERNOULLI_HANDLER 1973,58059
#define F_TSM_SYSTEM_HANDLER 1974,58096
#define F_PG_STAT_GET_WAL_RECEIVER 1975,58130
#define F_PG_STAT_GET_PROGRESS_INFO 1976,58170
#define F_TSVECTOR_FILTER 1977,58211
#define F_TSVECTOR_SETWEIGHT_BY_FILTER 1978,58242
#define F_TSVECTOR_DELETE_STR 1979,58286
#define F_TSVECTOR_UNNEST 1980,58321
#define F_TSVECTOR_DELETE_ARR 1981,58352
#define F_INT4_AVG_COMBINE 1982,58387
#define F_INTERVAL_COMBINE 1983,58419
#define F_TSVECTOR_TO_ARRAY 1984,58451
#define F_ARRAY_TO_TSVECTOR 1985,58484
#define F_BPCHAR_SORTSUPPORT 1986,58517
#define F_SHOW_ALL_FILE_SETTINGS 1987,58551
#define F_PG_CURRENT_WAL_FLUSH_LSN 1988,58589
#define F_BYTEA_SORTSUPPORT 1989,58629
#define F_BTTEXT_PATTERN_SORTSUPPORT 1990,58662
#define F_BTBPCHAR_PATTERN_SORTSUPPORT 1991,58704
#define F_PG_SIZE_BYTES 1992,58748
#define F_NUMERIC_SERIALIZE 1993,58777
#define F_NUMERIC_DESERIALIZE 1994,58810
#define F_NUMERIC_AVG_COMBINE 1995,58845
#define F_NUMERIC_POLY_COMBINE 1996,58880
#define F_NUMERIC_POLY_SERIALIZE 1997,58916
#define F_NUMERIC_POLY_DESERIALIZE 1998,58954
#define F_NUMERIC_COMBINE 1999,58994
#define F_FLOAT8_REGR_COMBINE 2000,59025
#define F_JSONB_DELETE_ARRAY 2001,59060
#define F_CASH_MUL_INT8 2002,59094
#define F_CASH_DIV_INT8 2003,59123
#define F_PG_CURRENT_XACT_ID_IF_ASSIGNED 2004,59152
#define F_PG_GET_PARTKEYDEF 2005,59198
#define F_PG_LS_LOGDIR 2006,59231
#define F_PG_LS_WALDIR 2007,59259
#define F_PG_NDISTINCT_IN 2008,59287
#define F_PG_NDISTINCT_OUT 2009,59318
#define F_PG_NDISTINCT_RECV 2010,59350
#define F_PG_NDISTINCT_SEND 2011,59383
#define F_MACADDR_SORTSUPPORT 2012,59416
#define F_PG_XACT_STATUS 2013,59451
#define F_PG_SAFE_SNAPSHOT_BLOCKING_PIDS 2014,59481
#define F_PG_ISOLATION_TEST_SESSION_IS_BLOCKED 2015,59527
#define F_PG_IDENTIFY_OBJECT_AS_ADDRESS 2016,59579
#define F_BRIN_MINMAX_OPCINFO 2017,59624
#define F_BRIN_MINMAX_ADD_VALUE 2018,59659
#define F_BRIN_MINMAX_CONSISTENT 2019,59696
#define F_BRIN_MINMAX_UNION 2020,59734
#define F_INT8_AVG_ACCUM_INV 2021,59767
#define F_NUMERIC_POLY_SUM 2022,59801
#define F_NUMERIC_POLY_AVG 2023,59833
#define F_NUMERIC_POLY_VAR_POP 2024,59865
#define F_NUMERIC_POLY_VAR_SAMP 2025,59901
#define F_NUMERIC_POLY_STDDEV_POP 2026,59938
#define F_NUMERIC_POLY_STDDEV_SAMP 2027,59977
#define F_REGEXP_MATCH_NO_FLAGS 2028,60017
#define F_REGEXP_MATCH 2029,60054
#define F_INT8_MUL_CASH 2030,60082
#define F_PG_CONFIG 2031,60111
#define F_PG_HBA_FILE_RULES 2032,60136
#define F_PG_STATISTICS_OBJ_IS_VISIBLE 2033,60169
#define F_PG_DEPENDENCIES_IN 2034,60213
#define F_PG_DEPENDENCIES_OUT 2035,60247
#define F_PG_DEPENDENCIES_RECV 2036,60282
#define F_PG_DEPENDENCIES_SEND 2037,60318
#define F_PG_GET_PARTITION_CONSTRAINTDEF 2038,60354
#define F_TIME_HASH_EXTENDED 2039,60400
#define F_TIMETZ_HASH_EXTENDED 2040,60434
#define F_TIMESTAMP_HASH_EXTENDED 2041,60470
#define F_UUID_HASH_EXTENDED 2042,60509
#define F_PG_LSN_HASH_EXTENDED 2043,60543
#define F_HASHENUMEXTENDED 2044,60579
#define F_PG_GET_STATISTICSOBJDEF 2045,60611
#define F_JSONB_HASH_EXTENDED 2046,60650
#define F_HASH_RANGE_EXTENDED 2047,60685
#define F_INTERVAL_HASH_EXTENDED 2048,60720
#define F_SHA224_BYTEA 2049,60758
#define F_SHA256_BYTEA 2050,60786
#define F_SHA384_BYTEA 2051,60814
#define F_SHA512_BYTEA 2052,60842
#define F_PG_PARTITION_TREE 2053,60870
#define F_PG_PARTITION_ROOT 2054,60903
#define F_PG_PARTITION_ANCESTORS 2055,60936
#define F_PG_STAT_GET_DB_CHECKSUM_FAILURES 2056,60974
#define F_PG_STATS_EXT_MCVLIST_ITEMS 2057,61022
#define F_PG_STAT_GET_DB_CHECKSUM_LAST_FAILURE 2058,61064
#define F_GEN_RANDOM_UUID 2059,61116
#define F_GTSVECTOR_OPTIONS 2060,61147
#define F_PG_PROMOTE 2061,61180
#define F_PREFIXSEL 2062,61206
#define F_PREFIXJOINSEL 2063,61231
#define F_PG_CONTROL_SYSTEM 2064,61260
#define F_PG_CONTROL_CHECKPOINT 2065,61293
#define F_PG_CONTROL_RECOVERY 2066,61330
#define F_PG_CONTROL_INIT 2067,61365
#define F_PG_IMPORT_SYSTEM_COLLATIONS 2068,61396
#define F_MACADDR8_RECV 2069,61439
#define F_MACADDR8_SEND 2070,61468
#define F_PG_COLLATION_ACTUAL_VERSION 2071,61497
#define F_JSONB_NUMERIC 2072,61540
#define F_JSONB_INT2 2073,61569
#define F_JSONB_INT4 2074,61595
#define F_JSONB_INT8 2075,61621
#define F_JSONB_FLOAT4 2076,61647
#define F_PG_FILENODE_RELATION 2077,61675
#define F_BE_LO_FROM_BYTEA 2078,61711
#define F_BE_LO_GET 2079,61743
#define F_BE_LO_GET_FRAGMENT 2080,61768
#define F_BE_LO_PUT 2081,61802
#define F_MAKE_TIMESTAMP 2082,61827
#define F_MAKE_TIMESTAMPTZ 2083,61857
#define F_MAKE_TIMESTAMPTZ_AT_TIMEZONE 2084,61889
#define F_MAKE_INTERVAL 2085,61933
#define F_JSONB_ARRAY_ELEMENTS_TEXT 2086,61962
#define F_SPG_RANGE_QUAD_CONFIG 2087,62003
#define F_SPG_RANGE_QUAD_CHOOSE 2088,62040
#define F_SPG_RANGE_QUAD_PICKSPLIT 2089,62077
#define F_SPG_RANGE_QUAD_INNER_CONSISTENT 2090,62117
#define F_SPG_RANGE_QUAD_LEAF_CONSISTENT 2091,62164
#define F_JSONB_POPULATE_RECORDSET 2092,62210
#define F_TO_REGOPERATOR 2093,62250
#define F_JSONB_OBJECT_FIELD 2094,62280
#define F_TO_REGPROCEDURE 2095,62314
#define F_GIN_COMPARE_JSONB 2096,62345
#define F_GIN_EXTRACT_JSONB 2097,62378
#define F_GIN_EXTRACT_JSONB_QUERY 2098,62411
#define F_GIN_CONSISTENT_JSONB 2099,62450
#define F_GIN_EXTRACT_JSONB_PATH 2100,62486
#define F_GIN_EXTRACT_JSONB_QUERY_PATH 2101,62524
#define F_GIN_CONSISTENT_JSONB_PATH 2102,62568
#define F_GIN_TRICONSISTENT_JSONB 2103,62609
#define F_GIN_TRICONSISTENT_JSONB_PATH 2104,62648
#define F_JSONB_TO_RECORD 2105,62692
#define F_JSONB_TO_RECORDSET 2106,62723
#define F_TO_REGOPER 2107,62757
#define F_TO_REGTYPE 2108,62783
#define F_TO_REGPROC 2109,62809
#define F_TO_REGCLASS 2110,62835
#define F_BOOL_ACCUM 2111,62862
#define F_BOOL_ACCUM_INV 2112,62888
#define F_BOOL_ALLTRUE 2113,62918
#define F_BOOL_ANYTRUE 2114,62946
#define F_ANYENUM_IN 2115,62974
#define F_ANYENUM_OUT 2116,63000
#define F_ENUM_IN 2117,63027
#define F_ENUM_OUT 2118,63050
#define F_ENUM_EQ 2119,63074
#define F_ENUM_NE 2120,63097
#define F_ENUM_LT 2121,63120
#define F_ENUM_GT 2122,63143
#define F_ENUM_LE 2123,63166
#define F_ENUM_GE 2124,63189
#define F_ENUM_CMP 2125,63212
#define F_HASHENUM 2126,63236
#define F_ENUM_SMALLER 2127,63260
#define F_ENUM_LARGER 2128,63288
#define F_ENUM_FIRST 2129,63315
#define F_ENUM_LAST 2130,63341
#define F_ENUM_RANGE_BOUNDS 2131,63366
#define F_ENUM_RANGE_ALL 2132,63399
#define F_ENUM_RECV 2133,63429
#define F_ENUM_SEND 2134,63454
#define F_STRING_AGG_TRANSFN 2135,63479
#define F_STRING_AGG_FINALFN 2136,63513
#define F_PG_DESCRIBE_OBJECT 2137,63547
#define F_TEXT_FORMAT 2138,63581
#define F_TEXT_FORMAT_NV 2139,63608
#define F_BYTEA_STRING_AGG_TRANSFN 2140,63638
#define F_BYTEA_STRING_AGG_FINALFN 2141,63678
#define F_INT8DEC 2142,63718
#define F_INT8DEC_ANY 2143,63741
#define F_NUMERIC_ACCUM_INV 2144,63768
#define F_INTERVAL_ACCUM_INV 2145,63801
#define F_NETWORK_OVERLAP 2146,63835
#define F_INET_GIST_CONSISTENT 2147,63866
#define F_INET_GIST_UNION 2148,63902
#define F_INET_GIST_COMPRESS 2149,63933
#define F_JSONB_BOOL 2150,63967
#define F_INET_GIST_PENALTY 2151,63993
#define F_INET_GIST_PICKSPLIT 2152,64026
#define F_INET_GIST_SAME 2153,64061
#define F_NETWORKSEL 2154,64091
#define F_NETWORKJOINSEL 2155,64117
#define F_NETWORK_LARGER 2156,64147
#define F_NETWORK_SMALLER 2157,64177
#define F_PG_EVENT_TRIGGER_DROPPED_OBJECTS 2158,64208
#define F_INT2_ACCUM_INV 2159,64256
#define F_INT4_ACCUM_INV 2160,64286
#define F_INT8_ACCUM_INV 2161,64316
#define F_INT2_AVG_ACCUM_INV 2162,64346
#define F_INT4_AVG_ACCUM_INV 2163,64380
#define F_INT2INT4_SUM 2164,64414
#define F_INET_GIST_FETCH 2165,64442
#define F_PG_LOGICAL_EMIT_MESSAGE_TEXT 2166,64473
#define F_PG_LOGICAL_EMIT_MESSAGE_BYTEA 2167,64517
#define F_JSONB_INSERT 2168,64562
#define F_PG_XACT_COMMIT_TIMESTAMP 2169,64590
#define F_BINARY_UPGRADE_SET_NEXT_PG_TYPE_OID 2170,64630
#define F_PG_LAST_COMMITTED_XACT 2171,64681
#define F_BINARY_UPGRADE_SET_NEXT_ARRAY_PG_TYPE_OID 2172,64719
#define F_BINARY_UPGRADE_SET_NEXT_HEAP_PG_CLASS_OID 2173,64776
#define F_BINARY_UPGRADE_SET_NEXT_INDEX_PG_CLASS_OID 2174,64833
#define F_BINARY_UPGRADE_SET_NEXT_TOAST_PG_CLASS_OID 2175,64891
#define F_BINARY_UPGRADE_SET_NEXT_PG_ENUM_OID 2176,64949
#define F_BINARY_UPGRADE_SET_NEXT_PG_AUTHID_OID 2177,65000
#define F_BINARY_UPGRADE_CREATE_EMPTY_EXTENSION 2178,65053
#define F_EVENT_TRIGGER_IN 2179,65106
#define F_EVENT_TRIGGER_OUT 2180,65138
#define F_TSVECTORIN 2181,65171
#define F_TSVECTOROUT 2182,65197
#define F_TSQUERYIN 2183,65224
#define F_TSQUERYOUT 2184,65249
#define F_TSVECTOR_LT 2185,65275
#define F_TSVECTOR_LE 2186,65302
#define F_TSVECTOR_EQ 2187,65329
#define F_TSVECTOR_NE 2188,65356
#define F_TSVECTOR_GE 2189,65383
#define F_TSVECTOR_GT 2190,65410
#define F_TSVECTOR_CMP 2191,65437
#define F_TSVECTOR_STRIP 2192,65465
#define F_TSVECTOR_SETWEIGHT 2193,65495
#define F_TSVECTOR_CONCAT 2194,65529
#define F_TS_MATCH_VQ 2195,65560
#define F_TS_MATCH_QV 2196,65587
#define F_TSVECTORSEND 2197,65614
#define F_TSVECTORRECV 2198,65642
#define F_TSQUERYSEND 2199,65670
#define F_TSQUERYRECV 2200,65697
#define F_GTSVECTORIN 2201,65724
#define F_GTSVECTOROUT 2202,65751
#define F_GTSVECTOR_COMPRESS 2203,65779
#define F_GTSVECTOR_DECOMPRESS 2204,65813
#define F_GTSVECTOR_PICKSPLIT 2205,65849
#define F_GTSVECTOR_UNION 2206,65884
#define F_GTSVECTOR_SAME 2207,65915
#define F_GTSVECTOR_PENALTY 2208,65945
#define F_GTSVECTOR_CONSISTENT 2209,65978
#define F_GIN_EXTRACT_TSVECTOR 2210,66014
#define F_GIN_EXTRACT_TSQUERY 2211,66050
#define F_GIN_TSQUERY_CONSISTENT 2212,66085
#define F_TSQUERY_LT 2213,66123
#define F_TSQUERY_LE 2214,66149
#define F_TSQUERY_EQ 2215,66175
#define F_TSQUERY_NE 2216,66201
#define F_TSQUERY_GE 2217,66227
#define F_TSQUERY_GT 2218,66253
#define F_TSQUERY_CMP 2219,66279
#define F_TSQUERY_AND 2220,66306
#define F_TSQUERY_OR 2221,66333
#define F_TSQUERY_NOT 2222,66359
#define F_TSQUERY_NUMNODE 2223,66386
#define F_TSQUERYTREE 2224,66417
#define F_TSQUERY_REWRITE 2225,66444
#define F_TSQUERY_REWRITE_QUERY 2226,66475
#define F_TSMATCHSEL 2227,66512
#define F_TSMATCHJOINSEL 2228,66538
#define F_TS_TYPANALYZE 2229,66568
#define F_TS_STAT1 2230,66597
#define F_TS_STAT2 2231,66621
#define F_TSQ_MCONTAINS 2232,66645
#define F_TSQ_MCONTAINED 2233,66674
#define F_GTSQUERY_COMPRESS 2234,66704
#define F_TEXT_STARTS_WITH 2235,66737
#define F_GTSQUERY_PICKSPLIT 2236,66769
#define F_GTSQUERY_UNION 2237,66803
#define F_GTSQUERY_SAME 2238,66833
#define F_GTSQUERY_PENALTY 2239,66862
#define F_GTSQUERY_CONSISTENT 2240,66894
#define F_TS_RANK_WTTF 2241,66929
#define F_TS_RANK_WTT 2242,66957
#define F_TS_RANK_TTF 2243,66984
#define F_TS_RANK_TT 2244,67011
#define F_TS_RANKCD_WTTF 2245,67037
#define F_TS_RANKCD_WTT 2246,67067
#define F_TS_RANKCD_TTF 2247,67096
#define F_TS_RANKCD_TT 2248,67125
#define F_TSVECTOR_LENGTH 2249,67153
#define F_TS_TOKEN_TYPE_BYID 2250,67184
#define F_TS_TOKEN_TYPE_BYNAME 2251,67218
#define F_TS_PARSE_BYID 2252,67254
#define F_TS_PARSE_BYNAME 2253,67283
#define F_PRSD_START 2254,67314
#define F_PRSD_NEXTTOKEN 2255,67340
#define F_PRSD_END 2256,67370
#define F_PRSD_HEADLINE 2257,67394
#define F_PRSD_LEXTYPE 2258,67423
#define F_TS_LEXIZE 2259,67451
#define F_GIN_CMP_TSLEXEME 2260,67476
#define F_DSIMPLE_INIT 2261,67508
#define F_DSIMPLE_LEXIZE 2262,67536
#define F_DSYNONYM_INIT 2263,67566
#define F_DSYNONYM_LEXIZE 2264,67595
#define F_DISPELL_INIT 2265,67626
#define F_DISPELL_LEXIZE 2266,67654
#define F_REGCONFIGIN 2267,67684
#define F_REGCONFIGOUT 2268,67711
#define F_REGCONFIGRECV 2269,67739
#define F_REGCONFIGSEND 2270,67768
#define F_THESAURUS_INIT 2271,67797
#define F_THESAURUS_LEXIZE 2272,67827
#define F_TS_HEADLINE_BYID_OPT 2273,67859
#define F_TS_HEADLINE_BYID 2274,67895
#define F_TO_TSVECTOR_BYID 2275,67927
#define F_TO_TSQUERY_BYID 2276,67959
#define F_PLAINTO_TSQUERY_BYID 2277,67990
#define F_TO_TSVECTOR 2278,68026
#define F_TO_TSQUERY 2279,68053
#define F_PLAINTO_TSQUERY 2280,68079
#define F_TSVECTOR_UPDATE_TRIGGER_BYID 2281,68110
#define F_TSVECTOR_UPDATE_TRIGGER_BYCOLUMN 2282,68154
#define F_TS_HEADLINE_OPT 2283,68202
#define F_TS_HEADLINE 2284,68233
#define F_PG_TS_PARSER_IS_VISIBLE 2285,68260
#define F_PG_TS_DICT_IS_VISIBLE 2286,68299
#define F_PG_TS_CONFIG_IS_VISIBLE 2287,68336
#define F_GET_CURRENT_TS_CONFIG 2288,68375
#define F_TS_MATCH_TT 2289,68412
#define F_TS_MATCH_TQ 2290,68439
#define F_PG_TS_TEMPLATE_IS_VISIBLE 2291,68466
#define F_REGDICTIONARYIN 2292,68507
#define F_REGDICTIONARYOUT 2293,68538
#define F_REGDICTIONARYRECV 2294,68570
#define F_REGDICTIONARYSEND 2295,68603
#define F_PG_STAT_RESET_SHARED 2296,68636
#define F_PG_STAT_RESET_SINGLE_TABLE_COUNTERS 2297,68672
#define F_PG_STAT_RESET_SINGLE_FUNCTION_COUNTERS 2298,68723
#define F_PG_TABLESPACE_LOCATION 2299,68777
#define F_PG_CREATE_PHYSICAL_REPLICATION_SLOT 2300,68815
#define F_PG_DROP_REPLICATION_SLOT 2301,68866
#define F_PG_GET_REPLICATION_SLOTS 2302,68906
#define F_PG_LOGICAL_SLOT_GET_CHANGES 2303,68946
#define F_PG_LOGICAL_SLOT_GET_BINARY_CHANGES 2304,68989
#define F_PG_LOGICAL_SLOT_PEEK_CHANGES 2305,69039
#define F_PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES 2306,69083
#define F_PG_CREATE_LOGICAL_REPLICATION_SLOT 2307,69134
#define F_TO_JSONB 2308,69184
#define F_PG_STAT_GET_SNAPSHOT_TIMESTAMP 2309,69208
#define F_GIN_CLEAN_PENDING_LIST 2310,69254
#define F_GTSVECTOR_CONSISTENT_OLDSIG 2311,69292
#define F_GIN_EXTRACT_TSQUERY_OLDSIG 2312,69335
#define F_GIN_TSQUERY_CONSISTENT_OLDSIG 2313,69377
#define F_GTSQUERY_CONSISTENT_OLDSIG 2314,69422
#define F_INET_SPG_CONFIG 2315,69464
#define F_INET_SPG_CHOOSE 2316,69495
#define F_INET_SPG_PICKSPLIT 2317,69526
#define F_INET_SPG_INNER_CONSISTENT 2318,69560
#define F_INET_SPG_LEAF_CONSISTENT 2319,69601
#define F_PG_CURRENT_LOGFILE 2320,69641
#define F_PG_CURRENT_LOGFILE_1ARG 2321,69675
#define F_JSONB_SEND 2322,69714
#define F_JSONB_OUT 2323,69740
#define F_JSONB_RECV 2324,69765
#define F_JSONB_IN 2325,69791
#define F_PG_GET_FUNCTION_ARG_DEFAULT 2326,69815
#define F_PG_EXPORT_SNAPSHOT 2327,69858
#define F_PG_IS_IN_RECOVERY 2328,69892
#define F_INT4_CASH 2329,69925
#define F_INT8_CASH 2330,69950
#define F_PG_IS_IN_BACKUP 2331,69975
#define F_PG_BACKUP_START_TIME 2332,70006
#define F_PG_COLLATION_IS_VISIBLE 2333,70042
#define F_ARRAY_TYPANALYZE 2334,70081
#define F_ARRAYCONTSEL 2335,70113
#define F_ARRAYCONTJOINSEL 2336,70141
#define F_PG_GET_MULTIXACT_MEMBERS 2337,70173
#define F_PG_LAST_WAL_RECEIVE_LSN 2338,70213
#define F_PG_LAST_WAL_REPLAY_LSN 2339,70252
#define F_CASH_DIV_CASH 2340,70290
#define F_CASH_NUMERIC 2341,70319
#define F_NUMERIC_CASH 2342,70347
#define F_PG_READ_FILE_ALL 2343,70375
#define F_PG_READ_BINARY_FILE_OFF_LEN 2344,70407
#define F_PG_READ_BINARY_FILE_ALL 2345,70450
#define F_PG_OPFAMILY_IS_VISIBLE 2346,70489
#define F_PG_LAST_XACT_REPLAY_TIMESTAMP 2347,70527
#define F_ANYRANGE_IN 2348,70572
#define F_ANYRANGE_OUT 2349,70599
#define F_RANGE_IN 2350,70627
#define F_RANGE_OUT 2351,70651
#define F_RANGE_RECV 2352,70676
#define F_RANGE_SEND 2353,70702
#define F_PG_IDENTIFY_OBJECT 2354,70728
#define F_RANGE_CONSTRUCTOR2 2355,70762
#define F_RANGE_CONSTRUCTOR3 2356,70796
#define F_PG_RELATION_IS_UPDATABLE 2357,70830
#define F_PG_COLUMN_IS_UPDATABLE 2358,70870
#define F_MAKE_DATE 2359,70908
#define F_MAKE_TIME 2360,70933
#define F_RANGE_LOWER 2361,70958
#define F_RANGE_UPPER 2362,70985
#define F_RANGE_EMPTY 2363,71012
#define F_RANGE_LOWER_INC 2364,71039
#define F_RANGE_UPPER_INC 2365,71070
#define F_RANGE_LOWER_INF 2366,71101
#define F_RANGE_UPPER_INF 2367,71132
#define F_RANGE_EQ 2368,71163
#define F_RANGE_NE 2369,71187
#define F_RANGE_OVERLAPS 2370,71211
#define F_RANGE_CONTAINS_ELEM 2371,71241
#define F_RANGE_CONTAINS 2372,71276
#define F_ELEM_CONTAINED_BY_RANGE 2373,71306
#define F_RANGE_CONTAINED_BY 2374,71345
#define F_RANGE_ADJACENT 2375,71379
#define F_RANGE_BEFORE 2376,71409
#define F_RANGE_AFTER 2377,71437
#define F_RANGE_OVERLEFT 2378,71464
#define F_RANGE_OVERRIGHT 2379,71494
#define F_RANGE_UNION 2380,71525
#define F_RANGE_INTERSECT 2381,71552
#define F_RANGE_MINUS 2382,71583
#define F_RANGE_CMP 2383,71610
#define F_RANGE_LT 2384,71635
#define F_RANGE_LE 2385,71659
#define F_RANGE_GE 2386,71683
#define F_RANGE_GT 2387,71707
#define F_RANGE_GIST_CONSISTENT 2388,71731
#define F_RANGE_GIST_UNION 2389,71768
#define F_PG_REPLICATION_SLOT_ADVANCE 2390,71800
#define F_RANGE_GIST_PENALTY 2391,71843
#define F_RANGE_GIST_PICKSPLIT 2392,71877
#define F_RANGE_GIST_SAME 2393,71913
#define F_HASH_RANGE 2394,71944
#define F_INT4RANGE_CANONICAL 2395,71970
#define F_DATERANGE_CANONICAL 2396,72005
#define F_RANGE_TYPANALYZE 2397,72040
#define F_TIMESTAMP_SUPPORT 2398,72072
#define F_INTERVAL_SUPPORT 2399,72105
#define F_GINARRAYTRICONSISTENT 2400,72137
#define F_GIN_TSQUERY_TRICONSISTENT 2401,72174
#define F_INT4RANGE_SUBDIFF 2402,72215
#define F_INT8RANGE_SUBDIFF 2403,72248
#define F_NUMRANGE_SUBDIFF 2404,72281
#define F_DATERANGE_SUBDIFF 2405,72313
#define F_INT8RANGE_CANONICAL 2406,72346
#define F_TSRANGE_SUBDIFF 2407,72381
#define F_TSTZRANGE_SUBDIFF 2408,72412
#define F_JSONB_OBJECT_KEYS 2409,72445
#define F_JSONB_EACH_TEXT 2410,72478
#define F_MXID_AGE 2411,72509
#define F_JSONB_EXTRACT_PATH_TEXT 2412,72533
#define F_ACLDEFAULT_SQL 2413,72572
#define F_TIME_SUPPORT 2414,72602
#define F_JSON_OBJECT_FIELD 2415,72630
#define F_JSON_OBJECT_FIELD_TEXT 2416,72663
#define F_JSON_ARRAY_ELEMENT 2417,72701
#define F_JSON_ARRAY_ELEMENT_TEXT 2418,72735
#define F_JSON_EXTRACT_PATH 2419,72774
#define F_BRIN_SUMMARIZE_NEW_VALUES 2420,72807
#define F_JSON_EXTRACT_PATH_TEXT 2421,72848
#define F_PG_GET_OBJECT_ADDRESS 2422,72886
#define F_JSON_ARRAY_ELEMENTS 2423,72923
#define F_JSON_ARRAY_LENGTH 2424,72958
#define F_JSON_OBJECT_KEYS 2425,72991
#define F_JSON_EACH 2426,73023
#define F_JSON_EACH_TEXT 2427,73048
#define F_JSON_POPULATE_RECORD 2428,73078
#define F_JSON_POPULATE_RECORDSET 2429,73114
#define F_JSON_TYPEOF 2430,73153
#define F_JSON_ARRAY_ELEMENTS_TEXT 2431,73180
#define F_ORDERED_SET_TRANSITION 2432,73220
#define F_ORDERED_SET_TRANSITION_MULTI 2433,73258
#define F_PERCENTILE_DISC_FINAL 2434,73302
#define F_PERCENTILE_CONT_FLOAT8_FINAL 2435,73339
#define F_PERCENTILE_CONT_INTERVAL_FINAL 2436,73383
#define F_PERCENTILE_DISC_MULTI_FINAL 2437,73429
#define F_PERCENTILE_CONT_FLOAT8_MULTI_FINAL 2438,73472
#define F_PERCENTILE_CONT_INTERVAL_MULTI_FINAL 2439,73522
#define F_MODE_FINAL 2440,73574
#define F_HYPOTHETICAL_RANK_FINAL 2441,73600
#define F_HYPOTHETICAL_PERCENT_RANK_FINAL 2442,73639
#define F_HYPOTHETICAL_CUME_DIST_FINAL 2443,73686
#define F_HYPOTHETICAL_DENSE_RANK_FINAL 2444,73730
#define F_GENERATE_SERIES_INT4_SUPPORT 2445,73775
#define F_GENERATE_SERIES_INT8_SUPPORT 2446,73819
#define F_ARRAY_UNNEST_SUPPORT 2447,73863
#define F_GIST_BOX_DISTANCE 2448,73899
#define F_BRIN_SUMMARIZE_RANGE 2449,73932
#define F_JSONPATH_IN 2450,73968
#define F_JSONPATH_RECV 2451,73995
#define F_JSONPATH_OUT 2452,74024
#define F_JSONPATH_SEND 2453,74052
#define F_JSONB_PATH_EXISTS 2454,74081
#define F_JSONB_PATH_QUERY 2455,74114
#define F_JSONB_PATH_QUERY_ARRAY 2456,74146
#define F_JSONB_PATH_QUERY_FIRST 2457,74184
#define F_JSONB_PATH_MATCH 2458,74222
#define F_JSONB_PATH_EXISTS_OPR 2459,74254
#define F_JSONB_PATH_MATCH_OPR 2460,74291
#define F_BRIN_DESUMMARIZE_RANGE 2461,74327
#define F_SPG_QUAD_CONFIG 2462,74365
#define F_SPG_QUAD_CHOOSE 2463,74396
#define F_SPG_QUAD_PICKSPLIT 2464,74427
#define F_SPG_QUAD_INNER_CONSISTENT 2465,74461
#define F_SPG_QUAD_LEAF_CONSISTENT 2466,74502
#define F_SPG_KD_CONFIG 2467,74542
#define F_SPG_KD_CHOOSE 2468,74571
#define F_SPG_KD_PICKSPLIT 2469,74600
#define F_SPG_KD_INNER_CONSISTENT 2470,74632
#define F_SPG_TEXT_CONFIG 2471,74671
#define F_SPG_TEXT_CHOOSE 2472,74702
#define F_SPG_TEXT_PICKSPLIT 2473,74733
#define F_SPG_TEXT_INNER_CONSISTENT 2474,74767
#define F_SPG_TEXT_LEAF_CONSISTENT 2475,74808
#define F_PG_SEQUENCE_LAST_VALUE 2476,74848
#define F_JSONB_NE 2477,74886
#define F_JSONB_LT 2478,74910
#define F_JSONB_GT 2479,74934
#define F_JSONB_LE 2480,74958
#define F_JSONB_GE 2481,74982
#define F_JSONB_EQ 2482,75006
#define F_JSONB_CMP 2483,75030
#define F_JSONB_HASH 2484,75055
#define F_JSONB_CONTAINS 2485,75081
#define F_JSONB_EXISTS 2486,75111
#define F_JSONB_EXISTS_ANY 2487,75139
#define F_JSONB_EXISTS_ALL 2488,75171
#define F_JSONB_CONTAINED 2489,75203
#define F_ARRAY_AGG_ARRAY_TRANSFN 2490,75234
#define F_ARRAY_AGG_ARRAY_FINALFN 2491,75273
#define F_RANGE_MERGE 2492,75312
#define F_INET_MERGE 2493,75339
#define F_BOXES_BOUND_BOX 2494,75365
#define F_INET_SAME_FAMILY 2495,75396
#define F_BINARY_UPGRADE_SET_RECORD_INIT_PRIVS 2496,75428
#define F_REGNAMESPACEIN 2497,75480
#define F_REGNAMESPACEOUT 2498,75510
#define F_TO_REGNAMESPACE 2499,75541
#define F_REGNAMESPACERECV 2500,75572
#define F_REGNAMESPACESEND 2501,75604
#define F_POINT_BOX 2502,75636
#define F_REGROLEOUT 2503,75661
#define F_TO_REGROLE 2504,75687
#define F_REGROLERECV 2505,75713
#define F_REGROLESEND 2506,75740
#define F_REGROLEIN 2507,75767
#define F_PG_ROTATE_LOGFILE 2508,75792
#define F_PG_READ_FILE 2509,75825
#define F_BINARY_UPGRADE_SET_MISSING_VALUE 2510,75853
#define F_BRIN_INCLUSION_OPCINFO 2511,75901
#define F_BRIN_INCLUSION_ADD_VALUE 2512,75939
#define F_BRIN_INCLUSION_CONSISTENT 2513,75979
#define F_BRIN_INCLUSION_UNION 2514,76020
#define F_MACADDR8_IN 2515,76056
#define F_MACADDR8_OUT 2516,76083
#define F_MACADDR8_TRUNC 2517,76111
#define F_MACADDR8_EQ 2518,76141
#define F_MACADDR8_LT 2519,76168
#define F_MACADDR8_LE 2520,76195
#define F_MACADDR8_GT 2521,76222
#define F_MACADDR8_GE 2522,76249
#define F_MACADDR8_NE 2523,76276
#define F_MACADDR8_CMP 2524,76303
#define F_MACADDR8_NOT 2525,76331
#define F_MACADDR8_AND 2526,76359
#define F_MACADDR8_OR 2527,76387
#define F_MACADDRTOMACADDR8 2528,76414
#define F_MACADDR8TOMACADDR 2529,76447
#define F_MACADDR8_SET7BIT 2530,76480
#define F_IN_RANGE_INT8_INT8 2531,76512
#define F_IN_RANGE_INT4_INT8 2532,76546
#define F_IN_RANGE_INT4_INT4 2533,76580
#define F_IN_RANGE_INT4_INT2 2534,76614
#define F_IN_RANGE_INT2_INT8 2535,76648
#define F_IN_RANGE_INT2_INT4 2536,76682
#define F_IN_RANGE_INT2_INT2 2537,76716
#define F_IN_RANGE_DATE_INTERVAL 2538,76750
#define F_IN_RANGE_TIMESTAMP_INTERVAL 2539,76788
#define F_IN_RANGE_TIMESTAMPTZ_INTERVAL 2540,76831
#define F_IN_RANGE_INTERVAL_INTERVAL 2541,76876
#define F_IN_RANGE_TIME_INTERVAL 2542,76918
#define F_IN_RANGE_TIMETZ_INTERVAL 2543,76956
#define F_IN_RANGE_FLOAT8_FLOAT8 2544,76996
#define F_IN_RANGE_FLOAT4_FLOAT8 2545,77034
#define F_IN_RANGE_NUMERIC_NUMERIC 2546,77072
#define F_PG_LSN_LARGER 2547,77112
#define F_PG_LSN_SMALLER 2548,77141
#define F_REGCOLLATIONIN 2549,77171
#define F_REGCOLLATIONOUT 2550,77201
#define F_TO_REGCOLLATION 2551,77232
#define F_REGCOLLATIONRECV 2552,77263
#define F_REGCOLLATIONSEND 2553,77295
#define F_TS_HEADLINE_JSONB_BYID_OPT 2554,77327
#define F_TS_HEADLINE_JSONB_BYID 2555,77369
#define F_TS_HEADLINE_JSONB_OPT 2556,77407
#define F_TS_HEADLINE_JSONB 2557,77444
#define F_TS_HEADLINE_JSON_BYID_OPT 2558,77477
#define F_TS_HEADLINE_JSON_BYID 2559,77518
#define F_TS_HEADLINE_JSON_OPT 2560,77555
#define F_TS_HEADLINE_JSON 2561,77591
#define F_JSONB_STRING_TO_TSVECTOR 2562,77623
#define F_JSON_STRING_TO_TSVECTOR 2563,77663
#define F_JSONB_STRING_TO_TSVECTOR_BYID 2564,77702
#define F_JSON_STRING_TO_TSVECTOR_BYID 2565,77747
#define F_JSONB_TO_TSVECTOR 2566,77791
#define F_JSONB_TO_TSVECTOR_BYID 2567,77824
#define F_JSON_TO_TSVECTOR 2568,77862
#define F_JSON_TO_TSVECTOR_BYID 2569,77894
#define F_PG_COPY_PHYSICAL_REPLICATION_SLOT_A 2570,77931
#define F_PG_COPY_PHYSICAL_REPLICATION_SLOT_B 2571,77982
#define F_PG_COPY_LOGICAL_REPLICATION_SLOT_A 2572,78033
#define F_PG_COPY_LOGICAL_REPLICATION_SLOT_B 2573,78083
#define F_PG_COPY_LOGICAL_REPLICATION_SLOT_C 2574,78133
#define F_UNICODE_NORMALIZE_FUNC 2575,78183
#define F_UNICODE_IS_NORMALIZED 2576,78221
#define F_PG_EVENT_TRIGGER_TABLE_REWRITE_OID 2577,78258
#define F_PG_EVENT_TRIGGER_TABLE_REWRITE_REASON 2578,78308
#define F_PG_EVENT_TRIGGER_DDL_COMMANDS 2579,78361
#define F_PHRASETO_TSQUERY 2580,78406
#define F_TSQUERY_PHRASE 2581,78438
#define F_TSQUERY_PHRASE_DISTANCE 2582,78468
#define F_PHRASETO_TSQUERY_BYID 2583,78507
#define F_WEBSEARCH_TO_TSQUERY_BYID 2584,78544
#define F_WEBSEARCH_TO_TSQUERY 2585,78585
#define F_SPG_BBOX_QUAD_CONFIG 2586,78621
#define F_SPG_POLY_QUAD_COMPRESS 2587,78657
#define F_SPG_BOX_QUAD_CONFIG 2588,78695
#define F_SPG_BOX_QUAD_CHOOSE 2589,78730
#define F_SPG_BOX_QUAD_PICKSPLIT 2590,78765
#define F_SPG_BOX_QUAD_INNER_CONSISTENT 2591,78803
#define F_SPG_BOX_QUAD_LEAF_CONSISTENT 2592,78848
#define F_PG_MCV_LIST_IN 2593,78892
#define F_PG_MCV_LIST_OUT 2594,78922
#define F_PG_MCV_LIST_RECV 2595,78953
#define F_PG_MCV_LIST_SEND 2596,78985
#define F_PG_LSN_PLI 2597,79017
#define F_PG_LSN_MII 2598,79043
#define F_SATISFIES_HASH_PARTITION 2599,79069
#define F_PG_LS_TMPDIR_NOARGS 2600,79109
#define F_PG_LS_TMPDIR_1ARG 2601,79144
#define F_PG_LS_ARCHIVE_STATUSDIR 2602,79177
#define F_NETWORK_SORTSUPPORT 2603,79216
#define F_XID8LT 2604,79251
#define F_XID8GT 2605,79273
#define F_XID8LE 2606,79295
#define F_XID8GE 2607,79317
#define F_MATCHINGSEL 2608,79339
#define F_MATCHINGJOINSEL 2609,79366
#define F_NUMERIC_MIN_SCALE 2610,79397
#define F_NUMERIC_TRIM_SCALE 2611,79430
#define F_INT4GCD 2612,79464
#define F_INT8GCD 2613,79487
#define F_INT4LCM 2614,79510
#define F_INT8LCM 2615,79533
#define F_NUMERIC_GCD 2616,79556
#define F_NUMERIC_LCM 2617,79583
#define F_BTVARSTREQUALIMAGE 2618,79610
#define F_BTEQUALIMAGE 2619,79644
#define F_PG_GET_SHMEM_ALLOCATIONS 2620,79672
#define F_PG_STAT_GET_INS_SINCE_VACUUM 2621,79712
#define F_JSONB_SET_LAX 2622,79756
#define F_XID8IN 2623,79785
#define F_XID8TOXID 2624,79807
#define F_XID8OUT 2625,79832
#define F_XID8RECV 2626,79855
#define F_XID8SEND 2627,79879
#define F_XID8EQ 2628,79903
#define F_XID8NE 2629,79925
#define F_ANYCOMPATIBLE_IN 2630,79947
#define F_ANYCOMPATIBLE_OUT 2631,79979
#define F_ANYCOMPATIBLEARRAY_IN 2632,80012
#define F_ANYCOMPATIBLEARRAY_OUT 2633,80049
#define F_ANYCOMPATIBLEARRAY_RECV 2634,80087
#define F_ANYCOMPATIBLEARRAY_SEND 2635,80126
#define F_ANYCOMPATIBLENONARRAY_IN 2636,80165
#define F_ANYCOMPATIBLENONARRAY_OUT 2637,80205
#define F_ANYCOMPATIBLERANGE_IN 2638,80246
#define F_ANYCOMPATIBLERANGE_OUT 2639,80283
#define F_XID8CMP 2640,80321
#define F_PG_REPLICATION_ORIGIN_CREATE 2641,80344
#define F_PG_REPLICATION_ORIGIN_DROP 2642,80388
#define F_PG_REPLICATION_ORIGIN_OID 2643,80430
#define F_PG_REPLICATION_ORIGIN_SESSION_SETUP 2644,80471
#define F_PG_REPLICATION_ORIGIN_SESSION_RESET 2645,80522
#define F_PG_REPLICATION_ORIGIN_SESSION_IS_SETUP 2646,80573
#define F_PG_REPLICATION_ORIGIN_SESSION_PROGRESS 2647,80627
#define F_PG_REPLICATION_ORIGIN_XACT_SETUP 2648,80681
#define F_PG_REPLICATION_ORIGIN_XACT_RESET 2649,80729
#define F_PG_REPLICATION_ORIGIN_ADVANCE 2650,80777
#define F_PG_REPLICATION_ORIGIN_PROGRESS 2651,80822
#define F_PG_SHOW_REPLICATION_ORIGIN_STATUS 2652,80868
#define F_NUMERIC_PG_LSN 2653,80917
#define F_PG_STAT_GET_SUBSCRIPTION 2654,80947
#define F_PG_GET_PUBLICATION_TABLES 2655,80987
#define F_PG_GET_REPLICA_IDENTITY_INDEX 2656,81028
#define F_PG_RELATION_IS_PUBLISHABLE 2657,81073
#define F_PG_XACT_COMMIT_TIMESTAMP_ORIGIN 2658,81115

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mmgr/mcxt.c,1579
MemoryContext CurrentMemoryContext 38,1081
MemoryContext TopMemoryContext 44,1266
MemoryContext ErrorContext 45,1305
MemoryContext PostmasterContext 46,1340
MemoryContext CacheMemoryContext 47,1380
MemoryContext MessageContext 48,1421
MemoryContext TopTransactionContext 49,1458
MemoryContext CurTransactionContext 50,1502
MemoryContext PortalContext 53,1617
#define AssertNotInCriticalSection(67,2194
MemoryContextInit(92,3176
MemoryContextReset(136,4740
MemoryContextResetOnly(155,5252
MemoryContextResetChildren(188,6317
MemoryContextDelete(211,6906
MemoryContextDeleteChildren(256,8398
MemoryContextRegisterResetCallback(285,9460
MemoryContextCallResetCallbacks(302,9946
MemoryContextSetIdentifier(329,10822
MemoryContextSetParent(354,11823
MemoryContextAllowInCriticalSection(411,13376
GetMemoryChunkSpace(427,13787
MemoryContextGetParent(439,14054
MemoryContextIsEmpty(451,14264
MemoryContextMemAllocated(470,14747
MemoryContextStats(498,15419
MemoryContextStatsDetail(510,15704
MemoryContextStatsInternal(533,16392
MemoryContextStatsPrint(606,18268
MemoryContextCheck(667,19695
MemoryContextContains(691,20403
MemoryContextCreate(748,22781
MemoryContextAlloc(796,23981
MemoryContextAllocZero(839,25129
MemoryContextAllocZeroAligned(877,26056
MemoryContextAllocExtended(912,26859
palloc(949,27777
palloc0(980,28510
palloc_extended(1013,29279
pfree(1056,30329
repalloc(1069,30579
MemoryContextAllocHuge(1105,31450
repalloc_huge(1139,32273
MemoryContextStrdup(1173,33082
pstrdup(1186,33302
pnstrdup(1197,33508
pchomp(1214,33752

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mmgr/dsa.c,3938
#define DSA_INITIAL_SEGMENT_SIZE 68,3434
#define DSA_NUM_SEGMENTS_AT_EACH_SIZE 77,3853
#define DSA_OFFSET_WIDTH 85,4141
#define DSA_OFFSET_WIDTH 87,4214
#define DSA_MAX_SEGMENTS 94,4424
#define DSA_OFFSET_BITMASK 98,4581
#define DSA_MAX_SEGMENT_SIZE 101,4694
#define DSA_PAGES_PER_SUPERBLOCK	104,4823
#define DSA_SEGMENT_HEADER_MAGIC 111,5038
#define DSA_MAKE_POINTER(114,5144
#define DSA_EXTRACT_SEGMENT_NUMBER(118,5316
#define DSA_EXTRACT_OFFSET(121,5428
typedef size_t dsa_segment_index;124,5548
#define DSA_SEGMENT_INDEX_NONE 127,5654
#define DSA_NUM_SEGMENT_BINS 133,5850
#define contiguous_pages_to_segment_bin(140,6099
#define DSA_AREA_LOCK(143,6215
#define DSA_SCLASS_LOCK(144,6266
	uint32		magic;154,6598
	size_t		usable_pages;156,6686
	size_t		size;158,6753
	dsa_segment_index prev;164,6907
	dsa_segment_index next;170,7069
	size_t		bin;172,7150
	bool		freed;178,7291
} dsa_segment_header;179,7305
	dsa_pointer pool;196,8041
	dsa_pointer prevspan;197,8085
	dsa_pointer nextspan;198,8130
	dsa_pointer start;199,8171
	size_t		npages;200,8217
	uint16		size_class;201,8267
	uint16		ninitialized;202,8307
	uint16		nallocatable;203,8378
	uint16		firstfree;204,8448
	uint16		nmax;205,8502
	uint16		fclass;206,8566
} dsa_area_span;207,8615
#define NextFreeObjectIndex(213,8787
static const uint16 dsa_size_classes[dsa_size_classes236,10055
#define DSA_NUM_SIZE_CLASSES	247,10665
#define DSA_SCLASS_BLOCK_OF_SPANS	250,10753
#define DSA_SCLASS_SPAN_LARGE	251,10790
static const uint8 dsa_size_class_map[dsa_size_class_map259,11080
#define DSA_SIZE_CLASS_MAP_QUANTUM	269,11638
#define DSA_FULLNESS_CLASSES	277,11935
	LWLock		lock;288,12237
	dsa_pointer spans[spans290,12313
} dsa_area_pool;292,12410
	dsa_segment_header segment_header;301,12631
	dsa_handle	handle;303,12700
	dsm_handle	segment_handles[segment_handles305,12775
	dsa_segment_index segment_bins[segment_bins307,12896
	dsa_area_pool pools[pools309,12996
	size_t		total_segment_size;311,13086
	size_t		max_total_segment_size;313,13180
	dsa_segment_index high_segment_index;315,13276
	int			refcnt;317,13357
	bool		pinned;319,13429
	size_t		freed_segment_counter;321,13502
	int			lwlock_tranche_id;323,13564
	LWLock		lock;325,13657
} dsa_area_control;326,13672
#define DsaAreaPoolToDsaPointer(329,13746
	dsm_segment *segment;segment341,14184
	char	   *mapped_address;mapped_address342,14226
	dsa_segment_header *header;header343,14293
	FreePageManager *fpm;fpm344,14360
	dsa_pointer *pagemap;pagemap345,14424
} dsa_segment_map;346,14479
struct dsa_area354,14754
	dsa_area_control *control;control357,14827
	bool		mapping_pinned;360,14892
	dsa_segment_map segment_maps[segment_maps368,15210
	dsa_segment_index high_segment_index;371,15323
	size_t		freed_segment_counter;374,15411
#define DSA_SPAN_NOTHING_FREE	377,15447
#define DSA_SUPERBLOCK_SIZE 378,15491
#define get_segment_index(381,15634
dsa_create(420,17557
dsa_create_in_place(469,19319
dsa_get_handle(494,19939
dsa_attach(506,20255
dsa_attach_in_place(541,21366
dsa_on_dsm_detach_release_in_place(572,22433
dsa_on_shmem_exit_release_in_place(586,23006
dsa_release_in_place(601,23525
dsa_pin_mapping(631,24280
dsa_allocate_extended(665,25499
dsa_free(820,30236
dsa_get_address(932,34013
dsa_pin(965,34933
dsa_unpin(984,35392
dsa_set_size_limit(1008,36135
dsa_trim(1020,36441
dsa_dump(1065,37687
dsa_minimum_size(1169,40739
create_internal(1191,41181
attach_internal(1294,44769
init_span(1345,46454
transfer_first_span(1400,48104
alloc_object(1440,49128
ensure_active_superblock(1528,52361
get_segment_by_index(1725,58531
destroy_superblock(1803,61453
unlink_span(1867,63688
add_span_to_fullness_class(1890,64162
dsa_detach(1913,64740
unlink_segment(1939,65518
get_best_segment(1971,66479
make_new_segment(2063,69031
check_for_freed_segments(2232,75321
check_for_freed_segments_locked(2268,76905

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mmgr/memdebug.c,23
randomize_mem(75,3233

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mmgr/portalmem.c,1144
#define PORTALS_PER_USER	38,1238
#define MAX_PORTALNAME_LEN	46,1333
typedef struct portalhashent48,1374
	char		portalname[portalname50,1405
	Portal		portal;51,1444
} PortalHashEnt;52,1461
static HTAB *PortalHashTable PortalHashTable54,1479
#define PortalHashTableLookup(56,1517
#define PortalHashTableInsert(68,1782
#define PortalHashTableDelete(81,2188
static MemoryContext TopPortalContext 91,2478
EnablePortalManager(104,2806
GetPortalByName(130,3390
PortalGetPrimaryStmt(151,3883
CreatePortal(175,4324
CreateNewPortal(234,6048
PortalDefineQuery(281,7761
PortalReleaseCachedPlan(309,8465
PortalCreateHoldStore(330,8896
PinPortal(370,9919
UnpinPortal(379,10052
MarkPortalActive(394,10346
MarkPortalDone(413,10897
MarkPortalFailed(441,11644
PortalDrop(467,12262
PortalHashTableDeleteAll(603,16715
HoldPortal(632,17346
PreCommit_Portals(672,18537
AtAbort_Portals(774,21404
AtCleanup_Portals(851,23546
PortalErrorCleanup(910,25075
AtSubCommit_Portals(936,25561
AtSubAbort_Portals(970,26468
AtSubCleanup_Portals(1083,30387
pg_cursor(1122,31363
ThereAreNoReadyPortals(1209,34182
HoldPinnedPortals(1245,35366

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mmgr/freepage.c,2310
#define FREE_PAGE_SPAN_LEADER_MAGIC	63,2952
#define FREE_PAGE_LEAF_MAGIC	64,3000
#define FREE_PAGE_INTERNAL_MAGIC	65,3042
struct FreePageSpanLeader68,3167
	int			magic;70,3195
	Size		npages;71,3252
	RelptrFreePageSpanLeader prev;72,3299
	RelptrFreePageSpanLeader next;73,3331
typedef struct FreePageBtreeHeader77,3422
	int			magic;79,3459
	Size		nused;81,3541
	RelptrFreePageBtree parent;82,3584
} FreePageBtreeHeader;83,3626
typedef struct FreePageBtreeInternalKey86,3701
	Size		first_page;88,3743
	RelptrFreePageBtree child;89,3802
} FreePageBtreeInternalKey;90,3845
typedef struct FreePageBtreeLeafKey93,3907
	Size		first_page;95,3945
	Size		npages;96,3990
} FreePageBtreeLeafKey;97,4037
#define FPM_ITEMS_PER_INTERNAL_PAGE 100,4111
#define FPM_ITEMS_PER_LEAF_PAGE 103,4237
struct FreePageBtree108,4390
	FreePageBtreeHeader hdr;110,4413
		FreePageBtreeInternalKey internal_key[internal_key113,4449
		FreePageBtreeLeafKey leaf_key[leaf_key114,4519
	}			u;115,4577
typedef struct FreePageBtreeSearchResult119,4621
	FreePageBtree *page;page121,4664
	Size		index;122,4686
	bool		found;123,4700
	unsigned	split_pages;124,4714
} FreePageBtreeSearchResult;125,4737
FreePageManagerInitialize(183,7577
FreePageManagerGet(210,8399
sum_free_pages_recurse(252,9802
sum_free_pages(274,10311
FreePageManagerLargestContiguous(324,11329
FreePageManagerUpdateLargest(366,12127
FreePageManagerPut(379,12396
FreePageManagerDump(424,13639
FreePageBtreeAdjustAncestorKeys(501,16043
FreePageBtreeCleanup(580,17820
FreePageBtreeConsolidate(695,21221
FreePageBtreeFindLeftSibling(774,23719
FreePageBtreeFindRightSibling(819,24727
FreePageBtreeFirstKey(863,25646
FreePageBtreeGetRecycled(880,26015
FreePageBtreeInsertInternal(900,26571
FreePageBtreeInsertLeaf(917,27162
FreePageBtreeRecycle(934,27687
FreePageBtreeRemove(955,28343
FreePageBtreeRemovePage(987,29295
FreePageBtreeSearch(1064,31659
FreePageBtreeSearchInternal(1140,33704
FreePageBtreeSearchLeaf(1170,34369
FreePageBtreeSplitPage(1201,35113
FreePageBtreeUpdateParentPointers(1232,36048
FreePageManagerDumpBtree(1250,36411
FreePageManagerDumpSpans(1296,37828
FreePageManagerGetInternal(1319,38414
FreePageManagerPutInternal(1476,43554
FreePagePopSpanLeader(1843,55710
FreePagePushSpanLeader(1871,56435

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mmgr/aset.c,2066
#define ALLOC_MINBITS	79,3453
#define ALLOCSET_NUM_FREELISTS	80,3515
#define ALLOC_CHUNK_LIMIT	81,3549
#define ALLOC_CHUNK_FRACTION	83,3680
#define ALLOC_BLOCKHDRSZ	100,4366
#define ALLOC_CHUNKHDRSZ	101,4424
typedef struct AllocBlockData *AllocBlock;AllocBlock103,4480
typedef struct AllocChunkData *AllocChunk;AllocChunk104,4547
typedef void *AllocPointer;AllocPointer110,4678
typedef struct AllocSetContext121,5112
	MemoryContextData header;123,5145
	AllocBlock	blocks;125,5262
	AllocChunk	freelist[freelist126,5325
	Size		initBlockSize;128,5441
	Size		maxBlockSize;129,5488
	Size		nextBlockSize;130,5534
	Size		allocChunkLimit;131,5590
	AllocBlock	keeper;132,5647
	int			freeListIndex;134,5775
} AllocSetContext;135,5839
typedef AllocSetContext *AllocSet;AllocSet137,5859
typedef struct AllocBlockData151,6424
	AllocSet	aset;153,6456
	AllocBlock	prev;154,6506
	AllocBlock	next;155,6573
	char	   *freeptr;freeptr156,6640
	char	   *endptr;endptr157,6700
}			AllocBlockData;158,6753
typedef struct AllocChunkData172,7327
	Size		size;175,7423
	Size		requested_size;179,7572
#define ALLOCCHUNK_RAWSIZE 181,7596
#define ALLOCCHUNK_RAWSIZE 183,7666
	void	   *aset;aset192,8031
}			AllocChunkData;194,8119
#define ALLOCCHUNK_PRIVATE_LEN	202,8395
#define AllocPointerIsValid(208,8538
#define AllocSetIsValid(214,8668
#define AllocPointerGetChunk(216,8718
#define AllocChunkGetPointer(218,8810
#define MAX_FREE_CONTEXTS 244,10220
typedef struct AllocSetFreeList246,10292
	int			num_free;248,10326
	AllocSetContext *first_free;first_free249,10370
} AllocSetFreeList;250,10418
static AllocSetFreeList context_freelists[context_freelists253,10510
static const MemoryContextMethods AllocSetMethods 284,11411
AllocSetFreeIndex(308,11910
AllocSetContextCreateInternal(378,13756
AllocSetReset(558,19947
AllocSetDelete(626,21562
AllocSetAlloc(720,24040
AllocSetFree(992,31703
AllocSetRealloc(1074,34211
AllocSetGetChunkSpace(1303,41549
AllocSetIsEmpty(1319,41945
AllocSetStats(1341,42573
AllocSetCheck(1406,44169

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mmgr/generation.c,1417
#define Generation_BLOCKHDRSZ	46,1714
#define Generation_CHUNKHDRSZ	47,1778
typedef struct GenerationBlock GenerationBlock;49,1833
typedef struct GenerationChunk GenerationChunk;50,1905
typedef void *GenerationPointer;GenerationPointer52,1954
typedef struct GenerationContext58,2122
	MemoryContextData header;60,2157
	Size		blockSize;63,2261
	GenerationBlock *block;block65,2307
	dlist_head	blocks;66,2379
} GenerationContext;67,2422
struct GenerationBlock81,3020
	dlist_node	node;83,3045
	Size		blksize;84,3100
	int			nchunks;85,3152
	int			nfree;86,3205
	char	   *freeptr;freeptr87,3249
	char	   *endptr;endptr88,3309
struct GenerationChunk103,3934
	Size		size;106,4023
	Size		requested_size;110,4172
#define GENERATIONCHUNK_RAWSIZE 112,4196
#define GENERATIONCHUNK_RAWSIZE 114,4275
	GenerationBlock *block;block122,4585
	GenerationContext *context;context123,4641
#define GENERATIONCHUNK_PRIVATE_LEN	133,5032
#define GenerationIsValid(139,5174
#define GenerationPointerGetChunk(141,5226
#define GenerationChunkGetPointer(143,5331
static const MemoryContextMethods GenerationMethods 167,6274
GenerationContextCreate(196,6810
GenerationReset(266,8925
GenerationDelete(303,9658
GenerationAlloc(325,10370
GenerationFree(461,14300
GenerationRealloc(522,15992
GenerationGetChunkSpace(638,19584
GenerationIsEmpty(654,20018
GenerationStats(673,20584
GenerationCheck(731,22086

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/mmgr/slab.c,1087
typedef struct SlabContext62,2413
	MemoryContextData header;64,2442
	Size		chunkSize;66,2553
	Size		fullChunkSize;67,2589
	Size		blockSize;68,2659
	Size		headerSize;69,2695
	int			chunksPerBlock;70,2754
	int			minFreeChunks;71,2810
	int			nblocks;72,2877
	bool	   *freechunks;freechunks74,2958
	dlist_head	freelist[freelist77,3092
} SlabContext;78,3137
typedef struct SlabBlock88,3379
	dlist_node	node;90,3406
	int			nfree;91,3451
	int			firstFreeChunk;92,3495
} SlabBlock;93,3567
typedef struct SlabChunk106,4092
	SlabBlock  *block;block108,4119
	SlabContext *slab;slab109,4171
} SlabChunk;111,4286
#define SlabPointerGetChunk(114,4301
#define SlabChunkGetPointer(116,4390
#define SlabBlockGetChunk(118,4474
#define SlabBlockStart(121,4613
#define SlabChunkIndex(123,4683
static const MemoryContextMethods SlabMethods 146,5563
SlabContextCreate(174,6149
SlabReset(282,9317
SlabDelete(325,10174
SlabAlloc(339,10492
SlabFree(497,15162
SlabRealloc(585,18148
SlabGetChunkSpace(605,18669
SlabIsEmpty(619,18908
SlabStats(637,19336
SlabCheck(698,20797

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/cache/evtcache.c,541
	ETCS_NEEDS_REBUILD,37,982
	ETCS_REBUILD_STARTED,38,1003
	ETCS_VALID39,1026
} EventTriggerCacheStateType;40,1038
	EventTriggerEvent event;44,1086
	List	   *triggerlist;triggerlist45,1112
} EventTriggerCacheEntry;46,1135
static HTAB *EventTriggerCache;EventTriggerCache48,1162
static MemoryContext EventTriggerCacheContext;49,1194
static EventTriggerCacheStateType EventTriggerCacheState 50,1241
EventCacheLookup(65,1799
BuildEventTriggerCache(79,2121
DecodeTextArrayToBitmapset(223,6413
InvalidateEventCacheCallback(257,7221

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/cache/relmapper.c,1600
#define RELMAPPER_FILENAME	73,3258
#define RELMAPPER_FILEMAGIC	75,3305
#define MAX_MAPPINGS	77,3367
typedef struct RelMapping79,3418
	Oid			mapoid;81,3446
	Oid			mapfilenode;82,3486
} RelMapping;83,3532
typedef struct RelMapFile85,3547
	int32		magic;87,3575
	int32		num_mappings;88,3625
	RelMapping	mappings[mappings89,3688
	pg_crc32c	crc;90,3724
	int32		pad;91,3765
} RelMapFile;92,3825
typedef struct SerializedActiveRelMaps98,3999
	RelMapFile	active_shared_updates;100,4040
	RelMapFile	active_local_updates;101,4075
} SerializedActiveRelMaps;102,4109
static RelMapFile shared_map;109,4347
static RelMapFile local_map;110,4377
static RelMapFile active_shared_updates;128,5296
static RelMapFile active_local_updates;129,5337
static RelMapFile pending_shared_updates;130,5377
static RelMapFile pending_local_updates;131,5419
RelationMapOidToFilenode(159,6426
RelationMapFilenodeToOid(212,7698
RelationMapUpdateMap(261,8815
apply_map_update(319,10160
merge_map_updates(351,10984
RelationMapRemoveMapping(373,11536
RelationMapInvalidate(403,12378
RelationMapInvalidateAll(425,12818
AtCCI_RelationMap(439,13114
AtEOXact_RelationMap(476,14348
AtPrepare_RelationMap(523,15690
CheckPointRelationMap(546,16587
RelationMapFinishBootstrap(560,16924
RelationMapInitialize(584,17691
RelationMapInitializePhase2(604,18264
RelationMapInitializePhase3(625,18699
EstimateRelationMapSpace(646,19070
SerializeRelationMap(657,19258
RestoreRelationMap(674,19679
load_relmap_file(698,20431
write_relmap_file(796,23360
perform_relmap_update(945,27641
relmap_redo(993,29251

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/cache/lsyscache.c,3280
get_attavgwidth_hook_type get_attavgwidth_hook 51,1537
op_in_opfamily(64,1821
get_op_opfamily_strategy(81,2248
get_op_opfamily_sortfamily(106,2822
get_op_opfamily_properties(134,3514
get_opfamily_member(164,4387
get_ordering_op_properties(205,5995
get_equality_op_for_ordering_op(265,7583
get_ordering_op_for_equality_op(303,8789
get_mergejoin_opfamilies(364,10864
get_compatible_hash_operators(408,12208
get_op_hash_functions(508,14942
get_op_btree_interpretation(599,17438
equality_ops_are_compatible(696,20297
comparison_ops_are_compatible(747,21514
get_opfamily_proc(794,22458
get_attname(825,23299
get_attnum(856,24012
get_attgenerated(886,24617
get_atttype(911,25190
get_atttypetypmodcoll(941,25853
get_attoptions(968,26515
get_cast_oid(1005,27305
get_collation_name(1033,28115
get_collation_isdeterministic(1052,28459
get_constraint_name(1079,29190
get_language_name(1100,29588
get_opclass_family(1129,30172
get_opclass_input_type(1151,30624
get_opclass_opfamily_and_input_type(1174,31154
get_opcode(1202,31723
get_opname(1227,32214
get_op_rettype(1250,32620
op_input_types(1275,33059
op_mergejoinable(1303,34098
op_hashjoinable(1354,35558
op_strict(1389,36358
op_volatile(1405,36652
get_commutator(1421,36941
get_negator(1445,37330
get_oprrest(1469,37741
get_oprjoin(1493,38167
get_func_name(1520,38716
get_func_namespace(1544,39140
get_func_rettype(1567,39546
get_func_nargs(1586,39937
get_func_signature(1608,40442
get_func_variadictype(1635,41143
get_func_retset(1654,41548
func_strict(1673,41943
func_volatile(1692,42338
func_parallel(1711,42735
get_func_prokind(1730,43122
get_func_leakproof(1749,43524
get_func_support(1770,43984
get_relname_relid(1797,44518
get_relnatts(1811,44817
get_rel_name(1840,45407
get_rel_namespace(1864,45826
get_rel_type_id(1891,46349
get_rel_relkind(1915,46746
get_rel_relispartition(1939,47156
get_rel_tablespace(1966,47706
get_rel_persistence(1990,48123
get_transform_fromsql(2010,48531
get_transform_tosql(2031,48912
get_typisdefined(2061,49465
get_typlen(2085,49855
get_typbyval(2110,50310
get_typlenbyval(2139,50977
get_typlenbyvalalign(2159,51451
getTypeIOParam(2191,52613
get_type_io_data(2213,53152
get_typalign(2287,54727
get_typstorage(2307,55043
get_typdefault(2336,55717
getBaseType(2409,57346
getBaseTypeAndTypmod(2426,57792
get_typavgwidth(2466,58719
get_typtype(2517,59918
type_is_rowtype(2543,60433
type_is_enum(2566,60828
type_is_range(2576,60985
get_type_category_preferred(2588,61207
get_typ_typrelid(2609,61729
get_element_type(2636,62277
get_array_type(2664,62793
get_promoted_array_type(2688,63408
get_base_element_type(2709,63944
getTypeInputInfo(2751,64798
getTypeOutputInfo(2784,65615
getTypeBinaryInputInfo(2817,66467
getTypeBinaryOutputInfo(2850,67319
get_typmodin(2883,68178
get_typmodout(2908,68598
get_typcollation(2933,69030
type_is_collatable(2958,69429
get_attavgwidth(2980,70052
get_attstatsslot(3052,72801
free_attstatsslot(3169,76090
get_namespace_name(3191,76679
get_namespace_name_or_temp(3215,77153
get_range_subtype(3232,77474
get_range_collation(3258,77973
get_index_column_opclass(3287,78549
get_index_isreplident(3334,79568
get_index_isvalid(3357,79997
get_index_isclustered(3380,80475

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/cache/relfilenodemap.c,398
static HTAB *RelfilenodeMapHash RelfilenodeMapHash33,954
static ScanKeyData relfilenode_skey[relfilenode_skey36,1054
	Oid			reltablespace;40,1112
	Oid			relfilenode;41,1134
} RelfilenodeMapKey;42,1154
	RelfilenodeMapKey key;46,1193
	Oid			relid;47,1251
} RelfilenodeMapEntry;48,1286
RelfilenodeMapInvalidateCallback(55,1439
InitializeRelfilenodeMap(89,2413
RelidByRelfilenode(141,3841

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/cache/partcache.c,173
RelationGetPartitionKey(54,1728
RelationBuildPartitionKey(81,2780
RelationGetPartitionQual(276,9165
get_partition_qual_relid(298,9787
generate_partition_qual(336,10848

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/cache/attoptcache.c,318
static HTAB *AttoptCacheHash AttoptCacheHash28,828
	Oid			attrelid;33,952
	int			attnum;34,969
} AttoptCacheKey;35,984
	AttoptCacheKey key;39,1020
	AttributeOpts *opts;opts40,1076
} AttoptCacheEntry;41,1130
InvalidateAttoptCacheCallback(54,1522
InitializeAttoptCache(77,2050
get_attribute_options(104,2692

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/cache/spccache.c,381
static HTAB *TableSpaceCacheHash TableSpaceCacheHash35,1086
	Oid			oid;39,1145
	TableSpaceOpts *opts;opts40,1192
} TableSpaceCacheEntry;41,1247
InvalidateTableSpaceCacheCallback(54,1678
InitializeTableSpaceCache(77,2208
get_tablespace(107,2993
get_tablespace_page_costs(182,4904
get_tablespace_io_concurrency(215,5674
get_tablespace_maintenance_io_concurrency(229,5976

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/cache/ts_cache.c,812
#define MAXTOKENTYPE	59,1965
#define MAXDICTSPERTT	60,1990
static HTAB *TSParserCacheHash TSParserCacheHash63,2018
static TSParserCacheEntry *lastUsedParser lastUsedParser64,2057
static HTAB *TSDictionaryCacheHash TSDictionaryCacheHash66,2108
static TSDictionaryCacheEntry *lastUsedDictionary lastUsedDictionary67,2151
static HTAB *TSConfigCacheHash TSConfigCacheHash69,2210
static TSConfigCacheEntry *lastUsedConfig lastUsedConfig70,2249
char	   *TSCurrentConfig TSCurrentConfig75,2382
static Oid	TSCurrentConfigCache 77,2416
InvalidateTSCacheCallBack(93,2996
lookup_ts_parser_cache(112,3492
lookup_ts_dictionary_cache(210,6226
init_ts_config_cache(365,10582
lookup_ts_config_cache(389,11310
getTSCurrentConfig(560,15959
check_TSCurrentConfig(591,16677
assign_TSCurrentConfig(652,18246

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/cache/inval.c,3092
typedef struct InvalidationChunk127,6303
	struct InvalidationChunk *next;next129,6338
	int			nitems;130,6387
	int			maxitems;131,6444
	SharedInvalidationMessage msgs[msgs132,6506
} InvalidationChunk;133,6562
typedef struct InvalidationListHeader135,6584
	InvalidationChunk *cclist;cclist137,6624
	InvalidationChunk *rclist;rclist138,6695
} InvalidationListHeader;139,6766
typedef struct TransInvalidationInfo158,7588
	struct TransInvalidationInfo *parent;parent161,7673
	int			my_level;164,7749
	InvalidationListHeader CurrentCmdInvalidMsgs;167,7809
	InvalidationListHeader PriorCmdInvalidMsgs;170,7901
	bool		RelcacheInitFileInval;173,7985
} TransInvalidationInfo;174,8015
static TransInvalidationInfo *transInvalInfo transInvalInfo176,8041
static SharedInvalidationMessage *SharedInvalidMessagesArray;SharedInvalidMessagesArray178,8095
static int	numSharedInvalidMessagesArray;179,8157
static int	maxSharedInvalidMessagesArray;180,8199
#define MAX_SYSCACHE_CALLBACKS 193,8680
#define MAX_RELCACHE_CALLBACKS 194,8714
static struct SYSCACHECALLBACK196,8749
	int16		id;198,8782
	int16		link;199,8816
	SyscacheCallbackFunction function;200,8875
	Datum		arg;201,8911
}			syscache_callback_list[syscache_callback_list202,8924
static int16 syscache_callback_links[syscache_callback_links204,8977
static int	syscache_callback_count 206,9030
static struct RELCACHECALLBACK208,9071
	RelcacheCallbackFunction function;210,9104
	Datum		arg;211,9140
}			relcache_callback_list[relcache_callback_list212,9153
static int	relcache_callback_count 214,9206
AddInvalidationMessage(232,9768
#define FIRSTCHUNKSIZE 240,9973
AppendInvalidationMessageList(274,10948
#define ProcessMessageList(298,11467
#define ProcessMessageListMulti(318,12033
AddCatcacheInvalidationMessage(342,12706
AddCatalogInvalidationMessage(370,13548
AddRelcacheInvalidationMessage(388,13965
AddSnapshotInvalidationMessage(418,14797
AppendInvalidationMessages(445,15544
ProcessInvalidationMessages(459,15962
ProcessInvalidationMessagesMulti(471,16292
RegisterCatcacheInvalidation(489,16829
RegisterCatalogInvalidation(503,17158
RegisterRelcacheInvalidation(515,17418
RegisterSnapshotInvalidation(545,18473
LocalExecuteInvalidationMessage(559,18841
InvalidateSystemCaches(646,21198
AcceptInvalidationMessages(684,22072
PrepareInvalidationState(735,23543
PostPrepare_Inval(772,24611
MakeSharedInvalidMessagesArray(781,24755
xactGetCommittedInvalidationMessages(831,26434
ProcessCommittedInvalidationMessages(887,28320
AtEOXact_Inval(952,30517
AtEOSubXact_Inval(1011,32401
CommandEndInvalidationMessages(1088,34521
CacheInvalidateHeapTuple(1122,35656
CacheInvalidateCatalog(1254,39576
CacheInvalidateRelcache(1278,40173
CacheInvalidateRelcacheAll(1302,40704
CacheInvalidateRelcacheByTuple(1314,40945
CacheInvalidateRelcacheByRelid(1337,41548
CacheInvalidateSmgr(1377,43162
CacheInvalidateRelmap(1407,44272
CacheRegisterSyscacheCallback(1434,45155
CacheRegisterRelcacheCallback(1476,46549
CallSyscacheCallbacks(1495,47091
LogLogicalInvalidations(1521,47699

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/cache/relcache.c,5017
#define RELCACHE_INIT_FILEMAGIC	90,2642
#define RECOVER_RELATION_BUILD_MEMORY 99,3043
#define RECOVER_RELATION_BUILD_MEMORY 101,3089
static const FormData_pg_attribute Desc_pg_class[Desc_pg_class108,3216
static const FormData_pg_attribute Desc_pg_attribute[Desc_pg_attribute109,3302
static const FormData_pg_attribute Desc_pg_proc[Desc_pg_proc110,3400
static const FormData_pg_attribute Desc_pg_type[Desc_pg_type111,3483
static const FormData_pg_attribute Desc_pg_database[Desc_pg_database112,3566
static const FormData_pg_attribute Desc_pg_authid[Desc_pg_authid113,3661
static const FormData_pg_attribute Desc_pg_auth_members[Desc_pg_auth_members114,3750
static const FormData_pg_attribute Desc_pg_index[Desc_pg_index115,3857
static const FormData_pg_attribute Desc_pg_shseclabel[Desc_pg_shseclabel116,3943
static const FormData_pg_attribute Desc_pg_subscription[Desc_pg_subscription117,4044
typedef struct relidcacheent125,4304
	Oid			reloid;127,4335
	Relation	reldesc;128,4350
} RelIdCacheEnt;129,4369
static HTAB *RelationIdCache;RelationIdCache131,4387
bool		criticalRelcachesBuilt 137,4577
bool		criticalSharedRelcachesBuilt 143,4762
static long relcacheInvalsReceived 151,5074
#define MAX_EOXACT_LIST 163,5700
static Oid	eoxact_list[eoxact_list164,5727
static int	eoxact_list_len 165,5768
static bool eoxact_list_overflowed 166,5800
#define EOXactListAdd(168,5845
static TupleDesc *EOXactTupleDescArray;EOXactTupleDescArray181,6251
static int	NextEOXactTupleDescNum 182,6291
static int	EOXactTupleDescArrayLen 183,6330
#define RelationCacheInsert(188,6424
#define RelationIdCacheLookup(210,7179
#define RelationCacheDelete(222,7469
typedef struct opclasscacheent240,7967
	Oid			opclassoid;242,8000
	bool		valid;243,8053
	StrategyNumber numSupport;244,8109
	Oid			opcfamily;245,8179
	Oid			opcintype;246,8228
	RegProcedure *supportProcs;supportProcs247,8290
} OpClassCacheEnt;248,8352
static HTAB *OpClassCache OpClassCache250,8372
ScanPgRelation(315,11259
AllocateRelationDesc(385,13440
RelationParseRelOptions(440,15137
RelationBuildTupleDesc(497,16613
RelationBuildRuleLock(735,23315
equalRuleLocks(896,27990
equalPolicy(941,29001
equalRSDesc(987,29963
RelationBuildDesc(1028,31023
RelationInitPhysicalAddr(1274,38590
InitIndexAmRoutine(1341,40833
RelationInitIndexAccessInfo(1365,41460
IndexSupportInitialize(1535,47076
LookupOpclassInfo(1586,48897
InitTableAmRoutine(1736,53194
RelationInitTableAccessMethod(1745,53384
formrdesc(1809,55308
RelationIdGetRelation(1997,60991
RelationIncrementReferenceCount(2070,63054
RelationDecrementReferenceCount(2083,63370
RelationClose(2103,63999
RelationReloadIndexInfo(2154,66284
RelationReloadNailed(2266,70433
RelationDestroyRelation(2338,72459
RelationClearRelation(2424,75505
#define SWAPFIELD(2602,82688
#undef SWAPFIELD2690,86134
RelationFlushRelation(2704,86456
RelationForgetRelation(2737,87421
RelationCacheInvalidateEntry(2781,88837
RelationCacheInvalidate(2824,90722
RelationCloseSmgrByOid(2927,93881
RememberToFreeTupleDescAtEOX(2940,94116
AssertPendingSyncConsistency(2969,94850
AssertPendingSyncs_RelationCache(2991,95591
AtEOXact_RelationCache(3062,97719
AtEOXact_cleanup(3125,99503
AtEOSubXact_RelationCache(3207,102216
AtEOSubXact_cleanup(3254,103445
RelationBuildLocalRelation(3336,106065
RelationSetNewRelfilenode(3580,112999
RelationAssumeNewRelfilenode(3731,117710
#define INITRELCACHESIZE	3754,118544
RelationCacheInitialize(3757,118580
RelationCacheInitializePhase2(3794,119610
#define NUM_CRITICAL_SHARED_RELS	3832,120756
RelationCacheInitializePhase3(3853,121580
#define NUM_CRITICAL_LOCAL_RELS 3889,122605
#define NUM_CRITICAL_LOCAL_INDEXES	3940,124854
#define NUM_CRITICAL_SHARED_INDEXES 3972,126014
load_critical_index(4139,131475
BuildHardcodedDescriptor(4175,132871
GetPgClassDescriptor(4205,133629
GetPgIndexDescriptor(4218,133873
AttrDefaultFetch(4234,134185
CheckConstraintFetch(4304,135991
CheckConstraintCmp(4375,138022
RelationGetFKeyList(4398,138939
RelationGetIndexList(4507,142929
RelationGetStatExtList(4626,147012
RelationGetPrimaryKeyIndex(4695,148838
RelationGetReplicaIndex(4716,149267
RelationGetIndexExpressions(4741,149992
RelationGetDummyIndexExpressions(4800,151949
RelationGetIndexPredicate(4854,153460
RelationGetIndexAttrBitmap(4937,156572
RelationGetExclusionInfo(5175,164472
GetRelationPublicationActions(5299,168644
RelationGetIndexRawAttOptions(5383,170927
CopyIndexAttOptions(5409,171510
RelationGetIndexAttOptions(5429,171921
errtable(5490,173463
errtablecol(5507,173994
errtablecolname(5531,174804
errtableconstraint(5544,175129
load_relcache_init_file(5608,177729
write_relcache_init_file(6024,189768
write_item(6232,196007
RelationIdIsInInitFile(6251,196707
RelationCacheInitFilePreInvalidate(6291,198366
RelationCacheInitFilePostInvalidate(6316,199138
RelationCacheInitFileRemove(6331,199665
RelationCacheInitFileRemoveInDir(6364,200589
unlink_initfile(6388,201200

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/cache/plancache.c,1173
#define IsTransactionStmtPlan(82,3452
static dlist_head saved_plan_list 92,3875
static dlist_head cached_expression_list 97,4019
int			plan_cache_mode;119,5242
InitPlanCache(127,5398
CreateCachedPlan(164,7373
CreateOneShotCachedPlan(248,10427
CompleteCachedPlan(338,14379
SaveCachedPlan(454,18498
DropCachedPlan(498,19954
ReleaseGenericPlan(527,20699
RevalidateCachedQuery(555,21592
CheckCachedPlan(795,29246
BuildCachedPlan(879,31737
choose_custom_plan(1019,35828
cached_plan_cost(1076,37663
GetCachedPlan(1141,39996
ReleaseCachedPlan(1264,43975
CachedPlanAllowsSimpleValidityCheck(1309,45762
CachedPlanIsSimplyValid(1424,49612
CachedPlanSetParentContext(1469,51047
CopyCachedPlan(1507,52430
CachedPlanIsValid(1598,55762
CachedPlanGetTargetList(1611,56137
GetCachedExpression(1648,57352
FreeCachedExpression(1705,58940
QueryListGetPrimaryStmt(1724,59527
AcquireExecutorLocks(1743,59847
AcquirePlannerLocks(1798,61391
ScanQueryForLocks(1823,61903
ScanQueryWalker(1882,63197
PlanCacheComputeResultDesc(1911,63995
PlanCacheRelCallback(1947,64862
PlanCacheObjectCallback(2031,67086
PlanCacheSysCallback(2140,69644
ResetPlanCache(2149,69791

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/cache/catcache.c,1782
#define HASH_INDEX(50,1389
#define CACHE_elog(58,1510
#define CACHE_elog(60,1561
static CatCacheHeader *CacheHdr CacheHdr64,1657
chareqfast(118,3698
charhashfast(124,3790
nameeqfast(130,3884
namehashfast(139,4060
int2eqfast(147,4205
int2hashfast(153,4299
int4eqfast(159,4394
int4hashfast(165,4488
texteqfast(171,4583
texthashfast(181,4856
oidvectoreqfast(188,5030
oidvectorhashfast(194,5145
GetCCHashEqFuncs(201,5302
CatalogCacheComputeHashValue(270,6803
CatalogCacheComputeTupleHashValue(319,7825
CatalogCacheCompareTuple(374,8935
CatCachePrintStats(393,9289
CatCacheRemoveCTup(457,11143
CatCacheRemoveCList(499,12137
CatCacheInvalidate(552,13606
CreateCacheMemoryContext(620,15423
ResetCatalogCache(642,15954
ResetCatalogCaches(689,16973
CatalogCacheFlushCatalog(719,17988
#define InitCatCache_DEBUG2 752,18880
#define InitCatCache_DEBUG2759,19086
InitCatCache(763,19133
RehashCatCache(860,21609
#define CatalogCacheInitializeCache_DEBUG1 902,22798
#define CatalogCacheInitializeCache_DEBUG2 906,22937
#define CatalogCacheInitializeCache_DEBUG1918,23358
#define CatalogCacheInitializeCache_DEBUG2919,23401
CatalogCacheInitializeCache(923,23464
InitCatCachePhase2(1032,26383
IndexScanOK(1083,28132
SearchCatCache(1147,29835
SearchCatCache1(1164,30219
SearchCatCache2(1172,30337
SearchCatCache3(1180,30466
SearchCatCache4(1188,30606
SearchCatCacheInternal(1198,30827
SearchCatCacheMiss(1310,33715
ReleaseCatCache(1440,37709
GetCatCacheHashValue(1472,38541
SearchCatCacheList(1506,39487
ReleaseCatCacheList(1782,46701
CatalogCacheCreateEntry(1805,47271
CatCacheFreeKeys(1911,49980
CatCacheCopyKeys(1936,50524
PrepareToInvalidateCacheTuple(2007,53124
PrintCatCacheLeakWarning(2071,54670
PrintCatCacheListLeakWarning(2087,55147

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/cache/syscache.c,1290
struct cachedesc115,3964
	Oid			reloid;117,3983
	Oid			indoid;118,4039
	int			nkeys;119,4099
	int			key[key120,4155
	int			nbuckets;121,4209
static const struct cachedesc cacheinfo[cacheinfo124,4275
static CatCache *SysCache[SysCache986,16461
static bool CacheInitialized 988,16503
static Oid	SysCacheRelationOid[SysCacheRelationOid991,16604
static int	SysCacheRelationOidSize;992,16650
static Oid	SysCacheSupportingRelOid[SysCacheSupportingRelOid995,16751
static int	SysCacheSupportingRelOidSize;996,16806
InitCatalogCache(1010,17185
InitCatalogCachePhase2(1075,19428
SearchSysCache(1103,20209
SearchSysCache1(1116,20483
SearchSysCache2(1127,20728
SearchSysCache3(1138,20991
SearchSysCache4(1149,21272
ReleaseSysCache(1164,21650
SearchSysCacheCopy(1178,22008
SearchSysCacheExists(1202,22496
GetSysCacheOid(1225,23004
SearchSysCacheAttName(1257,23792
SearchSysCacheCopyAttName(1280,24252
SearchSysCacheExistsAttName(1299,24635
SearchSysCacheAttNum(1320,25146
SearchSysCacheCopyAttNum(1343,25593
SysCacheGetAttr(1377,26639
GetSysCacheHashValue(1412,27806
SearchSysCacheList(1429,28174
SysCacheInvalidate(1449,28702
RelationInvalidatesSnapshotsOnly(1473,29590
RelationHasSysCache(1496,29987
RelationSupportsSysCache(1521,30447
oid_compare(1546,30848

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/cache/typcache.c,4508
static HTAB *TypeCacheHash TypeCacheHash78,3008
static TypeCacheEntry *firstDomainTypeEntry firstDomainTypeEntry81,3094
#define TCFLAGS_HAVE_PG_TYPE_DATA	84,3205
#define TCFLAGS_CHECKED_BTREE_OPCLASS	85,3250
#define TCFLAGS_CHECKED_HASH_OPCLASS	86,3298
#define TCFLAGS_CHECKED_EQ_OPR	87,3345
#define TCFLAGS_CHECKED_LT_OPR	88,3388
#define TCFLAGS_CHECKED_GT_OPR	89,3431
#define TCFLAGS_CHECKED_CMP_PROC	90,3474
#define TCFLAGS_CHECKED_HASH_PROC	91,3518
#define TCFLAGS_CHECKED_HASH_EXTENDED_PROC	92,3563
#define TCFLAGS_CHECKED_ELEM_PROPERTIES	93,3615
#define TCFLAGS_HAVE_ELEM_EQUALITY	94,3665
#define TCFLAGS_HAVE_ELEM_COMPARE	95,3711
#define TCFLAGS_HAVE_ELEM_HASHING	96,3756
#define TCFLAGS_HAVE_ELEM_EXTENDED_HASHING	97,3801
#define TCFLAGS_CHECKED_FIELD_PROPERTIES	98,3853
#define TCFLAGS_HAVE_FIELD_EQUALITY	99,3903
#define TCFLAGS_HAVE_FIELD_COMPARE	100,3950
#define TCFLAGS_CHECKED_DOMAIN_CONSTRAINTS	101,3996
#define TCFLAGS_DOMAIN_BASE_IS_COMPOSITE	102,4048
#define TCFLAGS_OPERATOR_FLAGS 105,4178
struct DomainConstraintCache122,4948
	List	   *constraints;constraints124,4979
	MemoryContext dccContext;125,5044
	long		dccRefCount;126,5120
	Oid			enum_oid;132,5267
	float4		sort_order;133,5313
} EnumItem;134,5359
typedef struct TypeCacheEnumData136,5372
	Oid			bitmap_base;138,5407
	Bitmapset  *sorted_values;sorted_values139,5473
	int			num_values;140,5540
	EnumItem	enum_values[enum_values141,5597
} TypeCacheEnumData;142,5643
typedef struct RecordCacheEntry155,6173
	TupleDesc	tupdesc;157,6207
} RecordCacheEntry;158,6227
struct SharedRecordTypmodRegistry164,6406
	dshash_table_handle record_table_handle;167,6496
	dshash_table_handle typmod_table_handle;169,6593
	pg_atomic_uint32 next_typmod;171,6681
typedef struct SharedRecordTableKey180,6993
		TupleDesc	local_tupdesc;184,7041
		dsa_pointer shared_tupdesc;185,7068
	}			u;186,7098
	bool		shared;187,7106
} SharedRecordTableKey;188,7121
typedef struct SharedRecordTableEntry194,7288
	SharedRecordTableKey key;196,7328
} SharedRecordTableEntry;197,7355
typedef struct SharedTypmodTableEntry203,7517
	uint32		typmod;205,7557
	dsa_pointer shared_tupdesc;206,7574
} SharedTypmodTableEntry;207,7603
shared_record_table_compare(213,7699
shared_record_table_hash(239,8313
static const dshash_parameters srtr_record_table_params 254,8694
static const dshash_parameters srtr_typmod_table_params 263,8996
static HTAB *RecordCacheHash RecordCacheHash272,9236
static TupleDesc *RecordCacheArray RecordCacheArray275,9353
static uint64 *RecordIdentifierArray RecordIdentifierArray276,9396
static int32 RecordCacheArrayLen 277,9441
static int32 NextRecordTypmod 278,9518
static uint64 tupledesc_id_counter 285,9810
lookup_type_cache(331,12232
load_typcache_tupdesc(844,28747
load_rangetype_info(878,29806
load_domaintype_info(941,31886
dcs_cmp(1177,38346
decr_dcc_refcount(1190,38729
dccref_deletion_callback(1201,38961
prep_domain_constraints(1222,39491
InitDomainConstraintRef(1260,40550
UpdateDomainConstraintRef(1298,41881
DomainHasConstraints(1347,43337
array_element_has_equality(1374,44206
array_element_has_compare(1382,44440
array_element_has_hashing(1390,44672
array_element_has_extended_hashing(1398,44904
cache_array_element_properties(1406,45154
record_fields_have_equality(1436,46022
record_fields_have_compare(1444,46258
cache_record_field_properties(1452,46492
range_element_has_hashing(1538,49108
range_element_has_extended_hashing(1546,49340
cache_range_element_properties(1554,49590
ensure_record_cache_typmod_slot_exists(1582,50457
lookup_rowtype_tupdesc_internal(1619,51601
lookup_rowtype_tupdesc(1710,54154
lookup_rowtype_tupdesc_noerror(1727,54589
lookup_rowtype_tupdesc_copy(1744,55012
lookup_rowtype_tupdesc_domain(1766,55802
record_type_typmod_hash(1803,56789
record_type_typmod_compare(1814,57019
assign_record_type_typmod(1830,57511
assign_record_type_identifier(1905,59869
SharedRecordTypmodRegistryEstimate(1946,60952
SharedRecordTypmodRegistryInit(1968,61827
SharedRecordTypmodRegistryAttach(2067,65172
TypeCacheRelCallback(2150,68442
TypeCacheTypCallback(2215,70588
TypeCacheOpcCallback(2255,72094
TypeCacheConstrCallback(2284,73098
enum_known_sorted(2308,73766
compare_values_of_enum(2337,74748
load_enum_cache_data(2410,76536
find_enumitem(2565,81019
enum_oid_cmp(2582,81413
share_tupledesc(2600,81827
find_or_make_matching_shared_tupledesc(2621,82487
shared_record_typmod_registry_detach(2733,85774

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/fmgrprotos.h,28
#define FMGRPROTOS_H20,567

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/time/snapmgr.c,4076
int			old_snapshot_threshold;75,2762
typedef struct OldSnapshotControlData80,2906
	slock_t		mutex_current;86,3064
	TimestampTz current_timestamp;87,3121
	slock_t		mutex_latest_xmin;88,3185
	TransactionId latest_xmin;89,3260
	TimestampTz next_map_update;90,3315
	slock_t		mutex_threshold;91,3379
	TimestampTz threshold_timestamp;92,3437
	TransactionId threshold_xid;93,3501
	int			head_offset;123,4977
	TimestampTz head_timestamp;124,5036
	int			count_used;125,5102
	TransactionId xid_by_minute[xid_by_minute126,5154
} OldSnapshotControlData;127,5207
static volatile OldSnapshotControlData *oldSnapshotControl;oldSnapshotControl129,5234
static SnapshotData CurrentSnapshotData 144,5941
static SnapshotData SecondarySnapshotData 145,6000
SnapshotData CatalogSnapshotData 146,6061
SnapshotData SnapshotSelfData 147,6113
SnapshotData SnapshotAnyData 148,6162
static Snapshot CurrentSnapshot 151,6244
static Snapshot SecondarySnapshot 152,6284
static Snapshot CatalogSnapshot 153,6326
static Snapshot HistoricSnapshot 154,6366
TransactionId TransactionXmin 166,6859
TransactionId RecentXmin 167,6917
TransactionId RecentGlobalXmin 168,6970
TransactionId RecentGlobalDataXmin 169,7025
static HTAB *tuplecid_data tuplecid_data172,7147
typedef struct ActiveSnapshotElt182,7449
	Snapshot	as_snap;184,7484
	int			as_level;185,7503
	struct ActiveSnapshotElt *as_next;as_next186,7520
} ActiveSnapshotElt;187,7556
static ActiveSnapshotElt *ActiveSnapshot ActiveSnapshot190,7621
static ActiveSnapshotElt *OldestActiveSnapshot OldestActiveSnapshot193,7717
static pairingheap RegisteredSnapshots 202,8024
bool		FirstSnapshotSet 205,8149
static Snapshot FirstXactSnapshot 212,8422
#define SNAPSHOT_EXPORT_DIR 215,8514
typedef struct ExportedSnapshot218,8612
	char	   *snapfile;snapfile220,8646
	Snapshot	snapshot;221,8666
} ExportedSnapshot;222,8686
static List *exportedSnapshots exportedSnapshots225,8784
typedef struct SerializedSnapshotData239,9245
	TransactionId xmin;241,9285
	TransactionId xmax;242,9306
	uint32		xcnt;243,9327
	int32		subxcnt;244,9342
	bool		suboverflowed;245,9359
	bool		takenDuringRecovery;246,9381
	CommandId	curcid;247,9409
	TimestampTz whenTaken;248,9428
	XLogRecPtr	lsn;249,9452
} SerializedSnapshotData;250,9469
SnapMgrShmemSize(253,9501
SnapMgrInit(269,9812
GetTransactionSnapshot(306,10975
GetLatestSnapshot(381,13242
GetOldestSnapshot(413,14069
GetCatalogSnapshot(442,14824
GetNonHistoricCatalogSnapshot(464,15403
InvalidateCatalogSnapshot(512,17217
InvalidateCatalogSnapshotConditionally(533,17859
SnapshotSetCommandId(546,18149
SetTransactionSnapshot(567,18692
CopySnapshot(662,22421
FreeSnapshot(717,23876
PushActiveSnapshot(735,24347
PushCopiedSnapshot(771,25339
UpdateActiveSnapshotCommandId(783,25602
PopActiveSnapshot(814,26660
GetActiveSnapshot(841,27216
ActiveSnapshotSet(853,27415
RegisterSnapshot(865,27640
RegisterSnapshotOnOwner(878,27901
UnregisterSnapshot(907,28608
UnregisterSnapshotFromOwner(920,28841
xmin_cmp(946,29487
GetFullRecentGlobalXmin(963,29978
SnapshotResetXmin(1010,31651
AtSubCommit_Snapshot(1034,32101
AtSubAbort_Snapshot(1055,32528
AtEOXact_Snapshot(1091,33420
ExportSnapshot(1191,36337
pg_export_snapshot(1367,42514
parseIntFromText(1382,42894
parseXidFromText(1407,43618
parseVxidFromText(1432,44341
ImportSnapshot(1462,45323
XactHasExportedSnapshots(1637,51303
DeleteAllExportedSnapshotFiles(1650,51611
ThereAreNoPriorRegisteredSnapshots(1689,52747
AlignTimestampToMinuteBoundary(1706,53144
GetSnapshotCurrentTimestamp(1720,53461
GetOldSnapshotThresholdTimestamp(1745,54174
SetOldSnapshotThresholdTimestamp(1757,54471
TransactionIdLimitedForOldSnapshots(1775,55147
MaintainOldSnapshotTimeMapping(1882,58435
SetupHistoricSnapshot(2035,63012
TeardownHistoricSnapshot(2051,63326
HistoricSnapshotActive(2058,63425
HistoricSnapshotGetTupleCids(2064,63500
EstimateSnapshotSpace(2078,63792
SerializeSnapshot(2102,64418
RestoreSnapshot(2161,66464
RestoreTransactionSnapshot(2225,68533
XidInMVCCSnapshot(2241,69107

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/time/combocid.c,803
static HTAB *comboHash comboHash53,2187
	CommandId	cmin;58,2286
	CommandId	cmax;59,2303
} ComboCidKeyData;60,2320
typedef ComboCidKeyData *ComboCidKey;ComboCidKey62,2340
	ComboCidKeyData key;66,2396
	CommandId	combocid;67,2418
} ComboCidEntryData;68,2439
typedef ComboCidEntryData *ComboCidEntry;ComboCidEntry70,2461
#define CCID_HASH_SIZE	73,2541
static ComboCidKey comboCids 80,2714
static int	usedComboCids 81,2751
static int	sizeComboCids 82,2819
#define CCID_ARRAY_SIZE	85,2912
HeapTupleHeaderGetCmin(104,3489
HeapTupleHeaderGetCmax(118,3806
HeapTupleHeaderAdjustCmax(153,4947
AtEOXact_ComboCid(182,5736
GetComboCommandId(204,6161
GetRealCmin(280,8061
GetRealCmax(287,8184
EstimateComboCIDStateSpace(298,8387
SerializeComboCIDState(317,8840
RestoreComboCIDState(343,9736

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/hash/dynahash.c,2698
#define DEF_SEGSIZE	112,4981
#define DEF_SEGSIZE_SHIFT	113,5010
#define DEF_DIRSIZE	114,5073
#define DEF_FFACTOR	115,5102
#define NUM_FREELISTS	118,5223
typedef HASHELEMENT *HASHBUCKET;HASHBUCKET121,5304
typedef HASHBUCKET *HASHSEGMENT;HASHSEGMENT124,5389
	slock_t		mutex;145,6247
	long		nentries;146,6299
	HASHELEMENT *freeList;freeList147,6363
} FreeListData;148,6417
struct HASHHDR158,6803
	FreeListData freeList[freeList170,7340
	long		dsize;174,7516
	long		nsegs;175,7553
	uint32		max_bucket;176,7615
	uint32		high_mask;177,7671
	uint32		low_mask;178,7731
	Size		keysize;181,7850
	Size		entrysize;182,7898
	long		num_partitions;183,7956
	long		ffactor;184,8025
	long		max_dsize;185,8067
	long		ssize;186,8133
	int			sshift;187,8191
	int			nelem_alloc;188,8242
	long		accesses;196,8473
	long		collisions;197,8490
#define IS_PARTITIONED(201,8520
#define FREELIST_IDX(203,8581
struct HTAB210,8821
	HASHHDR    *hctl;hctl212,8835
	HASHSEGMENT *dir;dir213,8892
	HashValueFunc hash;214,8947
	HashCompareFunc match;215,8990
	HashCopyFunc keycopy;216,9045
	HashAllocFunc alloc;217,9096
	MemoryContext hcxt;218,9142
	char	   *tabname;tabname219,9212
	bool		isshared;220,9270
	bool		isfixed;221,9328
	bool		frozen;224,9447
	Size		keysize;227,9573
	long		ssize;228,9621
	int			sshift;229,9679
#define ELEMENTKEY(235,9783
#define ELEMENT_FROM_KEY(240,9917
#define MOD(246,10086
static long hash_accesses,249,10148
			hash_collisions,250,10175
			hash_expansions;251,10195
static MemoryContext CurrentDynaHashCxt 277,10967
DynaHashAlloc(280,11030
string_compare(295,11403
hash_create(318,12248
hdefault(581,19482
choose_nelem_alloc(614,20188
init_htab(647,21166
hash_estimate_size(743,23825
hash_select_dirsize(790,25386
hash_get_shared_size(814,26058
hash_destroy(825,26317
hash_stats(844,26715
get_hash_value(871,27629
calc_bucket(878,27794
hash_search(917,29279
hash_search_with_hash_value(930,29535
hash_update_hash_key(1126,35184
get_hash_entry(1261,38609
hash_get_num_entries(1346,41237
hash_seq_init(1390,42824
hash_seq_search(1400,43011
hash_seq_term(1476,44802
hash_freeze(1496,45431
expand_table(1513,45864
dir_realloc(1610,48176
seg_alloc(1649,49001
element_alloc(1668,49344
hash_corrupted(1715,50634
my_log2(1729,51009
next_pow2_long(1747,51353
next_pow2_int(1755,51550
#define MAX_SEQ_SCANS 1791,53154
static HTAB *seq_scan_tables[seq_scan_tables1793,53181
static int	seq_scan_level[seq_scan_level1794,53253
static int	num_seq_scans 1795,53327
register_seq_scan(1800,53435
deregister_seq_scan(1812,53782
has_seq_scans(1833,54271
AtEOXact_HashTables(1847,54480
AtEOSubXact_HashTables(1873,55140

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/hash/pg_crc.c,51
const uint32 pg_crc32_table[pg_crc32_table32,977

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/fmgr/fmgr.c,2740
PGDLLIMPORT needs_fmgr_hook_type needs_fmgr_hook 38,913
PGDLLIMPORT fmgr_hook_type fmgr_hook 39,970
	Oid			fn_oid;47,1145
	TransactionId fn_xmin;48,1198
	ItemPointerData fn_tid;49,1257
	PGFunction	user_fn;50,1282
	const Pg_finfo_record *inforec;inforec51,1333
} CFuncHashTabEntry;52,1399
static HTAB *CFuncHash CFuncHash54,1421
fmgr_isbuiltin(75,2190
fmgr_lookupByName(100,2816
fmgr_info(126,3688
fmgr_info_cxt(136,3919
fmgr_info_cxt_security(146,4193
fmgr_symbol(283,8751
fmgr_info_C_lang(361,10770
fmgr_info_other_lang(435,12714
fetch_finfo_record(472,14118
lookup_C_func(532,15900
record_C_func(556,16559
clear_external_function_hash(596,17642
fmgr_info_copy(612,18009
fmgr_internal_function(627,18404
struct fmgr_security_definer_cache643,18852
	FmgrInfo	flinfo;645,18889
	Oid			userid;646,18947
	ArrayType  *proconfig;proconfig647,18999
	Datum		arg;648,19057
fmgr_security_definer(662,19709
DirectFunctionCall1Coll(795,23456
DirectFunctionCall2Coll(815,23910
DirectFunctionCall3Coll(837,24440
DirectFunctionCall4Coll(862,25052
DirectFunctionCall5Coll(889,25740
DirectFunctionCall6Coll(918,26504
DirectFunctionCall7Coll(950,27350
DirectFunctionCall8Coll(984,28272
DirectFunctionCall9Coll(1020,29270
CallerFInfoFunctionCall1(1068,30793
CallerFInfoFunctionCall2(1088,31268
FunctionCall0Coll(1115,32000
FunctionCall1Coll(1132,32385
FunctionCall2Coll(1152,32847
FunctionCall3Coll(1174,33385
FunctionCall4Coll(1199,34005
FunctionCall5Coll(1226,34701
FunctionCall6Coll(1255,35473
FunctionCall7Coll(1287,36327
FunctionCall8Coll(1321,37257
FunctionCall9Coll(1357,38263
OidFunctionCall0Coll(1404,39705
OidFunctionCall1Coll(1414,39868
OidFunctionCall2Coll(1424,40049
OidFunctionCall3Coll(1434,40248
OidFunctionCall4Coll(1445,40471
OidFunctionCall5Coll(1456,40712
OidFunctionCall6Coll(1467,40971
OidFunctionCall7Coll(1480,41262
OidFunctionCall8Coll(1493,41571
OidFunctionCall9Coll(1506,41898
InputFunctionCall(1533,42639
OutputFunctionCall(1577,43705
ReceiveFunctionCall(1591,44137
SendFunctionCall(1638,45324
OidInputFunctionCall(1648,45592
OidOutputFunctionCall(1657,45795
OidReceiveFunctionCall(1666,45949
OidSendFunctionCall(1676,46170
Int64GetDatum(1701,47016
Float8GetDatum(1710,47151
pg_detoast_datum(1726,47541
pg_detoast_datum_copy(1735,47687
pg_detoast_datum_slice(1751,48018
pg_detoast_datum_packed(1758,48218
get_fn_expr_rettype(1782,49040
get_fn_expr_argtype(1804,49468
get_call_expr_argtype(1823,49966
get_fn_expr_arg_stable(1869,51082
get_call_expr_arg_stable(1888,51569
get_fn_expr_variadic(1938,52801
set_fn_opclass_options(1964,53365
has_fn_opclass_options(1975,53642
get_fn_opclass_options(1991,53944
CheckFunctionValidatorAccess(2039,56089

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/fmgr/funcapi.c,994
typedef struct polymorphic_actuals33,877
	Oid			anyelement_type;35,914
	Oid			anyarray_type;36,973
	Oid			anyrange_type;37,1028
} polymorphic_actuals;38,1083
init_MultiFuncCall(62,1938
per_MultiFuncCall(137,3667
end_MultiFuncCall(149,3868
shutdown_MultiFuncCall(167,4360
get_call_result_type(205,5805
get_expr_result_type(221,6207
get_func_result_type(298,8276
internal_get_result_type(318,8853
get_expr_result_tupdesc(438,11944
resolve_anyelement_from_others(476,12972
resolve_anyarray_from_others(514,14179
resolve_anyrange_from_others(540,14946
resolve_polymorphic_tupdesc(560,15734
resolve_polymorphic_argtypes(830,23934
get_type_func_class(1044,29930
get_func_arg_info(1094,31407
get_func_trftypes(1188,34175
get_func_input_arg_names(1236,35523
get_func_result_name(1321,37665
build_function_result_tupdesc_t(1424,40506
build_function_result_tupdesc_d(1474,42079
RelationNameGetTupleDesc(1592,45380
TypeGetTupleDesc(1625,46444
extract_variadic_args(1727,49519

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/fmgr/dfmgr.c,1153
#undef bool28,664
typedef void (*PG_init_t)PG_init_t41,916
typedef void (*PG_fini_t)PG_fini_t42,950
	char		varName[varName47,1049
	void	   *varValue;varValue48,1109
} rendezvousHashEntry;49,1129
typedef struct df_files55,1224
	struct df_files *next;next57,1250
	dev_t		device;58,1291
	ino_t		inode;61,1418
	void	   *handle;handle63,1469
	char		filename[filename64,1525
} DynamicFileList;65,1593
static DynamicFileList *file_list file_list67,1613
static DynamicFileList *file_tail file_tail68,1655
#define SAME_INODE(72,1789
#define SAME_INODE(74,1873
char	   *Dynamic_library_path;Dynamic_library_path77,1911
static void incompatible_module_error(80,2000
load_file(146,4283
lookup_external_function(171,4864
internal_load_library(184,5188
incompatible_module_error(306,8355
internal_unload_library(400,11385
file_exists(454,12732
expand_dynamic_library_name(486,13586
check_restricted_library_name(541,14604
substitute_libpath_macro(556,15002
find_in_dynamic_libpath(587,15827
find_rendezvous_variable(671,17839
EstimateLibraryStateSpace(710,18721
SerializeLibraryState(727,19063
RestoreLibraryState(749,19505

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/resowner/resowner.c,3841
#define FileGetDatum(42,1212
#define DatumGetFile(43,1259
#define BufferGetDatum(44,1317
#define DatumGetBuffer(45,1370
typedef struct ResourceArray63,2253
	Datum	   *itemsarr;itemsarr65,2284
	Datum		invalidval;66,2338
	uint32		capacity;67,2398
	uint32		nitems;68,2455
	uint32		maxitems;69,2521
	uint32		lastidx;70,2588
} ResourceArray;71,2651
#define RESARRAY_INIT_SIZE 77,2802
#define RESARRAY_MAX_ARRAY 82,2912
#define RESARRAY_IS_ARRAY(83,2942
#define RESARRAY_MAX_ITEMS(89,3146
#define MAX_RESOWNER_LOCKS 108,4249
typedef struct ResourceOwnerData113,4327
	ResourceOwner parent;115,4362
	ResourceOwner firstchild;116,4427
	ResourceOwner nextchild;117,4492
	const char *name;name118,4550
	ResourceArray bufferarr;121,4653
	ResourceArray catrefarr;122,4699
	ResourceArray catlistrefarr;123,4751
	ResourceArray relrefarr;124,4806
	ResourceArray planrefarr;125,4858
	ResourceArray tupdescarr;126,4912
	ResourceArray snapshotarr;127,4964
	ResourceArray filearr;128,5018
	ResourceArray dsmarr;129,5070
	ResourceArray jitarr;130,5123
	int			nlocks;133,5242
	LOCALLOCK  *locks[locks134,5287
}			ResourceOwnerData;135,5353
ResourceOwner CurrentResourceOwner 142,5574
ResourceOwner CurTransactionResourceOwner 143,5617
ResourceOwner TopTransactionResourceOwner 144,5667
ResourceOwner AuxProcessResourceOwner 145,5717
typedef struct ResourceReleaseCallbackItem150,5822
	struct ResourceReleaseCallbackItem *next;next152,5867
	ResourceReleaseCallback callback;153,5910
	void	   *arg;arg154,5945
} ResourceReleaseCallbackItem;155,5960
static ResourceReleaseCallbackItem *ResourceRelease_callbacks ResourceRelease_callbacks157,5992
ResourceArrayInit(189,7272
ResourceArrayEnlarge(208,7862
ResourceArrayAdd(263,9384
ResourceArrayRemove(301,10210
ResourceArrayGetAny(370,11939
ResourceArrayFree(402,12558
ResourceOwnerCreate(422,13043
ResourceOwnerRelease(478,15271
ResourceOwnerReleaseInternal(488,15538
ResourceOwnerReleaseAllPlanCacheRefs(689,20621
ResourceOwnerDelete(712,21139
ResourceOwnerGetParent(763,22797
ResourceOwnerNewParent(772,22930
RegisterResourceReleaseCallback(820,23956
UnregisterResourceReleaseCallback(834,24328
CreateAuxProcessResourceOwner(858,24842
ReleaseAuxProcessResources(879,25476
ReleaseAuxProcessResourcesCallback(901,26118
ResourceOwnerEnlargeBuffers(917,26504
ResourceOwnerRememberBuffer(930,26837
ResourceOwnerForgetBuffer(939,27038
ResourceOwnerRememberLock(957,27739
ResourceOwnerForgetLock(977,28132
ResourceOwnerEnlargeCatCacheRefs(1006,28862
ResourceOwnerRememberCatCacheRef(1017,29117
ResourceOwnerForgetCatCacheRef(1026,29333
ResourceOwnerEnlargeCatCacheListRefs(1041,29847
ResourceOwnerRememberCatCacheListRef(1052,30119
ResourceOwnerForgetCatCacheListRef(1061,30346
ResourceOwnerEnlargeRelationRefs(1076,30865
ResourceOwnerRememberRelationRef(1087,31120
ResourceOwnerForgetRelationRef(1096,31331
PrintRelCacheLeakWarning(1107,31636
ResourceOwnerEnlargePlanCacheRefs(1121,32050
ResourceOwnerRememberPlanCacheRef(1132,32309
ResourceOwnerForgetPlanCacheRef(1141,32528
PrintPlanCacheLeakWarning(1152,32817
ResourceOwnerEnlargeTupleDescs(1165,33200
ResourceOwnerRememberTupleDesc(1176,33451
ResourceOwnerForgetTupleDesc(1185,33669
PrintTupleDescLeakWarning(1196,33960
ResourceOwnerEnlargeSnapshots(1211,34411
ResourceOwnerRememberSnapshot(1222,34662
ResourceOwnerForgetSnapshot(1231,34882
PrintSnapshotLeakWarning(1242,35176
ResourceOwnerEnlargeFiles(1257,35574
ResourceOwnerRememberFile(1268,35809
ResourceOwnerForgetFile(1277,36002
PrintFileLeakWarning(1288,36265
ResourceOwnerEnlargeDSMs(1302,36654
ResourceOwnerRememberDSM(1313,36893
ResourceOwnerForgetDSM(1322,37100
PrintDSMLeakWarning(1333,37404
ResourceOwnerEnlargeJIT(1347,37818
ResourceOwnerRememberJIT(1358,38045
ResourceOwnerForgetJIT(1367,38224

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/geo_spgist.c,1052
compareDoubles(93,3443
	float8		low;105,3618
	float8		high;106,3632
} Range;107,3647
	Range		left;111,3674
	Range		right;112,3688
} RangeBox;113,3703
	RangeBox	range_box_x;117,3733
	RangeBox	range_box_y;118,3756
} RectBox;119,3779
getQuadrant(130,4084
getRangeBox(157,4639
initRectBox(177,5078
nextRectBox(205,5824
overlap2D(236,6721
overlap4D(244,6942
contain2D(252,7174
contain4D(260,7390
contained2D(268,7630
contained4D(278,7945
lower2D(286,8192
overLower2D(294,8421
higher2D(302,8646
overHigher2D(310,8879
left4D(318,9101
overLeft4D(325,9298
right4D(332,9486
overRight4D(339,9684
below4D(346,9874
overBelow4D(353,10066
above4D(360,10256
overAbove4D(367,10452
pointToRectBoxDistance(374,10642
spg_box_quad_config(401,11238
spg_box_quad_choose(417,11545
spg_box_quad_picksplit(441,12213
is_bounding_box_test_exact(508,14086
spg_box_quad_get_scankey_bbox(531,14520
spg_box_quad_inner_consistent(553,14976
spg_box_quad_leaf_consistent(741,19596
spg_bbox_quad_config(854,22440
spg_poly_quad_compress(871,22834

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/jsonb_op.c,309
jsonb_exists(22,515
jsonb_exists_any(47,1177
jsonb_exists_all(80,1879
jsonb_contains(113,2581
jsonb_contained(131,2947
jsonb_ne(150,3346
jsonb_lt(167,3672
jsonb_gt(181,3937
jsonb_le(195,4202
jsonb_ge(209,4468
jsonb_eq(223,4734
jsonb_cmp(237,5000
jsonb_hash(254,5314
jsonb_hash_extended(296,6104

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/ascii.c,204
pg_to_ascii(28,674
#define RANGE_128	37,869
#define RANGE_160	38,891
encode_to_ascii(103,2514
to_ascii_encname(118,2848
to_ascii_enc(137,3281
to_ascii_default(155,3676
ascii_safe_strlcpy(173,4197

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/expandeddatum.c,207
DatumGetEOHP(29,784
EOH_init_header(48,1228
EOH_get_flat_size(75,1893
EOH_flatten_into(81,2003
MakeExpandedObjectReadOnlyInternal(95,2436
TransferExpandedObject(118,3211
DeleteExpandedObject(136,3678

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/regproc.c,1696
regprocin(61,1804
to_regproc(119,3332
regprocout(142,3857
regprocrecv(204,5288
regprocsend(214,5465
regprocedurein(230,5830
to_regprocedure(289,7414
format_procedure(322,8333
format_procedure_qualified(328,8434
format_procedure_extended(349,9151
format_procedure_parts(421,11013
regprocedureout(458,11887
regprocedurerecv(475,12193
regproceduresend(485,12385
regoperin(501,12752
to_regoper(556,14195
regoperout(579,14711
regoperrecv(647,16263
regopersend(657,16440
regoperatorin(673,16812
to_regoperator(733,18564
format_operator_extended(780,20061
format_operator(851,21900
format_operator_qualified(857,21997
format_operator_parts(864,22139
regoperatorout(897,23020
regoperatorrecv(914,23315
regoperatorsend(924,23504
regclassin(940,23867
to_regclass(984,25070
regclassout(1009,25661
regclassrecv(1066,26923
regclasssend(1076,27103
regcollationin(1092,27479
to_regcollation(1135,28630
regcollationout(1160,29216
regcollationrecv(1218,30588
regcollationsend(1228,30780
regtypein(1250,31444
to_regtype(1291,32468
regtypeout(1312,32870
regtyperecv(1360,33859
regtypesend(1370,34036
regconfigin(1386,34406
regconfigout(1425,35385
regconfigrecv(1471,36380
regconfigsend(1481,36563
regdictionaryin(1497,36945
regdictionaryout(1536,37948
regdictionaryrecv(1583,38979
regdictionarysend(1593,39172
regrolein(1608,39533
to_regrole(1651,40618
regroleout(1676,41111
regrolerecv(1708,41737
regrolesend(1718,41912
regnamespacein(1733,42280
to_regnamespace(1776,43384
regnamespaceout(1801,43894
regnamespacerecv(1833,44527
regnamespacesend(1843,44718
text_regclass(1857,45066
stringToQualifiedNameList(1876,45465
parseNameAndArgTypes(1924,46785

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/tsrank.c,1755
static const float weights[weights24,508
#define wpos(26,566
#define RANK_NO_NORM	28,613
#define RANK_NORM_LOGLENGTH	29,641
#define RANK_NORM_LENGTH	30,675
#define RANK_NORM_EXTDIST	31,706
#define RANK_NORM_UNIQ	32,738
#define RANK_NORM_LOGUNIQ	33,768
#define RANK_NORM_RDIVRPLUS1	34,800
#define DEF_NORM_METHOD	35,834
word_distance(44,1071
cnt_length(53,1202
#define WordECompareQueryItem(75,1454
find_wordentry(86,1772
compareQueryOperand(135,2765
SortAndUniqItems(154,3332
calc_rank_and(200,4148
calc_rank_or(283,5828
calc_rank(357,7179
getWeights(400,8096
ts_rank_wttf(438,9000
ts_rank_wtt(455,9402
ts_rank_ttf(471,9776
ts_rank_tt(486,10081
			QueryItem **items;items505,10431
			int16		nitem;506,10453
		}			query;507,10470
			QueryItem  *item;item511,10566
			WordEntry  *entry;entry512,10587
		}			map;513,10609
	}			data;514,10620
	WordEntryPos pos;515,10631
} DocRepresentation;516,10650
compareDocR(519,10683
#define MAXQROPOS	540,11223
	bool		operandexists;543,11270
	bool		reverseinsert;544,11292
	uint32		npos;546,11383
	WordEntryPos pos[pos547,11398
} QueryRepresentationOperand;548,11428
	TSQuery		query;552,11476
	QueryRepresentationOperand *operandData;operandData553,11493
} QueryRepresentation;554,11535
#define QR_GET_OPERAND_DATA(556,11559
checkcondition_QueryOperand(563,11769
	int			pos;585,12220
	int			p;586,12232
	int			q;587,12242
	DocRepresentation *begin;begin588,12252
	DocRepresentation *end;end589,12279
} CoverExt;590,12304
resetQueryRepresentation(593,12329
fillQueryRepresentationData(606,12599
Cover(646,13456
get_docrep(727,15092
calc_rank_cd(850,17693
ts_rankcd_wttf(953,20083
ts_rankcd_wtt(970,20490
ts_rankcd_ttf(986,20869
ts_rankcd_tt(1001,21179

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/tsvector_op.c,1972
	WordEntry  *arrb;arrb38,851
	WordEntry  *arre;arre39,870
	char	   *values;values40,889
	char	   *operand;operand41,907
} CHKVAL;42,926
typedef struct StatEntry45,938
	uint32		ndoc;47,965
	uint32		nentry;49,1071
	struct StatEntry *left;left50,1088
	struct StatEntry *right;right51,1113
	uint32		lenlexeme;52,1139
	char		lexeme[lexeme53,1159
} StatEntry;54,1197
#define STATENTRYHDRSZ	56,1211
	int32		weight;60,1282
	uint32		maxdepth;62,1299
	StatEntry **stack;stack64,1319
	uint32		stackpos;65,1339
	StatEntry  *root;root67,1359
} TSVectorStat;68,1378
silly_cmp_tsvector(82,1768
#define TSVECTORCMPFUNC(141,3008
tsvector_strip(164,3667
tsvector_length(197,4327
tsvector_setweight(207,4483
tsvector_setweight_by_filter(269,5435
#define compareEntry(352,7078
add_pos(362,7368
tsvector_bsearch(398,8226
compare_int(431,8820
compare_text_lexemes(442,8996
tsvector_delete_by_indices(464,9649
tsvector_delete_str(554,12114
tsvector_delete_arr(578,12720
tsvector_unnest(634,14126
tsvector_to_array(722,16418
array_to_tsvector(749,17005
tsvector_filter(813,18530
tsvector_concat(920,20778
tsCompareString(1147,25902
checkclass_str(1184,26519
checkcondition_str(1290,28887
#define TSPO_L_ONLY	1458,33411
#define TSPO_R_ONLY	1459,33478
#define TSPO_BOTH	1460,33545
TS_phrase_output(1463,33635
TS_phrase_execute(1604,37775
TS_execute(1846,44026
TS_execute_recurse(1863,44619
tsquery_requires_match(1962,47174
ts_match_qv(2012,48298
ts_match_vq(2020,48451
ts_match_tt(2050,49062
ts_match_tq(2072,49530
check_weight(2101,50142
#define compareStatWord(2116,50397
insertStatEntry(2122,50550
chooseNextStatEntry(2188,51685
ts_accum(2220,52870
ts_setup_firstcall(2255,53613
walkStatEntryTree(2301,54722
ts_process_call(2347,55535
ts_stat_sql(2387,56317
ts_stat1(2476,58178
ts_stat2(2501,58708
tsvector_update_trigger_byid(2539,59743
tsvector_update_trigger_bycolumn(2545,59849
tsvector_update_trigger(2551,59965

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/arrayutils.c,239
ArrayGetOffset(31,786
ArrayGetOffset0(50,1165
ArrayGetNItems(75,1932
#define MaxArraySize 80,2000
mda_get_range(120,3009
mda_get_prod(134,3308
mda_get_offset_values(150,3690
mda_next_tuple(175,4349
ArrayGetIntegerTypmods(200,4832

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/rangetypes.c,2330
#define RANGE_EMPTY_LITERAL 46,1481
typedef struct RangeIOData49,1580
	TypeCacheEntry *typcache;typcache51,1609
	FmgrInfo	typioproc;52,1670
	Oid			typioparam;53,1726
} RangeIOData;54,1781
range_in(80,2739
range_out(122,3913
range_recv(162,5087
range_send(245,7233
get_range_io_data(301,8695
range_constructor2(361,10412
range_constructor3(390,11125
range_lower(430,12121
range_upper(451,12567
range_empty(475,13035
range_lower_inc(485,13223
range_upper_inc(495,13416
range_lower_inf(505,13608
range_upper_inf(515,13800
range_contains_elem(528,14018
elem_contained_by_range(541,14314
range_eq_internal(557,14666
range_eq(589,15394
range_ne_internal(602,15691
range_ne(609,15853
range_contains(622,16131
range_contained_by(635,16425
range_before_internal(648,16749
range_before(673,17418
range_after_internal(686,17731
range_after(711,18400
bounds_adjacent(741,19526
range_adjacent_internal(782,20567
range_adjacent(812,21418
range_overlaps_internal(825,21726
range_overlaps(858,22587
range_overleft_internal(871,22914
range_overleft(899,23623
range_overright_internal(912,23949
range_overright(940,24658
range_minus(956,24995
range_union_internal(1024,26941
range_union(1070,28142
range_merge(1086,28522
range_intersect(1099,28823
range_cmp(1142,29934
range_lt(1188,31018
range_le(1196,31115
range_ge(1204,31213
range_gt(1212,31311
hash_range(1223,31453
hash_range_extended(1289,33162
int4range_canonical(1357,34971
int8range_canonical(1388,35659
daterange_canonical(1419,36347
int4range_subdiff(1464,37537
int8range_subdiff(1473,37697
numrange_subdiff(1482,37857
daterange_subdiff(1498,38193
tsrange_subdiff(1507,38353
tstzrange_subdiff(1518,38578
range_get_typcache(1546,39400
range_serialize(1570,40141
range_deserialize(1699,43665
range_get_flags(1766,45431
range_set_contain_empty(1780,45829
make_range(1795,46142
range_cmp_bounds(1835,47661
range_cmp_bound_values(1909,49519
make_empty_range(1944,50362
range_parse_flags(1974,50970
range_parse(2046,52926
range_parse_bound(2155,55559
range_deparse(2224,57097
range_bound_escape(2254,57777
range_contains_internal(2303,58709
range_contained_by_internal(2335,59543
range_contains_elem_internal(2344,59766
#define TYPE_IS_PACKABLE(2391,60940
datum_compute_size(2399,61166
datum_write(2425,61909

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/acl.c,6144
	const char *name;name46,1190
	AclMode		value;47,1209
} priv_map;48,1226
static Oid	cached_privs_role 76,2477
static List *cached_privs_roles cached_privs_roles77,2520
static Oid	cached_member_role 78,2559
static List *cached_membership_roles cached_membership_roles79,2603
getid(138,5365
putid(190,6482
aclparse(239,7695
allocacl(369,10579
make_empty_acl(391,10993
aclcopy(400,11068
aclconcat(420,11446
aclmerge(444,11959
aclitemsort(488,12835
aclequal(502,13195
check_acl(533,13833
aclitemin(558,14507
aclitemout(584,15085
aclitem_match(651,16411
aclitemComparator(662,16630
aclitem_eq(686,17128
hash_aclitem(706,17661
hash_aclitem_extended(720,18008
acldefault(741,18742
acldefault_sql(854,21834
aclupdate(923,23341
aclnewowner(1044,26632
check_circularity(1147,30023
recursive_revoke(1227,32203
aclmask(1313,34484
aclmask_direct(1402,36582
aclmembers(1465,37876
aclinsert(1517,38888
aclremove(1527,39085
aclcontains(1537,39282
makeaclitem(1559,39768
convert_priv_string(1582,40275
convert_any_priv_string(1632,41988
convert_aclright_to_string(1680,43154
aclexplode(1730,44098
has_table_privilege_name_name(1836,46823
has_table_privilege_name(1862,47477
has_table_privilege_name_id(1886,48043
has_table_privilege_id(1913,48707
has_table_privilege_id_name(1938,49288
has_table_privilege_id_id(1961,49845
convert_table_name(1987,50440
convert_table_priv_string(2002,50790
has_sequence_privilege_name_name(2044,52291
has_sequence_privilege_name(2075,53168
has_sequence_privilege_name_id(2104,53957
has_sequence_privilege_id(2137,54828
has_sequence_privilege_id_name(2168,55616
has_sequence_privilege_id_id(2196,56396
convert_sequence_priv_string(2225,57135
has_any_column_privilege_name_name(2258,58205
has_any_column_privilege_name(2288,59076
has_any_column_privilege_name_id(2316,59859
has_any_column_privilege_id(2347,60740
has_any_column_privilege_id_name(2376,61538
has_any_column_privilege_id_id(2403,62312
column_privilege_check(2450,63953
has_column_privilege_name_name_name(2508,65654
has_column_privilege_name_name_attnum(2537,66485
has_column_privilege_name_id_name(2564,67239
has_column_privilege_name_id_attnum(2591,67993
has_column_privilege_id_name_name(2616,68679
has_column_privilege_id_name_attnum(2643,69431
has_column_privilege_id_id_name(2668,70106
has_column_privilege_id_id_attnum(2693,70781
has_column_privilege_name_name(2717,71406
has_column_privilege_name_attnum(2746,72172
has_column_privilege_id_name(2773,72861
has_column_privilege_id_attnum(2800,73550
convert_column_name(2828,74287
convert_column_priv_string(2886,75777
has_database_privilege_name_name(2920,76863
has_database_privilege_name(2946,77553
has_database_privilege_name_id(2970,78155
has_database_privilege_id(2997,78851
has_database_privilege_id_name(3022,79464
has_database_privilege_id_id(3045,80057
convert_database_name(3071,80681
convert_database_priv_string(3083,80916
has_foreign_data_wrapper_privilege_name_name(3118,82036
has_foreign_data_wrapper_privilege_name(3144,82765
has_foreign_data_wrapper_privilege_name_id(3168,83423
has_foreign_data_wrapper_privilege_id(3195,84183
has_foreign_data_wrapper_privilege_id_name(3220,84843
has_foreign_data_wrapper_privilege_id_id(3243,85475
convert_foreign_data_wrapper_name(3269,86134
convert_foreign_data_wrapper_priv_string(3281,86395
has_function_privilege_name_name(3309,87227
has_function_privilege_name(3335,87913
has_function_privilege_name_id(3359,88511
has_function_privilege_id(3386,89199
has_function_privilege_id_name(3411,89804
has_function_privilege_id_id(3434,90393
convert_function_name(3460,91009
convert_function_priv_string(3481,91476
has_language_privilege_name_name(3509,92280
has_language_privilege_name(3535,92970
has_language_privilege_name_id(3559,93572
has_language_privilege_id(3586,94264
has_language_privilege_id_name(3611,94873
has_language_privilege_id_id(3634,95466
convert_language_name(3660,96086
convert_language_priv_string(3672,96325
has_schema_privilege_name_name(3700,97107
has_schema_privilege_name(3726,97776
has_schema_privilege_name_id(3750,98357
has_schema_privilege_id(3777,99039
has_schema_privilege_id_name(3802,99638
has_schema_privilege_id_id(3825,100210
convert_schema_name(3851,100822
convert_schema_priv_string(3863,101052
has_server_privilege_name_name(3893,101903
has_server_privilege_name(3919,102582
has_server_privilege_name_id(3943,103181
has_server_privilege_id(3970,103877
has_server_privilege_id_name(3995,104490
has_server_privilege_id_id(4018,105072
convert_server_name(4044,105690
convert_server_priv_string(4056,105929
has_tablespace_privilege_name_name(4084,106700
has_tablespace_privilege_name(4110,107414
has_tablespace_privilege_name_id(4134,108040
has_tablespace_privilege_id(4161,108756
has_tablespace_privilege_id_name(4186,109389
has_tablespace_privilege_id_id(4209,110006
convert_tablespace_name(4235,110648
convert_tablespace_priv_string(4247,110895
has_type_privilege_name_name(4274,111672
has_type_privilege_name(4300,112314
has_type_privilege_name_id(4324,112868
has_type_privilege_id(4351,113524
has_type_privilege_id_name(4376,114097
has_type_privilege_id_id(4399,114642
convert_type_name(4425,115230
convert_type_priv_string(4446,115667
pg_has_role_name_name(4474,116369
pg_has_role_name(4500,117000
pg_has_role_name_id(4524,117546
pg_has_role_id(4548,118099
pg_has_role_id_name(4570,118572
pg_has_role_id_id(4593,119109
convert_role_priv_string(4623,119948
pg_role_aclcheck(4643,120524
initialize_acl(4673,121201
RoleMembershipCacheCallback(4692,121571
has_rolinherit(4702,121835
roles_has_privs_of(4732,122733
roles_is_member_of(4815,125231
has_privs_of_role(4892,127628
is_member_of_role(4916,128202
check_is_member_of_role(4938,128738
is_member_of_role_nosuper(4954,129134
is_admin_of_role(4974,129644
count_one_bits(5060,132564
select_best_grantor(5100,133958
get_role_oid(5175,135832
get_role_oid_or_public(5193,136259
get_rolespec_oid(5209,136671
get_rolespec_tuple(5247,137461
get_rolespec_name(5292,138614
check_rolespec_name(5314,139099

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/orderedsetaggs.c,2100
typedef struct OSAPerQueryState51,1725
	Aggref	   *aggref;aggref54,1808
	MemoryContext qcontext;56,1899
	ExprContext *econtext;econtext58,1965
	bool		rescan_needed;60,2057
	TupleDesc	tupdesc;65,2201
	TupleTableSlot *tupslot;tupslot67,2283
	int			numSortCols;69,2352
	AttrNumber *sortColIdx;sortColIdx70,2372
	Oid		   *sortOperators;sortOperators71,2397
	Oid		   *eqOperators;eqOperators72,2422
	Oid		   *sortCollations;sortCollations73,2445
	bool	   *sortNullsFirsts;sortNullsFirsts74,2471
	ExprState  *compareTuple;compareTuple76,2558
	Oid			sortColType;81,2698
	int16		typLen;82,2718
	bool		typByVal;83,2734
	char		typAlign;84,2751
	Oid			sortOperator;86,2801
	Oid			eqOperator;87,2822
	Oid			sortCollation;88,2841
	bool		sortNullsFirst;89,2863
	FmgrInfo	equalfn;91,2946
} OSAPerQueryState;92,2965
typedef struct OSAPerGroupState94,2986
	OSAPerQueryState *qstate;qstate97,3075
	MemoryContext gcontext;99,3151
	Tuplesortstate *sortstate;sortstate101,3223
	int64		number_of_rows;103,3305
	bool		sort_done;105,3380
} OSAPerGroupState;106,3398
ordered_set_startup(115,3552
ordered_set_shutdown(335,10512
ordered_set_transition(354,11050
ordered_set_transition_multi(379,11682
percentile_disc_final(423,12834
typedef Datum (*LerpFunc)LerpFunc495,14790
float8_lerp(498,14864
interval_lerp(507,15058
percentile_cont_final_common(521,15397
percentile_cont_float8_final(606,17573
percentile_cont_interval_final(615,17783
struct pct_info627,18075
	int64		first_row;629,18093
	int64		second_row;630,18139
	double		proportion;631,18196
	int			idx;632,18247
pct_info_cmp(639,18392
setup_pct_info(655,18839
percentile_disc_multi_final(724,20548
percentile_cont_multi_final_common(842,23698
percentile_cont_float8_multi_final(1000,28153
percentile_cont_interval_multi_final(1015,28532
mode_final(1029,28849
hypothetical_check_argtypes(1137,31747
hypothetical_rank_common(1166,32568
hypothetical_rank_final(1239,34297
hypothetical_percent_rank_final(1253,34528
hypothetical_cume_dist_final(1273,34902
hypothetical_dense_rank_final(1290,35234

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/rangetypes_typanalyze.c,112
range_typanalyze(43,1564
float8_qsort_cmp(67,2222
range_bound_qsort_cmp(84,2506
compute_range_stats(97,2832

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/misc.c,592
count_nulls(51,1319
pg_num_nulls(137,3130
pg_num_nonnulls(153,3355
current_database(170,3597
current_query(187,3916
pg_tablespace_databases(199,4206
pg_tablespace_location(303,6976
pg_sleep(359,8527
#define GetNowFloat(376,9196
pg_get_keywords(407,9777
pg_typeof(481,11513
pg_collation_for(492,11707
pg_relation_is_updatable(521,12417
pg_column_is_updatable(538,12989
#define REQ_EVENTS 554,13487
is_ident_start(565,13720
is_ident_cont(583,14152
parse_ident(598,14554
pg_current_logfile(737,18114
pg_current_logfile_1arg(827,20324
pg_get_replica_identity_index(836,20469

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/like_support.c,1627
	Pattern_Type_Like,60,2125
	Pattern_Type_Like_IC,61,2145
	Pattern_Type_Regex,62,2168
	Pattern_Type_Regex_IC,63,2189
	Pattern_Type_Prefix64,2213
} Pattern_Type;65,2234
	Pattern_Prefix_None,69,2266
	Pattern_Prefix_None, Pattern_Prefix_Partial,69,2266
	Pattern_Prefix_None, Pattern_Prefix_Partial, Pattern_Prefix_Exact69,2266
} Pattern_Prefix_Status;70,2333
textlike_support(115,3926
texticlike_support(123,4090
textregexeq_support(131,4259
texticregexeq_support(139,4427
like_regex_support(148,4640
match_pattern_prefix(233,6781
patternsel_common(460,13717
patternsel(734,21397
regexeqsel(767,22201
icregexeqsel(776,22378
likesel(785,22547
prefixsel(794,22705
iclikesel(804,22875
regexnesel(813,23060
icregexnesel(822,23240
nlikesel(831,23412
icnlikesel(840,23579
patternjoinsel(849,23771
regexeqjoinsel(859,24030
icregexeqjoinsel(868,24224
likejoinsel(877,24410
prefixjoinsel(886,24585
iclikejoinsel(895,24769
regexnejoinsel(904,24949
icregexnejoinsel(913,25146
nlikejoinsel(922,25335
icnlikejoinsel(931,25519
like_fixed_prefix(966,26850
regex_fixed_prefix(1074,29587
pattern_fixed_prefix(1142,31219
prefix_selectivity(1206,33298
#define FIXED_CHAR_SEL	1290,36068
#define CHAR_RANGE_SEL	1291,36112
#define ANY_CHAR_SEL	1292,36140
#define FULL_WILDCARD_SEL 1293,36214
#define PARTIAL_WILDCARD_SEL 1294,36244
like_selectivity(1297,36297
regex_selectivity_sub(1334,37065
regex_selectivity(1426,39175
pattern_char_isalpha(1463,40286
byte_increment(1487,40996
make_greater_string(1537,43502
string_to_datum(1688,47541
string_to_const(1708,48046
string_to_bytea_const(1751,48912

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/domains.c,483
typedef struct DomainIOData47,1618
	Oid			domain_type;49,1648
	Oid			typiofunc;51,1722
	Oid			typioparam;52,1740
	int32		typtypmod;53,1759
	FmgrInfo	proc;54,1778
	DomainConstraintRef constraint_ref;56,1855
	ExprContext *econtext;econtext58,1943
	MemoryContext mcxt;60,2006
} DomainIOData;61,2027
domain_state_setup(73,2402
domain_check_input(131,4218
domain_in(212,6654
domain_recv(268,8081
domain_check(327,9690
errdatatype(360,10524
errdomainconstraint(384,11188

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/mac8.c,638
#define hibits(32,859
#define lobits(35,969
static const signed char hexlookup[hexlookup40,1168
hex2_to_uchar(61,2099
macaddr8_in(104,2861
macaddr8_out(242,5809
macaddr8_recv(262,6281
macaddr8_send(295,6871
macaddr8_cmp_internal(318,7354
macaddr8_cmp(333,7618
macaddr8_lt(346,7837
macaddr8_le(355,8017
macaddr8_eq(364,8198
macaddr8_ge(373,8379
macaddr8_gt(382,8560
macaddr8_ne(391,8740
hashmacaddr8(403,8978
hashmacaddr8extended(411,9124
macaddr8_not(423,9369
macaddr8_and(442,9744
macaddr8_or(462,10254
macaddr8_trunc(485,10836
macaddr8_set7bit(508,11235
macaddrtomacaddr8(532,11763
macaddr8tomacaddr(553,12137

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/tsquery_op.c,365
tsquery_numnode(22,469
join_tsqueries(32,646
tsquery_and(53,1212
tsquery_or(83,1679
tsquery_phrase_distance(113,2144
tsquery_phrase(149,2895
tsquery_not(158,3099
CompareTSQ(188,3683
tsquery_cmp(214,4117
#define CMPFUNC(226,4338
makeTSQuerySign(249,4946
collectTSQueryValues(266,5234
cmp_string(297,5775
tsq_mcontains(306,5932
tsq_mcontained(353,6993

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/name.c,458
namein(48,1353
nameout(71,1798
namerecv(82,1972
namesend(106,2542
namecmp(135,3468
nameeq(148,3842
namene(157,4008
namelt(166,4174
namele(175,4339
namegt(184,4505
namege(193,4670
btnamecmp(202,4836
btnamesortsupport(211,5001
namecpy(233,5569
namecat(243,5723
namestrcpy(250,5840
namestrcat(260,5992
namestrcmp(287,6417
current_user(303,6700
session_user(309,6845
current_schema(319,7054
current_schemas(334,7439
nameconcatoid(377,8595

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/like.c,890
#define LIKE_TRUE	29,710
#define LIKE_FALSE	30,735
#define LIKE_ABORT	31,761
wchareq(57,1747
SB_lower_char(93,2731
#define NextByte(106,2970
#define CHAREQ(109,3077
#define NextChar(110,3120
#define CopyAdvChar(112,3214
#define MatchText	119,3376
#define do_like_escape	120,3407
#define CHAREQ(125,3538
#define NextChar(126,3578
#define CopyAdvChar(127,3626
#define MatchText	129,3699
#define do_like_escape	130,3730
#define MATCH_LOWER(135,3874
#define NextChar(136,3953
#define MatchText 137,4001
#define NextChar(143,4135
#define MatchText	145,4233
GenericMatchText(151,4372
Generic_Text_IC_like(172,5056
namelike(242,7084
namenlike(263,7456
textlike(284,7829
textnlike(305,8223
bytealike(326,8618
byteanlike(347,9002
nameiclike(372,9424
nameicnlike(387,9767
texticlike(402,10111
texticnlike(414,10346
like_escape(430,10726
like_escape_bytea(449,11171

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/rangetypes_gist.c,1696
#define CLS_NORMAL	29,818
#define CLS_LOWER_INF	30,883
#define CLS_UPPER_INF	31,938
#define CLS_CONTAIN_EMPTY	32,993
#define CLS_EMPTY	33,1060
#define CLS_COUNT	35,1120
#define LIMIT_RATIO 44,1471
#define INFINITE_BOUND_PENALTY	47,1538
#define CONTAIN_EMPTY_PENALTY 48,1573
#define DEFAULT_SUBTYPE_DIFF_PENALTY 49,1608
	int			index;56,1729
	RangeBound	bound;57,1743
} SingleBoundSortItem;58,1762
	SPLIT_LEFT 63,1845
	SPLIT_RIGHT64,1913
} SplitLR;65,1926
	TypeCacheEntry *typcache;typcache72,2004
	bool		has_subtype_diff;73,2061
	int			entries_count;74,2119
	bool		first;78,2243
	RangeBound *left_upper;left_upper80,2300
	RangeBound *right_lower;right_lower81,2361
	float4		ratio;83,2424
	float4		overlap;84,2460
	int			common_left;85,2526
	int			common_right;86,2592
} ConsiderSplitContext;87,2613
	RangeBound	lower;95,2753
	RangeBound	upper;96,2772
} NonEmptyRange;97,2791
	int			index;106,3018
	double		delta;108,3098
} CommonEntry;109,3114
#define PLACE_LEFT(113,3283
#define PLACE_RIGHT(122,3534
#define rangeCopy(132,3867
range_gist_consistent(172,5626
range_gist_union(198,6377
range_gist_penalty(236,7456
range_gist_picksplit(493,14035
range_gist_same(652,18391
range_super_union(695,19724
range_gist_consistent_int(765,21572
range_gist_consistent_leaf(837,24074
range_gist_fallback_split(881,25589
range_gist_class_split(919,26541
range_gist_single_sorting_split(962,27638
range_gist_double_sorting_split(1051,30421
range_gist_consider_split(1353,38288
get_gist_range_class(1436,40727
single_bound_cmp(1463,41222
interval_cmp_lower(1476,41566
interval_cmp_upper(1489,41888
common_entry_cmp(1502,42209
call_subtype_diff(1520,42616

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/jsonpath_exec.c,3706
typedef struct JsonBaseObjectInfo83,3725
	JsonbContainer *jbc;jbc85,3761
	int			id;86,3783
} JsonBaseObjectInfo;87,3794
typedef struct JsonPathExecContext92,3858
	Jsonb	   *vars;vars94,3895
	JsonbValue *root;root95,3958
	JsonbValue *current;current96,4002
	JsonBaseObjectInfo baseObject;97,4048
	int			lastGeneratedObjectId;99,4139
	int			innermostArraySize;101,4228
	bool		laxMode;102,4293
	bool		ignoreStructuralErrors;104,4372
	bool		throwErrors;108,4557
	bool		useTz;110,4646
} JsonPathExecContext;111,4660
typedef struct JsonLikeRegexContext114,4724
	text	   *regex;regex116,4762
	int			cflags;117,4779
} JsonLikeRegexContext;118,4794
typedef enum JsonPathBool121,4865
	jpbFalse 123,4893
	jpbTrue 124,4908
	jpbUnknown 125,4922
} JsonPathBool;126,4938
typedef enum JsonPathExecResult129,5002
	jperOk 131,5036
	jperNotFound 132,5049
	jperError 133,5068
} JsonPathExecResult;134,5083
#define jperIsError(136,5106
typedef struct JsonValueList141,5225
	JsonbValue *singleton;singleton143,5256
	List	   *list;list144,5280
} JsonValueList;145,5296
typedef struct JsonValueListIterator147,5314
	JsonbValue *value;value149,5353
	List	   *list;list150,5373
	ListCell   *next;next151,5389
} JsonValueListIterator;152,5408
#define jspStrictAbsenseOfErrors(155,5502
#define jspAutoUnwrap(156,5558
#define jspAutoWrap(157,5605
#define jspIgnoreStructuralErrors(158,5650
#define jspThrowErrors(159,5721
#define RETURN_ERROR(162,5842
typedef JsonPathBool (*JsonPathPredicateCallback)JsonPathPredicateCallback170,5973
typedef Numeric (*BinaryArithmFunc)BinaryArithmFunc174,6138
jsonb_path_exists_internal(272,11794
jsonb_path_exists(298,12294
jsonb_path_exists_tz(304,12392
jsonb_path_exists_opr(315,12624
jsonb_path_match_internal(327,12967
jsonb_path_match(366,13764
jsonb_path_match_tz(372,13860
jsonb_path_match_opr(383,14088
jsonb_path_query_internal(395,14362
jsonb_path_query(441,15325
jsonb_path_query_tz(447,15421
jsonb_path_query_array_internal(458,15645
jsonb_path_query_array(472,16033
jsonb_path_query_array_tz(478,16141
jsonb_path_query_first_internal(489,16412
jsonb_path_query_first(506,16867
jsonb_path_query_first_tz(512,16975
executeJsonPath(539,18021
executeItem(599,19490
executeItemOptUnwrapTarget(611,19917
executeItemUnwrapTargetArray(1123,32654
executeNextItem(1143,33167
executeItemOptUnwrapResult(1174,33806
executeItemOptUnwrapResultNoThrow(1209,34611
executeBoolItem(1226,35049
executeNestedBoolItem(1359,38339
executeAnyItem(1380,38767
executePredicate(1471,41032
executeBinaryArithmExpr(1551,42892
executeUnaryArithmExpr(1622,44861
executeStartsWith(1689,46300
executeLikeRegex(1713,46861
executeNumericItemMethod(1743,47640
executeDateTimeMethod(1779,48779
executeKeyValueMethod(1934,53057
appendBoolResult(2045,55671
getJsonPathItem(2073,56261
getJsonPathVariable(2106,56987
JsonbArraySize(2151,57912
executeComparison(2168,58228
binaryCompareStrings(2179,58485
compareStrings(2200,58825
compareItems(2267,60885
compareNumeric(2363,62934
copyJsonbValue(2371,63117
getArrayIndex(2385,63370
setBaseObject(2420,64437
JsonValueListAppend(2432,64717
JsonValueListLength(2446,64980
JsonValueListIsEmpty(2452,65096
JsonValueListHead(2458,65218
JsonValueListGetList(2464,65338
JsonValueListInitIterator(2473,65474
JsonValueListNext(2499,65957
JsonbInitBinary(2520,66302
JsonbType(2533,66564
getScalar(2557,67099
wrapItemsInArray(2568,67429
checkTimezoneIsUsedForCast(2585,67865
castTimeToTimeTz(2597,68231
cmpTimestampWithOverflow(2614,68652
cmpDateToTimestamp(2651,69387
cmpDateToTimestampTz(2665,69696
cmpTimestampToTimestampTz(2681,70086
compareDatetime(2699,70636

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/oid.c,543
#define OidVectorSize(27,637
oidin_subr(35,923
oidin(117,3174
oidout(127,3316
oidrecv(140,3544
oidsend(151,3742
buildoidvector(167,4050
oidvectorin(194,4617
oidvectorout(231,5487
oidvectorrecv(257,6007
oidvectorsend(305,7436
oidparse(314,7562
oid_cmp(336,8045
oideq(354,8424
oidne(363,8555
oidlt(372,8686
oidle(381,8816
oidge(390,8947
oidgt(399,9078
oidlarger(408,9208
oidsmaller(417,9357
oidvectoreq(426,9507
oidvectorne(434,9629
oidvectorlt(442,9751
oidvectorle(450,9872
oidvectorge(458,9994
oidvectorgt(466,10116

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/amutils.c,377
struct am_propname25,615
	const char *name;name27,636
	IndexAMProperty prop;28,655
static const struct am_propname am_propnames[am_propnames31,682
lookup_prop_name(90,1514
test_indoption(117,2320
indexam_property(154,3165
pg_indexam_has_property(412,9336
pg_index_has_property(424,9608
pg_index_column_has_property(436,9903
pg_indexam_progress_phasename(454,10370

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/geo_ops.c,6847
enum path_delim71,2055
	PATH_NONE,73,2073
	PATH_NONE, PATH_OPEN,73,2073
	PATH_NONE, PATH_OPEN, PATH_CLOSED73,2073
#define LDELIM	152,5830
#define RDELIM	153,5851
#define DELIM	154,5872
#define LDELIM_EP	155,5892
#define RDELIM_EP	156,5915
#define LDELIM_C	157,5938
#define RDELIM_C	158,5960
#define LDELIM_L	159,5982
#define RDELIM_L	160,6004
single_decode(189,7065
single_encode(196,7272
pair_decode(205,7449
pair_encode(247,8543
path_decode(258,8762
path_encode(331,10322
pair_count(383,11394
box_in(413,12111
box_out(443,12674
box_recv(454,12872
box_send(489,13523
box_construct(506,13880
box_same(539,14508
box_overlap(551,14777
box_ov(560,14936
box_left(571,15185
box_overleft(586,15558
box_right(597,15780
box_overright(612,16145
box_below(623,16363
box_overbelow(635,16624
box_above(646,16844
box_overabove(658,17105
box_contained(669,17324
box_contain(680,17536
box_contain_box(692,17780
box_below_eq(710,18415
box_above_eq(719,18582
box_lt(732,18846
box_gt(741,19008
box_eq(750,19170
box_le(759,19332
box_ge(768,19494
box_area(784,19867
box_width(796,20062
box_height(808,20258
box_distance(820,20465
box_center(837,20737
box_ar(851,20974
box_cn(860,21121
box_wd(871,21397
box_ht(881,21560
box_intersect(896,21896
box_diagonal(921,22491
line_decode(938,22890
line_in(958,23338
line_out(996,24308
line_recv(1011,24698
line_send(1034,25214
line_construct(1056,25770
line_construct_pp(1081,26241
line_intersect(1103,26821
line_parallel(1112,26988
line_perp(1121,27155
line_vertical(1140,27584
line_horizontal(1148,27700
line_eq(1163,27961
line_sl(1195,28795
line_invsl(1209,29000
line_distance(1223,29203
line_interpt(1248,29861
line_interpt_line(1276,30705
path_area(1342,32513
path_in(1364,32920
path_out(1433,34415
path_recv(1447,34757
path_send(1485,35642
path_n_lt(1512,36284
path_n_gt(1521,36434
path_n_eq(1530,36584
path_n_le(1539,36735
path_n_ge(1548,36886
path_isclosed(1561,37186
path_isopen(1569,37299
path_npoints(1577,37411
path_close(1586,37523
path_open(1596,37655
path_inter(1612,37939
path_distance(1689,39660
path_length(1751,40779
point_in(1790,41594
point_out(1800,41811
point_recv(1811,42007
point_send(1826,42314
point_construct(1842,42580
point_left(1859,43078
point_right(1868,43236
point_above(1877,43395
point_below(1886,43554
point_vert(1895,43713
point_horiz(1904,43871
point_eq(1913,44030
point_ne(1922,44190
point_eq_point(1938,44514
point_distance(1950,44847
point_dt(1959,45024
point_slope(1965,45137
point_sl(1980,45425
point_invsl(1996,45762
lseg_in(2022,46506
lseg_out(2034,46740
lseg_recv(2045,46938
lseg_send(2064,47321
lseg_construct(2082,47677
statlseg_construct(2095,47992
lseg_sl(2108,48213
lseg_invsl(2118,48355
lseg_length(2125,48437
lseg_intersect(2141,48818
lseg_parallel(2151,48986
lseg_perp(2163,49211
lseg_vertical(2172,49375
lseg_horizontal(2180,49508
lseg_eq(2189,49644
lseg_ne(2199,49856
lseg_lt(2209,50070
lseg_le(2219,50273
lseg_gt(2229,50476
lseg_ge(2239,50679
lseg_distance(2259,51183
lseg_center(2269,51352
lseg_interpt_lseg(2291,51928
lseg_interpt(2314,52363
dist_pl(2343,53113
dist_lp(2355,53324
dist_ps(2367,53535
dist_sp(2379,53746
dist_ppath_internal(2388,53923
dist_ppath(2431,54695
dist_pathp(2443,54904
dist_pb(2455,55112
dist_bp(2467,55318
dist_sl(2479,55524
dist_ls(2491,55735
dist_sb(2503,55945
dist_bs(2515,56151
dist_lb(2527,56357
dist_bl(2546,56714
dist_cpoly_internal(2562,57039
dist_cpoly(2579,57363
dist_polyc(2591,57592
dist_ppoly(2603,57820
dist_polyp(2612,57999
dist_ppoly_internal(2621,58186
lseg_interpt_line(2666,59377
line_closept_point(2715,60694
close_pl(2741,61261
lseg_closept_point(2763,61743
close_ps(2782,62134
lseg_closept_lseg(2801,62476
close_lseg(2844,63445
box_closept_point(2869,63972
close_pb(2924,64981
close_sl(2949,65564
lseg_closept_line(2993,66722
close_ls(3021,67152
box_closept_lseg(3046,67695
close_sb(3096,68670
close_lb(3112,68945
line_contain_point(3136,69520
on_pl(3144,69703
lseg_contain_point(3158,70019
on_ps(3166,70185
box_contain_point(3179,70416
on_pb(3186,70583
box_contain_pt(3195,70738
on_ppath(3215,71416
on_sl(3250,72088
box_contain_lseg(3266,72451
on_sb(3273,72587
inter_sl(3287,72944
box_interpt_lseg(3312,73684
inter_sb(3364,75007
inter_lb(3377,75221
make_bound_box(3425,76691
poly_in(3464,77577
poly_out(3505,78698
poly_recv(3521,79166
poly_send(3556,79974
poly_left(3579,80539
poly_overleft(3602,81156
poly_right(3625,81768
poly_overright(3648,82386
poly_below(3671,82992
poly_overbelow(3694,83606
poly_above(3717,84214
poly_overabove(3740,84828
poly_same(3766,85530
poly_overlap(3790,86136
touched_lseg_inside_poly(3866,87933
lseg_inside_poly(3902,88782
poly_contain_poly(3971,90226
poly_contain(3999,90822
poly_contained(4021,91369
poly_contain_pt(4041,91793
pt_contained_poly(4050,91980
poly_distance(4060,92170
construct_point(4082,92653
point_add_point(4097,92905
point_add(4105,93061
point_sub_point(4120,93317
point_sub(4128,93473
point_mul_point(4143,93729
point_mul(4153,93983
point_div_point(4168,94239
point_div(4182,94621
points_box(4203,95048
box_add(4217,95282
box_sub(4232,95572
box_mul(4247,95862
box_div(4266,96197
point_box(4288,96569
boxes_bound_box(4307,96879
path_add(4334,97583
path_add_pt(4382,98618
path_sub_pt(4395,98866
path_mul_pt(4411,99170
path_div_pt(4424,99418
path_center(4438,99667
path_poly(4452,99908
poly_npoints(4494,100860
poly_center(4503,100978
poly_box(4519,101232
box_poly(4535,101464
poly_path(4564,102068
circle_in(4611,103197
circle_out(4676,104659
circle_recv(4698,105171
circle_send(4722,105736
circle_same(4746,106359
circle_overlap(4759,106726
circle_overleft(4772,107088
circle_left(4784,107408
circle_right(4796,107725
circle_overright(4809,108087
circle_contained(4821,108409
circle_contain(4833,108722
circle_below(4846,109038
circle_above(4858,109353
circle_overbelow(4871,109715
circle_overabove(4884,110080
circle_eq(4898,110445
circle_ne(4907,110638
circle_lt(4916,110831
circle_gt(4925,111024
circle_le(4934,111217
circle_ge(4943,111410
circle_add_pt(4960,111814
circle_sub_pt(4975,112132
circle_mul_pt(4994,112509
circle_div_pt(5009,112866
circle_area(5027,113280
circle_diameter(5038,113468
circle_radius(5049,113670
circle_distance(5061,113875
circle_contain_pt(5077,114212
pt_contained_circle(5089,114435
dist_pc(5104,114740
dist_cpoint(5122,115066
circle_center(5138,115409
circle_ar(5154,115713
cr_circle(5165,115970
circle_box(5181,116275
box_circle(5203,116753
circle_poly(5220,117131
poly_to_circle(5280,118600
poly_circle(5302,119176
#define POINT_ON_POLYGON 5332,119992
point_inside(5335,120037
lseg_crossing(5392,121416
plist_same(5452,123043
pg_hypot(5514,124664

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/arrayfuncs.c,3888
bool		Array_nulls 41,969
#define ASSGN	46,1024
#define AARR_FREE_IF_COPY(48,1044
	ARRAY_NO_LEVEL,56,1193
	ARRAY_LEVEL_STARTED,57,1210
	ARRAY_ELEM_STARTED,58,1232
	ARRAY_ELEM_COMPLETED,59,1253
	ARRAY_QUOTED_ELEM_STARTED,60,1276
	ARRAY_QUOTED_ELEM_COMPLETED,61,1304
	ARRAY_ELEM_DELIMITED,62,1334
	ARRAY_LEVEL_COMPLETED,63,1357
	ARRAY_LEVEL_DELIMITED64,1381
} ArrayParseState;65,1404
typedef struct ArrayIteratorData68,1464
	ArrayType  *arr;arr71,1572
	bits8	   *nullbitmap;nullbitmap72,1628
	int			nitems;73,1682
	int16		typlen;74,1739
	bool		typbyval;75,1785
	char		typalign;76,1839
	int			slice_ndim;79,1944
	int			slice_len;80,2007
	int		   *slice_dims;slice_dims81,2061
	int		   *slice_lbound;slice_lbound82,2107
	Datum	   *slice_values;slice_values83,2156
	bool	   *slice_nulls;slice_nulls84,2217
	char	   *data_ptr;data_ptr87,2340
	int			current_item;88,2401
}			ArrayIteratorData;89,2461
array_in(173,6021
array_isspace(433,13399
ArrayCount(453,13765
ReadArrayStr(718,22097
CopyArrayEls(958,28193
array_out(1013,29209
#define APPENDSTR(1198,33534
#define APPENDCHAR(1199,33592
#undef APPENDSTR1247,34296
#undef APPENDCHAR1248,34313
array_recv(1268,34697
ReadArrayBinary(1464,40772
array_send(1569,43380
array_ndims(1673,46061
array_dims(1689,46402
array_lower(1727,47125
array_upper(1754,47718
array_length(1784,48368
array_cardinality(1811,48922
array_get_element(1841,49877
array_get_element_expanded(1942,51916
array_get_slice(2050,54811
array_set_element(2221,59826
array_set_element_expanded(2503,66988
array_set_slice(2781,75208
array_ref(3098,84405
array_set(3115,84976
array_map(3153,86510
construct_array(3313,90933
construct_md_array(3348,92188
construct_empty_array(3432,94331
construct_empty_expanded_array(3449,94740
deconstruct_array(3483,96093
array_contains_nulls(3550,97549
array_eq(3597,98433
array_ne(3726,102066
array_lt(3732,102154
array_gt(3738,102232
array_le(3744,102310
array_ge(3750,102389
btarraycmp(3756,102468
array_cmp(3768,102641
hash_array(3941,106983
hash_array_extended(4039,109819
array_contain_compare(4129,112342
arrayoverlap(4272,115885
arraycontains(4290,116331
arraycontained(4308,116777
array_create_iterator(4345,117953
array_iterate(4424,120102
array_free_iterator(4507,122041
array_get_isnull(4529,122625
array_set_isnull(4546,123073
ArrayCast(4564,123423
ArrayCastAndSet(4575,123657
array_seek(4614,124575
array_nelems_size(4662,125585
array_copy(4684,126378
array_bitmap_copy(4714,127516
array_slice_size(4785,128941
array_extract_slice(4845,130495
array_insert_slice(4918,132429
initArrayResult(5041,136582
accumArrayResult(5080,137855
makeArrayResult(5144,139665
makeMdArrayResult(5176,140609
initArrayResultArr(5228,142030
accumArrayResultArr(5274,143452
makeArrayResultArr(5427,147881
initArrayResultAny(5502,149814
accumArrayResultAny(5547,151122
makeArrayResultAny(5575,151825
array_larger(5605,152480
array_smaller(5614,152634
typedef struct generate_subscripts_fctx5623,152784
	int32		lower;5625,152826
	int32		upper;5626,152841
	bool		reverse;5627,152856
} generate_subscripts_fctx;5628,152872
generate_subscripts(5635,153037
generate_subscripts_nodir(5699,154660
array_fill_with_lower_bounds(5710,154903
array_fill(5751,155743
create_array_envelope(5786,156435
array_fill_internal(5803,156868
array_unnest(5970,161086
		array_iter	iter;5974,161138
		int			nextelem;5975,161157
		int			numelems;5976,161175
		int16		elmlen;5977,161193
		bool		elmbyval;5978,161210
		char		elmalign;5979,161228
	} array_unnest_fctx;5980,161246
array_unnest_support(6058,163266
array_replace_internal(6094,164210
array_remove(6352,170208
array_replace(6374,170675
width_bucket_array(6403,171525
width_bucket_array_float8(6466,173375
width_bucket_array_fixed(6510,174467
width_bucket_array_variable(6565,175736

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/tsquery_cleanup.c,446
typedef struct NODE21,495
	struct NODE *left;left23,517
	struct NODE *right;right24,537
	QueryItem  *valnode;valnode25,558
} NODE;26,580
maketree(32,654
	QueryItem  *ptr;ptr55,1121
	int			len;56,1139
	int			cur;57,1181
} PLAINTREE;58,1227
plainnode(61,1253
plaintree(96,2107
freetree(114,2424
clean_NOT_intree(135,2840
clean_NOT(189,3860
clean_stopword_intree(237,6250
calcstrlen(362,9453
cleanup_tsquery_stopwords(386,9839

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/network.c,2018
#define ABBREV_BITS_INET4_NETMASK_SIZE	42,973
#define ABBREV_BITS_INET4_SUBNET	43,1014
	int64		input_count;48,1101
	bool		estimating;49,1159
	hyperLogLogState abbr_card;51,1217
} network_sortsupport_state;52,1274
network_in(76,2067
inet_in(122,3260
cidr_in(130,3379
network_out(142,3548
inet_out(166,4126
cidr_out(174,4248
network_recv(193,4768
inet_recv(251,6389
cidr_recv(259,6527
network_send(271,6732
inet_send(293,7161
cidr_send(301,7287
inet_to_cidr(310,7413
inet_set_masklen(325,7705
cidr_set_masklen(349,8199
cidr_set_masklen_internal(369,8664
network_cmp_internal(406,9722
network_cmp(426,10138
network_sortsupport(438,10341
network_fast_cmp(474,11117
network_cmp_abbrev(486,11343
network_abbrev_abort(503,11723
network_abbrev_convert(640,16484
network_lt(811,21775
network_le(820,21941
network_eq(829,22108
network_ge(838,22275
network_gt(847,22442
network_ne(856,22608
network_smaller(868,22812
network_larger(880,23025
hashinet(895,23295
hashinetextended(905,23548
network_sub(918,23820
network_subeq(933,24112
network_sup(948,24407
network_supeq(963,24699
network_overlap(978,24994
network_subset_support(996,25354
match_network_function(1043,26615
match_network_subset(1091,27740
network_host(1188,30400
network_show(1214,31171
inet_abbrev(1237,31768
cidr_abbrev(1255,32209
network_masklen(1273,32649
network_family(1281,32763
network_broadcast(1300,33030
network_network(1345,33728
network_netmask(1389,34341
network_hostmask(1431,34919
inet_same_family(1479,35732
inet_merge(1491,35973
convert_network_to_scalar(1517,36712
bitncmp(1584,38067
bitncommon(1618,38588
addressOK(1656,39309
network_scan_first(1705,40006
network_scan_last(1719,40411
inet_client_addr(1731,40659
inet_client_port(1770,41372
inet_server_addr(1807,42065
inet_server_port(1846,42780
inetnot(1880,43382
inetand(1905,43779
inetor(1937,44449
internal_inetpl(1969,45125
inetpl(2021,46502
inetmi_int8(2031,46662
inetmi(2041,46828
clean_ipv6_addr(2118,48955

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/tid.c,669
#define DatumGetItemPointer(40,954
#define ItemPointerGetDatum(41,1021
#define PG_GETARG_ITEMPOINTER(42,1072
#define PG_RETURN_ITEMPOINTER(43,1145
#define LDELIM	45,1209
#define RDELIM	46,1230
#define DELIM	47,1251
#define NTIDARGS	48,1271
tidin(55,1448
tidout(107,2801
tidrecv(127,3298
tidsend(148,3773
tideq(164,4271
tidne(173,4453
tidlt(182,4635
tidle(191,4816
tidgt(200,4998
tidge(209,5179
bttidcmp(218,5361
tidlarger(227,5542
tidsmaller(236,5749
hashtid(245,5957
hashtidextended(260,6412
static ItemPointerData Current_last_tid 278,6794
setLastTid(281,6855
currtid_for_view(292,7064
currtid_byreloid(359,8659
currtid_byrelname(406,9886

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/tsginidx.c,601
gin_cmp_tslexeme(25,551
gin_cmp_prefix(41,877
gin_extract_tsvector(65,1374
gin_extract_tsquery(95,1952
	QueryItem  *first_item;first_item175,4003
	GinTernaryValue *check;check176,4028
	int		   *map_item_operand;map_item_operand177,4053
	bool	   *need_recheck;need_recheck178,4081
} GinChkVal;179,4105
checkcondition_gin(185,4220
gin_tsquery_consistent(219,5180
gin_tsquery_triconsistent(259,6173
gin_extract_tsvector_2args(306,7534
gin_extract_tsquery_5args(318,7843
gin_tsquery_consistent_6args(330,8151
gin_extract_tsquery_oldsig(342,8495
gin_tsquery_consistent_oldsig(352,8724

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/tsvector_parser.c,726
struct TSVectorParseStateData27,734
	char	   *prsbuf;prsbuf29,766
	char	   *bufstart;bufstart30,813
	char	   *word;word31,876
	int			len;32,932
	int			eml;33,987
	bool		oprisdelim;34,1031
	bool		is_tsquery;35,1088
	bool		is_web;36,1154
init_tsvector_parser(46,1400
reset_tsvector_parser(67,1969
close_tsvector_parser(76,2104
#define RESIZEPRSBUF 83,2264
#define RETURN_TOKEN 95,2579
#define WAITWORD	116,2961
#define WAITENDWORD	117,2981
#define WAITNEXTCHAR	118,3004
#define WAITENDCMPLX	119,3027
#define WAITPOSINFO	120,3050
#define INPOSINFO	121,3073
#define WAITPOSDELIM	122,3094
#define WAITCHARCMPLX	123,3117
#define PRSSYNTAXERROR 125,3142
prssyntaxerror(128,3200
gettoken_tsvector(155,4069

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/network_spgist.c,219
inet_spg_config(50,1906
inet_spg_choose(67,2247
inet_spg_picksplit(164,5111
inet_spg_inner_consistent(238,6896
inet_spg_leaf_consistent(322,8675
inet_spg_node_number(349,9575
inet_spg_consistent_bitmap(373,10222

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/xml.c,4775
#define HAVE_XMLSTRUCTUREDERRORCONTEXT 66,2516
int			xmlbinary;97,3273
int			xmloption;98,3290
#define ERRCXT_MAGIC	103,3377
struct PgXmlErrorContext105,3408
	int			magic;107,3435
	PgXmlStrictness strictness;109,3498
	bool		err_occurred;111,3587
	StringInfoData err_buf;112,3608
	xmlStructuredErrorFunc saved_errfunc;114,3700
	void	   *saved_errcxt;saved_errcxt115,3739
	xmlExternalEntityLoader saved_entityfunc;117,3824
static MemoryContext LibxmlContext 130,4278
#define XMLTABLE_CONTEXT_MAGIC	179,6717
typedef struct XmlTableBuilderData180,6757
	int			magic;182,6794
	int			natts;183,6808
	long int	row_count;184,6822
	PgXmlErrorContext *xmlerrcxt;xmlerrcxt185,6843
	xmlParserCtxtPtr ctxt;186,6874
	xmlDocPtr	doc;187,6898
	xmlXPathContextPtr xpathcxt;188,6914
	xmlXPathCompExprPtr xpathcomp;189,6944
	xmlXPathObjectPtr xpathobj;190,6976
	xmlXPathCompExprPtr *xpathscomp;xpathscomp191,7005
} XmlTableBuilderData;192,7039
const TableFuncRoutine XmlTableRoutine 207,7794
#define NO_XML_SUPPORT(219,8017
#define NAMESPACE_XSD 228,8348
#define NAMESPACE_XSI 229,8405
#define NAMESPACE_SQLXML 230,8471
xmlChar_to_encoding(236,8576
xml_in(258,9130
#define PG_XML_DEFAULT_VERSION 282,9573
xml_out_internal(293,9867
xml_out(336,10754
xml_recv(351,11112
xml_send(418,12886
appendStringInfoText(439,13347
stringinfo_to_xmltype(447,13497
cstring_to_xmltype(454,13625
xmlBuffer_to_xmltype(462,13750
xmlcomment(471,13926
xmlconcat(512,14879
xmlconcat2(578,16188
texttoxml(596,16514
xmltotext(605,16645
xmltotext_with_xmloption(615,16801
xmlelement(628,17142
xmlparse(752,19949
xmlpi(770,20255
xmlroot(822,21471
xmlvalidate(878,22715
xml_is_document(888,22875
pg_xml_init_library(947,24106
pg_xml_init(993,25462
pg_xml_done(1074,28112
pg_xml_error_occurred(1122,29413
#define CHECK_XML_SPACE(1137,29862
#define SKIP_XML_SPACE(1143,29979
#define PG_XMLISNAMECHAR(1148,30165
xml_pnstrdup(1157,30469
pg_xmlCharStrndup(1169,30731
xml_pstrdup_and_free(1186,31088
parse_xml_decl(1215,31574
print_xml_decl(1388,35484
xml_doctype_in_content(1454,38090
xml_parse(1513,39342
xml_text2xmlChar(1636,42532
xml_memory_init(1649,42777
xml_palloc(1665,43193
xml_repalloc(1672,43286
xml_pfree(1679,43370
xml_pstrdup(1688,43504
xmlPgEntityLoader(1707,44106
xml_ereport(1725,44626
xml_errorHandler(1753,45329
xml_ereport_by_code(1928,50565
chopStringInfoNewlines(1969,51554
appendStringInfoLineSeparator(1980,51773
sqlchar_to_unicode(1992,52007
is_valid_xml_namefirst(2011,52416
is_valid_xml_namechar(2020,52577
map_sql_identifier_to_xml_name(2036,52973
map_xml_name_to_sql_identifier(2092,54261
map_sql_value_to_xml_value(2134,55410
escape_xml(2353,60930
_SPI_strdup(2385,61441
query_to_oid_list(2442,63455
schema_get_xml_visible_tables(2471,63998
#define XML_VISIBLE_SCHEMAS_EXCLUDE 2492,64551
#define XML_VISIBLE_SCHEMAS 2494,64643
database_get_xml_visible_schemas(2498,64819
database_get_xml_visible_tables(2505,64947
table_to_xml_internal(2524,65505
table_to_xml(2541,65982
query_to_xml(2555,66341
cursor_to_xml(2569,66730
xmldata_root_element_start(2623,68285
xmldata_root_element_end(2650,69037
query_to_xml_internal(2657,69173
table_to_xmlschema(2702,70143
query_to_xmlschema(2721,70614
cursor_to_xmlschema(2750,71388
table_to_xml_and_xmlschema(2776,72064
query_to_xml_and_xmlschema(2797,72656
schema_to_xml_internal(2833,73659
schema_to_xml(2876,74617
xsd_schema_element_start(2898,75170
xsd_schema_element_end(2915,75580
schema_to_xmlschema_internal(2922,75696
schema_to_xmlschema(2967,76652
schema_to_xml_and_xmlschema(2980,77010
database_to_xml_internal(3008,77755
database_to_xml(3051,78685
database_to_xmlschema_internal(3063,79003
database_to_xmlschema(3106,79918
database_to_xml_and_xmlschema(3118,80230
map_multipart_sql_identifier_to_xml_name(3137,80753
map_sql_table_to_xmlschema(3168,81518
map_sql_schema_to_xmlschema_types(3273,84274
map_sql_catalog_to_xmlschema_types(3346,86234
map_sql_type_to_xml_name(3403,87728
map_sql_typecoll_to_xmlschema_types(3508,90428
map_sql_type_to_xmlschema_type(3563,91712
SPI_sql_row_to_xmlelement(3738,97290
xml_xmlnodetoxmltype(3808,98796
xml_xpathobjtoxmlarray(3898,101437
xpath_internal(3976,103371
xpath(4167,109231
xmlexists(4190,109824
xpath_exists(4213,110344
wellformed_xml(4237,110796
xml_is_well_formed(4263,111197
xml_is_well_formed_document(4276,111423
xml_is_well_formed_content(4289,111667
GetXmlTableBuilderPrivateData(4312,112101
XmlTableInitOpaque(4338,112995
XmlTableSetDocument(4386,113960
XmlTableSetNamespace(4443,115351
XmlTableSetRowFilter(4469,116076
XmlTableSetColumnFilter(4498,116847
XmlTableFetchRow(4530,117753
XmlTableGetValue(4581,119189
XmlTableDestroyOpaque(4733,123067

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/cash.c,828
num_word(39,998
cash_in(97,2453
cash_out(310,8470
cash_recv(513,14132
cash_send(524,14326
cash_eq(539,14544
cash_ne(548,14671
cash_lt(557,14798
cash_le(566,14924
cash_gt(575,15051
cash_ge(584,15177
cash_cmp(593,15304
cash_pl(611,15554
cash_mi(627,15761
cash_div_cash(643,15987
cash_mul_flt8(663,16366
flt8_mul_cash(678,16589
cash_div_flt8(693,16810
cash_mul_flt4(713,17141
flt4_mul_cash(728,17373
cash_div_flt4(744,17606
cash_mul_int8(764,17944
int8_mul_cash(779,18157
cash_div_int8(793,18377
cash_mul_int4(814,18697
int4_mul_cash(829,18910
cash_div_int4(845,19134
cash_mul_int2(866,19454
int2_mul_cash(880,19666
cash_div_int2(895,19879
cashlarger(914,20205
cashsmaller(929,20439
cash_words(945,20752
cash_numeric(1032,22356
numeric_cash(1089,23896
int4_cash(1123,24726
int8_cash(1153,25374

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/windowfuncs.c,691
typedef struct rank_context22,485
	int64		rank;24,515
} rank_context;25,550
	int32		ntile;32,620
	int64		rows_per_bucket;33,658
	int64		boundary;34,718
	int64		remainder;35,781
} ntile_context;36,835
rank_up(47,1067
window_row_number(82,1808
window_rank(98,2121
window_dense_rank(118,2517
window_percent_rank(140,3015
window_cume_dist(169,3790
window_ntile(211,4708
leadlag_common(286,6455
window_lag(338,7500
window_lag_with_offset(350,7744
window_lag_with_offset_and_default(361,7965
window_lead(373,8213
window_lead_with_offset(385,8467
window_lead_with_offset_and_default(396,8690
window_first_value(407,8914
window_last_value(428,9309
window_nth_value(449,9721

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/varchar.c,1144
anychar_typmodin(33,910
anychar_typmodout(72,1928
bpchar_input(126,3863
bpcharin(194,5522
bpcharout(216,5958
bpcharrecv(227,6146
bpcharsend(249,6598
bpchar(269,7240
char_bpchar(351,8906
bpchar_name(369,9203
name_bpchar(405,9941
bpchartypmodin(415,10113
bpchartypmodout(423,10250
varchar_input(454,11272
varcharin(488,12052
varcharout(510,12502
varcharrecv(521,12693
varcharsend(543,13151
varchar_support(560,13596
varchar(604,14953
varchartypmodin(643,15914
varchartypmodout(651,16055
bcTruelen(665,16444
bpchartruelen(671,16541
bpcharlen(688,16805
bpcharoctetlen(704,17160
check_collation_set(722,17724
bpchareq(738,18153
bpcharne(778,19021
bpcharlt(818,19888
bpcharle(839,20276
bpchargt(860,20665
bpcharge(881,21053
bpcharcmp(902,21442
bpchar_sortsupport(923,21828
bpchar_larger(940,22193
bpchar_smaller(958,22552
hashbpchar(981,23025
hashbpcharextended(1041,24384
internal_bpchar_pattern_compare(1109,26123
bpchar_pattern_lt(1131,26482
bpchar_pattern_le(1147,26772
bpchar_pattern_ge(1163,27063
bpchar_pattern_gt(1179,27354
btbpchar_pattern_cmp(1195,27644
btbpchar_pattern_sortsupport(1211,27934

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/varlena.c,5608
int			bytea_output 42,1055
typedef struct varlena unknown;44,1095
typedef struct varlena VarString;45,1127
	bool		is_multibyte;52,1226
	bool		is_multibyte_char_in_char;53,1277
	char	   *str1;str155,1312
	char	   *str2;str256,1352
	int			len1;57,1390
	int			len2;58,1435
	int			skiptablemask;61,1510
	int			skiptable[skiptable62,1580
	char	   *last_match;last_match64,1650
	char	   *refpoint;refpoint72,1984
	int			refpos;73,2051
} TextPositionState;74,2117
	char	   *buf1;buf178,2156
	char	   *buf2;buf280,2239
	int			buflen1;81,2305
	int			buflen2;82,2321
	int			last_len1;83,2337
	int			last_len2;84,2405
	int			last_returned;85,2472
	bool		cache_blob;86,2531
	bool		collate_c;87,2596
	Oid			typid;88,2614
	hyperLogLogState abbr_card;89,2677
	hyperLogLogState full_card;90,2746
	double		prop_card;91,2808
	pg_locale_t locale;92,2867
} VarStringSortSupport;93,2888
#define TEXTBUFLEN	99,3048
#define DatumGetUnknownP(101,3074
#define DatumGetUnknownPCopy(102,3138
#define PG_GETARG_UNKNOWN_P(103,3210
#define PG_GETARG_UNKNOWN_P_COPY(104,3279
#define PG_RETURN_UNKNOWN_P(105,3356
#define DatumGetVarStringP(107,3410
#define DatumGetVarStringPP(108,3477
cstring_to_text(172,6517
cstring_to_text_with_len(184,6763
text_to_cstring(205,7336
text_to_cstring_buffer(236,8221
#define VAL(263,8995
#define DIG(264,9026
byteain(278,9405
byteaout(374,11458
bytearecv(457,13290
byteasend(476,13725
bytea_string_agg_transfn(484,13838
bytea_string_agg_finalfn(516,14624
textin(542,15196
textout(553,15389
textrecv(564,15571
textsend(582,15916
unknownin(597,16203
unknownout(609,16424
unknownrecv(621,16648
unknownsend(636,16960
textlen(656,17366
text_length(674,17837
textoctetlen(694,18282
textcat(713,18752
text_catenate(728,19087
charlen_to_bytelen(769,19922
text_substr(815,21222
text_substr_no_len(829,21527
text_substring(848,22089
textoverlay(1045,27114
textoverlay_no_len(1056,27397
text_overlay(1068,27720
textpos(1105,28736
text_position(1128,29275
text_position_setup(1168,30504
text_position_next(1297,34771
text_position_next_internal(1361,36489
text_position_get_match_ptr(1430,38258
text_position_get_match_pos(1441,38449
text_position_cleanup(1459,38856
check_collation_set(1465,38946
varstr_cmp(1494,40039
text_cmp(1710,45081
texteq(1735,45586
textne(1789,46863
text_lt(1837,47830
text_le(1852,48100
text_gt(1867,48371
text_ge(1882,48641
text_starts_with(1897,48912
bttextcmp(1937,49874
bttextsortsupport(1952,50142
varstr_sortsupport(1979,50986
varstrfastcmp_c(2141,56631
bpcharfastcmp_c(2178,57475
namefastcmp_c(2211,58185
varlenafastcmp_locale(2223,58455
namefastcmp_locale(2254,59089
varstrfastcmp_locale(2268,59410
varstrcmp_abbrev(2420,63853
varstr_abbrev_convert(2445,64742
varstr_abbrev_abort(2685,72577
btvarstrequalimage(2803,77122
text_larger(2819,77445
text_smaller(2831,77685
nameeqtext(2848,77995
texteqname(2873,78553
namenetext(2898,79111
textnename(2923,79674
btnametextcmp(2948,80237
bttextnamecmp(2964,80562
#define CmpCall(2979,80881
namelttext(2986,81066
nameletext(2992,81151
namegttext(2998,81237
namegetext(3004,81322
textltname(3010,81408
textlename(3016,81493
textgtname(3022,81579
textgename(3028,81664
#undef CmpCall3033,81744
internal_text_pattern_compare(3045,82086
text_pattern_lt(3067,82455
text_pattern_le(3083,82733
text_pattern_ge(3099,83012
text_pattern_gt(3115,83291
bttext_pattern_cmp(3131,83569
bttext_pattern_sortsupport(3147,83847
byteaoctetlen(3170,84433
byteacat(3186,84770
bytea_catenate(3201,85115
#define PG_STR_GET_BYTEA(3234,85725
bytea_substr(3253,86379
bytea_substr_no_len(3267,86694
bytea_substring(3276,86872
byteaoverlay(3335,88284
byteaoverlay_no_len(3346,88574
bytea_overlay(3358,88894
byteapos(3394,89888
byteaGetByte(3438,90708
byteaGetBit(3467,91369
byteaSetByte(3505,92251
byteaSetBit(3537,92968
text_name(3588,94018
name_text(3611,94499
textToQualifiedNameList(3628,94940
SplitIdentifierString(3686,96662
SplitDirectoriesString(3813,100332
SplitGUCList(3934,103924
byteaeq(4023,106107
byteane(4055,106760
bytealt(4087,107412
byteale(4107,107821
byteagt(4127,108231
byteage(4147,108640
byteacmp(4167,109050
bytea_sortsupport(4189,109489
appendStringInfoText(4211,109979
replace_text(4225,110330
check_replace_text_has_escape_char(4300,112117
appendStringInfoRegexpSubstr(4333,112758
#define REGEXP_REPLACE_BACKREF_CNT	4427,114810
replace_text_regexp(4438,115092
split_text(4573,118443
text_isequal(4666,120731
text_to_array(4680,121054
text_to_array_null(4694,121432
text_to_array_internal(4705,121674
array_to_text(4870,125718
array_to_text_null(4886,126152
array_to_text_internal(4912,126783
#define HEXBASE 5029,129538
to_hex32(5035,129662
to_hex64(5059,130142
pg_column_size(5084,130610
makeStringAggState(5138,131933
string_agg_transfn(5162,132477
string_agg_finalfn(5188,133136
build_concat_foutcache(5210,133801
concat_internal(5248,134857
text_concat(5328,137020
text_concat_ws(5343,137335
text_left(5364,137765
text_right(5388,138300
text_reverse(5409,138697
#define TEXT_FORMAT_FLAG_MINUS	5449,139356
#define ADVANCE_PARSE_POINTER(5451,139424
text_format(5464,139746
text_format_parse_digits(5741,146931
text_format_parse_format(5790,148572
text_format_string_conversion(5867,150528
text_format_append_string(5916,151760
text_format_nv(5968,152954
rest_of_char_same(5978,153146
#define LEVENSHTEIN_LESS_EQUAL5991,153371
unicode_norm_form_from_string(6000,153488
unicode_normalize_func(6029,154240
unicode_is_normalized(6095,156161

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/tsvector.c,302
	WordEntry	entry;25,533
	WordEntryPos *pos;pos26,574
	int			poslen;27,594
} WordEntryIN;28,643
compareWordEntryPos(33,712
uniquePos(51,1141
compareentry(83,1710
uniqueentry(99,2185
WordEntryCMP(171,3817
tsvectorin(178,3914
tsvectorout(311,7000
tsvectorsend(404,8787
tsvectorrecv(443,9526

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/rangetypes_spgist.c,291
spg_range_quad_config(60,2455
getQuadrant(95,3491
spg_range_quad_choose(131,4228
bound_cmp(186,5693
spg_range_quad_picksplit(200,6060
spg_range_quad_inner_consistent(300,9032
adjacent_cmp_bounds(787,22210
adjacent_inner_consistent(889,26188
spg_range_quad_leaf_consistent(919,26945

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/levenshtein.c,312
#define MAX_LEVENSHTEIN_STRLEN	26,1048
varstr_levenshtein_less_equal(68,3215
#undef START_COLUMN97,3893
#undef STOP_COLUMN98,3913
#define START_COLUMN 99,3932
#define STOP_COLUMN 100,3966
#undef START_COLUMN102,4004
#undef STOP_COLUMN103,4024
#define START_COLUMN 104,4043
#define STOP_COLUMN 105,4066

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/array_expanded.c,299
static const ExpandedObjectMethods EA_methods 28,798
expand_array(50,1457
copy_byval_expanded_array(185,5935
EA_get_flat_size(233,7430
EA_flatten_into(293,8902
DatumGetExpandedArray(352,10529
DatumGetExpandedArrayX(372,11044
DatumGetAnyArrayP(401,11884
deconstruct_expanded_array(424,12405

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/version.c,22
pgsql_version(21,403

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/formatting.c,11932
#define DEBUG_elog_output	62,1887
#define RETURN_ERROR(118,3516
#define CHECK_ERROR 131,3679
#define DCH_FLAG	141,3824
#define NUM_FLAG	142,3868
#define STD_FLAG	143,3909
#define KeyWord_INDEX_SIZE	149,4044
#define KeyWord_INDEX_FILTER(150,4084
#define DCH_MAX_ITEM_SIZ	156,4217
#define NUM_MAX_ITEM_SIZ	157,4278
	const char *name;name166,4419
	int			len,167,4461
				id,168,4496
				type;169,4534
} KeySuffix;170,4570
	FROM_CHAR_DATE_NONE 181,4787
	FROM_CHAR_DATE_GREGORIAN,182,4852
	FROM_CHAR_DATE_ISOWEEK	183,4925
} FromCharDateMode;184,4975
	const char *name;name188,5013
	int			len;189,5032
	int			id;190,5044
	bool		is_digit;191,5055
	FromCharDateMode date_mode;192,5072
} KeyWord;193,5101
	uint8		type;197,5130
	char		character[character198,5177
	uint8		suffix;199,5245
	const KeyWord *key;key200,5304
} FormatNode;201,5351
#define NODE_TYPE_END	203,5366
#define NODE_TYPE_ACTION	204,5391
#define NODE_TYPE_CHAR	205,5418
#define NODE_TYPE_SEPARATOR	206,5444
#define NODE_TYPE_SPACE	207,5474
#define SUFFTYPE_PREFIX	209,5502
#define SUFFTYPE_POSTFIX	210,5529
#define CLOCK_24_HOUR	212,5557
#define CLOCK_12_HOUR	213,5582
static const char *const months_full[months_full220,5656
static const char *const days_short[days_short225,5832
#define ADJUST_YEAR(236,6171
#define A_D_STR	238,6277
#define a_d_STR	239,6301
#define AD_STR	240,6325
#define ad_STR	241,6346
#define B_C_STR	243,6368
#define b_c_STR	244,6392
#define BC_STR	245,6416
#define bc_STR	246,6437
static const char *const adbc_strings[adbc_strings258,6802
static const char *const adbc_strings_long[adbc_strings_long259,6884
#define A_M_STR	265,7019
#define a_m_STR	266,7043
#define AM_STR	267,7067
#define am_STR	268,7088
#define P_M_STR	270,7110
#define p_m_STR	271,7134
#define PM_STR	272,7158
#define pm_STR	273,7179
static const char *const ampm_strings[ampm_strings285,7544
static const char *const ampm_strings_long[ampm_strings_long286,7626
static const char *const rm_months_upper[rm_months_upper294,7893
static const char *const rm_months_lower[rm_months_lower297,8021
static const char *const rm1[rm1304,8198
static const char *const rm10[rm10305,8295
static const char *const rm100[rm100306,8393
static const char *const numTH[numTH312,8546
static const char *const numth[numth313,8613
#define TH_UPPER	319,8733
#define TH_LOWER	320,8753
	int			pre,328,8852
				post,329,8903
				lsign,330,8952
				flag,331,8992
				pre_lsign_num,332,9031
				multi,333,9079
				zero_start,334,9120
				zero_end,335,9168
				need_locale;336,9213
} NUMDesc;337,9255
#define NUM_F_DECIMAL	343,9327
#define NUM_F_LDECIMAL	344,9359
#define NUM_F_ZERO	345,9392
#define NUM_F_BLANK	346,9422
#define NUM_F_FILLMODE	347,9453
#define NUM_F_LSIGN	348,9486
#define NUM_F_BRACKET	349,9517
#define NUM_F_MINUS	350,9549
#define NUM_F_PLUS	351,9580
#define NUM_F_ROMAN	352,9610
#define NUM_F_MULTI	353,9642
#define NUM_F_PLUS_POST	354,9674
#define NUM_F_MINUS_POST	355,9709
#define NUM_F_EEEE	356,9744
#define NUM_LSIGN_PRE	358,9776
#define NUM_LSIGN_POST	359,9803
#define NUM_LSIGN_NONE	360,9828
#define IS_DECIMAL(366,9895
#define IS_LDECIMAL(367,9947
#define IS_ZERO(368,10001
#define IS_BLANK(369,10047
#define IS_FILLMODE(370,10095
#define IS_BRACKET(371,10149
#define IS_MINUS(372,10201
#define IS_LSIGN(373,10249
#define IS_PLUS(374,10297
#define IS_ROMAN(375,10343
#define IS_MULTI(376,10391
#define IS_EEEE(377,10439
#define DCH_CACHE_OVERHEAD 397,11217
#define NUM_CACHE_OVERHEAD 399,11284
#define DCH_CACHE_SIZE 402,11370
#define NUM_CACHE_SIZE 404,11468
#define DCH_CACHE_ENTRIES	407,11567
#define NUM_CACHE_ENTRIES	408,11596
	FormatNode	format[format412,11643
	char		str[str413,11683
	bool		std;414,11715
	bool		valid;415,11727
	int			age;416,11741
} DCHCacheEntry;417,11753
	FormatNode	format[format421,11788
	char		str[str422,11828
	bool		valid;423,11860
	int			age;424,11874
	NUMDesc		Num;425,11886
} NUMCacheEntry;426,11901
static DCHCacheEntry *DCHCache[DCHCache429,11968
static int	n_DCHCache 430,12019
static int	DCHCounter 431,12079
static NUMCacheEntry *NUMCache[NUMCache434,12180
static int	n_NUMCache 435,12231
static int	NUMCounter 436,12291
	FromCharDateMode mode;444,12429
	int			hh,445,12453
				pm,446,12464
				mi,447,12472
				ss,448,12480
				ssss,449,12488
				d,450,12498
				dd,451,12557
				ddd,452,12565
				mm,453,12574
				ms,454,12582
				year,455,12590
				bc,456,12600
				ww,457,12608
				w,458,12616
				cc,459,12623
				j,460,12631
				us,461,12638
				yysz,462,12646
				clock,463,12683
				tzsign,464,12723
				tzh,465,12782
				tzm,466,12791
				ff;467,12800
} TmFromChar;468,12838
#define ZERO_tmfc(470,12853
#define DEBUG_TMFC(477,12977
#define DEBUG_TM(483,13419
#define DEBUG_TMFC(489,13708
#define DEBUG_TM(490,13731
typedef struct TmToChar497,13823
	struct pg_tm tm;499,13849
	fsec_t		fsec;500,13895
	const char *tzn;tzn501,13937
} TmToChar;502,13972
#define tmtcTm(504,13985
#define tmtcTzn(505,14016
#define tmtcFsec(506,14048
#define ZERO_tm(508,14083
#define ZERO_tmtc(516,14308
#define INVALID_FOR_INTERVAL 527,14543
#define DCH_S_FM	544,15096
#define DCH_S_TH	545,15118
#define DCH_S_th	546,15140
#define DCH_S_SP	547,15162
#define DCH_S_TM	548,15184
#define S_THth(554,15255
#define S_TH(555,15325
#define S_th(556,15370
#define S_TH_TYPE(557,15415
#define S_FM(560,15534
#define S_SP(561,15579
#define S_TM(562,15624
#define TM_SUFFIX_LEN	568,15752
static const KeySuffix DCH_suff[DCH_suff570,15777
	DCH_A_D,613,17101
	DCH_A_M,614,17111
	DCH_AD,615,17121
	DCH_AM,616,17130
	DCH_B_C,617,17139
	DCH_BC,618,17149
	DCH_CC,619,17158
	DCH_DAY,620,17167
	DCH_DDD,621,17177
	DCH_DD,622,17187
	DCH_DY,623,17196
	DCH_Day,624,17205
	DCH_Dy,625,17215
	DCH_D,626,17224
	DCH_FF1,627,17232
	DCH_FF2,628,17242
	DCH_FF3,629,17252
	DCH_FF4,630,17262
	DCH_FF5,631,17272
	DCH_FF6,632,17282
	DCH_FX,633,17292
	DCH_HH24,634,17326
	DCH_HH12,635,17337
	DCH_HH,636,17348
	DCH_IDDD,637,17357
	DCH_ID,638,17368
	DCH_IW,639,17377
	DCH_IYYY,640,17386
	DCH_IYY,641,17397
	DCH_IY,642,17407
	DCH_I,643,17416
	DCH_J,644,17424
	DCH_MI,645,17432
	DCH_MM,646,17441
	DCH_MONTH,647,17450
	DCH_MON,648,17462
	DCH_MS,649,17472
	DCH_Month,650,17481
	DCH_Mon,651,17493
	DCH_OF,652,17503
	DCH_P_M,653,17512
	DCH_PM,654,17522
	DCH_Q,655,17531
	DCH_RM,656,17539
	DCH_SSSSS,657,17548
	DCH_SSSS,658,17560
	DCH_SS,659,17571
	DCH_TZH,660,17580
	DCH_TZM,661,17590
	DCH_TZ,662,17600
	DCH_US,663,17609
	DCH_WW,664,17618
	DCH_W,665,17627
	DCH_Y_YYY,666,17635
	DCH_YYYY,667,17647
	DCH_YYY,668,17658
	DCH_YY,669,17668
	DCH_Y,670,17677
	DCH_a_d,671,17685
	DCH_a_m,672,17695
	DCH_ad,673,17705
	DCH_am,674,17714
	DCH_b_c,675,17723
	DCH_bc,676,17733
	DCH_cc,677,17742
	DCH_day,678,17751
	DCH_ddd,679,17761
	DCH_dd,680,17771
	DCH_dy,681,17780
	DCH_d,682,17789
	DCH_ff1,683,17797
	DCH_ff2,684,17807
	DCH_ff3,685,17817
	DCH_ff4,686,17827
	DCH_ff5,687,17837
	DCH_ff6,688,17847
	DCH_fx,689,17857
	DCH_hh24,690,17866
	DCH_hh12,691,17877
	DCH_hh,692,17888
	DCH_iddd,693,17897
	DCH_id,694,17908
	DCH_iw,695,17917
	DCH_iyyy,696,17926
	DCH_iyy,697,17937
	DCH_iy,698,17947
	DCH_i,699,17956
	DCH_j,700,17964
	DCH_mi,701,17972
	DCH_mm,702,17981
	DCH_month,703,17990
	DCH_mon,704,18002
	DCH_ms,705,18012
	DCH_p_m,706,18021
	DCH_pm,707,18031
	DCH_q,708,18040
	DCH_rm,709,18048
	DCH_sssss,710,18057
	DCH_ssss,711,18069
	DCH_ss,712,18080
	DCH_tz,713,18089
	DCH_us,714,18098
	DCH_ww,715,18107
	DCH_w,716,18116
	DCH_y_yyy,717,18124
	DCH_yyyy,718,18136
	DCH_yyy,719,18147
	DCH_yy,720,18157
	DCH_y,721,18166
	_DCH_last_724,18187
}			DCH_poz;725,18199
	NUM_COMMA,729,18228
	NUM_DEC,730,18240
	NUM_0,731,18250
	NUM_9,732,18258
	NUM_B,733,18266
	NUM_C,734,18274
	NUM_D,735,18282
	NUM_E,736,18290
	NUM_FM,737,18298
	NUM_G,738,18307
	NUM_L,739,18315
	NUM_MI,740,18323
	NUM_PL,741,18332
	NUM_PR,742,18341
	NUM_RN,743,18350
	NUM_SG,744,18359
	NUM_SP,745,18368
	NUM_S,746,18377
	NUM_TH,747,18385
	NUM_V,748,18394
	NUM_b,749,18402
	NUM_c,750,18410
	NUM_d,751,18418
	NUM_e,752,18426
	NUM_fm,753,18434
	NUM_g,754,18443
	NUM_l,755,18451
	NUM_mi,756,18459
	NUM_pl,757,18468
	NUM_pr,758,18477
	NUM_rn,759,18486
	NUM_sg,760,18495
	NUM_sp,761,18504
	NUM_s,762,18513
	NUM_th,763,18521
	NUM_v,764,18530
	_NUM_last_767,18551
}			NUM_poz;768,18563
static const KeyWord DCH_keywords[DCH_keywords774,18643
static const KeyWord NUM_keywords[NUM_keywords896,24670
static const int DCH_index[DCH_index944,25839
static const int NUM_index[NUM_index968,26630
typedef struct NUMProc992,27352
	bool		is_to_char;994,27377
	NUMDesc    *Num;Num995,27396
	int			sign,997,27443
				sign_wrote,998,27477
				num_count,999,27516
				num_in,1000,27561
				num_curr,1001,27599
				out_pre_spaces,1002,27647
				read_dec,1004,27700
				read_post,1005,27753
				read_pre;1006,27808
	char	   *number,number1008,27864
			   *number_p,number_p1009,27909
			   *inout,inout1010,27968
			   *inout_p,inout_p1011,28006
			   *last_relevant,last_relevant1012,28063
			   *L_negative_sign,L_negative_sign1014,28133
			   *L_positive_sign,L_positive_sign1015,28170
			   *decimal,decimal1016,28194
			   *L_thousands_sep,L_thousands_sep1017,28210
			   *L_currency_symbol;L_currency_symbol1018,28234
} NUMProc;1019,28260
#define DCH_DATED	1022,28311
#define DCH_TIMED	1023,28334
#define DCH_ZONED	1024,28357
index_seq_search(1095,31616
suff_search(1119,32013
is_separator_char(1135,32262
NUMDesc_prepare(1149,32619
parse_format(1324,36814
#define DUMP_THth(1470,39642
#define DUMP_FM(1471,39714
dump_node(1474,39775
get_th(1510,40739
str_numth(1556,41650
typedef int32_t (*ICU_Convert_Func)ICU_Convert_Func1570,41996
icu_convert_case(1576,42196
u_strToTitle_default_BI(1603,43044
str_tolower(1637,44370
str_toupper(1761,47532
str_initcap(1885,50690
asc_tolower(2034,54522
asc_toupper(2057,54938
asc_initcap(2080,55356
str_tolower_z(2111,55930
str_toupper_z(2117,56042
str_initcap_z(2123,56154
asc_tolower_z(2129,56266
asc_toupper_z(2135,56358
#define SKIP_THth(2149,56615
dump_index(2166,56968
is_next_separator(2197,57600
adjust_partial_year_to_2020(2230,58165
strspace_len(2254,58681
from_char_set_mode(2275,59076
from_char_set_int(2302,59836
from_char_parse_int_len(2343,61241
from_char_parse_int(2446,64137
seq_search_ascii(2463,64682
seq_search_localized(2520,66108
from_char_seq_search(2604,68455
DCH_to_char(2653,69589
#define DCH_to_char_fsec(2735,71670
#undef DCH_to_char_fsec2761,72485
DCH_from_char(3252,86269
DCH_prevent_counter_overflow(3738,98782
DCH_datetime_type(3754,99114
DCH_cache_getnew(3858,100990
DCH_cache_search(3918,102436
DCH_cache_fetch(3939,102870
datetime_to_char_body(3966,103530
timestamp_to_char(4035,104938
timestamptz_to_char(4066,105702
interval_to_char(4103,106564
to_timestamp(4137,107373
to_date(4180,108388
parse_datetime(4226,109823
do_to_timestamp(4412,114804
fill_str(4733,122044
#define zeroize_NUM(4740,122142
NUM_prevent_counter_overflow(4755,122468
NUM_cache_getnew(4767,122719
NUM_cache_search(4826,124155
NUM_cache_fetch(4847,124560
NUM_cache(4875,125112
int_to_roman(4933,126263
NUM_prepare_locale(4982,126992
get_last_relevant_decnum(5064,128877
#define OVERLOAD_TEST	5092,129367
#define AMOUNT_TEST(5093,129428
NUM_numpart_from_char(5100,129580
#define IS_PREDEC_SPACE(5304,134440
NUM_numpart_to_char(5315,134682
NUM_eat_non_data_chars(5505,138696
NUM_processor(5518,138984
#define NUM_TOCHAR_prepare 5999,149499
#define NUM_TOCHAR_finish 6012,149877
numeric_to_number(6035,150528
numeric_to_char(6096,151974
int4_to_char(6223,155013
int8_to_char(6317,156938
float4_to_char(6426,159401
float8_to_char(6530,161530

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/enum.c,461
check_safe_enum_use(64,2628
enum_in(110,4025
enum_out(150,5058
enum_recv(174,5571
enum_send(216,6597
enum_cmp_internal(247,7380
enum_lt(301,8952
enum_le(310,9102
enum_eq(319,9253
enum_ne(328,9374
enum_ge(337,9495
enum_gt(346,9646
enum_smaller(355,9796
enum_larger(364,9958
enum_cmp(373,10119
enum_endpoint(387,10376
enum_first(432,11547
enum_last(461,12319
enum_range_bounds(491,13130
enum_range_all(522,13882
enum_range_internal(542,14464

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/trigfuncs.c,43
suppress_redundant_updates_trigger(29,721

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/mac.c,733
#define hibits(30,671
#define lobits(33,759
	int64		input_count;39,894
	bool		estimating;40,952
	hyperLogLogState abbr_card;42,1010
} macaddr_sortsupport_state;43,1067
macaddr_in(56,1501
macaddr_out(121,3135
macaddr_recv(140,3553
macaddr_send(161,3991
macaddr_cmp_internal(182,4388
macaddr_cmp(197,4649
macaddr_lt(210,4855
macaddr_le(219,5031
macaddr_eq(228,5208
macaddr_ge(237,5385
macaddr_gt(246,5562
macaddr_ne(255,5738
hashmacaddr(267,5971
hashmacaddrextended(275,6114
macaddr_not(287,6356
macaddr_and(303,6678
macaddr_or(320,7112
macaddr_trunc(341,7668
macaddr_sortsupport(363,8115
macaddr_fast_cmp(400,8991
macaddr_cmp_abbrev(414,9355
macaddr_abbrev_abort(431,9738
macaddr_abbrev_convert(499,11793

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/tsquery_rewrite.c,121
findeq(35,972
dofindsubquery(206,5139
findsubquery(267,6525
tsquery_rewrite_query(280,6728
tsquery_rewrite(410,9614

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/inet_net_pton.c,306
static const char rcsid[rcsid21,938
pg_inet_net_pton(62,2161
inet_cidr_pton_ipv4(97,3126
inet_net_pton_ipv4(260,6841
getbits(349,8561
getv4(382,9049
inet_net_pton_ipv6(429,9831
#define NS_IN6ADDRSZ 434,9928
#define NS_INT16SZ 435,9952
#define NS_INADDRSZ 436,9973
inet_cidr_pton_ipv6(439,10007

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/pg_lsn.c,478
#define MAXPG_LSNLEN	22,574
#define MAXPG_LSNCOMPONENT	23,600
pg_lsn_in_internal(30,804
pg_lsn_in(64,1545
pg_lsn_out(81,1908
pg_lsn_recv(99,2231
pg_lsn_send(109,2401
pg_lsn_eq(125,2749
pg_lsn_ne(134,2894
pg_lsn_lt(143,3039
pg_lsn_gt(152,3183
pg_lsn_le(161,3327
pg_lsn_ge(170,3472
pg_lsn_larger(179,3617
pg_lsn_smaller(188,3780
pg_lsn_cmp(198,3978
pg_lsn_hash(213,4223
pg_lsn_hash_extended(220,4326
pg_lsn_mi(231,4579
pg_lsn_pli(258,5230
pg_lsn_mii(292,6069

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/oracle_compat.c,291
lower(44,1013
upper(75,1616
initcap(109,2376
lpad(142,3129
rpad(240,5155
btrim(336,7092
btrim1(356,7564
dotrim(372,7839
byteatrim(541,11425
ltrim(620,12725
ltrim1(640,13198
rtrim(668,13730
rtrim1(688,14203
translate(719,14924
ascii(845,17680
chr	926,19311
repeat(1034,21889

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/dbsize.c,894
#define half_rounded(35,802
db_dir_size(39,950
calculate_database_size(83,1753
pg_database_size_oid(133,3027
pg_database_size_name(147,3227
calculate_tablespace_size(167,3601
pg_tablespace_size_oid(237,5285
pg_tablespace_size_name(251,5496
calculate_relation_size(273,5970
pg_relation_size(311,6716
calculate_toast_table_size(343,7660
calculate_table_size(389,8982
calculate_indexes_size(416,9575
pg_table_size(451,10229
pg_indexes_size(470,10527
calculate_total_relation_size(493,10959
pg_total_relation_size(512,11304
pg_size_pretty(534,11657
numeric_to_cstring(575,12516
int64_to_numeric(583,12661
numeric_is_less(591,12798
numeric_absolute(600,12986
numeric_half_rounded(610,13163
numeric_shift_right(632,13741
pg_size_pretty_numeric(646,14122
pg_size_bytes(708,15515
pg_relation_filenode(865,19573
pg_filenode_relation(913,20731
pg_relation_filepath(933,21138

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/char.c,247
charin(33,913
charout(48,1251
charrecv(66,1670
charsend(77,1854
chareq(99,2415
charne(108,2549
charlt(117,2683
charle(126,2832
chargt(135,2982
charge(144,3131
chartoi4(154,3282
i4tochar(162,3395
text_char(176,3651
char_text(195,4036

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/pg_locale.c,2294
#undef StrNCpy83,2779
#undef StrNCpy86,2830
#define		MAX_L10N_DATA	90,2860
char	   *locale_messages;locale_messages94,2908
char	   *locale_monetary;locale_monetary95,2934
char	   *locale_numeric;locale_numeric96,2960
char	   *locale_time;locale_time97,2985
char	   *localized_abbrev_days[localized_abbrev_days106,3235
char	   *localized_full_days[localized_full_days107,3274
char	   *localized_abbrev_months[localized_abbrev_months108,3311
char	   *localized_full_months[localized_full_months109,3353
static bool CurrentLocaleConvValid 112,3452
static bool CurrentLCTimeValid 113,3496
#define LC_ENV_BUFSIZE 117,3578
static char lc_collate_envbuf[lc_collate_envbuf119,3621
static char lc_ctype_envbuf[lc_ctype_envbuf120,3668
static char lc_messages_envbuf[lc_messages_envbuf123,3733
static char lc_monetary_envbuf[lc_monetary_envbuf125,3788
static char lc_numeric_envbuf[lc_numeric_envbuf126,3836
static char lc_time_envbuf[lc_time_envbuf127,3883
	Oid			collid;133,3990
	bool		collate_is_c;134,4040
	bool		ctype_is_c;135,4096
	bool		flags_valid;136,4149
	pg_locale_t locale;137,4205
} collation_cache_entry;138,4269
static HTAB *collation_cache collation_cache140,4295
pg_perm_setlocale(166,5316
check_locale(280,8295
check_locale_monetary(323,9486
assign_locale_monetary(329,9615
check_locale_numeric(335,9714
assign_locale_numeric(341,9841
check_locale_time(347,9939
assign_locale_time(353,10060
check_locale_messages(369,10668
assign_locale_messages(392,11120
free_struct_lconv(409,11534
struct_lconv_is_valid(438,12241
db_encoding_convert(469,12891
PGLC_localeconv(499,13528
strftime_win32(710,21350
#define strftime(749,22384
cache_single_string(758,22660
cache_locale_time(781,23234
search_locale_enum(1011,31128
get_iso_localename(1077,32675
IsoLocaleName(1150,34530
check_strxfrm_bug(1221,36958
lookup_collation_cache(1291,39558
lc_collate_is_c(1356,41180
lc_ctype_is_c(1406,42356
report_newlocale_failure(1456,43555
pg_newlocale_from_collation(1503,45283
get_collation_actual_version(1680,50754
static UConverter *icu_converter icu_converter1768,53370
init_icu_converter(1771,53424
icu_to_uchar(1810,54501
icu_from_uchar(1848,55574
pg_attribute_unused(1885,56680
wchar2char(1990,59548
char2wchar(2061,61481

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/ri_triggers.c,3541
#define RI_MAX_NUMKEYS	61,1748
#define RI_INIT_CONSTRAINTHASHSIZE	63,1791
#define RI_INIT_QUERYHASHSIZE	64,1830
#define RI_KEYS_ALL_NULL	66,1896
#define RI_KEYS_SOME_NULL	67,1926
#define RI_KEYS_NONE_NULL	68,1957
#define RI_PLAN_CHECK_LOOKUPPK	72,2083
#define RI_PLAN_CHECK_LOOKUPPK_FROM_PK	73,2118
#define RI_PLAN_LAST_ON_PK	74,2159
#define RI_PLAN_CASCADE_DEL_DODELETE	76,2289
#define RI_PLAN_CASCADE_UPD_DOUPDATE	77,2328
#define RI_PLAN_RESTRICT_CHECKREF	78,2367
#define RI_PLAN_SETNULL_DOUPDATE	79,2404
#define RI_PLAN_SETDEFAULT_DOUPDATE	80,2440
#define MAX_QUOTED_NAME_LEN 82,2480
#define MAX_QUOTED_REL_NAME_LEN 83,2527
#define RIAttName(85,2585
#define RIAttType(86,2653
#define RIAttCollation(87,2710
#define RI_TRIGTYPE_INSERT 89,2778
#define RI_TRIGTYPE_UPDATE 90,2807
#define RI_TRIGTYPE_DELETE 91,2836
typedef struct RI_ConstraintInfo100,2998
	Oid			constraint_id;102,3033
	bool		valid;103,3099
	uint32		oidHashValue;104,3147
	NameData	conname;105,3208
	Oid			pk_relid;106,3260
	Oid			fk_relid;107,3304
	char		confupdtype;108,3349
	char		confdeltype;109,3406
	char		confmatchtype;110,3463
	int			nkeys;111,3516
	int16		pk_attnums[pk_attnums112,3560
	int16		fk_attnums[fk_attnums113,3629
	Oid			pf_eq_oprs[pf_eq_oprs114,3699
	Oid			pp_eq_oprs[pp_eq_oprs115,3769
	Oid			ff_eq_oprs[ff_eq_oprs116,3839
	dlist_node	valid_link;117,3909
} RI_ConstraintInfo;118,3970
typedef struct RI_QueryKey125,4083
	Oid			constr_id;127,4112
	int32		constr_queryno;128,4164
} RI_QueryKey;129,4231
typedef struct RI_QueryHashEntry134,4275
	RI_QueryKey key;136,4310
	SPIPlanPtr	plan;137,4328
} RI_QueryHashEntry;138,4346
typedef struct RI_CompareKey145,4461
	Oid			eq_opr;147,4492
	Oid			typeid;148,4546
} RI_CompareKey;149,4598
typedef struct RI_CompareHashEntry154,4646
	RI_CompareKey key;156,4683
	bool		valid;157,4703
	FmgrInfo	eq_opr_finfo;158,4751
	FmgrInfo	cast_func_finfo;159,4807
} RI_CompareHashEntry;160,4869
static HTAB *ri_constraint_cache ri_constraint_cache166,4915
static HTAB *ri_query_cache ri_query_cache167,4956
static HTAB *ri_compare_cache ri_compare_cache168,4992
static dlist_head ri_constraint_cache_valid_list;169,5030
static int	ri_constraint_cache_valid_count 170,5080
static void ri_ReportViolation(220,7447
RI_FKey_check_ins(413,12751
RI_FKey_check_upd(429,13128
ri_Check_Pk_Match(450,13785
RI_FKey_noaction_del(540,16191
RI_FKey_restrict_del(560,16891
RI_FKey_noaction_upd(577,17382
RI_FKey_restrict_upd(597,18074
ri_restrict(613,18521
RI_FKey_cascade_del(732,21945
RI_FKey_cascade_upd(838,25066
RI_FKey_setnull_del(959,28669
RI_FKey_setnull_upd(974,29056
RI_FKey_setdefault_del(989,29450
RI_FKey_setdefault_upd(1004,29851
ri_set(1020,30284
RI_FKey_pk_upd_check_required(1162,34778
RI_FKey_fk_upd_check_required(1194,35800
RI_Initial_Check(1295,38800
RI_PartitionRemove_Check(1570,47575
quoteOneName(1784,54116
quoteRelationName(1804,54526
ri_GenerateQual(1821,55100
ri_GenerateQualCollation(1850,56426
ri_BuildQueryKey(1891,57628
ri_CheckTrigger(1906,58009
ri_FetchConstraintInfo(1952,59456
ri_LoadConstraintInfo(2006,61346
InvalidateConstraintCacheCallBack(2090,64088
ri_PlanCheck(2128,65223
ri_PerformCheck(2171,66387
ri_ExtractValues(2308,70871
ri_ReportViolation(2337,71650
ri_NullCheck(2495,76174
ri_InitHashTables(2532,76783
ri_FetchPreparedPlan(2571,77898
ri_HashPreparedPlan(2623,79107
ri_KeysEqual(2657,79985
ri_AttributesEqual(2728,81826
ri_HashCompareOp(2770,83286
RI_FKey_trigger_type(2863,85935

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/numeric.c,11876
#define NBASE	77,2555
#define HALF_NBASE	78,2573
#define DEC_DIGITS	79,2594
#define MUL_GUARD_DIGITS	80,2654
#define DIV_GUARD_DIGITS	81,2722
typedef signed char NumericDigit;83,2750
#define NBASE	87,2798
#define HALF_NBASE	88,2817
#define DEC_DIGITS	89,2839
#define MUL_GUARD_DIGITS	90,2899
#define DIV_GUARD_DIGITS	91,2967
typedef signed char NumericDigit;93,2995
#define NBASE	97,3043
#define HALF_NBASE	98,3064
#define DEC_DIGITS	99,3088
#define MUL_GUARD_DIGITS	100,3148
#define DIV_GUARD_DIGITS	101,3216
typedef int16 NumericDigit;103,3244
struct NumericShort135,4805
	uint16		n_header;137,4827
	NumericDigit n_data[n_data138,4883
struct NumericLong141,4945
	uint16		n_sign_dscale;143,4966
	int16		n_weight;144,5017
	NumericDigit n_data[n_data145,5062
union NumericChoice148,5124
	uint16		n_header;150,5146
	struct NumericLong n_long;151,5184
	struct NumericShort n_short;152,5244
struct NumericData155,5311
	int32		vl_len_;157,5332
	union NumericChoice choice;158,5396
#define NUMERIC_SIGN_MASK	166,5493
#define NUMERIC_POS	167,5526
#define NUMERIC_NEG	168,5555
#define NUMERIC_SHORT	169,5584
#define NUMERIC_SPECIAL	170,5614
#define NUMERIC_FLAGBITS(172,5647
#define NUMERIC_IS_SHORT(173,5718
#define NUMERIC_IS_SPECIAL(174,5786
#define NUMERIC_HDRSZ	176,5858
#define NUMERIC_HDRSZ_SHORT 177,5924
#define NUMERIC_HEADER_IS_SHORT(184,6215
#define NUMERIC_HEADER_SIZE(185,6289
#define NUMERIC_EXT_SIGN_MASK	198,6879
#define NUMERIC_NAN	199,6955
#define NUMERIC_PINF	200,6985
#define NUMERIC_NINF	201,7015
#define NUMERIC_INF_SIGN_MASK	202,7045
#define NUMERIC_EXT_FLAGBITS(204,7083
#define NUMERIC_IS_NAN(205,7162
#define NUMERIC_IS_PINF(206,7227
#define NUMERIC_IS_NINF(207,7294
#define NUMERIC_IS_INF(208,7361
#define NUMERIC_SHORT_SIGN_MASK	215,7494
#define NUMERIC_SHORT_DSCALE_MASK	216,7535
#define NUMERIC_SHORT_DSCALE_SHIFT	217,7577
#define NUMERIC_SHORT_DSCALE_MAX	218,7615
#define NUMERIC_SHORT_WEIGHT_SIGN_MASK	220,7710
#define NUMERIC_SHORT_WEIGHT_MASK	221,7756
#define NUMERIC_SHORT_WEIGHT_MAX	222,7798
#define NUMERIC_SHORT_WEIGHT_MIN	223,7858
#define NUMERIC_DSCALE_MASK	235,8380
#define NUMERIC_SIGN(237,8418
#define NUMERIC_DSCALE(243,8648
#define NUMERIC_WEIGHT(247,8865
typedef struct NumericVar304,11959
	int			ndigits;306,11987
	int			weight;307,12046
	int			sign;308,12091
	int			dscale;309,12153
	NumericDigit *buf;buf310,12190
	NumericDigit *digits;digits311,12255
} NumericVar;312,12303
	NumericVar	current;321,12396
	NumericVar	stop;322,12417
	NumericVar	step;323,12435
} generate_series_numeric_fctx;324,12453
	void	   *buf;buf333,12553
	int64		input_count;334,12602
	bool		estimating;335,12660
	hyperLogLogState abbr_card;337,12718
} NumericSortSupport;338,12775
typedef struct NumericSumAccum371,14370
	int			ndigits;373,14403
	int			weight;374,14419
	int			dscale;375,14434
	int			num_uncarried;376,14449
	bool		have_carry_space;377,14471
	int32	   *pos_digits;pos_digits378,14496
	int32	   *neg_digits;neg_digits379,14519
} NumericSumAccum;380,14542
#define NUMERIC_ABBREV_BITS 395,15193
#define NumericAbbrevGetDatum(397,15274
#define DatumGetNumericAbbrev(398,15321
#define NUMERIC_ABBREV_NAN	399,15368
#define NUMERIC_ABBREV_PINF	400,15433
#define NUMERIC_ABBREV_NINF	401,15500
#define NumericAbbrevGetDatum(403,15572
#define DatumGetNumericAbbrev(404,15619
#define NUMERIC_ABBREV_NAN	405,15666
#define NUMERIC_ABBREV_PINF	406,15731
#define NUMERIC_ABBREV_NINF	407,15798
static const NumericDigit const_zero_data[const_zero_data415,15938
static const NumericVar const_zero 416,15990
static const NumericDigit const_one_data[const_one_data419,16092
static const NumericVar const_one 420,16143
static const NumericVar const_minus_one 423,16243
static const NumericDigit const_two_data[const_two_data426,16349
static const NumericVar const_two 427,16400
static const NumericDigit const_ten_data[const_ten_data431,16539
static const NumericVar const_ten 432,16591
static const NumericDigit const_ten_data[const_ten_data435,16712
static const NumericVar const_ten 436,16763
static const NumericDigit const_zero_point_nine_data[const_zero_point_nine_data441,16890
static const NumericDigit const_zero_point_nine_data[const_zero_point_nine_data443,16978
static const NumericDigit const_zero_point_nine_data[const_zero_point_nine_data445,17064
static const NumericVar const_zero_point_nine 447,17134
static const NumericDigit const_one_point_one_data[const_one_point_one_data451,17279
static const NumericDigit const_one_point_one_data[const_one_point_one_data453,17368
static const NumericDigit const_one_point_one_data[const_one_point_one_data455,17455
static const NumericVar const_one_point_one 457,17526
static const NumericVar const_nan 460,17646
static const NumericVar const_pinf 463,17719
static const NumericVar const_ninf 466,17794
static const int round_powers[round_powers470,17889
#define dump_numeric(483,18144
#define dump_var(484,18170
#define digitbuf_alloc(487,18200
#define digitbuf_free(489,18296
#define init_var(495,18389
#define NUMERIC_DIGITS(497,18451
#define NUMERIC_NDIGITS(499,18574
#define NUMERIC_CAN_BE_SHORT(501,18673
numeric_in(620,24028
numeric_out(738,26383
numeric_is_nan(773,26957
numeric_is_inf(784,27089
numeric_is_integral(795,27230
numeric_maximum_size(819,27726
numeric_out_sci(858,29071
numeric_normalize(892,29748
numeric_recv(944,30786
numeric_send(1029,33046
numeric_support(1062,33875
numeric	1112,35464
numerictypmodin(1188,37432
numerictypmodout(1233,38582
numeric_abs(1257,39082
numeric_uminus(1284,39686
numeric_uplus(1326,40719
numeric_sign_internal(1342,41100
numeric_sign(1374,41777
numeric_round(1407,42464
numeric_trunc(1456,43463
numeric_ceil(1503,44344
numeric_floor(1531,44811
generate_series_numeric(1559,45256
generate_series_step_numeric(1565,45355
width_bucket_numeric(1702,49492
compute_bucket(1788,51941
numeric_sortsupport(1866,55067
numeric_abbrev_convert(1907,56010
numeric_abbrev_abort(1969,57601
numeric_fast_cmp(2042,59910
numeric_cmp_abbrev(2064,60415
numeric_abbrev_convert_var(2126,63157
numeric_abbrev_convert_var(2181,64219
numeric_cmp(2260,65832
numeric_eq(2276,66086
numeric_ne(2291,66342
numeric_gt(2306,66598
numeric_ge(2321,66853
numeric_lt(2336,67109
numeric_le(2351,67364
cmp_numerics(2366,67625
in_range_numeric_numeric(2423,68911
hash_numeric(2558,72094
hash_numeric_extended(2638,74200
numeric_add(2709,75638
numeric_add_opt_error(2728,76072
numeric_sub(2786,77285
numeric_sub_opt_error(2806,77720
numeric_mul(2864,78937
numeric_mul_opt_error(2884,79372
numeric_div(2978,81467
numeric_div_opt_error(2998,81902
numeric_div_trunc(3113,84279
numeric_mod(3202,86260
numeric_mod_opt_error(3222,86695
numeric_inc(3291,88140
numeric_smaller(3324,88621
numeric_larger(3346,89049
numeric_gcd(3375,89680
numeric_lcm(3418,90438
numeric_fac(3478,91858
numeric_sqrt(3530,92851
numeric_exp(3589,94194
numeric_ln(3656,95704
numeric_log(3705,96697
numeric_power(3776,98420
numeric_scale(3966,103686
get_min_scale(3980,103908
numeric_min_scale(4031,105079
numeric_trim_scale(4051,105445
int4_numeric(4078,105983
numeric_int4_opt_error(4096,106237
numeric_int4(4146,107097
numericvar_to_int32(4159,107431
int8_numeric(4174,107704
numeric_int8(4193,107951
int2_numeric(4224,108619
numeric_int2(4243,108874
float8_numeric(4284,109794
numeric_float8(4318,110401
numeric_float8_no_overflow(4351,111086
float4_numeric(4377,111495
numeric_float4(4411,112102
numeric_pg_lsn(4439,112648
typedef struct NumericAggState4483,113884
	bool		calcSumX2;4485,113917
	MemoryContext agg_context;4486,113967
	int64		N;4487,114030
	NumericSumAccum sumX;4488,114077
	NumericSumAccum sumX2;4489,114132
	int			maxScale;4490,114199
	int64		maxScaleCount;4491,114249
	int64		NaNcount;4493,114396
	int64		pInfcount;4494,114441
	int64		nInfcount;4495,114488
} NumericAggState;4496,114535
#define NA_TOTAL_COUNT(4498,114555
makeNumericAggState(4506,114816
makeNumericAggStateCurrentContext(4531,115438
do_numeric_accum(4546,115757
do_numeric_discard(4616,117662
numeric_accum(4709,119839
numeric_combine(4729,120276
numeric_avg_accum(4801,122273
numeric_avg_combine(4821,122713
numeric_avg_serialize(4893,124640
numeric_avg_deserialize(4956,126155
numeric_serialize(5017,127546
numeric_deserialize(5090,129322
numeric_accum_inv(5159,130984
typedef struct Int128AggState5195,131965
	bool		calcSumX2;5197,131997
	int64		N;5198,132047
	int128		sumX;5199,132094
	int128		sumX2;5200,132142
} Int128AggState;5201,132202
makeInt128AggState(5208,132387
makeInt128AggStateCurrentContext(5232,132968
do_int128_accum(5246,133239
do_int128_discard(5259,133465
typedef Int128AggState PolyNumAggState;5268,133622
#define makePolyNumAggState 5269,133662
#define makePolyNumAggStateCurrentContext 5270,133709
typedef NumericAggState PolyNumAggState;5272,133790
#define makePolyNumAggState 5273,133831
#define makePolyNumAggStateCurrentContext 5274,133879
int2_accum(5278,133969
int4_accum(5305,134521
int8_accum(5332,135073
numeric_poly_combine(5358,135608
numeric_poly_serialize(5423,137149
numeric_poly_deserialize(5494,138933
int8_avg_accum(5558,140423
int8_avg_combine(5589,141071
int8_avg_serialize(5649,142438
int8_avg_deserialize(5706,143817
int2_accum_inv(5755,144897
int4_accum_inv(5785,145578
int8_accum_inv(5815,146259
int8_avg_accum_inv(5841,146851
numeric_poly_sum(5871,147540
numeric_poly_avg(5899,148039
numeric_avg(5930,148691
numeric_sum(5965,149714
numeric_stddev_internal(6008,151031
numeric_var_samp(6092,153044
numeric_stddev_samp(6109,153352
numeric_var_pop(6126,153664
numeric_stddev_pop(6143,153972
numeric_poly_stddev_internal(6161,154312
numeric_poly_var_samp(6206,155171
numeric_poly_stddev_samp(6227,155555
numeric_poly_var_pop(6248,155946
numeric_poly_stddev_pop(6269,156329
int2_sum(6310,157698
int4_sum(6359,158899
int8_sum(6411,160178
typedef struct Int8TransTypeData6455,161346
	int64		count;6457,161381
	int64		sum;6458,161396
} Int8TransTypeData;6459,161409
int2_avg_accum(6462,161437
int4_avg_accum(6490,162214
int4_avg_combine(6518,162991
int2_avg_accum_inv(6549,163883
int4_avg_accum_inv(6577,164664
int8_avg(6605,165445
int2int4_sum(6634,166255
dump_numeric(6665,167035
dump_var(6707,167802
alloc_var(6760,168893
free_var(6776,169207
zero_var(6792,169431
set_var_from_str(6816,170102
set_var_from_num(6978,173896
init_var_from_num(7009,174892
set_var_from_var(7026,175266
get_str_from_var(7052,175934
get_str_from_var_sci(7205,179218
duplicate_numeric(7290,181185
make_result_opt_error(7309,181649
make_result(7418,184187
apply_typmod(7431,184441
apply_typmod_special(7508,186434
numericvar_to_int64(7546,187421
int64_to_numericvar(7621,188874
numericvar_to_uint64(7668,189690
numericvar_to_int128(7741,191035
int128_to_numericvar(7812,192541
numericvar_to_double_no_overflow(7858,193316
cmp_var(7890,193914
cmp_var_common(7905,194267
add_var(7948,195188
sub_var(8065,197508
mul_var(8186,199903
div_var(8383,205587
div_var_fast(8668,213983
select_div_scale(8974,223826
mod_var(9043,225434
div_mod_var(9072,226024
ceil_var(9142,227503
floor_var(9166,227918
gcd_var(9189,228321
sqrt_var(9259,229795
exp_var(9739,243875
estimate_ln_dweight(9865,247075
ln_var(9943,248641
log_var(10063,251941
power_var(10123,253617
power_var_int(10238,257061
cmp_abs(10428,262090
cmp_abs_common(10442,262428
add_abs(10506,263647
sub_abs(10591,265601
round_var(10673,267497
trunc_var(10779,269564
strip_var(10841,270641
accum_sum_reset(10882,271425
accum_sum_add(10898,271647
accum_sum_carry(10946,272806
accum_sum_rescale(11019,274454
accum_sum_final(11108,276953
accum_sum_copy(11159,278170
accum_sum_combine(11176,278693

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/expandedrecord.c,816
static const ExpandedObjectMethods ER_methods 38,1184
make_expanded_record_from_typeid(69,2271
make_expanded_record_from_tupdesc(205,6484
make_expanded_record_from_exprecord(329,10386
expanded_record_set_tuple(440,14090
make_expanded_record_from_datum(580,17909
ER_get_flat_size(652,20229
ER_flatten_into(764,22915
expanded_record_fetch_tupdesc(824,24943
expanded_record_get_tuple(884,26706
ER_mc_callback(902,27164
DatumGetExpandedRecord(927,27838
deconstruct_expanded_record(952,28612
expanded_record_lookup_field(1017,30304
expanded_record_fetch_field(1063,31396
expanded_record_set_field_internal(1112,32722
expanded_record_set_fields(1249,37384
get_short_term_cxt(1379,41075
build_dummy_expanded_header(1402,41866
check_domain_for_new_field(1494,45324
check_domain_for_new_tuple(1576,47978

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/selfuncs.c,2731
get_relation_stats_hook_type get_relation_stats_hook 144,5318
get_index_stats_hook_type get_index_stats_hook 145,5379
eqsel(224,8810
eqsel_internal(233,8959
var_eq_const(292,10579
var_eq_non_const(463,15327
neqsel(554,17973
scalarineqsel(577,18953
mcv_selectivity(729,23718
histogram_selectivity(820,27045
generic_restriction_selectivity(911,29912
ineq_histogram_selectivity(1038,33545
scalarineqsel_wrapper(1397,45763
scalarltsel(1468,47538
scalarlesel(1477,47691
scalargtsel(1486,47842
scalargesel(1495,47994
boolvarsel(1509,48444
booltestsel(1537,49092
nulltestsel(1695,52997
strip_array_coercion(1780,54991
scalararraysel(1813,55741
estimate_array_length(2132,65473
rowcomparesel(2170,66578
eqjoinsel(2237,68086
eqjoinsel_inner(2386,72580
eqjoinsel_semi(2583,79257
neqjoinsel(2771,85157
scalarltjoinsel(2849,87572
scalarlejoinsel(2858,87720
scalargtjoinsel(2867,87867
scalargejoinsel(2876,88015
mergejoinscansel(2904,89089
matchingsel(3209,98151
matchingjoinsel(3227,98644
	Node	   *var;var3241,98937
	RelOptInfo *rel;rel3242,98999
	double		ndistinct;3243,99048
} GroupVarInfo;3244,99093
add_unique_group_var(3247,99124
estimate_num_groups(3360,103920
estimate_hash_bucket_stats(3723,115991
estimate_hashagg_tablesize(3842,119331
estimate_multivariate_ndistinct(3877,120495
convert_to_scalar(4033,124608
convert_numeric_to_scalar(4179,128853
convert_string_to_scalar(4240,130906
convert_one_string_to_scalar(4320,132708
convert_string_datum(4371,134148
convert_bytea_to_scalar(4452,136201
convert_one_bytea_to_scalar(4500,137586
convert_timevalue_to_scalar(4543,138467
get_restriction_variable(4605,140466
get_join_variables(4665,142139
examine_variable(4727,144631
examine_simple_variable(5000,152891
statistic_proc_security_check(5247,161300
get_variable_numdistinct(5276,162055
get_variable_range(5409,165785
get_stats_slot_range(5516,168961
get_actual_variable_range(5579,170649
get_actual_variable_endpoint(5752,175661
find_join_input_rel(5879,180548
get_quals_from_indexclauses(5914,181276
index_other_operands_eval_cost(5944,182086
genericcostestimate(5998,183323
add_predicate_to_index_quals(6216,191278
btcostestimate(6237,191743
hashcostestimate(6543,201272
gistcostestimate(6587,203128
spgcostestimate(6644,205024
	bool		attHasFullScan[attHasFullScan6707,206977
	bool		attHasNormalScan[attHasNormalScan6708,207016
	double		partialEntries;6709,207057
	double		exactEntries;6710,207082
	double		searchEntries;6711,207105
	double		arrayScans;6712,207129
} GinQualCounts;6713,207150
gincost_pattern(6721,207392
gincost_opexpr(6835,210534
gincost_scalararrayopexpr(6885,212242
gincostestimate(7001,215600
brincostestimate(7332,226609

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/json.c,1338
	JSONTYPE_NULL,32,835
	JSONTYPE_BOOL,33,898
	JSONTYPE_NUMERIC,34,953
	JSONTYPE_DATE,35,996
	JSONTYPE_TIMESTAMP,36,1061
	JSONTYPE_TIMESTAMPTZ,37,1082
	JSONTYPE_JSON,38,1105
	JSONTYPE_ARRAY,39,1154
	JSONTYPE_COMPOSITE,40,1186
	JSONTYPE_CAST,41,1225
	JSONTYPE_OTHER	42,1290
} JsonTypeCategory;43,1324
typedef struct JsonAggState45,1345
	StringInfo	str;47,1375
	JsonTypeCategory key_category;48,1392
	Oid			key_output_func;49,1424
	JsonTypeCategory val_category;50,1448
	Oid			val_output_func;51,1480
} JsonAggState;52,1504
json_in(76,2396
json_out(94,2752
json_send(106,2961
json_recv(120,3207
json_categorize_type(144,3919
datum_to_json(246,6384
JsonEncodeDateTime(353,9201
array_dim_to_json(474,12255
array_to_json_internal(516,13130
composite_to_json(563,14106
add_json(636,15804
array_to_json(663,16364
array_to_json_pretty(679,16667
row_to_json(696,17015
row_to_json_pretty(712,17309
to_json(729,17651
json_agg_transfn(758,18322
json_agg_finalfn(834,20392
json_object_agg_transfn(859,20999
json_object_agg_finalfn(950,23483
catenate_stringinfo_string(973,24218
json_build_object(991,24691
json_build_object_noargs(1048,26069
json_build_array(1057,26233
json_build_array_noargs(1093,26950
json_object(1105,27191
json_object_two_arg(1196,29086
escape_json(1279,30969
json_typeof(1333,32345

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/pgstatfuncs.c,4102
#define UINT32_ACCESS_ONCE(34,919
#define HAS_PGSTAT_PERMISSIONS(36,995
pg_stat_get_numscans(42,1234
pg_stat_get_tuples_returned(58,1516
pg_stat_get_tuples_fetched(74,1812
pg_stat_get_tuples_inserted(90,2106
pg_stat_get_tuples_updated(106,2402
pg_stat_get_tuples_deleted(122,2696
pg_stat_get_tuples_hot_updated(138,2990
pg_stat_get_live_tuples(154,3292
pg_stat_get_dead_tuples(170,3582
pg_stat_get_mod_since_analyze(186,3872
pg_stat_get_ins_since_vacuum(202,4176
pg_stat_get_blocks_fetched(218,4478
pg_stat_get_blocks_hit(234,4772
pg_stat_get_last_vacuum_time(249,5057
pg_stat_get_last_autovacuum_time(267,5400
pg_stat_get_last_analyze_time(285,5755
pg_stat_get_last_autoanalyze_time(303,6100
pg_stat_get_vacuum_count(321,6457
pg_stat_get_autovacuum_count(336,6746
pg_stat_get_analyze_count(351,7047
pg_stat_get_autoanalyze_count(366,7338
pg_stat_get_function_calls(381,7641
pg_stat_get_function_total_time(392,7891
pg_stat_get_function_self_time(404,8230
pg_stat_get_backend_idset(416,8567
pg_stat_get_progress_info(459,9461
#define PG_STAT_GET_PROGRESS_COLS	461,9507
pg_stat_get_activity(568,12872
#define PG_STAT_GET_ACTIVITY_COLS	570,12913
pg_backend_pid(961,24039
pg_stat_get_backend_pid(968,24113
pg_stat_get_backend_dbid(981,24348
pg_stat_get_backend_userid(994,24585
pg_stat_get_backend_activity(1007,24820
pg_stat_get_backend_wait_event_type(1032,25488
pg_stat_get_backend_wait_event(1053,26127
pg_stat_get_backend_activity_start(1075,26727
pg_stat_get_backend_xact_start(1101,27289
pg_stat_get_backend_start(1123,27734
pg_stat_get_backend_client_addr(1145,28176
pg_stat_get_backend_client_port(1192,29314
pg_stat_get_db_numbackends(1240,30419
pg_stat_get_db_xact_commit(1261,30810
pg_stat_get_db_xact_rollback(1277,31096
pg_stat_get_db_blocks_fetched(1293,31386
pg_stat_get_db_blocks_hit(1309,31678
pg_stat_get_db_tuples_returned(1325,31962
pg_stat_get_db_tuples_fetched(1341,32256
pg_stat_get_db_tuples_inserted(1357,32548
pg_stat_get_db_tuples_updated(1373,32842
pg_stat_get_db_tuples_deleted(1389,33134
pg_stat_get_db_stat_reset_time(1404,33425
pg_stat_get_db_temp_files(1422,33767
pg_stat_get_db_temp_bytes(1438,34041
pg_stat_get_db_conflict_tablespace(1453,34314
pg_stat_get_db_conflict_lock(1468,34615
pg_stat_get_db_conflict_snapshot(1483,34904
pg_stat_get_db_conflict_bufferpin(1498,35201
pg_stat_get_db_conflict_startup_deadlock(1513,35500
pg_stat_get_db_conflict_all(1528,35813
pg_stat_get_db_deadlocks(1547,36268
pg_stat_get_db_checksum_failures(1562,36549
pg_stat_get_db_checksum_last_failure(1580,36897
pg_stat_get_db_blk_read_time(1601,37297
pg_stat_get_db_blk_write_time(1617,37661
pg_stat_get_bgwriter_timed_checkpoints(1633,38027
pg_stat_get_bgwriter_requested_checkpoints(1639,38155
pg_stat_get_bgwriter_buf_written_checkpoints(1645,38291
pg_stat_get_bgwriter_buf_written_clean(1651,38431
pg_stat_get_bgwriter_maxwritten_clean(1657,38559
pg_stat_get_checkpoint_write_time(1663,38685
pg_stat_get_checkpoint_sync_time(1670,38894
pg_stat_get_bgwriter_stat_reset_time(1677,39101
pg_stat_get_buf_written_backend(1683,39236
pg_stat_get_buf_fsync_backend(1689,39359
pg_stat_get_buf_alloc(1695,39478
pg_stat_get_slru(1704,39626
#define PG_STAT_GET_SLRU_COLS	1706,39663
pg_stat_get_xact_numscans(1778,41834
pg_stat_get_xact_tuples_returned(1793,42122
pg_stat_get_xact_tuples_fetched(1808,42424
pg_stat_get_xact_tuples_inserted(1823,42724
pg_stat_get_xact_tuples_updated(1844,43229
pg_stat_get_xact_tuples_deleted(1865,43730
pg_stat_get_xact_tuples_hot_updated(1886,44231
pg_stat_get_xact_blocks_fetched(1901,44539
pg_stat_get_xact_blocks_hit(1916,44839
pg_stat_get_xact_function_calls(1931,45131
pg_stat_get_xact_function_total_time(1942,45394
pg_stat_get_xact_function_self_time(1953,45690
pg_stat_get_snapshot_timestamp(1966,46044
pg_stat_clear_snapshot(1973,46213
pg_stat_reset(1983,46362
pg_stat_reset_shared(1992,46497
pg_stat_reset_single_table_counters(2003,46718
pg_stat_reset_single_function_counters(2013,46889
pg_stat_reset_slru(2024,47127
pg_stat_get_archiver(2037,47331

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/geo_selfuncs.c,122
areasel(49,1657
areajoinsel(55,1720
positionsel(68,1900
positionjoinsel(74,1965
contsel(87,2221
contjoinsel(93,2284

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/jsonb_util.c,1169
#define JSONB_MAX_ELEMS 37,1128
#define JSONB_MAX_PAIRS 38,1203
JsonbValueToJsonb(85,3849
getJsonbOffset(127,4864
getJsonbLength(152,5467
compareJsonbContainers(184,6418
findJsonbValueFromContainer(337,11028
getKeyJsonValueFromContainer(391,12332
getIthJsonbValueFromContainer(461,13875
fillJsonbValue(498,14893
pushJsonbValue(559,16698
pushJsonbValueScalar(588,17428
pushState(677,19748
appendKey(689,19978
appendValue(718,20817
appendElement(731,21134
JsonbIteratorInit(760,21964
JsonbIteratorNext(796,23713
iteratorFromContainer(942,27656
freeAndGetParent(984,28652
JsonbDeepContains(1005,29242
JsonbHashScalarValue(1259,36373
JsonbHashScalarValueExtended(1302,37443
equalsJsonbScalarValue(1344,38469
compareJsonbScalarValue(1376,39321
reserveFromBuffer(1421,40513
copyToBuffer(1447,41021
appendToBuffer(1456,41212
padBufferToInt(1470,41520
convertToJsonb(1491,41927
convertJsonbValue(1533,43032
convertJsonbArray(1558,43768
convertJsonbObject(1642,46143
convertJsonbScalar(1758,49593
lengthCompareJsonbStringValue(1823,51197
lengthCompareJsonbString(1842,51700
lengthCompareJsonbPair(1862,52314
uniqueifyJsonbObject(1886,52860

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/array_typanalyze.c,934
#define ARRAY_WIDTH_THRESHOLD 33,1036
	Oid			type_id;39,1186
	Oid			eq_opr;40,1228
	Oid			coll_id;41,1283
	bool		typbyval;42,1323
	int16		typlen;43,1383
	char		typalign;44,1399
	FmgrInfo   *cmp;cmp51,1610
	FmgrInfo   *hash;hash52,1628
	AnalyzeAttrComputeStatsFunc std_compute_stats;55,1689
	void	   *std_extra_data;std_extra_data56,1737
} ArrayAnalyzeExtraData;57,1763
static ArrayAnalyzeExtraData *array_extra_data;array_extra_data65,2061
	Datum		key;70,2185
	int			frequency;71,2241
	int			delta;72,2279
	int			last_container;73,2322
} TrackItem;74,2389
	int			count;79,2474
	int			frequency;80,2535
} DECountItem;81,2598
array_typanalyze(98,3306
compute_array_stats(216,8688
prune_element_hashtable(684,23657
element_hash(713,24421
element_match(728,24725
element_compare(743,25106
trackitem_compare_frequencies_desc(759,25471
trackitem_compare_element(771,25792
countitem_compare_count(783,26103

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/pg_upgrade_support.c,520
#define CHECK_IS_BINARY_UPGRADE	24,559
binary_upgrade_set_next_pg_type_oid(33,841
binary_upgrade_set_next_array_pg_type_oid(44,1030
binary_upgrade_set_next_heap_pg_class_oid(55,1231
binary_upgrade_set_next_index_pg_class_oid(66,1432
binary_upgrade_set_next_toast_pg_class_oid(77,1635
binary_upgrade_set_next_pg_enum_oid(88,1838
binary_upgrade_set_next_pg_authid_oid(99,2029
binary_upgrade_create_empty_extension(109,2223
binary_upgrade_set_record_init_privs(176,3824
binary_upgrade_set_missing_value(187,4038

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/int8.c,1867
	int64		current;32,734
	int64		finish;33,751
	int64		step;34,767
} generate_series_fctx;35,781
scanint8(55,1363
int8in(134,2985
int8out(147,3159
int8recv(169,3622
int8send(180,3808
int8eq(199,4236
int8ne(208,4374
int8lt(217,4512
int8gt(226,4649
int8le(235,4786
int8ge(244,4924
int84eq(256,5119
int84ne(265,5258
int84lt(274,5397
int84gt(283,5535
int84le(292,5673
int84ge(301,5812
int48eq(313,6008
int48ne(322,6147
int48lt(331,6286
int48gt(340,6424
int48le(349,6562
int48ge(358,6701
int82eq(370,6897
int82ne(379,7036
int82lt(388,7175
int82gt(397,7313
int82le(406,7451
int82ge(415,7590
int28eq(427,7786
int28ne(436,7925
int28lt(445,8064
int28gt(454,8202
int28le(463,8340
int28ge(472,8479
in_range_int8_int8(487,8815
int8um(526,9819
int8up(540,10089
int8pl(548,10183
int8mi(562,10494
int8mul(576,10805
int8div(590,11117
int8abs(632,12070
int8mod(649,12402
int8gcd_internal(692,13545
int8gcd(753,14870
int8lcm(768,15093
int8inc(805,16017
int8dec(843,17055
int8inc_any(890,18551
int8inc_float8_float8(896,18617
int8dec_any(902,18693
int8larger(909,18760
int8smaller(921,18955
int84pl(933,19151
int84mi(947,19471
int84mul(961,19791
int84div(975,20112
int48pl(1014,21031
int48mi(1028,21351
int48mul(1042,21671
int48div(1056,21992
int82pl(1075,22389
int82mi(1089,22709
int82mul(1103,23029
int82div(1117,23350
int28pl(1156,24279
int28mi(1170,24599
int28mul(1184,24919
int28div(1198,25240
int8and(1227,25872
int8or(1236,26011
int8xor(1245,26149
int8not(1254,26288
int8shl(1262,26386
int8shr(1271,26526
int48(1284,26815
int84(1292,26916
int28(1305,27191
int82(1313,27292
i8tod(1326,27568
dtoi8(1340,27750
i8tof(1361,28274
ftoi8(1375,28456
i8tooid(1396,28980
oidtoi8(1409,29239
generate_series_int8(1420,29389
generate_series_step_int8(1426,29482
generate_series_int8_support(1502,31465

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/xid8funcs.c,867
#define USE_BSEARCH_IF_NXIP_GREATER 49,1608
	int32		__varsz;62,1857
	uint32		nxip;64,1875
	FullTransactionId xmin;65,1927
	FullTransactionId xmax;66,1952
	FullTransactionId xip[xip68,2026
} pg_snapshot;69,2073
#define PG_SNAPSHOT_SIZE(71,2089
#define PG_SNAPSHOT_MAX_NXIP 73,2189
TransactionIdInRecentPast(90,2891
widen_snapshot_xid(150,5071
cmp_fxid(176,5890
sort_snapshot(196,6372
is_visible_fxid(210,6643
buf_init(245,7389
buf_add_txid(260,7660
buf_finalize(271,7903
parse_snapshot(288,8156
pg_current_xact_id(358,9810
pg_current_xact_id_if_assigned(376,10348
pg_current_snapshot(394,10726
pg_snapshot_in(445,12200
pg_snapshot_out(461,12458
pg_snapshot_recv(493,13171
pg_snapshot_send(559,14742
pg_visible_in_snapshot(580,15321
pg_snapshot_xmin(594,15624
pg_snapshot_xmax(607,15857
pg_snapshot_xip(620,16110
pg_xact_status(665,17208

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/varbit.c,1210
#define HEXDIG(43,1460
#define VARBIT_PAD(46,1592
#define VARBIT_PAD_LAST(58,1929
#define VARBIT_CORRECTLY_PADDED(68,2191
#define VARBIT_CORRECTLY_PADDED(76,2434
anybit_typmodin(89,2780
anybit_typmodout(126,3631
bit_in(146,4003
bit_out(279,7086
bit_recv(330,8055
bit_send(375,9175
bit(390,9582
bittypmodin(428,10631
bittypmodout(436,10763
varbit_in(451,11119
varbit_out(586,14314
varbit_recv(635,15208
varbit_send(680,16325
varbit_support(701,16909
varbit(741,18020
varbittypmodin(773,18790
varbittypmodout(781,18928
bit_cmp(817,20168
biteq(840,20576
bitne(864,21011
bitlt(888,21445
bitle(903,21698
bitgt(918,21952
bitge(933,22205
bitcmp(948,22459
bitcat(967,22758
bit_catenate(976,22936
bitsubstr(1037,24308
bitsubstr_no_len(1046,24479
bitsubstring(1054,24641
bitoverlay(1146,26695
bitoverlay_no_len(1157,26984
bit_overlay(1169,27298
bitlength(1203,28156
bitoctetlength(1211,28271
bit_and(1223,28456
bit_or(1264,29273
bitxor(1304,30088
bitnot(1345,30902
bitshiftleft(1372,31446
bitshiftright(1439,32866
bitfromint4(1511,34463
bittoint4(1566,35873
bitfromint8(1591,36432
bittoint8(1646,37842
bitposition(1678,38655
bitsetbit(1787,41400
bitgetbit(1849,42718

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/network_selfuncs.c,565
#define DEFAULT_OVERLAP_SEL 33,963
#define DEFAULT_INCLUSION_SEL 36,1059
#define DEFAULT_SEL(39,1145
#define MAX_CONSIDERED_ELEMS 44,1340
networksel(79,2995
networkjoinsel(196,6796
networkjoinsel_inner(263,8934
networkjoinsel_semi(390,13006
mcv_population(539,17585
inet_hist_value_sel(604,20876
inet_mcv_join_sel(673,22617
inet_mcv_hist_sel(705,23530
inet_hist_inclusion_join_sel(742,24721
inet_semi_join_sel(793,26534
inet_opr_codenum(836,27603
inet_inclusion_cmp(879,29126
inet_masklen_inclusion_cmp(905,29845
inet_hist_match_divider(939,30965

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/date.c,3771
anytime_typmodin(47,1162
anytime_typmod_check(68,1618
anytime_typmodout(90,2224
date_in(110,2698
date_out(175,4133
date_recv(200,4612
date_send(222,5102
make_date(236,5336
EncodeSpecialDate(285,6540
GetSQLCurrentDate(300,6839
GetSQLCurrentTime(322,7320
GetSQLLocalTime(348,7889
date_eq(375,8366
date_ne(384,8529
date_lt(393,8692
date_le(402,8854
date_gt(411,9017
date_ge(420,9179
date_cmp(429,9342
date_fastcmp(442,9595
date_sortsupport(455,9789
date_finite(464,9945
date_larger(472,10067
date_smaller(481,10260
date_mi(492,10507
date_pli(509,10976
date_mii(533,11572
date2timestamp_opt_overflow(563,12317
date2timestamp(604,13232
date2timestamptz_opt_overflow(617,13557
date2timestamptz(692,15206
date2timestamp_no_overflow(708,15746
date_eq_timestamp(731,16125
date_ne_timestamp(743,16361
date_lt_timestamp(755,16597
date_gt_timestamp(767,16832
date_le_timestamp(779,17067
date_ge_timestamp(791,17303
date_cmp_timestamp(803,17539
date_eq_timestamptz(815,17772
date_ne_timestamptz(827,18020
date_lt_timestamptz(839,18268
date_gt_timestamptz(851,18515
date_le_timestamptz(863,18762
date_ge_timestamptz(875,19010
date_cmp_timestamptz(887,19258
timestamp_eq_date(899,19503
timestamp_ne_date(911,19739
timestamp_lt_date(923,19975
timestamp_gt_date(935,20210
timestamp_le_date(947,20445
timestamp_ge_date(959,20681
timestamp_cmp_date(971,20917
timestamptz_eq_date(983,21150
timestamptz_ne_date(995,21398
timestamptz_lt_date(1007,21646
timestamptz_gt_date(1019,21893
timestamptz_le_date(1031,22140
timestamptz_ge_date(1043,22388
timestamptz_cmp_date(1055,22636
in_range_date_interval(1073,23071
date_pl_interval(1102,23900
date_mi_interval(1122,24469
date_timestamp(1139,24853
timestamp_date(1153,25089
date_timestamptz(1183,25755
timestamptz_date(1198,26015
time_in(1230,26787
tm2time(1267,27571
time_overflows(1278,27855
float_time_overflows(1302,28517
time2tm(1341,29707
time_out(1354,30027
time_recv(1374,30399
time_send(1400,30922
timetypmodin(1411,31114
timetypmodout(1419,31248
make_time(1430,31425
time_support(1458,32166
time_scale(1478,32610
AdjustTimeForTypmod(1498,33134
time_eq(1533,33878
time_ne(1542,34029
time_lt(1551,34180
time_le(1560,34330
time_gt(1569,34481
time_ge(1578,34631
time_cmp(1587,34782
time_hash(1600,35007
time_hash_extended(1606,35072
time_larger(1612,35154
time_smaller(1621,35329
overlaps_time(1636,35754
#define TIMEADT_GT(1651,36210
#define TIMEADT_LT(1653,36283
#undef TIMEADT_GT1750,38226
#undef TIMEADT_LT1751,38244
timestamp_time(1758,38335
timestamptz_time(1788,39049
datetime_timestamp(1819,39786
time_interval(1842,40264
interval_time(1865,40848
time_mi_time(1890,41309
time_pl_interval(1909,41655
time_mi_interval(1927,42027
in_range_time_interval(1945,42387
time_part(1985,43461
tm2timetz(2076,45267
timetz_in(2086,45503
timetz_out(2121,46313
timetz_recv(2142,46716
timetz_send(2178,47662
timetztypmodin(2190,47902
timetztypmodout(2198,48037
timetz2tm(2210,48257
timetz_scale(2232,48779
timetz_cmp_internal(2250,49121
timetz_eq(2277,49668
timetz_ne(2286,49859
timetz_lt(2295,50050
timetz_le(2304,50240
timetz_gt(2313,50431
timetz_ge(2322,50621
timetz_cmp(2331,50812
timetz_hash(2340,51000
timetz_hash_extended(2356,51404
timetz_larger(2372,51834
timetz_smaller(2386,52111
timetz_pl_interval(2403,52444
timetz_mi_interval(2425,52953
in_range_timetz_interval(2447,53448
overlaps_timetz(2490,54831
#define TIMETZ_GT(2505,55298
#define TIMETZ_LT(2507,55377
#undef TIMETZ_GT2604,57320
#undef TIMETZ_LT2605,57337
timetz_time(2610,57364
time_timetz(2623,57580
timestamptz_timetz(2649,58047
datetimetz_timestamptz(2681,58793
timetz_part(2722,59940
timetz_zone(2822,61919
timetz_izone(2904,64056

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/format_type.c,225
format_type(59,2199
format_type_extended(111,3612
format_type_be(339,9502
format_type_be_qualified(349,9739
format_type_with_typemod(358,9929
printTypmod(367,10133
type_maximum_size(408,11410
oidvectortypes(443,12122

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/int.c,2077
#define Int2VectorSize(45,1127
	int32		current;49,1224
	int32		finish;50,1241
	int32		step;51,1257
} generate_series_fctx;52,1271
int2in(63,1547
int2out(74,1707
int2recv(87,1962
int2send(98,2169
buildint2vector(114,2485
int2vectorin(141,3065
int2vectorout(180,4039
int2vectorrecv(204,4535
int2vectorsend(252,5973
int4in(266,6287
int4out(277,6446
int4recv(290,6703
int4send(301,6910
i2toi4(319,7178
i4toi2(327,7282
int4_bool(341,7579
bool_int4(351,7727
int4eq(375,8208
int4ne(384,8346
int4lt(393,8484
int4le(402,8621
int4gt(411,8759
int4ge(420,8896
int2eq(429,9034
int2ne(438,9172
int2lt(447,9310
int2le(456,9447
int2gt(465,9585
int2ge(474,9722
int24eq(483,9860
int24ne(492,9999
int24lt(501,10138
int24le(510,10276
int24gt(519,10415
int24ge(528,10553
int42eq(537,10692
int42ne(546,10831
int42lt(555,10970
int42le(564,11108
int42gt(573,11247
int42ge(582,11385
in_range_int4_int4(602,12008
in_range_int4_int2(636,12843
in_range_int4_int8(648,13186
in_range_int2_int4(683,14077
in_range_int2_int2(718,14968
in_range_int2_int8(730,15311
int4um(750,15836
int4up(762,16073
int4pl(770,16167
int4mi(784,16479
int4mul(798,16791
int4div(812,17104
int4inc(851,18019
int2um(865,18293
int2up(877,18531
int2pl(885,18625
int2mi(899,18938
int2mul(913,19251
int2div(928,19566
int24pl(967,20484
int24mi(981,20805
int24mul(995,21126
int24div(1009,21448
int42pl(1028,21845
int42mi(1042,22166
int42mul(1056,22487
int42div(1070,22809
int4mod(1109,23735
int2mod(1137,24336
int4abs(1170,25088
int2abs(1184,25383
int4gcd_internal(1212,26204
int4gcd(1273,27518
int4lcm(1288,27741
int2larger(1325,28663
int2smaller(1334,28821
int4larger(1343,28980
int4smaller(1352,29138
int4and(1372,29556
int4or(1381,29695
int4xor(1390,29833
int4shl(1399,29972
int4shr(1408,30112
int4not(1417,30252
int2and(1425,30350
int2or(1434,30489
int2xor(1443,30627
int2not(1452,30766
int2shl(1461,30865
int2shr(1470,31005
generate_series_int4(1482,31195
generate_series_step_int4(1488,31288
generate_series_int4_support(1564,33271

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/xid.c,606
#define PG_GETARG_TRANSACTIONID(26,655
#define PG_RETURN_TRANSACTIONID(27,732
#define PG_GETARG_COMMANDID(29,800
#define PG_RETURN_COMMANDID(30,870
xidin(34,938
xidout(42,1077
xidrecv(55,1364
xidsend(66,1592
xideq(80,1834
xidneq(92,2066
xid_age(104,2331
mxid_age(120,2705
xidComparator(139,3132
xid8toxid(152,3372
xid8in(160,3528
xid8out(168,3689
xid8recv(178,3923
xid8send(188,4133
xid8eq(199,4378
xid8ne(208,4589
xid8lt(217,4801
xid8gt(226,5014
xid8le(235,5226
xid8ge(244,5447
xid8cmp(253,5667
cidin(274,6261
cidout(285,6455
cidrecv(298,6710
cidsend(309,6926
cideq(320,7119

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/partitionfuncs.c,163
check_rel_can_be_partition(35,997
pg_partition_tree(65,1785
#define PG_PARTITION_TREE_COLS	67,1823
pg_partition_root(178,4787
pg_partition_ancestors(215,5588

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/tsquery.c,1736
const int	tsearch_op_priority[tsearch_op_priority27,636
	WAITOPERAND 40,818
	WAITOPERATOR 41,836
	WAITFIRSTOPERAND 42,855
} ts_parserstate;43,877
	PT_END 50,945
	PT_ERR 51,958
	PT_VAL 52,971
	PT_OPR 53,984
	PT_OPEN 54,997
	PT_CLOSE 55,1011
} ts_tokentype;56,1025
typedef ts_tokentype (*ts_tokenizer)ts_tokenizer66,1300
struct TSQueryParserStateData70,1461
	ts_tokenizer gettoken;73,1535
	char	   *buffer;buffer76,1595
	char	   *buf;buf77,1651
	int			count;78,1693
	bool		in_quotes;80,1776
	ts_parserstate state;81,1821
	List	   *polstr;polstr84,1915
	char	   *op;op90,2045
	char	   *curop;curop91,2059
	int			lenop;92,2076
	int			sumlen;93,2119
	TSVectorParseState valstate;96,2191
get_modifiers(104,2351
parse_phrase_operator(155,3103
		PHRASE_OPEN 159,3180
		PHRASE_DIST,160,3199
		PHRASE_CLOSE,161,3214
		PHRASE_FINISH162,3230
parse_or_operator(234,4492
gettoken_query_standard(279,5421
gettoken_query_websearch(383,7715
gettoken_query_plain(524,10500
pushOperator(545,10874
pushValue_internal(561,11302
pushValue(594,12170
pushStop(630,13170
#define STACKDEPTH	641,13357
typedef struct OperatorElement643,13380
	int8		op;645,13413
	int16		distance;646,13424
} OperatorElement;647,13442
pushOpStack(650,13474
cleanOpStack(662,13744
makepol(686,14322
findoprnd_recurse(734,15449
findoprnd(792,16797
parse_tsquery(817,17540
pushval_asis(933,20399
tsqueryin(943,20603
	QueryItem  *curpol;curpol955,20793
	char	   *buf;buf956,20814
	char	   *cur;cur957,20829
	char	   *op;op958,20844
	int			buflen;959,20858
} INFIX;960,20873
#define RESIZEBUF(963,20952
infix(977,21329
tsqueryout(1132,24474
tsquerysend(1174,25406
tsqueryrecv(1212,26235
tsquerytree(1348,29547

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/quote.c,129
quote_ident(24,485
quote_literal_internal(46,1108
quote_literal(77,1553
quote_literal_cstr(102,2063
quote_nullable(124,2509

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/jsonb.c,2131
typedef struct JsonbInState32,790
	JsonbParseState *parseState;parseState34,820
	JsonbValue *res;res35,850
} JsonbInState;36,868
	JSONBTYPE_NULL,41,1024
	JSONBTYPE_BOOL,42,1088
	JSONBTYPE_NUMERIC,43,1144
	JSONBTYPE_DATE,44,1188
	JSONBTYPE_TIMESTAMP,45,1254
	JSONBTYPE_TIMESTAMPTZ,46,1323
	JSONBTYPE_JSON,47,1374
	JSONBTYPE_JSONB,48,1405
	JSONBTYPE_ARRAY,49,1437
	JSONBTYPE_COMPOSITE,50,1469
	JSONBTYPE_JSONCAST,51,1508
	JSONBTYPE_OTHER	52,1577
} JsonbTypeCategory;53,1612
typedef struct JsonbAggState55,1634
	JsonbInState *res;res57,1665
	JsonbTypeCategory key_category;58,1685
	Oid			key_output_func;59,1718
	JsonbTypeCategory val_category;60,1742
	Oid			val_output_func;61,1775
} JsonbAggState;62,1799
jsonb_in(97,3450
jsonb_recv(113,3859
jsonb_out(132,4250
jsonb_send(148,4522
JsonbContainerTypeName(170,4976
JsonbTypeName(191,5389
jsonb_typeof(240,6517
jsonb_from_cstring(256,6848
checkStringLen(282,7556
jsonb_in_object_start(295,7893
jsonb_in_object_end(303,8072
jsonb_in_array_start(311,8247
jsonb_in_array_end(319,8424
jsonb_in_object_field_start(327,8597
jsonb_put_escaped_value(341,8936
jsonb_in_scalar(371,9705
JsonbToCString(460,11939
JsonbToCStringIndent(469,12134
JsonbToCStringWorker(478,12337
add_indent(602,15128
jsonb_categorize_type(623,15640
datum_to_jsonb(731,18249
array_dim_to_jsonb(954,24097
array_to_jsonb_internal(986,24820
composite_to_jsonb(1034,25878
add_jsonb(1106,27668
to_jsonb(1133,28238
jsonb_build_object(1160,28878
jsonb_build_object_noargs(1210,30161
jsonb_build_array(1226,30532
jsonb_build_array_noargs(1257,31238
jsonb_object(1278,31690
jsonb_object_two_arg(1380,33751
clone_parse_state(1477,35890
jsonb_agg_transfn(1509,36424
jsonb_agg_finalfn(1627,39392
jsonb_object_agg_transfn(1662,40270
jsonb_object_agg_finalfn(1858,45168
JsonbExtractScalar(1895,46106
cannotCastJsonbValue(1935,47086
		enum jbvType type;1939,47173
		const char *msg;msg1940,47194
jsonb_bool(1965,48003
jsonb_numeric(1979,48261
jsonb_int2(2000,48700
jsonb_int4(2018,49067
jsonb_int8(2036,49433
jsonb_float4(2054,49798
jsonb_float8(2072,50165

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/rangetypes_selfuncs.c,404
default_range_selectivity(68,2836
rangesel(109,3752
calc_rangesel(231,7274
calc_hist_selectivity(373,11111
calc_hist_selectivity_scalar(596,17357
rbound_bsearch(628,18613
length_hist_bsearch(657,19324
get_position(683,19857
get_len_position(762,22196
get_distance(807,23272
calc_length_hist_frac(855,24451
calc_hist_selectivity_contained(1018,29099
calc_hist_selectivity_contains(1139,32899

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/like_match.c,279
#define GETCHAR(74,2676
#define GETCHAR(76,2716
MatchText(80,2758
do_like_escape(249,7806
#undef CHAREQ344,9658
#undef NextChar347,9680
#undef CopyAdvChar348,9696
#undef MatchText349,9715
#undef do_like_escape352,9755
#undef GETCHAR355,9785
#undef MATCH_LOWER358,9820

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/network_gist.c,1198
#define INETSTRAT_OVERLAPS	58,2572
#define INETSTRAT_EQ	59,2624
#define INETSTRAT_NE	60,2669
#define INETSTRAT_LT	61,2717
#define INETSTRAT_LE	62,2761
#define INETSTRAT_GT	63,2810
#define INETSTRAT_GE	64,2857
#define INETSTRAT_SUB	65,2909
#define INETSTRAT_SUBEQ	66,2953
#define INETSTRAT_SUP	67,3004
#define INETSTRAT_SUPEQ	68,3050
typedef struct GistInetKey78,3480
	uint8		va_header;80,3509
	unsigned char family;81,3575
	unsigned char minbits;82,3644
	unsigned char commonbits;83,3709
	unsigned char ipaddr[ipaddr84,3784
} GistInetKey;85,3850
#define DatumGetInetKeyP(87,3866
#define InetKeyPGetDatum(88,3931
#define gk_ip_family(95,4182
#define gk_ip_minbits(96,4229
#define gk_ip_commonbits(97,4277
#define gk_ip_addr(98,4331
#define ip_family_maxbits(99,4376
#define gk_ip_addrsize(102,4501
#define gk_ip_maxbits(104,4583
#define SET_GK_VARSIZE(106,4654
inet_gist_consistent(114,4812
calc_inet_union_params(344,10421
calc_inet_union_params_indexed(406,11940
build_inet_union_key(471,13692
inet_gist_union(504,14486
inet_gist_compress(541,15344
inet_gist_fetch(589,16415
inet_gist_penalty(619,17257
inet_gist_picksplit(662,18486
inet_gist_same(796,22211

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/array_selfuncs.c,512
#define DEFAULT_CONTAIN_SEL 31,838
#define DEFAULT_OVERLAP_SEL 34,926
#define DEFAULT_SEL(37,1005
scalararraysel_containment(82,2964
arraycontsel(242,6970
arraycontjoinsel(322,9061
calc_arraycontsel(338,9524
mcelem_array_selec(429,12144
mcelem_array_contain_overlap_selec(522,15024
mcelem_array_contained_selec(697,20472
#define EFFORT 854,25203
calc_hist(922,27142
calc_distr(1011,29571
floor_log2(1090,31151
find_next_mcelem(1131,31827
element_compare(1166,32451
float_compare_desc(1182,32883

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/jsonfuncs.c,10918
#define JB_PATH_CREATE	39,988
#define JB_PATH_DELETE	40,1022
#define JB_PATH_REPLACE	41,1056
#define JB_PATH_INSERT_BEFORE	42,1091
#define JB_PATH_INSERT_AFTER	43,1130
#define JB_PATH_CREATE_OR_INSERT 44,1168
typedef struct OkeysState48,1302
	JsonLexContext *lex;lex50,1330
	char	  **result;result51,1352
	int			result_size;52,1370
	int			result_count;53,1390
	int			sent_count;54,1411
} OkeysState;55,1430
typedef struct IterateJsonStringValuesState58,1490
	JsonLexContext *lex;lex60,1536
	JsonIterateStringValuesAction action;61,1558
	void	   *action_state;action_state63,1667
	uint32		flags;64,1733
} IterateJsonStringValuesState;66,1821
typedef struct TransformJsonStringValuesState69,1908
	JsonLexContext *lex;lex71,1956
	StringInfo	strval;72,1978
	JsonTransformStringValuesAction action;73,2021
	void	   *action_state;action_state75,2132
} TransformJsonStringValuesState;76,2203
typedef struct GetState79,2274
	JsonLexContext *lex;lex81,2300
	text	   *tresult;tresult82,2322
	char	   *result_start;result_start83,2341
	bool		normalize_results;84,2365
	bool		next_scalar;85,2391
	int			npath;86,2411
	char	  **path_names;path_names87,2467
	int		   *path_indexes;path_indexes88,2523
	bool	   *pathok;pathok89,2582
	int		   *array_cur_index;array_cur_index90,2642
} GetState;92,2728
typedef struct AlenState95,2775
	JsonLexContext *lex;lex97,2802
	int			count;98,2824
} AlenState;99,2838
typedef struct EachState102,2878
	JsonLexContext *lex;lex104,2905
	Tuplestorestate *tuple_store;tuple_store105,2927
	TupleDesc	ret_tdesc;106,2958
	MemoryContext tmp_cxt;107,2980
	char	   *result_start;result_start108,3004
	bool		normalize_results;109,3028
	bool		next_scalar;110,3054
	char	   *normalized_scalar;normalized_scalar111,3074
} EachState;112,3103
typedef struct ElementsState115,3153
	JsonLexContext *lex;lex117,3184
	const char *function_name;function_name118,3206
	Tuplestorestate *tuple_store;tuple_store119,3234
	TupleDesc	ret_tdesc;120,3265
	MemoryContext tmp_cxt;121,3287
	char	   *result_start;result_start122,3311
	bool		normalize_results;123,3335
	bool		next_scalar;124,3361
	char	   *normalized_scalar;normalized_scalar125,3381
} ElementsState;126,3410
typedef struct JHashState129,3468
	JsonLexContext *lex;lex131,3496
	const char *function_name;function_name132,3518
	HTAB	   *hash;hash133,3546
	char	   *saved_scalar;saved_scalar134,3562
	char	   *save_json_start;save_json_start135,3586
	JsonTokenType saved_token_type;136,3613
} JHashState;137,3646
typedef struct JsonHashEntry140,3685
	char		fname[fname142,3716
	char	   *val;val143,3774
	JsonTokenType type;144,3789
} JsonHashEntry;145,3810
typedef struct ScalarIOData148,3900
	Oid			typioparam;150,3930
	FmgrInfo	typiofunc;151,3949
} ScalarIOData;152,3970
typedef struct ColumnIOData ColumnIOData;155,4035
typedef struct RecordIOData RecordIOData;156,4077
typedef struct ArrayIOData159,4182
	ColumnIOData *element_info;element_info161,4211
	Oid			element_type;162,4261
	int32		element_typmod;163,4310
} ArrayIOData;164,4368
typedef struct CompositeIOData167,4450
	RecordIOData *record_io;record_io173,4630
	TupleDesc	tupdesc;174,4699
	Oid			base_typid;176,4825
	int32		base_typmod;177,4864
	void	   *domain_info;domain_info179,4982
} CompositeIOData;180,5042
typedef struct DomainIOData183,5125
	ColumnIOData *base_io;base_io185,5155
	Oid			base_typid;186,5201
	int32		base_typmod;187,5240
	void	   *domain_info;domain_info188,5286
} DomainIOData;189,5346
typedef enum TypeCat192,5397
	TYPECAT_SCALAR 194,5420
	TYPECAT_ARRAY 195,5443
	TYPECAT_COMPOSITE 196,5465
	TYPECAT_COMPOSITE_DOMAIN 197,5491
	TYPECAT_DOMAIN 198,5524
} TypeCat;199,5546
struct ColumnIOData204,5713
	Oid			typid;206,5735
	int32		typmod;207,5772
	TypeCat		typcat;208,5817
	ScalarIOData scalar_io;209,5864
		ArrayIOData array;213,5977
		CompositeIOData composite;214,5998
		DomainIOData domain;215,6027
	}			io;216,6050
struct RecordIOData221,6203
	Oid			record_type;223,6225
	int32		record_typmod;224,6245
	int			ncolumns;225,6268
	ColumnIOData columns[columns226,6285
typedef struct PopulateRecordCache230,6414
	Oid			argtype;232,6451
	ColumnIOData c;233,6511
	MemoryContext fn_mcxt;234,6577
} PopulateRecordCache;235,6629
typedef struct PopulateRecordsetState238,6697
	JsonLexContext *lex;lex240,6737
	const char *function_name;function_name241,6759
	HTAB	   *json_hash;json_hash242,6787
	char	   *saved_scalar;saved_scalar243,6808
	char	   *save_json_start;save_json_start244,6832
	JsonTokenType saved_token_type;245,6859
	Tuplestorestate *tuple_store;tuple_store246,6892
	HeapTupleHeader rec;247,6923
	PopulateRecordCache *cache;cache248,6945
} PopulateRecordsetState;249,6974
typedef struct PopulateArrayContext252,7076
	ArrayBuildState *astate;astate254,7114
	ArrayIOData *aio;aio255,7164
	MemoryContext acxt;256,7206
	MemoryContext mcxt;257,7262
	const char *colname;colname258,7312
	int		   *dims;dims259,7362
	int		   *sizes;sizes260,7397
	int			ndims;261,7449
} PopulateArrayContext;262,7492
typedef struct PopulateArrayState265,7555
	JsonLexContext *lex;lex267,7591
	PopulateArrayContext *ctx;ctx268,7631
	char	   *element_start;element_start269,7673
	char	   *element_scalar;element_scalar270,7739
	JsonTokenType element_type;272,7828
} PopulateArrayState;273,7890
typedef struct StripnullState276,7946
	JsonLexContext *lex;lex278,7978
	StringInfo	strval;279,8000
	bool		skip_next_null;280,8020
} StripnullState;281,8043
typedef struct JsValue284,8119
	bool		is_json;286,8144
			char	   *str;str291,8201
			int			len;292,8236
			JsonTokenType type;293,8300
		}			json;294,8339
		JsonbValue *jsonb;jsonb296,8370
	}			val;297,8410
} JsValue;298,8420
typedef struct JsObject300,8432
	bool		is_json;302,8458
		HTAB	   *json_hash;json_hash305,8502
		JsonbContainer *jsonb_cont;jsonb_cont306,8524
	}			val;307,8554
} JsObject;308,8564
#define JsValueIsNull(311,8628
#define JsValueIsString(316,8812
#define JsObjectIsEmpty(320,8970
#define JsObjectFree(326,9168
pg_parse_json_or_ereport(497,18015
makeJsonLexContext(513,18350
jsonb_object_keys(534,19049
json_ereport_error(607,20731
report_json_context(635,21653
json_object_keys(698,23451
okeys_object_field_start(754,24777
okeys_array_start(775,25318
okeys_scalar(788,25619
json_object_field(808,26103
jsonb_object_field(824,26424
json_object_field_text(846,26838
jsonb_object_field_text(862,27163
json_array_element(884,27602
jsonb_array_element(899,27875
json_array_element_text(927,28381
jsonb_array_element_text(942,28658
json_extract_path(971,29190
json_extract_path_text(977,29274
get_path_all(986,29421
get_worker(1066,31726
get_object_start(1122,33077
get_object_end(1139,33527
get_object_field_start(1155,33912
get_object_field_end(1200,34982
get_array_start(1249,36316
get_array_end(1287,37432
get_array_element_start(1303,37815
get_array_element_end(1349,38807
get_scalar(1391,39802
jsonb_extract_path(1432,40908
jsonb_extract_path_text(1438,40999
get_jsonb_path_all(1444,41101
JsonbValueAsText(1600,44878
json_array_length(1647,45774
jsonb_array_length(1675,46351
alen_object_start(1697,46894
alen_scalar(1709,47169
alen_array_element_start(1721,47473
json_each(1741,48032
jsonb_each(1747,48107
json_each_text(1753,48203
jsonb_each_text(1759,48282
each_worker_jsonb(1765,48394
each_worker(1883,51281
each_object_field_start(1947,53013
each_object_field_end(1967,53586
each_array_start(2013,54686
each_scalar(2025,54962
jsonb_array_elements(2049,55544
jsonb_array_elements_text(2055,55664
elements_worker_jsonb(2061,55800
json_array_elements(2167,58383
json_array_elements_text(2173,58495
elements_worker(2179,58623
elements_array_element_start(2245,60546
elements_array_element_end(2265,61119
elements_object_start(2309,62172
elements_scalar(2322,62478
jsonb_populate_record(2351,63292
jsonb_to_record(2358,63431
json_populate_record(2365,63559
json_to_record(2372,63695
populate_array_report_expected_array(2380,63864
populate_array_assign_ndims(2423,64979
populate_array_check_dimension(2442,65407
populate_array_element(2464,66086
populate_array_object_start(2485,66703
populate_array_array_end(2498,67087
populate_array_element_start(2513,67485
populate_array_element_end(2529,67958
populate_array_scalar(2568,68827
populate_array_json(2590,69471
populate_array_dim_jsonb(2619,70313
populate_array(2690,72144
JsValueToJsObject(2737,73093
update_cached_tupdesc(2780,74109
populate_composite(2804,74766
populate_scalar(2848,75821
populate_domain(2929,77881
prepare_column_cache(2956,78393
populate_record_field(3043,80920
allocate_record_info(3108,82600
JsObjectGetField(3124,82984
populate_record(3152,83727
get_record_type_from_argument(3265,86694
get_record_type_from_query(3291,87584
populate_record_worker(3328,88821
get_json_object_as_hash(3433,91455
hash_object_field_start(3469,92344
hash_object_field_end(3493,92904
hash_array_start(3542,94243
hash_scalar(3553,94501
jsonb_populate_recordset(3582,95289
jsonb_to_recordset(3589,95437
json_populate_recordset(3596,95574
json_to_recordset(3603,95719
populate_recordset_record(3610,95859
populate_recordset_worker(3647,96994
populate_recordset_object_start(3815,101669
populate_recordset_object_end(3844,102492
populate_recordset_array_element_start(3865,103012
populate_recordset_array_start(3878,103407
populate_recordset_scalar(3884,103489
populate_recordset_object_field_start(3899,103891
populate_recordset_object_field_end(3920,104370
sn_object_start(3978,106009
sn_object_end(3986,106157
sn_array_start(3994,106303
sn_array_end(4002,106450
sn_object_field_start(4010,106595
sn_array_element_start(4038,107316
sn_scalar(4047,107544
json_strip_nulls(4068,107973
jsonb_strip_nulls(4103,108831
addJsonbToParseState(4165,110263
jsonb_pretty(4213,111304
jsonb_concat(4229,111622
jsonb_delete(4270,112606
jsonb_delete_array(4323,113809
jsonb_delete_idx(4410,115669
jsonb_set(4474,116881
jsonb_set_lax(4521,118011
jsonb_delete_path(4588,120016
jsonb_insert(4632,121032
IteratorConcat(4679,122326
setPath(4797,125782
setPathObject(4850,127086
setPathArray(4957,129836
parse_jsonb_index_flags(5080,132842
iterate_jsonb_values(5148,135010
iterate_json_values(5216,136513
iterate_values_scalar(5240,137244
iterate_values_object_field_start(5266,137936
transform_jsonb_string_values(5285,138540
transform_json_string_values(5330,139852
transform_string_values_object_start(5363,141105
transform_string_values_object_end(5371,141306
transform_string_values_array_start(5379,141505
transform_string_values_array_end(5387,141705
transform_string_values_object_field_start(5395,141903
transform_string_values_array_element_start(5411,142396
transform_string_values_scalar(5420,142677

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/pseudotypes.c,637
#define PSEUDOTYPE_DUMMY_INPUT_FUNC(36,1145
#define PSEUDOTYPE_DUMMY_IO_FUNCS(49,1449
#define PSEUDOTYPE_DUMMY_RECEIVE_FUNC(70,2045
#define PSEUDOTYPE_DUMMY_BINARY_IO_FUNCS(83,2353
cstring_in(109,3095
cstring_out(117,3208
cstring_recv(125,3322
cstring_send(136,3533
anyarray_out(160,4165
anyarray_send(166,4234
anycompatiblearray_out(180,4496
anycompatiblearray_send(186,4575
anyenum_out(199,4782
anyrange_out(212,4978
anycompatiblerange_out(225,5196
void_in(239,5572
void_out(245,5676
void_recv(251,5747
void_send(261,5957
shell_in(279,6393
shell_out(289,6594
pg_node_tree_out(314,7323
pg_node_tree_send(320,7394

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/datetime.c,2044
const int	day_tab[day_tab59,2039
const char *const months[months65,2179
const char *const days[days68,2301
static const datetkn datetktbl[datetktbl89,3093
static const int szdatetktbl 164,5485
static const datetkn deltatktbl[deltatktbl170,5694
static const int szdeltatktbl 235,8881
static TimeZoneAbbrevTable *zoneabbrevtbl zoneabbrevtbl237,8956
static const datetkn *datecache[datecache241,9066
static const datetkn *deltacache[deltacache243,9124
static const datetkn *abbrevcache[abbrevcache245,9183
date2j(269,10111
j2date(294,10418
j2day(327,11307
GetCurrentDateTime(345,11599
GetCurrentTimeUsec(362,11989
AppendSeconds(386,12656
AppendTimestampSeconds(449,14083
AdjustFractSeconds(459,14390
AdjustFractDays(474,14670
ParseFractionalSecond(489,15013
ParseDateTime(537,16771
#define APPEND_CHAR(551,17271
DecodeDateTime(758,23002
DetermineTimeZoneOffset(1433,38978
DetermineTimeZoneOffsetInternal(1455,39616
DetermineTimeZoneAbbrevOffset(1594,43985
DetermineTimeZoneAbbrevOffsetTS(1632,44976
DetermineTimeZoneAbbrevOffsetInternal(1669,45958
DecodeTimeOnly(1709,47058
DecodeDate(2325,60885
ValidateDate(2435,63013
DecodeTime(2514,64927
DecodeNumber(2590,66568
DecodeNumberField(2775,70747
DecodeTimezone(2862,72523
DecodeTimezoneAbbrev(2940,74352
DecodeSpecial(2995,75431
ClearPgTm(3027,75955
DecodeInterval(3051,76559
ParseISO8601Number(3422,85390
ISO8601IntegerWidth(3450,86149
DecodeISO8601Interval(3477,87081
DecodeUnits(3686,91873
DateTimeParseError(3723,92754
datebsearch(3768,94083
EncodeTimezone(3804,94954
EncodeDateOnly(3842,95716
EncodeTimeOnly(3927,97920
EncodeDateTime(3957,98922
AddISO8601IntPart(4128,103345
AddPostgresIntPart(4138,103581
AddVerboseIntPart(4161,104151
EncodeInterval(4200,105310
CheckDateTokenTable(4391,110809
CheckDateTokenTables(4423,111522
TemporalSimplify(4452,112580
ConvertTimeZoneAbbrevs(4485,113552
InstallTimeZoneAbbrevs(4569,115593
FetchDynamicTimeZone(4580,115879
pg_timezone_abbrevs(4616,116898
pg_timezone_names(4744,120061

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/timestamp.c,5233
#define SAMESIGN(47,1192
TimestampTz PgStartTime;50,1270
TimestampTz PgReloadTime;53,1330
	Timestamp	current;57,1374
	Timestamp	finish;58,1394
	Interval	step;59,1413
	int			step_sign;60,1429
} generate_series_timestamp_fctx;61,1447
	TimestampTz current;65,1499
	TimestampTz finish;66,1521
	Interval	step;67,1542
	int			step_sign;68,1558
} generate_series_timestamptz_fctx;69,1576
anytimestamp_typmodin(81,2036
anytimestamp_typmod_check(102,2507
anytimestamp_typmodout(124,3153
timestamp_in(143,3639
timestamp_out(206,4959
timestamp_recv(232,5598
timestamp_send(265,6382
timestamptypmodin(276,6592
timestamptypmodout(284,6736
timestamp_support(299,7059
timestamp_scale(319,7518
AdjustTimestampForTypmodError(337,7896
AdjustTimestampForTypmod(392,9091
timestamptz_in(401,9279
parse_sane_timezone(468,10836
make_timestamp_internal(552,13381
make_timestamp(630,15649
make_timestamptz(650,16103
make_timestamptz_at_timezone(671,16630
float8_timestamptz(711,17616
timestamptz_out(761,18890
timestamptz_recv(789,19538
timestamptz_send(823,20346
timestamptztypmodin(834,20562
timestamptztypmodout(842,20707
timestamptz_scale(855,20981
interval_in(876,21384
interval_out(952,22974
interval_recv(974,23424
interval_send(999,23996
intervaltypmodin(1024,25028
intervaltypmodout(1103,27148
intervaltypmodleastfield(1189,29408
interval_support(1242,31028
interval_scale(1305,32728
AdjustIntervalForTypmod(1324,33128
make_interval(1491,38000
EncodeSpecialTimestamp(1527,39027
now(1538,39290
statement_timestamp(1544,39386
clock_timestamp(1550,39496
pg_postmaster_start_time(1556,39588
pg_conf_load_time(1562,39679
GetCurrentTimestamp(1574,39965
GetSQLCurrentTimestamp(1592,40328
GetSQLLocalTimestamp(1606,40593
timeofday(1620,40856
TimestampDifference(1648,41639
TimestampDifferenceExceeds(1673,42211
time_t_to_timestamptz(1694,42909
timestamptz_to_time_t(1716,43529
timestamptz_to_str(1736,44033
dt2time(1757,44456
timestamp2tm(1784,45116
tm2timestamp(1880,47544
interval2tm(1928,48705
tm2interval(1956,49371
time2t(1972,49799
dt2local(1978,49986
timestamp_finite(1991,50267
interval_finite(1999,50412
GetEpochTime(2010,50643
SetEpochTimestamp(2032,51034
timestamp_cmp_internal(2052,51463
timestamp_eq(2058,51577
timestamp_ne(2067,51758
timestamp_lt(2076,51939
timestamp_gt(2085,52119
timestamp_le(2094,52299
timestamp_ge(2103,52480
timestamp_cmp(2112,52661
timestamp_fastcmp(2122,52890
timestamp_sortsupport(2131,53068
timestamp_hash(2140,53234
timestamp_hash_extended(2146,53304
timestamp_eq_timestamptz(2156,53463
timestamp_ne_timestamptz(2168,53732
timestamp_lt_timestamptz(2180,54001
timestamp_gt_timestamptz(2192,54269
timestamp_le_timestamptz(2204,54537
timestamp_ge_timestamptz(2216,54806
timestamp_cmp_timestamptz(2228,55075
timestamptz_eq_timestamp(2240,55341
timestamptz_ne_timestamp(2252,55610
timestamptz_lt_timestamp(2264,55879
timestamptz_gt_timestamp(2276,56147
timestamptz_le_timestamp(2288,56415
timestamptz_ge_timestamp(2300,56684
timestamptz_cmp_timestamp(2312,56953
interval_cmp_value(2335,57671
interval_cmp_internal(2360,58303
interval_eq(2369,58513
interval_ne(2378,58722
interval_lt(2387,58931
interval_gt(2396,59139
interval_le(2405,59347
interval_ge(2414,59556
interval_cmp(2423,59765
interval_hash(2439,60171
interval_hash_extended(2457,60671
overlaps_timestamp(2477,61265
#define TIMESTAMP_GT(2493,61798
#define TIMESTAMP_LT(2495,61883
#undef TIMESTAMP_GT2592,63851
#undef TIMESTAMP_LT2593,63871
timestamp_smaller(2602,64066
timestamp_larger(2617,64400
timestamp_mi(2632,64660
interval_justify_interval(2694,66264
interval_justify_hours(2749,67578
interval_justify_days(2784,68312
timestamp_pl_interval(2824,69415
timestamp_mi_interval(2903,71497
timestamptz_pl_interval(2929,72282
timestamptz_mi_interval(3013,74491
interval_um(3030,74870
interval_smaller(3059,75733
interval_larger(3074,76109
interval_pl(3088,76411
interval_mi(3122,77393
interval_mul(3162,78596
mul_d_interval(3239,81324
interval_div(3249,81569
in_range_timestamptz_interval(3301,83152
in_range_timestamp_interval(3332,84132
in_range_interval_interval(3363,85080
interval_accum(3405,86458
interval_combine(3440,87387
interval_accum_inv(3489,88712
interval_avg(3524,89645
timestamp_age(3558,90535
timestamptz_age(3677,93106
timestamp_trunc(3804,95778
timestamptz_trunc_internal(3941,99121
timestamptz_trunc(4085,102695
timestamptz_trunc_zone(4103,103135
interval_trunc(4162,104561
isoweek2j(4266,107118
isoweek2date(4286,107506
isoweekdate2date(4299,107902
date2isoweek(4317,108255
date2isoyear(4372,109369
date2isoyearday(4429,110494
NonFiniteTimestampTzPart(4446,111116
timestamp_part(4515,112638
timestamptz_part(4709,117025
interval_part(4908,121365
timestamp_zone(5029,124087
timestamp_izone(5117,126598
TimestampTimestampTzRequiresRewrite(5154,127755
timestamp_timestamptz(5167,128003
timestamp2timestamptz_opt_overflow(5182,128395
timestamp2timestamptz(5227,129226
timestamptz_timestamp(5236,129419
timestamptz2timestamp(5244,129589
timestamptz_zone(5273,130290
timestamptz_izone(5360,132677
generate_series_timestamp(5393,133548
generate_series_timestamptz(5473,135772

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/jsonpath.c,678
jsonpath_in(93,3120
jsonpath_recv(110,3548
jsonpath_out(129,3965
jsonpath_send(142,4219
jsonPathFromCstring(168,4839
jsonPathToCstring(203,5705
flattenJsonPathParseItem(229,6203
alignStringInfoInt(439,11714
reserveSpaceForItemPointer(462,12198
printJsonPathItem(476,12454
jspOperationName(718,18934
operationPriority(777,19948
#define read_byte(814,20521
#define read_int32(819,20630
#define read_int32_n(824,20748
jspInit(833,20938
jspInitByBuffer(843,21140
jspGetArg(923,22987
jspGetNext(937,23292
jspGetLeftArg(992,24675
jspGetRightArg(1013,25189
jspGetBool(1034,25705
jspGetNumeric(1042,25815
jspGetString(1050,25932
jspGetArraySubscript(1062,26149

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/cryptohashes.c,156
#define MD5_HASH_LEN 26,536
md5_text(32,642
md5_bytea(55,1205
sha224_bytea(76,1576
sha256_bytea(100,2100
sha384_bytea(124,2624
sha512_bytea(148,3148

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/inet_cidr_ntop.c,174
static const char rcsid[rcsid21,939
#define SPRINTF(35,1209
#define SPRINTF(37,1255
pg_inet_cidr_ntop(56,1784
inet_cidr_ntop_ipv4(85,2501
inet_cidr_ntop_ipv6(165,4075

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/ruleutils.c,6917
#define PRETTYINDENT_STD	84,2266
#define PRETTYINDENT_JOIN	85,2294
#define PRETTYINDENT_VAR	86,2323
#define PRETTYINDENT_LIMIT	88,2352
#define PRETTYFLAG_PAREN	91,2420
#define PRETTYFLAG_INDENT	92,2453
#define PRETTYFLAG_SCHEMA	93,2487
#define WRAP_COLUMN_DEFAULT	96,2595
#define PRETTY_PAREN(99,2672
#define PRETTY_INDENT(100,2746
#define PRETTY_SCHEMA(101,2822
	StringInfo	buf;112,3047
	List	   *namespaces;namespaces113,3099
	List	   *windowClause;windowClause114,3160
	List	   *windowTList;windowTList115,3226
	int			prettyFlags;116,3294
	int			wrapColumn;117,3355
	int			indentLevel;118,3417
	bool		varprefix;119,3481
	ParseExprKind special_exprkind;120,3537
	Bitmapset  *appendparents;appendparents122,3636
} deparse_context;124,3748
	List	   *rtable;rtable160,5518
	List	   *rtable_names;rtable_names161,5572
	List	   *rtable_columns;rtable_columns162,5634
	List	   *subplans;subplans163,5707
	List	   *ctes;ctes164,5766
	AppendRelInfo **appendrels;appendrels165,5820
	bool		unique_using;167,5939
	List	   *using_names;using_names168,6008
	Plan	   *plan;plan170,6144
	List	   *ancestors;ancestors171,6207
	Plan	   *outer_plan;outer_plan172,6253
	Plan	   *inner_plan;inner_plan173,6313
	List	   *outer_tlist;outer_tlist174,6373
	List	   *inner_tlist;inner_tlist175,6430
	List	   *index_tlist;index_tlist176,6487
} deparse_namespace;177,6544
	int			num_cols;237,9886
	char	  **colnames;colnames238,9937
	int			num_new_cols;254,10845
	char	  **new_colnames;new_colnames255,10903
	bool	   *is_new_col;is_new_col256,10952
	bool		printaliases;259,11078
	List	   *parentUsing;parentUsing262,11175
	int			leftrti;281,12199
	int			rightrti;282,12253
	int		   *leftattnos;leftattnos283,12309
	int		   *rightattnos;rightattnos284,12378
	List	   *usingNames;usingNames285,12448
} deparse_columns;286,12510
#define deparse_columns_fetch(289,12607
	char		name[name297,12807
	int			counter;298,12866
} NameHashEntry;299,12927
typedef void (*rsv_callback)rsv_callback302,12998
static SPIPlanPtr plan_getrulebyoid 310,13145
static const char *query_getrulebyoid query_getrulebyoid311,13189
static SPIPlanPtr plan_getviewrule 312,13283
static const char *query_getviewrule query_getviewrule313,13326
bool		quote_all_identifiers 316,13464
#define only_marker(485,22401
pg_get_ruledef(495,22615
pg_get_ruledef_ext(513,22898
pg_get_ruledef_worker(532,23298
pg_get_viewdef(614,25088
pg_get_viewdef_ext(633,25406
pg_get_viewdef_wrap(652,25832
pg_get_viewdef_name(672,26264
pg_get_viewdef_name_ext(697,26843
pg_get_viewdef_worker(725,27610
pg_get_triggerdef(808,29513
pg_get_triggerdef_ext(822,29738
pg_get_triggerdef_worker(837,30011
pg_get_indexdef(1112,37506
pg_get_indexdef_ext(1132,37866
pg_get_indexdef_string(1159,38531
pg_get_indexdef_columns(1169,38769
pg_get_indexdef_worker(1188,39301
pg_get_statisticsobjdef(1506,47918
pg_get_statisticsobj_worker(1523,48238
pg_get_partkeydef(1646,51308
pg_get_partkeydef_columns(1661,51621
pg_get_partkeydef_worker(1674,51953
pg_get_partition_constraintdef(1838,56143
pg_get_partconstrdef_string(1870,56952
pg_get_constraintdef(1888,57427
pg_get_constraintdef_ext(1905,57744
pg_get_constraintdef_command(1926,58257
pg_get_constraintdef_worker(1935,58449
decompile_column_index_array(2340,69564
pg_get_expr(2382,70626
pg_get_expr_ext(2412,71330
pg_get_expr_worker(2437,71903
pg_get_userbyid(2472,72636
pg_get_serial_sequence(2510,73580
pg_get_functiondef(2604,76268
pg_get_function_arguments(2849,83053
pg_get_function_identity_arguments(2875,83687
pg_get_function_result(2900,84271
print_function_rettype(2930,84891
print_function_arguments(2968,86005
is_input_argument(3108,89518
print_function_trftypes(3120,89785
pg_get_function_arg_default(3147,90463
deparse_expression(3223,92268
deparse_expression_pretty(3250,93147
deparse_context_for(3283,94103
deparse_context_for_plan_tree(3328,95578
set_deparse_context_plan(3397,98148
select_rtable_names_for_explain(3420,98866
set_rtable_names(3449,99715
set_deparse_for_query(3594,103421
set_simple_column_names(3659,105658
has_dangerous_join_using(3700,107447
set_using_names(3766,109228
set_relation_column_names(3931,114671
set_join_column_names(4103,120339
colname_is_unique(4363,128650
make_colname_unique(4417,129909
expand_colnames_array_to(4456,130893
identify_join_columns(4480,131522
get_rtable_name(4548,133640
set_deparse_plan(4567,134346
push_child_plan(4643,137193
pop_child_plan(4660,137597
push_ancestor_plan(4690,138551
pop_ancestor_plan(4711,139109
make_ruledef(4727,139485
make_viewdef(4920,144343
get_query_def(4995,146173
get_values_def(5069,148055
get_with_clause(5112,148890
get_select_query_def(5192,150762
get_simple_values_rte(5323,154529
get_basic_select_query(5392,156608
get_target_list(5519,159696
get_setop_query(5650,163474
get_rule_sortgroupclause(5783,167054
get_rule_groupingset(5839,168736
get_rule_orderby(5899,170019
get_rule_windowclause(5957,171586
get_rule_windowspec(5989,172236
get_insert_query_def(6098,175765
get_update_query_def(6311,181485
get_update_query_targetlist_def(6366,182937
get_delete_query_def(6518,187095
get_utility_query_def(6569,188403
get_variable(6614,189970
get_special_variable(6841,197146
resolve_special_varno(6862,197738
get_name_for_var_field(6970,201284
find_param_referent(7365,212766
get_parameter(7500,216125
get_simple_binary_op_name(7566,217841
isSimpleNode(7592,218385
appendContextKeyword(7806,223990
removeStringInfoSpaces(7860,225644
get_rule_expr_paren(7879,226244
get_rule_expr(7911,227316
get_rule_expr_toplevel(9106,260513
get_rule_expr_funccall(9128,261392
looks_like_function(9151,262006
get_oper_expr(9178,262571
get_func_expr(9239,264178
get_agg_expr(9324,266343
get_agg_combine_expr(9431,269416
get_windowfunc_expr(9447,269803
get_coercion_expr(9524,271629
get_const_expr(9588,274036
get_const_collation(9718,277236
simple_quote_literal(9738,277689
get_sublink_expr(9765,278315
get_tablefunc(9890,281644
get_from_clause(9995,284333
get_from_clause_item(10089,286719
get_column_alias_list(10424,296429
get_from_clause_coldeflist(10464,297564
get_tablesample_def(10515,298724
get_opclass_name(10559,299914
generate_opclass_name(10597,300961
processIndirection(10619,301610
printSubscripts(10697,303768
quote_identifier(10727,304712
quote_qualified_identifier(10811,306570
get_relation_name(10831,307100
generate_relation_name(10851,307633
generate_qualified_relation_name(10911,308942
generate_function_name(10953,310299
generate_operator_name(11058,313501
generate_operator_clause(11139,316061
add_cast_to(11179,317423
generate_qualified_type_name(11210,318354
generate_collation_name(11243,319135
string_to_text(11275,319851
get_reloptions(11288,320055
flatten_reloptions(11344,321455
get_range_partbound_string(11377,322082

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/float.c,4127
int			extra_float_digits 42,1111
static bool degree_consts_set 45,1197
static float8 sin_30 46,1236
static float8 one_minus_cos_60 47,1262
static float8 asin_0_5 48,1298
static float8 acos_0_5 49,1326
static float8 atan_1_0 50,1354
static float8 tan_45 51,1382
static float8 cot_45 52,1408
float8		degree_c_thirty 60,1722
float8		degree_c_forty_five 61,1754
float8		degree_c_sixty 62,1790
float8		degree_c_one_half 63,1821
float8		degree_c_one 64,1854
static bool drandom_seed_set 67,1923
static unsigned short drandom_seed[drandom_seed68,1961
float_overflow_error(84,2465
float_underflow_error(92,2625
float_zero_divide_error(100,2787
is_infinite(116,3223
float4in(162,4569
float4out(306,8492
float4recv(326,8898
float4send(337,9092
float8in(351,9330
#define RETURN_ERROR(359,9550
float8in_internal_opt_error(391,10765
float8in_internal(537,14826
float8out(550,15132
float8out_internal(565,15456
float8recv(584,15806
float8send(595,16000
float4abs(619,16382
float4um(630,16550
float4up(640,16687
float4larger(648,16786
float4smaller(662,17015
float8abs(685,17390
float8um(697,17550
float8up(707,17687
float8larger(715,17786
float8smaller(729,18015
float4pl(756,18482
float4mi(765,18637
float4mul(774,18792
float4div(783,18949
float8pl(798,19259
float8mi(807,19414
float8mul(816,19569
float8div(825,19726
float4_cmp_internal(844,20041
float4eq(854,20172
float4ne(863,20325
float4lt(872,20478
float4le(881,20631
float4gt(890,20784
float4ge(899,20937
btfloat4cmp(908,21090
btfloat4fastcmp(917,21262
btfloat4sortsupport(926,21437
float8_cmp_internal(938,21673
float8eq(948,21804
float8ne(957,21957
float8lt(966,22110
float8le(975,22263
float8gt(984,22416
float8ge(993,22569
btfloat8cmp(1002,22722
btfloat8fastcmp(1011,22894
btfloat8sortsupport(1020,23069
btfloat48cmp(1029,23231
btfloat84cmp(1039,23446
in_range_float8_float8(1055,23850
in_range_float4_float8(1131,26149
ftod(1211,28404
dtof(1223,28573
dtoi4(1242,28921
dtoi2(1267,29511
i4tod(1292,30102
i2tod(1304,30270
ftoi4(1316,30438
ftoi2(1341,31028
i4tof(1366,31619
i2tof(1378,31787
dround(1396,32025
dceil(1408,32235
dfloor(1420,32443
dsign(1433,32710
dtrunc(1456,33148
dsqrt(1474,33389
dcbrt(1498,33876
dpow(1517,34204
dexp(1672,38164
dlog1(1718,39140
dlog10(1750,39859
dacos(1783,40686
dasin(1814,41422
datan(1845,42162
datan2(1871,42735
dcos(1897,43312
dcot(1938,44616
dsin(1966,45229
dtan(1993,45821
init_degree_constants(2047,48139
#define INIT_DEGREE_CONSTANTS(2059,48568
asind_q1(2076,49026
acosd_q1(2109,49841
dacosd(2136,50371
dasind(2173,51202
datand(2210,52026
datan2d(2242,52786
sind_0_to_30(2280,53896
cosd_0_to_60(2294,54218
sind_q1(2307,54493
cosd_q1(2327,54999
dcosd(2346,55450
dcotd(2401,56383
dsind(2467,57683
dtand(2523,58631
degrees(2589,59937
dpi(2601,60114
radians(2611,60234
dsinh(2626,60475
dcosh(2655,60982
dtanh(2680,61462
dasinh(2700,61805
dacosh(2717,62096
datanh(2742,62689
drandom(2777,63553
setseed(2814,64526
check_float8_array(2886,67571
float8_combine(2910,68364
float8_accum(3004,70460
float4_accum(3087,72450
float8_avg(3172,74474
float8_var_pop(3192,74848
float8_var_samp(3214,75308
float8_stddev_pop(3236,75779
float8_stddev_samp(3258,76249
float8_regr_accum(3301,77584
float8_regr_combine(3425,80861
float8_regr_sxx(3559,83986
float8_regr_syy(3580,84397
float8_regr_sxy(3601,84808
float8_regr_avgx(3622,85204
float8_regr_avgy(3641,85563
float8_covar_pop(3660,85922
float8_covar_samp(3679,86284
float8_corr(3698,86659
float8_regr_r2(3727,87264
float8_regr_slope(3760,87944
float8_regr_intercept(3787,88482
float48pl(3831,89393
float48mi(3840,89558
float48mul(3849,89723
float48div(3858,89890
float84pl(3873,90214
float84mi(3882,90379
float84mul(3891,90544
float84div(3900,90711
float48eq(3918,91038
float48ne(3927,91201
float48lt(3936,91364
float48le(3945,91527
float48gt(3954,91690
float48ge(3963,91853
float84eq(3975,92093
float84ne(3984,92256
float84lt(3993,92419
float84le(4002,92582
float84gt(4011,92745
float84ge(4020,92908
width_bucket_float8(4043,93808

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/uuid.c,587
	int64		input_count;28,625
	bool		estimating;29,683
	hyperLogLogState abbr_card;31,741
} uuid_sortsupport_state;32,798
uuid_in(42,1233
uuid_out(53,1436
string_to_uuid(91,2449
uuid_recv(141,3329
uuid_send(152,3575
uuid_internal_cmp(164,3848
uuid_lt(170,3973
uuid_le(179,4145
uuid_eq(188,4318
uuid_ge(197,4491
uuid_gt(206,4664
uuid_ne(215,4836
uuid_cmp(225,5048
uuid_sortsupport(237,5258
uuid_fast_cmp(273,6010
uuid_cmp_abbrev(285,6234
uuid_abbrev_abort(302,6611
uuid_abbrev_convert(368,8549
uuid_hash(405,9471
uuid_hash_extended(413,9590
gen_random_uuid(421,9747

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/rowtypes.c,1233
typedef struct ColumnIOData34,826
	Oid			column_type;36,856
	Oid			typiofunc;37,876
	Oid			typioparam;38,894
	bool		typisvarlena;39,913
	FmgrInfo	proc;40,934
} ColumnIOData;41,950
typedef struct RecordIOData43,967
	Oid			record_type;45,997
	int32		record_typmod;46,1017
	int			ncolumns;47,1040
	ColumnIOData columns[columns48,1057
} RecordIOData;49,1103
typedef struct ColumnCompareData54,1187
	TypeCacheEntry *typentry;typentry56,1222
} ColumnCompareData;57,1288
typedef struct RecordCompareData59,1310
	int			ncolumns;61,1345
	Oid			record1_type;62,1399
	int32		record1_typmod;63,1420
	Oid			record2_type;64,1444
	int32		record2_typmod;65,1465
	ColumnCompareData columns[columns66,1489
} RecordCompareData;67,1540
record_in(74,1630
record_out(302,7838
record_recv(453,11489
record_send(669,17990
record_cmp(805,21581
record_eq(1049,28314
record_ne(1265,34417
record_lt(1271,34507
record_gt(1277,34587
record_le(1283,34667
record_ge(1289,34748
btrecordcmp(1295,34829
record_image_cmp(1313,35282
record_image_eq(1559,41853
record_image_ne(1735,46757
record_image_lt(1741,46859
record_image_gt(1747,46951
record_image_le(1753,47043
record_image_ge(1759,47136
btrecordimagecmp(1765,47229

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/jsonb_gin.c,2306
typedef struct PathHashStack73,2644
	uint32		hash;75,2675
	struct PathHashStack *parent;parent76,2690
} PathHashStack;77,2721
typedef struct GinEntries80,2768
	Datum	   *buf;buf82,2796
	int			count;83,2812
	int			allocated;84,2826
} GinEntries;85,2844
typedef enum JsonPathGinNodeType87,2859
	JSP_GIN_OR,89,2894
	JSP_GIN_AND,90,2907
	JSP_GIN_ENTRY91,2921
} JsonPathGinNodeType;92,2936
typedef struct JsonPathGinNode JsonPathGinNode;94,2960
struct JsonPathGinNode97,3048
	JsonPathGinNodeType type;99,3073
		int			nargs;102,3110
		int			entryIndex;103,3159
		Datum		entryDatum;105,3266
	}			val;107,3378
	JsonPathGinNode *args[args108,3388
typedef struct JsonPathGinPathItem117,3662
	struct JsonPathGinPathItem *parent;parent119,3699
	Datum		keyName;120,3736
	JsonPathItemType type;121,3800
} JsonPathGinPathItem;122,3853
typedef union JsonPathGinPath125,3929
	JsonPathGinPathItem *items;items127,3961
	uint32		hash;128,4027
} JsonPathGinPath;129,4084
typedef struct JsonPathGinContext JsonPathGinContext;131,4104
typedef bool (*JsonPathGinAddPathItemFunc)JsonPathGinAddPathItemFunc134,4237
typedef List *(*JsonPathGinExtractNodesFunc)JsonPathGinExtractNodesFunc141,4474
struct JsonPathGinContext147,4687
	JsonPathGinAddPathItemFunc add_path_item;149,4715
	JsonPathGinExtractNodesFunc extract_nodes;150,4758
	bool		lax;151,4802
init_gin_entries(163,5141
add_gin_entry(172,5380
gin_compare_jsonb(203,5882
gin_extract_jsonb(229,6405
jsonb_ops__add_path_item(278,7565
jsonb_path_ops__add_path_item(323,8389
make_jsp_entry_node(353,8980
make_jsp_entry_node_scalar(364,9185
make_jsp_expr_node(370,9335
make_jsp_expr_node_args(382,9592
make_jsp_expr_node_binary(395,9852
jsonb_ops__extract_nodes(408,10153
jsonb_path_ops__extract_nodes(478,11950
extract_jsp_path_expr_nodes(504,12591
extract_jsp_path_expr(564,13757
extract_jsp_bool_expr(583,14388
emit_jsp_gin_entries(719,17805
extract_jsp_query(748,18381
execute_jsp_gin_node(799,19501
gin_extract_jsonb_query(848,20523
gin_consistent_jsonb(930,22871
gin_triconsistent_jsonb(1014,25085
gin_extract_jsonb_path(1091,27079
gin_extract_jsonb_query_path(1181,29432
gin_consistent_jsonb_path(1221,30544
gin_triconsistent_jsonb_path(1273,31934
make_text_key(1327,33411
make_scalar_key(1365,34377

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/bool.c,530
parse_bool(30,794
parse_bool_with_len(36,907
boolin(130,2649
boolout(164,3296
boolrecv(181,3633
boolsend(194,3863
booltext(211,4263
booleq(230,4642
boolne(239,4776
boollt(248,4910
boolgt(257,5043
boolle(266,5176
boolge(275,5310
booland_statefunc(294,5705
boolor_statefunc(306,6042
typedef struct BoolAggState311,6139
	int64		aggcount;313,6169
	int64		aggtrue;314,6231
} BoolAggState;315,6297
makeBoolAggState(318,6336
bool_accum(335,6711
bool_accum_inv(356,7072
bool_alltrue(377,7467
bool_anytrue(392,7820

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/datum.c,218
datumGetSize(64,2342
datumCopy(131,4068
datumTransfer(193,5784
datumIsEqual(222,6855
datum_image_eq(265,8014
btequalimage(345,10111
datumEstimateSpace(360,10490
datumSerialize(407,12313
datumRestore(469,13804

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/encode.c,879
struct pg_encoding32,939
	uint64		(*encode_len)encode_len34,960
	uint64		(*decode_len)decode_len35,1016
	uint64		(*encode)encode36,1072
	uint64		(*decode)decode37,1135
binary_encode(47,1304
binary_decode(95,2490
static const char hextbl[hextbl147,3686
static const int8 hexlookup[hexlookup149,3736
hex_encode(161,4294
get_hex(175,4529
hex_decode(193,4837
hex_enc_len(227,5368
hex_dec_len(233,5461
static const char _base64[_base64242,5558
static const int8 b64lookup[b64lookup245,5657
pg_base64_encode(257,6222
pg_base64_decode(304,6974
pg_base64_enc_len(375,8354
pg_base64_dec_len(382,8558
#define VAL(401,9113
#define DIG(402,9144
esc_encode(405,9191
esc_decode(444,9721
esc_enc_len(492,10610
esc_dec_len(513,10886
	const char *name;name561,11651
	struct pg_encoding enc;562,11670
}			enclist[enclist563,11695
pg_find_encoding(593,12058

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/tsquery_util.c,382
QT2QTN(24,520
QTNFree(63,1392
QTNodeCompare(96,1940
cmpQTN(152,3226
QTNSort(162,3462
QTNEq(182,3902
QTNTernary(200,4190
QTNBinary(249,5338
cntsize(291,6322
	QueryItem  *curitem;curitem312,6688
	char	   *operand;operand313,6710
	char	   *curoperand;curoperand314,6729
} QTN2QTState;315,6751
fillQT(322,6907
QTN2QT(362,7840
QTNCopy(395,8453
QTNClearFlags(433,9269

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/tsgistidx.c,1826
	int32		vl_len_;30,664
	int			siglen;31,728
} GistTsVectorOptions;32,768
#define SIGLEN_DEFAULT	34,792
#define SIGLEN_MAX	35,824
#define GET_SIGLEN(36,864
#define SIGLENBIT(40,1009
typedef char *BITVECP;BITVECP42,1063
#define LOOPBYTE(44,1087
#define GETBYTE(47,1147
#define GETBITBYTE(48,1221
#define CLRBIT(49,1275
#define SETBIT(50,1350
#define GETBIT(51,1425
#define HASHVAL(53,1499
#define HASH(54,1572
#define GETENTRY(56,1642
	int32		vl_len_;64,1781
	int32		flag;65,1845
	char		data[data66,1859
} SignTSVector;67,1895
#define ARRKEY	69,1912
#define SIGNKEY	70,1933
#define ALLISTRUE	71,1955
#define ISARRKEY(73,1979
#define ISSIGNKEY(74,2039
#define ISALLTRUE(75,2101
#define GTHDRSIZE	77,2166
#define CALCGTSIZE(78,2213
#define GETSIGN(80,2345
#define GETSIGLEN(81,2402
#define GETARR(82,2449
#define ARRNELEM(83,2504
gtsvectorin(88,2628
#define SINGOUTSTR	96,2790
#define ARROUTSTR	97,2839
#define EXTRALEN	98,2875
static int	outbuf_maxlen 100,2902
gtsvectorout(103,2939
compareint(127,3561
makesign(138,3743
gtsvector_alloc(150,3977
gtsvector_compress(166,4261
gtsvector_decompress(246,6201
	int32	   *arrb;arrb271,6816
	int32	   *arre;arre272,6833
} CHKVAL;273,6850
checkcondition_arr(279,6967
checkcondition_bit(311,7681
gtsvector_consistent(328,8020
unionkey(368,8993
gtsvector_union(396,9373
gtsvector_same(423,9959
sizebitvec(484,11048
hemdistsign(490,11136
hemdist(506,11408
gtsvector_penalty(527,11825
	bool		allistrue;565,12726
	BITVECP		sign;566,12744
} CACHESIGN;567,12760
fillcache(570,12786
#define WISH_F(581,13052
	OffsetNumber pos;584,13148
	int32		cost;585,13167
} SPLITCOST;586,13181
comparecost(589,13206
hemdistcache(602,13442
gtsvector_picksplit(618,13760
gtsvector_consistent_oldsig(800,18313
gtsvector_options(806,18408

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/lockfuncs.c,1445
const char *const LockTagTypeNames[LockTagTypeNames29,766
static const char *const PredicateLockTagTypeNames[PredicateLockTagTypeNames46,1115
	LockData   *lockData;lockData58,1377
	int			currIdx;59,1428
	PredicateLockData *predLockData;predLockData60,1474
	int			predLockIdx;61,1540
} PG_Lock_Status;62,1594
#define NUM_LOCK_STATUS_COLUMNS	65,1656
VXIDGetDatum(73,1845
pg_lock_status(91,2261
pg_blocking_pids(427,12379
pg_safe_snapshot_blocking_pids(537,15511
pg_isolation_test_session_is_blocked(582,16972
#define SET_LOCKTAG_INT64(658,19765
#define SET_LOCKTAG_INT32(664,19929
pg_advisory_lock_int8(671,20110
pg_advisory_xact_lock_int8(688,20410
pg_advisory_lock_shared_int8(704,20699
pg_advisory_xact_lock_shared_int8(721,21005
pg_try_advisory_lock_int8(739,21369
pg_try_advisory_xact_lock_int8(759,21798
pg_try_advisory_lock_shared_int8(778,22216
pg_try_advisory_xact_lock_shared_int8(798,22651
pg_advisory_unlock_int8(817,23056
pg_advisory_unlock_shared_int8(836,23411
pg_advisory_lock_int4(853,23709
pg_advisory_xact_lock_int4(871,24058
pg_advisory_lock_shared_int4(888,24396
pg_advisory_xact_lock_shared_int4(906,24751
pg_try_advisory_lock_int4(925,25164
pg_try_advisory_xact_lock_int4(946,25642
pg_try_advisory_lock_shared_int4(966,26109
pg_try_advisory_xact_lock_shared_int4(987,26593
pg_advisory_unlock_int4(1007,27047
pg_advisory_unlock_shared_int4(1027,27451
pg_advisory_unlock_all(1045,27777

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/regexp.c,1827
#define PG_GETARG_TEXT_PP_IF_EXISTS(41,1479
typedef struct pg_re_flags46,1629
	int			cflags;48,1658
	bool		glob;49,1720
} pg_re_flags;50,1778
typedef struct regexp_matches_ctx53,1861
	text	   *orig_str;orig_str55,1897
	int			nmatches;56,1958
	int			npatterns;57,2021
	int		   *match_locs;match_locs60,2221
	int			next_match;61,2276
	Datum	   *elems;elems63,2390
	bool	   *nulls;nulls64,2439
	pg_wchar   *wide_str;wide_str65,2487
	char	   *conv_buf;conv_buf66,2554
	int			conv_bufsiz;67,2610
} regexp_matches_ctx;68,2649
#define MAX_CACHED_RES	96,4159
typedef struct cached_re_str100,4254
	char	   *cre_pat;cre_pat102,4285
	int			cre_pat_len;103,4346
	int			cre_flags;104,4404
	Oid			cre_collation;105,4463
	regex_t		cre_re;106,4508
} cached_re_str;107,4566
static int	num_res 109,4584
static cached_re_str re_array[re_array110,4632
RE_compile_and_cache(137,5530
RE_wchar_execute(266,9161
RE_execute(309,10346
RE_compile_and_execute(343,11400
parse_re_flags(366,12025
nameregexeq(440,13887
nameregexne(454,14176
textregexeq(468,14471
textregexne(482,14770
nameicregexeq(503,15198
nameicregexne(517,15501
texticregexeq(531,15810
texticregexne(545,16123
textregexsubstr(564,16527
textregexreplace_noopt(623,18111
textregexreplace(640,18521
similar_escape_internal(667,19307
similar_to_escape_2(906,25377
similar_to_escape_1(922,25690
similar_escape(940,26133
regexp_match(966,26670
regexp_match_no_flags(1002,27826
regexp_matches(1012,27998
regexp_matches_no_flags(1061,29370
setup_regexp_matches(1084,30367
build_regexp_match_result(1285,35977
regexp_split_to_table(1341,37359
regexp_split_to_table_no_flags(1394,38808
regexp_split_to_array(1405,39041
regexp_split_to_array_no_flags(1444,40138
build_regexp_split_result(1456,40462
regexp_fixed_prefix(1499,41572

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/array_userfuncs.c,352
fetch_array_arg_replace_nulls(42,1252
array_append(101,2955
array_prepend(154,4296
array_cat(218,5850
array_agg_transfn(456,12143
array_agg_finalfn(502,13462
array_agg_array_transfn(537,14300
array_agg_array_finalfn(581,15592
array_position(614,16653
array_position_start(620,16736
array_position_common(633,17072
array_positions(784,20948

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/genfile.c,622
convert_and_check_filename(53,1545
read_binary_file(105,3086
#define MIN_READ_SIZE 157,4462
read_text_file(214,5979
pg_read_file(239,6506
pg_read_file_v2(286,7686
pg_read_binary_file(322,8488
pg_read_file_off_len(365,9550
pg_read_file_all(371,9633
pg_read_binary_file_off_len(377,9712
pg_read_binary_file_all(383,9806
pg_stat_file(392,9918
pg_stat_file_1arg(468,12133
pg_ls_dir(477,12266
pg_ls_dir_1arg(562,14663
pg_ls_dir_files(574,14940
pg_ls_logdir(663,17638
pg_ls_waldir(670,17799
pg_ls_tmpdir(679,17965
pg_ls_tmpdir_noargs(698,18440
pg_ls_tmpdir_1arg(708,18652
pg_ls_archive_statusdir(717,18831

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/tsquery_gist.c,380
#define GETENTRY(22,495
gtsquery_compress(26,573
gtsquery_consistent(52,1144
gtsquery_union(88,1987
gtsquery_same(106,2321
sizebitvec(118,2571
hemdist(130,2721
gtsquery_penalty(138,2822
	OffsetNumber pos;152,3175
	int32		cost;153,3194
} SPLITCOST;154,3208
comparecost(157,3233
#define WISH_F(165,3450
gtsquery_picksplit(168,3536
gtsquery_consistent_oldsig(274,6225

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/numutils.c,345
static const char DIGIT_TABLE[DIGIT_TABLE29,755
decimalLength32(45,1400
decimalLength64(64,1814
pg_atoi(102,3093
pg_strtoint16(187,5448
pg_strtoint32(263,7145
pg_itoa(338,8779
pg_ultoa_n(351,9109
pg_ltoa(416,10270
pg_ulltoa_n(436,10658
pg_lltoa(523,12426
pg_ultostr_zeropad(563,13414
pg_ultostr(603,14371
pg_strtouint64(621,14811

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/init/globals.c,2162
ProtocolVersion FrontendProtocol;28,686
volatile sig_atomic_t InterruptPending 30,721
volatile sig_atomic_t QueryCancelPending 31,769
volatile sig_atomic_t ProcDiePending 32,819
volatile sig_atomic_t ClientConnectionLost 33,865
volatile sig_atomic_t IdleInTransactionSessionTimeoutPending 34,917
volatile sig_atomic_t ProcSignalBarrierPending 35,987
volatile uint32 InterruptHoldoffCount 36,1043
volatile uint32 QueryCancelHoldoffCount 37,1086
volatile uint32 CritSectionCount 38,1131
int			MyProcPid;40,1170
pg_time_t	MyStartTime;41,1187
TimestampTz MyStartTimestamp;42,1210
struct Port *MyProcPort;MyProcPort43,1240
int32		MyCancelKey;44,1265
int			MyPMChildSlot;45,1285
struct Latch *MyLatch;MyLatch54,1653
char	   *DataDir DataDir62,1934
int			data_directory_mode 68,2116
char		OutputFileName[OutputFileName70,2164
char		my_exec_path[my_exec_path72,2226
char		pkglib_path[pkglib_path73,2290
char		postgres_exec_path[postgres_exec_path76,2374
BackendId	MyBackendId 81,2508
BackendId	ParallelLeaderBackendId 83,2551
Oid			MyDatabaseId 85,2606
Oid			MyDatabaseTableSpace 87,2640
char	   *DatabasePath DatabasePath93,2823
pid_t		PostmasterPid 95,2854
bool		IsPostmasterEnvironment 108,3455
bool		IsUnderPostmaster 109,3494
bool		IsBinaryUpgrade 110,3527
bool		IsBackgroundWorker 111,3558
bool		ExitOnAnyError 113,3593
int			DateStyle 115,3624
int			DateOrder 116,3657
int			IntervalStyle 117,3690
bool		enableFsync 119,3732
bool		allowSystemTableMods 120,3758
int			work_mem 121,3794
int			maintenance_work_mem 122,3817
int			max_parallel_maintenance_workers 123,3853
int			NBuffers 131,4082
int			MaxConnections 132,4105
int			max_worker_processes 133,4132
int			max_parallel_workers 134,4164
int			MaxBackends 135,4196
int			VacuumCostPageHit 137,4220
int			VacuumCostPageMiss 138,4281
int			VacuumCostPageDirty 139,4312
int			VacuumCostLimit 140,4344
double		VacuumCostDelay 141,4373
int64		VacuumPageHit 143,4403
int64		VacuumPageMiss 144,4429
int64		VacuumPageDirty 145,4456
int			VacuumCostBalance 147,4485
bool		VacuumCostActive 148,4545
double		vacuum_cleanup_index_scale_factor;150,4578

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/init/postinit.c,493
GetDatabaseTuple(96,3026
GetDatabaseTupleByOid(139,4019
PerformAuthentication(185,5062
CheckMyDatabase(317,9466
InitCommunication(440,13944
pg_split_opts(467,14661
InitializeMaxBackends(526,15924
BaseInit(548,16605
InitPostgres(590,17973
process_startup_options(1089,33586
process_settings(1154,35053
ShutdownPostgres(1188,36254
StatementTimeoutHandler(1205,36608
LockTimeoutHandler(1227,37045
IdleInTransactionSessionTimeoutHandler(1237,37207
ThereIsAtLeastOneRole(1248,37444

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/init/miscinit.c,2146
#define DIRECTORY_LOCK_FILE	56,1363
ProcessingMode Mode 58,1410
BackendType MyBackendType;60,1449
static List *lock_files lock_files63,1529
static Latch LocalLatchData;65,1561
bool		IgnoreSystemIndexes 77,2021
InitPostmasterChild(91,2372
InitStandaloneProcess(145,3928
SwitchToSharedLatch(169,4446
SwitchBackToLocalLatch(188,4891
GetBackendTypeDesc(202,5160
SetDatabasePath(261,6404
checkDataDir(274,6698
SetDataDir(367,9624
ChangeToDataDir(388,10138
static Oid	AuthenticatedUserId 428,11716
static Oid	SessionUserId 429,11761
static Oid	OuterUserId 430,11800
static Oid	CurrentUserId 431,11837
static bool AuthenticatedUserIsSuperuser 434,11952
static bool SessionUserIsSuperuser 435,12002
static int	SecurityRestrictionContext 437,12047
static bool SetRoleIsActive 440,12148
GetUserId(448,12321
GetOuterUserId(459,12486
SetOuterUserId(467,12585
GetSessionUserId(482,12877
SetSessionUserId(490,12982
GetAuthenticatedUserId(507,13376
GetUserIdAndSecContext(553,15694
SetUserIdAndSecContext(560,15828
InLocalUserIdChange(571,16038
InSecurityRestrictedOperation(580,16235
InNoForceRLSOperation(589,16433
GetUserIdAndContext(602,16790
SetUserIdAndContext(609,16925
has_rolreplication(629,17487
InitializeSessionUserId(647,17833
InitializeSessionUserIdStandalone(750,20900
SetSessionAuthorization(782,21989
GetCurrentRoleId(807,22730
SetCurrentRoleId(828,23323
GetUserNameFromId(863,24065
UnlinkLockFiles(905,25274
CreateLockFile(940,26387
CreateDataDirLockFile(1245,36175
CreateSocketLockFile(1254,36361
TouchSocketLockFiles(1272,36992
AddToDataDirLockFile(1301,37835
RecheckDataDirLockFile(1428,41200
ValidatePgVersion(1500,43054
char	   *session_preload_libraries_string session_preload_libraries_string1563,44888
char	   *shared_preload_libraries_string shared_preload_libraries_string1564,44938
char	   *local_preload_libraries_string local_preload_libraries_string1565,44987
bool		process_shared_preload_libraries_in_progress 1568,45100
load_libraries(1577,45356
process_shared_preload_libraries(1629,46614
process_session_preload_libraries(1642,46945
pg_bindtextdomain(1653,47192

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/error/assert.c,29
ExceptionalCondition(29,627

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/error/elog.c,3103
#undef _87,3522
#define _(88,3531
ErrorContextCallback *error_context_stack error_context_stack92,3584
sigjmp_buf *PG_exception_stack PG_exception_stack94,3635
emit_log_hook_type emit_log_hook 105,4031
int			Log_error_verbosity 108,4094
char	   *Log_line_prefix Log_line_prefix109,4139
int			Log_destination 110,4209
char	   *Log_destination_string Log_destination_string111,4257
bool		syslog_sequence_numbers 112,4297
bool		syslog_split_messages 113,4335
#define PG_SYSLOG_LIMIT 125,4794
static bool openlog_done 128,4830
static char *syslog_ident syslog_ident129,4864
static int	syslog_facility 130,4898
#define ERRORDATA_STACK_SIZE 142,5191
static ErrorData errordata[errordata144,5224
static int	errordata_stack_depth 146,5275
static int	recursion_depth 148,5351
static struct timeval saved_timeval;154,5538
static bool saved_timeval_set 155,5575
#define FORMATTED_TS_LEN 157,5615
static char formatted_start_time[formatted_start_time158,5644
static char formatted_log_time[formatted_log_time159,5696
#define CHECK_STACK_DEPTH(163,5809
static const char *err_gettext(err_gettext173,6009
err_gettext(210,7515
errstart(234,8110
matches_backtrace_functions(396,13150
errfinish(426,13781
errcode(610,18910
errcode_for_file_access(633,19480
errcode_for_socket_access(704,21361
#define EVALUATE_MESSAGE(743,22467
#define EVALUATE_MESSAGE_PLURAL(779,23632
errmsg(824,25008
errbacktrace(846,25543
set_backtrace(870,26141
errmsg_internal(911,27284
errmsg_plural(934,27844
errdetail(957,28406
errdetail_internal(984,29242
errdetail_log(1005,29726
errdetail_log_plural(1026,30268
errdetail_plural(1049,30868
errhint(1071,31393
errcontext_msg(1096,32027
set_errcontext_domain(1122,32862
errhidestmt(1142,33371
errhidecontext(1161,33841
errfunction(1182,34381
errposition(1199,34733
internalerrposition(1215,35067
internalerrquery(1235,35593
err_generic_string(1265,36399
set_errdata_field(1301,37362
geterrcode(1314,37722
geterrposition(1331,38136
getinternalerrposition(1348,38542
static int	save_format_errnumber;1377,39509
static const char *save_format_domain;save_format_domain1378,39543
pre_format_elog_string(1381,39588
format_elog_string(1390,39829
EmitErrorReport(1423,40717
CopyErrorData(1474,42572
FreeErrorData(1530,44360
FlushErrorState(1568,45375
ThrowErrorData(1593,46299
ReThrowError(1652,48300
pg_re_throw(1713,50185
GetErrorContextStack(1775,52334
DebugFileOpen(1842,54141
set_syslog_parameters(1893,55369
write_syslog(1926,56316
GetACPEncoding(2038,58917
write_eventlog(2052,59127
write_console(2141,61120
setup_formatted_log_time(2212,63005
setup_formatted_start_time(2244,63793
process_log_prefix_padding(2266,64445
log_line_prefix(2297,65033
appendCSVLiteral(2624,73841
write_csvlog(2648,74365
unpack_sql_state(2855,79954
send_message_to_server_log(2875,80196
write_pipe_chunks(3109,86783
err_sendstring(3153,88099
send_message_to_frontend(3165,88305
error_severity(3353,92842
append_with_tabs(3404,93661
write_stderr(3423,94032
is_log_level_output(3469,95087
trace_recovery(3505,96225

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/misc/help_config.c,304
	struct config_generic generic;32,823
	struct config_bool _bool;33,855
	struct config_real real;34,882
	struct config_int integer;35,908
	struct config_string string;36,936
	struct config_enum _enum;37,966
} mixedStruct;38,993
GucInfoMain(46,1132
displayStruct(75,1619
printMixedStruct(88,1965

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/misc/ps_status.c,944
bool		update_process_title 36,891
#define PS_USE_SETPROCTITLE_FAST67,1758
#define PS_USE_SETPROCTITLE69,1824
#define PS_USE_PSTAT71,1903
#define PS_USE_PS_STRINGS73,1955
#define PS_USE_CHANGE_ARGV75,2047
#define PS_USE_CLOBBER_ARGV77,2213
#define PS_USE_WIN3279,2262
#define PS_USE_NONE81,2289
#define PS_PADDING 87,2440
#define PS_PADDING 89,2470
#define PS_BUFFER_SIZE 97,2616
static char ps_buffer[ps_buffer98,2643
static const size_t ps_buffer_size 99,2682
static char *ps_buffer;ps_buffer101,2773
static size_t ps_buffer_size;102,2829
static size_t last_status_len;103,2894
static size_t ps_buffer_cur_len;106,3005
static size_t ps_buffer_fixed_size;108,3071
static int	save_argc;113,3223
static char **save_argv;save_argv114,3245
save_ps_display_args(131,3902
init_ps_display(258,6778
#define PROGRAM_NAME_PREFIX 312,7920
#define PROGRAM_NAME_PREFIX 314,7957
set_ps_display(349,8705
get_ps_display(430,10914

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/misc/tzparser.c,142
#define WHITESPACE 34,992
validateTzEntry(51,1476
splitTzLine(97,2576
addToArray(187,4884
ParseTzFile(275,7205
load_tzoffsets(437,11410

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/misc/pg_config.c,18
pg_config(25,621

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/misc/pg_rusage.c,46
pg_rusage_init(27,559
pg_rusage_show(40,891

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/misc/superuser.c,189
static Oid	last_roleid 35,1144
static bool last_roleid_is_super 36,1217
static bool roleid_callback_registered 37,1259
superuser(46,1468
superuser_arg(56,1594
RoleidCallback(103,2639

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/misc/queryenvironment.c,231
struct QueryEnvironment32,1079
	List	   *namedRelList;namedRelList34,1105
create_queryEnv(39,1153
get_visible_ENR_metadata(45,1275
register_ENR(69,1706
unregister_ENR(82,2077
get_ENR(96,2449
ENRMetadataGetTupDesc(125,3093

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/misc/sampling.c,352
BlockSampler_Init(39,1125
BlockSampler_HasMore(58,1613
BlockSampler_Next(64,1712
reservoir_init_selection_state(133,4257
reservoir_get_next_S(146,4651
sampler_random_init_state(233,6408
sampler_random_fract(242,6709
static ReservoirStateData oldrs;263,7274
anl_random_fract(266,7315
anl_init_selection_state(277,7561
anl_get_next_S(288,7864

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/misc/rls.c,91
check_enable_rls(52,1794
row_security_active(142,4683
row_security_active_name(153,4906

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/misc/timeout.c,1156
typedef struct timeout_params26,654
	TimeoutId	index;28,686
	volatile bool active;31,811
	volatile bool indicator;32,881
	timeout_handler_proc timeout_handler;35,1015
	TimestampTz start_time;37,1055
	TimestampTz fin_time;38,1124
} timeout_params;39,1191
static timeout_params all_timeouts[all_timeouts44,1285
static bool all_timeouts_initialized 45,1335
static volatile int num_active_timeouts 51,1534
static timeout_params *volatile active_timeouts[active_timeouts52,1579
static volatile sig_atomic_t alarm_enabled 63,2095
#define disable_alarm(65,2148
#define enable_alarm(66,2196
find_active_timeout(83,2835
insert_timeout(101,3109
remove_timeout_index(124,3611
enable_timeout(145,4062
schedule_alarm(191,5221
handle_sig_alarm(265,7857
InitializeTimeouts(346,9899
RegisterTimeout(380,10626
reschedule_timeouts(415,11654
enable_timeout_after(435,12119
enable_timeout_at(460,12812
enable_timeouts(483,13394
disable_timeout(532,14447
disable_timeouts(565,15412
disable_all_timeouts(598,16166
get_timeout_active(635,17037
get_timeout_indicator(648,17365
get_timeout_start_time(668,17896
get_timeout_finish_time(682,18320

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/misc/pg_controldata.c,113
pg_control_system(32,864
pg_control_checkpoint(80,2221
pg_control_recovery(211,6658
pg_control_init(264,8160

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/misc/guc.c,13318
#define PG_KRB_SRVTAB 106,2861
#define CONFIG_FILENAME 109,2894
#define HBA_FILENAME	110,2936
#define IDENT_FILENAME	111,2971
#define CONFIG_EXEC_PARAMS 114,3031
#define CONFIG_EXEC_PARAMS_NEW 115,3086
#define REALTYPE_PRECISION 122,3253
static int	GUC_check_errcode_value;141,3724
char	   *GUC_check_errmsg_string;GUC_check_errmsg_string144,3807
char	   *GUC_check_errdetail_string;GUC_check_errdetail_string145,3841
char	   *GUC_check_errhint_string;GUC_check_errhint_string146,3878
static void do_serialize(148,3914
static const struct config_enum_entry client_message_level_options[client_message_level_options254,9782
static const struct config_enum_entry server_message_level_options[server_message_level_options269,10172
static const struct config_enum_entry intervalstyle_options[intervalstyle_options286,10615
static const struct config_enum_entry log_error_verbosity_options[log_error_verbosity_options297,11000
static const struct config_enum_entry log_statement_options[log_statement_options307,11317
static const struct config_enum_entry isolation_level_options[isolation_level_options318,11630
static const struct config_enum_entry session_replication_role_options[session_replication_role_options326,11911
static const struct config_enum_entry syslog_facility_options[syslog_facility_options336,12302
static const struct config_enum_entry track_function_options[track_function_options352,12694
static const struct config_enum_entry xmlbinary_options[xmlbinary_options362,12988
static const struct config_enum_entry xmloption_options[xmloption_options371,13243
static const struct config_enum_entry backslash_quote_options[backslash_quote_options384,13643
static const struct config_enum_entry constraint_exclusion_options[constraint_exclusion_options401,14207
static const struct config_enum_entry synchronous_commit_options[synchronous_commit_options418,14841
static const struct config_enum_entry huge_pages_options[huge_pages_options437,15533
static const struct config_enum_entry force_parallel_mode_options[force_parallel_mode_options450,15902
static const struct config_enum_entry plan_cache_mode_options[plan_cache_mode_options463,16324
static const struct config_enum_entry password_encryption_options[password_encryption_options470,16588
const struct config_enum_entry ssl_protocol_versions_info[ssl_protocol_versions_info476,16774
static struct config_enum_entry shared_memory_options[shared_memory_options488,17156
bool		log_duration 513,17868
bool		Debug_print_plan 514,17896
bool		Debug_print_parse 515,17928
bool		Debug_print_rewritten 516,17961
bool		Debug_pretty_print 517,17998
bool		log_parser_stats 519,18032
bool		log_planner_stats 520,18064
bool		log_executor_stats 521,18097
bool		log_statement_stats 522,18131
bool		log_btree_build_stats 524,18227
char	   *event_source;event_source525,18264
bool		row_security;527,18288
bool		check_function_bodies 528,18308
bool		default_with_oids 534,18443
bool		session_auth_is_superuser;535,18476
int			log_min_error_statement 537,18510
int			log_min_messages 538,18549
int			client_min_messages 539,18583
int			log_min_duration_sample 540,18619
int			log_min_duration_statement 541,18655
int			log_parameter_max_length 542,18694
int			log_parameter_max_length_on_error 543,18731
int			log_temp_files 544,18776
double		log_statement_sample_rate 545,18803
double		log_xact_sample_rate 546,18844
int			trace_recovery_messages 547,18878
char	   *backtrace_functions;backtrace_functions548,18915
char	   *backtrace_symbol_list;backtrace_symbol_list549,18945
int			temp_file_limit 551,18978
int			num_temp_buffers 553,19007
char	   *cluster_name cluster_name555,19039
char	   *ConfigFileName;ConfigFileName556,19067
char	   *HbaFileName;HbaFileName557,19092
char	   *IdentFileName;IdentFileName558,19114
char	   *external_pid_file;external_pid_file559,19138
char	   *pgstat_temp_directory;pgstat_temp_directory561,19167
char	   *application_name;application_name563,19200
int			tcp_keepalives_idle;565,19228
int			tcp_keepalives_interval;566,19255
int			tcp_keepalives_count;567,19286
int			tcp_user_timeout;568,19314
int			ssl_renegotiation_limit;576,19630
int			huge_pages;582,19823
int			huge_page_size;583,19841
static char *syslog_ident_str;syslog_ident_str590,20062
static double phony_random_seed;591,20093
static char *client_encoding_string;client_encoding_string592,20126
static char *datestyle_string;datestyle_string593,20163
static char *locale_collate;locale_collate594,20194
static char *locale_ctype;locale_ctype595,20223
static char *server_encoding_string;server_encoding_string596,20250
static char *server_version_string;server_version_string597,20287
static int	server_version_num;598,20323
static char *timezone_string;timezone_string599,20354
static char *log_timezone_string;log_timezone_string600,20384
static char *timezone_abbreviations_string;timezone_abbreviations_string601,20418
static char *data_directory;data_directory602,20462
static char *session_authorization_string;session_authorization_string603,20491
static int	max_function_args;604,20534
static int	max_index_keys;605,20564
static int	max_identifier_length;606,20591
static int	block_size;607,20625
static int	segment_size;608,20648
static int	wal_block_size;609,20673
static bool data_checksums;610,20700
static bool integer_datetimes;611,20728
static bool assert_enabled;612,20759
static char *recovery_target_timeline_string;recovery_target_timeline_string613,20787
static char *recovery_target_string;recovery_target_string614,20833
static char *recovery_target_xid_string;recovery_target_xid_string615,20870
static char *recovery_target_name_string;recovery_target_name_string616,20911
static char *recovery_target_lsn_string;recovery_target_lsn_string617,20953
char	   *role_string;role_string621,21065
const char *const GucContext_Names[GucContext_Names629,21211
const char *const GucSource_Names[GucSource_Names648,21706
const char *const config_group_names[config_group_names672,22424
const char *const config_type_names[config_type_names788,26450
#define MAX_UNIT_LEN	815,27320
	char		unit[unit819,27409
	int			base_unit;821,27497
	double		multiplier;822,27535
} unit_conversion;823,27603
static const char *memory_units_hint memory_units_hint833,27895
static const unit_conversion memory_unit_conversion_table[memory_unit_conversion_table835,28030
static const char *time_units_hint time_units_hint870,29287
static const unit_conversion time_unit_conversion_table[time_unit_conversion_table872,29427
static struct config_bool ConfigureNamesBool[ConfigureNamesBool928,30882
static struct config_int ConfigureNamesInt[ConfigureNamesInt2056,57783
static struct config_real ConfigureNamesReal[ConfigureNamesReal3408,93643
static struct config_string ConfigureNamesString[ConfigureNamesString3677,100344
static struct config_enum ConfigureNamesEnum[ConfigureNamesEnum4446,118407
static const char *const map_old_guc_names[map_old_guc_names4790,127453
static struct config_generic **guc_variables;guc_variables4800,127657
static int	num_guc_variables;4803,127762
static int	size_guc_variables;4806,127815
static bool guc_dirty;4809,127848
static bool reporting_enabled;4811,127917
static int	GUCNestLevel 4813,127981
guc_malloc(4841,129276
guc_realloc(4857,129564
guc_strdup(4873,129892
string_field_used(4890,130184
set_string_field(4913,130746
extra_field_used(4929,131121
set_extra_field(4974,132156
set_stack_value(4994,132743
discard_stack_value(5028,133607
get_guc_variables(5052,134105
build_guc_variables(5064,134352
add_guc_variable(5151,136404
add_placeholder_variable(5189,137363
find_option(5237,138609
guc_var_compare(5286,139810
guc_name_compare(5298,140128
InitializeGUCOptions(5332,140899
InitializeGUCOptionsFromEnvironment(5388,142423
InitializeOneGUCOption(5434,143680
SelectConfigFiles(5554,147212
ResetAllOptions(5729,152544
push_old_value(5829,155045
AtStart_GUC(5910,157008
NewGUCNestLevel(5930,157682
AtEOXact_GUC(5944,158187
BeginReportingGUCOptions(6226,165902
ReportGUCOption(6254,166475
convert_to_base_unit(6281,167277
convert_int_from_base_unit(6339,168878
convert_real_from_base_unit(6381,169894
get_config_unit_name(6424,171063
parse_int(6481,172530
parse_real(6571,174886
config_enum_lookup_by_value(6633,176307
config_enum_lookup_by_name(6656,176884
config_enum_get_options(6682,177487
parse_and_validate_value(6740,179270
set_config_option(6937,185020
#define newval 7187,193005
#undef newval7270,195113
#define newval 7277,195215
#undef newval7360,197319
#define newval 7367,197424
#undef newval7450,199532
#define newval 7457,199643
#undef newval7563,202420
#define newval 7570,202525
#undef newval7653,204633
set_config_sourcefile(7668,204856
SetConfigOption(7702,205826
GetConfigOption(7726,206670
GetConfigOptionResetString(7782,208245
GetConfigOptionFlags(7831,209612
flatten_set_variable_args(7861,210347
write_auto_conf_file(7983,213329
replace_auto_config_value(8051,215134
AlterSystemSetConfigFile(8121,216780
ExecSetVariableStmt(8335,222249
ExtractSetVariableArgs(8459,226164
SetPGVariable(8479,226669
set_config_by_name(8496,227128
init_custom_variable(8547,228400
define_custom_variable(8607,230376
reapply_stacked_values(8707,233665
DefineCustomBoolVariable(8788,236079
DefineCustomIntVariable(8814,236775
DefineCustomRealVariable(8844,237537
DefineCustomStringVariable(8874,238329
DefineCustomEnumVariable(8899,239036
EmitWarningsOnPlaceholders(8927,239803
GetPGVariable(8953,240336
GetPGVariableResultDesc(8962,240511
ShowGUCConfigOption(8997,241355
ShowAllGUCConfig(9025,242031
get_explain_guc_options(9095,243827
GetConfigOptionByName(9188,245959
GetConfigOptionByNum(9225,246840
GetNumConfigOptions(9453,251623
show_config_by_name(9463,251777
show_config_by_name_missing_ok(9481,252239
#define NUM_PG_SETTINGS_ATTS	9502,252738
show_all_settings(9505,252777
show_all_file_settings(9639,256870
#define NUM_PG_FILE_SETTINGS_ATTS 9641,256913
_ShowOption(9748,260110
write_one_nondefault_variable(9868,262628
write_nondefault_variables(9935,263903
read_string_with_null(9986,264881
read_nondefault_variables(10018,265395
can_skip_gucvar(10109,268460
estimate_variable_size(10123,268825
EstimateGUCStateSpace(10221,271162
do_serialize(10244,271730
do_serialize_binary(10274,272426
serialize_variable(10289,272788
SerializeGUCState(10363,274524
read_gucstate(10390,275362
read_gucstate_binary(10413,275898
guc_restore_error_context_callback(10427,276241
RestoreGUCState(10443,276667
ParseLongOption(10517,279040
ProcessGUCArray(10555,279800
GUCArrayAdd(10613,280935
GUCArrayDelete(10693,282751
GUCArrayReset(10765,284392
validate_option_array_item(10839,286119
GUC_check_errcode(10916,288538
call_bool_check_hook(10929,288822
call_int_check_hook(10963,289805
call_real_check_hook(10997,290778
call_string_check_hook(11031,291757
call_enum_check_hook(11065,292760
check_wal_consistency_checking(11105,293843
assign_wal_consistency_checking(11179,295517
check_log_destination(11185,295643
assign_log_destination(11242,296907
assign_syslog_facility(11248,297017
assign_syslog_ident(11258,297244
assign_session_replication_role(11268,297464
check_temp_buffers(11279,297703
check_bonjour(11293,298070
check_ssl(11306,298286
check_stage_log_stats(11319,298490
check_log_stats(11330,298736
check_canonical_path(11344,299101
check_timezone_abbreviations(11357,299427
assign_timezone_abbreviations(11387,300434
pg_timezone_abbrev_initialize(11407,301071
show_archive_command(11414,301231
assign_tcp_keepalives_idle(11423,301361
show_tcp_keepalives_idle(11440,302020
assign_tcp_keepalives_interval(11450,302227
show_tcp_keepalives_interval(11457,302412
assign_tcp_keepalives_count(11467,302627
show_tcp_keepalives_count(11474,302806
assign_tcp_user_timeout(11484,303015
show_tcp_user_timeout(11491,303189
check_maxconnections(11501,303393
check_autovacuum_max_workers(11510,303607
check_max_wal_senders(11519,303821
check_autovacuum_work_mem(11528,304035
check_max_worker_processes(11551,304536
check_effective_io_concurrency(11560,304750
check_maintenance_io_concurrency(11573,305059
check_huge_page_size(11586,305372
assign_pgstat_temp_directory(11600,305709
check_application_name(11629,306524
assign_application_name(11638,306712
check_cluster_name(11645,306858
show_unix_socket_permissions(11654,307046
show_log_file_mode(11663,307204
show_data_directory_mode(11672,307342
check_backtrace_functions(11689,307857
assign_backtrace_functions(11745,309090
check_recovery_target_timeline(11751,309208
assign_recovery_target_timeline(11781,309944
pg_attribute_noreturn(11803,310911
check_recovery_target(11813,311252
assign_recovery_target(11824,311509
check_recovery_target_xid(11837,311849
assign_recovery_target_xid(11857,312281
check_recovery_target_time(11880,313027
assign_recovery_target_time(11930,314150
check_recovery_target_name(11943,314485
assign_recovery_target_name(11956,314803
check_recovery_target_lsn(11972,315175
assign_recovery_target_lsn(11992,315585
check_primary_slot_name(12008,315970
check_default_with_oids(12018,316183

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/fmgrtab.c,209
const FmgrBuiltin fmgr_builtins[fmgr_builtins27,673
const int fmgr_nbuiltins 2918,182620
const Oid fmgr_last_builtin_oid 2920,182695
const uint16 fmgr_builtin_oid_index[fmgr_builtin_oid_index2922,182736

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_relation.c,1947
	int			distance;50,1349
	RangeTblEntry *rfirst;rfirst51,1407
	AttrNumber	first;52,1451
	RangeTblEntry *rsecond;rsecond53,1503
	AttrNumber	second;54,1549
} FuzzyAttrMatchState;55,1609
#define MAX_FUZZY_DISTANCE	57,1633
refnameNamespaceItem(108,3861
scanNameSpaceForRefname(179,6066
scanNameSpaceForRelid(220,7212
scanNameSpaceForCTE(262,8421
isFutureCTE(293,9099
scanNameSpaceForENR(315,9547
searchRangeTableForRel(336,10412
checkNameSpaceConflicts(414,12821
check_lateral_ref_ok(462,14328
GetNSItemByRangeTablePosn(489,15265
GetRTEByRangeTablePosn(516,15881
GetCTEForRTE(536,16341
updateFuzzyAttrMatchState(566,17106
scanNSItemForColumn(667,20204
scanRTEForColumn(767,23572
colNameToVar(849,25987
searchRangeTableForCol(924,28582
markRTEForSelectPriv(1003,30904
markVarForSelectPriv(1084,33164
buildRelationAliases(1111,34031
chooseScalarFunctionAlias(1188,36120
buildNSItemFromTupleDesc(1227,37118
buildNSItemFromLists(1283,38881
parserOpenTable(1345,40868
addRangeTableEntry(1397,42695
addRangeTableEntryForRelation(1497,45917
addRangeTableEntryForSubquery(1567,47980
addRangeTableEntryForFunction(1663,50603
addRangeTableEntryForTableFunc(1939,58570
addRangeTableEntryForValues(2011,60628
addRangeTableEntryForJoin(2100,63160
addRangeTableEntryForCTE(2195,65823
addRangeTableEntryForENR(2313,69318
isLockedRefname(2422,72462
addNSItemToQuery(2466,73430
expandRTE(2506,74867
expandRelation(2858,83731
expandTupleDesc(2883,84634
expandNSItemVars(2964,86614
expandNSItemAttrs(3019,87942
get_rte_attribute_name(3071,89334
get_rte_attribute_is_dropped(3109,90495
get_tle_by_resno(3253,94533
get_parse_rowmark(3273,94898
attnameAttNum(3297,95401
specialAttNum(3328,96097
attnumAttName(3347,96523
attnumTypeId(3369,97060
attnumCollationId(3389,97522
errorMissingRTE(3408,97980
errorMissingColumn(3469,100013
isQueryUsingTempRelation(3541,102598
isQueryUsingTempRelation_walker(3547,102717

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_expr.c,2061
bool		operator_precedence_warning 42,1126
bool		Transform_null_equals 43,1169
#define PREC_GROUP_POSTFIX_IS	49,1322
#define PREC_GROUP_INFIX_IS	50,1393
#define PREC_GROUP_LESS	51,1463
#define PREC_GROUP_EQUAL	52,1501
#define PREC_GROUP_LESS_EQUAL	53,1537
#define PREC_GROUP_LIKE	54,1584
#define PREC_GROUP_BETWEEN	55,1637
#define PREC_GROUP_IN	56,1681
#define PREC_GROUP_NOT_LIKE	57,1716
#define PREC_GROUP_NOT_BETWEEN	58,1776
#define PREC_GROUP_NOT_IN	59,1828
#define PREC_GROUP_POSTFIX_OP	60,1871
#define PREC_GROUP_INFIX_OP	61,1936
#define PREC_GROUP_PREFIX_OP	62,1998
static const int oldprecedence_l[oldprecedence_l83,2576
static const int oldprecedence_r[oldprecedence_r86,2665
transformExpr(145,5835
transformExprRecurse(163,6247
unknown_attribute(388,11864
transformIndirection(434,13267
transformColumnRef(508,15173
		CRERR_NO_COLUMN,518,15388
		CRERR_NO_RTE,519,15407
		CRERR_WRONG_DB,520,15423
		CRERR_TOO_MANY521,15441
transformParamRef(890,26033
exprIsNullConstant(914,26656
transformAExprOp(927,26842
transformAExprOpAny(1028,29650
transformAExprOpAll(1051,30185
transformAExprDistinct(1074,30721
transformAExprNullIf(1130,32203
transformAExprOf(1176,33442
transformAExprIn(1217,34356
transformAExprBetween(1377,38584
transformBoolExpr(1487,42302
transformFuncCall(1523,42971
transformMultiAssignRef(1568,44137
transformCaseExpr(1715,48982
transformSubLink(1855,52907
transformArrayExpr(2105,60167
transformRowExpr(2263,64506
transformCoalesceExpr(2293,65270
transformMinMaxExpr(2342,66633
transformSQLValueFunction(2381,67572
transformXmlExpr(2434,68883
transformXmlSerialize(2568,72394
transformBooleanTest(2611,73710
transformCurrentOfExpr(2656,74676
transformWholeRowRef(2708,76268
transformTypeCast(2740,77309
transformCollateClause(2833,80032
make_row_comparison_op(2873,81292
make_row_distinct_op(3075,86892
make_distinct_op(3119,87886
make_nulltest_from_distinct(3152,88839
operator_precedence_group(3178,89669
emit_precedence_warnings(3421,95757
ParseExprKindName(3480,97595

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_oper.c,925
#define MAX_CACHED_PATH_LEN	49,1570
typedef struct OprCacheKey51,1603
	char		oprname[oprname53,1632
	Oid			left_arg;54,1661
	Oid			right_arg;55,1719
	Oid			search_path[search_path56,1780
} OprCacheKey;57,1821
typedef struct OprCacheEntry59,1837
	OprCacheKey key;62,1909
	Oid			opr_oid;64,1928
} OprCacheEntry;65,1980
LookupOperName(102,3317
LookupOperWithArgs(140,4155
get_sort_group_operators(187,5673
oprid(245,7272
oprfuncid(252,7414
binary_oper_exact(269,7912
oper_select_candidate(319,9156
oper(377,10780
compatible_oper(457,12748
compatible_oper_opid(494,13817
right_oper(525,14764
left_oper(604,16877
op_signature_string(688,18948
op_error(709,19437
make_op(747,20866
make_scalar_array_op(867,23950
static HTAB *OprCacheHash OprCacheHash1019,29072
make_oper_cache_key(1033,29421
find_oper_cache_entry(1077,30566
make_oper_cache_entry(1117,31548
InvalidateOprCacheCallBack(1133,31880

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parser.c,139
raw_parser(42,1257
base_yylex(93,2894
hexval(283,8000
check_unicode_value(297,8304
check_uescapechar(307,8566
str_udeescape(327,9008

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/analyze.c,1112
post_parse_analyze_hook_type post_parse_analyze_hook 51,1802
parse_analyze(100,4137
parse_analyze_varparams(134,4938
parse_sub_analyze(164,5627
transformTopLevelStmt(191,6304
transformOptionalSelectInto(215,7054
transformStmt(254,8038
analyze_requires_snapshot(357,10428
transformDeleteStmt(397,11101
transformInsertStmt(467,13138
transformInsertRow(885,27229
transformOnConflictClause(984,30162
BuildOnConflictExcludedTargetlist(1078,33072
count_rowexpr_columns(1148,35053
transformSelectStmt(1190,36033
transformValuesClause(1331,40406
transformSetOperationStmt(1567,47254
transformSetOperationTree(1829,56196
determineRecursiveColTypes(2175,67373
transformUpdateStmt(2229,68759
transformUpdateTargetList(2293,70571
fill_extraUpdatedCols(2368,72866
transformReturningList(2398,73684
transformDeclareCursorStmt(2455,75516
transformExplainStmt(2541,78595
transformCreateTableAsStmt(2565,79202
transformCallStmt(2642,81792
LCS_asString(2681,82633
CheckSelectLocking(2706,83157
transformLockingClause(2770,85371
applyLockingClause(2944,90801
test_raw_expression_coverage(3004,92964

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_func.c,538
	FUNCLOOKUP_NOSUCHFUNC,41,1092
	FUNCLOOKUP_AMBIGUOUS42,1116
} FuncLookupError;43,1138
ParseFuncOrColumn(88,3094
func_match_argtypes(910,31064
func_select_candidate(995,34421
func_get_detail(1382,46186
unify_hypothetical_args(1730,56709
make_fn_arguments(1810,59307
FuncNameAsType(1866,60645
ParseComplexProjection(1897,61460
funcname_signature_string(1978,64121
func_signature_string(2015,64929
LookupFuncNameInternal(2034,65522
LookupFuncName(2103,67423
LookupFuncWithArgs(2163,69189
check_srf_call_placement(2382,75858

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_collate.c,708
	COLLATE_NONE,58,2353
	COLLATE_IMPLICIT,59,2419
	COLLATE_CONFLICT,60,2479
	COLLATE_EXPLICIT	61,2547
} CollateStrength;62,2606
	ParseState *pstate;pstate66,2643
	Oid			collation;67,2706
	CollateStrength strength;68,2764
	int			location;69,2834
	Oid			collation2;71,2967
	int			location2;72,3022
} assign_collations_context;73,3084
assign_query_collations(101,4135
assign_query_collations_walker(126,5034
assign_list_collations(155,5730
assign_expr_collations(177,6289
select_common_collation(208,7280
assign_collations_walker(255,8818
merge_collation_state(756,23938
assign_aggregate_collations(857,27156
assign_ordered_set_collations(895,28703
assign_hypothetical_collations(931,30000

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_param.c,608
typedef struct FixedParamState36,1024
	Oid		   *paramTypes;paramTypes38,1057
	int			numParams;39,1115
} FixedParamState;40,1164
typedef struct VarParamState48,1448
	Oid		  **paramTypes;paramTypes50,1479
	int		   *numParams;numParams51,1537
} VarParamState;52,1589
parse_fixed_parameters(67,2139
parse_variable_parameters(83,2584
fixed_paramref_hook(99,3037
variable_paramref_hook(131,3981
variable_coerce_param_hook(181,5479
check_variable_parameters(263,8104
check_parameter_resolution_walker(281,8734
query_contains_extern_params(325,10013
query_contains_extern_params_walker(333,10169

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_type.c,680
LookupTypeName(38,923
LookupTypeNameExtended(73,2364
LookupTypeNameOid(232,6824
typenameType(264,7650
typenameTypeId(291,8437
typenameTypeIdAndMod(310,8869
typenameTypeMod(332,9500
appendTypeNameToBuffer(437,12517
TypeNameToString(476,13435
TypeNameListToString(490,13706
LookupCollation(513,14143
GetColumnDefCollation(538,14717
typeidType(576,15767
typeTypeId(588,16025
typeLen(597,16265
typeByVal(607,16432
typeTypeName(617,16599
typeTypeRelid(628,16866
typeTypeCollation(638,17060
stringTypeDatum(652,17426
typeidTypeRelid(666,17833
typeOrDomainTypeRelid(687,18439
pts_error_callback(717,19151
typeStringToTypeName(738,19773
parseTypeString(832,22344

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/scansup.c,141
scanstr(35,836
downcase_truncate_identifier(130,2756
downcase_identifier(139,2944
truncate_identifier(186,4338
scanner_isspace(210,5012

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_cte.c,989
	RECURSION_OK,29,756
	RECURSION_NONRECURSIVETERM,30,771
	RECURSION_SUBLINK,31,832
	RECURSION_OUTERJOIN,32,877
	RECURSION_INTERSECT,33,944
	RECURSION_EXCEPT	34,1000
} RecursionContext;35,1050
static const char *const recursion_errormsgs[recursion_errormsgs38,1142
typedef struct CteItem59,2089
	CommonTableExpr *cte;cte61,2114
	int			id;62,2163
	Bitmapset  *depends_on;depends_on63,2214
} CteItem;64,2284
typedef struct CteState67,2362
	ParseState *pstate;pstate70,2409
	CteItem    *items;items71,2457
	int			numitems;72,2514
	int			curitem;74,2594
	List	   *innerwiths;innerwiths75,2656
	int			selfrefcount;77,2779
	RecursionContext context;78,2841
} CteState;79,2912
transformWithClause(105,3827
analyzeCTE(237,7593
analyzeCTETargetList(352,11829
makeDependencyGraph(429,14355
makeDependencyGraphWalker(451,14851
TopologicalSort(579,18163
checkWellFormedRecursion(631,19303
checkWellFormedRecursionWalker(730,22685
checkWellFormedSelectStmt(910,27848

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_agg.c,1369
	ParseState *pstate;pstate35,918
	int			min_varlevel;36,939
	int			min_agglevel;37,960
	int			sublevels_up;38,981
} check_agg_arguments_context;39,1002
	ParseState *pstate;pstate43,1051
	Query	   *qry;qry44,1072
	bool		hasJoinRTEs;45,1088
	List	   *groupClauses;groupClauses46,1108
	List	   *groupClauseCommonVars;groupClauseCommonVars47,1132
	bool		have_non_var_grouping;48,1165
	List	  **func_grouped_rels;func_grouped_rels49,1195
	int			sublevels_up;50,1224
	bool		in_agg_direct_args;51,1245
} check_ungrouped_columns_context;52,1272
transformAggregateCall(102,3608
transformGroupingFunc(247,7626
check_agglevels_and_constraints(286,8698
check_agg_arguments(606,17920
check_agg_arguments_walker(694,20655
transformWindowFuncCall(798,23891
parseCheckAggregates(1042,31402
check_ungrouped_columns(1239,37625
check_ungrouped_columns_walker(1259,38301
finalize_grouping_exprs(1447,44617
finalize_grouping_exprs_walker(1466,45185
expand_groupingset_node(1621,49053
cmp_list_len_asc(1723,51072
expand_grouping_sets(1739,51517
get_aggregate_argtypes(1819,53437
resolve_aggregate_transtype(1845,54192
build_aggregate_transfn_expr(1900,56170
build_aggregate_combinefn_expr(1961,57637
build_aggregate_serialfn_expr(1990,58372
build_aggregate_deserialfn_expr(2013,58909
build_aggregate_finalfn_expr(2037,59540
make_agg_arg(2077,60684

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_utilcmd.c,2069
	ParseState *pstate;pstate78,2562
	const char *stmtType;stmtType79,2612
	RangeVar   *relation;relation80,2684
	Relation	rel;81,2733
	List	   *inhRelations;inhRelations82,2784
	bool		isforeign;83,2840
	bool		isalter;84,2900
	List	   *columns;columns85,2955
	List	   *ckconstraints;ckconstraints86,2997
	List	   *fkconstraints;fkconstraints87,3046
	List	   *ixconstraints;ixconstraints88,3101
	List	   *inh_indexes;inh_indexes89,3159
	List	   *extstats;extstats90,3226
	List	   *blist;blist91,3280
	List	   *alist;alist93,3372
	IndexStmt  *pkey;pkey95,3462
	bool		ispartitioned;96,3515
	PartitionBoundSpec *partbound;partbound97,3572
	bool		ofType;98,3633
} CreateStmtContext;99,3695
	const char *stmtType;stmtType104,3802
	char	   *schemaname;schemaname105,3866
	RoleSpec   *authrole;authrole106,3910
	List	   *sequences;sequences107,3956
	List	   *tables;tables108,4006
	List	   *views;views109,4051
	List	   *indexes;indexes110,4094
	List	   *triggers;triggers111,4139
	List	   *grants;grants112,4187
} CreateSchemaStmtContext;113,4225
transformCreateStmt(165,6571
generateSerialExtraStmts(349,11592
transformColumnDefinition(509,16792
transformTableConstraint(844,27199
transformTableLikeClause(924,29610
transformOfType(1304,40866
generateClonedIndexStmt(1367,42723
generateClonedExtStatsStmt(1726,53377
get_collation(1808,55723
get_opclass(1842,56728
transformIndexConstraints(1874,57636
transformIndexConstraint(1994,61126
transformExtendedStatistics(2528,78174
transformCheckConstraints(2543,78646
transformFKConstraints(2572,79293
transformIndexStmt(2643,81458
transformRuleStmt(2750,84417
transformAlterTableStmt(3061,94932
transformConstraintAttrs(3428,104847
#define SUPPORTS_ATTRS(3435,105041
transformColumnType(3543,108553
transformCreateSchemaStmt(3596,110387
setSchemaName(3701,112753
transformPartitionCmd(3721,113358
transformPartitionBound(3774,114904
transformPartitionRangeBounds(3928,119658
validateInfiniteBounds(4045,122591
transformPartitionBoundValue(4084,123537

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_enr.c,57
name_matches_visible_ENR(20,512
get_visible_ENR(26,687

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_clause.c,1387
transformFromClause(114,4407
setTargetTable(178,6661
extractRemainingColumns(253,9134
transformJoinUsingClause(304,10690
transformJoinOnClause(364,12631
transformTableEntry(394,13523
transformRangeSubselect(404,13795
transformRangeFunction(468,15706
transformRangeTableFunc(690,23233
transformRangeTableSample(908,29275
getNSItemForSpecialRelationTypes(1011,32737
transformFromClauseItem(1054,34222
buildVarFromNSColumn(1540,48854
buildMergedJoinVar(1562,49403
setNamespaceColumnVisibility(1681,52647
setNamespaceLateralState(1698,52995
transformWhereClause(1720,53503
transformLimitClause(1747,54132
checkExprIsVarFree(1791,55716
checkTargetlistEntrySQL92(1816,56473
findTargetlistEntrySQL92(1872,58557
findTargetlistEntrySQL99(2039,64506
flatten_grouping_sets(2125,67692
transformGroupClauseExpr(2234,70478
transformGroupClauseList(2342,73867
transformGroupingSet(2395,75299
transformGroupClause(2499,78740
transformSortClause(2599,81327
transformWindowDefinitions(2632,82043
transformDistinctClause(2852,89234
transformDistinctOnClause(2936,92240
get_matching_location(3043,95984
resolve_unique_index_expr(3068,96697
transformOnConflictArbiter(3164,99769
addTargetToSortList(3272,103501
addTargetToGroupList(3415,107710
assignSortGroupRef(3470,109217
targetIsInSortList(3511,110651
findWindowClause(3538,111231
transformFrameOffset(3565,111988

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_target.c,742
transformTargetEntry(87,3086
transformTargetList(133,4276
transformExpressionList(230,6959
resolveTargetListUnknowns(301,8728
markTargetListOrigins(331,9452
markTargetListOrigin(356,10195
transformAssignedExpr(450,13283
updateTargetListEntry(616,18212
transformAssignmentIndirection(676,20488
transformAssignmentSubscripts(890,26576
checkInsertTargets(984,29244
ExpandColumnRefStar(1089,32100
			CRSERR_NO_RTE,1130,33392
			CRSERR_WRONG_DB,1131,33410
			CRSERR_TOO_MANY1132,33430
ExpandAllTables(1262,37117
ExpandIndirectionStar(1313,38630
ExpandSingleTable(1340,39494
ExpandRowReference(1383,40507
expandRecordVariable(1478,43595
FigureColname(1658,48864
FigureIndexColname(1677,49265
FigureColnameInternal(1697,49729

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_coerce.c,892
coerce_to_target_type(77,2725
coerce_type(155,5490
can_coerce_type(546,18462
coerce_to_domain(666,21506
coerce_type_typmod(743,24519
hide_coercion_node(785,25730
build_coercion_expression(813,26782
coerce_record_to_complex(986,31672
coerce_to_boolean(1135,35811
coerce_to_specific_type_typmod(1182,37145
coerce_to_specific_type(1231,38558
parser_coercion_errposition(1251,39204
select_common_type(1277,40095
select_common_type_from_oids(1409,44051
coerce_to_common_type(1503,46412
check_generic_type_consistency(1579,49948
enforce_generic_type_consistency(1881,60999
check_valid_polymorphic_signature(2417,78091
check_valid_internal_signature(2476,80299
TypeCategory(2500,80847
IsPreferredType(2519,81326
IsBinaryCoercible(2554,82692
find_coercion_pathway(2651,85778
find_typmod_coercion_function(2806,90787
is_complex_array(2856,91889
typeIsOfTypedTable(2870,92256

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/parse_node.c,291
make_parsestate(43,1106
free_parsestate(76,2090
parser_errposition(110,3224
setup_parser_errposition_callback(144,4349
cancel_parser_errposition_callback(160,4841
pcb_error_callback(174,5305
transformContainerType(195,5958
transformContainerSubscripts(276,9420
make_const(455,14836

/home/seinoyu/pgsql/master/postgresql/src/backend/partitioning/partprune.c,2033
typedef struct PartClauseInfo63,2349
	int			keyno;65,2381
	Oid			opno;66,2445
	bool		op_is_ne;67,2507
	Expr	   *expr;expr68,2566
	Oid			cmpfn;69,2628
	int			op_strategy;71,2716
} PartClauseInfo;72,2782
typedef enum PartClauseMatchStatus78,2893
	PARTCLAUSE_NOMATCH,80,2930
	PARTCLAUSE_MATCH_CLAUSE,81,2951
	PARTCLAUSE_MATCH_NULLNESS,82,2977
	PARTCLAUSE_MATCH_STEPS,83,3005
	PARTCLAUSE_MATCH_CONTRADICT,84,3030
	PARTCLAUSE_UNSUPPORTED85,3060
} PartClauseMatchStatus;86,3084
typedef enum PartClauseTarget92,3211
	PARTTARGET_PLANNER,94,3243
	PARTTARGET_INITIAL,95,3302
	PARTTARGET_EXEC	96,3369
} PartClauseTarget;97,3436
typedef struct GeneratePruningStepsContext111,3980
	RelOptInfo *rel;rel114,4083
	PartClauseTarget target;115,4134
	List	   *steps;steps117,4222
	bool		has_mutable_op;118,4275
	bool		has_mutable_arg;119,4341
	bool		has_exec_param;121,4455
	bool		contradictory;122,4522
	int			next_step_id;124,4611
} GeneratePruningStepsContext;125,4632
typedef struct PruneStepResult128,4718
	Bitmapset  *bound_offsets;bound_offsets134,4864
	bool		scan_default;136,4893
	bool		scan_null;137,4948
} PruneStepResult;138,5009
make_partition_pruneinfo(230,9502
make_partitionedrel_pruneinfo(343,13083
gen_partprune_steps(614,21707
prune_append_rel_partitions(650,23082
get_matching_partitions(716,25116
gen_partprune_steps_internal(845,29453
gen_prune_step_op(1199,39338
gen_prune_step_combine(1232,40285
gen_prune_steps_from_opexps(1258,41201
#define PartCollMatchesExprColl(1585,50946
match_clause_to_partition_key(1620,52339
get_steps_using_prefix(2187,69792
get_steps_using_prefix_recurse(2236,71333
get_matching_hash_bounds(2381,75419
get_matching_list_bounds(2459,78009
get_matching_range_bounds(2670,84370
pull_exec_paramids(3065,95249
pull_exec_paramids_walker(3075,95402
get_partkey_exec_paramids(3099,95947
perform_pruning_base_step(3135,96705
perform_pruning_combine_step(3283,100721
match_boolean_partition_clause(3400,104493
partkey_datum_from_expr(3471,106511

/home/seinoyu/pgsql/master/postgresql/src/backend/partitioning/partbounds.c,2989
typedef struct PartitionHashBound49,1386
	int			modulus;51,1422
	int			remainder;52,1438
	int			index;53,1456
} PartitionHashBound;54,1470
typedef struct PartitionListValue57,1552
	int			index;59,1588
	Datum		value;60,1602
} PartitionListValue;61,1617
typedef struct PartitionRangeBound64,1677
	int			index;66,1714
	Datum	   *datums;datums67,1728
	PartitionRangeDatumKind *kind;kind68,1774
	bool		lower;69,1835
} PartitionRangeBound;70,1892
typedef struct PartitionMap76,2049
	int			nparts;78,2079
	int		   *merged_indexes;merged_indexes79,2123
	bool	   *merged;merged80,2184
	bool		did_remapping;82,2295
	int		   *old_indexes;old_indexes83,2349
} PartitionMap;85,2439
#define compare_range_bounds(88,2499
get_qual_from_partbound(250,9262
partition_bounds_create(305,11042
create_hash_bounds(358,12606
create_list_bounds(440,14940
create_range_bounds(597,19372
partition_bounds_equal(799,25016
partition_bounds_copy(917,28759
partition_bounds_merge(1017,31516
merge_list_bounds(1102,34679
merge_range_bounds(1410,44664
init_partition_map(1715,54838
free_partition_map(1736,55320
is_dummy_partition(1747,55517
merge_matching_partitions(1766,56007
process_outer_partition(1884,60080
process_inner_partition(1966,62698
merge_null_partitions(2051,65501
merge_default_partitions(2161,69088
merge_partition_with_dummy(2271,72476
fix_merged_indexes(2289,72933
generate_matching_part_pairs(2343,74279
build_merged_partition_bounds(2422,76396
get_range_partition(2481,78180
get_range_partition_internal(2502,78590
compare_range_partitions(2562,80394
get_merged_range_bounds(2611,81870
add_merged_range_bounds(2675,83795
partitions_are_ordered(2750,86151
check_new_partition_bound(2809,88073
check_default_partition_contents(3101,96726
get_hash_partition_greatest_modulus(3264,101821
make_one_partition_rbound(3281,102416
partition_rbound_cmp(3337,104111
partition_rbound_datum_cmp(3401,105970
partition_hbound_cmp(3432,106675
partition_list_bsearch(3452,107233
partition_range_bsearch(3495,108114
partition_range_datum_bsearch(3541,109067
partition_hash_bsearch(3584,109904
qsort_partition_hbound_cmp(3624,110614
qsort_partition_list_value_cmp(3639,110996
qsort_partition_rbound_cmp(3656,111467
get_partition_bound_num_indexes(3673,111977
get_partition_operator(3718,113080
make_partition_op_expr(3754,114240
get_qual_for_hash(3867,117186
get_qual_for_list(3950,119138
get_qual_for_range(4159,124761
get_range_key_properties(4525,135999
get_range_nulltest(4569,137246
compute_partition_hash_value(4615,138226
satisfies_hash_partition(4662,139553
	typedef struct ColumnsHashData4664,139598
		Oid			relid;4666,139633
		int			nkeys;4667,139648
		Oid			variadic_type;4668,139663
		int16		variadic_typlen;4669,139686
		bool		variadic_typbyval;4670,139712
		char		variadic_typalign;4671,139739
		Oid			partcollid[partcollid4672,139766
		FmgrInfo	partsupfunc[partsupfunc4673,139806
	} ColumnsHashData;4674,139853

/home/seinoyu/pgsql/master/postgresql/src/backend/partitioning/partdesc.c,529
typedef struct PartitionDirectoryData37,1024
	MemoryContext pdir_mcxt;39,1064
	HTAB	   *pdir_hash;pdir_hash40,1090
}			PartitionDirectoryData;41,1111
typedef struct PartitionDirectoryEntry43,1140
	Oid			reloid;45,1181
	Relation	rel;46,1196
	PartitionDesc pd;47,1211
} PartitionDirectoryEntry;48,1230
RelationGetPartitionDesc(65,1908
RelationBuildPartitionDesc(92,2964
CreatePartitionDirectory(284,9159
PartitionDirectoryLookup(316,10180
DestroyPartitionDirectory(344,10828
get_default_oid_from_partdesc(361,11242

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_class_d.h,2268
#define PG_CLASS_D_H19,563
#define RelationRelationId 21,585
#define RelationRelation_Rowtype_Id 22,617
#define Anum_pg_class_oid 24,657
#define Anum_pg_class_relname 25,685
#define Anum_pg_class_relnamespace 26,717
#define Anum_pg_class_reltype 27,754
#define Anum_pg_class_reloftype 28,786
#define Anum_pg_class_relowner 29,820
#define Anum_pg_class_relam 30,853
#define Anum_pg_class_relfilenode 31,883
#define Anum_pg_class_reltablespace 32,919
#define Anum_pg_class_relpages 33,957
#define Anum_pg_class_reltuples 34,991
#define Anum_pg_class_relallvisible 35,1026
#define Anum_pg_class_reltoastrelid 36,1065
#define Anum_pg_class_relhasindex 37,1104
#define Anum_pg_class_relisshared 38,1141
#define Anum_pg_class_relpersistence 39,1178
#define Anum_pg_class_relkind 40,1218
#define Anum_pg_class_relnatts 41,1251
#define Anum_pg_class_relchecks 42,1285
#define Anum_pg_class_relhasrules 43,1320
#define Anum_pg_class_relhastriggers 44,1357
#define Anum_pg_class_relhassubclass 45,1397
#define Anum_pg_class_relrowsecurity 46,1437
#define Anum_pg_class_relforcerowsecurity 47,1477
#define Anum_pg_class_relispopulated 48,1522
#define Anum_pg_class_relreplident 49,1562
#define Anum_pg_class_relispartition 50,1600
#define Anum_pg_class_relrewrite 51,1640
#define Anum_pg_class_relfrozenxid 52,1676
#define Anum_pg_class_relminmxid 53,1714
#define Anum_pg_class_relacl 54,1750
#define Anum_pg_class_reloptions 55,1782
#define Anum_pg_class_relpartbound 56,1818
#define Natts_pg_class 58,1857
#define		  RELKIND_RELATION	61,1885
#define		  RELKIND_INDEX	62,1941
#define		  RELKIND_SEQUENCE	63,1996
#define		  RELKIND_TOASTVALUE	64,2053
#define		  RELKIND_VIEW	65,2118
#define		  RELKIND_MATVIEW	66,2161
#define		  RELKIND_COMPOSITE_TYPE 67,2219
#define		  RELKIND_FOREIGN_TABLE 68,2279
#define		  RELKIND_PARTITIONED_TABLE 69,2338
#define		  RELKIND_PARTITIONED_INDEX 70,2403
#define		  RELPERSISTENCE_PERMANENT	72,2469
#define		  RELPERSISTENCE_UNLOGGED	73,2529
#define		  RELPERSISTENCE_TEMP	74,2599
#define		  REPLICA_IDENTITY_DEFAULT	77,2728
#define		  REPLICA_IDENTITY_NOTHING	79,2822
#define		  REPLICA_IDENTITY_FULL	81,2911
#define		  REPLICA_IDENTITY_INDEX	87,3144
#define RELKIND_HAS_STORAGE(94,3352

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_conversion.c,58
ConversionCreate(41,1066
FindDefaultConversion(155,4438

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/indexing.c,332
CatalogOpenIndexes(42,1359
CatalogCloseIndexes(60,1788
CatalogIndexInsert(74,2117
CatalogTupleCheckConstraints(181,5075
#define CatalogTupleCheckConstraints(203,5605
CatalogTupleInsert(220,6261
CatalogTupleInsertWithInfo(243,6935
CatalogTupleUpdate(265,7671
CatalogTupleUpdateWithInfo(288,8366
CatalogTupleDelete(314,9367

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_tablespace_d.h,395
#define PG_TABLESPACE_D_H19,578
#define TableSpaceRelationId 21,605
#define Anum_pg_tablespace_oid 23,640
#define Anum_pg_tablespace_spcname 24,673
#define Anum_pg_tablespace_spcowner 25,710
#define Anum_pg_tablespace_spcacl 26,748
#define Anum_pg_tablespace_spcoptions 27,784
#define Natts_pg_tablespace 29,825
#define DEFAULTTABLESPACE_OID 31,856
#define GLOBALTABLESPACE_OID 32,891

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_depend.c,649
recordDependencyOn(43,1182
recordMultipleDependencies(55,1535
recordDependencyOnCurrentExtension(138,4197
deleteDependencyRecordsFor(190,5856
deleteDependencyRecordsForClass(240,7094
deleteDependencyRecordsForSpecific(287,8220
changeDependencyFor(346,9907
changeDependenciesOf(456,12605
changeDependenciesOn(512,13879
isObjectPinned(601,16200
getExtensionOfObject(659,17664
getAutoExtensionsOfObject(705,18720
sequenceIsOwned(755,20078
getOwnedSequences_internal(804,21274
getOwnedSequences(863,22880
getIdentitySequence(872,23032
get_constraint_index(898,23730
get_index_constraint(965,25399
get_index_ref_constraints(1021,26745

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_subscription.c,397
GetSubscription(42,1089
CountDBSubscriptions(114,2787
FreeSubscription(146,3378
get_subscription_oid(163,3735
get_subscription_name(183,4277
textarray_to_stringlist(212,4866
AddSubscriptionRelState(236,5286
UpdateSubscriptionRelState(282,6634
GetSubscriptionRelState(333,8124
RemoveSubscriptionRel(386,9331
GetSubscriptionRelations(432,10277
GetSubscriptionNotReadyRelations(486,11537

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_conversion_d.h,468
#define PG_CONVERSION_D_H19,578
#define ConversionRelationId 21,605
#define Anum_pg_conversion_oid 23,640
#define Anum_pg_conversion_conname 24,673
#define Anum_pg_conversion_connamespace 25,710
#define Anum_pg_conversion_conowner 26,752
#define Anum_pg_conversion_conforencoding 27,790
#define Anum_pg_conversion_contoencoding 28,834
#define Anum_pg_conversion_conproc 29,877
#define Anum_pg_conversion_condefault 30,914
#define Natts_pg_conversion 32,955

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_type.c,215
Oid			binary_upgrade_next_pg_type_oid 40,1134
TypeShellMake(56,1834
TypeCreate(192,6364
GenerateTypeDependencies(542,17992
RenameTypeInternal(710,23265
makeArrayTypeName(785,25509
moveArrayTypeName(846,27549

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/objectaccess.c,239
object_access_hook_type object_access_hook 22,644
RunObjectPostCreateHook(30,783
RunObjectDropHook(52,1260
RunObjectTruncateHook(74,1725
RunObjectPostAlterHook(90,2033
RunNamespaceSearchHook(113,2578
RunFunctionExecuteHook(137,3138

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_range.c,42
RangeCreate(36,884
RangeDelete(112,3120

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/toasting.c,227
AlterTableCreateToastTable(57,1785
NewHeapCreateToastTable(63,1934
NewRelationCreateToastTable(69,2081
CheckAndCreateToastTable(75,2231
BootstrapToastTable(93,2662
create_toast_table(124,3530
needs_toast_table(376,11190

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/aclchk.c,3269
	Oid			roleid;84,2424
	Oid			nspid;85,2459
	bool		is_grant;87,2568
	ObjectType	objtype;88,2585
	bool		all_privs;89,2606
	AclMode		privileges;90,2624
	List	   *grantees;grantees91,2646
	bool		grant_option;92,2666
	DropBehavior behavior;93,2687
} InternalDefaultACL;94,2711
bool		binary_upgrade_record_init_privs 101,2964
merge_acl_with_grant(152,5335
restrict_and_check_grant(211,7112
ExecuteGrantStmt(359,11533
ExecGrantStmt_oids(548,17042
objectNamesToOids(612,18626
objectsInSchemaToOids(761,22089
getRelationsInNamespace(850,24582
ExecAlterDefaultPrivilegesStmt(888,25392
SetDefaultACLsInSchemas(1082,30702
SetDefaultACL(1124,31828
RemoveRoleFromObjectACL(1377,38671
expand_col_privileges(1509,41947
expand_all_col_privileges(1542,42944
ExecGrant_Attribute(1588,44187
ExecGrant_Relation(1736,48724
ExecGrant_Database(2068,58528
ExecGrant_Fdw(2188,61924
ExecGrant_ForeignServer(2315,65578
ExecGrant_Function(2440,69195
ExecGrant_Language(2563,72636
ExecGrant_Largeobject(2694,76477
ExecGrant_Namespace(2834,80490
ExecGrant_Tablespace(2958,84021
ExecGrant_Type(3078,87483
string_to_privilege(3216,91465
privilege_to_string(3253,92561
aclcheck_error(3294,93424
aclcheck_error_col(3577,102231
aclcheck_error_type(3607,102986
pg_aclmask(3619,103277
pg_attribute_aclmask(3687,105774
pg_class_aclmask(3772,108127
pg_database_aclmask(3859,110212
pg_proc_aclmask(3913,111412
pg_language_aclmask(3967,112595
pg_largeobject_aclmask_snapshot(4030,114335
pg_namespace_aclmask(4103,116037
pg_tablespace_aclmask(4185,118422
pg_foreign_data_wrapper_aclmask(4242,119671
pg_foreign_server_aclmask(4304,121104
pg_type_aclmask(4365,122500
pg_attribute_aclcheck(4449,124593
pg_attribute_aclcheck_all(4478,125705
pg_class_aclcheck(4563,127865
pg_database_aclcheck(4575,128141
pg_proc_aclcheck(4587,128417
pg_language_aclcheck(4599,128689
pg_largeobject_aclcheck_snapshot(4611,128972
pg_namespace_aclcheck(4625,129325
pg_tablespace_aclcheck(4637,129607
pg_foreign_data_wrapper_aclcheck(4650,129904
pg_foreign_server_aclcheck(4663,130215
pg_type_aclcheck(4675,130501
pg_class_ownercheck(4687,130748
pg_type_ownercheck(4713,131335
pg_oper_ownercheck(4739,131920
pg_proc_ownercheck(4765,132514
pg_language_ownercheck(4791,133114
pg_largeobject_ownercheck(4820,133829
pg_namespace_ownercheck(4863,134894
pg_tablespace_ownercheck(4889,135494
pg_opclass_ownercheck(4916,136165
pg_opfamily_ownercheck(4943,136775
pg_ts_dict_ownercheck(4970,137399
pg_ts_config_ownercheck(4997,138033
pg_foreign_data_wrapper_ownercheck(5024,138667
pg_foreign_server_ownercheck(5051,139322
pg_event_trigger_ownercheck(5078,139954
pg_database_ownercheck(5105,140573
pg_collation_ownercheck(5131,141156
pg_conversion_ownercheck(5157,141758
pg_extension_ownercheck(5183,142362
pg_publication_ownercheck(5225,143401
pg_subscription_ownercheck(5251,144014
pg_statistics_object_ownercheck(5277,144636
has_createrole_privilege(5312,145789
has_bypassrls_privilege(5331,146169
get_default_acl_internal(5355,146729
get_user_default_acl(5390,147538
recordDependencyOnNewAcl(5466,149270
recordExtObjInitPriv(5496,150076
removeExtObjInitPriv(5794,158250
recordExtensionInitPriv(5877,160737
recordExtensionInitPrivWorker(5906,161940

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_sequence_d.h,436
#define PG_SEQUENCE_D_H19,572
#define SequenceRelationId 21,597
#define Anum_pg_sequence_seqrelid 23,630
#define Anum_pg_sequence_seqtypid 24,666
#define Anum_pg_sequence_seqstart 25,702
#define Anum_pg_sequence_seqincrement 26,738
#define Anum_pg_sequence_seqmax 27,778
#define Anum_pg_sequence_seqmin 28,812
#define Anum_pg_sequence_seqcache 29,846
#define Anum_pg_sequence_seqcycle 30,882
#define Natts_pg_sequence 32,919

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_collation_d.h,777
#define PG_COLLATION_D_H19,575
#define CollationRelationId 21,601
#define Anum_pg_collation_oid 23,635
#define Anum_pg_collation_collname 24,667
#define Anum_pg_collation_collnamespace 25,704
#define Anum_pg_collation_collowner 26,746
#define Anum_pg_collation_collprovider 27,784
#define Anum_pg_collation_collisdeterministic 28,825
#define Anum_pg_collation_collencoding 29,873
#define Anum_pg_collation_collcollate 30,914
#define Anum_pg_collation_collctype 31,954
#define Anum_pg_collation_collversion 32,992
#define Natts_pg_collation 34,1034
#define COLLPROVIDER_DEFAULT	37,1066
#define COLLPROVIDER_ICU	38,1099
#define COLLPROVIDER_LIBC	39,1129
#define DEFAULT_COLLATION_OID 41,1161
#define C_COLLATION_OID 42,1195
#define POSIX_COLLATION_OID 43,1223

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_foreign_server_d.h,494
#define PG_FOREIGN_SERVER_D_H19,590
#define ForeignServerRelationId 21,621
#define Anum_pg_foreign_server_oid 23,659
#define Anum_pg_foreign_server_srvname 24,696
#define Anum_pg_foreign_server_srvowner 25,737
#define Anum_pg_foreign_server_srvfdw 26,779
#define Anum_pg_foreign_server_srvtype 27,819
#define Anum_pg_foreign_server_srvversion 28,860
#define Anum_pg_foreign_server_srvacl 29,904
#define Anum_pg_foreign_server_srvoptions 30,944
#define Natts_pg_foreign_server 32,989

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/storage.c,1059
int			wal_skip_threshold 38,1003
typedef struct PendingRelDelete60,2042
	RelFileNode relnode;62,2076
	BackendId	backend;63,2142
	bool		atCommit;64,2204
	int			nestLevel;65,2266
	struct PendingRelDelete *next;next66,2321
} PendingRelDelete;67,2376
typedef struct PendingRelSync69,2397
	RelFileNode rnode;71,2429
	bool		is_truncated;72,2449
} PendingRelSync;73,2513
static PendingRelDelete *pendingDeletes pendingDeletes75,2532
HTAB	   *pendingSyncHash pendingSyncHash76,2606
AddPendingSync(84,2708
RelationCreateStorage(118,3621
log_smgrcreate(175,5040
RelationDropStorage(195,5481
RelationPreserveStorage(240,7224
RelationTruncate(277,7993
RelationPreTruncate(386,11153
RelationCopyStorage(408,11656
RelFileNodeSkippingWAL(496,14506
EstimatePendingSyncsSpace(510,14776
SerializePendingSyncs(523,15033
RestorePendingSyncs(574,16526
smgrDoPendingDeletes(595,17183
smgrDoPendingSyncs(664,18607
smgrGetPendingDeletes(816,23075
PostPrepare_smgr(857,24125
AtSubCommit_smgr(878,24544
AtSubAbort_smgr(898,25054
smgr_redo(904,25116

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_attribute_d.h,1427
#define PG_ATTRIBUTE_D_H19,575
#define AttributeRelationId 21,601
#define AttributeRelation_Rowtype_Id 22,634
#define Anum_pg_attribute_attrelid 24,675
#define Anum_pg_attribute_attname 25,712
#define Anum_pg_attribute_atttypid 26,748
#define Anum_pg_attribute_attstattarget 27,785
#define Anum_pg_attribute_attlen 28,827
#define Anum_pg_attribute_attnum 29,862
#define Anum_pg_attribute_attndims 30,897
#define Anum_pg_attribute_attcacheoff 31,934
#define Anum_pg_attribute_atttypmod 32,974
#define Anum_pg_attribute_attbyval 33,1012
#define Anum_pg_attribute_attstorage 34,1050
#define Anum_pg_attribute_attalign 35,1090
#define Anum_pg_attribute_attnotnull 36,1128
#define Anum_pg_attribute_atthasdef 37,1168
#define Anum_pg_attribute_atthasmissing 38,1207
#define Anum_pg_attribute_attidentity 39,1250
#define Anum_pg_attribute_attgenerated 40,1291
#define Anum_pg_attribute_attisdropped 41,1333
#define Anum_pg_attribute_attislocal 42,1375
#define Anum_pg_attribute_attinhcount 43,1415
#define Anum_pg_attribute_attcollation 44,1456
#define Anum_pg_attribute_attacl 45,1498
#define Anum_pg_attribute_attoptions 46,1534
#define Anum_pg_attribute_attfdwoptions 47,1574
#define Anum_pg_attribute_attmissingval 48,1617
#define Natts_pg_attribute 50,1661
#define		  ATTRIBUTE_IDENTITY_ALWAYS	53,1693
#define		  ATTRIBUTE_IDENTITY_BY_DEFAULT 54,1735
#define		  ATTRIBUTE_GENERATED_STORED	56,1781

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_type_d.h,8001
#define PG_TYPE_D_H19,560
#define TypeRelationId 21,581
#define TypeRelation_Rowtype_Id 22,609
#define Anum_pg_type_oid 24,645
#define Anum_pg_type_typname 25,672
#define Anum_pg_type_typnamespace 26,703
#define Anum_pg_type_typowner 27,739
#define Anum_pg_type_typlen 28,771
#define Anum_pg_type_typbyval 29,801
#define Anum_pg_type_typtype 30,833
#define Anum_pg_type_typcategory 31,864
#define Anum_pg_type_typispreferred 32,899
#define Anum_pg_type_typisdefined 33,937
#define Anum_pg_type_typdelim 34,974
#define Anum_pg_type_typrelid 35,1007
#define Anum_pg_type_typelem 36,1040
#define Anum_pg_type_typarray 37,1072
#define Anum_pg_type_typinput 38,1105
#define Anum_pg_type_typoutput 39,1138
#define Anum_pg_type_typreceive 40,1172
#define Anum_pg_type_typsend 41,1207
#define Anum_pg_type_typmodin 42,1239
#define Anum_pg_type_typmodout 43,1272
#define Anum_pg_type_typanalyze 44,1306
#define Anum_pg_type_typalign 45,1341
#define Anum_pg_type_typstorage 46,1374
#define Anum_pg_type_typnotnull 47,1409
#define Anum_pg_type_typbasetype 48,1444
#define Anum_pg_type_typtypmod 49,1480
#define Anum_pg_type_typndims 50,1514
#define Anum_pg_type_typcollation 51,1547
#define Anum_pg_type_typdefaultbin 52,1584
#define Anum_pg_type_typdefault 53,1622
#define Anum_pg_type_typacl 54,1657
#define Natts_pg_type 56,1689
#define  TYPTYPE_BASE	62,1781
#define  TYPTYPE_COMPOSITE	63,1847
#define  TYPTYPE_DOMAIN	64,1918
#define  TYPTYPE_ENUM	65,1978
#define  TYPTYPE_PSEUDO	66,2027
#define  TYPTYPE_RANGE	67,2074
#define  TYPCATEGORY_INVALID	69,2120
#define  TYPCATEGORY_ARRAY	70,2184
#define  TYPCATEGORY_BOOLEAN	71,2216
#define  TYPCATEGORY_COMPOSITE	72,2249
#define  TYPCATEGORY_DATETIME	73,2284
#define  TYPCATEGORY_ENUM	74,2318
#define  TYPCATEGORY_GEOMETRIC	75,2349
#define  TYPCATEGORY_NETWORK	76,2384
#define  TYPCATEGORY_NUMERIC	77,2434
#define  TYPCATEGORY_PSEUDOTYPE 78,2467
#define  TYPCATEGORY_RANGE	79,2503
#define  TYPCATEGORY_STRING	80,2535
#define  TYPCATEGORY_TIMESPAN	81,2568
#define  TYPCATEGORY_USER	82,2602
#define  TYPCATEGORY_BITSTRING	83,2633
#define  TYPCATEGORY_UNKNOWN	84,2691
#define  TYPALIGN_CHAR	86,2725
#define  TYPALIGN_SHORT	87,2792
#define  TYPALIGN_INT	88,2864
#define  TYPALIGN_DOUBLE	89,2932
#define  TYPSTORAGE_PLAIN	91,3002
#define  TYPSTORAGE_EXTERNAL	92,3070
#define  TYPSTORAGE_EXTENDED	93,3142
#define  TYPSTORAGE_MAIN	94,3197
#define IsPolymorphicType(97,3345
#define IsPolymorphicTypeFamily1(102,3536
#define IsPolymorphicTypeFamily2(109,3730
#define BOOLOID 115,3928
#define BYTEAOID 116,3947
#define CHAROID 117,3967
#define NAMEOID 118,3986
#define INT8OID 119,4005
#define INT2OID 120,4024
#define INT2VECTOROID 121,4043
#define INT4OID 122,4068
#define REGPROCOID 123,4087
#define TEXTOID 124,4109
#define OIDOID 125,4128
#define TIDOID 126,4146
#define XIDOID 127,4164
#define CIDOID 128,4182
#define OIDVECTOROID 129,4200
#define JSONOID 130,4224
#define XMLOID 131,4244
#define PGNODETREEOID 132,4263
#define PGNDISTINCTOID 133,4289
#define PGDEPENDENCIESOID 134,4317
#define PGMCVLISTOID 135,4348
#define PGDDLCOMMANDOID 136,4374
#define XID8OID 137,4401
#define POINTOID 138,4422
#define LSEGOID 139,4443
#define PATHOID 140,4463
#define BOXOID 141,4483
#define POLYGONOID 142,4502
#define LINEOID 143,4525
#define FLOAT4OID 144,4545
#define FLOAT8OID 145,4567
#define UNKNOWNOID 146,4589
#define CIRCLEOID 147,4612
#define CASHOID 148,4634
#define MACADDROID 149,4654
#define INETOID 150,4677
#define CIDROID 151,4697
#define MACADDR8OID 152,4717
#define ACLITEMOID 153,4741
#define BPCHAROID 154,4765
#define VARCHAROID 155,4788
#define DATEOID 156,4812
#define TIMEOID 157,4833
#define TIMESTAMPOID 158,4854
#define TIMESTAMPTZOID 159,4880
#define INTERVALOID 160,4908
#define TIMETZOID 161,4933
#define BITOID 162,4956
#define VARBITOID 163,4976
#define NUMERICOID 164,4999
#define REFCURSOROID 165,5023
#define REGPROCEDUREOID 166,5049
#define REGOPEROID 167,5078
#define REGOPERATOROID 168,5102
#define REGCLASSOID 169,5130
#define REGCOLLATIONOID 170,5155
#define REGTYPEOID 171,5184
#define REGROLEOID 172,5208
#define REGNAMESPACEOID 173,5232
#define UUIDOID 174,5261
#define LSNOID 175,5282
#define TSVECTOROID 176,5302
#define GTSVECTOROID 177,5327
#define TSQUERYOID 178,5353
#define REGCONFIGOID 179,5377
#define REGDICTIONARYOID 180,5403
#define JSONBOID 181,5433
#define JSONPATHOID 182,5455
#define TXID_SNAPSHOTOID 183,5480
#define PG_SNAPSHOTOID 184,5510
#define INT4RANGEOID 185,5538
#define NUMRANGEOID 186,5564
#define TSRANGEOID 187,5589
#define TSTZRANGEOID 188,5613
#define DATERANGEOID 189,5639
#define INT8RANGEOID 190,5665
#define RECORDOID 191,5691
#define RECORDARRAYOID 192,5714
#define CSTRINGOID 193,5742
#define ANYOID 194,5766
#define ANYARRAYOID 195,5786
#define VOIDOID 196,5811
#define TRIGGEROID 197,5832
#define EVTTRIGGEROID 198,5856
#define LANGUAGE_HANDLEROID 199,5883
#define INTERNALOID 200,5916
#define ANYELEMENTOID 201,5941
#define ANYNONARRAYOID 202,5968
#define ANYENUMOID 203,5996
#define FDW_HANDLEROID 204,6020
#define INDEX_AM_HANDLEROID 205,6048
#define TSM_HANDLEROID 206,6080
#define TABLE_AM_HANDLEROID 207,6108
#define ANYRANGEOID 208,6140
#define ANYCOMPATIBLEOID 209,6165
#define ANYCOMPATIBLEARRAYOID 210,6195
#define ANYCOMPATIBLENONARRAYOID 211,6230
#define ANYCOMPATIBLERANGEOID 212,6268
#define BOOLARRAYOID 213,6303
#define BYTEAARRAYOID 214,6329
#define CHARARRAYOID 215,6356
#define NAMEARRAYOID 216,6382
#define INT8ARRAYOID 217,6408
#define INT2ARRAYOID 218,6434
#define INT2VECTORARRAYOID 219,6460
#define INT4ARRAYOID 220,6492
#define REGPROCARRAYOID 221,6518
#define TEXTARRAYOID 222,6547
#define OIDARRAYOID 223,6573
#define TIDARRAYOID 224,6598
#define XIDARRAYOID 225,6623
#define CIDARRAYOID 226,6648
#define OIDVECTORARRAYOID 227,6673
#define PG_TYPEARRAYOID 228,6704
#define PG_ATTRIBUTEARRAYOID 229,6732
#define PG_PROCARRAYOID 230,6765
#define PG_CLASSARRAYOID 231,6793
#define JSONARRAYOID 232,6822
#define XMLARRAYOID 233,6847
#define XID8ARRAYOID 234,6871
#define POINTARRAYOID 235,6896
#define LSEGARRAYOID 236,6923
#define PATHARRAYOID 237,6949
#define BOXARRAYOID 238,6975
#define POLYGONARRAYOID 239,7000
#define LINEARRAYOID 240,7029
#define FLOAT4ARRAYOID 241,7054
#define FLOAT8ARRAYOID 242,7082
#define CIRCLEARRAYOID 243,7110
#define MONEYARRAYOID 244,7137
#define MACADDRARRAYOID 245,7163
#define INETARRAYOID 246,7192
#define CIDRARRAYOID 247,7218
#define MACADDR8ARRAYOID 248,7243
#define ACLITEMARRAYOID 249,7272
#define BPCHARARRAYOID 250,7301
#define VARCHARARRAYOID 251,7329
#define DATEARRAYOID 252,7358
#define TIMEARRAYOID 253,7384
#define TIMESTAMPARRAYOID 254,7410
#define TIMESTAMPTZARRAYOID 255,7441
#define INTERVALARRAYOID 256,7474
#define TIMETZARRAYOID 257,7504
#define BITARRAYOID 258,7532
#define VARBITARRAYOID 259,7557
#define NUMERICARRAYOID 260,7585
#define REFCURSORARRAYOID 261,7614
#define REGPROCEDUREARRAYOID 262,7645
#define REGOPERARRAYOID 263,7679
#define REGOPERATORARRAYOID 264,7708
#define REGCLASSARRAYOID 265,7741
#define REGCOLLATIONARRAYOID 266,7771
#define REGTYPEARRAYOID 267,7805
#define REGROLEARRAYOID 268,7834
#define REGNAMESPACEARRAYOID 269,7863
#define UUIDARRAYOID 270,7897
#define PG_LSNARRAYOID 271,7923
#define TSVECTORARRAYOID 272,7951
#define GTSVECTORARRAYOID 273,7981
#define TSQUERYARRAYOID 274,8012
#define REGCONFIGARRAYOID 275,8041
#define REGDICTIONARYARRAYOID 276,8072
#define JSONBARRAYOID 277,8107
#define JSONPATHARRAYOID 278,8134
#define TXID_SNAPSHOTARRAYOID 279,8164
#define PG_SNAPSHOTARRAYOID 280,8199
#define INT4RANGEARRAYOID 281,8232
#define NUMRANGEARRAYOID 282,8263
#define TSRANGEARRAYOID 283,8293
#define TSTZRANGEARRAYOID 284,8322
#define DATERANGEARRAYOID 285,8353
#define INT8RANGEARRAYOID 286,8384
#define CSTRINGARRAYOID 287,8415

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_enum.c,441
Oid			binary_upgrade_next_pg_enum_oid 36,945
static HTAB *enum_blacklist enum_blacklist47,1527
EnumValuesCreate(60,1846
EnumValuesDelete(156,4405
init_enum_blacklist(187,5040
AddEnumLabel(208,5558
RenameEnumLabel(508,13960
EnumBlacklisted(591,16277
AtEOXact_Enum(609,16619
RenumberEnumType(643,17863
sort_order_cmp(679,18650
EstimateEnumBlacklistSpace(695,19034
SerializeEnumBlacklist(709,19261
RestoreEnumBlacklist(741,19988

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_largeobject.c,80
LargeObjectCreate(40,1109
LargeObjectDrop(86,2225
LargeObjectExists(158,4094

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_namespace.c,25
NamespaceCreate(43,1321

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_extension_d.h,458
#define PG_EXTENSION_D_H19,575
#define ExtensionRelationId 21,601
#define Anum_pg_extension_oid 23,635
#define Anum_pg_extension_extname 24,667
#define Anum_pg_extension_extowner 25,703
#define Anum_pg_extension_extnamespace 26,740
#define Anum_pg_extension_extrelocatable 27,781
#define Anum_pg_extension_extversion 28,824
#define Anum_pg_extension_extconfig 29,863
#define Anum_pg_extension_extcondition 30,901
#define Natts_pg_extension 32,943

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/heap.c,1766
Oid			binary_upgrade_next_heap_pg_class_oid 92,2822
Oid			binary_upgrade_next_toast_pg_class_oid 93,2880
static const FormData_pg_attribute a1 151,4874
static const FormData_pg_attribute a2 165,5204
static const FormData_pg_attribute a3 179,5530
static const FormData_pg_attribute a4 193,5848
static const FormData_pg_attribute a5 207,6174
static const FormData_pg_attribute a6 227,6725
static const FormData_pg_attribute *SysAtt[SysAtt241,7037
SystemAttributeDefinition(249,7345
SystemAttributeByName(261,7708
heap_create(294,8607
CheckAttributeNamesTypes(489,14171
CheckAttributeType(581,17283
InsertPgAttributeTuple(726,22053
AddNewAttributeTuples(787,25050
InsertPgClassTuple(876,27581
AddNewRelationTuple(949,31105
AddNewRelationType(1020,33029
heap_create_with_catalog(1096,36226
RelationRemoveInheritance(1475,48358
DeleteRelationTuple(1508,49157
DeleteAttributeTuples(1537,49895
DeleteSystemAttributeTuples(1574,50908
RemoveAttributeById(1615,52083
RemoveAttrDefault(1728,55623
RemoveAttrDefaultById(1783,57076
heap_drop_with_catalog(1856,59368
RelationClearMissing(2028,64317
SetAttrMissing(2096,66236
StoreAttrDefault(2157,68398
StoreRelCheck(2342,73897
StoreConstraints(2450,76882
AddRelationNewConstraints(2520,79144
MergeWithExistingConstraint(2770,86396
SetRelationNumChecks(2920,90925
check_nested_generated_walker(2954,91729
check_nested_generated(2985,92584
cookDefault(3003,93190
cookConstraint(3078,95027
RemoveStatistics(3120,95982
RelationTruncateIndexes(3167,97116
heap_truncate(3215,98657
heap_truncate_one_rel(3256,99661
heap_truncate_check_FKs(3300,100960
heap_truncate_find_FKs(3395,104005
StorePartitionKey(3523,107589
RemovePartitionKeyByRelId(3655,111917
StorePartitionBound(3686,112797

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_policy_d.h,414
#define PG_POLICY_D_H19,566
#define PolicyRelationId 21,589
#define Anum_pg_policy_oid 23,620
#define Anum_pg_policy_polname 24,649
#define Anum_pg_policy_polrelid 25,682
#define Anum_pg_policy_polcmd 26,716
#define Anum_pg_policy_polpermissive 27,748
#define Anum_pg_policy_polroles 28,787
#define Anum_pg_policy_polqual 29,821
#define Anum_pg_policy_polwithcheck 30,854
#define Natts_pg_policy 32,893

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_ts_dict_d.h,359
#define PG_TS_DICT_D_H19,569
#define TSDictionaryRelationId 21,593
#define Anum_pg_ts_dict_oid 23,630
#define Anum_pg_ts_dict_dictname 24,660
#define Anum_pg_ts_dict_dictnamespace 25,695
#define Anum_pg_ts_dict_dictowner 26,735
#define Anum_pg_ts_dict_dicttemplate 27,771
#define Anum_pg_ts_dict_dictinitoption 28,810
#define Natts_pg_ts_dict 30,852

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_opfamily_d.h,769
#define PG_OPFAMILY_D_H19,572
#define OperatorFamilyRelationId 21,597
#define Anum_pg_opfamily_oid 23,636
#define Anum_pg_opfamily_opfmethod 24,667
#define Anum_pg_opfamily_opfname 25,704
#define Anum_pg_opfamily_opfnamespace 26,739
#define Anum_pg_opfamily_opfowner 27,779
#define Natts_pg_opfamily 29,816
#define IsBooleanOpfamily(32,846
#define BOOL_BTREE_FAM_OID 35,956
#define BPCHAR_BTREE_FAM_OID 36,987
#define BYTEA_BTREE_FAM_OID 37,1020
#define NETWORK_BTREE_FAM_OID 38,1052
#define INTEGER_BTREE_FAM_OID 39,1087
#define OID_BTREE_FAM_OID 40,1122
#define TEXT_BTREE_FAM_OID 41,1153
#define TEXT_PATTERN_BTREE_FAM_OID 42,1185
#define BPCHAR_PATTERN_BTREE_FAM_OID 43,1225
#define BOOL_HASH_FAM_OID 44,1267
#define TEXT_SPGIST_FAM_OID 45,1298

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_attrdef_d.h,253
#define PG_ATTRDEF_D_H19,569
#define AttrDefaultRelationId 21,593
#define Anum_pg_attrdef_oid 23,629
#define Anum_pg_attrdef_adrelid 24,659
#define Anum_pg_attrdef_adnum 25,693
#define Anum_pg_attrdef_adbin 26,725
#define Natts_pg_attrdef 28,758

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_aggregate.c,56
AggregateCreate(46,1180
lookup_agg_function(820,27404

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_am_d.h,492
#define PG_AM_D_H19,554
#define AccessMethodRelationId 21,573
#define Anum_pg_am_oid 23,610
#define Anum_pg_am_amname 24,635
#define Anum_pg_am_amhandler 25,663
#define Anum_pg_am_amtype 26,694
#define Natts_pg_am 28,723
#define AMTYPE_INDEX	34,783
#define AMTYPE_TABLE	35,838
#define HEAP_TABLE_AM_OID 37,894
#define BTREE_AM_OID 38,922
#define HASH_AM_OID 39,947
#define GIST_AM_OID 40,971
#define GIN_AM_OID 41,995
#define SPGIST_AM_OID 42,1019
#define BRIN_AM_OID 43,1046

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_foreign_data_wrapper_d.h,513
#define PG_FOREIGN_DATA_WRAPPER_D_H19,608
#define ForeignDataWrapperRelationId 21,645
#define Anum_pg_foreign_data_wrapper_oid 23,688
#define Anum_pg_foreign_data_wrapper_fdwname 24,731
#define Anum_pg_foreign_data_wrapper_fdwowner 25,778
#define Anum_pg_foreign_data_wrapper_fdwhandler 26,826
#define Anum_pg_foreign_data_wrapper_fdwvalidator 27,876
#define Anum_pg_foreign_data_wrapper_fdwacl 28,928
#define Anum_pg_foreign_data_wrapper_fdwoptions 29,974
#define Natts_pg_foreign_data_wrapper 31,1025

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_opclass_d.h,989
#define PG_OPCLASS_D_H19,569
#define OperatorClassRelationId 21,593
#define Anum_pg_opclass_oid 23,631
#define Anum_pg_opclass_opcmethod 24,661
#define Anum_pg_opclass_opcname 25,697
#define Anum_pg_opclass_opcnamespace 26,731
#define Anum_pg_opclass_opcowner 27,770
#define Anum_pg_opclass_opcfamily 28,805
#define Anum_pg_opclass_opcintype 29,841
#define Anum_pg_opclass_opcdefault 30,877
#define Anum_pg_opclass_opckeytype 31,914
#define Natts_pg_opclass 33,952
#define DATE_BTREE_OPS_OID 35,980
#define FLOAT8_BTREE_OPS_OID 36,1012
#define INT2_BTREE_OPS_OID 37,1046
#define INT4_BTREE_OPS_OID 38,1078
#define INT8_BTREE_OPS_OID 39,1110
#define NUMERIC_BTREE_OPS_OID 40,1142
#define OID_BTREE_OPS_OID 41,1177
#define TEXT_BTREE_OPS_OID 42,1208
#define TIMESTAMPTZ_BTREE_OPS_OID 43,1240
#define TIMESTAMP_BTREE_OPS_OID 44,1279
#define TEXT_BTREE_PATTERN_OPS_OID 45,1316
#define VARCHAR_BTREE_PATTERN_OPS_OID 46,1356
#define BPCHAR_BTREE_PATTERN_OPS_OID 47,1399

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_amop_d.h,522
#define PG_AMOP_D_H19,560
#define AccessMethodOperatorRelationId 21,581
#define Anum_pg_amop_oid 23,626
#define Anum_pg_amop_amopfamily 24,653
#define Anum_pg_amop_amoplefttype 25,687
#define Anum_pg_amop_amoprighttype 26,723
#define Anum_pg_amop_amopstrategy 27,760
#define Anum_pg_amop_amoppurpose 28,796
#define Anum_pg_amop_amopopr 29,831
#define Anum_pg_amop_amopmethod 30,862
#define Anum_pg_amop_amopsortfamily 31,896
#define Natts_pg_amop 33,935
#define AMOP_SEARCH	37,998
#define AMOP_ORDER	38,1053

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/index.c,1748
Oid			binary_upgrade_next_index_pg_class_oid 85,2489
	Oid			currentlyReindexedHeap;93,2717
	Oid			currentlyReindexedIndex;94,2748
	int			numPendingReindexedIndexes;95,2780
	Oid			pendingReindexedIndexes[pendingReindexedIndexes96,2815
} SerializedReindexState;97,2870
relationHasPrimaryKey(147,4651
index_check_primary_key(201,6470
ConstructTupleDescriptor(267,8457
InitializeAttributeOids(470,14707
AppendAttributeTuples(488,15161
UpdateIndexRelation(529,16194
index_create(693,22044
index_concurrently_create_copy(1234,39427
index_concurrently_build(1393,44529
index_concurrently_swap(1441,46015
index_concurrently_set_dead(1731,55064
index_constraint_create(1792,57433
index_drop(2011,64050
BuildIndexInfo(2298,75010
BuildDummyIndexInfo(2357,76919
CompareIndexInfo(2403,78210
BuildSpeculativeIndexInfo(2522,81507
FormIndexDatum(2582,83560
index_update_stats(2661,86118
index_build(2809,90713
IndexCheckExclusion(3004,97992
validate_index(3160,104427
validate_index_callback(3288,108160
index_set_state_flags(3316,109248
IndexGetRelation(3395,111747
reindex_index(3420,112287
reindex_relation(3657,121045
static Oid	currentlyReindexedHeap 3788,124878
static Oid	currentlyReindexedIndex 3789,124926
static List *pendingReindexedIndexes pendingReindexedIndexes3790,124975
static int	reindexingNestLevel 3791,125019
ReindexIsProcessingHeap(3798,125159
ReindexIsCurrentlyProcessingIndex(3808,125365
ReindexIsProcessingIndex(3819,125636
SetReindexProcessing(3830,125884
ResetReindexProcessing(3849,126472
SetReindexPending(3863,126814
RemoveReindexPending(3879,127265
ResetReindexState(3892,127591
EstimateReindexStateSpace(3921,128417
SerializeReindexState(3932,128672
RestoreReindexState(3950,129219

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_foreign_table_d.h,255
#define PG_FOREIGN_TABLE_D_H19,587
#define ForeignTableRelationId 21,617
#define Anum_pg_foreign_table_ftrelid 23,654
#define Anum_pg_foreign_table_ftserver 24,694
#define Anum_pg_foreign_table_ftoptions 25,735
#define Natts_pg_foreign_table 27,778

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/namespace.c,3926
static List *activeSearchPath activeSearchPath138,6125
static Oid	activeCreationNamespace 141,6226
static bool activeTempCreationPending 144,6353
static uint64 activePathGeneration 147,6464
static List *baseSearchPath baseSearchPath151,6584
static Oid	baseCreationNamespace 153,6620
static bool baseTempCreationPending 155,6668
static Oid	namespaceUser 157,6714
static bool baseSearchPathValid 160,6820
	List	   *searchPath;searchPath166,6959
	Oid			creationNamespace;167,7012
	int			nestLevel;168,7075
} OverrideStackEntry;169,7129
static List *overrideStack overrideStack171,7152
static Oid	myTempNamespace 188,8030
static Oid	myTempToastNamespace 190,8072
static SubTransactionId myTempNamespaceSubID 192,8119
char	   *namespace_search_path namespace_search_path198,8312
RangeVarGetRelidExtended(236,9625
RangeVarGetCreationNamespace(449,16586
RangeVarGetAndCheckCreationNamespace(534,19340
RangeVarAdjustRelationPersistence(641,22552
RelnameGetRelid(680,23780
RelationIsVisible(708,24308
TypenameGetTypid(771,25733
TypenameGetTypidExtended(784,26031
TypeIsVisible(816,26751
FuncnameGetCandidates(942,31780
MatchNamedCall(1305,41763
FunctionIsVisible(1413,44500
OpernameGetOprid(1484,46490
OpernameGetCandidates(1587,49217
#define SPACE_PER_OP 1627,50509
OperatorIsVisible(1747,53775
OpclassnameGetOpcid(1800,55258
OpclassIsVisible(1833,56003
OpfamilynameGetOpfid(1883,57398
OpfamilyIsVisible(1916,58153
lookup_collation(1963,59462
CollationGetCollid(2014,60892
CollationIsVisible(2048,61687
ConversionGetConid(2099,63084
ConversionIsVisible(2131,63795
get_statistics_object_oid(2178,65077
StatisticsObjIsVisible(2235,66581
get_ts_parser_oid(2300,68192
TSParserIsVisible(2358,69640
get_ts_dict_oid(2426,71275
TSDictionaryIsVisible(2484,72732
get_ts_template_oid(2553,74387
TSTemplateIsVisible(2611,75872
get_ts_config_oid(2679,77526
TSConfigIsVisible(2737,79019
DeconstructQualifiedName(2809,80755
LookupNamespaceNoError(2863,82114
LookupExplicitNamespace(2893,82844
LookupCreationNamespace(2936,84097
CheckSetNamespace(2967,84825
QualifiedNameGetCreationNamespace(2995,85886
get_namespace_oid(3043,87054
makeRangeVarFromNameList(3062,87508
NameListToString(3102,88527
NameListToQuotedString(3136,89274
isTempNamespace(3157,89656
isTempToastNamespace(3169,89893
isTempOrTempToastNamespace(3181,90183
isAnyTempNamespace(3195,90558
isOtherTempNamespace(3218,91253
checkTempNamespaceStatus(3237,91895
GetTempNamespaceBackendId(3274,92935
GetTempToastNamespace(3299,93678
GetTempNamespaceState(3313,93979
SetTempNamespaceState(3329,94546
GetOverrideSearchPath(3360,95627
CopyOverrideSearchPath(3397,96505
OverrideSearchPathMatchesCurrent(3419,97196
PushOverrideSearchPath(3490,99399
PopOverrideSearchPath(3557,101317
get_collation_oid(3601,102532
get_conversion_oid(3655,103820
FindDefaultConversionProc(3710,105169
recomputeNamespacePath(3737,105710
AccessTempTableNamespace(3915,110984
InitTempTableNamespace(3943,111648
AtEOXact_Namespace(4064,116220
AtEOSubXact_Namespace(4132,118325
RemoveTempRelations(4217,120884
RemoveTempRelationsCallback(4243,121637
ResetTempTableNamespace(4261,122011
check_search_path(4274,122240
assign_search_path(4308,123135
InitializeSearchPath(4324,123576
NamespaceCallback(4365,124682
fetch_search_path(4383,125235
fetch_search_path_array(4423,126454
pg_table_is_visible(4460,127503
pg_type_is_visible(4471,127706
pg_function_is_visible(4482,127905
pg_operator_is_visible(4493,128112
pg_opclass_is_visible(4504,128319
pg_opfamily_is_visible(4515,128523
pg_collation_is_visible(4526,128734
pg_conversion_is_visible(4537,128943
pg_statistics_obj_is_visible(4548,129154
pg_ts_parser_is_visible(4559,129375
pg_ts_dict_is_visible(4570,129587
pg_ts_template_is_visible(4581,129799
pg_ts_config_is_visible(4592,130017
pg_my_temp_schema(4603,130229
pg_is_other_temp_schema(4609,130309

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_publication_d.h,521
#define PG_PUBLICATION_D_H19,581
#define PublicationRelationId 21,609
#define Anum_pg_publication_oid 23,645
#define Anum_pg_publication_pubname 24,679
#define Anum_pg_publication_pubowner 25,717
#define Anum_pg_publication_puballtables 26,756
#define Anum_pg_publication_pubinsert 27,799
#define Anum_pg_publication_pubupdate 28,839
#define Anum_pg_publication_pubdelete 29,879
#define Anum_pg_publication_pubtruncate 30,919
#define Anum_pg_publication_pubviaroot 31,961
#define Natts_pg_publication 33,1003

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_statistic_ext_d.h,599
#define PG_STATISTIC_EXT_D_H19,587
#define StatisticExtRelationId 21,617
#define Anum_pg_statistic_ext_oid 23,654
#define Anum_pg_statistic_ext_stxrelid 24,690
#define Anum_pg_statistic_ext_stxname 25,731
#define Anum_pg_statistic_ext_stxnamespace 26,771
#define Anum_pg_statistic_ext_stxowner 27,816
#define Anum_pg_statistic_ext_stxstattarget 28,857
#define Anum_pg_statistic_ext_stxkeys 29,903
#define Anum_pg_statistic_ext_stxkind 30,943
#define Natts_pg_statistic_ext 32,984
#define STATS_EXT_NDISTINCT	35,1019
#define STATS_EXT_DEPENDENCIES	36,1053
#define STATS_EXT_MCV	37,1089

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_operator_d.h,3144
#define PG_OPERATOR_D_H19,572
#define OperatorRelationId 21,597
#define Anum_pg_operator_oid 23,630
#define Anum_pg_operator_oprname 24,661
#define Anum_pg_operator_oprnamespace 25,696
#define Anum_pg_operator_oprowner 26,736
#define Anum_pg_operator_oprkind 27,772
#define Anum_pg_operator_oprcanmerge 28,807
#define Anum_pg_operator_oprcanhash 29,846
#define Anum_pg_operator_oprleft 30,884
#define Anum_pg_operator_oprright 31,919
#define Anum_pg_operator_oprresult 32,955
#define Anum_pg_operator_oprcom 33,993
#define Anum_pg_operator_oprnegate 34,1028
#define Anum_pg_operator_oprcode 35,1066
#define Anum_pg_operator_oprrest 36,1102
#define Anum_pg_operator_oprjoin 37,1138
#define Natts_pg_operator 39,1175
#define BooleanNotEqualOperator 41,1205
#define BooleanEqualOperator 42,1240
#define Int4EqualOperator 43,1272
#define Int4LessOperator 44,1301
#define TextEqualOperator 45,1329
#define NameEqualTextOperator 46,1358
#define NameLessTextOperator 47,1392
#define NameGreaterEqualTextOperator 48,1425
#define TIDEqualOperator 49,1466
#define TIDLessOperator 50,1495
#define Int8LessOperator 51,1524
#define OID_NAME_REGEXEQ_OP 52,1553
#define OID_TEXT_REGEXEQ_OP 53,1585
#define TextLessOperator 54,1617
#define TextGreaterEqualOperator 55,1646
#define Float8LessOperator 56,1683
#define BpcharEqualOperator 57,1714
#define OID_BPCHAR_REGEXEQ_OP 58,1747
#define BpcharLessOperator 59,1782
#define BpcharGreaterEqualOperator 60,1814
#define ARRAY_EQ_OP 61,1854
#define ARRAY_LT_OP 62,1879
#define ARRAY_GT_OP 63,1904
#define OID_NAME_LIKE_OP 64,1929
#define OID_TEXT_LIKE_OP 65,1959
#define OID_BPCHAR_LIKE_OP 66,1989
#define OID_NAME_ICREGEXEQ_OP 67,2021
#define OID_TEXT_ICREGEXEQ_OP 68,2056
#define OID_BPCHAR_ICREGEXEQ_OP 69,2091
#define OID_INET_SUB_OP 70,2128
#define OID_INET_SUBEQ_OP 71,2156
#define OID_INET_SUP_OP 72,2186
#define OID_INET_SUPEQ_OP 73,2214
#define OID_INET_OVERLAP_OP 74,2244
#define OID_NAME_ICLIKE_OP 75,2277
#define OID_TEXT_ICLIKE_OP 76,2309
#define OID_BPCHAR_ICLIKE_OP 77,2341
#define ByteaEqualOperator 78,2375
#define ByteaLessOperator 79,2407
#define ByteaGreaterEqualOperator 80,2438
#define OID_BYTEA_LIKE_OP 81,2477
#define TextPatternLessOperator 82,2508
#define TextPatternGreaterEqualOperator 83,2545
#define BpcharPatternLessOperator 84,2590
#define BpcharPatternGreaterEqualOperator 85,2629
#define OID_ARRAY_OVERLAP_OP 86,2676
#define OID_ARRAY_CONTAINS_OP 87,2710
#define OID_ARRAY_CONTAINED_OP 88,2745
#define RECORD_EQ_OP 89,2781
#define RECORD_LT_OP 90,2807
#define RECORD_GT_OP 91,2833
#define OID_RANGE_LESS_OP 92,2859
#define OID_RANGE_LESS_EQUAL_OP 93,2890
#define OID_RANGE_GREATER_EQUAL_OP 94,2927
#define OID_RANGE_GREATER_OP 95,2967
#define OID_RANGE_OVERLAP_OP 96,3001
#define OID_RANGE_CONTAINS_ELEM_OP 97,3035
#define OID_RANGE_CONTAINS_OP 98,3075
#define OID_RANGE_ELEM_CONTAINED_OP 99,3110
#define OID_RANGE_CONTAINED_OP 100,3151
#define OID_RANGE_LEFT_OP 101,3187
#define OID_RANGE_RIGHT_OP 102,3218
#define OID_RANGE_OVERLAPS_LEFT_OP 103,3250
#define OID_RANGE_OVERLAPS_RIGHT_OP 104,3290

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_event_trigger_d.h,437
#define PG_EVENT_TRIGGER_D_H19,587
#define EventTriggerRelationId 21,617
#define Anum_pg_event_trigger_oid 23,654
#define Anum_pg_event_trigger_evtname 24,690
#define Anum_pg_event_trigger_evtevent 25,730
#define Anum_pg_event_trigger_evtowner 26,771
#define Anum_pg_event_trigger_evtfoid 27,812
#define Anum_pg_event_trigger_evtenabled 28,852
#define Anum_pg_event_trigger_evttags 29,895
#define Natts_pg_event_trigger 31,936

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_collation.c,25
CollationCreate(46,1237

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_default_acl_d.h,520
#define PG_DEFAULT_ACL_D_H19,581
#define DefaultAclRelationId 21,609
#define Anum_pg_default_acl_oid 23,643
#define Anum_pg_default_acl_defaclrole 24,677
#define Anum_pg_default_acl_defaclnamespace 25,718
#define Anum_pg_default_acl_defaclobjtype 26,764
#define Anum_pg_default_acl_defaclacl 27,808
#define Natts_pg_default_acl 29,849
#define DEFACLOBJ_RELATION	37,1051
#define DEFACLOBJ_SEQUENCE	38,1101
#define DEFACLOBJ_FUNCTION	39,1148
#define DEFACLOBJ_TYPE	40,1195
#define DEFACLOBJ_NAMESPACE	41,1235

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_shdepend.c,974
	LOCAL_OBJECT,71,2163
	SHARED_OBJECT,72,2178
	REMOTE_OBJECT73,2194
} SharedDependencyObjectType;74,2209
	ObjectAddress object;78,2257
	char		deptype;79,2280
	SharedDependencyObjectType objtype;80,2296
} ShDependObjectInfo;81,2333
recordSharedDependencyOn(120,3777
recordDependencyOnOwner(164,4954
shdepChangeDep(199,6052
changeDependencyOnOwner(309,9122
getOidListDiff(356,10776
updateAclDependencies(426,12819
	Oid			dbOid;501,14732
	int			count;502,14746
} remoteDep;503,14760
shared_dependency_comparator(509,14841
checkSharedDependencies(577,17097
#define MAX_REPORTED_DEPS 605,17965
copyTemplateDependencies(795,22852
dropDatabaseDependencies(859,24632
deleteSharedDependencyRecordsFor(907,25949
shdepAddDependency(929,26495
shdepDropDependency(984,28337
classIdGetDbId(1050,30090
shdepLockAndCheckObject(1071,30493
storeObjectDescription(1144,32631
isSharedObjectPinned(1195,33941
shdepDropOwned(1247,35387
shdepReassignOwned(1401,39510

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/schemapg.h,394
#define SCHEMAPG_H19,571
#define Schema_pg_proc 21,591
#define Schema_pg_type 52,4164
#define Schema_pg_attribute 85,7925
#define Schema_pg_class 112,11000
#define Schema_pg_index 147,15060
#define Schema_pg_database 169,17520
#define Schema_pg_authid 185,19269
#define Schema_pg_auth_members 199,20774
#define Schema_pg_shseclabel 205,21276
#define Schema_pg_subscription 211,21780

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_subscription_rel_d.h,586
#define PG_SUBSCRIPTION_REL_D_H19,596
#define SubscriptionRelRelationId 21,629
#define Anum_pg_subscription_rel_srsubid 23,669
#define Anum_pg_subscription_rel_srrelid 24,712
#define Anum_pg_subscription_rel_srsubstate 25,755
#define Anum_pg_subscription_rel_srsublsn 26,801
#define Natts_pg_subscription_rel 28,846
#define SUBREL_STATE_INIT	35,951
#define SUBREL_STATE_DATASYNC	36,1015
#define SUBREL_STATE_SYNCDONE	38,1108
#define SUBREL_STATE_READY	40,1216
#define SUBREL_STATE_UNKNOWN	43,1345
#define SUBREL_STATE_SYNCWAIT	44,1399
#define SUBREL_STATE_CATCHUP	45,1456

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_cast_d.h,643
#define PG_CAST_D_H19,560
#define CastRelationId 21,581
#define Anum_pg_cast_oid 23,610
#define Anum_pg_cast_castsource 24,637
#define Anum_pg_cast_casttarget 25,671
#define Anum_pg_cast_castfunc 26,705
#define Anum_pg_cast_castcontext 27,737
#define Anum_pg_cast_castmethod 28,772
#define Natts_pg_cast 30,807
typedef enum CoercionCodes42,1253
	COERCION_CODE_IMPLICIT 44,1282
	COERCION_CODE_ASSIGNMENT 45,1353
	COERCION_CODE_EXPLICIT 46,1426
} CoercionCodes;47,1486
typedef enum CoercionMethod54,1695
	COERCION_METHOD_FUNCTION 56,1725
	COERCION_METHOD_BINARY 57,1779
	COERCION_METHOD_INOUT 58,1844
} CoercionMethod;59,1906

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_language_d.h,578
#define PG_LANGUAGE_D_H19,572
#define LanguageRelationId 21,597
#define Anum_pg_language_oid 23,630
#define Anum_pg_language_lanname 24,661
#define Anum_pg_language_lanowner 25,696
#define Anum_pg_language_lanispl 26,732
#define Anum_pg_language_lanpltrusted 27,767
#define Anum_pg_language_lanplcallfoid 28,807
#define Anum_pg_language_laninline 29,848
#define Anum_pg_language_lanvalidator 30,885
#define Anum_pg_language_lanacl 31,925
#define Natts_pg_language 33,960
#define INTERNALlanguageId 35,989
#define ClanguageId 36,1019
#define SQLlanguageId 37,1042

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_range_d.h,338
#define PG_RANGE_D_H19,563
#define RangeRelationId 21,585
#define Anum_pg_range_rngtypid 23,615
#define Anum_pg_range_rngsubtype 24,648
#define Anum_pg_range_rngcollation 25,683
#define Anum_pg_range_rngsubopc 26,720
#define Anum_pg_range_rngcanonical 27,754
#define Anum_pg_range_rngsubdiff 28,791
#define Natts_pg_range 30,827

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_transform_d.h,313
#define PG_TRANSFORM_D_H19,575
#define TransformRelationId 21,601
#define Anum_pg_transform_oid 23,635
#define Anum_pg_transform_trftype 24,667
#define Anum_pg_transform_trflang 25,703
#define Anum_pg_transform_trffromsql 26,739
#define Anum_pg_transform_trftosql 27,778
#define Natts_pg_transform 29,816

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_constraint.c,543
CreateConstraintEntry(50,1380
ConstraintNameIsUsed(372,11205
ConstraintNameExists(417,12453
ChooseConstraintName(471,14189
RemoveConstraintById(541,15589
RenameConstraintById(632,18112
AlterConstraintNamespaces(684,19674
ConstraintSetParentConstraint(753,21649
get_relation_constraint_oid(822,23774
get_relation_constraint_attnos(879,25453
get_relation_idx_constraint_oid(964,27799
get_domain_constraint_oid(1004,28753
get_primary_key_attnos(1063,30513
DeconstructFkConstraintRow(1148,32950
check_functional_grouping(1266,37316

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/dependency.c,1989
	int			flags;92,2830
	ObjectAddress dependee;93,2887
} ObjectAddressExtra;94,2957
#define DEPFLAG_ORIGINAL	97,3015
#define DEPFLAG_NORMAL	98,3081
#define DEPFLAG_AUTO	99,3148
#define DEPFLAG_INTERNAL	100,3211
#define DEPFLAG_PARTITION	101,3281
#define DEPFLAG_EXTENSION	102,3353
#define DEPFLAG_REVERSE	103,3425
#define DEPFLAG_IS_PART	104,3495
#define DEPFLAG_SUBOBJECT	105,3560
struct ObjectAddresses109,3680
	ObjectAddress *refs;refs111,3705
	ObjectAddressExtra *extras;extras112,3752
	int			numrefs;113,3826
	int			maxrefs;114,3878
typedef struct ObjectAddressStack120,4058
	const ObjectAddress *object;object122,4094
	int			flags;123,4151
	struct ObjectAddressStack *next;next124,4195
} ObjectAddressStack;125,4258
	ObjectAddress obj;130,4346
	int			subflags;131,4413
} ObjectAddressAndFlags;132,4478
	ObjectAddresses *addrs;addrs137,4559
	List	   *rtables;rtables138,4619
} find_expr_references_context;139,4681
static const Oid object_classes[object_classes145,4828
deleteObjectsInList(224,8189
performDeletion(312,11359
performMultipleDeletions(371,12954
findDependentObjects(471,16584
reportDependentObjects(1024,35170
#define MAX_REPORTED_DEPS 1086,37356
DropObjectById(1231,41666
deleteOneObject(1288,43012
doDeletion(1392,45964
AcquireDeletionLock(1530,49226
ReleaseDeletionLock(1559,50024
recordDependencyOnExpr(1584,50891
recordDependencyOnSingleRelExpr(1627,52468
find_expr_references_walker(1730,55463
eliminate_duplicate_dependencies(2308,73857
object_address_comparator(2368,75409
new_object_addresses(2412,76701
add_object_address(2434,77157
add_exact_object_address(2467,77989
add_exact_object_address_extra(2492,78567
object_address_present(2527,79562
object_address_present_add_flags(2553,80133
stack_address_present_add_flags(2626,82505
record_object_address_dependencies(2676,83796
sort_object_addresses(2695,84471
free_object_addresses(2707,84719
getObjectClass(2722,85097
DeleteInitPrivs(2857,87818

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_replication_origin_d.h,230
#define PG_REPLICATION_ORIGIN_D_H19,602
#define ReplicationOriginRelationId 21,637
#define Anum_pg_replication_origin_roident 23,679
#define Anum_pg_replication_origin_roname 24,724
#define Natts_pg_replication_origin 26,769

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_auth_members_d.h,333
#define PG_AUTH_MEMBERS_D_H19,584
#define AuthMemRelationId 21,613
#define AuthMemRelation_Rowtype_Id 22,644
#define Anum_pg_auth_members_roleid 24,685
#define Anum_pg_auth_members_member 25,723
#define Anum_pg_auth_members_grantor 26,761
#define Anum_pg_auth_members_admin_option 27,800
#define Natts_pg_auth_members 29,845

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_ts_config_map_d.h,302
#define PG_TS_CONFIG_MAP_D_H19,587
#define TSConfigMapRelationId 21,617
#define Anum_pg_ts_config_map_mapcfg 23,653
#define Anum_pg_ts_config_map_maptokentype 24,692
#define Anum_pg_ts_config_map_mapseqno 25,737
#define Anum_pg_ts_config_map_mapdict 26,778
#define Natts_pg_ts_config_map 28,819

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_amproc_d.h,360
#define PG_AMPROC_D_H19,566
#define AccessMethodProcedureRelationId 21,589
#define Anum_pg_amproc_oid 23,635
#define Anum_pg_amproc_amprocfamily 24,664
#define Anum_pg_amproc_amproclefttype 25,702
#define Anum_pg_amproc_amprocrighttype 26,742
#define Anum_pg_amproc_amprocnum 27,783
#define Anum_pg_amproc_amproc 28,818
#define Natts_pg_amproc 30,851

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_namespace_d.h,375
#define PG_NAMESPACE_D_H19,575
#define NamespaceRelationId 21,601
#define Anum_pg_namespace_oid 23,635
#define Anum_pg_namespace_nspname 24,667
#define Anum_pg_namespace_nspowner 25,703
#define Anum_pg_namespace_nspacl 26,740
#define Natts_pg_namespace 28,776
#define PG_CATALOG_NAMESPACE 30,806
#define PG_TOAST_NAMESPACE 31,838
#define PG_PUBLIC_NAMESPACE 32,868

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_index_d.h,997
#define PG_INDEX_D_H19,563
#define IndexRelationId 21,585
#define Anum_pg_index_indexrelid 23,615
#define Anum_pg_index_indrelid 24,650
#define Anum_pg_index_indnatts 25,683
#define Anum_pg_index_indnkeyatts 26,716
#define Anum_pg_index_indisunique 27,752
#define Anum_pg_index_indisprimary 28,788
#define Anum_pg_index_indisexclusion 29,825
#define Anum_pg_index_indimmediate 30,864
#define Anum_pg_index_indisclustered 31,901
#define Anum_pg_index_indisvalid 32,940
#define Anum_pg_index_indcheckxmin 33,976
#define Anum_pg_index_indisready 34,1014
#define Anum_pg_index_indislive 35,1050
#define Anum_pg_index_indisreplident 36,1085
#define Anum_pg_index_indkey 37,1125
#define Anum_pg_index_indcollation 38,1157
#define Anum_pg_index_indclass 39,1195
#define Anum_pg_index_indoption 40,1229
#define Anum_pg_index_indexprs 41,1264
#define Anum_pg_index_indpred 42,1298
#define Natts_pg_index 44,1332
#define INDOPTION_DESC	52,1542
#define INDOPTION_NULLS_FIRST	53,1608

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_operator.c,216
validOperatorName(74,2104
OperatorGet(130,3435
OperatorLookup(170,4293
OperatorShellMake(199,4861
OperatorCreate(327,9375
get_other_operator(585,17462
OperatorUpd(654,19519
makeOperatorDependencies(773,22943

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_largeobject_metadata_d.h,290
#define PG_LARGEOBJECT_METADATA_D_H19,608
#define LargeObjectMetadataRelationId 21,645
#define Anum_pg_largeobject_metadata_oid 23,689
#define Anum_pg_largeobject_metadata_lomowner 24,732
#define Anum_pg_largeobject_metadata_lomacl 25,780
#define Natts_pg_largeobject_metadata 27,827

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/catalog.c,345
IsSystemRelation(68,2053
IsSystemClass(80,2343
IsCatalogRelation(98,2905
IsCatalogRelationOid(115,3410
IsToastRelation(140,4244
IsToastClass(160,4968
IsCatalogNamespace(177,5333
IsToastNamespace(195,5932
IsReservedName(212,6336
IsSharedRelation(238,7347
GetNewOidWithIndex(317,10710
GetNewRelFileNode(380,12623
pg_nextoid(464,14887

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_partitioned_table_d.h,542
#define PG_PARTITIONED_TABLE_D_H19,599
#define PartitionedRelationId 21,633
#define Anum_pg_partitioned_table_partrelid 23,669
#define Anum_pg_partitioned_table_partstrat 24,715
#define Anum_pg_partitioned_table_partnatts 25,761
#define Anum_pg_partitioned_table_partdefid 26,807
#define Anum_pg_partitioned_table_partattrs 27,853
#define Anum_pg_partitioned_table_partclass 28,899
#define Anum_pg_partitioned_table_partcollation 29,945
#define Anum_pg_partitioned_table_partexprs 30,995
#define Natts_pg_partitioned_table 32,1042

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_ts_parser_d.h,447
#define PG_TS_PARSER_D_H19,575
#define TSParserRelationId 21,601
#define Anum_pg_ts_parser_oid 23,634
#define Anum_pg_ts_parser_prsname 24,666
#define Anum_pg_ts_parser_prsnamespace 25,702
#define Anum_pg_ts_parser_prsstart 26,743
#define Anum_pg_ts_parser_prstoken 27,780
#define Anum_pg_ts_parser_prsend 28,817
#define Anum_pg_ts_parser_prsheadline 29,852
#define Anum_pg_ts_parser_prslextype 30,892
#define Natts_pg_ts_parser 32,932

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_ts_config_d.h,316
#define PG_TS_CONFIG_D_H19,575
#define TSConfigRelationId 21,601
#define Anum_pg_ts_config_oid 23,634
#define Anum_pg_ts_config_cfgname 24,666
#define Anum_pg_ts_config_cfgnamespace 25,702
#define Anum_pg_ts_config_cfgowner 26,743
#define Anum_pg_ts_config_cfgparser 27,780
#define Natts_pg_ts_config 29,819

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_depend_d.h,374
#define PG_DEPEND_D_H19,566
#define DependRelationId 21,589
#define Anum_pg_depend_classid 23,620
#define Anum_pg_depend_objid 24,653
#define Anum_pg_depend_objsubid 25,684
#define Anum_pg_depend_refclassid 26,718
#define Anum_pg_depend_refobjid 27,754
#define Anum_pg_depend_refobjsubid 28,788
#define Anum_pg_depend_deptype 29,825
#define Natts_pg_depend 31,859

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_description_d.h,290
#define PG_DESCRIPTION_D_H19,581
#define DescriptionRelationId 21,609
#define Anum_pg_description_objoid 23,645
#define Anum_pg_description_classoid 24,682
#define Anum_pg_description_objsubid 25,721
#define Anum_pg_description_description 26,760
#define Natts_pg_description 28,803

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_authid_d.h,1062
#define PG_AUTHID_D_H19,566
#define AuthIdRelationId 21,589
#define AuthIdRelation_Rowtype_Id 22,619
#define Anum_pg_authid_oid 24,659
#define Anum_pg_authid_rolname 25,688
#define Anum_pg_authid_rolsuper 26,721
#define Anum_pg_authid_rolinherit 27,755
#define Anum_pg_authid_rolcreaterole 28,791
#define Anum_pg_authid_rolcreatedb 29,830
#define Anum_pg_authid_rolcanlogin 30,867
#define Anum_pg_authid_rolreplication 31,904
#define Anum_pg_authid_rolbypassrls 32,944
#define Anum_pg_authid_rolconnlimit 33,982
#define Anum_pg_authid_rolpassword 34,1021
#define Anum_pg_authid_rolvaliduntil 35,1059
#define Natts_pg_authid 37,1100
#define BOOTSTRAP_SUPERUSERID 39,1128
#define DEFAULT_ROLE_MONITOR 40,1161
#define DEFAULT_ROLE_READ_ALL_SETTINGS 41,1195
#define DEFAULT_ROLE_READ_ALL_STATS 42,1239
#define DEFAULT_ROLE_STAT_SCAN_TABLES 43,1280
#define DEFAULT_ROLE_READ_SERVER_FILES 44,1323
#define DEFAULT_ROLE_WRITE_SERVER_FILES 45,1367
#define DEFAULT_ROLE_EXECUTE_SERVER_PROGRAM 46,1412
#define DEFAULT_ROLE_SIGNAL_BACKENDID 47,1461

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_inherits.c,317
typedef struct SeenRelsEntry37,1151
	Oid			rel_id;39,1182
	int			list_index;40,1218
} SeenRelsEntry;41,1275
find_inheritance_children(55,1740
find_all_inheritors(165,4564
has_subclass(266,7806
has_superclass(286,8355
typeInheritsFrom(315,9273
StoreSingleInheritance(417,11966
DeleteInheritsTuple(454,12992

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_constraint_d.h,1469
#define PG_CONSTRAINT_D_H19,578
#define ConstraintRelationId 21,605
#define Anum_pg_constraint_oid 23,640
#define Anum_pg_constraint_conname 24,673
#define Anum_pg_constraint_connamespace 25,710
#define Anum_pg_constraint_contype 26,752
#define Anum_pg_constraint_condeferrable 27,789
#define Anum_pg_constraint_condeferred 28,832
#define Anum_pg_constraint_convalidated 29,873
#define Anum_pg_constraint_conrelid 30,915
#define Anum_pg_constraint_contypid 31,953
#define Anum_pg_constraint_conindid 32,991
#define Anum_pg_constraint_conparentid 33,1030
#define Anum_pg_constraint_confrelid 34,1072
#define Anum_pg_constraint_confupdtype 35,1112
#define Anum_pg_constraint_confdeltype 36,1154
#define Anum_pg_constraint_confmatchtype 37,1196
#define Anum_pg_constraint_conislocal 38,1240
#define Anum_pg_constraint_coninhcount 39,1281
#define Anum_pg_constraint_connoinherit 40,1323
#define Anum_pg_constraint_conkey 41,1366
#define Anum_pg_constraint_confkey 42,1403
#define Anum_pg_constraint_conpfeqop 43,1441
#define Anum_pg_constraint_conppeqop 44,1481
#define Anum_pg_constraint_conffeqop 45,1521
#define Anum_pg_constraint_conexclop 46,1561
#define Anum_pg_constraint_conbin 47,1601
#define Natts_pg_constraint 49,1639
#define CONSTRAINT_CHECK	53,1703
#define CONSTRAINT_FOREIGN	54,1734
#define CONSTRAINT_PRIMARY	55,1767
#define CONSTRAINT_UNIQUE	56,1800
#define CONSTRAINT_TRIGGER	57,1832
#define CONSTRAINT_EXCLUSION	58,1865

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_enum_d.h,242
#define PG_ENUM_D_H19,560
#define EnumRelationId 21,581
#define Anum_pg_enum_oid 23,610
#define Anum_pg_enum_enumtypid 24,637
#define Anum_pg_enum_enumsortorder 25,670
#define Anum_pg_enum_enumlabel 26,707
#define Natts_pg_enum 28,741

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_proc.c,409
	char	   *proname;proname49,1287
	char	   *prosrc;prosrc50,1306
} parse_error_callback_arg;51,1324
ProcedureCreate(69,2036
fmgr_internal_validator(704,22707
fmgr_c_validator(750,23829
fmgr_sql_validator(798,25128
sql_function_parse_error_callback(930,28811
function_parse_error_transpose(954,29766
match_prosrc_to_query(1011,31400
match_prosrc_to_literal(1069,33184
oid_array_to_list(1126,34403

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_db_role_setting_d.h,269
#define PG_DB_ROLE_SETTING_D_H19,593
#define DbRoleSettingRelationId 21,625
#define Anum_pg_db_role_setting_setdatabase 23,663
#define Anum_pg_db_role_setting_setrole 24,709
#define Anum_pg_db_role_setting_setconfig 25,751
#define Natts_pg_db_role_setting 27,796

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/objectaddress.c,2525
	const char *class_descr;class_descr100,2979
	Oid			class_oid;101,3070
	Oid			oid_index_oid;102,3110
	int			oid_catcache_id;103,3172
	int			name_catcache_id;104,3238
	AttrNumber	attnum_oid;107,3382
	AttrNumber	attnum_name;108,3444
	AttrNumber	attnum_namespace;109,3496
	AttrNumber	attnum_owner;110,3558
	AttrNumber	attnum_acl;111,3612
	ObjectType	objtype;112,3663
	bool		is_nsp_name_unique;113,3720
} ObjectPropertyType;117,3922
static const ObjectPropertyType ObjectProperty[ObjectProperty119,3945
static const struct object_type_map630,13653
	const char *tm_name;tm_name632,13691
	ObjectType	tm_type;633,13713
			ObjectTypeMap[ObjectTypeMap636,13737
const ObjectAddress InvalidObjectAddress 846,17074
get_object_address(929,21025
get_object_address_rv(1224,30738
get_object_address_unqualified(1246,31320
get_relation_by_qualified_name(1332,33859
get_object_address_relobject(1414,36360
get_object_address_attribute(1493,38447
get_object_address_attrdef(1544,39867
get_object_address_type(1630,42166
get_object_address_opcf(1669,43054
get_object_address_opf_member(1707,44087
get_object_address_usermapping(1819,46990
get_object_address_publication_rel(1890,48843
get_object_address_defacl(1942,50203
textarray_to_strvaluelist(2058,53063
pg_get_object_address(2085,53608
check_object_ownership(2366,61164
get_object_namespace(2589,68493
read_objtype_from_string(2628,69657
get_object_class_descr(2648,70101
get_object_oid_index(2656,70245
get_object_catcache_oid(2664,70389
get_object_catcache_name(2672,70538
get_object_attnum_oid(2680,70696
get_object_attnum_name(2688,70845
get_object_attnum_namespace(2696,70996
get_object_attnum_owner(2704,71157
get_object_attnum_acl(2712,71310
get_object_type(2727,71696
get_object_namensp_unique(2745,72126
is_objectclass_supported(2757,72385
get_object_property_data(2774,72680
get_catalog_object_by_oid(2809,73559
getObjectDescription(2857,74664
getObjectDescriptionOids(3952,102292
getRelationDescription(3969,102621
getOpFamilyDescription(4044,104401
pg_describe_object(4086,105521
pg_identify_object(4114,106156
pg_identify_object_as_address(4244,109529
getObjectTypeDescription(4318,111310
getRelationTypeDescription(4499,115260
getConstraintTypeDescription(4562,116814
getProcedureTypeDescription(4599,117871
getObjectIdentity(4636,118910
getObjectIdentityParts(4651,119422
getOpFamilyIdentity(5798,147888
getRelationIdentity(5842,149065
strlist_to_textarray(5876,149876
get_relkind_objtype(5931,151153

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_shdescription_d.h,261
#define PG_SHDESCRIPTION_D_H19,587
#define SharedDescriptionRelationId 21,617
#define Anum_pg_shdescription_objoid 23,659
#define Anum_pg_shdescription_classoid 24,698
#define Anum_pg_shdescription_description 25,739
#define Natts_pg_shdescription 27,784

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_user_mapping_d.h,289
#define PG_USER_MAPPING_D_H19,584
#define UserMappingRelationId 21,613
#define Anum_pg_user_mapping_oid 23,649
#define Anum_pg_user_mapping_umuser 24,684
#define Anum_pg_user_mapping_umserver 25,722
#define Anum_pg_user_mapping_umoptions 26,762
#define Natts_pg_user_mapping 28,804

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_seclabel_d.h,305
#define PG_SECLABEL_D_H19,572
#define SecLabelRelationId 21,597
#define Anum_pg_seclabel_objoid 23,630
#define Anum_pg_seclabel_classoid 24,664
#define Anum_pg_seclabel_objsubid 25,700
#define Anum_pg_seclabel_provider 26,736
#define Anum_pg_seclabel_label 27,772
#define Natts_pg_seclabel 29,806

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_trigger_d.h,2104
#define PG_TRIGGER_D_H19,569
#define TriggerRelationId 21,593
#define Anum_pg_trigger_oid 23,625
#define Anum_pg_trigger_tgrelid 24,655
#define Anum_pg_trigger_tgparentid 25,689
#define Anum_pg_trigger_tgname 26,726
#define Anum_pg_trigger_tgfoid 27,759
#define Anum_pg_trigger_tgtype 28,792
#define Anum_pg_trigger_tgenabled 29,825
#define Anum_pg_trigger_tgisinternal 30,861
#define Anum_pg_trigger_tgconstrrelid 31,900
#define Anum_pg_trigger_tgconstrindid 32,940
#define Anum_pg_trigger_tgconstraint 33,981
#define Anum_pg_trigger_tgdeferrable 34,1021
#define Anum_pg_trigger_tginitdeferred 35,1061
#define Anum_pg_trigger_tgnargs 36,1103
#define Anum_pg_trigger_tgattr 37,1138
#define Anum_pg_trigger_tgargs 38,1172
#define Anum_pg_trigger_tgqual 39,1206
#define Anum_pg_trigger_tgoldtable 40,1240
#define Anum_pg_trigger_tgnewtable 41,1278
#define Natts_pg_trigger 43,1317
#define TRIGGER_TYPE_ROW	47,1372
#define TRIGGER_TYPE_BEFORE	48,1409
#define TRIGGER_TYPE_INSERT	49,1449
#define TRIGGER_TYPE_DELETE	50,1489
#define TRIGGER_TYPE_UPDATE	51,1529
#define TRIGGER_TYPE_TRUNCATE	52,1569
#define TRIGGER_TYPE_INSTEAD	53,1610
#define TRIGGER_TYPE_LEVEL_MASK	55,1651
#define TRIGGER_TYPE_STATEMENT	56,1704
#define TRIGGER_TYPE_TIMING_MASK 59,1804
#define TRIGGER_TYPE_AFTER	61,1885
#define TRIGGER_TYPE_EVENT_MASK 63,1918
#define TRIGGER_CLEAR_TYPE(67,2081
#define TRIGGER_SETT_ROW(69,2129
#define TRIGGER_SETT_STATEMENT(70,2191
#define TRIGGER_SETT_BEFORE(71,2263
#define TRIGGER_SETT_AFTER(72,2330
#define TRIGGER_SETT_INSTEAD(73,2395
#define TRIGGER_SETT_INSERT(74,2464
#define TRIGGER_SETT_DELETE(75,2531
#define TRIGGER_SETT_UPDATE(76,2598
#define TRIGGER_SETT_TRUNCATE(77,2665
#define TRIGGER_FOR_ROW(79,2737
#define TRIGGER_FOR_BEFORE(80,2797
#define TRIGGER_FOR_AFTER(81,2892
#define TRIGGER_FOR_INSTEAD(82,2986
#define TRIGGER_FOR_INSERT(83,3083
#define TRIGGER_FOR_DELETE(84,3148
#define TRIGGER_FOR_UPDATE(85,3213
#define TRIGGER_FOR_TRUNCATE(86,3278
#define TRIGGER_TYPE_MATCHES(95,3738
#define TRIGGER_USES_TRANSITION_TABLE(102,4008

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_shdepend_d.h,391
#define PG_SHDEPEND_D_H19,572
#define SharedDependRelationId 21,597
#define Anum_pg_shdepend_dbid 23,634
#define Anum_pg_shdepend_classid 24,666
#define Anum_pg_shdepend_objid 25,701
#define Anum_pg_shdepend_objsubid 26,734
#define Anum_pg_shdepend_refclassid 27,770
#define Anum_pg_shdepend_refobjid 28,808
#define Anum_pg_shdepend_deptype 29,844
#define Natts_pg_shdepend 31,880

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_inherits_d.h,227
#define PG_INHERITS_D_H19,572
#define InheritsRelationId 21,597
#define Anum_pg_inherits_inhrelid 23,630
#define Anum_pg_inherits_inhparent 24,666
#define Anum_pg_inherits_inhseqno 25,703
#define Natts_pg_inherits 27,740

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_init_privs_d.h,324
#define PG_INIT_PRIVS_D_H19,578
#define InitPrivsRelationId 21,605
#define Anum_pg_init_privs_objoid 23,639
#define Anum_pg_init_privs_classoid 24,675
#define Anum_pg_init_privs_objsubid 25,713
#define Anum_pg_init_privs_privtype 26,751
#define Anum_pg_init_privs_initprivs 27,789
#define Natts_pg_init_privs 29,829

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_rewrite_d.h,423
#define PG_REWRITE_D_H19,569
#define RewriteRelationId 21,593
#define Anum_pg_rewrite_oid 23,625
#define Anum_pg_rewrite_rulename 24,655
#define Anum_pg_rewrite_ev_class 25,690
#define Anum_pg_rewrite_ev_type 26,725
#define Anum_pg_rewrite_ev_enabled 27,759
#define Anum_pg_rewrite_is_instead 28,796
#define Anum_pg_rewrite_ev_qual 29,833
#define Anum_pg_rewrite_ev_action 30,867
#define Natts_pg_rewrite 32,904

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_aggregate_d.h,1406
#define PG_AGGREGATE_D_H19,575
#define AggregateRelationId 21,601
#define Anum_pg_aggregate_aggfnoid 23,635
#define Anum_pg_aggregate_aggkind 24,672
#define Anum_pg_aggregate_aggnumdirectargs 25,708
#define Anum_pg_aggregate_aggtransfn 26,753
#define Anum_pg_aggregate_aggfinalfn 27,792
#define Anum_pg_aggregate_aggcombinefn 28,831
#define Anum_pg_aggregate_aggserialfn 29,872
#define Anum_pg_aggregate_aggdeserialfn 30,912
#define Anum_pg_aggregate_aggmtransfn 31,954
#define Anum_pg_aggregate_aggminvtransfn 32,994
#define Anum_pg_aggregate_aggmfinalfn 33,1038
#define Anum_pg_aggregate_aggfinalextra 34,1079
#define Anum_pg_aggregate_aggmfinalextra 35,1122
#define Anum_pg_aggregate_aggfinalmodify 36,1166
#define Anum_pg_aggregate_aggmfinalmodify 37,1210
#define Anum_pg_aggregate_aggsortop 38,1255
#define Anum_pg_aggregate_aggtranstype 39,1294
#define Anum_pg_aggregate_aggtransspace 40,1336
#define Anum_pg_aggregate_aggmtranstype 41,1379
#define Anum_pg_aggregate_aggmtransspace 42,1422
#define Anum_pg_aggregate_agginitval 43,1466
#define Anum_pg_aggregate_aggminitval 44,1506
#define Natts_pg_aggregate 46,1548
#define AGGKIND_NORMAL	57,1971
#define AGGKIND_ORDERED_SET	58,2000
#define AGGKIND_HYPOTHETICAL	59,2033
#define AGGKIND_IS_ORDERED_SET(62,2146
#define AGGMODIFY_READ_ONLY	72,2642
#define AGGMODIFY_SHAREABLE	73,2676
#define AGGMODIFY_READ_WRITE	74,2710

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_db_role_setting.c,66
AlterSetting(24,615
DropSetting(170,4846
ApplySetting(220,6065

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_publication_rel_d.h,260
#define PG_PUBLICATION_REL_D_H19,593
#define PublicationRelRelationId 21,625
#define Anum_pg_publication_rel_oid 23,664
#define Anum_pg_publication_rel_prpubid 24,702
#define Anum_pg_publication_rel_prrelid 25,744
#define Natts_pg_publication_rel 27,787

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_subscription_d.h,637
#define PG_SUBSCRIPTION_D_H19,584
#define SubscriptionRelationId 21,613
#define SubscriptionRelation_Rowtype_Id 22,649
#define Anum_pg_subscription_oid 24,695
#define Anum_pg_subscription_subdbid 25,730
#define Anum_pg_subscription_subname 26,769
#define Anum_pg_subscription_subowner 27,808
#define Anum_pg_subscription_subenabled 28,848
#define Anum_pg_subscription_subbinary 29,890
#define Anum_pg_subscription_subconninfo 30,931
#define Anum_pg_subscription_subslotname 31,974
#define Anum_pg_subscription_subsynccommit 32,1017
#define Anum_pg_subscription_subpublications 33,1062
#define Natts_pg_subscription 35,1111

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_ts_template_d.h,335
#define PG_TS_TEMPLATE_D_H19,581
#define TSTemplateRelationId 21,609
#define Anum_pg_ts_template_oid 23,644
#define Anum_pg_ts_template_tmplname 24,678
#define Anum_pg_ts_template_tmplnamespace 25,717
#define Anum_pg_ts_template_tmplinit 26,761
#define Anum_pg_ts_template_tmpllexize 27,800
#define Natts_pg_ts_template 29,842

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_statistic_d.h,1793
#define PG_STATISTIC_D_H19,575
#define StatisticRelationId 21,601
#define Anum_pg_statistic_starelid 23,635
#define Anum_pg_statistic_staattnum 24,672
#define Anum_pg_statistic_stainherit 25,710
#define Anum_pg_statistic_stanullfrac 26,749
#define Anum_pg_statistic_stawidth 27,789
#define Anum_pg_statistic_stadistinct 28,826
#define Anum_pg_statistic_stakind1 29,866
#define Anum_pg_statistic_stakind2 30,903
#define Anum_pg_statistic_stakind3 31,940
#define Anum_pg_statistic_stakind4 32,977
#define Anum_pg_statistic_stakind5 33,1015
#define Anum_pg_statistic_staop1 34,1053
#define Anum_pg_statistic_staop2 35,1089
#define Anum_pg_statistic_staop3 36,1125
#define Anum_pg_statistic_staop4 37,1161
#define Anum_pg_statistic_staop5 38,1197
#define Anum_pg_statistic_stacoll1 39,1233
#define Anum_pg_statistic_stacoll2 40,1271
#define Anum_pg_statistic_stacoll3 41,1309
#define Anum_pg_statistic_stacoll4 42,1347
#define Anum_pg_statistic_stacoll5 43,1385
#define Anum_pg_statistic_stanumbers1 44,1423
#define Anum_pg_statistic_stanumbers2 45,1464
#define Anum_pg_statistic_stanumbers3 46,1505
#define Anum_pg_statistic_stanumbers4 47,1546
#define Anum_pg_statistic_stanumbers5 48,1587
#define Anum_pg_statistic_stavalues1 49,1628
#define Anum_pg_statistic_stavalues2 50,1668
#define Anum_pg_statistic_stavalues3 51,1708
#define Anum_pg_statistic_stavalues4 52,1748
#define Anum_pg_statistic_stavalues5 53,1788
#define Natts_pg_statistic 55,1829
#define STATISTIC_KIND_MCV	98,3819
#define STATISTIC_KIND_HISTOGRAM 118,5034
#define STATISTIC_KIND_CORRELATION	130,5637
#define STATISTIC_KIND_MCELEM 155,7121
#define STATISTIC_KIND_DECHIST	169,7907
#define STATISTIC_KIND_RANGE_LENGTH_HISTOGRAM 180,8470
#define STATISTIC_KIND_BOUNDS_HISTOGRAM 191,9035

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/partition.c,353
get_partition_parent(50,1516
get_partition_parent_worker(73,2034
get_partition_ancestors(115,3075
get_partition_ancestors_worker(134,3434
index_get_partition(153,3977
map_partition_varattnos(198,5392
has_partition_attrs(230,6414
get_default_partition_oid(290,7731
update_default_partition_oid(315,8262
get_proposed_default_constraint(345,9209

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_cast.c,20
CastCreate(43,1337

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_largeobject_d.h,234
#define PG_LARGEOBJECT_D_H19,581
#define LargeObjectRelationId 21,609
#define Anum_pg_largeobject_loid 23,645
#define Anum_pg_largeobject_pageno 24,680
#define Anum_pg_largeobject_data 25,717
#define Natts_pg_largeobject 27,753

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_shseclabel_d.h,331
#define PG_SHSECLABEL_D_H19,578
#define SharedSecLabelRelationId 21,605
#define SharedSecLabelRelation_Rowtype_Id 22,643
#define Anum_pg_shseclabel_objoid 24,691
#define Anum_pg_shseclabel_classoid 25,727
#define Anum_pg_shseclabel_provider 26,765
#define Anum_pg_shseclabel_label 27,803
#define Natts_pg_shseclabel 29,839

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_proc_d.h,1871
#define PG_PROC_D_H19,560
#define ProcedureRelationId 21,581
#define ProcedureRelation_Rowtype_Id 22,614
#define Anum_pg_proc_oid 24,655
#define Anum_pg_proc_proname 25,682
#define Anum_pg_proc_pronamespace 26,713
#define Anum_pg_proc_proowner 27,749
#define Anum_pg_proc_prolang 28,781
#define Anum_pg_proc_procost 29,812
#define Anum_pg_proc_prorows 30,843
#define Anum_pg_proc_provariadic 31,874
#define Anum_pg_proc_prosupport 32,909
#define Anum_pg_proc_prokind 33,943
#define Anum_pg_proc_prosecdef 34,975
#define Anum_pg_proc_proleakproof 35,1009
#define Anum_pg_proc_proisstrict 36,1046
#define Anum_pg_proc_proretset 37,1082
#define Anum_pg_proc_provolatile 38,1116
#define Anum_pg_proc_proparallel 39,1152
#define Anum_pg_proc_pronargs 40,1188
#define Anum_pg_proc_pronargdefaults 41,1221
#define Anum_pg_proc_prorettype 42,1261
#define Anum_pg_proc_proargtypes 43,1296
#define Anum_pg_proc_proallargtypes 44,1332
#define Anum_pg_proc_proargmodes 45,1371
#define Anum_pg_proc_proargnames 46,1407
#define Anum_pg_proc_proargdefaults 47,1443
#define Anum_pg_proc_protrftypes 48,1482
#define Anum_pg_proc_prosrc 49,1518
#define Anum_pg_proc_probin 50,1549
#define Anum_pg_proc_proconfig 51,1580
#define Anum_pg_proc_proacl 52,1614
#define Natts_pg_proc 54,1646
#define PROKIND_FUNCTION 60,1718
#define PROKIND_AGGREGATE 61,1747
#define PROKIND_WINDOW 62,1777
#define PROKIND_PROCEDURE 63,1804
#define PROVOLATILE_IMMUTABLE	73,2271
#define PROVOLATILE_STABLE	74,2341
#define PROVOLATILE_VOLATILE	75,2409
#define PROPARALLEL_SAFE	82,2693
#define PROPARALLEL_RESTRICTED	83,2757
#define PROPARALLEL_UNSAFE	84,2830
#define PROARGMODE_IN	91,3094
#define PROARGMODE_OUT	92,3121
#define PROARGMODE_INOUT	93,3149
#define PROARGMODE_VARIADIC 94,3178
#define PROARGMODE_TABLE	95,3210
#define HEAP_TABLE_AM_HANDLER_OID 97,3240

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_database_d.h,790
#define PG_DATABASE_D_H19,572
#define DatabaseRelationId 21,597
#define DatabaseRelation_Rowtype_Id 22,629
#define Anum_pg_database_oid 24,671
#define Anum_pg_database_datname 25,702
#define Anum_pg_database_datdba 26,737
#define Anum_pg_database_encoding 27,771
#define Anum_pg_database_datcollate 28,807
#define Anum_pg_database_datctype 29,845
#define Anum_pg_database_datistemplate 30,881
#define Anum_pg_database_datallowconn 31,922
#define Anum_pg_database_datconnlimit 32,962
#define Anum_pg_database_datlastsysoid 33,1002
#define Anum_pg_database_datfrozenxid 34,1044
#define Anum_pg_database_datminmxid 35,1085
#define Anum_pg_database_dattablespace 36,1124
#define Anum_pg_database_datacl 37,1166
#define Natts_pg_database 39,1202
#define TemplateDbOid 41,1232

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_statistic_ext_data_d.h,346
#define PG_STATISTIC_EXT_DATA_D_H19,602
#define StatisticExtDataRelationId 21,637
#define Anum_pg_statistic_ext_data_stxoid 23,678
#define Anum_pg_statistic_ext_data_stxdndistinct 24,722
#define Anum_pg_statistic_ext_data_stxddependencies 25,773
#define Anum_pg_statistic_ext_data_stxdmcv 26,827
#define Natts_pg_statistic_ext_data 28,873

/home/seinoyu/pgsql/master/postgresql/src/backend/catalog/pg_publication.c,480
check_publication_add_relation(50,1324
is_publishable_class(98,3369
is_publishable_relation(111,3717
pg_relation_is_publishable(125,4060
publication_add_relation(144,4478
GetRelationPublications(219,6721
GetPublicationRelations(248,7419
GetAllTablesPublications(311,8950
GetAllTablesPublicationRelations(352,9929
GetPublication(413,11342
GetPublicationByName(445,12140
get_publication_oid(461,12500
get_publication_name(481,13022
pg_get_publication_tables(508,13538

/home/seinoyu/pgsql/master/postgresql/src/backend/main/main.c,136
const char *progname;progname46,1188
main(59,1499
startup_hacks(227,6706
init_locale(288,8410
help(307,9014
check_root(368,12349

/home/seinoyu/pgsql/master/postgresql/src/backend/postmaster/postmaster.c,7713
#define BACKEND_TYPE_NORMAL	145,4565
#define BACKEND_TYPE_AUTOVAC	146,4622
#define BACKEND_TYPE_WALSND	147,4690
#define BACKEND_TYPE_BGWORKER	148,4750
#define BACKEND_TYPE_ALL	149,4810
#define BACKEND_TYPE_WORKER	151,4870
typedef struct bkend169,5768
	pid_t		pid;171,5791
	int32		cancel_key;172,5834
	int			child_slot;173,5901
	int			bkend_type;180,6190
	bool		dead_end;181,6209
	bool		bgworker_notify;182,6272
	dlist_node	elem;183,6341
} Backend;184,6392
static dlist_head BackendList 186,6404
static Backend *ShmemBackendArray;ShmemBackendArray189,6489
BackgroundWorker *MyBgworkerEntry MyBgworkerEntry192,6532
int			PostPortNumber;197,6637
char	   *Unix_socket_directories;Unix_socket_directories200,6705
char	   *ListenAddresses;ListenAddresses203,6773
int			ReservedBackends;214,7261
#define MAXLISTEN	217,7326
static pgsocket ListenSocket[ListenSocket218,7347
static char ExtraOptions[ExtraOptions223,7420
static bool Reinit 232,7818
static int	SendStop 233,7845
bool		EnableSSL 236,7909
int			PreAuthDelay 238,7935
int			AuthenticationTimeout 239,7959
bool		log_hostname;241,7994
bool		Log_connections 242,8048
bool		Db_user_namespace 243,8079
bool		enable_bonjour 245,8113
char	   *bonjour_name;bonjour_name246,8143
bool		restart_after_crash 247,8166
static pid_t StartupPID 250,8259
	STARTUP_NOT_RUNNING,263,8499
	STARTUP_RUNNING,264,8521
	STARTUP_SIGNALED,265,8539
	STARTUP_CRASHED266,8598
} StartupStatusEnum;267,8615
static StartupStatusEnum StartupStatus 269,8637
#define			NoShutdown	272,8729
#define			SmartShutdown	273,8753
#define			FastShutdown	274,8779
#define			ImmediateShutdown	275,8804
static int	Shutdown 277,8835
static bool FatalError 279,8870
	PM_INIT,325,11524
	PM_STARTUP,326,11564
	PM_RECOVERY,327,11618
	PM_HOT_STANDBY,328,11666
	PM_RUN,329,11712
	PM_WAIT_BACKUP,330,11765
	PM_WAIT_READONLY,331,11829
	PM_WAIT_BACKENDS,332,11895
	PM_SHUTDOWN,333,11956
	PM_SHUTDOWN_2,335,12035
	PM_WAIT_DEAD_END,337,12117
	PM_NO_CHILDREN	338,12182
} PMState;339,12242
static PMState pmState 341,12254
static time_t AbortStartTime 345,12406
#define SIGKILL_CHILDREN_AFTER_SECS	348,12470
static bool ReachedNormalRunning 350,12510
bool		ClientAuthInProgress 352,12585
bool		redirection_done 355,12677
static volatile sig_atomic_t start_autovac_launcher 358,12794
static volatile bool avlauncher_needs_signal 361,12926
static volatile sig_atomic_t WalReceiverRequested 364,13021
static volatile bool StartWorkerNeeded 367,13141
static volatile bool HaveCrashedWorker 368,13188
static bool LoadedSSL 372,13308
static DNSServiceRef bonjour_sdref 376,13366
static void BackendRun(403,14409
#define SignalChildren(418,15171
#define PgArchStartupAllowed(435,15818
#define WNOHANG 443,16027
	HANDLE		waitHandle;452,16298
	HANDLE		procHandle;453,16319
	DWORD		procId;454,16340
} win32_deadchild_waitinfo;455,16356
	SOCKET		origsocket;465,16618
	WSAPROTOCOL_INFO wsainfo;467,16716
} InheritableSocket;468,16743
typedef int InheritableSocket;470,16770
	Port		port;478,16896
	InheritableSocket portsocket;479,16909
	char		DataDir[DataDir480,16940
	pgsocket	ListenSocket[ListenSocket481,16967
	int32		MyCancelKey;482,17002
	int			MyPMChildSlot;483,17023
	unsigned long UsedShmemSegID;485,17059
	void	   *ShmemProtectiveRegion;ShmemProtectiveRegion487,17096
	HANDLE		UsedShmemSegID;488,17129
	void	   *UsedShmemSegAddr;UsedShmemSegAddr490,17161
	slock_t    *ShmemLock;ShmemLock491,17189
	VariableCache ShmemVariableCache;492,17213
	Backend    *ShmemBackendArray;ShmemBackendArray493,17248
	PGSemaphore *SpinlockSemaArray;SpinlockSemaArray495,17303
	int			NamedLWLockTrancheRequests;497,17343
	NamedLWLockTranche *NamedLWLockTrancheArray;NamedLWLockTrancheArray498,17378
	LWLockPadded *MainLWLockArray;MainLWLockArray499,17424
	slock_t    *ProcStructLock;ProcStructLock500,17456
	PROC_HDR   *ProcGlobal;ProcGlobal501,17485
	PGPROC	   *AuxiliaryProcs;AuxiliaryProcs502,17510
	PGPROC	   *PreparedXactProcs;PreparedXactProcs503,17538
	PMSignalData *PMSignalState;PMSignalState504,17569
	InheritableSocket pgStatSock;505,17599
	pid_t		PostmasterPid;506,17630
	TimestampTz PgStartTime;507,17653
	TimestampTz PgReloadTime;508,17679
	pg_time_t	first_syslogger_file_time;509,17706
	bool		redirection_done;510,17744
	bool		IsBinaryUpgrade;511,17769
	int			max_safe_fds;512,17793
	int			MaxBackends;513,17814
	HANDLE		PostmasterHandle;515,17847
	HANDLE		initial_signal_pipe;516,17874
	HANDLE		syslogPipe[syslogPipe517,17904
	int			postmaster_alive_fds[postmaster_alive_fds519,17934
	int			syslogPipe[syslogPipe520,17966
	char		my_exec_path[my_exec_path522,17995
	char		pkglib_path[pkglib_path523,18027
	char		ExtraOptions[ExtraOptions524,18058
} BackendParameters;525,18090
#define StartupDataBase(541,18602
#define StartBackgroundWriter(542,18663
#define StartCheckpointer(543,18730
#define StartWalWriter(544,18798
#define StartWalReceiver(545,18860
#define EXIT_STATUS_0(548,18980
#define EXIT_STATUS_1(549,19019
#define EXIT_STATUS_3(550,19086
int			postmaster_alive_fds[postmaster_alive_fds557,19306
HANDLE		PostmasterHandle;560,19426
PostmasterMain(567,19503
CloseServerPorts(1415,43740
unlink_external_pid_file(1451,44685
getInstallationPaths(1463,44955
checkControlFile(1516,46721
DetermineSleepTime(1545,47581
ServerLoop(1643,49725
initMasks(1883,56559
ProcessStartupPacket(1925,57669
SendNegotiateProtocolVersion(2347,71099
processCancelRequest(2368,71721
canAcceptConnections(2434,73486
ConnCreate(2493,75511
ConnFree(2537,76287
ClosePostmasterPorts(2559,76782
InitProcessGlobals(2623,78321
reset_shared(2657,79303
SIGHUP_handler(2674,79735
pmdie(2756,81591
reaper(2943,86613
CleanupBackgroundWorker(3289,96602
CleanupBackend(3389,99144
HandleChildCrash(3473,101467
LogChildExit(3729,108622
PostmasterStateMachine(3794,110706
signal_child(4044,118850
SignalSomeChildren(4070,119378
TerminateChildren(4114,120406
BackendStartup(4147,121243
report_fork_failure_to_client(4264,124178
BackendInitialize(4297,125174
BackendRun(4472,131508
postmaster_forkexec(4542,133248
backend_forkexec(4561,133781
internal_forkexec(4585,134236
internal_forkexec(4677,136524
SubPostmasterMain(4891,142899
ExitPostmaster(5139,150253
sigusr1_handler(5172,151164
startup_die(5357,156411
dummy_handler(5372,156819
StartupPacketTimeoutHandler(5381,156964
RandomCancelKey(5391,157071
CountChildren(5401,157283
StartChildProcess(5447,158317
StartAutovacuumWorker(5551,160527
MaybeStartWalReceiver(5642,163377
CreateOptsFile(5661,163789
#define OPTS_FILE	5666,163875
MaxLivePostmasterChildren(5701,164817
BackgroundWorkerInitializeConnection(5711,165014
BackgroundWorkerInitializeConnectionByOid(5734,165786
BackgroundWorkerBlockSignals(5757,166524
BackgroundWorkerUnblockSignals(5763,166593
bgworker_forkexec(5770,166694
do_start_bgworker(5799,167330
bgworker_should_start_now(5891,169806
assign_backendlist_entry(5935,170719
maybe_start_bgworkers(5999,172562
#define MAX_BGWORKERS_TO_LAUNCH 6001,172592
PostmasterMarkPIDForWorkerNotify(6118,175631
#define write_inheritable_socket(6149,176283
#define read_inheritable_socket(6150,176363
save_backend_variables(6162,176791
write_duplicated_handle(6244,179203
write_inheritable_socket(6274,180009
read_inheritable_socket(6295,180517
read_backend_variables(6332,181289
restore_backend_variables(6404,182832
ShmemBackendArraySize(6483,185182
ShmemBackendArrayAllocation(6489,185284
ShmemBackendArrayAdd(6499,185494
ShmemBackendArrayRemove(6509,185715
waitpid(6527,186112
pgwin32_deadchild_callback(6551,186617
InitPostmasterDeathWatchHandle(6602,187967

/home/seinoyu/pgsql/master/postgresql/src/backend/postmaster/bgworker.c,1623
slist_head	BackgroundWorkerList 42,1147
typedef struct BackgroundWorkerSlot76,3081
	bool		in_use;78,3119
	bool		terminate;79,3134
	pid_t		pid;80,3152
	uint64		generation;81,3212
	BackgroundWorker worker;82,3274
} BackgroundWorkerSlot;83,3300
typedef struct BackgroundWorkerArray96,4009
	int			total_slots;98,4048
	uint32		parallel_register_count;99,4068
	uint32		parallel_terminate_count;100,4102
	BackgroundWorkerSlot slot[slot101,4137
} BackgroundWorkerArray;102,4188
struct BackgroundWorkerHandle104,4214
	int			slot;106,4246
	uint64		generation;107,4259
static BackgroundWorkerArray *BackgroundWorkerData;BackgroundWorkerData110,4284
	const char *fn_name;fn_name118,4501
	bgworker_main_type fn_addr;119,4523
}			InternalBGWorkers[InternalBGWorkers120,4552
BackgroundWorkerShmemSize(142,4905
BackgroundWorkerShmemInit(158,5199
FindRegisteredWorkerBySlotNumber(217,6811
BackgroundWorkerStateChange(240,7341
ForgetBackgroundWorker(411,12604
ReportBackgroundWorkerPID(439,13314
ReportBackgroundWorkerExit(458,13814
BackgroundWorkerStopNotifications(492,14854
ResetBackgroundWorkerCrashTimes(514,15394
BackgroundWorkerEntry(561,16725
SanityCheckBackgroundWorker(582,17319
bgworker_die(647,19177
bgworker_sigusr1_handler(664,19565
StartBackgroundWorker(680,19820
RegisterBackgroundWorker(827,23736
RegisterDynamicBackgroundWorker(911,26215
GetBackgroundWorkerPid(1023,29876
WaitForBackgroundWorkerStartup(1075,31567
WaitForBackgroundWorkerShutdown(1117,32463
TerminateBackgroundWorker(1156,33195
LookupBackgroundWorkerFunction(1197,34799
GetBackgroundWorkerTypeByPid(1231,35824

/home/seinoyu/pgsql/master/postgresql/src/backend/postmaster/bgwriter.c,225
int			BgWriterDelay 64,2210
#define HIBERNATE_FACTOR	70,2358
#define LOG_SNAPSHOT_INTERVAL_MS 76,2487
static TimestampTz last_snapshot_ts;83,2708
static XLogRecPtr last_snapshot_lsn 84,2745
BackgroundWriterMain(94,2997

/home/seinoyu/pgsql/master/postgresql/src/backend/postmaster/fork_process.c,21
fork_process(32,735

/home/seinoyu/pgsql/master/postgresql/src/backend/postmaster/pgarch.c,666
#define PGARCH_AUTOWAKE_INTERVAL 59,1451
#define PGARCH_RESTART_INTERVAL 61,1576
#define NUM_ARCHIVE_RETRIES 68,1779
#define NUM_ORPHAN_CLEANUP_RETRIES 74,1914
static time_t last_pgarch_start_time;81,1999
static time_t last_sigterm_time 82,2037
static volatile sig_atomic_t wakened 87,2153
static volatile sig_atomic_t ready_to_stop 88,2199
NON_EXEC_STATIC void PgArchiverMain(98,2387
pgarch_forkexec(197,4803
PgArchiverMain(223,5263
pgarch_exit(251,6018
pgarch_waken(259,6161
pgarch_waken_stop(272,6387
pgarch_MainLoop(289,6644
pgarch_ArchiverCopyLoop(389,9206
pgarch_archiveXlog(520,12691
pgarch_readyXlog(670,16834
pgarch_archiveDone(747,19078

/home/seinoyu/pgsql/master/postgresql/src/backend/postmaster/interrupt.c,251
volatile sig_atomic_t ConfigReloadPending 26,630
volatile sig_atomic_t ShutdownRequestPending 27,681
HandleMainLoopInterrupts(33,816
SignalHandlerForConfigReload(56,1360
SignalHandlerForCrashExit(72,1642
SignalHandlerForShutdownRequest(104,2909

/home/seinoyu/pgsql/master/postgresql/src/backend/postmaster/autovacuum.c,4905
bool		autovacuum_start_daemon 114,4677
int			autovacuum_max_workers;115,4716
int			autovacuum_work_mem 116,4746
int			autovacuum_naptime;117,4778
int			autovacuum_vac_thresh;118,4804
double		autovacuum_vac_scale;119,4833
int			autovacuum_vac_ins_thresh;120,4863
double		autovacuum_vac_ins_scale;121,4896
int			autovacuum_anl_thresh;122,4930
double		autovacuum_anl_scale;123,4959
int			autovacuum_freeze_max_age;124,4989
int			autovacuum_multixact_freeze_max_age;125,5022
double		autovacuum_vac_cost_delay;127,5066
int			autovacuum_vac_cost_limit;128,5101
int			Log_autovacuum_min_duration 130,5135
#define STATS_READ_DELAY 133,5244
#define MIN_AUTOVAC_SLEEPTIME 136,5345
#define MAX_AUTOVAC_SLEEPTIME 137,5400
static bool am_autovacuum_launcher 140,5504
static bool am_autovacuum_worker 141,5548
static volatile sig_atomic_t got_SIGUSR2 144,5626
static TransactionId recentXid;147,5752
static MultiXactId recentMulti;148,5784
static int	default_freeze_min_age;151,5886
static int	default_freeze_table_age;152,5921
static int	default_multixact_freeze_min_age;153,5958
static int	default_multixact_freeze_table_age;154,6003
static MemoryContext AutovacMemCxt;157,6092
typedef struct avl_dbase160,6181
	Oid			adl_datid;162,6208
	TimestampTz adl_next_worker;163,6259
	int			adl_score;164,6289
	dlist_node	adl_node;165,6307
} avl_dbase;166,6329
typedef struct avw_dbase169,6393
	Oid			adw_datid;171,6420
	char	   *adw_name;adw_name172,6438
	TransactionId adw_frozenxid;173,6458
	MultiXactId adw_minmulti;174,6488
	PgStat_StatDBEntry *adw_entry;adw_entry175,6515
} avw_dbase;176,6547
typedef struct av_relation179,6636
	Oid			ar_toastrelid;181,6665
	Oid			ar_relid;182,6718
	bool		ar_hasrelopts;183,6735
	AutoVacOpts ar_reloptions;184,6757
} av_relation;186,6872
typedef struct autovac_table189,6968
	Oid			at_relid;191,6999
	VacuumParams at_params;192,7016
	double		at_vacuum_cost_delay;193,7041
	int			at_vacuum_cost_limit;194,7072
	bool		at_dobalance;195,7101
	bool		at_sharedrel;196,7122
	char	   *at_relname;at_relname197,7143
	char	   *at_nspname;at_nspname198,7165
	char	   *at_datname;at_datname199,7187
} autovac_table;200,7209
typedef struct WorkerInfoData220,8101
	dlist_node	wi_links;222,8133
	Oid			wi_dboid;223,8155
	Oid			wi_tableoid;224,8172
	PGPROC	   *wi_proc;wi_proc225,8192
	TimestampTz wi_launchtime;226,8213
	bool		wi_dobalance;227,8241
	bool		wi_sharedrel;228,8262
	double		wi_cost_delay;229,8283
	int			wi_cost_limit;230,8307
	int			wi_cost_limit_base;231,8329
} WorkerInfoData;232,8356
typedef struct WorkerInfoData *WorkerInfo;WorkerInfo234,8375
	AutoVacForkFailed,243,8615
	AutoVacRebalance,244,8675
	AutoVacNumSignals	245,8728
}			AutoVacuumSignal;246,8768
typedef struct AutoVacuumWorkItem254,9032
	AutoVacuumWorkItemType avw_type;256,9068
	bool		avw_used;257,9102
	bool		avw_active;258,9146
	Oid			avw_database;259,9188
	Oid			avw_relation;260,9209
	BlockNumber avw_blockNumber;261,9230
} AutoVacuumWorkItem;262,9260
#define NUM_WORKITEMS	264,9283
	sig_atomic_t av_signal[av_signal284,10006
	pid_t		av_launcherpid;285,10050
	dlist_head	av_freeWorkers;286,10074
	dlist_head	av_runningWorkers;287,10102
	WorkerInfo	av_startingWorker;288,10133
	AutoVacuumWorkItem av_workItems[av_workItems289,10164
} AutoVacuumShmemStruct;290,10213
static AutoVacuumShmemStruct *AutoVacuumShmem;AutoVacuumShmem292,10239
static dlist_head DatabaseList 298,10392
static MemoryContext DatabaseListCxt 299,10458
static WorkerInfo MyWorkerInfo 302,10561
int			AutovacuumLauncherPid 305,10665
NON_EXEC_STATIC void AutoVacWorkerMain(311,10804
AutovacuumLauncherIAm(383,13327
StartAutoVacLauncher(394,13500
AutoVacLauncherMain(432,14155
HandleAutoVacLauncherInterrupts(800,25321
AutoVacLauncherShutdown(836,26177
launcher_determine_sleep(853,26657
rebuild_database_list(937,29549
db_comparator(1118,34692
do_start_worker(1138,35380
launch_worker(1353,41868
AutoVacWorkerFailed(1405,43211
avl_sigusr2_handler(1412,43388
avworker_forkexec(1434,43829
AutovacuumWorkerIAm(1453,44167
StartAutoVacWorker(1465,44348
AutoVacWorkerMain(1503,44966
FreeWorkerInfo(1710,51028
AutoVacuumUpdateDelay(1759,52632
autovac_balance_cost(1775,52955
get_database_list(1863,55985
do_autovacuum(1929,57926
perform_work_item(2612,79520
extract_autovac_opts(2718,82449
get_pgstat_tabentry_relid(2744,83148
table_recheck_autovac(2771,83844
relation_needs_vacanalyze(2957,90435
autovacuum_do_vac_analyze(3123,95799
autovac_report_activity(3152,96716
#define MAX_AUTOVAC_ACTIV_LEN 3154,96762
autovac_report_workitem(3187,97706
AutoVacuumingActive(3227,98678
AutoVacuumRequestWork(3239,98933
autovac_init(3281,99770
IsAutoVacuumLauncherProcess(3295,100116
IsAutoVacuumWorkerProcess(3301,100192
AutoVacuumShmemSize(3312,100357
AutoVacuumShmemInit(3331,100736
autovac_refresh_stats(3379,102030

/home/seinoyu/pgsql/master/postgresql/src/backend/postmaster/startup.c,536
static volatile sig_atomic_t got_SIGHUP 40,1077
static volatile sig_atomic_t shutdown_requested 41,1126
static volatile sig_atomic_t promote_signaled 42,1183
static volatile sig_atomic_t in_restore_command 48,1360
StartupProcTriggerHandler(62,1705
StartupProcSigHupHandler(74,1926
StartupProcShutdownHandler(86,2117
StartupRereadConfig(106,2446
HandleStartupProcInterrupts(135,3337
StartupProcessMain(170,4040
PreRestoreCommand(214,5207
PostRestoreCommand(228,5588
IsPromoteSignaled(234,5652
ResetPromoteSignaled(240,5712

/home/seinoyu/pgsql/master/postgresql/src/backend/postmaster/checkpointer.c,1714
	SyncRequestType type;111,4625
	FileTag		ftag;112,4668
} CheckpointerRequest;113,4708
	pid_t		checkpointer_pid;117,4749
	slock_t		ckpt_lck;119,4805
	int			ckpt_started;121,4864
	int			ckpt_done;122,4923
	int			ckpt_failed;123,4978
	int			ckpt_flags;125,5036
	ConditionVariable start_cv;127,5102
	ConditionVariable done_cv;128,5173
	uint32		num_backend_writes;130,5241
	uint32		num_backend_fsync;131,5310
	int			num_requests;133,5377
	int			max_requests;134,5426
	CheckpointerRequest requests[requests135,5474
} CheckpointerShmemStruct;136,5528
static CheckpointerShmemStruct *CheckpointerShmem;CheckpointerShmem138,5556
#define WRITES_PER_ABSORB	141,5678
int			CheckPointTimeout 146,5736
int			CheckPointWarning 147,5767
double		CheckPointCompletionTarget 148,5797
static bool ckpt_active 153,5864
static pg_time_t ckpt_start_time;156,5953
static XLogRecPtr ckpt_start_recptr;157,5987
static double ckpt_cached_elapsed;158,6024
static pg_time_t last_checkpoint_time;160,6060
static pg_time_t last_xlog_switch_time;161,6099
CheckpointerMain(183,6732
HandleCheckpointerInterrupts(532,16988
CheckArchiveTimeout(582,18671
ImmediateCheckpointRequested(643,20347
CheckpointWriteDelay(670,21181
IsCheckpointOnSchedule(738,23022
ReqCheckpointHandler(817,25594
CheckpointerShmemSize(841,26065
CheckpointerShmemInit(860,26491
RequestCheckpoint(903,27983
#define MAX_SIGNAL_TRIES 956,29767
ForwardSyncRequest(1058,32988
CompactCheckpointerRequestQueue(1129,35423
	struct CheckpointerSlotMapping1131,35463
		CheckpointerRequest request;1133,35498
		int			slot;1134,35529
AbsorbSyncRequests(1236,38784
UpdateSharedMemoryConfig(1290,40386
FirstCallSinceLastCheckpoint(1309,40900

/home/seinoyu/pgsql/master/postgresql/src/backend/postmaster/walwriter.c,161
int			WalWriterDelay 70,2528
int			WalWriterFlushAfter 71,2556
#define LOOPS_UNTIL_HIBERNATE	78,2787
#define HIBERNATE_FACTOR	79,2821
WalWriterMain(88,3046

/home/seinoyu/pgsql/master/postgresql/src/backend/postmaster/pgstat.c,8404
#define PGSTAT_STAT_INTERVAL	76,1856
#define PGSTAT_RETRY_DELAY	79,1966
#define PGSTAT_MAX_WAIT_TIME	82,2081
#define PGSTAT_INQ_INTERVAL	85,2199
#define PGSTAT_RESTART_INTERVAL 88,2316
#define PGSTAT_POLL_LOOP_COUNT	92,2457
#define PGSTAT_INQ_LOOP_COUNT	93,2532
#define PGSTAT_MIN_RCVBUF	96,2668
#define PGSTAT_DB_HASH_SIZE	103,2811
#define PGSTAT_TAB_HASH_SIZE	104,2843
#define PGSTAT_FUNCTION_HASH_SIZE	105,2876
#define NumBackendStatSlots 117,3272
bool		pgstat_track_activities 124,3385
bool		pgstat_track_counts 125,3424
int			pgstat_track_functions 126,3459
int			pgstat_track_activity_query_size 127,3506
char	   *pgstat_stat_directory pgstat_stat_directory133,3614
char	   *pgstat_stat_filename pgstat_stat_filename134,3653
char	   *pgstat_stat_tmpname pgstat_stat_tmpname135,3691
PgStat_MsgBgWriter BgWriterStats;142,3945
static const char *const slru_names[slru_names149,4209
#define SLRU_NUM_ELEMENTS	160,4387
static PgStat_MsgSLRU SLRUStats[SLRUStats168,4709
NON_EXEC_STATIC pgsocket pgStatSock 174,4808
static struct sockaddr_storage pgStatAddr;176,4865
static time_t last_pgstat_start_time;178,4909
static bool pgStatRunningInCollector 180,4948
#define TABSTAT_QUANTUM	193,5529
typedef struct TabStatusArray195,5594
	struct TabStatusArray *tsa_next;tsa_next197,5626
	int			tsa_used;198,5693
	PgStat_TableStatus tsa_entries[tsa_entries199,5742
} TabStatusArray;200,5813
static TabStatusArray *pgStatTabList pgStatTabList202,5832
typedef struct TabStatHashEntry207,5961
	Oid			t_id;209,5995
	PgStat_TableStatus *tsa_entry;tsa_entry210,6008
} TabStatHashEntry;211,6040
static HTAB *pgStatTabHash pgStatTabHash216,6116
static HTAB *pgStatFunctions pgStatFunctions222,6287
static bool have_function_stats 228,6425
typedef struct PgStat_SubXactStatus237,6839
	int			nest_level;239,6877
	struct PgStat_SubXactStatus *prev;prev240,6929
	PgStat_TableXactStatus *first;first241,6999
} PgStat_SubXactStatus;242,7067
static PgStat_SubXactStatus *pgStatXactStack pgStatXactStack244,7092
static int	pgStatXactCommit 246,7146
static int	pgStatXactRollback 247,7179
PgStat_Counter pgStatBlockReadTime 248,7214
PgStat_Counter pgStatBlockWriteTime 249,7254
typedef struct TwoPhasePgStatRecord252,7373
	PgStat_Counter tuples_inserted;254,7411
	PgStat_Counter tuples_updated;255,7474
	PgStat_Counter tuples_deleted;256,7535
	PgStat_Counter inserted_pre_trunc;257,7596
	PgStat_Counter updated_pre_trunc;258,7672
	PgStat_Counter deleted_pre_trunc;259,7746
	Oid			t_id;260,7820
	bool		t_shared;261,7853
	bool		t_truncated;262,7901
} TwoPhasePgStatRecord;263,7955
static MemoryContext pgStatLocalContext 268,8034
static HTAB *pgStatDBHash pgStatDBHash269,8082
static LocalPgBackendStatus *localBackendStatusTable localBackendStatusTable272,8163
static int	localNumBackends 275,8276
static PgStat_ArchiverStats archiverStats;282,8450
static PgStat_GlobalStats globalStats;283,8493
static PgStat_SLRUStats slruStats[slruStats284,8532
static List *pending_write_requests pending_write_requests291,8804
static instr_time total_func_time;298,9027
NON_EXEC_STATIC void PgstatCollectorMain(309,9199
#define TESTBYTEVAL 392,12896
pgstat_reset_remove_files(664,20888
pgstat_reset_all(712,21960
pgstat_forkexec(726,22246
pgstat_start(754,22818
allow_immediate_pgstat_restart(817,24178
pgstat_report_stat(839,24845
pgstat_send_tabstat(949,28178
pgstat_send_funcstats(993,29266
pgstat_vacuum_stat(1052,30873
pgstat_collect_oids(1234,35297
pgstat_drop_database(1284,36551
pgstat_drop_relation(1310,37192
pgstat_reset_counters(1340,37801
pgstat_reset_shared_counters(1362,38276
pgstat_reset_single_counter(1393,39087
pgstat_reset_slru_counter(1419,39704
pgstat_report_autovac(1441,40245
pgstat_report_vacuum(1463,40647
pgstat_report_analyze(1491,41451
pgstat_report_recovery_conflict(1544,43292
pgstat_report_deadlock(1564,43715
pgstat_report_checksum_failures_in_db(1585,44110
pgstat_report_checksum_failure(1607,44612
pgstat_report_tempfile(1619,44823
pgstat_ping(1640,45236
pgstat_send_inquiry(1658,45533
pgstat_init_function_usage(1675,45933
find_funcstat_entry(1727,47366
pgstat_end_function_usage(1747,47992
pgstat_initstats(1804,49689
get_tabstat_entry(1839,50495
find_tabstat_entry(1928,52737
get_tabstat_stack_level(1948,53223
add_tabstat_xact_level(1970,53776
pgstat_count_heap_insert(1997,54541
pgstat_count_heap_update(2018,55058
pgstat_count_heap_delete(2043,55695
pgstat_truncate_save_counters(2069,56485
pgstat_truncate_restore_counters(2084,56863
pgstat_count_truncate(2098,57196
pgstat_update_heap_dead_tuples(2127,58099
AtEOXact_PgStat(2143,58430
AtEOSubXact_PgStat(2230,61094
AtPrepare_PgStat(2329,64109
PostPrepare_PgStat(2378,65571
pgstat_twophase_postcommit(2411,66261
pgstat_twophase_postabort(2447,67504
pgstat_fetch_stat_dbentry(2481,68687
pgstat_fetch_stat_tabentry(2508,69417
pgstat_fetch_stat_funcentry(2564,70772
pgstat_fetch_stat_beentry(2596,71625
pgstat_fetch_stat_local_beentry(2618,72148
pgstat_fetch_stat_numbackends(2637,72509
pgstat_fetch_stat_archiver(2653,72817
pgstat_fetch_global(2670,73106
pgstat_fetch_slru(2687,73380
static PgBackendStatus *BackendStatusArray BackendStatusArray2700,73661
static PgBackendStatus *MyBEEntry MyBEEntry2701,73712
static char *BackendAppnameBuffer BackendAppnameBuffer2702,73754
static char *BackendClientHostnameBuffer BackendClientHostnameBuffer2703,73796
static char *BackendActivityBuffer BackendActivityBuffer2704,73845
static Size BackendActivityBufferSize 2705,73888
static PgBackendSSLStatus *BackendSslStatusBuffer BackendSslStatusBuffer2707,73946
static PgBackendGSSStatus *BackendGssStatusBuffer BackendGssStatusBuffer2710,74029
BackendStatusShmemSize(2718,74175
CreateSharedBackendStatus(2746,74911
pgstat_initialize(2881,78418
pgstat_bestart(2923,79745
pgstat_beshutdown_hook(3094,85347
pgstat_report_activity(3132,86492
pgstat_progress_start_command(3210,88604
pgstat_progress_update_param(3231,89169
pgstat_progress_update_multi_param(3253,89717
pgstat_progress_end_command(3282,90373
pgstat_report_appname(3305,90885
pgstat_report_xact_timestamp(3334,91636
pgstat_read_current_status(3361,92307
pgstat_get_wait_event_type(3513,97061
pgstat_get_wait_event(3568,98050
pgstat_get_wait_activity(3645,99581
pgstat_get_wait_client(3703,100939
pgstat_get_wait_ipc(3749,102008
pgstat_get_wait_timeout(3894,105937
pgstat_get_wait_io(3928,106667
pgstat_get_backend_current_activity(4169,113678
pgstat_get_crashed_backend_activity(4247,116180
pgstat_setheader(4318,118062
pgstat_send(4331,118265
pgstat_send_archiver(4361,118864
pgstat_send_bgwriter(4382,119304
pgstat_send_slru(4414,120069
PgstatCollectorMain(4456,121096
reset_dbentry_counters(4720,128232
pgstat_get_db_entry(4772,129820
pgstat_get_tab_entry(4803,130570
pgstat_write_statsfiles(4862,132318
get_dbstat_filename(4993,135808
pgstat_write_db_statsfile(5019,136614
pgstat_read_statsfiles(5142,140194
pgstat_read_db_statsfile(5393,147216
pgstat_read_db_statsfile_timestamp(5555,151331
backend_read_statsfile(5686,154590
pgstat_setup_memcxt(5820,158946
pgstat_clear_snapshot(5840,159441
pgstat_recv_inquiry(5861,159825
pgstat_recv_tabstat(5954,162771
pgstat_recv_tabpurge(6064,166871
pgstat_recv_dropdb(6097,167530
pgstat_recv_resetcounter(6140,168451
pgstat_recv_resetsharedcounter(6178,169289
pgstat_recv_resetsinglecounter(6206,170063
pgstat_recv_resetslrucounter(6234,170830
pgstat_recv_autovac(6257,171347
pgstat_recv_vacuum(6276,171729
pgstat_recv_analyze(6322,173019
pgstat_recv_archiver(6365,174032
pgstat_recv_bgwriter(6392,174692
pgstat_recv_slru(6413,175470
pgstat_recv_recoveryconflict(6431,176058
pgstat_recv_deadlock(6471,177014
pgstat_recv_checksum_failure(6487,177309
pgstat_recv_tempfile(6504,177688
pgstat_recv_funcstat(6521,178020
pgstat_recv_funcpurge(6569,179167
pgstat_write_statsfile_needed(6601,179857
pgstat_db_requested(6617,180152
pgstat_clip_activity(6644,180975
pgstat_slru_index(6687,182370
pgstat_slru_name(6709,182858
slru_entry(6724,183169
pgstat_count_slru_page_zeroed(6742,183588
pgstat_count_slru_page_hit(6748,183687
pgstat_count_slru_page_exists(6754,183780
pgstat_count_slru_page_read(6760,183879
pgstat_count_slru_page_written(6766,183974
pgstat_count_slru_flush(6772,184075
pgstat_count_slru_truncate(6778,184160

/home/seinoyu/pgsql/master/postgresql/src/backend/postmaster/syslogger.c,1662
#define READ_BUF_SIZE 59,1781
#define LOGROTATE_SIGNAL_FILE	62,1883
bool		Logging_collector 69,2052
int			Log_RotationAge 70,2085
int			Log_RotationSize 71,2140
char	   *Log_directory Log_directory72,2176
char	   *Log_filename Log_filename73,2207
bool		Log_truncate_on_rotation 74,2237
int			Log_file_mode 75,2277
static pg_time_t next_rotation_time;82,2374
static bool pipe_eof_seen 83,2411
static bool rotation_disabled 84,2446
static FILE *syslogFile syslogFile85,2485
static FILE *csvlogFile csvlogFile86,2517
NON_EXEC_STATIC pg_time_t first_syslogger_file_time 87,2549
static char *last_file_name last_file_name88,2606
static char *last_csv_file_name last_csv_file_name89,2642
	int32		pid;104,3210
	StringInfoData data;105,3253
} save_buffer;106,3316
#define NBUFFER_LISTS 108,3332
static List *buffer_lists[buffer_lists109,3358
int			syslogPipe[syslogPipe113,3479
HANDLE		syslogPipe[syslogPipe115,3517
static HANDLE threadHandle 119,3570
static CRITICAL_SECTION sysloggerSection;120,3602
static volatile sig_atomic_t got_SIGHUP 126,3730
static volatile sig_atomic_t rotation_requested 127,3779
NON_EXEC_STATIC void SysLoggerMain(135,3985
SysLogger_Start(540,15826
syslogger_forkexec(741,21229
syslogger_parseArgs(795,22480
process_pipe_input(877,24799
flush_pipe_input(1028,29000
write_syslogger_file(1079,30202
pipeThread(1121,31827
logfile_open(1197,33742
logfile_rotate(1237,34524
logfile_getname(1389,38704
set_next_rotation_time(1419,39362
update_metainfo_datafile(1454,40508
CheckLogrotateSignal(1537,42421
RemoveLogrotateSignalFiles(1551,42623
sigHupHandler(1558,42750
sigUsr1Handler(1570,42926

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/variable.c,706
check_datestyle(44,952
assign_datestyle(236,5357
check_timezone(253,5578
assign_timezone(373,8396
show_timezone(382,8556
check_log_timezone(408,9012
assign_log_timezone(446,9741
show_log_timezone(455,9909
check_transaction_read_only(486,10876
check_XactIsoLevel(525,12100
check_transaction_deferrable(562,13143
check_random_seed(590,13919
assign_random_seed(602,14191
show_random_seed(611,14428
check_client_encoding(622,14516
assign_client_encoding(698,16981
	Oid			roleid;739,18156
	bool		is_superuser;740,18171
} role_auth_extra;741,18192
check_session_authorization(744,18217
assign_session_authorization(792,19389
check_role(814,19902
assign_role(881,21505
show_role(889,21683

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/prepare.c,504
static HTAB *prepared_queries prepared_queries46,1306
PrepareQuery(58,1642
ExecuteQuery(187,4929
EvaluateParams(314,8800
InitQueryHashTable(405,11090
StorePreparedStatement(427,11620
FetchPreparedStatement(469,12791
FetchPreparedStatementResultDesc(501,13610
FetchPreparedStatementTargetList(524,14322
DeallocateQuery(540,14700
DropPreparedStatement(554,14960
DropAllPreparedStatements(575,15426
ExplainExecuteQuery(606,16239
pg_prepared_statement(701,18895
build_regtype_array(797,22164

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/view.c,173
DefineVirtualRelation(50,1452
checkViewTupleDesc(258,7599
DefineViewRules(307,9392
UpdateRangeTableOfViewParse(344,10557
DefineView(407,12355
StoreViewQuery(565,17082

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/extension.c,2374
bool		creating_extension 71,2121
Oid			CurrentExtensionObject 72,2155
typedef struct ExtensionControlFile77,2279
	char	   *name;name79,2317
	char	   *directory;directory80,2363
	char	   *default_version;default_version81,2418
	char	   *module_pathname;module_pathname82,2490
	char	   *comment;comment84,2576
	char	   *schema;schema85,2618
	bool		relocatable;86,2684
	bool		superuser;87,2751
	bool		trusted;88,2806
	int			encoding;89,2866
	List	   *requires;requires90,2925
} ExtensionControlFile;91,2985
typedef struct ExtensionVersionInfo96,3072
	char	   *name;name98,3110
	List	   *reachable;reachable99,3163
	bool		installable;100,3222
	bool		distance_known;102,3337
	int			distance;103,3400
	struct ExtensionVersionInfo *previous;previous104,3461
} ExtensionVersionInfo;105,3532
get_extension_oid(140,4682
get_extension_name(185,5717
get_extension_schema(224,6574
check_valid_extension_name(261,7374
check_valid_version_name(308,8987
is_extension_control_filename(355,10449
is_extension_script_filename(363,10637
get_extension_control_directory(371,10822
get_extension_control_filename(384,11081
get_extension_script_directory(398,11378
get_extension_aux_control_filename(421,11945
get_extension_script_filename(439,12322
parse_extension_control_file(471,13259
read_extension_control_file(616,17272
read_extension_aux_control_file(645,18016
read_extension_script_file(668,18606
execute_sql_string(709,19874
extension_is_trusted(815,22567
execute_extension_script(835,23098
get_ext_ver_info(1042,29871
get_nearest_unprocessed_vertex(1075,30690
get_ext_ver_list(1103,31434
identify_update_path(1166,33222
find_update_path(1209,34703
find_install_path(1302,37452
CreateExtensionInternal(1357,38915
get_required_extension(1596,45891
CreateExtension(1667,47749
InsertExtensionTuple(1774,50915
RemoveExtensionById(1862,53574
pg_available_extensions(1916,55451
pg_available_extension_versions(2024,58526
get_available_versions_for_extension(2110,60948
extension_file_exists(2224,64103
convert_requires_to_datum(2277,65126
pg_extension_update_paths(2305,65722
pg_extension_config_dump(2418,68946
extension_config_remove(2605,74184
AlterExtensionNamespace(2774,78325
ExecAlterExtensionStmt(2956,83602
ApplyExtensionUpdates(3106,87632
ExecAlterExtensionContentsStmt(3264,91887
read_whole_file(3421,96656

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/statscmds.c,235
compare_int16(49,1428
CreateStatistics(62,1658
AlterStatistics(427,13222
RemoveStatisticsById(531,16007
UpdateStatisticsForTypeChange(604,18569
ChooseExtendedStatisticName(676,20942
ChooseExtendedStatisticNameAddition(718,22102

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/cluster.c,358
	Oid			tableOid;65,1816
	Oid			indexOid;66,1833
} RelToCluster;67,1850
cluster(102,3450
cluster_rel(253,7779
check_index_is_clusterable(419,12972
mark_index_clustered(479,15143
rebuild_relation(552,17223
make_new_heap(605,19092
copy_table_data(731,23106
swap_relation_files(966,32135
finish_heap_swap(1324,43700
get_tables_to_cluster(1513,50281

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/sequence.c,1199
#define SEQ_LOG_VALS	56,1559
#define SEQ_MAGIC	61,1658
typedef struct sequence_magic63,1686
	uint32		magic;65,1718
} sequence_magic;66,1734
typedef struct SeqTableData74,2009
	Oid			relid;76,2039
	Oid			filenode;77,2102
	LocalTransactionId lxid;78,2165
	bool		last_valid;79,2232
	int64		last;80,2291
	int64		cached;81,2344
	int64		increment;83,2474
} SeqTableData;85,2607
typedef SeqTableData *SeqTable;SeqTable87,2624
static HTAB *seqhashtab seqhashtab89,2657
static SeqTableData *last_used_seq last_used_seq95,2813
DefineSequence(118,3639
ResetSequence(270,8366
fill_seq_with_data(343,10328
AlterSequence(422,12409
DeleteSequenceTuple(526,15400
nextval(549,15978
nextval_oid(571,16653
nextval_internal(579,16777
currval_oid(830,23447
lastval(861,24189
do_setval(909,25769
setval_oid(1022,28711
setval3_oid(1037,28957
lock_and_open_sequence(1058,29453
create_seq_hashtable(1086,30100
init_sequence(1103,30450
read_seq_tuple(1170,32285
init_params(1236,34975
process_owned_by(1641,46482
sequence_options(1754,50025
pg_sequence_parameters(1788,51256
pg_sequence_last_value(1847,53125
seq_redo(1883,53888
ResetSequenceCaches(1936,55534
seq_mask(1951,55741

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/analyze.c,1197
typedef struct AnlIndexData71,1948
	IndexInfo  *indexInfo;indexInfo73,1978
	double		tupleFract;74,2031
	VacAttrStats **vacattrstats;vacattrstats75,2094
	int			attr_cnt;76,2153
} AnlIndexData;77,2170
int			default_statistics_target 81,2236
static MemoryContext anl_context 84,2349
static BufferAccessStrategy vac_strategy;85,2390
analyze_rel(119,3834
do_analyze_rel(300,9393
compute_index_stats(723,21440
examine_attribute(905,26505
acquire_sample_rows(1036,31316
compare_rows(1184,35701
acquire_inherited_sample_rows(1214,36562
update_attstats(1459,44024
std_fetch_func(1598,47705
ind_fetch_func(1614,48108
#define WIDTH_THRESHOLD 1644,49198
#define swapInt(1646,49229
#define swapDatum(1647,49295
	int			count;1654,49449
	int			first;1655,49487
} ScalarMCVItem;1656,49544
	SortSupport ssup;1660,49579
	int		   *tupnoLink;tupnoLink1661,49598
} CompareScalarsContext;1662,49619
std_typanalyze(1691,50480
compute_trivial_stats(1771,53193
compute_distinct_stats(1861,55732
		Datum		value;1878,56195
		int			count;1879,56211
	} TrackItem;1880,56226
compute_scalar_stats(2204,65892
compare_scalars(2733,82496
compare_mcvs(2764,83242
analyze_mcv_list(2782,83850

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/opclasscmds.c,566
OpFamilyCacheLookup(84,2763
get_opfamily_oid(142,4227
OpClassCacheLookup(165,4734
get_opclass_oid(223,6179
CreateOpFamily(246,6704
DefineOpClass(331,9218
DefineOpFamily(732,22286
AlterOpFamily(777,23727
AlterOpFamilyAdd(841,25536
AlterOpFamilyDrop(967,29539
processTypesSpec(1043,31866
assignOperTypes(1072,32492
assignProcTypes(1138,34527
addFamilyMember(1327,41168
storeOperators(1366,42279
storeProcedures(1484,46160
dropOperators(1587,49387
dropProcedures(1627,50458
IsThereOpClassInNamespace(1667,51591
IsThereOpFamilyInNamespace(1690,52339

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/collationcmds.c,472
	char	   *localename;localename42,1091
	char	   *alias;alias43,1155
	int			enc;44,1205
} CollAliasData;45,1234
DefineCollation(52,1294
IsThereCollationInNamespace(256,7191
AlterCollation(284,8106
pg_collation_actual_version(355,10180
#define READ_LOCALE_A_OUTPUT385,10989
is_all_ascii(393,11144
normalize_libc_locale_name(413,11583
cmpaliases(444,12091
get_icu_language_tag(461,12525
get_icu_locale_comment(483,13203
pg_import_system_collations(520,14002

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/proclang.c,60
CreateProceduralLanguage(39,984
get_language_oid(228,6691

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/copy.c,5745
#define ISOCTAL(62,1657
#define OCTVALUE(63,1707
typedef enum CopyDest69,1839
	COPY_FILE,71,1863
	COPY_OLD_FE,72,1919
	COPY_NEW_FE,73,1974
	COPY_CALLBACK	74,2029
} CopyDest;75,2079
typedef enum EolType80,2158
	EOL_UNKNOWN,82,2181
	EOL_NL,83,2195
	EOL_CR,84,2204
	EOL_CRNL85,2213
} EolType;86,2223
typedef enum CopyInsertMethod91,2308
	CIM_SINGLE,93,2340
	CIM_MULTI,94,2401
	CIM_MULTI_CONDITIONAL	95,2453
} CopyInsertMethod;96,2520
typedef struct CopyStateData114,3478
	CopyDest	copy_dest;117,3537
	FILE	   *copy_file;copy_file118,3597
	StringInfo	fe_msgbuf;119,3656
	bool		is_copy_from;121,3774
	bool		reached_eof;122,3824
	EolType		eol_type;124,3937
	int			file_encoding;125,3982
	bool		need_transcoding;126,4051
	bool		encoding_embeds_ascii;127,4114
	Relation	rel;130,4220
	QueryDesc  *queryDesc;queryDesc131,4271
	List	   *attnumlist;attnumlist132,4332
	char	   *filename;filename133,4393
	bool		is_program;134,4455
	copy_data_source_cb data_source_cb;135,4515
	bool		binary;136,4584
	bool		freeze;137,4622
	bool		csv_mode;138,4669
	bool		header_line;139,4723
	char	   *null_print;null_print140,4766
	int			null_print_len;141,4833
	char	   *null_print_client;null_print_client142,4877
	char	   *delim;delim143,4944
	char	   *quote;quote144,5003
	char	   *escape;escape145,5060
	List	   *force_quote;force_quote146,5119
	bool		force_quote_all;147,5169
	bool	   *force_quote_flags;force_quote_flags148,5214
	List	   *force_notnull;force_notnull149,5273
	bool	   *force_notnull_flags;force_notnull_flags150,5325
	List	   *force_null;force_null151,5387
	bool	   *force_null_flags;force_null_flags152,5437
	bool		convert_selectively;153,5495
	List	   *convert_select;convert_select154,5561
	bool	   *convert_select_flags;convert_select_flags155,5627
	Node	   *whereClause;whereClause156,5694
	const char *cur_relname;cur_relname159,5818
	uint64		cur_lineno;160,5880
	const char *cur_attname;cur_attname161,5939
	const char *cur_attval;cur_attval162,6002
	MemoryContext copycontext;167,6116
	FmgrInfo   *out_functions;out_functions172,6217
	MemoryContext rowcontext;173,6284
	AttrNumber	num_defaults;178,6386
	FmgrInfo   *in_functions;in_functions179,6412
	Oid		   *typioparams;typioparams180,6485
	int		   *defmap;defmap181,6554
	ExprState **defexprs;defexprs182,6609
	bool		volatile_defexprs;183,6672
	List	   *range_table;range_table184,6733
	ExprState  *qualexpr;qualexpr185,6756
	TransitionCaptureState *transition_capture;transition_capture187,6780
	StringInfoData attribute_buf;200,7280
	int			max_fields;204,7363
	char	  **raw_fields;raw_fields205,7382
	StringInfoData line_buf;215,7806
	bool		line_buf_converted;216,7832
	bool		line_buf_valid;217,7895
#define RAW_BUF_SIZE 227,8380
	char	   *raw_buf;raw_buf228,8445
	int			raw_buf_index;229,8464
	int			raw_buf_len;230,8513
#define RAW_BUF_BYTES(232,8632
} CopyStateData;233,8712
	DestReceiver pub;238,8786
	CopyState	cstate;239,8846
	uint64		processed;240,8903
} DR_copy;241,8952
#define MAX_BUFFERED_TUPLES	253,9342
#define MAX_BUFFERED_BYTES	259,9485
#define MAX_PARTITION_BUFFERS	262,9591
typedef struct CopyMultiInsertBuffer265,9698
	TupleTableSlot *slots[slots267,9737
	ResultRelInfo *resultRelInfo;resultRelInfo268,9810
	BulkInsertState bistate;269,9873
	int			nused;270,9934
	uint64		linenos[linenos271,9992
} CopyMultiInsertBuffer;273,10083
typedef struct CopyMultiInsertInfo280,10327
	List	   *multiInsertBuffers;multiInsertBuffers282,10364
	int			bufferedTuples;283,10439
	int			bufferedBytes;284,10511
	CopyState	cstate;285,10580
	EState	   *estate;estate286,10647
	CommandId	mycid;287,10704
	int			ti_options;288,10755
} CopyMultiInsertInfo;289,10802
#define IF_NEED_REFILL_AND_NOT_EOF_CONTINUE(308,11544
#define IF_NEED_REFILL_AND_EOF_BREAK(320,11847
#define REFILL_LINEBUF 337,12279
#define NO_END_OF_COPY_GOTO 350,12631
static const char BinarySignature[BinarySignature357,12753
SendCopyBegin(410,15108
ReceiveCopyBegin(443,15927
SendCopyEnd(479,16867
CopySendData(508,17666
CopySendString(514,17812
CopySendChar(520,17941
CopySendEndOfRow(526,18047
CopyGetData(619,20591
CopySendInt32(733,23875
CopyGetInt32(747,24143
CopySendInt16(764,24477
CopyGetInt16(776,24706
CopyLoadRawBuf(800,25326
CopyReadBinaryData(827,26033
DoCopy(888,27864
ProcessCopyOptions(1156,35964
BeginCopy(1507,48115
ClosePipeToProgram(1814,57350
EndCopy(1849,58275
BeginCopyTo(1872,58724
DoCopyTo(2008,62738
EndCopyTo(2043,63355
CopyTo(2062,63709
CopyOneRowTo(2206,67263
CopyFromErrorCallback(2284,68986
limit_printout_length(2360,71096
#define MAX_COPY_DATA_DISPLAY 2362,71137
CopyMultiInsertBufferInit(2390,71719
CopyMultiInsertInfoSetupBuffer(2407,72132
CopyMultiInsertInfoInit(2427,72701
CopyMultiInsertInfoIsFull(2452,73441
CopyMultiInsertInfoIsEmpty(2464,73704
CopyMultiInsertBufferFlush(2473,73885
CopyMultiInsertBufferCleanup(2561,76334
CopyMultiInsertInfoFlush(2595,77329
CopyMultiInsertInfoCleanup(2641,78735
CopyMultiInsertInfoNextFreeSlot(2660,79224
CopyMultiInsertInfoStore(2679,79764
CopyFrom(2702,80371
BeginCopyFrom(3383,103157
NextCopyFromRawFields(3639,111016
NextCopyFrom(3691,112462
EndCopyFrom(3876,117358
CopyReadLine(3892,117754
CopyReadLineText(3981,120032
GetDecimalFromHex(4345,131120
CopyReadAttributesText(4373,132055
CopyReadAttributesCSV(4601,137452
CopyReadBinaryAttribute(4770,141494
#define DUMPSOFAR(4821,142960
CopyAttributeOutText(4828,143084
CopyAttributeOutCSV(4981,146919
CopyGetAttnums(5077,149303
copy_dest_startup(5158,151174
copy_dest_receive(5167,151327
copy_dest_shutdown(5183,151617
copy_dest_destroy(5192,151746
CreateCopyDestReceiver(5201,151892

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/discard.c,43
DiscardCommand(31,697
DiscardAll(57,1107

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/vacuum.c,962
int			vacuum_freeze_min_age;61,1611
int			vacuum_freeze_table_age;62,1640
int			vacuum_multixact_freeze_min_age;63,1671
int			vacuum_multixact_freeze_table_age;64,1710
static MemoryContext vac_context 68,1826
static BufferAccessStrategy vac_strategy;69,1867
pg_atomic_uint32 *VacuumSharedCostBalance VacuumSharedCostBalance76,2036
pg_atomic_uint32 *VacuumActiveNWorkers VacuumActiveNWorkers77,2086
int			VacuumCostBalanceLocal 78,2133
ExecVacuum(98,2849
vacuum(272,8228
vacuum_is_relation_owner(533,15282
vacuum_open_relation(607,17443
expand_vacuum_rel(719,20679
get_all_vacuum_rels(858,25035
vacuum_set_xid_limits(929,27386
vac_estimate_reltuples(1121,33998
vac_update_relstats(1206,37637
vac_update_datfrozenxid(1333,41417
vac_truncate_clog(1522,47456
vacuum_rel(1668,52709
vac_open_indexes(1931,61508
vac_close_indexes(1974,62383
vacuum_delay_point(1995,62777
compute_parallel_delay(2057,64922
get_vacopt_ternary_value(2101,66115

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/portalcmds.c,141
PerformCursorOpen(42,1140
PerformPortalFetch(168,5017
PerformPortalClose(215,6123
PortalCleanup(264,7194
PersistHoldablePortal(317,8560

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/tablespace.c,770
char	   *default_tablespace default_tablespace88,3100
char	   *temp_tablespaces temp_tablespaces89,3136
TablespaceCreateDbspace(115,4266
CreateTableSpace(233,7292
DropTableSpace(413,13019
create_tablespace_directories(578,17924
destroy_tablespace_directories(676,20841
directory_is_empty(846,25815
remove_tablespace_symlink(876,26511
RenameTableSpace(925,27566
AlterTableSpaceOptions(1010,29909
check_default_tablespace(1086,32180
GetDefaultTablespace(1138,33643
	int			numSpcs;1187,35098
	Oid			tblSpcs[tblSpcs1188,35114
} temp_tablespaces_extra;1189,35153
check_temp_tablespaces(1193,35233
assign_temp_tablespaces(1301,38120
PrepareTempTablespaces(1326,38932
get_tablespace_oid(1421,41293
get_tablespace_name(1467,42554
tblspc_redo(1506,43530

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/define.c,222
defGetString(49,1308
defGetNumeric(85,2171
defGetBoolean(111,2711
defGetInt32(166,3778
defGetInt64(190,4271
defGetQualifiedName(223,5073
defGetTypeName(255,5868
defGetTypeLength(283,6555
defGetStringList(327,7717

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/dropcmds.c,189
RemoveObjects(57,1728
owningrel_does_not_exist_skipping(143,4338
schema_does_not_exist_skipping(179,5411
type_in_list_does_not_exist_skipping(211,6328
does_not_exist_skipping(248,7203

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/matview.c,797
	DestReceiver pub;52,1342
	Oid			transientoid;53,1402
	Relation	transientrel;55,1521
	CommandId	output_cid;56,1572
	int			ti_options;57,1634
	BulkInsertState bistate;58,1699
} DR_transientrel;59,1749
static int	matview_maintenance_depth 61,1769
SetMatViewPopulatedState(84,2781
ExecRefreshMatView(138,4656
refresh_matview_datafill(371,11671
CreateTransientRelDestReceiver(430,13410
transientrel_startup(448,13895
transientrel_receive(474,14669
transientrel_shutdown(502,15503
transientrel_destroy(519,15923
make_temptable_name_n(533,16264
refresh_by_match_merge(576,18144
refresh_by_heap_swap(844,27250
is_usable_unique_index(854,27534
MatViewIncrementalMaintenanceIsEnabled(908,29328
OpenMatViewIncrementalMaintenance(914,29429
CloseMatViewIncrementalMaintenance(920,29516

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/tablecmds.c,9056
typedef struct OnCommitItem106,3063
	Oid			relid;108,3093
	OnCommitAction oncommit;109,3133
	SubTransactionId creating_subid;118,3541
	SubTransactionId deleting_subid;119,3575
} OnCommitItem;120,3609
static List *on_commits on_commits122,3626
#define AT_PASS_UNSET	139,4271
#define AT_PASS_DROP	140,4327
#define AT_PASS_ALTER_TYPE	141,4377
#define AT_PASS_OLD_INDEX	142,4431
#define AT_PASS_OLD_CONSTR	143,4490
#define AT_PASS_ADD_COL	145,4627
#define AT_PASS_ADD_CONSTR	146,4672
#define AT_PASS_COL_ATTRS	147,4746
#define AT_PASS_ADD_INDEXCONSTR	148,4816
#define AT_PASS_ADD_INDEX	149,4884
#define AT_PASS_ADD_OTHERCONSTR	150,4931
#define AT_PASS_MISC	151,5003
#define AT_NUM_PASSES	152,5047
typedef struct AlteredTableInfo154,5075
	Oid			relid;157,5161
	char		relkind;158,5203
	TupleDesc	oldDesc;159,5238
	List	   *subcmds[subcmds161,5348
	List	   *constraints;constraints163,5463
	List	   *newvals;newvals164,5514
	List	   *afterStmts;afterStmts165,5563
	bool		verify_new_notnull;166,5627
	int			rewrite;167,5692
	Oid			newTableSpace;168,5749
	bool		chgPersistence;169,5811
	char		newrelpersistence;170,5873
	Expr	   *partition_constraint;partition_constraint171,5922
	bool		validate_default;173,6059
	List	   *changedConstraintOids;changedConstraintOids175,6149
	List	   *changedConstraintDefs;changedConstraintDefs176,6219
	List	   *changedIndexOids;changedIndexOids177,6285
	List	   *changedIndexDefs;changedIndexDefs178,6346
	char	   *replicaIdentityIndex;replicaIdentityIndex179,6407
	char	   *clusterOnIndex;clusterOnIndex180,6480
} AlteredTableInfo;181,6537
typedef struct NewConstraint185,6685
	char	   *name;name187,6716
	ConstrType	contype;188,6773
	Oid			refrelid;189,6818
	Oid			refindid;190,6861
	Oid			conid;191,6915
	Node	   *qual;qual192,6976
	ExprState  *qualstate;qualstate193,7040
} NewConstraint;194,7102
typedef struct NewColumnValue204,7579
	AttrNumber	attnum;206,7611
	Expr	   *expr;expr207,7652
	ExprState  *exprstate;exprstate208,7698
	bool		is_generated;209,7745
} NewColumnValue;210,7802
struct dropmsgstrings215,7875
	char		kind;217,7899
	int			nonexistent_code;218,7912
	const char *nonexistent_msg;nonexistent_msg219,7937
	const char *skipping_msg;skipping_msg220,7967
	const char *nota_msg;nota_msg221,7994
	const char *drophint_msg;drophint_msg222,8017
static const struct dropmsgstrings dropmsgstringarray[dropmsgstringarray225,8048
struct DropRelationCallbackState283,10486
	char		relkind;285,10521
	Oid			heapOid;286,10537
	Oid			partParentOid;287,10553
	bool		concurrent;288,10575
#define		ATT_TABLE	292,10658
#define		ATT_VIEW	293,10687
#define		ATT_MATVIEW	294,10715
#define		ATT_INDEX	295,10746
#define		ATT_COMPOSITE_TYPE	296,10775
#define		ATT_FOREIGN_TABLE	297,10811
#define		ATT_PARTITIONED_INDEX	298,10846
#define child_dependency_type(305,11098
DefineRelation(581,26808
DropErrorMsgNonExistent(1181,45627
DropErrorMsgWrongType(1229,46645
RemoveRelations(1256,47434
RangeVarCallbackForDropRelation(1394,51301
ExecuteTruncate(1546,56539
ExecuteTruncateGuts(1671,60182
truncate_check_rel(1963,68167
truncate_check_perms(1991,69020
truncate_check_activity(2009,69568
storage_name(2032,70199
MergeAttributes(2107,72774
MergeCheckConstraint(2790,95025
StoreCatalogInheritance(2828,95815
StoreCatalogInheritance1(2872,96940
findAttrByName(2917,98140
SetRelationHasSubclass(2949,98908
renameatt_check(2983,99859
renameatt_internal(3031,101552
RangeVarCallbackForRenameAttribute(3176,106039
renameatt(3196,106571
rename_constraint_internal(3234,107494
RenameConstraint(3340,110219
RenameRelation(3391,111577
RenameRelationInternal(3431,112617
CheckTableNotInUse(3533,116486
AlterTableLookupRelation(3561,117414
AlterTable(3617,120164
AlterTableInternal(3646,121143
AlterTableGetLockLevel(3691,123075
ATController(3952,130848
ATPrepCmd(3987,131813
ATRewriteCatalogs(4309,143787
ATExecCmd(4379,145833
ATParseTransformCmd(4695,157402
ATRewriteTables(4817,160896
ATRewriteTable(5066,168694
ATGetQueueEntry(5439,178434
ATSimplePermissions(5476,179327
ATWrongRelkindError(5532,180691
ATSimpleRecursion(5594,182641
ATCheckPartitionsNotInUse(5643,184163
ATTypedTableRecursion(5673,184976
find_composite_type_dependencies(5718,186518
find_typed_table_dependencies(5836,190323
check_of_type(5885,191801
ATPrepAddColumn(5928,193215
ATExecAddColumn(5952,194002
check_for_column_name_collision(6358,207505
add_column_datatype_dependency(6411,208928
add_column_collation_dependency(6429,209363
ATPrepDropNotNull(6452,209948
ATExecDropNotNull(6476,210725
ATPrepSetNotNull(6601,214079
ATExecSetNotNull(6635,215086
ATExecCheckNotNull(6717,217685
NotNullImpliedByRelConstraints(6746,218593
ATExecColumnDefault(6783,219591
ATExecAddIdentity(6864,222189
ATExecSetIdentity(6936,224460
ATExecDropIdentity(7018,226625
ATPrepDropExpression(7092,228803
ATExecDropExpression(7122,229596
ATExecSetStatistics(7239,232910
ATExecSetOptions(7349,236041
ATExecSetStorage(7427,238317
ATPrepDropColumn(7560,241845
ATExecDropColumn(7588,242916
ATExecAddIndex(7784,248535
ATExecAddIndexConstraint(7844,250473
ATExecAddConstraint(7936,253250
ChooseForeignKeyConstraintNameAddition(8009,255392
ATAddCheckConstraint(8051,256697
ATAddForeignKeyConstraint(8187,261111
addFkRecurseReferenced(8626,276643
addFkRecurseReferencing(8831,283305
CloneForeignKeyConstraints(9027,289287
CloneFkReferenced(9056,290190
CloneFkReferencing(9210,295231
tryAttachPartitionForeignKey(9428,301925
ATExecAlterConstraint(9564,306252
ATExecValidateConstraint(9730,311351
transformColumnNameList(9918,316780
transformFkeyGetPrimaryKey(9963,318089
transformFkeyCheckAttrs(10060,320884
findFkeyCast(10201,324993
checkFkeyPermissions(10230,325718
validateForeignKeyConstraint(10259,326551
CreateFKCheckTrigger(10350,328979
createForeignKeyActionTriggers(10404,330765
createForeignKeyCheckTriggers(10525,334723
ATExecDropConstraint(10541,335188
ATPrepAlterColumnType(10794,342706
ATColumnChangeRequiresRewrite(11075,352166
ATExecAlterColumnType(11122,353132
RememberReplicaIdentityForRebuilding(11617,368768
RememberClusterOnForRebuilding(11632,369157
RememberConstraintForRebuilding(11648,369562
RememberIndexForRebuilding(11688,370962
ATPostAlterTypeCleanup(11742,372948
ATPostAlterTypeParse(11894,377737
RebuildConstraintComment(12091,383551
TryReuseIndex(12135,384835
TryReuseForeignKey(12163,385627
ATExecAlterColumnGenericOptions(12206,386850
ATExecChangeOwner(12323,390347
change_owner_fix_column_acls(12561,398045
change_owner_recurse_to_sequences(12626,399926
ATExecClusterOn(12695,401871
ATExecDropCluster(12727,402665
ATPrepSetTableSpace(12736,402817
ATExecSetRelOptions(12766,403689
ATExecSetTableSpace(12968,409245
ATExecSetTableSpaceNoStorage(13110,413498
AlterTableMoveAll(13176,415634
index_copy_data(13338,420981
ATExecEnableDisableTrigger(13398,422640
ATExecEnableDisableRule(13410,422946
ATPrepAddInherit(13424,423338
ATExecAddInherit(13446,423954
CreateInheritance(13558,428058
decompile_conbin(13627,430274
constraints_equivalent(13652,431032
MergeAttributesIntoExisting(13681,432018
MergeConstraintsIntoExisting(13792,435488
ATExecDropInherit(13922,439668
RemoveInheritance(13975,441359
drop_parent_dependency(14144,446688
ATExecAddOf(14196,448203
ATExecDropOf(14338,452716
relation_mark_replica_identity(14379,454025
ATExecReplicaIdentity(14477,456733
ATExecEnableRowSecurity(14592,460760
ATExecDisableRowSecurity(14615,461302
ATExecForceNoForceRowSecurity(14642,461957
ATExecGenericOptions(14668,462582
ATPrepChangePersistence(14753,464983
AlterTableNamespace(14872,468518
AlterTableNamespaceInternal(14943,470519
AlterRelationNamespaceInternal(14982,471784
AlterIndexNamespaces(15052,473927
AlterSeqNamespaces(15097,475153
register_on_commit_action(15182,477602
remove_on_commit_action(15218,478548
PreCommit_on_commit_actions(15241,478924
AtEOXact_on_commit_actions(15341,481614
AtEOSubXact_on_commit_actions(15373,482453
RangeVarCallbackOwnsTable(15408,483497
RangeVarCallbackForTruncate(15440,484518
RangeVarCallbackOwnsRelation(15464,485200
RangeVarCallbackForAlterRelation(15496,486121
transformPartitionSpec(15623,490418
ComputePartitionAttrs(15694,492587
PartConstraintImpliedByRelConstraint(15951,500816
ConstraintImpliedByRelConstraint(16004,502325
QueuePartitionConstraintValidation(16061,504201
ATExecAttachPartition(16134,506318
AttachPartitionEnsureIndexes(16420,516541
CloneRowTriggersToPartition(16593,521491
ATExecDetachPartition(16745,526173
DropClonedTriggersFromPartition(16937,532240
struct AttachIndexCallbackState16994,533948
	Oid			partitionOid;16996,533982
	Oid			parentTblOid;16997,534003
	bool		lockedParentTbl;16998,534024
RangeVarCallbackForAttachIndex(17002,534064
ATExecAttachPartitionIdx(17056,535736
refuseDupeIndexAttach(17210,540993
validatePartitionedIndex(17233,541817
GetParentedForeignKeyRefs(17327,544684
ATDetachCheckNoForeignKeyRefs(17380,546237

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/aggregatecmds.c,50
DefineAggregate(57,1818
extractModify(480,15729

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/user.c,440
Oid			binary_upgrade_next_pg_authid_oid 42,1237
int			Password_encryption 46,1313
check_password_hook_type check_password_hook 49,1433
have_createrole_privilege(61,1816
CreateRole(71,1927
AlterRole(531,15584
AlterRoleSet(913,26153
DropRole(994,28063
RenameRole(1172,33028
GrantRole(1312,37151
DropOwnedObjects(1371,38646
ReassignOwnedObjects(1397,39188
roleSpecsToIds(1434,40067
AddRoleMems(1461,40725
DelRoleMems(1603,45504

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/conversioncmds.c,32
CreateConversionCommand(37,943

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/explain.c,2697
ExplainOneQuery_hook_type ExplainOneQuery_hook 44,1204
explain_get_index_name_hook_type explain_get_index_name_hook 47,1326
#define X_OPENING 51,1437
#define X_CLOSING 52,1457
#define X_CLOSE_IMMEDIATE 53,1477
#define X_NOWHITESPACE 54,1505
ExplainQuery(160,6941
NewExplainState(309,11417
ExplainResultDesc(326,11759
ExplainOneQuery(365,12676
ExplainOneUtility(425,14370
ExplainOnePlan(500,16773
ExplainPrintSettings(661,21228
ExplainPrintPlan(731,22823
ExplainPrintTriggers(780,24507
ExplainPrintJITSummary(826,25761
ExplainPrintJIT(852,26453
ExplainQueryText(946,29643
report_triggers(957,29897
elapsed_time(1028,31959
ExplainPreScanNode(1047,32554
ExplainNode(1121,34920
show_plan_tlist(2152,63426
show_expression(2210,65088
show_qual(2233,65660
show_scan_qual(2254,66106
show_upper_qual(2268,66454
show_sort_keys(2282,66771
show_incremental_sort_keys(2297,67163
show_merge_append_keys(2314,67656
show_agg_keys(2330,68063
show_grouping_sets(2353,68653
show_grouping_set_keys(2384,69460
show_group_keys(2462,71358
show_sort_group_keys(2482,72010
show_sortorder_options(2544,73889
show_tablesample(2602,75632
show_sort_info(2668,77275
show_incremental_sort_group_info(2759,80038
show_incremental_sort_info(2873,83773
show_hash_info(2959,86453
show_hashagg_info(3050,89650
show_tidbitmap_info(3160,92526
show_instrumentation_count(3190,93399
show_foreignscan_info(3219,94116
show_eval_params(3240,94647
explain_get_index_name(3270,95418
show_buffer_usage(3292,95853
show_wal_usage(3416,100063
ExplainIndexScanDetails(3454,101059
ExplainScanTarget(3493,101903
ExplainModifyTarget(3506,102259
ExplainTargetRel(3515,102454
show_modifytable_info(3638,105993
ExplainMemberNodes(3798,110109
ExplainMissingMembers(3816,110595
ExplainSubPlans(3830,111001
ExplainCustomChildren(3873,112330
ExplainCreateWorkersState(3895,113225
ExplainOpenWorker(3912,113744
ExplainCloseWorker(3974,115399
ExplainFlushWorkersState(4010,116405
ExplainPropertyList(4040,117225
ExplainPropertyListNested(4110,119001
ExplainProperty(4163,120313
ExplainPropertyText(4216,121594
ExplainPropertyInteger(4225,121777
ExplainPropertyUInteger(4238,122056
ExplainPropertyFloat(4252,122376
ExplainPropertyBool(4266,122655
ExplainOpenGroup(4281,123082
ExplainCloseGroup(4344,124682
ExplainOpenSetAsideGroup(4391,126218
ExplainSaveGroup(4430,127211
ExplainRestoreGroup(4460,127883
ExplainDummyGroup(4491,128547
ExplainBeginOutput(4537,129509
ExplainEndOutput(4568,130156
ExplainSeparatePlans(4597,130720
ExplainXMLTag(4626,131443
ExplainIndentText(4653,132384
ExplainJSONLineEnding(4668,132848
ExplainYAMLLineStarting(4688,133523
escape_yaml(4713,134390

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/comment.c,157
CommentObject(40,962
CreateComments(142,4533
CreateSharedComments(237,7107
DeleteComments(325,9485
DeleteSharedComments(373,10552
GetComment(409,11448

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/amcmds.c,213
CreateAccessMethod(43,1126
get_am_type_oid(129,3427
get_index_am_oid(163,4277
get_table_am_oid(173,4519
get_am_oid(183,4739
get_am_name(192,4934
get_am_type_string(212,5338
lookup_am_handler_func(234,5845

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/publicationcmds.c,464
#define MAX_RELCACHE_INVAL_MSGS 49,1354
parse_publication_options(58,1676
CreatePublication(148,4107
AlterPublicationOptions(259,7367
AlterPublicationTables(358,10152
AlterPublication(437,12096
RemovePublicationRelById(475,12980
OpenTableList(507,13768
CloseTableList(590,15733
PublicationAddTables(606,15937
PublicationDropTables(639,16746
AlterPublicationOwner_internal(673,17516
AlterPublicationOwner(724,18934
AlterPublicationOwner_oid(759,19686

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/schemacmds.c,146
CreateSchemaCommand(50,1454
RenameSchema(218,6920
AlterSchemaOwner_oid(276,8567
AlterSchemaOwner(299,9014
AlterSchemaOwner_internal(330,9702

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/typecmds.c,1786
	Relation	rel;81,2336
	int			natts;82,2386
	int		   *atts;atts83,2441
} RelToCheck;85,2555
	bool		updateStorage;91,2692
	bool		updateReceive;92,2714
	bool		updateSend;93,2736
	bool		updateTypmodin;94,2755
	bool		updateTypmodout;95,2778
	bool		updateAnalyze;96,2802
	char		storage;98,2866
	Oid			receiveOid;99,2882
	Oid			sendOid;100,2901
	Oid			typmodinOid;101,2917
	Oid			typmodoutOid;102,2937
	Oid			analyzeOid;103,2958
} AlterTypeRecurseParams;104,2977
Oid			binary_upgrade_next_array_pg_type_oid 107,3058
DefineType(139,4502
RemoveTypeById(617,21002
DefineDomain(657,21975
DefineEnum(1092,34766
AlterEnum(1214,39252
checkEnumOwner(1262,40427
DefineRange(1284,40944
makeRangeConstructors(1553,50154
findTypeInputFunction(1625,52371
findTypeOutputFunction(1677,54050
findTypeReceiveFunction(1712,55044
findTypeSendFunction(1755,56276
findTypeTypmodinFunction(1790,57256
findTypeTypmodoutFunction(1824,58238
findTypeAnalyzeFunction(1858,59217
findRangeSubOpclass(1893,60080
findRangeCanonicalFunction(1932,61163
findRangeSubtypeDiffFunction(1973,62397
AssignTypeArrayOid(2021,63801
DefineCompositeType(2063,64935
AlterDomainDefault(2121,66711
AlterDomainNotNull(2252,70684
AlterDomainDropConstraint(2372,74004
AlterDomainAddConstraint(2471,76785
AlterDomainValidateConstraint(2587,79961
validateDomainConstraint(2689,82790
get_rels_with_domain(2809,86854
checkDomainOwner(2978,91618
domainAddConstraint(2998,92162
replace_domain_constraint_value(3121,95648
RenameType(3153,96489
AlterTypeOwner(3231,98969
AlterTypeOwner_oid(3340,102466
AlterTypeOwnerInternal(3380,103645
AlterTypeNamespace(3435,105110
AlterTypeNamespace_oid(3472,106092
AlterTypeNamespaceInternal(3510,107358
AlterType(3653,111387
AlterTypeRecurse(3891,119384

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/functioncmds.c,644
compute_return_type(88,2808
interpret_function_parameter_list(184,5928
compute_common_attribute(474,14479
interpret_func_volatility(583,16781
interpret_func_parallel(601,17185
update_proconfig_value(626,17828
interpret_func_support(651,18263
compute_function_attributes(695,19421
interpret_AS_clause(862,23847
CreateFunction(922,25603
RemoveFunctionById(1187,33062
AlterFunction(1235,34264
CreateCast(1408,39072
check_transform_function(1651,47313
CreateTransform(1681,48284
get_transform_oid(1893,54674
IsThereFunctionInNamespace(1917,55347
ExecuteDoStmt(1940,56065
ExecuteCallStmt(2066,60420
CallStmtResultDesc(2233,65074

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/indexcmds.c,795
struct ReindexIndexCallbackState98,3080
	bool		concurrent;100,3115
	Oid			locked_table_oid;101,3161
CheckIndexCompatible(142,5215
CompareOpclassOptions(325,10806
WaitForOlderSnapshots(389,13031
DefineIndex(479,16019
CheckMutability(1581,51788
CheckPredicate(1615,53198
ComputeIndexAttrs(1638,53941
ResolveOpClass(1960,63497
GetDefaultOpClass(2045,65991
makeObjectName(2154,69263
ChooseRelationName(2240,71934
ChooseIndexName(2276,72708
ChooseIndexNameAddition(2331,74130
ChooseIndexColumnNames(2365,75000
ReindexIndex(2423,76287
RangeVarCallbackForReindexIndex(2476,77915
ReindexTable(2545,79894
ReindexMultipleTables(2596,81408
ReindexRelationConcurrently(2825,89067
ReindexPartitionedIndex(3487,108237
IndexSetParentIndex(3501,108631
update_relispartition(3646,112652

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/subscriptioncmds.c,339
parse_subscription_options(58,1736
publicationListToArray(273,7728
CreateSubscription(327,8877
AlterSubscription_refresh(540,14921
AlterSubscription(649,17929
DropSubscription(882,24265
AlterSubscriptionOwner_internal(1087,30075
AlterSubscriptionOwner(1124,31076
AlterSubscriptionOwner_oid(1160,31851
fetch_table_list(1186,32462

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/constraint.c,28
unique_key_recheck(41,1182

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/lockcmds.c,369
LockTableCommand(41,1196
RangeVarCallbackForLockTable(71,1962
LockTableRecurse(116,3365
	LOCKMODE	lockmode;168,4593
	bool		nowait;169,4637
	Oid			viewowner;170,4673
	Oid			viewoid;171,4736
	List	   *ancestor_views;ancestor_views172,4788
} LockViewRecurse_context;173,4843
LockViewRecurse_walker(176,4883
LockViewRecurse(248,7036
LockTableAclCheck(275,7690

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/createas.c,489
	DestReceiver pub;56,1708
	IntoClause *into;into57,1768
	Relation	rel;59,1876
	ObjectAddress reladdr;60,1920
	CommandId	output_cid;61,1989
	int			ti_options;62,2051
	BulkInsertState bistate;63,2116
} DR_intorel;64,2166
create_ctas_internal(85,2940
create_ctas_nodata(158,5121
ExecCreateTableAs(226,6936
GetIntoRelEFlags(393,12209
CreateIntoRelDestReceiver(411,12654
intorel_startup(430,13148
intorel_receive(568,17400
intorel_shutdown(596,18205
intorel_destroy(613,18569

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/trigger.c,6659
int			SessionReplicationRole 67,1863
static int	MyTriggerDepth 70,1986
#define GetAllUpdatedColumns(78,2286
CreateTrigger(157,6044
RemoveTriggerById(1161,38427
get_trigger_oid(1239,40671
RangeVarCallbackForRenameTrigger(1289,41801
renametrig(1335,43311
EnableDisableTrigger(1469,47246
RelationBuildTriggers(1592,50517
SetTriggerFlags(1744,54795
CopyTriggerDesc(1821,57984
FreeTriggerDesc(1876,59345
equalTriggerDescs(1913,60078
FindTriggerIncompatibleWithInheritance(2008,63241
ExecCallTriggerFunc(2038,63966
ExecBSInsertTriggers(2130,66368
ExecASInsertTriggers(2181,67753
ExecBRInsertTriggers(2192,68101
ExecARInsertTriggers(2268,70384
ExecIRInsertTriggers(2283,70876
ExecBSDeleteTriggers(2344,72443
ExecASDeleteTriggers(2395,73828
ExecBRDeleteTriggers(2413,74428
ExecARDeleteTriggers(2498,76661
ExecIRDeleteTriggers(2528,77524
ExecBSUpdateTriggers(2575,78859
ExecASUpdateTriggers(2630,80378
ExecBRUpdateTriggers(2643,80777
ExecARUpdateTriggers(2783,85244
ExecIRUpdateTriggers(2825,86585
ExecBSTruncateTriggers(2891,88345
ExecASTruncateTriggers(2938,89567
GetTupleForTrigger(2949,89865
TriggerEnabled(3065,92869
typedef struct SetConstraintTriggerData3188,96648
	Oid			sct_tgoid;3190,96690
	bool		sct_tgisdeferred;3191,96708
} SetConstraintTriggerData;3192,96733
typedef struct SetConstraintTriggerData *SetConstraintTrigger;SetConstraintTrigger3194,96762
typedef struct SetConstraintStateData3206,97127
	bool		all_isset;3208,97167
	bool		all_isdeferred;3209,97185
	int			numstates;3210,97208
	int			numalloc;3211,97271
	SetConstraintTriggerData trigstates[trigstates3212,97326
} SetConstraintStateData;3213,97387
typedef SetConstraintStateData *SetConstraintState;SetConstraintState3215,97414
typedef uint32 TriggerFlags;3255,99580
#define AFTER_TRIGGER_OFFSET	3257,99610
#define AFTER_TRIGGER_DONE	3258,99681
#define AFTER_TRIGGER_IN_PROGRESS	3259,99722
#define AFTER_TRIGGER_FDW_REUSE	3261,99831
#define AFTER_TRIGGER_FDW_FETCH	3262,99876
#define AFTER_TRIGGER_1CTID	3263,99921
#define AFTER_TRIGGER_2CTID	3264,99963
#define AFTER_TRIGGER_TUP_BITS	3265,100005
typedef struct AfterTriggerSharedData *AfterTriggerShared;AfterTriggerShared3267,100050
typedef struct AfterTriggerSharedData3269,100110
	TriggerEvent ats_event;3271,100150
	Oid			ats_tgoid;3272,100218
	Oid			ats_relid;3273,100260
	CommandId	ats_firing_id;3274,100306
	struct AfterTriggersTableData *ats_table;ats_table3275,100358
	Bitmapset  *ats_modifiedcols;ats_modifiedcols3276,100431
} AfterTriggerSharedData;3277,100485
typedef struct AfterTriggerEventData *AfterTriggerEvent;AfterTriggerEvent3279,100512
typedef struct AfterTriggerEventData3281,100570
	TriggerFlags ate_flags;3283,100609
	ItemPointerData ate_ctid1;3284,100679
	ItemPointerData ate_ctid2;3285,100753
} AfterTriggerEventData;3286,100805
typedef struct AfterTriggerEventDataOneCtid3289,100876
	TriggerFlags ate_flags;3291,100922
	ItemPointerData ate_ctid1;3292,100992
}			AfterTriggerEventDataOneCtid;3293,101066
typedef struct AfterTriggerEventDataZeroCtids3296,101160
	TriggerFlags ate_flags;3298,101208
}			AfterTriggerEventDataZeroCtids;3299,101278
#define SizeofTriggerEvent(3301,101315
#define GetTriggerSharedData(3308,101618
typedef struct AfterTriggerEventChunk3318,102094
	struct AfterTriggerEventChunk *next;next3320,102134
	char	   *freeptr;freeptr3321,102188
	char	   *endfree;endfree3322,102243
	char	   *endptr;endptr3323,102296
} AfterTriggerEventChunk;3325,102366
#define CHUNK_DATA_START(3327,102393
typedef struct AfterTriggerEventList3330,102509
	AfterTriggerEventChunk *head;head3332,102548
	AfterTriggerEventChunk *tail;tail3333,102579
	char	   *tailfree;tailfree3334,102610
} AfterTriggerEventList;3335,102659
#define for_each_chunk(3338,102741
#define for_each_event(3340,102843
#define for_each_event_chunk(3345,103113
#define for_each_chunk_from(3349,103299
#define for_each_event_from(3351,103376
typedef struct AfterTriggersQueryData AfterTriggersQueryData;3432,107389
typedef struct AfterTriggersTransData AfterTriggersTransData;3433,107451
typedef struct AfterTriggersTableData AfterTriggersTableData;3434,107513
typedef struct AfterTriggersData3436,107576
	CommandId	firing_counter;3438,107611
	SetConstraintState state;3439,107669
	AfterTriggerEventList events;3440,107723
	MemoryContext event_cxt;3441,107780
	AfterTriggersQueryData *query_stack;query_stack3444,107876
	int			query_depth;3445,107949
	int			maxquerydepth;3446,108004
	AfterTriggersTransData *trans_stack;trans_stack3449,108100
	int			maxtransdepth;3450,108173
} AfterTriggersData;3451,108230
struct AfterTriggersQueryData3453,108252
	AfterTriggerEventList events;3455,108284
	Tuplestorestate *fdw_tuplestore;fdw_tuplestore3456,108352
	List	   *tables;tables3457,108423
struct AfterTriggersTransData3460,108495
	SetConstraintState state;3463,108589
	AfterTriggerEventList events;3464,108664
	int			query_depth;3465,108720
	CommandId	firing_counter;3466,108764
struct AfterTriggersTableData3469,108822
	Oid			relid;3472,108916
	CmdType		cmdType;3473,108957
	bool		closed;3474,109020
	bool		before_trig_done;3475,109080
	bool		after_trig_done;3476,109145
	AfterTriggerEventList after_trig_events;3477,109209
	Tuplestorestate *old_tuplestore;old_tuplestore3478,109283
	Tuplestorestate *new_tuplestore;new_tuplestore3479,109354
	TupleTableSlot *storeslot;storeslot3480,109425
static AfterTriggersData afterTriggers;3483,109501
GetCurrentFDWTuplestore(3509,110504
afterTriggerCheckState(3545,111377
afterTriggerAddEvent(3591,112516
#define MIN_CHUNK_SIZE 3632,114229
#define MAX_CHUNK_SIZE 3633,114257
afterTriggerFreeEventList(3707,116404
afterTriggerRestoreEventList(3728,116834
afterTriggerDeleteHeadEventChunk(3768,117882
AfterTriggerExecute(3822,119658
afterTriggerMarkEvents(4036,126129
afterTriggerInvokeEvents(4108,128233
GetAfterTriggersTableData(4252,132316
MakeTransitionCaptureState(4310,134302
AfterTriggerBeginXact(4400,137309
AfterTriggerBeginQuery(4432,138245
AfterTriggerEndQuery(4452,138832
AfterTriggerFreeQuery(4543,142092
AfterTriggerFireDeferred(4596,143361
AfterTriggerEndXact(4652,144763
AfterTriggerBeginSubXact(4700,146116
AfterTriggerEndSubXact(4748,147683
AfterTriggerEnlargeQueryState(4850,151001
SetConstraintStateCreate(4897,152281
SetConstraintStateCopy(4922,152809
SetConstraintStateAddItem(4942,153400
AfterTriggerSetState(4972,154162
AfterTriggerPendingOnRel(5287,163227
AfterTriggerSaveEvent(5357,165608
before_stmt_triggers_fired(5690,176502
cancel_prior_stmt_triggers(5736,178532
pg_trigger_depth(5811,180707

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/dbcommands.c,723
	Oid			src_dboid;70,2017
	Oid			dest_dboid;71,2063
} createdb_failure_params;72,2116
	Oid			dest_dboid;76,2161
	Oid			dest_tsoid;77,2212
} movedb_failure_params;78,2274
createdb(100,3060
check_encoding_locale_matches(755,25729
createdb_failure_callback(793,27010
dropdb(813,27523
RenameDatabase(1018,33447
movedb(1116,36430
movedb_failure_callback(1431,46579
DropDatabase(1446,46957
AlterDatabase(1471,47463
AlterDatabaseSet(1650,53007
AlterDatabaseOwner(1676,53587
get_db_info(1799,57147
have_createdb_privilege(1920,60385
remove_dbtablespaces(1945,60910
check_db_file_conflict(2035,63269
errdetail_busy_db(2078,64186
get_database_oid(2108,65195
get_database_name(2155,66325
dbase_redo(2176,66699

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/async.c,4502
#define NOTIFY_PAYLOAD_MAX_LENGTH	156,7326
typedef struct AsyncQueueEntry170,7934
	int			length;172,7967
	Oid			dboid;173,8022
	TransactionId xid;174,8066
	int32		srcPid;175,8107
	char		data[data176,8144
} AsyncQueueEntry;177,8198
#define QUEUEALIGN(180,8296
#define AsyncQueueEntryEmptySize	182,8336
typedef struct QueuePosition187,8494
	int			page;189,8525
	int			offset;190,8563
} QueuePosition;191,8610
#define QUEUE_POS_PAGE(193,8628
#define QUEUE_POS_OFFSET(194,8666
#define SET_QUEUE_POS(196,8709
#define QUEUE_POS_EQUAL(202,8804
#define QUEUE_POS_IS_ZERO(205,8888
#define QUEUE_POS_MIN(209,9001
#define QUEUE_POS_MAX(215,9202
#define QUEUE_CLEANUP_DELAY 231,9962
typedef struct QueueBackendStatus236,10050
	int32		pid;238,10086
	Oid			dboid;239,10134
	BackendId	nextListener;240,10194
	QueuePosition pos;241,10266
} QueueBackendStatus;242,10328
typedef struct AsyncQueueControl271,11633
	QueuePosition head;273,11668
	QueuePosition tail;274,11735
	BackendId	firstListener;276,11837
	TimestampTz lastQueueFillWarn;277,11911
	QueueBackendStatus backend[backend278,11977
} AsyncQueueControl;280,12103
static AsyncQueueControl *asyncQueueControl;asyncQueueControl282,12125
#define QUEUE_HEAD	284,12171
#define QUEUE_TAIL	285,12220
#define QUEUE_FIRST_LISTENER	286,12269
#define QUEUE_BACKEND_PID(287,12334
#define QUEUE_BACKEND_DBOID(288,12400
#define QUEUE_NEXT_LISTENER(289,12470
#define QUEUE_BACKEND_POS(290,12547
static SlruCtlData NotifyCtlData;295,12692
#define NotifyCtl	297,12727
#define QUEUE_PAGESIZE	298,12766
#define QUEUE_FULL_WARN_INTERVAL	299,12799
#define QUEUE_MAX_PAGE	318,13702
static List *listenChannels listenChannels325,13955
	LISTEN_LISTEN,339,14540
	LISTEN_UNLISTEN,340,14556
	LISTEN_UNLISTEN_ALL341,14574
} ListenActionKind;342,14595
	ListenActionKind action;346,14633
	char		channel[channel347,14659
} ListenAction;348,14726
typedef struct ActionList350,14743
	int			nestingLevel;352,14771
	List	   *actions;actions353,14832
	struct ActionList *upper;upper354,14887
} ActionList;355,14957
static ActionList *pendingActions pendingActions357,14972
typedef struct Notification386,16594
	uint16		channel_len;388,16624
	uint16		payload_len;389,16682
	char		data[data391,16808
} Notification;392,16844
typedef struct NotificationList394,16861
	int			nestingLevel;396,16895
	List	   *events;events397,16956
	HTAB	   *hashtab;hashtab398,17011
	struct NotificationList *upper;upper399,17079
} NotificationList;400,17155
#define MIN_HASHABLE_NOTIFIES 402,17176
typedef struct NotificationHash404,17243
	Notification *event;event406,17277
} NotificationHash;407,17340
static NotificationList *pendingNotifies pendingNotifies409,17361
volatile sig_atomic_t notifyInterruptPending 418,17720
static bool unlistenExitRegistered 421,17831
static bool amRegisteredListener 424,17952
static bool backendHasSentNotifications 427,18065
static bool backendTryAdvanceTail 430,18190
bool		Trace_notify 433,18254
asyncQueuePageDiff(471,19910
asyncQueuePagePrecedes(492,20394
AsyncShmemSize(501,20536
AsyncShmemInit(518,20877
pg_notify(576,22427
Async_Notify(610,23115
queue_listen(709,25855
Async_Listen(757,27321
Async_Unlisten(771,27561
Async_UnlistenAll(789,27967
pg_listening_channels(809,28463
Async_UnlistenOnExit(842,29279
AtPrepare_Notify(855,29528
PreCommit_Notify(880,30377
AtCommit_Notify(982,33633
Exec_ListenPreCommit(1032,34715
Exec_ListenCommit(1127,37938
Exec_UnlistenCommit(1154,38697
Exec_UnlistenAllCommit(1185,39279
ProcessCompletedNotifies(1218,40581
IsListeningOn(1282,42241
asyncQueueUnregister(1301,42604
asyncQueueIsFull(1342,43678
asyncQueueAdvance(1373,44801
asyncQueueNotificationToEntry(1408,45694
asyncQueueAddEntries(1444,47072
pg_notification_queue_usage(1558,50788
asyncQueueUsage(1578,51238
asyncQueueFillWarning(1607,51935
SignalBackends(1660,53632
AtAbort_Notify(1743,55844
AtSubCommit_Notify(1763,56359
AtSubAbort_Notify(1833,58272
HandleNotifyInterrupt(1876,59668
ProcessNotifyInterrupt(1902,60425
asyncQueueReadAllNotifications(1918,60779
		char		buf[buf1928,60984
		AsyncQueueEntry align;1929,61013
asyncQueueProcessPageEntries(2084,66508
asyncQueueAdvanceTail(2173,69073
ProcessIncomingNotify(2223,70453
NotifyMyFrontEnd(2262,71207
AsyncExistsPendingNotify(2287,71918
AddEventToPendingNotifies(2328,72782
notification_hash(2392,74452
notification_match(2406,74887
ClearPendingActionsAndNotifies(2422,75423

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/alter.c,347
report_name_conflict(77,2345
report_namespace_conflict(112,3248
AlterObjectRename_internal(166,4940
ExecRenameStmt(331,9957
ExecAlterObjectDependsStmt(431,12369
ExecAlterObjectSchemaStmt(495,14251
AlterObjectNamespace_oid(589,16882
AlterObjectNamespace_internal(690,19287
ExecAlterOwnerStmt(833,23726
AlterObjectOwner_internal(934,26526

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/policy.c,345
RangeVarCallbackForPolicy(66,1903
parse_policy_command(110,3183
policy_role_list_to_array(139,3847
RelationBuildRowSecurity(192,5004
RemovePolicyById(354,9739
RemoveRoleFromObjectPolicy(439,12412
CreatePolicy(690,19805
AlterPolicy(890,25879
rename_policy(1219,35000
get_relation_policy_oid(1327,38030
relation_has_policies(1379,39276

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/foreigncmds.c,869
	char	   *tablename;tablename45,1179
	char	   *cmd;cmd46,1200
} import_error_callback_arg;47,1215
optionListToArray(66,1738
transformGenericOptions(110,2914
AlterForeignDataWrapperOwner_internal(205,5138
AlterForeignDataWrapperOwner(275,7362
AlterForeignDataWrapperOwner_oid(313,8237
AlterForeignServerOwner_internal(338,8841
AlterForeignServerOwner(415,10994
AlterForeignServerOwner_oid(450,11757
lookup_fdw_handler_func(475,12343
lookup_fdw_validator_func(499,12965
parse_func_options(518,13420
CreateForeignDataWrapper(562,14466
AlterForeignDataWrapper(678,17863
CreateForeignServer(842,22391
AlterForeignServer(969,25982
user_mapping_ddl_aclcheck(1070,28621
CreateUserMapping(1095,29171
AlterUserMapping(1217,32479
RemoveUserMapping(1315,34904
CreateForeignTable(1395,36749
ImportForeignSchema(1475,38999
import_error_callback(1592,42789

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/tsearchcmds.c,895
get_ts_parser_func(68,1930
makeParserDependencies(131,3518
DefineTSParser(179,4775
makeDictionaryDependencies(302,8359
verify_dictoptions(337,9320
DefineTSDictionary(392,10846
AlterTSDictionary(488,13400
get_ts_template_func(604,16263
makeTSTemplateDependencies(647,17311
DefineTSTemplate(686,18280
GetTSConfigTuple(783,20895
makeConfigurationDependencies(808,21453
DefineTSConfiguration(895,23860
RemoveTSConfigurationById(1063,28441
AlterTSConfiguration(1111,29513
getTokenTypes(1159,30737
MakeConfigurationMapping(1214,31819
DropConfigurationMapping(1378,35610
serialize_deflist(1456,37376
deserialize_deflist(1512,38833
		CS_WAITKEY,1524,39101
		CS_INKEY,1525,39115
		CS_INQKEY,1526,39127
		CS_WAITEQ,1527,39140
		CS_WAITVALUE,1528,39153
		CS_INSQVALUE,1529,39169
		CS_INDQVALUE,1530,39185
		CS_INWVALUE1531,39201
	} ds_state;1532,39215
buildDefItem(1725,42889

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/event_trigger.c,2630
typedef struct EventTriggerQueryState51,1454
	MemoryContext cxt;54,1541
	slist_head	SQLDropList;57,1578
	bool		in_sql_drop;58,1603
	Oid			table_rewrite_oid;61,1645
	int			table_rewrite_reason;63,1732
	bool		commandCollectionInhibited;66,1824
	CollectedCommand *currentCommand;currentCommand67,1859
	List	   *commandList;commandList68,1894
	struct EventTriggerQueryState *previous;previous70,1982
} EventTriggerQueryState;71,2024
static EventTriggerQueryState *currentEventTriggerState currentEventTriggerState73,2051
typedef struct SQLDropObject76,2150
	ObjectAddress address;78,2181
	const char *schemaname;schemaname79,2205
	const char *objname;objname80,2230
	const char *objidentity;objidentity81,2252
	const char *objecttype;objecttype82,2278
	List	   *addrnames;addrnames83,2303
	List	   *addrargs;addrargs84,2324
	bool		original;85,2344
	bool		normal;86,2361
	bool		istemp;87,2376
	slist_node	next;88,2391
} SQLDropObject;89,2409
CreateEventTrigger(108,3192
validate_ddl_tags(195,5805
validate_table_rewrite_tags(222,6524
error_duplicate_filter_variable(244,7048
insert_event_trigger_tuple(256,7318
filter_list_to_array(332,9974
AlterEventTrigger(362,10598
AlterEventTriggerOwner(406,11665
AlterEventTriggerOwner_oid(441,12431
AlterEventTriggerOwner_internal(466,13010
get_event_trigger_oid(506,14149
filter_event_trigger(525,14696
EventTriggerCommonSetup(556,15523
EventTriggerDDLCommandStart(641,18022
EventTriggerDDLCommandEnd(689,19378
EventTriggerSQLDrop(737,20639
EventTriggerTableRewrite(808,22491
EventTriggerInvoke(873,24233
EventTriggerSupportsObjectType(936,25929
EventTriggerSupportsObjectClass(1010,27662
EventTriggerBeginCompleteQuery(1075,29314
EventTriggerEndCompleteQuery(1119,30629
trackDroppedObjectsNeeded(1137,31063
EventTriggerSQLDropAddObject(1169,32254
pg_event_trigger_dropped_objects(1288,35253
pg_event_trigger_table_rewrite_oid(1415,38661
pg_event_trigger_table_rewrite_reason(1436,39259
EventTriggerInhibitCommandCollection(1476,40779
EventTriggerUndoInhibitCommandCollection(1488,40984
EventTriggerCollectSimpleCommand(1510,41696
EventTriggerAlterTableStart(1548,42818
EventTriggerAlterTableRelid(1582,43770
EventTriggerCollectAlterTableSubcmd(1600,44334
EventTriggerAlterTableEnd(1635,45476
EventTriggerCollectGrant(1667,46366
EventTriggerCollectAlterOpFam(1711,47598
EventTriggerCollectCreateOpClass(1744,48600
EventTriggerCollectAlterTSConfig(1778,49628
EventTriggerCollectAlterDefPrivs(1813,50707
pg_event_trigger_ddl_commands(1841,51545
stringify_grant_objtype(2060,58214
stringify_adefprivs_objtype(2142,60184

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/seclabel.c,460
	const char *provider_name;provider_name30,818
	check_object_relabel_type hook;31,846
} LabelProvider;32,879
static List *label_provider_list label_provider_list34,897
SecLabelSupportsObjectType(37,950
ExecSecLabelStmt(113,2683
GetSharedSecurityLabel(221,6045
GetSecurityLabel(269,7312
SetSharedSecurityLabel(326,8858
SetSecurityLabel(401,11204
DeleteSharedSecurityLabel(488,13827
DeleteSecurityLabel(520,14699
register_label_provider(567,15885

/home/seinoyu/pgsql/master/postgresql/src/backend/commands/operatorcmds.c,150
DefineOperator(65,1881
ValidateRestrictionEstimator(261,8069
ValidateJoinEstimator(296,9144
RemoveOperatorById(340,10469
AlterOperator(385,11829

/home/seinoyu/pgsql/master/postgresql/src/backend/jit/llvm/llvmjit_deform.c,28
slot_compile_deform(34,930

/home/seinoyu/pgsql/master/postgresql/src/backend/jit/llvm/llvmjit_expr.c,330
typedef struct CompiledExprState48,1230
	LLVMJitContext *context;context50,1265
	const char *funcname;funcname51,1291
} CompiledExprState;52,1314
#define build_EvalXFunc(68,1932
llvm_compile_expr(78,2182
ExecRunCompiledExpr(2408,68740
BuildV1Call(2428,69253
build_EvalXFuncInt(2474,70674
create_LifetimeEnd(2504,71477

/home/seinoyu/pgsql/master/postgresql/src/backend/jit/llvm/llvmjit.c,2442
typedef struct LLVMJitHandle40,1045
	LLVMOrcJITStackRef stack;42,1076
	LLVMOrcModuleHandle orc_handle;43,1103
} LLVMJitHandle;44,1136
LLVMTypeRef TypeSizeT;48,1206
LLVMTypeRef TypeParamBool;49,1229
LLVMTypeRef TypeStorageBool;50,1256
LLVMTypeRef TypePGFunction;51,1285
LLVMTypeRef StructNullableDatum;52,1313
LLVMTypeRef StructHeapTupleFieldsField3;53,1346
LLVMTypeRef StructHeapTupleFields;54,1387
LLVMTypeRef StructHeapTupleHeaderData;55,1422
LLVMTypeRef StructHeapTupleDataChoice;56,1461
LLVMTypeRef StructHeapTupleData;57,1500
LLVMTypeRef StructMinimalTupleData;58,1533
LLVMTypeRef StructItemPointerData;59,1569
LLVMTypeRef StructBlockId;60,1604
LLVMTypeRef StructFormPgAttribute;61,1631
LLVMTypeRef StructTupleConstr;62,1666
LLVMTypeRef StructTupleDescData;63,1697
LLVMTypeRef StructTupleTableSlot;64,1730
LLVMTypeRef StructHeapTupleTableSlot;65,1764
LLVMTypeRef StructMinimalTupleTableSlot;66,1802
LLVMTypeRef StructMemoryContextData;67,1843
LLVMTypeRef StructPGFinfoRecord;68,1880
LLVMTypeRef StructFmgrInfo;69,1913
LLVMTypeRef StructFunctionCallInfoData;70,1941
LLVMTypeRef StructExprContext;71,1981
LLVMTypeRef StructExprEvalStep;72,2012
LLVMTypeRef StructExprState;73,2044
LLVMTypeRef StructAggState;74,2073
LLVMTypeRef StructAggStatePerGroupData;75,2101
LLVMTypeRef StructAggStatePerTransData;76,2141
LLVMValueRef AttributeTemplate;78,2182
LLVMModuleRef llvm_types_module 80,2215
static bool llvm_session_initialized 82,2256
static size_t llvm_generation 83,2302
static const char *llvm_triple llvm_triple84,2337
static const char *llvm_layout llvm_layout85,2376
static LLVMTargetMachineRef llvm_opt0_targetmachine;88,2417
static LLVMTargetMachineRef llvm_opt3_targetmachine;89,2470
static LLVMTargetRef llvm_targetref;91,2524
static LLVMOrcJITStackRef llvm_opt0_orc;92,2561
static LLVMOrcJITStackRef llvm_opt3_orc;93,2602
PG_MODULE_MAGIC;106,3036
_PG_jit_provider_init(113,3100
llvm_create_context(128,3565
llvm_release_context(153,4097
llvm_mutable_module(189,4997
llvm_expand_funcname(214,5611
llvm_get_function(235,6141
llvm_pg_func(303,8074
llvm_copy_attributes(330,8641
llvm_function_reference(353,9194
llvm_optimize_module(414,10661
llvm_compile_module(485,12898
llvm_session_initialize(607,16184
llvm_shutdown(694,18631
load_type(721,19316
load_return_type(741,19818
llvm_create_types(771,20542
llvm_split_symbol_name(827,22924
llvm_resolve_symbol(861,23669

/home/seinoyu/pgsql/master/postgresql/src/backend/jit/llvm/llvmjit_types.c,871
PGFunction	TypePGFunction;48,1480
size_t		TypeSizeT;49,1507
bool		TypeStorageBool;50,1526
NullableDatum StructNullableDatum;52,1550
AggState	StructAggState;53,1585
AggStatePerGroupData StructAggStatePerGroupData;54,1610
AggStatePerTransData StructAggStatePerTransData;55,1659
ExprContext StructExprContext;56,1708
ExprEvalStep StructExprEvalStep;57,1739
ExprState	StructExprState;58,1772
FunctionCallInfoBaseData StructFunctionCallInfoData;59,1799
HeapTupleData StructHeapTupleData;60,1852
MemoryContextData StructMemoryContextData;61,1887
TupleTableSlot StructTupleTableSlot;62,1930
HeapTupleTableSlot StructHeapTupleTableSlot;63,1967
MinimalTupleTableSlot StructMinimalTupleTableSlot;64,2012
TupleDescData StructTupleDescData;65,2063
AttributeTemplate(75,2352
FunctionReturningBool(89,2780
void	   *referenced_functions[referenced_functions99,3017

/home/seinoyu/pgsql/master/postgresql/src/backend/jit/jit.c,671
bool		jit_enabled 32,774
char	   *jit_provider jit_provider33,800
bool		jit_debugging_support 34,830
bool		jit_dump_bitcode 35,867
bool		jit_expressions 36,899
bool		jit_profiling_support 37,929
bool		jit_tuple_deforming 38,966
double		jit_above_cost 39,1000
double		jit_inline_above_cost 40,1033
double		jit_optimize_above_cost 41,1073
static JitProviderCallbacks provider;43,1116
static bool provider_successfully_loaded 44,1154
static bool provider_failed_loading 45,1204
pg_jit_available(57,1474
provider_init(68,1654
jit_reset_after_error(128,3319
jit_release_context(138,3481
jit_compile_expr(153,3793
InstrJitAgg(184,4816
file_exists(194,5210

/home/seinoyu/pgsql/master/postgresql/src/backend/access/index/amvalidate.c,168
identify_opfamily_groups(42,1436
check_amproc_signature(151,4482
check_amoptsproc_signature(191,5460
check_amop_signature(205,5928
opfamily_can_sort_type(228,6545

/home/seinoyu/pgsql/master/postgresql/src/backend/access/index/indexam.c,884
#define RELATION_CHECKS 79,3037
#define SCAN_CHECKS 86,3250
#define CHECK_REL_PROCEDURE(93,3435
#define CHECK_SCAN_PROCEDURE(100,3664
index_open(132,4772
index_close(158,5422
index_insert(176,5826
index_beginscan(203,6535
index_beginscan_bitmap(232,7308
index_beginscan_internal(253,7774
index_rescan(295,9074
index_endscan(321,9705
index_markpos(351,10377
index_restrpos(375,11239
index_parallelscan_estimate(400,11913
index_parallelscan_initialize(433,12943
index_parallelrescan(464,13833
index_beginscan_parallel(482,14305
index_getnext_tid(515,15224
index_fetch_heap(572,17077
index_getnext_slot(613,18447
index_getbitmap(658,19704
index_bulk_delete(688,20377
index_vacuum_cleanup(709,20918
index_can_return(728,21321
index_getprocid(766,22887
index_getprocinfo(800,23734
index_store_float8_orderby_distances(868,25486
index_opclass_options(936,27314

/home/seinoyu/pgsql/master/postgresql/src/backend/access/index/amapi.c,80
GetIndexAmRoutine(33,964
GetIndexAmRoutineByAmId(56,1594
amvalidate(114,2926

/home/seinoyu/pgsql/master/postgresql/src/backend/access/index/genam.c,367
RelationGetIndexScan(80,2526
IndexScanEnd(144,4484
BuildIndexValueDescription(176,5614
index_compute_xid_horizon_for_tuples(285,8772
systable_beginscan(356,11296
systable_getnext(448,13571
systable_recheck_tuple(501,15115
systable_endscan(529,15912
systable_beginscan_ordered(569,17098
systable_getnext_ordered(634,18873
systable_endscan_ordered(653,19381

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gist/gist.c,474
#define ROTATEDIST(45,1570
gisthandler(59,1909
createTempGistContext(118,3961
gistbuildempty(129,4203
gistinsert(155,4862
gistplacetopage(220,7327
gistdoinsert(627,19398
gistFindPath(902,27504
gistFindCorrectParent(1015,30638
gistformdownlink(1102,32965
gistfixsplit(1162,34733
gistinserttuple(1221,36340
gistinserttuples(1255,37886
gistfinishsplit(1315,39873
gistSplit(1410,43108
initGISTstate(1497,45496
freeGISTstate(1625,50265
gistprunepage(1636,50538

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gist/gistvacuum.c,540
	IndexVacuumInfo *info;info30,796
	IndexBulkDeleteResult *stats;stats31,820
	IndexBulkDeleteCallback callback;32,851
	void	   *callback_state;callback_state33,886
	GistNSN		startNSN;34,912
	IntegerSet *internal_page_set;internal_page_set40,1061
	IntegerSet *empty_leaf_set;empty_leaf_set41,1093
	MemoryContext page_set_context;42,1122
} GistVacState;43,1155
gistbulkdelete(59,1758
gistvacuumcleanup(75,2240
gistvacuumscan(125,4013
gistvacuumpage(254,8796
gistvacuum_delete_empty_pages(443,14170
gistdeletepage(573,17996

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gist/gistsplit.c,473
	OffsetNumber *entries;entries33,1164
	int			len;34,1188
	Datum	   *attr;attr35,1200
	bool	   *isnull;isnull36,1217
	bool	   *dontcare;dontcare37,1235
} GistSplitUnion;38,1255
gistunionsubkeyvec(47,1462
gistunionsubkey(80,2431
findDontCares(113,3344
removeDontCares(167,4722
placeOne(200,5355
#define SWAPVAR(237,6371
supportSecondarySplit(258,7026
genericPickSplit(344,9818
gistUserPicksplit(415,12085
gistSplitHalf(585,17862
gistSplitByKey(623,19194

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gist/gistscan.c,106
pairingheap_GISTSearchItem_cmp(30,745
gistbeginscan(74,1712
gistrescan(127,3286
gistendscan(349,10475

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gist/gistget.c,207
gistkillitems(39,1152
gistindex_keytest(126,3783
gistScanPage(329,9486
getNextGISTSearchItem(540,15705
getNextNearest(562,16085
gistgettuple(614,17166
gistgetbitmap(745,20389
gistcanreturn(795,21589

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gist/gistbuildbuffers.c,753
gistInitBuildBuffers(48,1601
gistGetNodeBuffer(118,3519
gistAllocateNewPageBuffer(186,5603
gistAddLoadedBuffer(203,6016
gistLoadNodeBuffer(226,6603
gistUnloadNodeBuffer(251,7303
gistUnloadNodeBuffers(277,7887
gistPlaceItupToPage(293,8261
gistGetItupFromPage(316,8907
gistPushItupToNodeBuffer(341,9514
gistPopItupFromNodeBuffer(411,11442
gistBuffersGetFreeBlock(473,12894
gistBuffersReleaseBlock(490,13320
gistFreeBuildBuffers(512,13786
	GISTENTRY	entry[entry526,14099
	bool		isnull[isnull527,14133
	GISTPageSplitInfo *splitinfo;splitinfo528,14164
	GISTNodeBuffer *nodeBuffer;nodeBuffer529,14195
} RelocationBufferInfo;530,14224
gistRelocateBuildBuffersOnSplit(538,14466
ReadTempFileBlock(758,20933
WriteTempFileBlock(771,21305

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gist/gistbuild.c,1162
#define BUFFERING_MODE_SWITCH_CHECK_STEP 33,901
#define BUFFERING_MODE_TUPLE_SIZE_STATS_TARGET 41,1196
	GIST_BUFFERING_DISABLED,45,1264
	GIST_BUFFERING_AUTO,47,1356
	GIST_BUFFERING_STATS,50,1497
	GIST_BUFFERING_ACTIVE	53,1635
} GistBufferingMode;54,1689
	Relation	indexrel;59,1779
	Relation	heaprel;60,1799
	GISTSTATE  *giststate;giststate61,1818
	int64		indtuples;63,1843
	int64		indtuplesSize;64,1894
	Size		freespace;66,1957
	GISTBuildBuffers *gfbb;gfbb73,2230
	HTAB	   *parentMap;parentMap74,2255
	GistBufferingMode bufferingMode;76,2277
} GISTBuildState;77,2311
gistbuild(116,4071
gistInitBuffering(248,7614
calculatePagesPerBuffer(409,13479
gistBuildCallback(442,14308
gistBufferingBuildInsert(514,16449
gistProcessItup(530,17012
gistbufferinginserttuples(661,20501
gistBufferingFindCorrectParent(830,26072
gistProcessEmptyingQueue(904,28278
gistEmptyAllBuffers(977,30842
gistGetMaxLevel(1032,32342
	BlockNumber childblkno;1116,34998
	BlockNumber parentblkno;1117,35039
} ParentMapEntry;1118,35065
gistInitParentMap(1121,35096
gistMemorizeParent(1135,35449
gistMemorizeAllDownlinks(1151,35834
gistGetParent(1172,36440

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gist/gistproc.c,1680
#define LIMIT_RATIO 35,965
rt_box_union(46,1198
size_box(59,1551
box_penalty(88,2510
gist_box_consistent(104,2914
adjustBox(137,3776
gist_box_union(155,4222
gist_box_penalty(190,5041
fallbackSplit(207,5543
	int			index;265,6770
	float8		delta;267,6856
} CommonEntry;268,6872
	int			entriesCount;276,7034
	BOX			boundingBox;277,7097
	bool		first;281,7223
	float8		leftUpper;283,7280
	float8		rightLower;284,7336
	float4		ratio;286,7395
	float4		overlap;287,7411
	int			dim;288,7429
	float8		range;289,7468
} ConsiderSplitContext;291,7556
	float8		lower,298,7655
				upper;299,7671
} SplitInterval;300,7682
interval_cmp_lower(306,7782
interval_cmp_upper(318,8071
non_negative(330,8351
g_box_consider_split(342,8532
common_entry_cmp(451,11942
gist_box_picksplit(486,13398
#define PLACE_LEFT(703,19289
#define PLACE_RIGHT(712,19501
gist_box_same(843,22809
gist_box_leaf_consistent(863,23319
rtree_internal_consistent(950,26117
gist_poly_compress(1030,28673
gist_poly_consistent(1057,29249
gist_circle_compress(1095,30345
gist_circle_consistent(1125,31061
gist_point_compress(1163,32228
gist_point_fetch(1191,32841
#define point_point_distance(1211,33265
computeDistance(1216,33425
gist_point_consistent_internal(1282,35029
#define GeoStrategyNumberOffset	1325,36037
#define PointStrategyNumberGroup	1326,36073
#define BoxStrategyNumberGroup	1327,36108
#define PolygonStrategyNumberGroup	1328,36142
#define CircleStrategyNumberGroup	1329,36179
gist_point_consistent(1332,36222
gist_point_distance(1440,39501
gist_bbox_distance(1464,40121
gist_box_distance(1485,40617
gist_circle_distance(1511,41439
gist_poly_distance(1528,41862

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gist/gistutil.c,684
gistfillbuffer(33,861
gistnospace(58,1464
gistfitpage(78,1944
gistextractpage(94,2219
gistjoinvector(113,2645
gistfillitupvec(126,2970
gistMakeUnionItVec(154,3523
gistunion(218,4897
gistMakeUnionKey(232,5191
		GistEntryVector gev;240,5429
		char		padding[padding241,5452
gistKeyIsEQ(280,6156
gistDeCompressAtt(295,6437
gistgetadjusted(315,6935
gistchoose(373,8362
gistdentryinit(546,14058
gistFormTuple(574,14803
gistFetchAtt(637,16207
gistFetchTuple(658,16730
gistpenalty(715,18119
GISTInitBuffer(748,18877
gistcheckpage(770,19399
gistNewBuffer(809,20568
gistPageRecyclable(882,22175
gistoptions(908,22952
gistproperty(929,23639
gistGetFakeLSN(1012,25811

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gist/gistvalidate.c,21
gistvalidate(34,859

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gist/gistxlog.c,522
static MemoryContext opCtx;28,758
gistRedoClearFollowRight(42,1372
gistRedoPageUpdateRecord(72,2079
gistRedoDeleteRecord(174,4814
decodePageSplitRecord(229,6286
gistRedoPageSplitRecord(253,6729
gistRedoPageDelete(348,9103
gistRedoPageReuse(382,9936
gist_redo(423,11339
gist_xlog_startup(464,12302
gist_xlog_cleanup(470,12370
gist_mask(479,12501
gistXLogSplit(521,13463
gistXLogPageDelete(578,15028
gistXLogAssignLSN(602,15596
gistXLogPageReuse(620,15990
gistXLogUpdate(653,17094
gistXLogDelete(694,18284

/home/seinoyu/pgsql/master/postgresql/src/backend/access/heap/heapam_handler.c,1497
static const TableAmRoutine heapam_methods;57,1612
heapam_slot_callbacks(66,1886
heapam_index_fetch_begin(78,2187
heapam_index_fetch_reset(89,2396
heapam_index_fetch_end(101,2633
heapam_index_fetch_tuple(111,2808
heapam_fetch_row_version(179,4738
heapam_tuple_tid_valid(203,5314
heapam_tuple_satisfies_snapshot(212,5524
heapam_tuple_insert(240,6353
heapam_tuple_insert_speculative(259,6918
heapam_tuple_complete_speculative(282,7625
heapam_tuple_delete(299,8066
heapam_tuple_update(313,8543
heapam_tuple_lock(347,9533
heapam_relation_set_new_filenode(566,16400
heapam_relation_nontransactional_truncate(616,18110
heapam_relation_copy_data(622,18210
heapam_relation_copy_for_cluster(678,19801
heapam_scan_analyze_next_block(964,27525
heapam_scan_analyze_next_tuple(989,28464
heapam_index_build_range_scan(1132,32971
heapam_index_validate_scan(1687,49546
heapam_scan_get_blocks_done(1937,57099
heapam_relation_needs_toast_table(1982,58305
heapam_relation_toast_am(2030,59469
#define HEAP_OVERHEAD_BYTES_PER_TUPLE 2041,59744
#define HEAP_USABLE_BYTES_PER_PAGE 2043,59840
heapam_estimate_rel_size(2047,59923
heapam_scan_bitmap_next_block(2064,60450
heapam_scan_bitmap_next_tuple(2177,63527
heapam_scan_sample_next_block(2218,64585
heapam_scan_sample_next_tuple(2292,66361
reform_and_rewrite_tuple(2409,69492
SampleHeapTupleVisible(2439,70239
static const TableAmRoutine heapam_methods 2488,71532
GetHeapamTableAmRoutine(2546,73810
heap_tableam_handler(2552,73876

/home/seinoyu/pgsql/master/postgresql/src/backend/access/heap/heapam.c,3569
	LOCKMODE	hwlock;121,4483
	int			lockstatus;122,4501
	int			updstatus;123,4520
			tupleLockExtraInfo[tupleLockExtraInfo126,4541
#define LOCKMODE_from_mxstatus(151,5150
#define LockTupleTuplock(159,5429
#define UnlockTupleTuplock(161,5530
#define ConditionalLockTupleTuplock(163,5635
	BlockNumber cur_hblkno;173,5932
	int			next_item;174,5957
	int			nitems;175,5975
	ItemPointerData *tids;tids176,5990
} XidHorizonPrefetchState;177,6014
static const int MultiXactStatusLock[MultiXactStatusLock184,6148
#define TUPLOCK_from_mxstatus(195,6513
initscan(208,6883
heap_setscanlimits(329,10845
heapgetpage(352,11556
heapgettup(487,16135
heapgettup_pagemode(805,24607
fastgetattr(1093,31981
heap_beginscan(1140,32968
heap_rescan(1218,35585
heap_endscan(1255,36391
heap_getnext(1285,37012
heap_getnextslot(1324,38202
heap_fetch(1383,40331
heap_hot_search_buffer(1498,43441
heap_get_latest_tid(1643,47792
UpdateXmaxHintBits(1766,51402
GetBulkInsertState(1788,52028
FreeBulkInsertState(1802,52338
ReleaseBulkInsertStatePin(1814,52614
heap_insert(1841,53540
heap_prepare_insert(2022,59672
heap_multi_insert(2078,61871
simple_heap_insert(2365,71175
compute_infobits(2378,71534
xmax_infomask_changed(2400,72407
heap_delete(2423,73119
simple_heap_delete(2828,86319
heap_update(2874,87494
heap_tuple_attr_equals(3756,117416
HeapDetermineModifiedColumns(3838,119884
simple_heap_update(3866,120670
get_mxact_status_for_lock(3906,121524
heap_lock_tuple(3954,123141
heap_acquire_tuplock(4644,145509
compute_new_xmax_infomask(4693,147147
test_lockmode_for_conflict(4974,155998
heap_lock_updated_tuple_rec(5066,158886
heap_lock_updated_tuple(5411,169257
heap_finish_speculative(5456,171097
heap_abort_speculative(5547,174078
heap_inplace_update(5696,178651
#define		FRM_NOOP	5779,181092
#define		FRM_INVALIDATE_XMAX	5780,181120
#define		FRM_RETURN_IS_XID	5781,181157
#define		FRM_RETURN_IS_MULTI	5782,181192
#define		FRM_MARK_COMMITTED	5783,181229
FreezeMultiXactId(5807,182037
heap_prepare_freeze_tuple(6107,191350
heap_execute_freeze_tuple(6336,198822
heap_freeze_tuple(6357,199368
GetMultiXactIdHintBits(6388,200237
MultiXactIdGetUpdateXid(6469,202088
HeapTupleGetUpdateXid(6521,203194
DoesMultiXactIdConflict(6537,203681
Do_MultiXactIdWait(6636,206880
MultiXactIdWait(6714,208905
ConditionalMultiXactIdWait(6736,209702
heap_tuple_needs_eventual_freeze(6752,210264
heap_tuple_needs_freeze(6805,211467
HeapTupleHeaderAdvanceLatestRemovedXid(6884,213350
xid_horizon_prefetch_buffer(6925,214723
heap_compute_xid_horizon_for_tuples(6975,216280
log_heap_cleanup_info(7127,220407
log_heap_clean(7156,221273
log_heap_freeze(7207,222803
log_heap_visible(7248,224031
log_heap_update(7280,224811
log_heap_new_cid(7502,231742
ExtractReplicaIdentity(7584,234095
heap_xlog_cleanup_info(7676,236501
heap_xlog_clean(7697,237104
heap_xlog_visible(7790,239966
heap_xlog_freeze_page(7930,244915
fix_infomask_from_infobits(7988,246477
heap_xlog_delete(8009,247140
heap_xlog_insert(8082,249322
		HeapTupleHeaderData hdr;8090,249511
		char		data[data8091,249538
heap_xlog_multi_insert(8198,252659
		HeapTupleHeaderData hdr;8208,252856
		char		data[data8209,252883
heap_xlog_update(8337,256560
		HeapTupleHeaderData hdr;8357,257014
		char		data[data8358,257041
heap_xlog_confirm(8609,264404
heap_xlog_lock(8645,265266
heap_xlog_lock_updated(8716,267193
heap_xlog_inplace(8776,268727
heap_redo(8817,269720
heap2_redo(8863,270724
heap_mask(8906,271646
HeapCheckForSerializableConflictOut(9002,274741

/home/seinoyu/pgsql/master/postgresql/src/backend/access/heap/pruneheap.c,625
	TransactionId new_prune_xid;32,834
	TransactionId latestRemovedXid;33,900
	int			nredirected;34,978
	int			ndead;35,1039
	int			nunused;36,1053
	OffsetNumber redirected[redirected38,1130
	OffsetNumber nowdead[nowdead39,1182
	OffsetNumber nowunused[nowunused40,1227
	bool		marked[marked42,1347
} PruneState;43,1388
heap_page_prune_opt(73,2547
heap_page_prune(180,6245
heap_prune_chain(352,12173
heap_prune_record_prunable(621,19783
heap_prune_record_redirect(635,20236
heap_prune_record_dead(650,20737
heap_prune_record_unused(661,21044
heap_page_prune_execute(681,21686
heap_get_root_tuples(745,23361

/home/seinoyu/pgsql/master/postgresql/src/backend/access/heap/heapam_visibility.c,531
SetHintBits(113,4903
HeapTupleSetHintBits(140,5577
HeapTupleSatisfiesSelf(169,6487
HeapTupleSatisfiesAny(339,10752
HeapTupleSatisfiesToast(361,11551
HeapTupleSatisfiesUpdate(457,14414
HeapTupleSatisfiesDirty(745,22656
HeapTupleSatisfiesMVCC(962,28941
HeapTupleSatisfiesVacuum(1163,34664
HeapTupleSatisfiesNonVacuumable(1399,42099
HeapTupleIsSurelyDead(1421,42923
HeapTupleHeaderIsOnlyLocked(1475,44637
TransactionIdInArray(1521,45772
HeapTupleSatisfiesHistoricMVCC(1542,46541
HeapTupleSatisfiesVisibility(1690,50850

/home/seinoyu/pgsql/master/postgresql/src/backend/access/heap/hio.c,152
RelationPutHeapTuple(36,894
ReadBufferBI(80,2078
GetVisibilityMapPins(130,3578
RelationAddExtraBlocks(186,5522
RelationGetBufferForTuple(320,11000

/home/seinoyu/pgsql/master/postgresql/src/backend/access/heap/vacuumlazy.c,4667
#define REL_TRUNCATE_MINIMUM	91,3693
#define REL_TRUNCATE_FRACTION	92,3727
#define VACUUM_TRUNCATE_LOCK_CHECK_INTERVAL	101,3997
#define VACUUM_TRUNCATE_LOCK_WAIT_INTERVAL	102,4054
#define VACUUM_TRUNCATE_LOCK_TIMEOUT	103,4110
#define VACUUM_FSM_EVERY_PAGES 111,4463
#define LAZY_ALLOC_TUPLES	119,4713
#define SKIP_PAGES_THRESHOLD	125,4900
#define PREFETCH_SIZE	131,5059
#define PARALLEL_VACUUM_KEY_SHARED	138,5289
#define PARALLEL_VACUUM_KEY_DEAD_TUPLES	139,5328
#define PARALLEL_VACUUM_KEY_QUERY_TEXT	140,5371
#define PARALLEL_VACUUM_KEY_BUFFER_USAGE	141,5413
#define PARALLEL_VACUUM_KEY_WAL_USAGE	142,5456
#define ParallelVacuumIsActive(148,5632
	VACUUM_ERRCB_PHASE_UNKNOWN,153,5765
	VACUUM_ERRCB_PHASE_SCAN_HEAP,154,5794
	VACUUM_ERRCB_PHASE_VACUUM_INDEX,155,5825
	VACUUM_ERRCB_PHASE_VACUUM_HEAP,156,5859
	VACUUM_ERRCB_PHASE_INDEX_CLEANUP,157,5892
	VACUUM_ERRCB_PHASE_TRUNCATE158,5927
} VacErrPhase;159,5956
typedef struct LVDeadTuples166,6156
	int			max_tuples;168,6186
	int			num_tuples;169,6239
	ItemPointerData itemptrs[itemptrs172,6383
} LVDeadTuples;174,6481
#define SizeOfDeadTuples(177,6570
#define MAXDEADTUPLES(180,6692
typedef struct LVShared187,6903
	Oid			relid;193,7035
	int			elevel;194,7049
	bool		for_cleanup;201,7256
	bool		first_time;202,7276
	double		reltuples;213,7593
	bool		estimated_count;214,7613
	int			maintenance_work_mem_worker;224,8054
	pg_atomic_uint32 cost_balance;231,8273
	pg_atomic_uint32 active_nworkers;238,8484
	pg_atomic_uint32 idx;245,8737
	uint32		offset;246,8802
	bits8		bitmap[bitmap247,8854
} LVShared;250,8978
#define SizeOfLVShared 252,8991
#define GetSharedIndStats(253,9059
#define IndStatsIsNull(255,9155
typedef struct LVSharedIndStats262,9373
	bool		updated;264,9407
	IndexBulkDeleteResult stats;265,9453
} LVSharedIndStats;266,9483
typedef struct LVParallelState269,9558
	ParallelContext *pcxt;pcxt271,9591
	LVShared   *lvshared;lvshared274,9672
	BufferUsage *buffer_usage;buffer_usage277,9738
	WalUsage   *wal_usage;wal_usage280,9806
	int			nindexes_parallel_bulkdel;286,9953
	int			nindexes_parallel_cleanup;287,9987
	int			nindexes_parallel_condcleanup;288,10021
} LVParallelState;289,10059
typedef struct LVRelStats291,10079
	char	   *relnamespace;relnamespace293,10107
	char	   *relname;relname294,10131
	bool		useindex;296,10219
	BlockNumber old_rel_pages;298,10272
	BlockNumber rel_pages;299,10342
	BlockNumber scanned_pages;300,10395
	BlockNumber pinskipped_pages;301,10457
	BlockNumber frozenskipped_pages;302,10529
	BlockNumber tupcount_pages;303,10598
	double		old_live_tuples;304,10663
	double		new_rel_tuples;305,10732
	double		new_live_tuples;306,10795
	double		new_dead_tuples;307,10864
	BlockNumber pages_removed;308,10933
	double		tuples_deleted;309,10961
	BlockNumber nonempty_pages;310,10986
	LVDeadTuples *dead_tuples;dead_tuples311,11054
	int			num_index_scans;312,11082
	TransactionId latestRemovedXid;313,11106
	bool		lock_waiter_detected;314,11139
	char	   *indname;indname317,11200
	BlockNumber blkno;318,11219
	VacErrPhase phase;319,11277
} LVRelStats;320,11297
typedef struct LVSavedErrInfo323,11376
	BlockNumber blkno;325,11408
	VacErrPhase phase;326,11428
} LVSavedErrInfo;327,11448
static int	elevel 330,11540
static TransactionId OldestXmin;332,11565
static TransactionId FreezeLimit;333,11598
static MultiXactId MultiXactCutoff;334,11632
static BufferAccessStrategy vac_strategy;336,11669
heap_vacuum_rel(413,15706
vacuum_log_cleanup_info(714,26599
lazy_scan_heap(759,28629
#define FORCE_CHECK_PAGE(954,35697
lazy_vacuum_all_indexes(1766,61960
lazy_vacuum_heap(1825,63788
lazy_vacuum_page(1903,65905
lazy_check_needs_freeze(2009,69189
lazy_parallel_vacuum_indexes(2061,70570
parallel_vacuum_index(2191,74611
vacuum_indexes_leader(2243,76000
vacuum_one_index(2286,77178
lazy_cleanup_all_indexes(2346,79166
lazy_vacuum_index(2401,80746
lazy_cleanup_index(2459,82497
should_attempt_truncation(2539,85312
lazy_truncate_heap(2560,85875
count_nondeletable_pages(2690,89808
compute_max_dead_tuples(2829,93604
lazy_space_alloc(2861,94481
lazy_record_dead_tuple(2879,94939
lazy_tid_reaped(2903,95684
vac_cmp_itemptr(2921,96091
heap_page_is_all_visible(2954,96847
compute_parallel_vacuum_workers(3073,100104
prepare_index_statistics(3134,101812
update_index_statistics(3159,102394
begin_parallel_vacuum(3190,103131
end_parallel_vacuum(3364,109130
get_indstats(3402,109952
skip_parallel_vacuum_index(3427,110406
parallel_vacuum_main(3467,111635
vacuum_error_callback(3569,114919
update_vacuum_error_info(3615,116374
restore_vacuum_error_info(3632,116762

/home/seinoyu/pgsql/master/postgresql/src/backend/access/heap/rewriteheap.c,1955
typedef struct RewriteStateData132,5441
	Relation	rs_old_rel;134,5475
	Relation	rs_new_rel;135,5516
	Page		rs_buffer;136,5562
	BlockNumber rs_blockno;137,5614
	bool		rs_buffer_valid;138,5671
	bool		rs_logical_rewrite;139,5727
	TransactionId rs_oldest_xmin;140,5795
	TransactionId rs_freeze_xid;142,5901
	TransactionId rs_logical_xmin;144,5994
	MultiXactId rs_cutoff_multi;146,6103
	MemoryContext rs_cxt;148,6212
	XLogRecPtr	rs_begin_lsn;150,6300
	HTAB	   *rs_unresolved_tups;rs_unresolved_tups151,6372
	HTAB	   *rs_old_new_tid_map;rs_old_new_tid_map152,6427
	HTAB	   *rs_logical_mappings;rs_logical_mappings153,6482
	uint32		rs_num_rewrite_mappings;154,6543
}			RewriteStateData;155,6604
	TransactionId xmin;165,6905
	ItemPointerData tid;166,6945
} TidHashKey;167,7001
	TidHashKey	key;174,7080
	ItemPointerData old_tid;175,7143
	HeapTuple	tuple;176,7204
} UnresolvedTupData;177,7249
typedef UnresolvedTupData *UnresolvedTup;UnresolvedTup179,7271
	TidHashKey	key;183,7331
	ItemPointerData new_tid;184,7392
} OldToNewMappingData;185,7456
typedef OldToNewMappingData *OldToNewMapping;OldToNewMapping187,7480
typedef struct RewriteMappingFile193,7622
	TransactionId xid;195,7658
	int			vfd;196,7721
	off_t		off;197,7761
	uint32		num_mappings;198,7810
	dlist_head	mappings;199,7868
	char		path[path200,7924
} RewriteMappingFile;201,7979
typedef struct RewriteMappingDataEntry207,8101
	LogicalRewriteMappingData map;209,8142
	dlist_node	node;211,8238
} RewriteMappingDataEntry;212,8256
begin_heap_rewrite(237,9157
end_heap_rewrite(301,10946
rewrite_heap_tuple(363,12863
rewrite_heap_dead_tuple(565,18836
raw_heap_insert(615,20557
logical_begin_heap_rewrite(794,27073
logical_heap_rewrite_flush_mappings(843,28384
logical_end_heap_rewrite(941,30974
logical_rewrite_log_mapping(971,31847
logical_rewrite_heap_tuple(1038,33677
heap_xlog_logical_rewrite(1112,35930
CheckPointLogicalRewriteHeap(1195,38457

/home/seinoyu/pgsql/master/postgresql/src/backend/access/heap/visibilitymap.c,547
#define MAPSIZE 107,5089
#define HEAPBLOCKS_PER_BYTE 110,5205
#define HEAPBLOCKS_PER_PAGE 113,5344
#define HEAPBLK_TO_MAPBLOCK(116,5481
#define HEAPBLK_TO_MAPBYTE(117,5540
#define HEAPBLK_TO_OFFSET(118,5622
#define VISIBLE_MASK64	121,5767
#define FROZEN_MASK64	123,5876
visibilitymap_clear(139,6483
visibilitymap_pin(190,8051
visibilitymap_pin_ok(214,8703
visibilitymap_set(243,9978
visibilitymap_get_status(330,12833
visibilitymap_count(378,14135
visibilitymap_prepare_truncate(445,15880
vm_readbuf(547,18714
vm_extend(618,21259

/home/seinoyu/pgsql/master/postgresql/src/backend/access/heap/syncscan.c,852
bool		trace_syncscan 58,2478
#define SYNC_SCAN_NELEM 71,2819
#define SYNC_SCAN_REPORT_INTERVAL 83,3336
typedef struct ss_scan_location_t91,3587
	RelFileNode relfilenode;93,3623
	BlockNumber location;94,3678
} ss_scan_location_t;95,3747
typedef struct ss_lru_item_t97,3770
	struct ss_lru_item_t *prev;prev99,3801
	struct ss_lru_item_t *next;next100,3830
	ss_scan_location_t location;101,3859
} ss_lru_item_t;102,3889
typedef struct ss_scan_locations_t104,3907
	ss_lru_item_t *head;head106,3944
	ss_lru_item_t *tail;tail107,3966
	ss_lru_item_t items[items108,3988
} ss_scan_locations_t;109,4061
#define SizeOfScanLocations(111,4085
static ss_scan_locations_t *scan_locations;scan_locations115,4230
SyncScanShmemSize(126,4493
SyncScanShmemInit(135,4644
ss_search(191,6228
ss_get_location(253,7699
ss_report_location(288,8550

/home/seinoyu/pgsql/master/postgresql/src/backend/access/heap/heaptoast.c,207
heap_toast_delete(43,984
heap_toast_insert_or_update(96,2838
toast_flatten_tuple(350,10501
toast_flatten_tuple_to_datum(449,13734
toast_build_flattened_tuple(563,16857
heap_fetch_toast_slice(626,18553

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/ginbulk.c,321
#define DEF_NENTRY	24,561
#define DEF_NPTR	25,631
ginCombineData(30,748
cmpEntryAccumulator(72,1911
ginAllocEntryAccumulator(85,2357
ginInitBA(109,3019
getDatumCopy(128,3533
ginInsertBAEntry(148,3952
ginInsertBAEntries(210,5867
qsortCompareItemPointers(246,6593
ginBeginBAScan(257,6893
ginGetBAEntry(268,7246

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/ginget.c,804
int			GinFuzzySearchLimit 26,650
typedef struct pendingPosition28,682
	Buffer		pendingBuffer;30,715
	OffsetNumber firstOffset;31,739
	OffsetNumber lastOffset;32,766
	ItemPointerData item;33,792
	bool	   *hasMatchKey;hasMatchKey34,815
} pendingPosition;35,838
moveRightIfItNeeded(42,942
scanPostingTree(68,1622
collectMatchBitmap(120,3120
startScanEntry(314,8520
entryIndexByFrequencyCmp(483,13548
startScanKey(500,13931
startScan(596,17284
entryLoadMoreItems(648,18593
#define gin_rand(786,22091
#define dropItem(787,22162
entryGetItem(803,22947
keyGetItem(985,28203
scanGetItem(1280,37315
scanGetCandidate(1446,41963
matchPartialInPendingList(1534,44180
collectMatchesForHeapRow(1602,46121
scanPendingInsert(1818,51658
#define GinIsVoidRes(1910,53833
gingetbitmap(1913,53911

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/ginfast.c,527
int			gin_pending_list_limit 39,1225
#define GIN_PAGE_FREESIZE 41,1260
typedef struct KeyArray44,1372
	Datum	   *keys;keys46,1398
	GinNullCategory *categories;categories47,1440
	int32		nvalues;48,1501
	int32		maxvalues;49,1557
} KeyArray;50,1608
writeListPage(59,1774
makeSublist(145,3590
ginHeapTupleFastInsert(219,5082
ginHeapTupleFastCollect(474,11793
shiftList(545,13979
initKeyArray(666,17258
addDatum(677,17565
processPendingPage(703,18276
ginInsertCleanup(774,20291
gin_clean_pending_list(1025,27066

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/ginbtree.c,203
ginTraverseLock(36,1090
ginFindLeafPage(80,2245
ginStepRight(173,4762
freeGinBtreeStack(194,5383
ginFindParents(214,5800
ginPlaceToPage(330,8814
ginFinishSplit(668,18384
ginInsertValue(777,21730

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/gindatapage.c,1632
#define GinPostingListSegmentMaxSize 34,1093
#define GinPostingListSegmentTargetSize 35,1134
#define GinPostingListSegmentMinSize 36,1178
#define MinTuplesPerSegment 43,1400
	dlist_head	segments;50,1557
	dlist_node *lastleft;lastleft56,1762
	int			lsize;57,1818
	int			rsize;58,1864
	bool		oldformat;60,1912
	char	   *walinfo;walinfo66,2101
	int			walinfolen;67,2140
} disassembledLeaf;68,2177
	dlist_node	node;72,2215
	char		action;88,2818
	ItemPointerData *modifieditems;modifieditems90,2834
	uint16		nmodifieditems;91,2867
	GinPostingList *seg;seg100,3271
	ItemPointer items;101,3293
	int			nitems;102,3313
} leafSegmentInfo;103,3376
GinDataLeafPageGetItems(135,4726
GinDataLeafPageGetItemsToTbm(182,5796
dataLeafPageGetUncompressed(211,6472
dataIsMoveRight(234,7030
dataLocateItem(252,7464
dataFindChildPtr(319,8810
dataGetLeftMostPage(364,9852
GinDataPageAddPostingItem(380,10204
GinPageDeletePostingItem(417,11142
dataBeginPlaceToPageLeaf(448,12138
dataExecPlaceToPageLeaf(716,20479
ginVacuumPostingTreeLeaf(735,20982
computeLeafRecompressWALData(869,24729
dataPlaceToPageLeafRecompress(975,27427
dataPlaceToPageLeafSplit(1031,28828
dataBeginPlaceToPageInternal(1116,31386
dataExecPlaceToPageInternal(1142,32182
dataBeginPlaceToPage(1195,33916
dataExecPlaceToPage(1225,34825
dataSplitPageInternal(1246,35383
dataPrepareDownlink(1327,38070
ginDataFillRoot(1343,38453
disassembleLeaf(1364,39026
addItemsToLeaf(1438,40894
leafRepackItems(1565,44277
createPostingTree(1769,49563
ginPrepareDataScan(1876,52180
ginInsertItemPointers(1902,52892
ginScanBeginPostingTree(1930,53639

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/ginpostinglist.c,408
#define CHECK_ENCODING_ROUNDTRIP20,526
#define MaxHeapTuplesPerPageBits	81,3419
#define MaxBytesPerInteger	84,3532
itemptr_to_uint64(87,3586
uint64_to_itemptr(102,3920
encode_varbyte(115,4265
decode_varbyte(133,4560
ginCompressPostingList(197,5802
ginPostingListDecode(284,7758
ginPostingListDecodeAllSegments(297,8158
ginPostingListDecodeAllSegmentsToTbm(358,9632
ginMergeItemPointers(378,10126

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/ginlogic.c,250
#define MAX_MAYBE_ENTRIES	50,1909
trueConsistentFn(56,2034
trueTriConsistentFn(62,2138
directBoolConsistentFn(71,2295
directTriConsistentFn(95,3077
shimBoolConsistentFn(114,3765
shimTriConsistentFn(152,4957
ginInitConsistentFunction(223,6544

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/ginxlog.c,522
static MemoryContext opCtx;22,595
ginRedoClearIncompleteSplit(25,673
ginRedoCreatePTree(44,1115
ginRedoInsertEntry(71,1771
ginRedoRecompress(117,3279
ginRedoInsertData(319,8524
ginRedoInsert(347,9187
ginRedoSplit(402,10589
ginRedoVacuumPage(440,11673
ginRedoVacuumDataLeafPage(452,11931
ginRedoDeletePage(477,12508
ginRedoUpdateMetapage(528,13813
ginRedoInsertListPage(620,16047
ginRedoDeleteListPages(675,17307
gin_redo(726,18983
gin_xlog_startup(775,20157
gin_xlog_cleanup(783,20322
gin_mask(793,20466

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/ginutil.c,587
ginhandler(38,999
initGinState(94,2800
gintuple_get_attrnum(223,6961
gintuple_get_key(256,7634
GinNewBuffer(297,8631
GinInitPage(343,9572
GinInitBuffer(356,9851
GinInitMetabuffer(362,9952
ginCompareEntries(394,10759
ginCompareAttEntries(416,11401
	Datum		datum;437,12015
	bool		isnull;438,12030
} keyEntryData;439,12045
	FmgrInfo   *cmpDatumFunc;cmpDatumFunc443,12079
	Oid			collation;444,12106
	bool		haveDups;445,12124
} cmpEntriesArg;446,12141
cmpEntries(449,12170
ginExtractEntries(489,13147
ginoptions(608,16161
ginGetStats(629,16787
ginUpdateStats(656,17503

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/ginarrayproc.c,287
#define GinOverlapStrategy	23,607
#define GinContainsStrategy	24,637
#define GinContainedStrategy	25,668
#define GinEqualStrategy	26,699
ginarrayextract(33,775
ginarrayextract_2args(68,1744
ginqueryarrayextract(79,1974
ginarrayconsistent(142,3631
ginarraytriconsistent(226,5426

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/ginvacuum.c,804
struct GinVacuumState28,755
	Relation	index;30,779
	IndexBulkDeleteResult *result;result31,796
	IndexBulkDeleteCallback callback;32,828
	void	   *callback_state;callback_state33,863
	GinState	ginstate;34,889
	BufferAccessStrategy strategy;35,909
	MemoryContext tmpCxt;36,941
ginVacuumItemPointers(48,1288
xlogVacuumPage(90,2112
typedef struct DataPageDeleteStack114,2703
	struct DataPageDeleteStack *child;child116,2740
	struct DataPageDeleteStack *parent;parent117,2776
	BlockNumber blkno;119,2814
	Buffer		leftBuffer;120,2863
	bool		isRoot;122,2954
} DataPageDeleteStack;123,2969
ginDeletePage(130,3044
ginScanToDelete(246,6417
ginVacuumPostingTreeLeaves(345,8435
ginVacuumPostingTree(408,9914
ginVacuumEntryPage(455,10947
ginbulkdelete(564,13706
ginvacuumcleanup(687,16584

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/gininsert.c,450
	GinState	ginstate;32,831
	double		indtuples;33,851
	GinStatsData buildStats;34,871
	MemoryContext tmpCtx;35,897
	MemoryContext funcCtx;36,920
	BuildAccumulator accum;37,944
} GinBuildState;38,969
addItemPointersToLeafTuple(49,1300
buildFreshLeafTuple(129,3570
ginEntryInsert(179,5010
ginHeapTupleBulkInsert(256,7106
ginBuildCallback(280,7734
ginbuild(320,8914
ginbuildempty(437,12129
ginHeapTupleInsert(470,13038
gininsert(488,13456

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/ginscan.c,200
ginbeginscan(25,611
ginFillScanEntry(57,1434
ginScanKeyAddHiddenEntry(137,3742
ginFillScanKey(153,4204
ginFreeScanKeys(233,6658
ginNewScanKey(263,7207
ginrescan(442,12361
ginendscan(458,12672

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/ginentrypage.c,489
GinFormTuple(45,1590
ginReadTuple(163,4411
GinFormInteriorTuple(202,5351
getRightMostTuple(236,6225
entryIsMoveRight(244,6394
entryLocateEntry(271,7041
entryLocateLeafEntry(347,8747
entryFindChildPtr(406,9890
entryGetLeftMostPage(447,10909
entryIsEnoughSpace(460,11226
entryPreparePage(491,11979
entryBeginPlaceToPage(528,13141
entryExecPlaceToPage(555,13964
entrySplitPage(600,15262
entryPrepareDownlink(700,17868
ginEntryFillRoot(721,18383
ginPrepareEntryScan(745,19238

/home/seinoyu/pgsql/master/postgresql/src/backend/access/gin/ginvalidate.c,20
ginvalidate(33,852

/home/seinoyu/pgsql/master/postgresql/src/backend/access/nbtree/nbtcompare.c,603
#define A_LESS_THAN_B	64,2675
#define A_GREATER_THAN_B	65,2706
#define A_LESS_THAN_B	67,2745
#define A_GREATER_THAN_B	68,2773
btboolcmp(73,2815
btint2cmp(82,2956
btint2fastcmp(91,3106
btint2sortsupport(100,3255
btint4cmp(109,3413
btint4fastcmp(123,3651
btint4sortsupport(137,3872
btint8cmp(146,4030
btint8fastcmp(160,4268
btint8sortsupport(174,4489
btint48cmp(183,4647
btint84cmp(197,4881
btint24cmp(211,5115
btint42cmp(225,5349
btint28cmp(239,5583
btint82cmp(253,5817
btoidcmp(267,6051
btoidfastcmp(281,6282
btoidsortsupport(295,6506
btoidvectorcmp(304,6662
btcharcmp(328,7168

/home/seinoyu/pgsql/master/postgresql/src/backend/access/nbtree/nbtsearch.c,552
_bt_drop_lock_and_maybe_pin(65,2537
_bt_search(101,3907
_bt_moveright(241,9087
_bt_binsrch(343,12183
_bt_binsrch_insert(447,15550
_bt_binsrch_posting(558,18596
_bt_compare(644,21396
_bt_first(848,28591
_bt_next(1450,46987
_bt_readpage(1505,48689
_bt_saveitem(1761,55876
_bt_setuppostingitems(1791,56781
_bt_savepostingitem(1829,57872
_bt_steppage(1857,58791
_bt_readnextpage(1964,61611
_bt_parallel_readpage(2142,67059
_bt_walk_left(2172,67937
_bt_get_endpoint(2291,71522
_bt_endpoint(2375,73936
_bt_initialize_more_data(2465,76208

/home/seinoyu/pgsql/master/postgresql/src/backend/access/nbtree/nbtvalidate.c,20
btvalidate(38,1093

/home/seinoyu/pgsql/master/postgresql/src/backend/access/nbtree/nbtutils.c,1493
typedef struct BTSortArrayContext34,812
	FmgrInfo	flinfo;36,848
	Oid			collation;37,866
	bool		reverse;38,884
} BTSortArrayContext;39,900
_bt_mkscankey(90,3330
_bt_freestack(175,5529
_bt_preprocess_array_keys(203,6378
_bt_find_extreme_element(375,11213
_bt_sort_array_elements(442,13141
_bt_compare_array_elements(496,14812
_bt_start_array_keys(518,15443
_bt_advance_array_keys(544,16200
_bt_mark_array_keys(603,17587
_bt_restore_array_keys(622,17989
_bt_preprocess_keys(742,24059
_bt_compare_scankey_args(1032,32300
_bt_fix_scankey_strategy(1196,37258
_bt_mark_scankey_required(1298,40784
_bt_checkkeys(1355,42511
_bt_check_rowcompare(1522,47279
_bt_killitems(1718,53823
typedef struct BTOneVacInfo1907,59938
	LockRelId	relid;1909,59968
	BTCycleId	cycleid;1910,60024
} BTOneVacInfo;1911,60082
typedef struct BTVacInfo1913,60099
	BTCycleId	cycle_ctr;1915,60126
	int			num_vacuums;1916,60187
	int			max_vacuums;1917,60248
	BTOneVacInfo vacuums[vacuums1918,60310
} BTVacInfo;1919,60356
static BTVacInfo *btvacinfo;btvacinfo1921,60370
_bt_vacuum_cycleid(1934,60808
_bt_start_vacuum(1968,61713
_bt_end_vacuum(2025,63319
_bt_end_vacuum_callback(2053,63922
BTreeShmemSize(2062,64100
BTreeShmemInit(2075,64334
btoptions(2103,64918
btproperty(2128,65606
btbuildphasename(2151,66078
_bt_truncate(2199,68148
_bt_keep_natts(2344,73603
_bt_keep_natts_fast(2418,76041
_bt_check_natts(2465,77433
_bt_check_third_page(2633,82668
_bt_allequalimage(2691,84835

/home/seinoyu/pgsql/master/postgresql/src/backend/access/nbtree/nbtsplitloc.c,1176
	SPLIT_DEFAULT,23,624
	SPLIT_MANY_DUPLICATES,24,680
	SPLIT_SINGLE_VALUE	25,747
} FindSplitStrat;26,803
	int16		curdelta;31,882
	int16		leftfree;32,940
	int16		rightfree;33,1000
	OffsetNumber firstrightoff;36,1132
	bool		newitemonleft;37,1200
} SplitPoint;39,1262
	Relation	rel;44,1334
	Page		origpage;45,1372
	IndexTuple	newitem;46,1418
	Size		newitemsz;47,1477
	bool		is_leaf;48,1542
	bool		is_rightmost;49,1592
	OffsetNumber newitemoff;50,1658
	int			leftspace;51,1727
	int			rightspace;52,1791
	int			olddataitemstotal;53,1857
	Size		minfirstrightsz;54,1914
	int			maxsplits;57,2004
	int			nsplits;58,2054
	SplitPoint *splits;splits59,2102
	int			interval;60,2167
} FindSplitData;61,2232
_bt_findsplitloc(130,6032
_bt_recsplitloc(450,17300
_bt_deltasortsplits(567,21540
_bt_splitcmp(595,22129
_bt_afternewitemoff(636,23951
_bt_adjacenthtid(755,28089
_bt_bestsplitloc(794,29578
#define LEAF_SPLIT_DISTANCE	855,31558
#define INTERNAL_SPLIT_DISTANCE	856,31594
_bt_defaultinterval(882,33025
_bt_strategy(940,35182
_bt_interval_edges(1058,39427
_bt_split_penalty(1137,41788
_bt_split_lastleft(1165,42437
_bt_split_firstright(1181,42863

/home/seinoyu/pgsql/master/postgresql/src/backend/access/nbtree/nbtxlog.c,510
static MemoryContext opCtx;27,694
_bt_restore_page(38,1135
_bt_restore_meta(85,2359
_bt_clear_incomplete_split(142,4113
btree_xlog_insert(163,4625
btree_xlog_split(254,7685
btree_xlog_dedup(466,14240
btree_xlog_vacuum(559,16963
btree_xlog_delete(646,19595
btree_xlog_mark_page_halfdead(691,20702
btree_xlog_unlink_page(771,23194
btree_xlog_newroot(883,26450
btree_xlog_reuse_page(923,27408
btree_redo(945,28112
btree_xlog_startup(1004,29562
btree_xlog_cleanup(1012,29731
btree_mask(1022,29882

/home/seinoyu/pgsql/master/postgresql/src/backend/access/nbtree/nbtpage.c,824
_bt_initmetapage(61,2111
_bt_upgrademetapage(101,3356
_bt_getmeta(136,4615
_bt_update_meta_cleanup_info(174,5742
_bt_getroot(272,8970
_bt_gettrueroot(508,16149
_bt_getrootheight(604,18950
_bt_metaversion(668,21061
_bt_checkpage(726,22794
_bt_log_reuse_page(760,23784
_bt_getbuf(803,25234
_bt_relandgetbuf(939,29776
_bt_relbuf(959,30173
_bt_lockbuf(975,30603
_bt_unlockbuf(1006,31803
_bt_conditionallockbuf(1029,32473
_bt_upgradelockbufcleanup(1046,32854
_bt_pageinit(1066,33391
_bt_page_recyclable(1081,33871
_bt_delitems_vacuum(1124,35382
_bt_delitems_delete(1290,40738
_bt_xid_horizon(1359,42703
_bt_leftsib_splitflag(1441,44938
_bt_rightsib_halfdeadflag(1498,47461
_bt_pagedel(1549,49468
_bt_mark_page_halfdead(1820,59296
_bt_unlink_halfdead_page(2042,67376
_bt_lock_subtree_parent(2482,81832

/home/seinoyu/pgsql/master/postgresql/src/backend/access/nbtree/nbtree.c,1449
	IndexVacuumInfo *info;info44,1141
	IndexBulkDeleteResult *stats;stats45,1165
	IndexBulkDeleteCallback callback;46,1196
	void	   *callback_state;callback_state47,1231
	BTCycleId	cycleid;48,1257
	BlockNumber totFreePages;49,1277
	TransactionId oldestBtpoXact;50,1337
	MemoryContext pagedelcontext;51,1368
} BTVacState;52,1399
	BTPARALLEL_NOT_INITIALIZED,68,1909
	BTPARALLEL_ADVANCING,69,1938
	BTPARALLEL_IDLE,70,1961
	BTPARALLEL_DONE71,1979
} BTPS_State;72,1996
typedef struct BTParallelScanDescData78,2118
	BlockNumber btps_scanPage;80,2158
	BTPS_State	btps_pageStatus;81,2226
	int			btps_arrayKeyCount;84,2384
	slock_t		btps_mutex;86,2499
	ConditionVariable btps_cv;87,2553
}			BTParallelScanDescData;88,2621
typedef struct BTParallelScanDescData *BTParallelScanDesc;BTParallelScanDesc90,2650
bthandler(108,3224
btbuildempty(162,5036
btinsert(198,6232
btgettuple(221,6697
btgetbitmap(295,8763
btbeginscan(353,10151
btrescan(399,11286
btendscan(459,13356
btmarkpos(495,14277
btrestrpos(525,15084
btestimateparallelscan(581,16578
btinitparallelscan(590,16743
btparallelrescan(605,17126
_bt_parallel_seize(646,18630
_bt_parallel_release(704,20156
_bt_parallel_done(727,20887
_bt_parallel_advance_array_keys(768,22033
_bt_vacuum_needs_cleanup(799,23035
btbulkdelete(868,25148
btvacuumcleanup(898,26056
btvacuumscan(954,28026
btvacuumpage(1086,33115
btreevacuumposting(1441,44340
btcanreturn(1490,45579

/home/seinoyu/pgsql/master/postgresql/src/backend/access/nbtree/nbtinsert.c,392
#define BTREE_FASTPATH_MIN_LEVEL	29,791
_bt_doinsert(82,3070
_bt_search_insert(296,11711
_bt_check_unique(387,15150
_bt_findinsertloc(790,28661
_bt_stepright(1025,37179
_bt_insertonpg(1101,39846
_bt_split(1444,50781
_bt_insert_parent(2078,74630
_bt_finish_split(2215,79406
_bt_getstackbuf(2292,82289
_bt_newroot(2416,85617
_bt_pgaddtup(2603,91761
_bt_vacuum_one_page(2635,92530

/home/seinoyu/pgsql/master/postgresql/src/backend/access/nbtree/nbtdedup.c,309
_bt_dedup_one_page(56,2436
_bt_dedup_start_pending(324,10948
_bt_dedup_save_htid(375,12461
_bt_dedup_finish_pending(446,14493
_bt_do_singleval(534,18147
_bt_singleval_fillfactor(574,19735
_bt_form_posting(616,21513
_bt_update_posting(676,23096
_bt_swap_posting(774,26393
_bt_posting_valid(818,27980

/home/seinoyu/pgsql/master/postgresql/src/backend/access/nbtree/nbtsort.c,2833
#define PARALLEL_KEY_BTREE_SHARED	69,2753
#define PARALLEL_KEY_TUPLESORT	70,2820
#define PARALLEL_KEY_TUPLESORT_SPOOL2	71,2885
#define PARALLEL_KEY_QUERY_TEXT	72,2955
#define PARALLEL_KEY_WAL_USAGE	73,3021
#define PARALLEL_KEY_BUFFER_USAGE	74,3086
typedef struct BTSpool87,3500
	Tuplesortstate *sortstate;sortstate89,3525
	Relation	heap;90,3586
	Relation	index;91,3602
	bool		isunique;92,3619
} BTSpool;93,3636
typedef struct BTShared100,3885
	Oid			heaprelid;107,4113
	Oid			indexrelid;108,4131
	bool		isunique;109,4150
	bool		isconcurrent;110,4167
	int			scantuplesortstates;111,4188
	ConditionVariable workersdonecv;119,4490
	slock_t		mutex;127,4733
	int			nparticipantsdone;145,5248
	double		reltuples;146,5274
	bool		havedead;147,5294
	double		indtuples;148,5311
	bool		brokenhotchain;149,5331
} BTShared;156,5535
#define ParallelTableScanFromBTShared(164,5699
typedef struct BTLeader170,5878
	ParallelContext *pcxt;pcxt173,5935
	int			nparticipanttuplesorts;181,6209
	BTShared   *btshared;btshared193,6668
	Sharedsort *sharedsort;sharedsort194,6691
	Sharedsort *sharedsort2;sharedsort2195,6716
	Snapshot	snapshot;196,6742
	WalUsage   *walusage;walusage197,6762
	BufferUsage *bufferusage;bufferusage198,6785
} BTLeader;199,6812
typedef struct BTBuildState207,6970
	bool		isunique;209,7000
	bool		havedead;210,7017
	Relation	heap;211,7034
	BTSpool    *spool;spool212,7050
	BTSpool    *spool2;spool2218,7229
	double		indtuples;219,7250
	BTLeader   *btleader;btleader226,7489
} BTBuildState;227,7512
typedef struct BTPageState233,7636
	Page		btps_page;235,7665
	BlockNumber btps_blkno;236,7718
	IndexTuple	btps_lowkey;237,7780
	OffsetNumber btps_lastoff;238,7849
	Size		btps_lastextra;239,7907
	uint32		btps_level;240,7973
	Size		btps_full;241,8023
	struct BTPageState *btps_next;btps_next242,8089
} BTPageState;243,8156
typedef struct BTWriteState248,8229
	Relation	heap;250,8259
	Relation	index;251,8275
	BTScanInsert inskey;252,8292
	bool		btws_use_wal;253,8347
	BlockNumber btws_pages_alloced;254,8393
	BlockNumber btws_pages_written;255,8450
	Page		btws_zeropage;256,8509
} BTWriteState;257,8566
btbuild(299,10415
_bt_spools_heapscan(368,12457
_bt_spooldestroy(518,17400
_bt_spool(528,17556
_bt_leafbuild(539,17840
_bt_build_callback(582,19075
_bt_blnewpage(611,19746
_bt_blwritepage(638,20386
_bt_pagestate(696,22082
_bt_slideleft(733,23244
_bt_sortaddtup(764,24125
_bt_buildadd(834,26899
_bt_sort_dedup_finish_pending(1075,35829
_bt_uppershutdown(1109,36608
_bt_load(1181,38838
_bt_begin_parallel(1454,46931
_bt_end_parallel(1655,53530
_bt_parallel_estimate_shared(1681,54293
_bt_parallel_heapscan(1701,55000
_bt_leader_participate_as_worker(1735,55866
_bt_parallel_build_main(1787,57436
_bt_parallel_scan_and_sort(1901,60878

/home/seinoyu/pgsql/master/postgresql/src/backend/access/tablesample/bernoulli.c,287
	uint64		cutoff;39,1185
	uint32		seed;40,1249
	OffsetNumber lt;41,1284
} BernoulliSamplerData;42,1349
tsm_bernoulli_handler(65,2003
bernoulli_samplescangetsamplesize(86,2566
bernoulli_initsamplescan(127,3541
bernoulli_beginsamplescan(136,3736
bernoulli_nextsampletuple(181,5329

/home/seinoyu/pgsql/master/postgresql/src/backend/access/tablesample/tablesample.c,22
GetTsmRoutine(27,669

/home/seinoyu/pgsql/master/postgresql/src/backend/access/tablesample/system.c,334
	uint64		cutoff;40,1213
	uint32		seed;41,1277
	BlockNumber nextblock;42,1312
	OffsetNumber lt;43,1375
} SystemSamplerData;44,1440
tsm_system_handler(68,2163
system_samplescangetsamplesize(89,2729
system_initsamplescan(131,3804
system_beginsamplescan(140,3993
system_nextsampleblock(179,5215
system_nextsampletuple(237,6859

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/standbydesc.c,119
standby_desc_running_xacts(20,523
standby_desc(40,1021
standby_identify(72,1846
standby_desc_invalidations(98,2335

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/brindesc.c,41
brin_desc(20,498
brin_identify(74,2006

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/xactdesc.c,298
ParseCommitRecord(34,990
ParseAbortRecord(129,3274
ParsePrepareRecord(216,5310
xact_desc_relations(251,6441
xact_desc_subxacts(270,6769
xact_desc_commit(283,7024
xact_desc_abort(316,8086
xact_desc_prepare(333,8608
xact_desc_assignment(352,9237
xact_desc(363,9454
xact_identify(409,10746

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/clogdesc.c,41
clog_desc(21,503
clog_identify(44,1006

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/xlogdesc.c,117
const struct config_enum_entry wal_level_options[wal_level_options27,665
xlog_desc(37,983
xlog_identify(146,4197

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/gindesc.c,70
desc_recompress_leaf(23,608
gin_desc(74,1957
gin_identify(182,5199

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/mxactdesc.c,71
out_member(20,521
multixact_desc(50,1253
multixact_identify(84,2194

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/spgdesc.c,39
spg_desc(20,505
spg_identify(83,2362

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/replorigindesc.c,53
replorigin_desc(19,456
replorigin_identify(52,1135

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/seqdesc.c,38
seq_desc(21,505
seq_identify(34,855

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/gistdesc.c,194
out_gistxlogPageUpdate(22,575
out_gistxlogPageReuse(27,658
out_gistxlogDelete(37,1023
out_gistxlogPageSplit(45,1215
out_gistxlogPageDelete(52,1374
gist_desc(61,1637
gist_identify(90,2377

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/nbtdesc.c,44
btree_desc(20,505
btree_identify(122,3326

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/genericdesc.c,47
generic_desc(25,661
generic_identify(53,1300

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/relmapdesc.c,44
relmap_desc(20,512
relmap_identify(35,884

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/smgrdesc.c,41
smgr_desc(21,508
smgr_identify(46,1142

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/logicalmsgdesc.c,52
logicalmsg_desc(19,458
logicalmsg_identify(35,880

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/dbasedesc.c,43
dbase_desc(22,546
dbase_identify(48,1227

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/hashdesc.c,42
hash_desc(20,504
hash_identify(125,3443

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/tblspcdesc.c,44
tblspc_desc(21,515
tblspc_identify(41,999

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/committsdesc.c,51
commit_ts_desc(22,550
commit_ts_identify(69,1732

/home/seinoyu/pgsql/master/postgresql/src/backend/access/rmgrdesc/heapdesc.c,109
out_infobits(20,515
heap_desc(35,983
heap2_desc(118,3283
heap_identify(181,5135
heap2_identify(226,5944

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/xlogutils.c,1184
bool		ignore_invalid_pages 35,899
typedef struct xl_invalid_page_key47,1481
	RelFileNode node;49,1518
	ForkNumber	forkno;50,1558
	BlockNumber blkno;51,1602
} xl_invalid_page_key;52,1639
typedef struct xl_invalid_page54,1663
	xl_invalid_page_key key;56,1696
	bool		present;57,1755
} xl_invalid_page;58,1812
static HTAB *invalid_page_tab invalid_page_tab60,1832
report_invalid_page(65,1928
log_invalid_page(81,2322
forget_invalid_pages(146,4280
forget_invalid_pages_db(181,5188
XLogHaveInvalidPages(214,5983
XLogCheckInvalidPages(224,6185
XLogReadBufferForRedo(294,8810
XLogInitBufferForRedo(306,9099
XLogReadBufferForRedoExtended(331,9931
XLogReadBufferExtended(442,13603
	RelationData reldata;536,16162
	FormData_pg_class pgc;537,16217
} FakeRelCacheEntryData;538,16241
typedef FakeRelCacheEntryData *FakeRelCacheEntry;FakeRelCacheEntry540,16267
CreateFakeRelcacheEntry(557,16971
FreeFakeRelcacheEntry(600,18198
XLogDropRelation(615,18605
XLogDropDatabase(626,18835
XLogTruncateRelation(645,19351
XLogReadDetermineTimeline(690,21597
wal_segment_open(788,25265
wal_segment_close(813,25902
read_local_xlog_page(832,26499
WALReadRaiseError(959,30183

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/generic_xlog.c,649
#define FRAGMENT_HEADER_SIZE	46,1924
#define MATCH_THRESHOLD	47,1980
#define MAX_DELTA_SIZE	48,2027
	Buffer		buffer;53,2156
	int			flags;54,2199
	int			deltaLen;55,2243
	char	   *image;image56,2297
	char		delta[delta58,2421
} PageData;59,2483
struct GenericXLogState62,2544
	PageData	pages[pages65,2609
	bool		isLogged;66,2650
	PGAlignedBlock images[images68,2705
writeFragment(88,3385
computeRegionDelta(119,4420
computeDelta(226,7657
GenericXLogStart(267,8911
GenericXLogRegisterBuffer(295,9620
GenericXLogFinish(333,10587
GenericXLogAbort(444,13572
applyPageRedo(453,13689
generic_redo(478,14122
generic_mask(539,15758

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/xlogfuncs.c,762
static StringInfo label_file;44,1142
static StringInfo tblspc_map_file;45,1172
pg_start_backup(60,1711
pg_stop_backup(124,3780
pg_stop_backup_v2(166,5204
pg_switch_wal(267,8274
pg_create_restore_point(292,8860
pg_current_wal_lsn(333,10204
pg_current_wal_insert_lsn(354,10712
pg_current_wal_flush_lsn(375,11227
pg_last_wal_receive_lsn(397,11801
pg_last_wal_replay_lsn(416,12175
pg_walfile_name_offset(437,12713
pg_walfile_name(500,14347
pg_wal_replay_pause(526,15051
pg_wal_replay_resume(553,15768
pg_is_wal_replay_paused(577,16378
pg_last_xact_replay_timestamp(595,16862
pg_is_in_recovery(610,17105
pg_wal_lsn_diff(619,17260
pg_is_in_backup(634,17524
pg_backup_start_time(646,17748
pg_promote(712,19322
#define WAITS_PER_SECOND 758,20613

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/clog.c,1159
#define CLOG_BITS_PER_XACT	59,2573
#define CLOG_XACTS_PER_BYTE 60,2602
#define CLOG_XACTS_PER_PAGE 61,2632
#define CLOG_XACT_BITMASK	62,2691
#define TransactionIdToPage(64,2750
#define TransactionIdToPgIndex(65,2829
#define TransactionIdToByte(66,2911
#define TransactionIdToBIndex(67,2996
#define CLOG_XACTS_PER_LSN_GROUP	70,3145
#define CLOG_LSNS_PER_PAGE	71,3210
#define GetLSNIndex(73,3287
#define THRESHOLD_SUBTRANS_CLOG_OPT	81,3614
static SlruCtlData XactCtlData;86,3718
#define XactCtl 88,3751
TransactionIdSetTreeStatus(163,6979
set_status_by_pages(237,9239
TransactionIdSetPageStatus(273,10038
TransactionIdSetPageStatusInternal(338,12412
TransactionGroupUpdateXidStatus(413,15267
TransactionIdSetStatusBit(565,19755
TransactionIdGetStatus(634,22380
CLOGShmemBuffers(676,23857
CLOGShmemSize(685,23983
CLOGShmemInit(691,24081
BootStrapCLOG(705,24501
ZeroCLOGPage(731,25160
StartupCLOG(748,25493
TrimCLOG(767,25894
ShutdownCLOG(816,27547
CheckPointCLOG(835,27944
ExtendCLOG(860,28584
TruncateCLOG(899,29968
CLOGPagePrecedes(945,31599
WriteZeroPageXlogRec(963,31962
WriteTruncateXlogRec(977,32267
clog_redo(996,32689

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/twophase.c,2862
#define TWOPHASE_DIR 114,4498
int			max_prepared_xacts 117,4585
typedef struct GlobalTransactionData149,5844
	GlobalTransaction next;151,5883
	int			pgprocno;152,5939
	BackendId	dummyBackendId;153,5993
	TimestampTz prepared_at;154,6061
	XLogRecPtr	prepare_start_lsn;163,6431
	XLogRecPtr	prepare_end_lsn;164,6504
	TransactionId xid;165,6573
	Oid			owner;167,6615
	BackendId	locking_backend;168,6671
	bool		valid;169,6743
	bool		ondisk;170,6803
	bool		inredo;171,6864
	char		gid[gid172,6925
}			GlobalTransactionData;173,6990
typedef struct TwoPhaseStateData179,7120
	GlobalTransaction freeGXacts;182,7220
	int			numPrepXacts;185,7294
	GlobalTransaction prepXacts[prepXacts188,7372
} TwoPhaseStateData;189,7425
static TwoPhaseStateData *TwoPhaseState;TwoPhaseState191,7447
static GlobalTransaction MyLockedGxact 199,7755
static bool twophaseExitRegistered 201,7803
TwoPhaseShmemSize(236,9116
TwoPhaseShmemInit(252,9512
AtProcExit_Twophase(307,11159
AtAbort_Twophase(317,11336
PostPrepare_Twophase(357,12830
MarkAsPreparing(372,13114
MarkAsPreparingGuts(446,15224
GXactLoadSubxactData(509,17016
MarkAsPrepared(536,17738
LockGXact(558,18325
RemoveGXact(634,20457
GetPreparedTransactionList(672,21500
	GlobalTransaction array;704,22120
	int			ngxacts;705,22146
	int			currIdx;706,22162
} Working_State;707,22178
pg_prepared_xact(717,22390
TwoPhaseGetGXact(809,25002
TwoPhaseGetDummyBackendId(863,26424
TwoPhaseGetDummyProc(878,26807
#define TwoPhaseFilePath(889,27166
#define TWOPHASE_MAGIC	911,27766
typedef xl_xact_prepare TwoPhaseFileHeader;913,27825
typedef struct TwoPhaseRecordOnDisk921,28064
	uint32		len;923,28102
	TwoPhaseRmgrId rmid;924,28144
	uint16		info;925,28206
} TwoPhaseRecordOnDisk;926,28255
typedef struct StateFileChunk933,28453
	char	   *data;data935,28485
	uint32		len;936,28501
	struct StateFileChunk *next;next937,28515
} StateFileChunk;938,28545
static struct xllist940,28564
	StateFileChunk *head;head942,28587
	StateFileChunk *tail;tail943,28647
	uint32		num_chunks;944,28697
	uint32		bytes_free;945,28718
	uint32		total_len;946,28776
}			records;947,28829
save_state_data(959,29104
StartPrepare(987,29774
EndPrepare(1060,31869
RegisterTwoPhaseRecord(1187,35935
ReadTwoPhaseFile(1210,36597
XlogReadTwoPhaseData(1327,39704
StandbyTransactionIdIsPrepared(1375,41110
FinishPreparedTransaction(1403,41652
ProcessRecords(1572,46648
RemoveTwoPhaseFile(1600,47324
RecreateTwoPhaseFile(1619,47763
CheckPointTwoPhase(1699,50368
restoreTwoPhaseData(1781,53068
PrescanPreparedTransactions(1843,55250
StandbyRecoverPreparedTransactions(1924,57074
RecoverPreparedTransactions(1965,58205
ProcessTwoPhaseBuffer(2066,61248
RecordTransactionCommitPrepared(2186,64109
RecordTransactionAbortPrepared(2280,66841
PrepareRedoAdd(2339,68465
PrepareRedoRemove(2409,70736

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/xloginsert.c,1666
#define PGLZ_MAX_BLCKSZ 37,1212
	bool		in_use;45,1391
	uint8		flags;46,1435
	RelFileNode rnode;47,1473
	ForkNumber	forkno;48,1535
	BlockNumber block;49,1555
	Page		page;50,1575
	uint32		rdata_len;51,1609
	XLogRecData *rdata_head;rdata_head52,1672
	XLogRecData *rdata_tail;rdata_tail54,1768
	XLogRecData bkp_rdatas[bkp_rdatas57,1861
	char		compressed_page[compressed_page61,2059
} registered_buffer;62,2100
static registered_buffer *registered_buffers;registered_buffers64,2122
static int	max_registered_buffers;65,2168
static int	max_registered_block_id 66,2224
static XLogRecData *mainrdata_head;mainrdata_head73,2444
static XLogRecData *mainrdata_last mainrdata_last74,2480
static uint32 mainrdata_len;75,2550
static uint8 curinsert_flags 78,2654
static XLogRecData hdr_rdt;88,3004
static char *hdr_scratch hdr_scratch89,3032
#define SizeOfXlogOrigin	91,3066
#define SizeOfXLogTransactionId	92,3128
#define HEADER_SCRATCH_SIZE 94,3200
static XLogRecData *rdatas;rdatas103,3467
static int	num_rdatas;104,3495
static int	max_rdatas;105,3549
static bool begininsert_called 107,3596
static MemoryContext xloginsert_cxt;110,3709
XLogBeginInsert(123,4162
XLogEnsureRecordSpace(149,4916
XLogResetInsertion(196,6320
XLogRegisterBuffer(220,6910
XLogRegisterBlock(273,8260
XLogRegisterData(330,9648
XLogRegisterBufData(368,10641
XLogSetRecordFlags(404,11589
XLogInsert(422,12216
XLogRecordAssemble(491,14257
XLogCompressBackupBlock(829,23529
XLogCheckBufferNeedsBackup(879,24880
XLogSaveBufferForHint(917,26257
log_newpage(996,28590
log_newpage_buffer(1033,29552
log_newpage_range(1066,30710
InitXLogInsert(1140,32332

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/slru.c,1273
#define SlruFileName(62,2731
#define MAX_FLUSH_BUFFERS	72,3154
typedef struct SlruFlushData74,3184
	int			num_files;76,3215
	int			fd[fd77,3262
	int			segno[segno78,3309
} SlruFlushData;79,3364
typedef struct SlruFlushData *SlruFlush;SlruFlush81,3382
#define SlruRecentlyUsed(102,4506
	SLRU_OPEN_FAILED,114,4845
	SLRU_SEEK_FAILED,115,4864
	SLRU_READ_FAILED,116,4883
	SLRU_WRITE_FAILED,117,4902
	SLRU_FSYNC_FAILED,118,4922
	SLRU_CLOSE_FAILED119,4942
} SlruErrorCause;120,4961
static SlruErrorCause slru_errcause;122,4980
static int	slru_errno;123,5017
SimpleLruShmemSize(144,5751
SimpleLruInit(175,6956
SimpleLruZeroPage(267,9476
SimpleLruZeroLSNs(311,10831
SimpleLruWaitIO(328,11374
SimpleLruReadPage(382,13449
SimpleLruReadPage_ReadOnly(482,16597
SlruInternalWritePage(526,18006
SimpleLruWritePage(597,20006
SimpleLruDoesPhysicalPageExist(609,20283
SlruPhysicalReadPage(667,21743
SlruPhysicalWritePage(747,23863
SlruReportIOError(923,28576
SlruSelectLRUPage(1008,31453
SimpleLruFlush(1145,36026
SimpleLruTruncate(1213,37618
SlruInternalDeleteSegment(1295,40132
SlruDeleteSegment(1309,40434
SlruScanDirCbReportPresence(1369,41926
SlruScanDirCbDeleteCutoff(1386,42363
SlruScanDirCbDeleteAll(1401,42692
SlruScanDirectory(1424,43438

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/varsup.c,317
#define VAR_OID_PREFETCH	31,779
VariableCache ShmemVariableCache 34,882
GetNewTransactionId(49,1348
ReadNextFullTransactionId(246,9088
AdvanceNextFullTransactionIdPastXid(262,9451
AdvanceOldestClogXid(313,11284
SetTransactionIdLimit(330,11812
ForceTransactionIdLimitUpdate(471,17863
GetNewObjectId(509,19269

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/xact.c,7800
int			DefaultXactIsoLevel 74,1946
int			XactIsoLevel;75,1995
bool		DefaultXactReadOnly 77,2016
bool		XactReadOnly;78,2051
bool		DefaultXactDeferrable 80,2072
bool		XactDeferrable;81,2109
int			synchronous_commit 83,2132
FullTransactionId XactTopFullTransactionId 108,3508
int			nParallelCurrentXids 109,3577
TransactionId *ParallelCurrentXids;ParallelCurrentXids110,3609
int			MyXactFlags;119,3979
typedef enum TransState124,4072
	TRANS_DEFAULT,126,4098
	TRANS_START,127,4128
	TRANS_INPROGRESS,128,4172
	TRANS_COMMIT,129,4226
	TRANS_ABORT,130,4269
	TRANS_PREPARE	131,4310
} TransState;132,4354
typedef enum TBlockState140,4578
	TBLOCK_DEFAULT,143,4644
	TBLOCK_STARTED,144,4675
	TBLOCK_BEGIN,147,4767
	TBLOCK_INPROGRESS,148,4818
	TBLOCK_IMPLICIT_INPROGRESS,149,4863
	TBLOCK_PARALLEL_INPROGRESS,150,4936
	TBLOCK_END,151,5011
	TBLOCK_ABORT,152,5050
	TBLOCK_ABORT_END,153,5105
	TBLOCK_ABORT_PENDING,154,5163
	TBLOCK_PREPARE,155,5222
	TBLOCK_SUBBEGIN,158,5306
	TBLOCK_SUBINPROGRESS,159,5358
	TBLOCK_SUBRELEASE,160,5408
	TBLOCK_SUBCOMMIT,161,5453
	TBLOCK_SUBABORT,162,5523
	TBLOCK_SUBABORT_END,163,5583
	TBLOCK_SUBABORT_PENDING,164,5646
	TBLOCK_SUBRESTART,165,5710
	TBLOCK_SUBABORT_RESTART	166,5773
} TBlockState;167,5842
typedef struct TransactionStateData172,5896
	FullTransactionId fullTransactionId;174,5934
	SubTransactionId subTransactionId;175,5999
	char	   *name;name176,6055
	int			savepointLevel;177,6102
	TransState	state;178,6147
	TBlockState blockState;179,6190
	int			nestingLevel;180,6239
	int			gucNestLevel;181,6292
	MemoryContext curTransactionContext;182,6345
	ResourceOwner curTransactionOwner;183,6414
	TransactionId *childXids;childXids184,6475
	int			nChildXids;185,6546
	int			maxChildXids;186,6601
	Oid			prevUser;187,6658
	int			prevSecContext;188,6713
	bool		prevXactReadOnly;189,6778
	bool		startedInRecovery;190,6835
	bool		didLogXid;191,6893
	int			parallelModeLevel;192,6955
	bool		chain;193,7018
	bool		assigned;194,7073
	struct TransactionStateData *parent;parent195,7123
} TransactionStateData;196,7187
typedef TransactionStateData *TransactionState;TransactionState198,7212
typedef struct SerializedTransactionState204,7378
	int			xactIsoLevel;206,7422
	bool		xactDeferrable;207,7443
	FullTransactionId topFullTransactionId;208,7466
	FullTransactionId currentFullTransactionId;209,7507
	CommandId	currentCommandId;210,7552
	int			nParallelCurrentXids;211,7581
	TransactionId parallelCurrentXids[parallelCurrentXids212,7610
} SerializedTransactionState;213,7669
#define SerializedTransactionStateHeaderSize 216,7777
static TransactionStateData TopTransactionStateData 224,8090
static int	nUnreportedXids;234,8355
static TransactionId unreportedXids[unreportedXids235,8383
static TransactionState CurrentTransactionState 237,8448
static SubTransactionId currentSubTransactionId;243,8673
static CommandId currentCommandId;244,8722
static bool currentCommandIdUsed;245,8757
static TimestampTz xactStartTimestamp;254,9123
static TimestampTz stmtStartTimestamp;255,9162
static TimestampTz xactStopTimestamp;256,9201
static char *prepareGID;prepareGID262,9392
static bool forceSyncCommit 267,9476
bool		xact_is_sampled 270,9566
static MemoryContext TransactionAbortContext 277,9793
typedef struct XactCallbackItem282,9905
	struct XactCallbackItem *next;next284,9939
	XactCallback callback;285,9971
	void	   *arg;arg286,9995
} XactCallbackItem;287,10010
static XactCallbackItem *Xact_callbacks Xact_callbacks289,10031
typedef struct SubXactCallbackItem294,10141
	struct SubXactCallbackItem *next;next296,10178
	SubXactCallback callback;297,10213
	void	   *arg;arg298,10240
} SubXactCallbackItem;299,10255
static SubXactCallbackItem *SubXact_callbacks SubXact_callbacks301,10279
IsTransactionState(358,12265
IsAbortedTransactionBlockState(378,12832
GetTopTransactionId(397,13217
GetTopTransactionIdIfAny(412,13690
GetCurrentTransactionId(425,14011
GetCurrentTransactionIdIfAny(442,14509
GetTopFullTransactionId(454,14838
GetTopFullTransactionIdIfAny(470,15316
GetCurrentFullTransactionId(483,15637
GetCurrentFullTransactionIdIfAny(501,16140
MarkCurrentTransactionIdLoggedIfAny(512,16370
GetStableLatestTransactionId(528,16908
AssignTransactionId(556,17673
GetCurrentSubTransactionId(710,22826
SubTransactionIsActive(724,23128
GetCurrentCommandId(748,23687
SetParallelStartTimestamps(774,24481
GetCurrentTransactionStartTimestamp(785,24704
GetCurrentStatementStartTimestamp(794,24835
GetCurrentTransactionStopTimestamp(806,25111
SetCurrentStatementStartTimestamp(820,25407
SetCurrentTransactionStopTimestamp(832,25629
GetCurrentTransactionNestLevel(844,25880
TransactionIdIsCurrentTransactionId(856,26047
TransactionStartedDuringRecovery(957,28878
EnterParallelMode(966,29007
ExitParallelMode(979,29178
IsInParallelMode(999,29750
CommandCounterIncrement(1008,29874
ForceSyncCommit(1058,31537
AtStart_Cache(1073,31798
AtStart_Memory(1082,31891
AtStart_ResourceOwner(1129,33159
AtSubStart_Memory(1157,33868
AtSubStart_ResourceOwner(1181,34555
RecordTransactionCommit(1213,35465
AtCCI_LocalCache(1463,44275
AtCommit_Memory(1482,44692
AtSubCommit_Memory(1509,45384
AtSubCommit_childXids(1538,46222
RecordTransactionAbort(1628,49183
AtAbort_Memory(1740,52677
AtSubAbort_Memory(1760,53199
AtAbort_ResourceOwner(1772,53365
AtSubAbort_ResourceOwner(1785,53604
AtSubAbort_childXids(1798,53827
AtCleanup_Memory(1830,54678
AtSubCleanup_Memory(1866,55585
StartTransaction(1901,56536
CommitTransaction(2060,60857
PrepareTransaction(2308,68291
AbortTransaction(2596,77352
CleanupTransaction(2781,82791
StartTransactionCommand(2830,84022
static int	save_XactIsoLevel;2906,86362
static bool save_XactReadOnly;2907,86392
static bool save_XactDeferrable;2908,86423
SaveTransactionCharacteristics(2911,86462
RestoreTransactionCharacteristics(2919,86618
CommitTransactionCommand(2931,86813
AbortCurrentTransaction(3195,93912
PreventInTransactionBlock(3364,98754
WarnNoTransactionBlock(3424,100816
RequireTransactionBlock(3430,100941
CheckTransactionBlock(3439,101128
IsInTransactionBlock(3477,101953
RegisterXactCallback(3512,102823
UnregisterXactCallback(3525,103109
CallXactCallbacks(3546,103492
RegisterSubXactCallback(3567,104065
UnregisterSubXactCallback(3580,104372
CallSubXactCallbacks(3601,104773
BeginTransactionBlock(3622,105281
PrepareTransactionBlock(3690,107124
EndTransactionBlock(3742,108448
UserAbortTransactionBlock(3902,112983
BeginImplicitTransactionBlock(4024,116779
EndImplicitTransactionBlock(4049,117550
DefineSavepoint(4071,118199
ReleaseSavepoint(4156,120818
RollbackToSavepoint(4265,123876
BeginInternalSubTransaction(4392,127785
ReleaseCurrentSubTransaction(4463,129893
RollbackAndReleaseCurrentSubTransaction(4497,131060
AbortOutOfAnyTransaction(4564,132871
IsTransactionBlock(4668,135623
IsTransactionOrTransactionBlock(4686,136057
TransactionBlockStatusCode(4700,136305
IsSubTransaction(4741,137275
StartSubTransaction(4764,138015
CommitSubTransaction(4801,138852
AbortSubTransaction(4910,142180
CleanupSubTransaction(5062,146743
PushTransaction(5095,147584
PopTransaction(5155,149275
EstimateTransactionStateSpace(5189,150224
SerializeTransactionState(5217,151098
StartParallelWorkerTransaction(5287,153250
EndParallelWorkerTransaction(5312,154010
ShowTransactionState(5324,154264
ShowTransactionStateRec(5336,154585
BlockStateAsString(5375,155608
TransStateAsString(5428,156786
xactGetCommittedChildren(5458,157528
XactLogCommitRecord(5482,157930
XactLogAbortRecord(5637,162042
xact_redo_commit(5763,165345
xact_redo_abort(5909,170928
xact_redo(5963,172660
IsSubTransactionAssignmentPending(6058,175605
MarkSubTransactionAssigned(6086,176220

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/xlogreader.c,665
static void report_invalid_record(36,913
#define MAX_ERRORMSG_LEN 51,1726
XLogReaderAllocate(75,2218
XLogReaderFree(139,3860
allocate_recordbuf(173,4785
WALOpenSegmentInit(216,6144
XLogBeginRead(240,6839
XLogReadRecord(268,7673
ReadPageInternal(575,16200
XLogReaderInvalReadState(674,18940
ValidXLogRecordHeader(688,19253
ValidXLogRecord(757,21284
XLogReaderValidatePageHeader(786,22004
XLogFindNextRecord(940,26494
WALRead(1062,29988
ResetDecoder(1151,32137
DecodeXLogRecord(1176,32690
#define COPY_HEADER_FIELD(1181,32854
XLogRecGetBlockTag(1497,42111
XLogRecGetBlockData(1521,42698
RestoreBlockImage(1550,43170
XLogRecGetFullXid(1603,44446

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/timeline.c,275
restoreTimeLineHistoryFiles(50,1545
readTimeLineHistory(76,2214
existsTimeLineHistory(222,5836
findNewestTimeLine(264,6774
writeTimeLineHistory(304,7723
writeTimeLineHistoryFile(467,12021
tliInHistory(534,13821
tliOfPointInHistory(552,14145
tliSwitchPoint(580,14916

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/xlogarchive.c,351
RestoreArchivedFile(53,1687
ExecuteRecoveryCommand(286,9704
KeepFileRestoredFromArchive(380,12057
XLogArchiveNotify(466,14713
XLogArchiveNotifySeg(500,15523
XLogArchiveForceDone(516,15888
XLogArchiveCheckDone(571,17372
XLogArchiveIsBusy(625,19036
XLogArchiveIsReadyOrDone(670,20459
XLogArchiveIsReady(700,21252
XLogArchiveCleanup(718,21591

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/multixact.c,4916
#define MULTIXACT_OFFSETS_PER_PAGE 109,5193
#define MultiXactIdToOffsetPage(111,5264
#define MultiXactIdToOffsetEntry(113,5359
#define MultiXactIdToOffsetSegment(115,5455
#define MXACT_MEMBER_BITS_PER_XACT	130,6254
#define MXACT_MEMBER_FLAGS_PER_BYTE	131,6293
#define MXACT_MEMBER_XACT_BITMASK	132,6333
#define MULTIXACT_FLAGBYTES_PER_GROUP	135,6465
#define MULTIXACT_MEMBERS_PER_MEMBERGROUP	136,6506
#define MULTIXACT_MEMBERGROUP_SIZE 139,6653
#define MULTIXACT_MEMBERGROUPS_PER_PAGE 141,6783
#define MULTIXACT_MEMBERS_PER_PAGE	142,6861
#define MAX_MEMBERS_IN_LAST_MEMBERS_PAGE 155,7483
#define MXOffsetToMemberPage(159,7632
#define MXOffsetToMemberSegment(160,7719
#define MXOffsetToFlagsOffset(163,7883
#define MXOffsetToFlagsBitShift(167,8089
#define MXOffsetToMemberOffset(172,8299
#define MULTIXACT_MEMBER_SAFE_THRESHOLD	177,8521
#define MULTIXACT_MEMBER_DANGER_THRESHOLD	178,8587
#define PreviousMultiXactId(181,8679
static SlruCtlData MultiXactOffsetCtlData;187,8844
static SlruCtlData MultiXactMemberCtlData;188,8887
#define MultiXactOffsetCtl	190,8931
#define MultiXactMemberCtl	191,8984
typedef struct MultiXactStateData200,9354
	MultiXactId nextMXact;203,9429
	MultiXactOffset nextOffset;206,9488
	bool		finishedStartup;209,9562
	MultiXactId oldestMultiXactId;216,9764
	Oid			oldestMultiXactDB;217,9796
	MultiXactOffset oldestOffset;224,10041
	bool		oldestOffsetKnown;225,10072
	MultiXactId multiVacLimit;228,10143
	MultiXactId multiWarnLimit;229,10171
	MultiXactId multiStopLimit;230,10200
	MultiXactId multiWrapLimit;231,10229
	MultiXactOffset offsetStopLimit;234,10311
	MultiXactId perBackendXactIds[perBackendXactIds281,13169
} MultiXactStateData;282,13224
#define MaxOldestSlot	288,13393
static MultiXactStateData *MultiXactState;MultiXactState291,13501
static MultiXactId *OldestMemberMXactId;OldestMemberMXactId292,13544
static MultiXactId *OldestVisibleMXactId;OldestVisibleMXactId293,13585
typedef struct mXactCacheEnt313,14457
	MultiXactId multi;315,14488
	int			nmembers;316,14508
	dlist_node	node;317,14525
	MultiXactMember members[members318,14543
} mXactCacheEnt;319,14592
#define MAX_CACHE_ENTRIES	321,14610
static dlist_head MXactCache 322,14640
static int	MXactCacheMembers 323,14702
static MemoryContext MXactContext 324,14736
#define debug_elog2(327,14802
#define debug_elog3(328,14837
#define debug_elog4(329,14876
#define debug_elog5(330,14919
#define debug_elog6(331,14966
#define debug_elog2(333,15023
#define debug_elog3(334,15048
#define debug_elog4(335,15075
#define debug_elog5(336,15104
#define debug_elog6(337,15135
MultiXactIdCreate(386,17202
MultiXactIdExpand(439,18902
MultiXactIdIsRunning(551,22301
MultiXactIdSetOldestMember(625,24390
MultiXactIdSetOldestVisible(682,26622
ReadNextMultiXactId(723,27667
MultiXactIdCreateFromMembers(748,28287
RecordNewMultiXact(843,31384
GetNewMultiXactId(937,34193
#define OFFSET_WARN_SEGMENTS	1090,40093
GetMultiXactIdMembers(1204,45404
mxactMemberComparator(1445,52854
mXactCacheGetBySet(1475,53745
mXactCacheGetById(1517,54918
mXactCachePut(1563,55951
mxstatus_to_string(1610,57266
mxid_to_string(1633,57751
AtEOXact_MultiXact(1664,58475
AtPrepare_MultiXact(1693,59286
PostPrepare_MultiXact(1707,59613
multixact_twophase_recover(1757,60996
multixact_twophase_postcommit(1778,61580
multixact_twophase_postabort(1793,61946
MultiXactShmemSize(1805,62334
#define SHARED_MULTIXACT_STATE_SIZE 1810,62438
MultiXactShmemInit(1822,62826
BootStrapMultiXact(1868,64289
ZeroMultiXactOffsetPage(1905,65363
ZeroMultiXactMemberPage(1921,65638
MaybeExtendOffsetSlru(1949,66671
StartupMultiXact(1982,67604
TrimMultiXact(2005,68151
ShutdownMultiXact(2107,71114
MultiXactGetCheckptMulti(2120,71448
CheckPointMultiXact(2142,72150
MultiXactSetNextMXact(2162,72732
SetMultiXactIdLimit(2196,74063
MultiXactAdvanceNextMXact(2349,80353
MultiXactAdvanceOldest(2374,81070
ExtendMultiXactOffset(2391,81648
ExtendMultiXactMember(2421,82402
GetOldestMultiXactId(2493,84567
SetOffsetVacuumLimit(2546,86027
MultiXactOffsetWouldWrap(2673,90383
find_multixact_start(2721,91968
ReadMultiXactCounts(2763,93224
MultiXactMemberFreezeThreshold(2819,95676
typedef struct mxtruncinfo2849,96657
	int			earliestExistingPage;2851,96686
} mxtruncinfo;2852,96715
SlruScanDirCbFindEarliest(2859,96844
PerformMembersTruncation(2882,97489
PerformOffsetsTruncation(2910,98284
TruncateMultiXact(2935,99229
MultiXactOffsetPagePrecedes(3106,105195
MultiXactMemberPagePrecedes(3124,105697
MultiXactIdPrecedes(3142,106147
MultiXactIdPrecedesOrEquals(3156,106448
MultiXactOffsetPrecedes(3168,106648
WriteMZeroPageXlogRec(3180,106916
WriteMTruncateXlogRec(3194,107230
multixact_redo(3219,107867
pg_get_multixact_members(3330,111206
		MultiXactMember *members;members3334,111270
		int			nmembers;3335,111298
		int			iter;3336,111316
	} mxact;3337,111330

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/rmgr.c,67
#define PG_RMGR(33,828
const RmgrData RmgrTable[RmgrTable36,958

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/twophase_rmgr.c,368
const TwoPhaseCallback twophase_recover_callbacks[twophase_recover_callbacks24,614
const TwoPhaseCallback twophase_postcommit_callbacks[twophase_postcommit_callbacks33,879
const TwoPhaseCallback twophase_postabort_callbacks[twophase_postabort_callbacks42,1148
const TwoPhaseCallback twophase_standby_recover_callbacks[twophase_standby_recover_callbacks51,1413

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/parallel.c,2451
#define PARALLEL_ERROR_QUEUE_SIZE	55,1673
#define PARALLEL_MAGIC	58,1761
#define PARALLEL_KEY_FIXED	65,1971
#define PARALLEL_KEY_ERROR_QUEUE	66,2034
#define PARALLEL_KEY_LIBRARY	67,2101
#define PARALLEL_KEY_GUC	68,2165
#define PARALLEL_KEY_COMBO_CID	69,2226
#define PARALLEL_KEY_TRANSACTION_SNAPSHOT	70,2292
#define PARALLEL_KEY_ACTIVE_SNAPSHOT	71,2366
#define PARALLEL_KEY_TRANSACTION_STATE	72,2436
#define PARALLEL_KEY_ENTRYPOINT	73,2508
#define PARALLEL_KEY_SESSION_DSM	74,2575
#define PARALLEL_KEY_PENDING_SYNCS	75,2642
#define PARALLEL_KEY_REINDEX_STATE	76,2711
#define PARALLEL_KEY_RELMAPPER_STATE	77,2780
#define PARALLEL_KEY_ENUMBLACKLIST	78,2850
typedef struct FixedParallelState81,2953
	Oid			database_id;84,3040
	Oid			authenticated_user_id;85,3060
	Oid			current_user_id;86,3090
	Oid			outer_user_id;87,3114
	Oid			temp_namespace_id;88,3136
	Oid			temp_toast_namespace_id;89,3162
	int			sec_context;90,3194
	bool		is_superuser;91,3214
	PGPROC	   *parallel_leader_pgproc;parallel_leader_pgproc92,3235
	pid_t		parallel_leader_pid;93,3271
	BackendId	parallel_leader_backend_id;94,3300
	TimestampTz xact_ts;95,3339
	TimestampTz stmt_ts;96,3361
	SerializableXactHandle serializable_xact_handle;97,3383
	slock_t		mutex;100,3474
	XLogRecPtr	last_xlog_end;103,3537
} FixedParallelState;104,3564
int			ParallelWorkerNumber 112,3884
volatile bool ParallelMessagePending 115,3986
bool		InitializingParallelWorker 118,4078
static FixedParallelState *MyFixedParallelState;MyFixedParallelState121,4164
static dlist_head pcxt_list 124,4254
static pid_t ParallelLeaderPid;127,4373
	const char *fn_name;fn_name135,4566
	parallel_worker_main_type fn_addr;136,4588
}			InternalParallelWorkers[InternalParallelWorkers137,4624
CreateParallelContext(164,5389
InitializeParallelDSM(202,6547
ReinitializeParallelDSM(463,16550
ReinitializeParallelWorkers(513,17905
LaunchParallelWorkers(527,18272
WaitForParallelWorkersToAttach(647,23022
WaitForParallelWorkersToFinish(750,25804
WaitForParallelWorkersToExit(864,29341
DestroyParallelContext(904,30582
ParallelContextActive(978,32321
HandleParallelMessageInterrupt(991,32646
HandleParallelMessages(1002,32849
HandleParallelMessage(1091,35340
AtEOSubXact_Parallel(1203,38354
AtEOXact_Parallel(1222,38752
ParallelWorkerMain(1239,39069
ParallelWorkerReportLastRecEnd(1493,47677
ParallelWorkerShutdown(1511,48211
LookupParallelWorkerFunction(1537,49345

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/xlog.c,13123
#define RECOVERY_COMMAND_FILE	85,2346
#define RECOVERY_COMMAND_DONE	86,2392
int			max_wal_size_mb 89,2470
int			min_wal_size_mb 90,2511
int			wal_keep_size_mb 91,2551
int			XLOGbuffers 92,2579
int			XLogArchiveTimeout 93,2603
int			XLogArchiveMode 94,2633
char	   *XLogArchiveCommand XLogArchiveCommand95,2675
bool		EnableHotStandby 96,2711
bool		fullPageWrites 97,2743
bool		wal_log_hints 98,2772
bool		wal_compression 99,2801
char	   *wal_consistency_checking_string wal_consistency_checking_string100,2832
bool	   *wal_consistency_checking wal_consistency_checking101,2881
bool		wal_init_zero 102,2923
bool		wal_recycle 103,2951
bool		log_checkpoints 104,2977
int			sync_method 105,3008
int			wal_level 106,3049
int			CommitDelay 107,3086
int			CommitSiblings 108,3147
int			wal_retrieve_retry_interval 109,3214
int			max_slot_wal_keep_size_mb 110,3256
bool		XLOG_DEBUG 113,3312
int			wal_segment_size 116,3346
#define NUM_XLOGINSERT_LOCKS 123,3597
int			CheckPointSegments;129,3725
static double CheckPointDistanceEstimate 132,3807
static double PrevCheckPointDistance 133,3853
const struct config_enum_entry sync_method_options[sync_method_options138,3918
const struct config_enum_entry archive_mode_options[archive_mode_options160,4489
const struct config_enum_entry recovery_target_action_options[recovery_target_action_options173,4877
CheckpointStatsData CheckpointStats;185,5331
TimeLineID	ThisTimeLineID 191,5490
bool		InRecovery 204,6071
HotStandbyState standbyState 207,6174
static XLogRecPtr LastRec;209,6224
static XLogRecPtr flushedUpto 212,6292
static TimeLineID receiveTLI 213,6327
static bool lastFullPageWrites;221,6647
static bool LocalRecoveryInProgress 228,6894
static bool LocalHotStandbyActive 234,7065
static bool LocalPromoteIsTriggered 240,7237
static int	LocalXLogInsertAllowed 252,7780
bool		ArchiveRecoveryRequested 265,8337
bool		InArchiveRecovery 266,8377
static bool standby_signal_file_found 268,8411
static bool recovery_signal_file_found 269,8458
static bool restoredFromArchive 272,8569
static char *replay_image_masked replay_image_masked275,8672
static char *primary_image_masked primary_image_masked276,8713
char	   *recoveryRestoreCommand recoveryRestoreCommand279,8825
char	   *recoveryEndCommand recoveryEndCommand280,8865
char	   *archiveCleanupCommand archiveCleanupCommand281,8901
RecoveryTargetType recoveryTarget 282,8940
bool		recoveryTargetInclusive 283,8999
int			recoveryTargetAction 284,9037
TransactionId recoveryTargetXid;285,9096
char	   *recovery_target_time_string;recovery_target_time_string286,9129
static TimestampTz recoveryTargetTime;287,9167
const char *recoveryTargetName;recoveryTargetName288,9206
XLogRecPtr	recoveryTargetLSN;289,9238
int			recovery_min_apply_delay 290,9268
bool		StandbyModeRequested 293,9372
char	   *PrimaryConnInfo PrimaryConnInfo294,9408
char	   *PrimarySlotName PrimarySlotName295,9441
char	   *PromoteTriggerFile PromoteTriggerFile296,9474
bool		wal_receiver_create_temp_slot 297,9510
bool		StandbyMode 300,9596
static bool fast_promote 303,9683
static TransactionId recoveryStopXid;309,9818
static TimestampTz recoveryStopTime;310,9856
static XLogRecPtr recoveryStopLSN;311,9893
static char recoveryStopName[recoveryStopName312,9928
static bool recoveryStopAfter;313,9971
RecoveryTargetTimeLineGoal recoveryTargetTimeLineGoal 341,11309
TimeLineID	recoveryTargetTLIRequested 342,11398
TimeLineID	recoveryTargetTLI 343,11441
static List *expectedTLEs;expectedTLEs344,11475
static TimeLineID curFileTLI;345,11502
XLogRecPtr	ProcLastRecPtr 362,12396
XLogRecPtr	XactLastRecEnd 363,12443
XLogRecPtr	XactLastCommitEnd 364,12490
static XLogRecPtr RedoRecPtr;376,13074
static bool doPageWrites;383,13304
static bool doRequestWalReceiverReply;386,13391
static XLogRecPtr RedoStartLSN 398,14015
typedef struct XLogwrtRqst441,15971
	XLogRecPtr	Write;443,16000
	XLogRecPtr	Flush;444,16054
} XLogwrtRqst;445,16104
typedef struct XLogwrtResult447,16120
	XLogRecPtr	Write;449,16151
	XLogRecPtr	Flush;450,16204
} XLogwrtResult;451,16253
	LWLock		lock;491,18423
	XLogRecPtr	insertingAt;492,18438
	XLogRecPtr	lastImportantAt;493,18463
} WALInsertLock;494,18492
typedef union WALInsertLockPadded503,18865
	WALInsertLock l;505,18901
	char		pad[pad506,18919
} WALInsertLockPadded;507,18951
typedef enum ExclusiveBackupState524,19689
	EXCLUSIVE_BACKUP_NONE 526,19725
	EXCLUSIVE_BACKUP_STARTING,527,19753
	EXCLUSIVE_BACKUP_IN_PROGRESS,528,19781
	EXCLUSIVE_BACKUP_STOPPING529,19812
} ExclusiveBackupState;530,19839
static SessionBackupState sessionBackupState 536,19987
typedef struct XLogCtlInsert541,20103
	slock_t		insertpos_lck;543,20134
	uint64		CurrBytePos;552,20562
	uint64		PrevBytePos;553,20584
	char		pad[pad562,20975
	XLogRecPtr	RedoRecPtr;575,21517
	bool		forcePageWrites;576,21582
	bool		fullPageWrites;577,21647
	ExclusiveBackupState exclusiveBackupState;587,22096
	int			nonExclusiveBackups;588,22140
	XLogRecPtr	lastBackupStart;589,22168
	WALInsertLockPadded *WALInsertLocks;WALInsertLocks594,22232
} XLogCtlInsert;595,22270
typedef struct XLogCtlData600,22334
	XLogCtlInsert Insert;602,22363
	XLogwrtRqst LogwrtRqst;605,22417
	XLogRecPtr	RedoRecPtr;606,22442
	FullTransactionId ckptFullXid;607,22509
	XLogRecPtr	asyncXactLSN;608,22580
	XLogRecPtr	replicationSlotMinLSN;609,22645
	XLogSegNo	lastRemovedSegNo;611,22717
	XLogRecPtr	unloggedLSN;614,22862
	slock_t		ulsn_lck;615,22887
	pg_time_t	lastSegSwitchTime;618,22984
	XLogRecPtr	lastSegSwitchLSN;619,23014
	XLogwrtResult LogwrtResult;625,23160
	XLogRecPtr	InitializedUpTo;637,23641
	char	   *pages;pages644,23851
	XLogRecPtr *xlblocks;xlblocks645,23909
	int			XLogCacheBlck;646,23968
	TimeLineID	ThisTimeLineID;654,24294
	TimeLineID	PrevTimeLineID;655,24322
	RecoveryState SharedRecoveryState;661,24467
	bool		SharedHotStandbyActive;667,24621
	bool		SharedPromoteIsTriggered;673,24772
	bool		WalWriterSleeping;680,24988
	Latch		recoveryWakeupLatch;687,25190
	XLogRecPtr	lastCheckPointRecPtr;697,25533
	XLogRecPtr	lastCheckPointEndPtr;698,25567
	CheckPoint	lastCheckPoint;699,25601
	XLogRecPtr	lastReplayedEndRecPtr;707,25913
	TimeLineID	lastReplayedTLI;708,25948
	XLogRecPtr	replayEndRecPtr;709,25977
	TimeLineID	replayEndTLI;710,26006
	TimestampTz recoveryLastXTime;712,26106
	TimestampTz currentChunkStartTime;718,26276
	bool		recoveryPause;720,26355
	XLogRecPtr	lastFpwDisableRecPtr;726,26525
	slock_t		info_lck;728,26560
} XLogCtlData;729,26622
static XLogCtlData *XLogCtl XLogCtl731,26638
static WALInsertLockPadded *WALInsertLocks WALInsertLocks734,26747
static ControlFileData *ControlFile ControlFile739,26862
#define INSERT_FREESPACE(745,27011
#define NextBufIdx(749,27170
#define XLogRecPtrToBufIdx(756,27398
#define UsableBytesInPage 762,27570
#define ConvertToXSegs(768,27728
static int	UsableBytesInSegment;771,27860
static XLogwrtResult LogwrtResult 777,27988
	XLOG_FROM_ANY 785,28156
	XLOG_FROM_ARCHIVE,786,28220
	XLOG_FROM_PG_WAL,787,28279
	XLOG_FROM_STREAM	788,28330
} XLogSource;789,28378
static const char *const xlogSourceNames[xlogSourceNames792,28458
static int	openLogFile 800,28833
static XLogSegNo openLogSegNo 801,28862
static int	readFile 814,29494
static XLogSegNo readSegNo 815,29520
static uint32 readOff 816,29552
static uint32 readLen 817,29579
static XLogSource readSource 818,29606
static XLogSource currentSource 830,30114
static bool lastSourceFailed 831,30163
static bool pendingWalRcvRestart 832,30201
typedef struct XLogPageReadPrivate834,30244
	int			emode;836,30281
	bool		fetching_ckpt;837,30295
	bool		randAccess;838,30360
} XLogPageReadPrivate;839,30379
static TimestampTz XLogReceiptTime 849,30840
static XLogSource XLogReceiptSource 850,30880
static XLogRecPtr ReadRecPtr;853,30975
static XLogRecPtr EndRecPtr;854,31037
static XLogRecPtr minRecoveryPoint;863,31458
static TimeLineID minRecoveryPointTLI;864,31494
static bool updateMinRecoveryPoint 865,31533
bool		reachedConsistency 872,31810
static bool InRedo 874,31845
static bool bgwriterLaunched 877,31923
static int	MyLockNo 880,32011
static bool holdingAllLocks 881,32036
static MemoryContext walDebugCxt 884,32091
XLogInsertRecord(1001,37775
ReserveXLogInsertLocation(1286,46357
ReserveXLogSwitch(1342,48433
checkXLogConsistency(1407,50460
CopyXLogRecordToWAL(1511,53240
WALInsertLockAcquire(1655,57802
WALInsertLockAcquireExclusive(1700,59258
WALInsertLockRelease(1729,60082
WALInsertLockUpdateInsertingAt(1755,60592
WaitXLogInsertionsToFinish(1788,61812
GetXLogBuffer(1887,65471
XLogBytePosToRecPtr(1998,69454
XLogBytePosToEndRecPtr(2038,70538
XLogRecPtrToBytePos(2081,71530
AdvanceXLInsertBuffer(2125,72625
CalculateCheckpointSegments(2294,77764
assign_max_wal_size(2323,78721
assign_checkpoint_completion_target(2330,78835
XLOGfileslop(2341,79149
XLogCheckpointNeeded(2391,80723
XLogWrite(2415,81456
XLogSetAsyncXactLSN(2685,89271
XLogSetReplicationSlotMinimumLSN(2726,90419
XLogGetReplicationSlotMinimumLSN(2739,90704
UpdateMinRecoveryPoint(2760,91224
XLogFlush(2847,94463
XLogBackgroundFlush(3036,101379
XLogNeedsFlush(3168,105108
XLogFileInit(3254,107899
XLogFileCopy(3441,113267
InstallXLogFileSegment(3587,117548
XLogFileOpen(3646,118852
XLogFileRead(3669,119405
XLogFileReadAnyTLI(3752,121511
XLogFileClose(3853,124558
PreallocXlogFiles(3895,125926
CheckXLogRemoved(3928,126983
XLogGetLastRemovedSegno(3959,127727
UpdateLastRemovedPtr(3976,128078
RemoveTempXlogFiles(3996,128566
RemoveOldXlogFiles(4026,129325
RemoveNonParentXlogFiles(4093,131660
RemoveXlogFile(4150,133403
ValidateXLOGDirectoryStructure(4253,136398
CleanupBackupHistory(4292,137432
ReadRecord(4329,138318
rescanLatestTimeLine(4482,142695
InitControlFile(4578,145287
WriteControlFile(4613,146704
ReadControlFile(4704,149517
UpdateControlFile(4904,158050
GetSystemIdentifier(4913,158201
GetMockAuthenticationNonce(4923,158363
DataChecksumsEnabled(4933,158532
GetFakeLSNForUnloggedRel(4949,159078
XLOGChooseNumBuffers(4973,159831
check_wal_buffers(4989,160104
LocalProcessControlFile(5033,161444
XLOGShmemSize(5044,161648
XLOGShmemInit(5085,162863
BootStrapXLOG(5196,166134
str_time(5362,171970
readRecoverySignalFile(5381,172377
validateRecoveryParameters(5463,174378
exitArchiveRecovery(5546,176988
getRecordTimestamp(5657,180089
recoveryStopsBefore(5692,181203
recoveryStopsAfter(5841,185089
recoveryPausesHere(6009,189883
RecoveryIsPaused(6040,190615
SetRecoveryPause(6052,190812
recoveryApplyDelay(6073,191561
SetLatestXTime(6165,193949
GetLatestXTime(6176,194180
SetCurrentChunkStartTime(6194,194540
GetCurrentChunkReplayStartTime(6206,194856
GetXLogReceiptTime(6222,195205
#define RecoveryRequiresIntParameter(6238,195590
CheckRequiredParameterValues(6258,196308
StartupXLOG(6305,198020
CheckRecoveryConsistency(7971,254791
RecoveryInProgress(8072,257781
GetRecoveryState(8125,259320
HotStandbyActive(8146,259904
HotStandbyActiveInReplay(8171,260581
XLogInsertAllowed(8185,260978
LocalSetXLogInsertAllowed(8216,261741
ReadCheckpointRecord(8232,262160
InitXLOGAccess(8338,264505
GetRedoRecPtr(8364,265243
GetFullPageWriteInfo(8393,266031
GetInsertRecPtr(8408,266530
GetFlushRecPtr(8424,266841
GetLastImportantRecPtr(8442,267288
GetLastSegSwitchData(8471,267954
ShutdownXLOG(8488,268343
LogCheckpointStart(8539,269735
LogCheckpointEnd(8557,270355
UpdateCheckPointDistanceEstimate(8642,273067
CreateCheckPoint(8704,276152
CreateEndOfRecoveryRecord(9126,290552
CheckPointGuts(9175,291748
RecoveryRestartPoint(9203,292704
CreateRestartPoint(9245,294068
GetWALAvailability(9510,303452
KeepLogSeg(9588,305947
XLogPutNextOid(9644,307164
RequestXLogSwitch(9681,308747
XLogRestorePoint(9699,309048
XLogReportParameters(9724,309664
UpdateFullPageWrites(9787,311879
checkTimeLineSwitch(9853,313642
xlog_redo(9899,315369
xlog_outrec(10239,327156
xlog_outdesc(10284,328389
get_sync_bit(10308,328974
assign_xlog_sync_method(10364,330719
issue_xlog_fsync(10406,331825
do_pg_start_backup(10499,335092
pg_start_backup_callback(10949,350650
pg_stop_backup_callback(10978,351355
get_backup_status(10996,351812
do_pg_stop_backup(11017,352445
do_pg_abort_backup(11430,366610
register_persistent_abort_backup_handler(11462,367441
GetXLogReplayRecPtr(11478,367759
GetXLogInsertRecPtr(11497,368100
GetXLogWriteRecPtr(11513,368422
GetOldestRestartPoint(11527,368763
read_backup_label(11552,369910
read_tablespace_map(11677,373911
rm_redo_error_callback(11751,375821
BackupInProgress(11774,376335
CancelBackup(11794,376876
XLogPageRead(11873,379630
WaitForWALToBecomeAvailable(12071,386227
StartupRequestWalReceiverRestart(12505,399036
emode_for_corrupt_record(12535,400241
PromoteIsTriggered(12556,400664
SetPromoteIsTriggered(12574,401145
CheckForStandbyTrigger(12588,401500
RemovePromoteSignalFiles(12648,402962
CheckPromoteSignal(12659,403188
WakeupRecovery(12675,403495
SetWalWriterSleeping(12684,403613
XLogRequestWalReceiverReply(12695,403842

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/commit_ts.c,1639
typedef struct CommitTimestampEntry57,2100
	TimestampTz time;59,2138
	RepOriginId nodeid;60,2157
} CommitTimestampEntry;61,2178
#define SizeOfCommitTimestampEntry 63,2203
#define COMMIT_TS_XACTS_PER_PAGE 66,2313
#define TransactionIdToCTsPage(69,2388
#define TransactionIdToCTsEntry(71,2478
static SlruCtlData CommitTsCtlData;77,2639
#define CommitTsCtl 79,2676
typedef struct CommitTimestampShared92,3172
	TransactionId xidLastCommit;94,3211
	CommitTimestampEntry dataLastCommit;95,3241
	bool		commitTsActive;96,3279
} CommitTimestampShared;97,3302
CommitTimestampShared *commitTsShared;commitTsShared99,3328
bool		track_commit_timestamp;103,3388
TransactionTreeSetCommitTsData(145,5410
SetXidCommitTsInPage(231,7936
TransactionIdSetCommitTs(257,8566
TransactionIdGetCommitTsData(282,9274
GetLatestCommitTsData(368,11658
error_commit_ts_disabled(389,12102
pg_xact_commit_timestamp(405,12590
pg_last_committed_xact(428,13020
pg_xact_commit_timestamp_origin(482,14247
CommitTsShmemBuffers(531,15334
CommitTsShmemSize(540,15457
CommitTsShmemInit(551,15672
BootStrapCommitTs(584,16512
ZeroCommitTsPage(603,17057
StartupCommitTs(620,17398
CompleteCommitTsInitialization(630,17567
CommitTsParameterChange(652,18175
ActivateCommitTs(693,19720
DeactivateCommitTs(767,22121
ShutdownCommitTs(805,23467
CheckPointCommitTs(821,23790
ExtendCommitTs(845,24460
TruncateCommitTs(883,25451
SetCommitTsLimit(909,26158
AdvanceOldestCommitTsXid(936,27045
CommitTsPagePrecedes(957,27835
WriteZeroPageXlogRec(975,28212
WriteTruncateXlogRec(986,28430
WriteSetTimestampXlogRec(1002,28766
commit_ts_redo(1024,29325

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/subtrans.c,562
#define SUBTRANS_XACTS_PER_PAGE 52,2029
#define TransactionIdToPage(54,2095
#define TransactionIdToEntry(55,2178
static SlruCtlData SubTransCtlData;61,2333
#define SubTransCtl 63,2370
SubTransSetParent(74,2585
SubTransGetParent(109,3510
SubTransGetTopmostTransaction(150,4779
SUBTRANSShmemSize(185,5710
SUBTRANSShmemInit(191,5797
BootStrapSUBTRANS(212,6569
ZeroSUBTRANSPage(237,7181
StartupSUBTRANS(250,7528
ShutdownSUBTRANS(285,8519
CheckPointSUBTRANS(302,8926
ExtendSUBTRANS(326,9663
TruncateSUBTRANS(356,10391
SubTransPagePrecedes(385,11490

/home/seinoyu/pgsql/master/postgresql/src/backend/access/transam/transam.c,583
static TransactionId cachedFetchXid 33,943
static XidStatus cachedFetchXidStatus;34,1003
static XLogRecPtr cachedCommitLSN;35,1042
TransactionLogFetch(52,1477
TransactionIdDidCommit(125,3526
TransactionIdDidAbort(181,5192
TransactionIdIsKnownCompleted(238,6806
TransactionIdCommitTree(260,7349
TransactionIdAsyncCommitTree(272,7665
TransactionIdAbortTree(290,8209
TransactionIdPrecedes(300,8457
TransactionIdPrecedesOrEquals(319,8888
TransactionIdFollows(334,9179
TransactionIdFollowsOrEquals(349,9468
TransactionIdLatest(365,9793
TransactionIdGetCommitLSN(402,11028

/home/seinoyu/pgsql/master/postgresql/src/backend/access/common/tupdesc.c,486
CreateTemplateTupleDesc(44,1142
CreateTupleDesc(89,2436
CreateTupleDescCopy(110,2857
CreateTupleDescCopyConstr(150,3780
TupleDescCopy(233,6196
TupleDescCopyEntry(271,7036
FreeTupleDesc(313,8288
IncrTupleDescRefCount(375,9630
DecrTupleDescRefCount(393,10171
equalTupleDescs(411,10702
hashTupleDesc(574,15419
TupleDescInitEntry(603,16375
TupleDescInitBuiltinEntry(676,18319
TupleDescInitEntryCollation(769,20589
BuildDescForRelation(792,21083
BuildDescFromLists(892,23485

/home/seinoyu/pgsql/master/postgresql/src/backend/access/common/printtup.c,844
	Oid			typoutput;54,1810
	Oid			typsend;55,1869
	bool		typisvarlena;56,1928
	int16		format;57,1994
	FmgrInfo	finfo;58,2046
} PrinttupAttrInfo;59,2107
	DestReceiver pub;63,2145
	Portal		portal;64,2205
	bool		sendDescrip;65,2262
	TupleDesc	attrinfo;66,2320
	int			nattrs;67,2380
	PrinttupAttrInfo *myinfo;myinfo68,2395
	StringInfoData buf;69,2456
	MemoryContext tmpcontext;70,2521
} DR_printtup;71,2591
printtup_create_DR(78,2717
SetRemoteDestReceiverParams(107,3401
printtup_startup(131,4039
SendRowDescriptionMessage(201,6401
SendRowDescriptionCols_3(224,6980
SendRowDescriptionCols_2(300,9032
printtup_prepare_info(327,9784
printtup(378,11045
printtup_20(463,13265
printtup_shutdown(541,15044
printtup_destroy(565,15492
printatt(575,15617
debugStartup(596,16190
debugtup(614,16575
printtup_internal_20(652,17473

/home/seinoyu/pgsql/master/postgresql/src/backend/access/common/heaptuple.c,807
#define ATT_IS_PACKABLE(68,3037
#define VARLENA_ATT_IS_PACKABLE(71,3177
getmissingattr(84,3516
heap_compute_data_size(119,4139
fill_val(175,5492
heap_fill_tuple(304,8459
heap_attisnull(359,9562
nocachegetattr(423,11397
heap_getsysattr(627,16407
heap_copytuple(680,17852
heap_copytuple_with_tuple(706,18623
expand_tuple(732,19402
minimal_expand_tuple(957,25401
heap_expand_tuple(969,25655
heap_copy_tuple_as_datum(984,25946
heap_form_tuple(1020,27064
heap_modify_tuple(1113,29551
heap_modify_tuple_by_cols(1181,31630
heap_deform_tuple(1249,33521
heap_freetuple(1338,35853
heap_form_minimal_tuple(1356,36312
heap_free_minimal_tuple(1427,37682
heap_copy_minimal_tuple(1439,37876
heap_tuple_from_minimal_tuple(1458,38356
minimal_tuple_from_heap_tuple(1480,39034
varsize_any(1498,39481

/home/seinoyu/pgsql/master/postgresql/src/backend/access/common/toast_internals.c,368
toast_compress_datum(47,1315
toast_save_datum(110,3363
		struct varlena hdr;124,3707
		char		data[data126,3787
		int32		align_it;128,3879
toast_delete_datum(369,11382
toastrel_valueid_exists(443,13477
toastid_valueid_exists(491,14512
toast_get_valid_index(512,14952
toast_open_indexes(546,15882
toast_close_indexes(605,17228
init_toast_snapshot(624,17783

/home/seinoyu/pgsql/master/postgresql/src/backend/access/common/relation.c,136
relation_open(48,1413
try_relation_open(89,2498
relation_openrv(138,3714
relation_openrv_extended(173,5051
relation_close(206,5937

/home/seinoyu/pgsql/master/postgresql/src/backend/access/common/tupconvert.c,164
convert_tuples_by_position(59,2130
convert_tuples_by_name(102,3505
execute_attr_map_tuple(139,4505
execute_attr_map_slot(177,5495
free_conversion_map(233,6713

/home/seinoyu/pgsql/master/postgresql/src/backend/access/common/attmap.c,180
make_attrmap(41,1181
free_attrmap(57,1459
build_attrmap_by_position(76,2062
build_attrmap_by_name(174,4666
build_attrmap_by_name_if_req(259,7249
check_attrmap_match(285,7858

/home/seinoyu/pgsql/master/postgresql/src/backend/access/common/scankey.c,93
ScanKeyEntryInitialize(32,907
ScanKeyInit(76,2345
ScanKeyEntryInitializeWithInfo(101,3054

/home/seinoyu/pgsql/master/postgresql/src/backend/access/common/reloptions.c,2029
static relopt_bool boolRelOpts[boolRelOpts96,3808
static relopt_int intRelOpts[intRelOpts175,5221
static relopt_real realRelOpts[realRelOpts390,10253
relopt_enum_elt_def gistBufferingOptValues[gistBufferingOptValues478,12268
relopt_enum_elt_def viewCheckOptValues[viewCheckOptValues487,12515
static relopt_enum enumRelOpts[enumRelOpts495,12732
static relopt_string stringRelOpts[stringRelOpts523,13316
static relopt_gen **relOpts relOpts529,13394
static bits32 last_assigned_kind 530,13430
static int	num_custom_options 532,13492
static relopt_gen **custom_options custom_options533,13527
static bool need_initialization 534,13570
#define GET_STRING_RELOPTION_LEN(545,13937
initialize_reloptions(556,14272
add_reloption_kind(659,16525
add_reloption(676,17011
init_local_reloptions(710,17752
register_reloptions_validator(723,18069
add_local_reloption(733,18317
allocate_reloption(751,18747
init_bool_reloption(808,19931
add_bool_reloption(825,20310
add_local_bool_reloption(841,20697
init_int_reloption(857,21113
add_int_reloption(877,21574
add_local_int_reloption(894,22013
init_real_reloption(910,22473
add_real_reloption(930,22943
add_local_real_reloption(948,23402
init_enum_reloption(965,23887
add_enum_reloption(994,24720
add_local_enum_reloption(1012,25195
init_string_reloption(1029,25706
add_string_reloption(1074,26954
add_local_string_reloption(1094,27514
transformRelOptions(1132,29072
untransformRelOptions(1308,33357
extractRelOptions(1357,34548
parseRelOptionsInternal(1405,35626
parseRelOptions(1478,37783
parseLocalRelOptions(1520,38648
parse_one_reloption(1548,39210
allocateReloptStruct(1681,43198
fillRelOptions(1721,44309
default_reloptions(1817,46712
build_reloptions(1887,50341
build_local_reloptions(1924,51346
partitioned_table_reloptions(1962,52230
view_reloptions(1977,52562
heap_reloptions(1996,53040
index_reloptions(2031,53871
attribute_reloptions(2046,54183
tablespace_reloptions(2063,54668
AlterTableGetRelOptionsLockLevel(2085,55485

/home/seinoyu/pgsql/master/postgresql/src/backend/access/common/indextuple.c,178
#define TOAST_INDEX_HACK29,807
index_form_tuple(47,1333
nocache_index_getattr(219,5879
index_deform_tuple(434,11207
CopyIndexTuple(510,13249
index_truncate_tuple(539,14239

/home/seinoyu/pgsql/master/postgresql/src/backend/access/common/printsimple.c,50
printsimple_startup(30,1014
printsimple(58,1678

/home/seinoyu/pgsql/master/postgresql/src/backend/access/common/detoast.c,279
detoast_external_attr(44,1442
detoast_attr(115,3150
detoast_attr_slice(203,5295
toast_fetch_datum(323,8239
toast_fetch_datum_slice(376,9664
toast_decompress_datum(446,11649
toast_decompress_datum_slice(474,12374
toast_raw_datum_size(502,13031
toast_datum_size(558,14414

/home/seinoyu/pgsql/master/postgresql/src/backend/access/common/bufmask.c,142
mask_page_lsn_and_checksum(31,932
mask_page_hint_bits(46,1270
mask_unused_space(71,1861
mask_lp_flags(95,2492
mask_page_content(119,2935

/home/seinoyu/pgsql/master/postgresql/src/backend/access/common/session.c,305
#define SESSION_MAGIC	30,1041
#define SESSION_DSA_SIZE	39,1417
#define SESSION_KEY_DSA	44,1526
#define SESSION_KEY_RECORD_TYPMOD_REGISTRY	45,1587
Session    *CurrentSession CurrentSession48,1701
InitializeSession(54,1811
GetSessionDsmHandle(70,2286
AttachSession(155,4903
DetachSession(201,6320

/home/seinoyu/pgsql/master/postgresql/src/backend/access/hash/hashsort.c,268
struct HSpool39,1223
	Tuplesortstate *sortstate;sortstate41,1239
	Relation	index;42,1300
	uint32		high_mask;49,1486
	uint32		low_mask;50,1506
	uint32		max_buckets;51,1525
_h_spoolinit(59,1611
_h_spooldestroy(98,2745
_h_spool(108,2889
_h_indexbuild(119,3160

/home/seinoyu/pgsql/master/postgresql/src/backend/access/hash/hashpage.c,560
_hash_getbuf(69,2402
_hash_getbuf_with_condlock_cleanup(95,2965
_hash_getinitbuf(134,4072
_hash_initbuf(156,4522
_hash_getnewbuf(197,5935
_hash_getbuf_with_strategy(238,7087
_hash_relbuf(265,7639
_hash_dropbuf(276,7835
_hash_dropscanbuf(288,8053
_hash_init(326,9361
_hash_init_metabuffer(497,14168
_hash_pageinit(595,17361
_hash_expandtable(613,17864
_hash_alloc_buckets(987,30518
_hash_splitbucket(1068,33355
_hash_finish_split(1351,41433
log_split_page(1470,44530
_hash_getcachedmetap(1497,45247
_hash_getbucketbuf_from_hashkey(1555,47202

/home/seinoyu/pgsql/master/postgresql/src/backend/access/hash/hashfunc.c,567
hashchar(47,1503
hashcharextended(53,1589
hashint2(59,1712
hashint2extended(65,1799
hashint4(71,1923
hashint4extended(77,2002
hashint8(83,2118
hashint8extended(103,2739
hashoid(116,3026
hashoidextended(122,3111
hashenum(128,3233
hashenumextended(134,3319
hashfloat4(140,3442
hashfloat4extended(166,4192
hashfloat8(181,4499
hashfloat8extended(197,4891
hashoidvector(210,5168
hashoidvectorextended(218,5341
hashname(228,5567
hashnameextended(236,5705
hashtext(245,5888
hashtextextended(301,7209
hashvarlena(361,8720
hashvarlenaextended(376,9004

/home/seinoyu/pgsql/master/postgresql/src/backend/access/hash/hashsearch.c,182
_hash_next(48,1547
_hash_readnext(133,3749
_hash_readprev(200,5655
_hash_first(292,8488
_hash_readpage(452,13934
_hash_load_qualified_items(608,18209
_hash_saveitem(714,20847

/home/seinoyu/pgsql/master/postgresql/src/backend/access/hash/hashvalidate.c,58
hashvalidate(44,1262
check_hash_func_signature(272,8586

/home/seinoyu/pgsql/master/postgresql/src/backend/access/hash/hashinsert.c,110
_hash_doinsert(36,975
_hash_pgaddtup(268,7934
_hash_pgaddmultitup(299,8802
_hash_vacuum_one_page(338,9821

/home/seinoyu/pgsql/master/postgresql/src/backend/access/hash/hash.c,429
	HSpool	   *spool;spool38,971
	double		indtuples;39,1025
	Relation	heapRel;40,1081
} HashBuildState;41,1132
hashhandler(56,1432
hashbuild(110,3145
hashbuildempty(196,6161
hashbuildCallback(205,6302
hashinsert(246,7401
hashgettuple(277,8108
hashgetbitmap(329,9458
hashbeginscan(361,10167
hashrescan(391,10772
hashendscan(425,11554
hashbulkdelete(456,12387
hashvacuumcleanup(642,17815
hashbucketcleanup(681,19387

/home/seinoyu/pgsql/master/postgresql/src/backend/access/hash/hash_xlog.c,494
hash_xlog_init_meta_page(30,724
hash_xlog_init_bitmap_page(66,1734
hash_xlog_insert(128,3547
hash_xlog_add_ovfl_page(176,4817
hash_xlog_split_allocate_page(315,8320
hash_xlog_split_page(433,11571
hash_xlog_split_complete(447,11855
hash_xlog_move_page_contents(506,13414
hash_xlog_squeeze_page(632,16855
hash_xlog_delete(846,22648
hash_xlog_split_cleanup(924,24772
hash_xlog_update_meta_page(949,25327
hash_xlog_vacuum_one_page(976,25985
hash_redo(1054,28155
hash_mask(1108,29435

/home/seinoyu/pgsql/master/postgresql/src/backend/access/hash/hashutil.c,550
#define CALC_NEW_BUCKET(25,665
_hash_checkqual(32,827
_hash_datum2hashkey(83,2023
_hash_datum2hashkey_type(103,2566
_hash_hashkey2bucket(126,3226
_hash_spareindex(143,3551
_hash_get_totalbuckets(175,4436
_hash_checkpage(211,5549
hashoptions(276,7449
_hash_get_indextuple_hashkey(292,7855
_hash_convert_tuple(319,8715
_hash_binsearch(351,9719
_hash_binsearch_last(389,10624
_hash_get_oldblock_from_newbucket(423,11357
_hash_get_newblock_from_oldbucket(462,12610
_hash_get_newbucket_from_oldbucket(495,13718
_hash_kill_items(537,15293

/home/seinoyu/pgsql/master/postgresql/src/backend/access/hash/hashovfl.c,210
bitno_to_blkno(34,836
_hash_ovflblkno_to_bitno(61,1492
_hash_addovflpage(111,3274
_hash_firstfreebit(447,12868
_hash_freeovflpage(489,14208
_hash_initbitmapbuffer(740,21711
_hash_squeezebucket(805,24187

/home/seinoyu/pgsql/master/postgresql/src/backend/access/brin/brin_pageops.c,379
#define BrinMaxItemSize 29,755
brin_doupdate(54,1731
brin_can_do_samepage_update(324,8956
brin_doinsert(343,9626
brin_page_init(476,13108
brin_metapage_init(487,13287
brin_start_evacuating_page(525,14440
brin_evacuate_page(560,15106
brin_page_cleanup(620,16713
brin_getinsertbuffer(686,19267
brin_initialize_empty_new_buffer(876,24846
br_page_get_freespace(908,25747

/home/seinoyu/pgsql/master/postgresql/src/backend/access/brin/brin_validate.c,22
brinvalidate(37,1099

/home/seinoyu/pgsql/master/postgresql/src/backend/access/brin/brin_minmax.c,303
typedef struct MinmaxOpaque25,618
	Oid			cached_subtype;27,648
	FmgrInfo	strategy_procinfos[strategy_procinfos28,671
} MinmaxOpaque;29,722
brin_minmax_opcinfo(36,871
brin_minmax_add_value(65,1795
brin_minmax_consistent(145,4108
brin_minmax_union(240,6781
minmax_get_strategy_procinfo(316,9120

/home/seinoyu/pgsql/master/postgresql/src/backend/access/brin/brin_revmap.c,631
#define HEAPBLK_TO_REVMAP_BLK(41,1387
#define HEAPBLK_TO_REVMAP_INDEX(43,1495
struct BrinRevmap47,1607
	Relation	rm_irel;49,1627
	BlockNumber rm_pagesPerRange;50,1646
	BlockNumber rm_lastRevmapPage;51,1677
	Buffer		rm_metaBuf;52,1740
	Buffer		rm_currBuf;53,1761
brinRevmapInitialize(71,2291
brinRevmapTerminate(103,3096
brinRevmapExtend(115,3343
brinLockRevmapPageForUpdate(137,4106
brinSetHeapBlockItemptr(158,4688
brinGetTupleForHeapBlock(197,6060
brinRevmapDesummarizeRange(321,9465
revmap_get_blkno(444,12945
revmap_get_buffer(465,13642
revmap_extend_and_get_blkno(502,14763
revmap_physical_extend(524,15350

/home/seinoyu/pgsql/master/postgresql/src/backend/access/brin/brin_tuple.c,299
brtuple_disk_tupdesc(50,1833
brin_form_tuple(88,2687
brin_form_placeholder_tuple(262,6870
brin_free_tuple(307,7789
brin_copy_tuple(320,8194
brin_tuples_equal(339,8515
brin_new_memtuple(356,8916
brin_memtuple_initialize(383,9681
brin_deform_tuple(421,10891
brin_deconstruct_tuple(504,13188

/home/seinoyu/pgsql/master/postgresql/src/backend/access/brin/brin_xlog.c,262
brin_xlog_createidx(24,493
brin_xlog_insert_update(46,1067
brin_xlog_insert(124,2974
brin_xlog_update(135,3180
brin_xlog_samepage_update(170,3946
brin_xlog_revmap_extend(208,4824
brin_xlog_desummarize_page(269,6438
brin_redo(309,7403
brin_mask(342,8111

/home/seinoyu/pgsql/master/postgresql/src/backend/access/brin/brin.c,1279
typedef struct BrinBuildState47,1192
	Relation	bs_irel;49,1224
	int			bs_numtuples;50,1243
	Buffer		bs_currentInsertBuf;51,1264
	BlockNumber bs_pagesPerRange;52,1294
	BlockNumber bs_currRangeStart;53,1325
	BrinRevmap *bs_rmAccess;bs_rmAccess54,1357
	BrinDesc   *bs_bdesc;bs_bdesc55,1383
	BrinMemTuple *bs_dtuple;bs_dtuple56,1406
} BrinBuildState;57,1432
typedef struct BrinOpaque62,1504
	BlockNumber bo_pagesPerRange;64,1532
	BrinRevmap *bo_rmAccess;bo_rmAccess65,1563
	BrinDesc   *bo_bdesc;bo_bdesc66,1589
} BrinOpaque;67,1612
#define BRIN_ALL_BLOCKRANGES	69,1627
brinhandler(87,2353
brininsert(150,4515
brinbeginscan(345,10237
bringetbitmap(374,11130
brinrescan(568,16497
brinendscan(588,17096
brinbuildCallback(605,17589
brinbuild(668,19309
brinbuildempty(752,21446
brinbulkdelete(782,22336
brinvacuumcleanup(797,22806
brinoptions(827,23566
brin_summarize_new_values(845,24092
brin_summarize_range(860,24506
brin_desummarize_range(937,26960
brin_build_desc(1018,29398
brin_free_desc(1073,30858
brinGetStats(1085,31115
initialize_brin_buildstate(1106,31687
terminate_brin_buildstate(1131,32312
summarize_range(1176,34103
brinsummarize(1303,38454
form_and_insert_tuple(1400,40991
union_tuples(1420,41496
brin_vacuum_scan(1462,42647

/home/seinoyu/pgsql/master/postgresql/src/backend/access/brin/brin_inclusion.c,792
#define		INCLUSION_MAX_PROCNUMS	46,1563
#define		PROCNUM_MERGE	47,1633
#define		PROCNUM_MERGEABLE	48,1676
#define		PROCNUM_CONTAINS	49,1722
#define		PROCNUM_EMPTY	50,1767
#define		PROCNUM_BASE	57,1942
#define INCLUSION_UNION	71,2342
#define INCLUSION_UNMERGEABLE	72,2371
#define INCLUSION_CONTAINS_EMPTY	73,2404
typedef struct InclusionOpaque76,2441
	FmgrInfo	extra_procinfos[extra_procinfos78,2474
	bool		extra_proc_missing[extra_proc_missing79,2525
	Oid			cached_subtype;80,2576
	FmgrInfo	strategy_procinfos[strategy_procinfos81,2599
} InclusionOpaque;82,2650
brin_inclusion_opcinfo(94,2945
brin_inclusion_add_value(137,4497
brin_inclusion_consistent(257,8039
brin_inclusion_union(507,16515
inclusion_get_procinfo(603,19643
inclusion_get_strategy_procinfo(661,21587

/home/seinoyu/pgsql/master/postgresql/src/backend/access/spgist/spgproc.c,118
#define point_point_distance(25,606
point_box_distance(31,837
spg_key_orderbys_distances(63,1535
box_copy(82,2036

/home/seinoyu/pgsql/master/postgresql/src/backend/access/spgist/spginsert.c,205
	SpGistState spgstate;35,876
	int64		indtuples;36,929
	MemoryContext tmpCtx;37,986
} SpGistBuildState;38,1044
spgistBuildCallback(43,1149
spgbuild(75,2053
spgbuildempty(156,4185
spginsert(207,5844

/home/seinoyu/pgsql/master/postgresql/src/backend/access/spgist/spgvalidate.c,21
spgvalidate(39,1135

/home/seinoyu/pgsql/master/postgresql/src/backend/access/spgist/spgkdtreeproc.c,253
spg_kd_config(28,690
getSide(41,1029
spg_kd_choose(54,1225
typedef struct SortedPoint78,1857
	Point	   *p;p80,1886
	int			i;81,1900
} SortedPoint;82,1910
x_cmp(85,1937
y_cmp(96,2145
spg_kd_picksplit(108,2349
spg_kd_inner_consistent(160,3911

/home/seinoyu/pgsql/master/postgresql/src/backend/access/spgist/spgxlog.c,404
static MemoryContext opCtx;27,679
fillFakeState(37,945
addOrReplaceTuple(52,1386
spgRedoAddLeaf(76,2086
spgRedoMoveLeafs(173,4746
spgRedoAddNode(286,7615
spgRedoSplitTuple(453,12114
spgRedoPickSplit(531,14351
spgRedoVacuumLeaf(753,20378
spgRedoVacuumRoot(836,22567
spgRedoVacuumRedirect(862,23159
spg_redo(939,25226
spg_xlog_startup(980,26104
spg_xlog_cleanup(988,26264
spg_mask(998,26414

/home/seinoyu/pgsql/master/postgresql/src/backend/access/spgist/spgvacuum.c,866
typedef struct spgVacPendingItem33,842
	ItemPointerData tid;35,877
	bool		done;36,934
	struct spgVacPendingItem *next;next37,980
} spgVacPendingItem;38,1029
typedef struct spgBulkDeleteState41,1091
	IndexVacuumInfo *info;info44,1172
	IndexBulkDeleteResult *stats;stats45,1196
	IndexBulkDeleteCallback callback;46,1227
	void	   *callback_state;callback_state47,1262
	SpGistState spgstate;50,1321
	spgVacPendingItem *pendingList;pendingList51,1387
	TransactionId myXmin;52,1452
	BlockNumber lastFilledBlock;53,1518
} spgBulkDeleteState;54,1579
spgAddPendingTID(64,1831
spgClearPendingList(90,2430
vacuumLeafPage(126,3797
vacuumLeafRoot(407,12263
vacuumRedirectAndPlaceholder(492,14302
spgvacuumpage(607,17194
spgprocesspending(678,18786
spgvacuumscan(790,21782
spgbulkdelete(901,25522
dummy_callback(921,26068
spgvacuumcleanup(932,26273

/home/seinoyu/pgsql/master/postgresql/src/backend/access/spgist/spgquadtreeproc.c,253
spg_quad_config(27,694
#define SPTEST(39,1023
getQuadrant(55,1395
getQuadrantArea(83,2128
spg_quad_choose(115,2745
x_cmp(146,3525
y_cmp(157,3718
spg_quad_picksplit(169,3913
spg_quad_inner_consistent(227,5421
spg_quad_leaf_consistent(405,10022

/home/seinoyu/pgsql/master/postgresql/src/backend/access/spgist/spgscan.c,823
typedef void (*storeRes_func)storeRes_func29,726
pairingheap_SpGistSearchItem_cmp(39,1078
spgFreeSearchItem(82,2097
spgAddSearchItemToQueue(100,2440
spgAllocSearchItem(106,2588
spgAddStartItem(122,3025
resetSpGistScanOpaque(145,3622
spgPrepareScanKeys(199,5085
spgbeginscan(295,7018
spgrescan(365,9156
spgendscan(411,10562
spgNewHeapItem(441,11171
spgLeafTest(468,11951
spgInitInnerConsistentIn(557,14208
spgMakeInnerItem(579,14955
spgInnerTest(614,15893
spgGetNextQueueItem(693,17894
enum SpGistSpecialOffsetNumbers702,18161
	SpGistBreakOffsetNumber 704,18195
	SpGistRedirectOffsetNumber 705,18243
	SpGistErrorOffsetNumber 706,18294
spgTestLeafTuple(710,18365
spgWalk(764,20030
storeBitmap(878,23201
spggetbitmap(888,23461
storeGettuple(905,23854
spggettuple(960,25167
spgcanreturn(1018,26504

/home/seinoyu/pgsql/master/postgresql/src/backend/access/spgist/spgdoinsert.c,580
typedef struct SPPageDesc34,1021
	BlockNumber blkno;36,1049
	Buffer		buffer;37,1113
	Page		page;38,1177
	OffsetNumber offnum;39,1230
	int			node;40,1299
} SPPageDesc;41,1358
spgUpdateNodeLink(50,1549
addNode(78,2234
cmpOffsetNumbers(110,2985
spgPageIndexMultiDelete(131,3800
saveNodeLink(186,5508
addLeafTuple(203,5944
checkSplitConditions(333,9896
moveLeafs(387,11307
setRedirectionTuple(567,16386
checkAllTheSame(598,17833
doPickSplit(675,20659
spgMatchNodeAction(1436,42963
spgAddNodeAction(1490,44297
spgSplitNodeAction(1692,50456
spgdoinsert(1891,56549

/home/seinoyu/pgsql/master/postgresql/src/backend/access/spgist/spgutils.c,617
spghandler(41,1043
fillTypeDesc(93,2805
spgGetCache(104,3042
initSpGistState(186,5305
SpGistNewBuffer(216,6179
SpGistUpdateMetaPage(281,7709
#define GET_LUP(321,8859
allocNewBuffer(344,10112
SpGistGetBuffer(400,11538
SpGistSetLastUsedPage(504,14471
SpGistInitPage(539,15269
SpGistInitBuffer(554,15624
SpGistInitMetapage(564,15785
spgoptions(591,16512
SpGistGetTypeSize(611,17128
memcpyDatum(629,17422
spgFormLeafTuple(648,17793
spgFormNodeTuple(685,18700
spgFormInnerTuple(727,19761
spgFormDeadTuple(810,22020
spgExtractNodeLabels(840,22678
SpGistPageAddNewItem(883,23930
spgproperty(978,26338

/home/seinoyu/pgsql/master/postgresql/src/backend/access/spgist/spgtextproc.c,484
#define SPGIST_MAX_PREFIX_LENGTH	68,3260
#define SPG_STRATEGY_ADDITION	80,3646
#define SPG_IS_COLLATION_AWARE_STRATEGY(81,3681
typedef struct spgNodePtr85,3846
	Datum		d;87,3874
	int			i;88,3885
	int16		c;89,3895
} spgNodePtr;90,3906
spg_text_config(94,3928
formTextDatum(111,4409
commonPrefix(136,4871
searchChar(156,5195
spg_text_choose(182,5628
cmpNodePtr(322,9770
spg_text_picksplit(331,9942
spg_text_inner_consistent(424,12515
spg_text_leaf_consistent(572,16855

/home/seinoyu/pgsql/master/postgresql/src/backend/access/table/toast_helper.c,205
toast_tuple_init(41,1298
toast_tuple_find_biggest_attribute(180,5059
toast_tuple_try_compression(226,6300
toast_tuple_externalize(253,7049
toast_tuple_cleanup(272,7674
toast_delete_external(315,8543

/home/seinoyu/pgsql/master/postgresql/src/backend/access/table/table.c,95
table_open(39,1071
table_openrv(68,1793
table_openrv_extended(98,2569
table_close(133,3493

/home/seinoyu/pgsql/master/postgresql/src/backend/access/table/tableam.c,998
#define PARALLEL_SEQSCAN_NCHUNKS	41,1332
#define PARALLEL_SEQSCAN_RAMPDOWN_CHUNKS	43,1451
#define PARALLEL_SEQSCAN_MAX_CHUNK_SIZE	45,1562
char	   *default_table_access_method default_table_access_method48,1629
bool		synchronize_seqscans 49,1697
table_slot_callbacks(58,1944
table_slot_create(91,2868
table_beginscan_catalog(112,3369
table_scan_update_snapshot(124,3773
table_parallelscan_estimate(140,4190
table_parallelscan_initialize(155,4482
table_beginscan_parallel(175,4947
table_index_fetch_tuple_check(219,6384
table_tuple_get_latest_tid(246,7083
simple_table_tuple_insert(279,8098
simple_table_tuple_delete(293,8531
simple_table_tuple_update(338,9600
table_block_parallelscan_estimate(386,10715
table_block_parallelscan_initialize(392,10821
table_block_parallelscan_reinitialize(410,11466
table_block_parallelscan_startblock_init(425,11914
table_block_parallelscan_nextpage(495,14507
table_block_relation_size(620,19609
table_block_relation_estimate_size(660,21024

/home/seinoyu/pgsql/master/postgresql/src/backend/access/table/tableamapi.c,70
GetTableAmRoutine(34,955
check_default_table_access_method(111,3568

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/be-secure.c,888
char	   *ssl_library;ssl_library40,984
char	   *ssl_cert_file;ssl_cert_file41,1006
char	   *ssl_key_file;ssl_key_file42,1030
char	   *ssl_ca_file;ssl_ca_file43,1053
char	   *ssl_crl_file;ssl_crl_file44,1075
char	   *ssl_dh_params_file;ssl_dh_params_file45,1098
char	   *ssl_passphrase_command;ssl_passphrase_command46,1127
bool		ssl_passphrase_command_supports_reload;47,1160
bool		ssl_loaded_verify_locations 50,1222
char	   *SSLCipherSuites SSLCipherSuites54,1320
char	   *SSLECDHCurve;SSLECDHCurve57,1397
bool		SSLPreferServerCiphers;60,1473
int			ssl_min_protocol_version;62,1504
int			ssl_max_protocol_version;63,1536
secure_initialize(77,2009
secure_destroy(90,2174
secure_loaded_verify_locations(101,2324
secure_open_server(114,2497
secure_close(133,2764
secure_read(145,2915
secure_raw_read(234,5356
secure_write(258,5772
secure_raw_write(330,7279

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/be-fsstubs.c,896
#define BUFSIZE	57,2163
static LargeObjectDesc **cookies cookies67,2528
static int	cookies_size 68,2569
static MemoryContext fscxt 70,2599
#define CreateFSContext(72,2635
be_lo_open(91,3175
be_lo_close(112,3504
lo_read(142,4201
lo_write(170,4958
be_lo_lseek(194,5527
be_lo_lseek64(219,6174
be_lo_creat(237,6591
be_lo_create(253,6879
be_lo_tell(269,7183
be_lo_tell64(292,7738
be_lo_unlink(308,8064
be_loread(352,9139
be_lowrite(370,9474
be_lo_import(391,10035
be_lo_import_with_oid(403,10277
lo_import_internal(412,10459
be_lo_export(473,11669
lo_truncate_internal(546,13308
be_lo_truncate(567,13833
be_lo_truncate64(577,13998
AtEOXact_LargeObject(591,14248
AtEOSubXact_LargeObject(632,15158
newLOfd(666,15913
deleteLOfd(709,16806
lo_get_fragment_internal(722,17148
be_lo_get(778,18643
be_lo_get_fragment(792,18845
be_lo_from_bytea(813,19312
be_lo_put(835,19786

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/crypt.c,137
get_role_password(37,1026
get_password_type(89,2233
encrypt_password(114,2991
md5_crypt_verify(166,4543
plain_crypt_verify(222,6095

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/auth.c,2506
#define IDENT_USERNAME_MAX 68,2104
#define IDENT_PORT 71,2204
#define PGSQL_PAM_SERVICE 95,2774
static struct pam_conv pam_passw_conv 101,3059
static const char *pam_passwd pam_passwd106,3135
static Port *pam_port_cludge;pam_port_cludge108,3230
static bool pam_no_password;110,3339
#define LDAP_DEPRECATED 132,3987
ULONG		(*__ldap_start_tls_sA)__ldap_start_tls_sA139,4110
#define LDAP_OPT_DIAGNOSTIC_MESSAGE 151,4469
char	   *pg_krb_server_keyfile;pg_krb_server_keyfile169,4953
bool		pg_krb_caseins_users;170,4985
			(WINAPI * QUERY_SECURITY_CONTEXT_TOKEN_FN)191,5550
#define PG_MAX_AUTH_TOKEN_LENGTH	221,6954
#define PG_MAX_SASL_MESSAGE_LENGTH	229,7152
ClientAuthentication_hook_type ClientAuthentication_hook 241,7604
auth_failed(257,8340
ClientAuthentication(345,11137
#define HOSTNAME_LOOKUP_DETAIL(474,15437
sendAuthRequest(636,19648
recv_password_packet(666,20327
CheckPasswordAuth(757,23028
CheckPWChallengeAuth(789,23640
CheckMD5Auth(845,25441
CheckSCRAMAuth(882,26330
pg_GSS_recvauth(1047,30896
pg_GSS_checkauth(1213,35276
pg_SSPI_error(1304,37543
pg_SSPI_recvauth(1322,38039
pg_SSPI_make_upn(1628,46286
interpret_ident_response(1732,48830
ident_inet(1815,51035
auth_peer(1993,56076
pam_passwd_conv_proc(2058,57449
CheckPAMAuth(2161,59802
CheckBSDAuth(2303,63431
InitializeLDAPConnection(2345,64407
#define LPH_USERNAME 2558,70000
#define LPH_USERNAME_LEN 2559,70033
#define LDAP_NO_ATTRS 2563,70156
#define LDAPS_PORT 2568,70259
FormatSearchFilter(2576,70452
CheckLDAPAuth(2599,70875
errdetail_for_ldap(2845,77292
CheckCertAuth(2869,77795
#define RADIUS_VECTOR_LENGTH 2915,79077
#define RADIUS_HEADER_LENGTH 2916,79109
#define RADIUS_MAX_PASSWORD_LENGTH 2917,79141
#define RADIUS_BUFFER_SIZE 2920,79244
	uint8		attribute;2924,79294
	uint8		length;2925,79313
	uint8		data[data2926,79329
} radius_attribute;2927,79366
	uint8		code;2931,79404
	uint8		id;2932,79418
	uint16		length;2933,79430
	uint8		vector[vector2934,79447
	char		pad[pad2936,79538
} radius_packet;2937,79593
#define RADIUS_ACCESS_REQUEST	2940,79637
#define RADIUS_ACCESS_ACCEPT	2941,79669
#define RADIUS_ACCESS_REJECT	2942,79700
#define RADIUS_USER_NAME	2945,79756
#define RADIUS_PASSWORD	2946,79784
#define RADIUS_SERVICE_TYPE	2947,79812
#define RADIUS_NAS_IDENTIFIER	2948,79843
#define RADIUS_AUTHENTICATE_ONLY	2951,79904
#define RADIUS_TIMEOUT 2954,80001
radius_add_attribute(2957,80039
CheckRADIUSAuth(2983,80844
PerformRadiusTransaction(3076,83369

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/pqmq.c,580
static shm_mq_handle *pq_mq_handle;pq_mq_handle24,622
static bool pq_mq_busy 25,658
static pid_t pq_mq_parallel_leader_pid 26,690
static pid_t pq_mq_parallel_leader_backend_id 27,734
static const PQcommMethods PqCommMqMethods 39,1233
pq_redirect_to_shm_mq(55,1535
pq_cleanup_redirect_to_shm_mq(69,1906
pq_set_parallel_leader(80,2143
mq_comm_reset(88,2342
mq_flush(94,2400
mq_flush_if_writable(101,2464
mq_is_send_pending(108,2541
mq_putmessage(120,2857
mq_putmessage_noblock(186,4525
mq_startcopyout(199,4954
mq_endcopyout(205,5015
pq_parse_errornotice(215,5194

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/auth-scram.c,1585
	SCRAM_AUTH_INIT,114,4912
	SCRAM_AUTH_SALT_SENT,115,4930
	SCRAM_AUTH_FINISHED116,4953
} scram_state_enum;117,4974
	scram_state_enum state;121,5012
	const char *username;username123,5038
	Port	   *port;port125,5098
	bool		channel_binding_in_use;126,5114
	int			iterations;128,5146
	char	   *salt;salt129,5165
	uint8		StoredKey[StoredKey130,5204
	uint8		ServerKey[ServerKey131,5238
	char		cbind_flag;134,5320
	char	   *client_first_message_bare;client_first_message_bare135,5339
	char	   *client_username;client_username136,5376
	char	   *client_nonce;client_nonce137,5403
	char	   *client_final_message_without_proof;client_final_message_without_proof140,5476
	char	   *client_final_nonce;client_final_nonce141,5522
	char		ClientProof[ClientProof142,5552
	char	   *server_first_message;server_first_message145,5626
	char	   *server_nonce;server_nonce146,5658
	bool		doomed;154,5931
	char	   *logdetail;logdetail155,5946
} scram_state;156,5967
pg_be_scram_get_mechanisms(181,6941
pg_be_scram_init(218,8284
pg_be_scram_exchange(328,11595
pg_be_scram_build_secret(451,15132
scram_verify_plain_password(488,16187
parse_scram_secret(556,18164
mock_scram_secret(647,20840
read_attr_value(685,21993
is_scram_printable(721,22674
sanitize_char(749,23313
sanitize_str(769,23780
read_any_attr(797,24220
read_client_first_message(855,25534
verify_final_nonce(1069,32413
verify_client_proof(1090,33055
build_server_first_message(1131,34303
read_client_final_message(1195,36042
build_server_final_message(1341,40726
scram_mock_salt(1394,42343

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/ifaddr.c,372
pg_range_sockaddr(53,1453
range_sockaddr_AF_INET(72,2068
range_sockaddr_AF_INET6(87,2368
pg_sockaddr_cidr_mask(115,3036
run_ifaddr_callback(192,4475
pg_foreach_ifaddr(243,5567
pg_foreach_ifaddr(308,6948
pg_foreach_ifaddr(355,8038
#define _SIZEOF_ADDR_IFREQ(464,10425
#define _SIZEOF_ADDR_IFREQ(471,10664
pg_foreach_ifaddr(483,10957
pg_foreach_ifaddr(559,12699

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/be-secure-gssapi.c,699
#define PQ_GSS_SEND_BUFFER_SIZE 50,1690
#define PQ_GSS_RECV_BUFFER_SIZE 51,1728
static char *PqGSSSendBuffer;PqGSSSendBuffer58,1978
static int	PqGSSSendLength;59,2048
static int	PqGSSSendNext;60,2123
static int	PqGSSSendConsumed;62,2214
static char *PqGSSRecvBuffer;PqGSSRecvBuffer65,2341
static int	PqGSSRecvLength;66,2402
static char *PqGSSResultBuffer;PqGSSResultBuffer68,2478
static int	PqGSSResultLength;69,2553
static int	PqGSSResultNext;70,2632
static uint32 PqGSSMaxPktSize;73,2727
be_gssapi_write(90,3416
be_gssapi_read(242,8229
read_or_wait(393,12878
secure_open_gssapi(465,14859
be_gssapi_get_auth(649,20057
be_gssapi_get_enc(661,20250
be_gssapi_get_princ(673,20447

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/be-gssapi-common.c,47
pg_GSS_error_int(24,672
pg_GSS_error(55,1405

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/hba.c,1935
#define MAX_TOKEN	56,1363
#define MAX_LINE	57,1385
typedef struct check_network_data60,1455
	IPCompareMethod method;62,1491
	SockAddr   *raddr;raddr63,1535
	bool		result;64,1587
} check_network_data;65,1631
#define token_is_keyword(68,1655
#define token_matches(69,1728
typedef struct HbaToken75,1896
	char	   *string;string77,1922
	bool		quoted;78,1940
} HbaToken;79,1955
typedef struct TokenizedLine89,2342
	List	   *fields;fields91,2373
	int			line_num;92,2426
	char	   *raw_line;raw_line93,2462
	char	   *err_msg;err_msg94,2503
} TokenizedLine;95,2550
static List *parsed_hba_lines parsed_hba_lines101,2702
static MemoryContext parsed_hba_context 102,2739
static List *parsed_ident_lines parsed_ident_lines112,3138
static MemoryContext parsed_ident_context 113,3177
static const char *const UserAuthName[UserAuthName121,3419
pg_isblank(160,4542
next_token(195,5931
make_hba_token(288,7923
copy_hba_token(307,8394
next_field_expand(330,9106
tokenize_inc_file(372,10444
tokenize_file(470,13060
is_member(562,15468
check_role(586,16085
check_db(610,16533
ipv4eq(649,17409
ipv6eq(657,17549
hostname_match(673,17828
check_hostname(693,18279
check_ip(786,20537
check_network_callback(800,20909
check_same_host_or_net(827,21579
#define INVALID_AUTH_OPTION(860,22645
#define REQUIRE_AUTH_OPTION(874,23204
#define MANDATORY_AUTH_ARG(880,23378
#define IDENT_FIELD_ABSENT(908,24300
#define IDENT_MULTI_VALUE(919,24555
parse_hba_line(945,25351
verify_option_list_length(1651,47301
parse_hba_auth_opt(1680,48221
check_hba(2073,59602
load_hba(2185,62248
#define MAX_HBA_OPTIONS 2285,64832
gethba_options(2292,65000
#define NUM_PG_HBA_FILE_RULES_ATTS	2401,68019
fill_hba_line(2416,68511
fill_hba_view(2596,72799
pg_hba_file_rules(2650,74292
parse_ident_line(2712,76237
check_ident_usermap(2789,78208
check_usermap(2924,81905
load_ident(2979,83127
hba_getauthmethod(3090,85943

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/pqsignal.c,117
sigset_t	UnBlockSig,22,521
			BlockSig,23,542
			StartupBlockSig;24,555
pqinitmask(41,1099
pqsignal_pm(118,3161

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/pqformat.c,866
pq_beginmessage(87,3744
pq_beginmessage_reuse(108,4322
pq_sendbytes(125,4794
pq_sendcountedtext(142,5473
pq_sendtext(174,6380
pq_sendstring(197,6928
pq_send_ascii_string(229,8042
pq_sendfloat4(254,8736
		float4		f;258,8788
		uint32		i;259,8801
pq_sendfloat8(278,9352
		float8		f;282,9404
		int64		i;283,9417
pq_endmessage(298,9760
pq_endmessage_reuse(316,10251
pq_begintypsend(328,10538
pq_endtypsend(348,11194
pq_puttextmessage(369,11730
pq_putemptymessage(390,12200
pq_getmsgbyte(401,12417
pq_getmsgint(417,12823
pq_getmsgint64(455,13691
pq_getmsgfloat4(471,13993
		float4		f;475,14037
		uint32		i;476,14050
pq_getmsgfloat8(490,14301
		float8		f;494,14345
		int64		i;495,14358
pq_getmsgbytes(510,14689
pq_copymsgbytes(530,15206
pq_getmsgtext(548,15791
pq_getmsgstring(581,16638
pq_getmsgrawstring(610,17352
pq_getmsgend(637,17949

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/be-secure-openssl.c,1282
openssl_tls_init_hook_typ openssl_tls_init_hook 50,1199
static SSL_CTX *SSL_context SSL_context69,2100
static bool SSL_initialized 70,2136
static bool dummy_ssl_passwd_cb_called 71,2173
static bool ssl_is_server_start;72,2221
be_tls_init(82,2538
be_tls_destroy(354,9799
be_tls_open_server(363,9935
be_tls_close(570,15990
be_tls_read(594,16293
be_tls_write(653,17504
#define BIO_get_data(735,19711
#define BIO_set_data(736,19748
static BIO_METHOD *my_bio_methods my_bio_methods739,19806
my_sock_read(742,19860
my_sock_write(764,20246
my_BIO_s_socket(783,20616
my_SSL_set_fd(824,21932
load_dh_file(860,22600
load_dh_buffer(924,24210
ssl_external_passwd_cb(946,24672
dummy_ssl_passwd_cb(966,25371
verify_cb(988,26009
info_cb(998,26170
initialize_dh(1051,27582
initialize_ecdh(1089,28514
SSLerrmessage(1131,29481
be_tls_get_cipher_bits(1146,29801
be_tls_get_compression(1160,29956
be_tls_get_version(1169,30106
be_tls_get_cipher(1178,30229
be_tls_get_peer_subject_name(1187,30342
be_tls_get_peer_issuer_name(1196,30534
be_tls_get_peer_serial(1205,30724
be_tls_get_certificate_hash(1227,31118
X509_NAME_to_cstring(1286,32648
ssl_protocol_version_to_openssl(1344,34235
ssl_protocol_version_to_string(1379,34750
default_openssl_tls_init(1400,35071

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/be-secure-common.c,77
run_ssl_passphrase_command(39,1086
check_ssl_key_file_permissions(132,2857

/home/seinoyu/pgsql/master/postgresql/src/backend/libpq/pqcomm.c,2206
#define PG_TCP_KEEPALIVE_IDLE 103,4162
#define PG_TCP_KEEPALIVE_IDLE_STR 104,4205
#define PG_TCP_KEEPALIVE_IDLE 107,4367
#define PG_TCP_KEEPALIVE_IDLE_STR 108,4421
#define PG_TCP_KEEPALIVE_IDLE 112,4661
#define PG_TCP_KEEPALIVE_IDLE_STR 113,4705
int			Unix_socket_permissions;119,4795
char	   *Unix_socket_group;Unix_socket_group120,4826
static List *sock_paths sock_paths123,4920
#define PQ_SEND_BUFFER_SIZE 132,5145
#define PQ_RECV_BUFFER_SIZE 133,5178
static char *PqSendBuffer;PqSendBuffer135,5212
static int	PqSendBufferSize;136,5239
static int	PqSendPointer;137,5291
static int	PqSendStart;138,5367
static char PqRecvBuffer[PqRecvBuffer140,5441
static int	PqRecvPointer;141,5488
static int	PqRecvLength;142,5565
static bool PqCommBusy;147,5661
static bool PqCommReadingMsg;148,5725
static bool DoingCopyOut;149,5796
static const PQcommMethods PqCommSocketMethods 171,6667
const PQcommMethods *PqCommMethods PqCommMethods182,6898
WaitEventSet *FeBeWaitSet;FeBeWaitSet184,6958
pq_init(192,7118
socket_comm_reset(237,8701
socket_close(254,9211
StreamServerPort(328,11452
Lock_AF_UNIX(612,18677
Setup_AF_UNIX(643,19520
StreamConnection(714,21163
StreamClose(843,25610
TouchSocketFiles(858,26080
RemoveSocketFiles(876,26409
socket_set_nonblocking(909,27194
pq_recvbuf(926,27597
pq_getbyte(987,29044
pq_peekbyte(1006,29499
pq_getbyte_if_available(1027,30039
pq_getbytes(1081,31196
pq_discardbytes(1115,31968
pq_getstring(1153,33006
pq_startmsgread(1197,34018
pq_endmsgread(1221,34662
pq_is_reading_msg(1237,35108
pq_getmessage(1259,35845
pq_putbytes(1340,37573
internal_putbytes(1356,37863
socket_flush(1387,38493
internal_flush(1409,38970
socket_flush_if_writable(1482,40824
socket_is_send_pending(1508,41349
socket_putmessage(1547,42799
socket_putmessage_noblock(1580,43484
socket_startcopyout(1607,44201
socket_endcopyout(1623,44772
pq_setkeepaliveswin32(1645,45345
pq_getkeepalivesidle(1683,46111
pq_setkeepalivesidle(1717,46974
pq_getkeepalivesinterval(1765,48062
pq_setkeepalivesinterval(1799,48917
pq_getkeepalivescount(1846,49956
pq_setkeepalivescount(1875,50588
pq_gettcpusertimeout(1918,51422
pq_settcpusertimeout(1947,52068

/home/seinoyu/pgsql/master/postgresql/src/backend/regex/regexec.c,2469
struct arcp39,1596
	struct sset *ss;ss41,1646
	color		co;42,1664
struct sset45,1680
	unsigned   *states;states47,1717
	unsigned	hash;48,1767
#define  HASH(49,1809
#define  HIT(50,1869
	int			flags;52,1997
#define  STARTER	53,2011
#define  POSTSTATE	54,2062
#define  LOCKED	55,2117
#define  NOPROGRESS 56,2162
	struct arcp ins;57,2218
	chr		   *lastseen;lastseen58,2274
	struct sset **outs;outs59,2330
	struct arcp *inchain;inchain60,2390
struct dfa63,2457
	int			nssets;65,2470
	int			nssused;66,2507
	int			nstates;67,2560
	int			ncolors;68,2600
	int			wordsper;69,2660
	struct sset *ssets;ssets70,2715
	unsigned   *statesarea;statesarea71,2760
	unsigned   *work;work72,2810
	struct sset **outsarea;outsarea73,2876
	struct arcp *incarea;incarea74,2930
	struct cnfa *cnfa;cnfa75,2976
	struct colormap *cm;cm76,2996
	chr		   *lastpost;lastpost77,3018
	chr		   *lastnopr;lastnopr78,3084
	struct sset *search;search79,3153
	int			cptsmalloced;80,3216
	char	   *mallocarea;mallocarea81,3281
#define WORK	84,3353
#define FEWSTATES	87,3465
#define FEWCOLORS	88,3518
struct smalldfa89,3539
	struct dfa	dfa;91,3557
	struct sset ssets[ssets92,3574
	unsigned	statesarea[statesarea93,3609
	struct sset *outsarea[outsarea94,3653
	struct arcp incarea[incarea95,3704
#define DOMALLOC	98,3757
struct vars103,3880
	regex_t    *re;re105,3894
	struct guts *g;g106,3911
	int			eflags;107,3928
	size_t		nmatch;108,3971
	regmatch_t *pmatch;pmatch109,3988
	rm_detail_t *details;details110,4009
	chr		   *start;start111,4032
	chr		   *search_start;search_start112,4073
	chr		   *stop;stop113,4126
	int			err;114,4174
	struct dfa **subdfas;subdfas115,4221
	struct dfa **ladfas;ladfas116,4271
	struct sset **lblastcss;lblastcss117,4321
	chr		  **lblastcp;lblastcp118,4393
	struct smalldfa dfa1;119,4460
	struct smalldfa dfa2;120,4483
#define VISERR(123,4510
#define ISERR(124,4579
#define VERR(125,4605
#define ERR(126,4668
#define NOERR(127,4717
#define OFF(128,4794
#define LOFF(129,4826
pg_regexec(172,6826
#define  LOCALMAT	188,7111
#define  LOCALDFAS	191,7161
getsubdfa(337,10484
getladfa(355,10826
find(375,11200
cfind(466,13516
cfindloop(506,14206
zapallsubs(619,17044
zaptreesubs(635,17267
subset(660,17663
cdissect(692,18745
ccondissect(763,20650
crevcondissect(841,22409
cbrdissect(919,24191
caltdissect(1000,25962
citerdissect(1037,26713
creviterdissect(1238,31966

/home/seinoyu/pgsql/master/postgresql/src/backend/regex/regexport.c,328
pg_reg_getnumstates(36,1183
pg_reg_getinitialstate(50,1420
pg_reg_getfinalstate(64,1654
traverse_lacons(93,2944
pg_reg_getnumoutarcs(134,3897
pg_reg_getoutarcs(155,4445
pg_reg_getnumcolors(174,4862
pg_reg_colorisbegin(191,5226
pg_reg_colorisend(208,5544
pg_reg_getnumcharacters(229,6094
pg_reg_getcharacters(265,7214

/home/seinoyu/pgsql/master/postgresql/src/backend/regex/regprefix.c,43
pg_regprefix(46,1448
findprefix(112,3096

/home/seinoyu/pgsql/master/postgresql/src/backend/regex/regc_color.c,553
#define CISERR(40,1721
#define CERR(41,1752
initcm(49,1840
freecm(103,3116
pg_reg_getcolor(120,3422
maxcolor(172,4432
newcolor(185,4676
freecolor(257,6035
pseudocolor(312,7071
subcolor(336,7536
subcolorhi(366,8299
newsub(389,8772
newhicolorrow(420,9480
newhicolorcols(469,10611
subcolorcvec(522,11996
subcoloronechr(624,14202
subcoloronerange(747,17520
subcoloronerow(885,21698
okcolors(916,22303
colorchain(975,23553
uncolorchain(991,23860
rainbow(1017,24373
colorcomplement(1040,24922
dumpcolors(1065,25464
dumpchr(1129,26906

/home/seinoyu/pgsql/master/postgresql/src/backend/regex/regc_pg_locale.c,1378
	PG_REGEX_LOCALE_C,67,3029
	PG_REGEX_LOCALE_WIDE,68,3089
	PG_REGEX_LOCALE_1BYTE,69,3144
	PG_REGEX_LOCALE_WIDE_L,70,3199
	PG_REGEX_LOCALE_1BYTE_L,71,3265
	PG_REGEX_LOCALE_ICU	72,3330
} PG_Locale_Strategy;73,3385
static PG_Locale_Strategy pg_regex_strategy;75,3408
static pg_locale_t pg_regex_locale;76,3453
static Oid	pg_regex_collation;77,3489
#define PG_ISDIGIT	82,3576
#define PG_ISALPHA	83,3600
#define PG_ISALNUM	84,3624
#define PG_ISUPPER	85,3669
#define PG_ISLOWER	86,3693
#define PG_ISGRAPH	87,3717
#define PG_ISPRINT	88,3741
#define PG_ISPUNCT	89,3765
#define PG_ISSPACE	90,3789
static const unsigned char pg_char_properties[pg_char_properties92,3814
pg_set_regex_collation(232,9969
pg_wc_isdigit(296,11694
pg_wc_isalpha(332,12625
pg_wc_isalnum(368,13556
pg_wc_isupper(404,14487
pg_wc_islower(440,15418
pg_wc_isgraph(476,16349
pg_wc_isprint(512,17280
pg_wc_ispunct(548,18211
pg_wc_isspace(584,19142
pg_wc_toupper(620,20078
pg_wc_tolower(664,21325
typedef int (*pg_wc_probefunc)pg_wc_probefunc721,23200
typedef struct pg_ctype_cache723,23246
	pg_wc_probefunc probefunc;725,23278
	Oid			collation;726,23339
	struct cvec cv;727,23392
	struct pg_ctype_cache *next;next728,23439
} pg_ctype_cache;729,23486
static pg_ctype_cache *pg_ctype_cache_list pg_ctype_cache_list731,23505
store_match(737,23644
pg_ctype_get_cache(781,24763

/home/seinoyu/pgsql/master/postgresql/src/backend/regex/regc_cvec.c,107
newcvec(45,1763
clearcvec(66,2323
addchr(79,2495
addrange(90,2705
getcvec(112,3485
freecvec(135,3992

/home/seinoyu/pgsql/master/postgresql/src/backend/regex/regerror.c,205
static const char unk[unk37,1596
static const struct rerr40,1726
	int			code;42,1753
	const char *name;name43,1766
	const char *explain;explain44,1785
}			rerrs[rerrs45,1807
pg_regerror(60,2122

/home/seinoyu/pgsql/master/postgresql/src/backend/regex/regc_nfa.c,1441
#define NISERR(39,1712
#define NERR(40,1744
newnfa(47,1860
freenfa(98,3005
newstate(124,3456
newfstate(188,4613
dropstate(202,4828
freestate(218,5098
destroystate(249,5653
newarc(276,6205
createarc(322,7203
allocarc(368,8153
freearc(421,9059
changearctarget(495,10801
hasnonemptyout(537,11599
findarc(554,11917
cparc(570,12193
sortins(582,12405
sortins_cmp(624,13338
sortouts(649,13908
sortouts_cmp(691,14854
#define BULK_ARC_OP_USE_SORT(720,15735
moveins(736,16411
copyins(828,18369
mergeins(910,20242
moveouts(1007,22137
copyouts(1096,24067
cloneouts(1175,25826
delsub(1196,26264
deltraverse(1219,26921
dupnfa(1270,28110
duptraverse(1294,28637
cleartraverse(1331,29366
single_color_transition(1368,30520
specialcolors(1398,31311
optimize(1437,32788
pullback(1477,33723
pull(1557,36134
pushfwd(1644,38198
push(1724,40606
combine(1815,42786
#define  CA(1818,42830
fixempties(1869,44102
emptyreachable(2096,51837
isconstraintarc(2124,52452
hasconstraintout(2142,52681
fixconstraintloops(2163,53192
findconstraintloop(2262,56333
breakconstraintloop(2351,60150
clonesuccessorstates(2497,64582
cleanup(2729,70937
markreachable(2764,71857
markcanreach(2790,72415
analyze(2816,73010
compact(2837,73413
carcsort(2925,75411
carc_cmp(2932,75528
freecnfa(2952,75878
dumpnfa(2965,76113
dumpstate(3002,76993
dumparcs(3028,77547
dumparc(3060,78034
dumpcnfa(3124,79362
dumpcstate(3153,80103

/home/seinoyu/pgsql/master/postgresql/src/backend/regex/regcomp.c,2733
#define INCOMPATIBLE	158,7948
#define SATISFIED	159,7991
#define COMPATIBLE	160,8040
struct vars224,10784
	regex_t    *re;re226,10798
	const chr  *now;now227,10815
	const chr  *stop;stop228,10866
	const chr  *savenow;savenow229,10907
	const chr  *savestop;savestop230,10977
	int			err;231,11000
	int			cflags;232,11043
	int			lasttype;233,11088
	int			nexttype;234,11135
	chr			nextvalue;235,11178
	int			lexcon;236,11232
	int			nsubexp;237,11288
	struct subre **subs;subs238,11331
	size_t		nsubs;239,11381
	struct subre *sub10[sub10240,11422
	struct nfa *nfa;nfa241,11486
	struct colormap *cm;cm242,11520
	color		nlcolor;243,11569
	struct state *wordchrs;wordchrs244,11610
	struct subre *tree;tree245,11681
	struct subre *treechain;treechain246,11729
	struct subre *treefree;treefree247,11786
	int			ntree;248,11838
	struct cvec *cv;cv249,11891
	struct cvec *cv2;cv2250,11932
	struct subre *lacons;lacons251,11972
	int			nlacons;252,12031
	size_t		spaceused;254,12137
#define NEXT(258,12271
#define SEE(259,12324
#define EAT(260,12386
#define VISERR(261,12455
#define ISERR(262,12524
#define VERR(263,12550
#define ERR(265,12643
#define NOERR(266,12692
#define NOERRN(267,12759
#define NOERRZ(268,12828
#define INSIST(269,12894
#define NOTE(270,12973
#define EMPTYARC(271,13042
#define EMPTY	274,13153
#define EOS 275,13197
#define PLAIN	276,13237
#define DIGIT	277,13283
#define BACKREF 278,13327
#define COLLEL	279,13371
#define ECLASS	280,13411
#define CCLASS	281,13451
#define END 282,13491
#define RANGE	283,13533
#define LACON	284,13600
#define AHEAD	285,13655
#define BEHIND	286,13702
#define WBDRY	287,13751
#define NWBDRY	288,13803
#define SBEGIN	289,13860
#define SEND	290,13926
#define COLORED(293,14038
static const struct fns functions 298,14155
pg_regcomp(313,14506
#define  CNOERR(331,14822
moresubs(493,18705
freev(530,19566
makesearch(559,20139
parse(648,22426
parsebranch(727,24505
parseqatom(776,25799
#define  ARCV(786,26146
nonword(1228,37005
word(1246,37449
scannum(1260,37756
repeat(1291,38581
#define  SOME	1297,38672
#define  INF	1298,38689
#define  PAIR(1299,38705
#define  REDUCE(1300,38740
bracket(1377,40514
cbracket(1396,41003
brackpart(1426,41675
scanplain(1539,43956
onechr(1564,44362
wordchrs(1591,45094
processlacon(1623,45744
subre(1689,47405
freesubre(1741,48281
freesrnode(1759,48572
optst(1783,48965
numst(1799,49377
markst(1833,50643
cleanst(1848,50866
nfatree(1867,51247
nfanode(1887,51679
newlacon(1926,52408
freelacons(1965,53097
rfree(1982,53390
rcancelrequested(2018,54271
rstacktoodeep(2034,54768
dump(2045,54903
dumpst(2108,56208
stdump(2123,56459
stid(2173,57719

/home/seinoyu/pgsql/master/postgresql/src/backend/regex/regfree.c,20
pg_regfree(49,2024

/home/seinoyu/pgsql/master/postgresql/src/backend/regex/rege_dfa.c,224
longest(42,1755
shortest(168,4631
matchuntil(303,7987
lastcold(417,10540
newdfa(437,10898
freedfa(517,12798
hash(541,13235
initialize(557,13452
miss(603,14838
lacon(743,18573
getvacant(800,20208
pickss(871,21961

/home/seinoyu/pgsql/master/postgresql/src/backend/regex/regc_lex.c,1098
#define ATEOS(36,1598
#define HAVE(37,1635
#define NEXT1(38,1678
#define NEXT2(39,1727
#define NEXT3(40,1802
#define SET(43,1920
#define SETV(44,1956
#define RET(45,2015
#define RETV(46,2050
#define FAILW(47,2092
#define LASTTYPE(48,2152
#define L_ERE	51,2217
#define L_BRE	52,2259
#define L_Q 53,2297
#define L_EBND	54,2331
#define L_BBND	55,2371
#define L_BRACK 56,2407
#define L_CEL	57,2443
#define L_ECL	58,2486
#define L_CCL	59,2529
#define INTOCON(60,2570
#define INCON(61,2607
#define ENDOF(64,2694
lexstart(70,2830
prefixes(99,3391
lexnest(203,6142
static const chr backd[backd217,6494
static const chr backD[backD222,6647
static const chr brbackd[brbackd227,6810
static const chr backs[backs232,6961
static const chr backS[backS237,7114
static const chr brbacks[brbacks242,7277
static const chr backw[backw247,7428
static const chr backW[backW252,7591
static const chr brbackw[brbackw257,7764
lexword(268,8083
next(277,8220
lexescape(737,17740
lexdigits(908,21316
brenext(989,22667
skip(1110,24645
newline(1138,25182
chrnamed(1150,25409

/home/seinoyu/pgsql/master/postgresql/src/backend/regex/regc_locale.c,988
static const struct cname55,2623
	const char *name;name57,2651
	const char	code;58,2670
}			cnames[cnames59,2688
static const char *const classNames[classNames355,5197
enum classes360,5384
	CC_ALNUM,362,5399
	CC_ALNUM, CC_ALPHA,362,5399
	CC_ALNUM, CC_ALPHA, CC_ASCII,362,5399
	CC_ALNUM, CC_ALPHA, CC_ASCII, CC_BLANK,362,5399
	CC_ALNUM, CC_ALPHA, CC_ASCII, CC_BLANK, CC_CNTRL,362,5399
	CC_ALNUM, CC_ALPHA, CC_ASCII, CC_BLANK, CC_CNTRL, CC_DIGIT,362,5399
	CC_ALNUM, CC_ALPHA, CC_ASCII, CC_BLANK, CC_CNTRL, CC_DIGIT, CC_GRAPH,362,5399
	CC_LOWER,363,5470
	CC_LOWER, CC_PRINT,363,5470
	CC_LOWER, CC_PRINT, CC_PUNCT,363,5470
	CC_LOWER, CC_PRINT, CC_PUNCT, CC_SPACE,363,5470
	CC_LOWER, CC_PRINT, CC_PUNCT, CC_SPACE, CC_UPPER,363,5470
	CC_LOWER, CC_PRINT, CC_PUNCT, CC_SPACE, CC_UPPER, CC_XDIGIT363,5470
element(380,6048
range(416,6787
before(496,8372
eclass(508,8556
cclass(548,9487
cclass_column_index(672,12388
allcases(716,13864
cmp(742,14455
casecmp(757,14968

/home/seinoyu/pgsql/master/postgresql/src/include/c.h,8752
#define C_H47,1678
#undef PG_INT64_TYPE52,1788
#undef inline92,2890
#define inline93,2904
#define pg_attribute_unused(108,3470
#define pg_attribute_unused(110,3530
#define PG_USED_FOR_ASSERTS_ONLY119,3793
#define PG_USED_FOR_ASSERTS_ONLY 121,3832
#define pg_attribute_format_arg(126,3982
#define pg_attribute_printf(127,4048
#define pg_attribute_format_arg(129,4138
#define pg_attribute_printf(130,4173
#define pg_attribute_aligned(135,4343
#define pg_attribute_noreturn(136,4403
#define pg_attribute_packed(137,4461
#define HAVE_PG_ATTRIBUTE_NORETURN 138,4515
#define pg_attribute_noreturn(145,4738
#define pg_attribute_always_inline 156,5205
#define pg_attribute_always_inline 159,5344
#define pg_attribute_always_inline 162,5454
#define pg_noinline 173,5967
#define pg_noinline 176,6061
#define pg_noinline178,6108
#define pg_unreachable(187,6434
#define pg_unreachable(189,6540
#define pg_unreachable(191,6583
#define likely(202,6908
#define unlikely(203,6956
#define likely(205,7012
#define unlikely(206,7041
#define CppAsString(221,7544
#define CppAsString2(222,7588
#define CppConcat(223,7629
#define VA_ARGS_NARGS(239,8300
#define VA_ARGS_NARGS_(248,8637
#define dummyret	263,9140
#define dummyret	265,9168
typedef void (*pg_funcptr_t)pg_funcptr_t273,9426
#define FLEXIBLE_ARRAY_MEMBER	283,9886
#define PG_FUNCNAME_MACRO	287,10004
#define PG_FUNCNAME_MACRO	290,10076
#define PG_FUNCNAME_MACRO	292,10121
typedef unsigned char bool;324,10964
#define true	328,11013
#define false	332,11059
typedef char *Pointer;Pointer351,11521
typedef signed char int8;360,11697
typedef signed short int16;361,11740
typedef signed int int32;362,11786
typedef unsigned char uint8;372,12020
typedef unsigned short uint16;373,12065
typedef unsigned int uint32;374,12113
typedef uint8 bits8;381,12266
typedef uint16 bits16;382,12305
typedef uint32 bits32;383,12347
typedef long int int64;392,12496
typedef unsigned long int uint64;395,12547
#define INT64CONST(397,12588
#define UINT64CONST(398,12618
typedef long long int int64;403,12766
typedef unsigned long long int uint64;406,12822
#define INT64CONST(408,12868
#define UINT64CONST(409,12899
#define INT64_FORMAT 416,13110
#define UINT64_FORMAT 417,13154
#define HAVE_INT128 429,13660
			pg_attribute_aligned(433,13747
			pg_attribute_aligned(439,13877
#define PG_INT8_MIN	450,14072
#define PG_INT8_MAX	451,14103
#define PG_UINT8_MAX	452,14131
#define PG_INT16_MIN	453,14159
#define PG_INT16_MAX	454,14192
#define PG_UINT16_MAX	455,14222
#define PG_INT32_MIN	456,14253
#define PG_INT32_MAX	457,14290
#define PG_UINT32_MAX	458,14324
#define PG_INT64_MIN	459,14360
#define PG_INT64_MAX	460,14419
#define PG_UINT64_MAX	461,14471
#define HAVE_INT64_TIMESTAMP467,14657
typedef size_t Size;473,14765
typedef unsigned int Index;482,14887
typedef signed int Offset;492,15096
typedef float float4;497,15191
typedef double float8;498,15213
#define FLOAT8PASSBYVAL 501,15261
#define FLOAT8PASSBYVAL 503,15296
typedef Oid regproc;517,15588
typedef regproc RegProcedure;518,15609
typedef uint32 TransactionId;520,15640
typedef uint32 LocalTransactionId;522,15671
typedef uint32 SubTransactionId;524,15707
#define InvalidSubTransactionId	526,15741
#define TopSubTransactionId	527,15797
typedef TransactionId MultiXactId;530,15923
typedef uint32 MultiXactOffset;532,15959
typedef uint32 CommandId;534,15992
#define FirstCommandId	536,16019
#define InvalidCommandId	537,16058
#define MAXDIM 542,16133
	int			indx[indx545,16167
}			IntArray;546,16188
struct varlena562,16971
	char		vl_len_[vl_len_564,16988
	char		vl_dat[vl_dat565,17048
#define VARHDRSZ	568,17117
typedef struct varlena bytea;575,17355
typedef struct varlena text;576,17385
typedef struct varlena BpChar;577,17414
typedef struct varlena VarChar;578,17485
	int32		vl_len_;592,18135
	int			ndim;593,18194
	int32		dataoffset;594,18239
	Oid			elemtype;595,18290
	int			dim1;596,18307
	int			lbound1;597,18320
	int16		values[values598,18336
} int2vector;599,18375
	int32		vl_len_;603,18407
	int			ndim;604,18466
	int32		dataoffset;605,18510
	Oid			elemtype;606,18560
	int			dim1;607,18577
	int			lbound1;608,18590
	Oid			values[values609,18606
} oidvector;610,18644
typedef struct nameData616,18808
	char		data[data618,18834
} NameData;619,18860
typedef NameData *Name;Name620,18872
#define NameStr(622,18897
#define BoolIsValid(633,19174
#define PointerIsValid(639,19302
#define PointerIsAligned(645,19464
#define OffsetToPointer(648,19557
#define OidIsValid(651,19635
#define RegProcedureIsValid(653,19702
#define offsetof(668,20137
#define lengthof(675,20280
#define TYPEALIGN(691,20970
#define SHORTALIGN(694,21082
#define INTALIGN(695,21140
#define LONGALIGN(696,21194
#define DOUBLEALIGN(697,21250
#define MAXALIGN(698,21309
#define BUFFERALIGN(700,21422
#define CACHELINEALIGN(701,21481
#define TYPEALIGN_DOWN(703,21548
#define SHORTALIGN_DOWN(706,21646
#define INTALIGN_DOWN(707,21712
#define LONGALIGN_DOWN(708,21775
#define DOUBLEALIGN_DOWN(709,21840
#define MAXALIGN_DOWN(710,21908
#define BUFFERALIGN_DOWN(711,21975
#define TYPEALIGN64(719,22335
#define MAXALIGN64(723,22514
#define Assert(745,23135
#define AssertMacro(746,23174
#define AssertArg(747,23218
#define AssertState(748,23260
#define AssertPointerAlignment(749,23304
#define Trap(750,23359
#define TrapMacro(751,23407
#define Assert(756,23500
#define AssertMacro(757,23528
#define AssertArg(758,23570
#define AssertState(759,23617
#define AssertPointerAlignment(760,23666
#define Trap(768,23848
#define TrapMacro(782,24159
#define Assert(787,24321
#define AssertMacro(794,24482
#define AssertArg(799,24639
#define AssertState(806,24799
#define AssertPointerAlignment(816,25004
extern void ExceptionalCondition(829,25467
#define StaticAssertStmt(852,26444
#define StaticAssertExpr(854,26550
#define StaticAssertDecl(856,26663
#define StaticAssertStmt(859,26791
#define StaticAssertExpr(861,26920
#define StaticAssertDecl(863,27011
#define StaticAssertStmt(868,27269
#define StaticAssertExpr(870,27357
#define StaticAssertDecl(872,27452
#define StaticAssertStmt(875,27579
#define StaticAssertExpr(877,27729
#define StaticAssertDecl(879,27836
#define AssertVariableIsOfType(897,28559
#define AssertVariableIsOfTypeMacro(900,28760
#define AssertVariableIsOfType(904,29021
#define AssertVariableIsOfTypeMacro(907,29198
#define Max(921,29668
#define Min(927,29765
#define Abs(933,29870
#define StrNCpy(951,30742
#define LONG_ALIGN_MASK 966,31005
#define MemSet(978,31547
#define MemSetAligned(1011,32560
#define MemSetTest(1040,33388
#define MemSetLoop(1046,33535
#define FLOAT4_FITS_IN_INT16(1067,34362
#define FLOAT4_FITS_IN_INT32(1069,34468
#define FLOAT4_FITS_IN_INT64(1071,34574
#define FLOAT8_FITS_IN_INT16(1073,34680
#define FLOAT8_FITS_IN_INT32(1075,34786
#define FLOAT8_FITS_IN_INT64(1077,34892
#define HAVE_UNIX_SOCKETS 1087,35202
#define INVERT_COMPARE_RESULT(1095,35458
typedef union PGAlignedBlock1109,36183
	char		data[data1111,36214
	double		force_align_d;1112,36235
	int64		force_align_i64;1113,36259
} PGAlignedBlock;1114,36284
typedef union PGAlignedXLogBlock1117,36351
	char		data[data1119,36386
	double		force_align_d;1120,36412
	int64		force_align_i64;1121,36436
} PGAlignedXLogBlock;1122,36461
#define HIGHBIT	1125,36503
#define IS_HIGHBIT_SET(1126,36530
#define SQL_STR_DOUBLE(1134,36868
#define ESCAPE_STRING_SYNTAX	1137,36972
#define STATUS_OK	1140,37007
#define STATUS_ERROR	1141,37032
#define STATUS_EOF	1142,37060
#define gettext(1150,37182
#define dgettext(1151,37205
#define ngettext(1152,37231
#define dngettext(1153,37278
#define _(1156,37336
#define gettext_noop(1166,37754
#define PG_TEXTDOMAIN(1182,38453
#define PG_TEXTDOMAIN(1184,38549
#define unconstify(1203,39446
#define unvolatize(1207,39632
#define unconstify(1212,39827
#define unvolatize(1214,39899
#define PG_BINARY	1235,40701
#define PG_BINARY_A 1236,40728
#define PG_BINARY_R 1237,40753
#define PG_BINARY_W 1238,40778
#define PG_BINARY	1240,40809
#define PG_BINARY_A 1241,40829
#define PG_BINARY_R 1242,40853
#define PG_BINARY_W 1243,40877
#define strtoll 1257,41238
#define HAVE_STRTOLL 1258,41264
#define strtoll 1262,41346
#define HAVE_STRTOLL 1263,41369
#define strtoull 1267,41456
#define HAVE_STRTOULL 1268,41484
#define strtoull 1272,41569
#define HAVE_STRTOULL 1273,41594
#define PGDLLIMPORT1286,41949
#define PGDLLEXPORT1289,41996
#define SIGNAL_ARGS 1302,42451
#define sigjmp_buf 1311,42718
#define sigsetjmp(1312,42745
#define siglongjmp 1313,42778
#define NON_EXEC_STATIC1318,42860
#define NON_EXEC_STATIC 1320,42890

/home/seinoyu/pgsql/master/postgresql/src/include/postgres_ext.h,908
#define POSTGRES_EXT_H24,914
typedef unsigned int Oid;31,1021
#define InvalidOid	34,1067
#define InvalidOid	36,1102
#define OID_MAX 39,1140
#define atooid(42,1234
typedef PG_INT64_TYPE pg_int64;47,1396
#define PG_DIAG_SEVERITY	55,1586
#define PG_DIAG_SEVERITY_NONLOCALIZED 56,1616
#define PG_DIAG_SQLSTATE	57,1658
#define PG_DIAG_MESSAGE_PRIMARY 58,1688
#define PG_DIAG_MESSAGE_DETAIL	59,1724
#define PG_DIAG_MESSAGE_HINT	60,1759
#define PG_DIAG_STATEMENT_POSITION 61,1792
#define PG_DIAG_INTERNAL_POSITION 62,1831
#define PG_DIAG_INTERNAL_QUERY	63,1869
#define PG_DIAG_CONTEXT	64,1904
#define PG_DIAG_SCHEMA_NAME	65,1934
#define PG_DIAG_TABLE_NAME	66,1967
#define PG_DIAG_COLUMN_NAME	67,1999
#define PG_DIAG_DATATYPE_NAME	68,2032
#define PG_DIAG_CONSTRAINT_NAME 69,2066
#define PG_DIAG_SOURCE_FILE	70,2102
#define PG_DIAG_SOURCE_LINE	71,2135
#define PG_DIAG_SOURCE_FUNCTION 72,2168

/home/seinoyu/pgsql/master/postgresql/src/include/statistics/statistics.h,1345
#define STATISTICS_H14,452
#define STATS_MAX_DIMENSIONS	19,533
#define STATS_NDISTINCT_MAGIC	22,637
#define STATS_NDISTINCT_TYPE_BASIC	23,703
typedef struct MVNDistinctItem26,827
	double		ndistinct;28,860
	Bitmapset  *attrs;attrs29,924
} MVNDistinctItem;30,974
typedef struct MVNDistinct33,1070
	uint32		magic;35,1099
	uint32		type;36,1145
	uint32		nitems;37,1194
	MVNDistinctItem items[items38,1252
} MVNDistinct;39,1299
#define STATS_DEPS_MAGIC	42,1358
#define STATS_DEPS_TYPE_BASIC	43,1424
typedef struct MVDependency49,1617
	double		degree;51,1647
	AttrNumber	nattributes;52,1697
	AttrNumber	attributes[attributes53,1749
} MVDependency;54,1820
typedef struct MVDependencies56,1837
	uint32		magic;58,1869
	uint32		type;59,1915
	uint32		ndeps;60,1970
	MVDependency *deps[deps61,2017
} MVDependencies;62,2080
#define STATS_MCV_MAGIC	65,2144
#define STATS_MCV_TYPE_BASIC	66,2210
#define STATS_MCVLIST_MAX_ITEMS 69,2347
typedef struct MCVItem77,2597
	double		frequency;79,2622
	double		base_frequency;80,2679
	bool	   *isnull;isnull81,2735
	Datum	   *values;values82,2772
} MCVItem;83,2811
typedef struct MCVList86,2887
	uint32		magic;88,2912
	uint32		type;89,2958
	uint32		nitems;90,3006
	AttrNumber	ndimensions;91,3064
	Oid			types[types92,3116
	MCVItem		items[items93,3177
} MCVList;94,3242

/home/seinoyu/pgsql/master/postgresql/src/include/statistics/extended_stats_internal.h,728
#define EXTENDED_STATS_INTERNAL_H15,504
	Oid			eqopr;22,623
	Oid			eqfunc;23,679
	Oid			ltopr;24,726
} StdAnalyzeData;25,782
	Datum		value;29,818
	int			tupno;30,854
} ScalarItem;31,914
typedef struct DimensionInfo34,958
	int			nvalues;36,989
	int			nbytes;37,1042
	int			nbytes_aligned;38,1094
	int			typlen;39,1164
	bool		typbyval;40,1202
} DimensionInfo;41,1243
typedef struct MultiSortSupportData44,1278
	int			ndims;46,1316
	SortSupportData ssup[ssup48,1404
} MultiSortSupportData;49,1450
typedef MultiSortSupportData *MultiSortSupport;MultiSortSupport51,1475
typedef struct SortItem53,1524
	Datum	   *values;values55,1550
	bool	   *isnull;isnull56,1569
	int			count;57,1587
} SortItem;58,1601

/home/seinoyu/pgsql/master/postgresql/src/include/executor/execPartition.h,1492
#define EXECPARTITION_H14,445
typedef struct PartitionDispatchData *PartitionDispatch;PartitionDispatch22,642
typedef struct PartitionTupleRouting PartitionTupleRouting;23,699
typedef struct PartitionRoutingInfo31,888
	TupleConversionMap *pi_RootToPartitionMap;pi_RootToPartitionMap37,1063
	TupleConversionMap *pi_PartitionToRootMap;pi_PartitionToRootMap43,1249
	TupleTableSlot *pi_PartitionTupleSlot;pi_PartitionTupleSlot49,1421
} PartitionRoutingInfo;50,1461
typedef struct PartitionedRelPruningData75,2662
	int			nparts;77,2705
	int		   *subplan_map;subplan_map78,2720
	int		   *subpart_map;subpart_map79,2743
	Bitmapset  *present_parts;present_parts80,2766
	List	   *initial_pruning_steps;initial_pruning_steps81,2794
	List	   *exec_pruning_steps;exec_pruning_steps82,2827
	PartitionPruneContext initial_context;83,2857
	PartitionPruneContext exec_context;84,2897
} PartitionedRelPruningData;85,2934
typedef struct PartitionPruningData94,3310
	int			num_partrelprunedata;96,3348
	PartitionedRelPruningData partrelprunedata[partrelprunedata97,3407
} PartitionPruningData;98,3475
typedef struct PartitionPruneState129,4940
	Bitmapset  *execparamids;execparamids131,4977
	Bitmapset  *other_subplans;other_subplans132,5004
	MemoryContext prune_context;133,5033
	bool		do_initial_prune;134,5063
	bool		do_exec_prune;135,5088
	int			num_partprunedata;136,5110
	PartitionPruningData *partprunedata[partprunedata137,5136
} PartitionPruneState;138,5197

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeTidscan.h,29
#define NODETIDSCAN_H15,396

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeSubplan.h,29
#define NODESUBPLAN_H15,396

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeHashjoin.h,30
#define NODEHASHJOIN_H15,431

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeAppend.h,28
#define NODEAPPEND_H15,393

/home/seinoyu/pgsql/master/postgresql/src/include/executor/spi_priv.h,984
#define SPI_PRIV_H14,437
#define _SPI_PLAN_MAGIC	20,521
	uint64		processed;25,597
	SPITupleTable *tuptable;tuptable26,636
	SubTransactionId execSubid;29,765
	slist_head	tuptables;32,838
	MemoryContext procCxt;33,900
	MemoryContext execCxt;34,949
	MemoryContext savedcxt;35,997
	SubTransactionId connectSubid;36,1061
	QueryEnvironment *queryEnv;queryEnv37,1131
	bool		atomic;40,1243
	bool		internal_xact;42,1331
	uint64		outer_processed;46,1489
	SPITupleTable *outer_tuptable;outer_tuptable47,1515
	int			outer_result;48,1547
} _SPI_connection;49,1568
typedef struct _SPI_plan90,3780
	int			magic;92,3807
	bool		saved;93,3858
	bool		oneshot;94,3903
	bool		no_snapshots;95,3941
	List	   *plancache_list;plancache_list96,4004
	MemoryContext plancxt;97,4071
	int			cursor_options;98,4140
	int			nargs;99,4202
	Oid		   *argtypes;argtypes100,4249
	ParserSetupHook parserSetup;101,4312
	void	   *parserSetupArg;parserSetupArg102,4382
} _SPI_plan;103,4408

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeWindowAgg.h,31
#define NODEWINDOWAGG_H15,435

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeGroup.h,27
#define NODEGROUP_H15,419

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeIndexonlyscan.h,35
#define NODEINDEXONLYSCAN_H15,414

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeNestloop.h,30
#define NODENESTLOOP_H15,399

/home/seinoyu/pgsql/master/postgresql/src/include/executor/executor.h,1319
#define EXECUTOR_H15,430
#define EXEC_FLAG_EXPLAIN_ONLY	56,2357
#define EXEC_FLAG_REWIND	57,2421
#define EXEC_FLAG_BACKWARD	58,2482
#define EXEC_FLAG_MARK	59,2542
#define EXEC_FLAG_SKIP_TRIGGERS 60,2598
#define EXEC_FLAG_WITH_NO_DATA	61,2667
typedef void (*ExecutorStart_hook_type)ExecutorStart_hook_type65,2802
typedef void (*ExecutorRun_hook_type)ExecutorRun_hook_type69,2997
typedef void (*ExecutorFinish_hook_type)ExecutorFinish_hook_type76,3271
typedef void (*ExecutorEnd_hook_type)ExecutorEnd_hook_type80,3457
typedef bool (*ExecutorCheckPerms_hook_type)ExecutorCheckPerms_hook_type84,3639
#define EvalPlanQualSetSlot(215,9213
ExecProcNode(240,10206
ExecEvalExpr(290,12198
ExecEvalExprSwitchContext(305,12491
ExecProject(333,13335
ExecQual(370,14494
ExecQualAndReset(397,15080
typedef TupleTableSlot *(*ExecScanAccessMtd)ExecScanAccessMtd430,16139
typedef bool (*ExecScanRecheckMtd)ExecScanRecheckMtd431,16203
typedef struct TupOutputState461,17619
	TupleTableSlot *slot;slot463,17651
	DestReceiver *dest;dest464,17674
} TupOutputState;465,17695
#define do_text_output_oneline(479,18195
#define ResetExprContext(501,18919
#define GetPerTupleExprContext(507,19149
#define GetPerTupleMemoryContext(512,19308
#define ResetPerTupleExprContext(516,19485
exec_rt_fetch(543,20622

/home/seinoyu/pgsql/master/postgresql/src/include/executor/tstoreReceiver.h,33
#define TSTORE_RECEIVER_H16,441

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeWorktablescan.h,35
#define NODEWORKTABLESCAN_H15,414

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeBitmapAnd.h,31
#define NODEBITMAPAND_H15,402

/home/seinoyu/pgsql/master/postgresql/src/include/executor/tqueue.h,81
#define TQUEUE_H15,443
typedef struct TupleQueueReader TupleQueueReader;21,562

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeBitmapIndexscan.h,37
#define NODEBITMAPINDEXSCAN_H15,420

/home/seinoyu/pgsql/master/postgresql/src/include/executor/functions.h,120
#define FUNCTIONS_H15,445
typedef struct SQLFunctionParseInfo *SQLFunctionParseInfoPtr;SQLFunctionParseInfoPtr21,579

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeRecursiveunion.h,36
#define NODERECURSIVEUNION_H15,417

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeIncrementalSort.h,37
#define NODEINCREMENTALSORT_H13,414

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeTableFuncscan.h,35
#define NODETABLEFUNCSCAN_H15,414

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeFunctionscan.h,34
#define NODEFUNCTIONSCAN_H15,411

/home/seinoyu/pgsql/master/postgresql/src/include/executor/tablefunc.h,435
#define _TABLEFUNC_H14,429
typedef struct TableFuncRoutine52,2113
	void		(*InitOpaque)InitOpaque54,2147
	void		(*SetDocument)SetDocument55,2215
	void		(*SetNamespace)SetNamespace56,2286
	void		(*SetRowFilter)SetRowFilter58,2389
	void		(*SetColumnFilter)SetColumnFilter59,2466
	bool		(*FetchRow)FetchRow61,2567
	Datum		(*GetValue)GetValue62,2622
	void		(*DestroyOpaque)DestroyOpaque64,2737
} TableFuncRoutine;65,2797

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeMergeAppend.h,33
#define NODEMERGEAPPEND_H15,408

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeHash.h,26
#define NODEHASH_H15,415

/home/seinoyu/pgsql/master/postgresql/src/include/executor/execExpr.h,9394
#define EXEC_EXPR_H15,448
#define EEO_FLAG_INTERPRETER_INITIALIZED	26,754
#define EEO_FLAG_DIRECT_THREADED	28,835
typedef void (*ExecEvalSubroutine)ExecEvalSubroutine31,937
typedef enum ExprEvalOp44,1332
	EEOP_DONE,47,1421
	EEOP_INNER_FETCHSOME,50,1493
	EEOP_OUTER_FETCHSOME,51,1516
	EEOP_SCAN_FETCHSOME,52,1539
	EEOP_INNER_VAR,55,1598
	EEOP_OUTER_VAR,56,1615
	EEOP_SCAN_VAR,57,1632
	EEOP_INNER_SYSVAR,60,1681
	EEOP_OUTER_SYSVAR,61,1701
	EEOP_SCAN_SYSVAR,62,1721
	EEOP_WHOLEROW,65,1769
	EEOP_ASSIGN_INNER_VAR,72,1951
	EEOP_ASSIGN_OUTER_VAR,73,1975
	EEOP_ASSIGN_SCAN_VAR,74,1999
	EEOP_ASSIGN_TMP,77,2096
	EEOP_ASSIGN_TMP_MAKE_RO,79,2166
	EEOP_CONST,82,2221
	EEOP_FUNCEXPR,89,2414
	EEOP_FUNCEXPR_STRICT,90,2430
	EEOP_FUNCEXPR_FUSAGE,91,2453
	EEOP_FUNCEXPR_STRICT_FUSAGE,92,2476
	EEOP_BOOL_AND_STEP_FIRST,100,2759
	EEOP_BOOL_AND_STEP,101,2786
	EEOP_BOOL_AND_STEP_LAST,102,2807
	EEOP_BOOL_OR_STEP_FIRST,105,2877
	EEOP_BOOL_OR_STEP,106,2903
	EEOP_BOOL_OR_STEP_LAST,107,2923
	EEOP_BOOL_NOT_STEP,110,2988
	EEOP_QUAL,113,3075
	EEOP_JUMP,116,3130
	EEOP_JUMP_IF_NULL,119,3198
	EEOP_JUMP_IF_NOT_NULL,120,3218
	EEOP_JUMP_IF_NOT_TRUE,121,3242
	EEOP_NULLTEST_ISNULL,124,3311
	EEOP_NULLTEST_ISNOTNULL,125,3334
	EEOP_NULLTEST_ROWISNULL,128,3402
	EEOP_NULLTEST_ROWISNOTNULL,129,3428
	EEOP_BOOLTEST_IS_TRUE,132,3499
	EEOP_BOOLTEST_IS_NOT_TRUE,133,3523
	EEOP_BOOLTEST_IS_FALSE,134,3551
	EEOP_BOOLTEST_IS_NOT_FALSE,135,3576
	EEOP_PARAM_EXEC,138,3651
	EEOP_PARAM_EXTERN,139,3669
	EEOP_PARAM_CALLBACK,140,3689
	EEOP_CASE_TESTVAL,143,3745
	EEOP_MAKE_READONLY,146,3824
	EEOP_IOCOERCE,149,3904
	EEOP_DISTINCT,150,3920
	EEOP_NOT_DISTINCT,151,3936
	EEOP_NULLIF,152,3956
	EEOP_SQLVALUEFUNCTION,153,3970
	EEOP_CURRENTOFEXPR,154,3994
	EEOP_NEXTVALUEEXPR,155,4015
	EEOP_ARRAYEXPR,156,4036
	EEOP_ARRAYCOERCE,157,4053
	EEOP_ROW,158,4072
	EEOP_ROWCOMPARE_STEP,164,4229
	EEOP_ROWCOMPARE_FINAL,167,4328
	EEOP_MINMAX,170,4391
	EEOP_FIELDSELECT,173,4445
	EEOP_FIELDSTORE_DEFORM,179,4574
	EEOP_FIELDSTORE_FORM,186,4778
	EEOP_SBSREF_SUBSCRIPT,189,4881
	EEOP_SBSREF_OLD,196,5108
	EEOP_SBSREF_ASSIGN,199,5194
	EEOP_SBSREF_FETCH,202,5282
	EEOP_DOMAIN_TESTVAL,205,5349
	EEOP_DOMAIN_NOTNULL,208,5419
	EEOP_DOMAIN_CHECK,211,5491
	EEOP_CONVERT_ROWTYPE,214,5570
	EEOP_SCALARARRAYOP,215,5593
	EEOP_XMLEXPR,216,5614
	EEOP_AGGREF,217,5629
	EEOP_GROUPING_FUNC,218,5643
	EEOP_WINDOW_FUNC,219,5664
	EEOP_SUBPLAN,220,5683
	EEOP_ALTERNATIVE_SUBPLAN,221,5698
	EEOP_AGG_STRICT_DESERIALIZE,224,5759
	EEOP_AGG_DESERIALIZE,225,5789
	EEOP_AGG_STRICT_INPUT_CHECK_ARGS,226,5812
	EEOP_AGG_STRICT_INPUT_CHECK_NULLS,227,5847
	EEOP_AGG_PLAIN_PERGROUP_NULLCHECK,228,5883
	EEOP_AGG_PLAIN_TRANS_INIT_STRICT_BYVAL,229,5919
	EEOP_AGG_PLAIN_TRANS_STRICT_BYVAL,230,5960
	EEOP_AGG_PLAIN_TRANS_BYVAL,231,5996
	EEOP_AGG_PLAIN_TRANS_INIT_STRICT_BYREF,232,6025
	EEOP_AGG_PLAIN_TRANS_STRICT_BYREF,233,6066
	EEOP_AGG_PLAIN_TRANS_BYREF,234,6102
	EEOP_AGG_ORDERED_TRANS_DATUM,235,6131
	EEOP_AGG_ORDERED_TRANS_TUPLE,236,6162
	EEOP_LAST239,6258
} ExprEvalOp;240,6269
typedef struct ExprEvalStep243,6285
	intptr_t	opcode;250,6536
	Datum	   *resvalue;resvalue253,6601
	bool	   *resnull;resnull254,6622
			int			last_var;268,7065
			bool		fixed;270,7148
			TupleDesc	known_desc;272,7200
			const TupleTableSlotOps *kind;kind274,7288
		}			fetch;275,7322
			int			attnum;282,7523
			Oid			vartype;283,7540
		}			var;284,7585
			Var		   *var;var289,7636
			bool		first;290,7690
			bool		slow;291,7752
			TupleDesc	tupdesc;292,7803
			JunkFilter *junkFilter;junkFilter293,7863
		}			wholerow;294,7930
			int			resultnum;300,8055
			int			attnum;302,8112
		}			assign_var;303,8129
			int			resultnum;309,8264
		}			assign_tmp;310,8284
			Datum		value;316,8365
			bool		isnull;317,8382
		}			constval;318,8399
			FmgrInfo   *finfo;finfo323,8477
			FunctionCallInfo fcinfo_data;324,8528
			PGFunction	fn_addr;326,8639
			int			nargs;327,8688
		}			func;328,8730
			bool	   *anynull;anynull333,8785
			int			jumpdone;334,8840
		}			boolexpr;335,8896
			int			jumpdone;340,8948
		}			qualexpr;341,9000
			int			jumpdone;346,9064
		}			jump;347,9116
			TupleDesc	argdesc;353,9235
		}			nulltest_row;354,9257
			int			paramid;359,9326
			Oid			paramtype;360,9375
		}			param;361,9429
			ExecEvalSubroutine paramfunc;366,9488
			void	   *paramarg;paramarg367,9556
			int			paramid;368,9606
			Oid			paramtype;369,9655
		}			cparam;370,9709
			Datum	   *value;value375,9782
			bool	   *isnull;isnull376,9824
		}			casetest;377,9844
			Datum	   *value;value382,9905
			bool	   *isnull;isnull383,9960
		}			make_readonly;384,9980
			FmgrInfo   *finfo_out;finfo_out390,10105
			FunctionCallInfo fcinfo_data_out;391,10131
			FmgrInfo   *finfo_in;finfo_in393,10231
			FunctionCallInfo fcinfo_data_in;394,10256
		}			iocoerce;395,10292
			SQLValueFunction *svf;svf400,10356
		}			sqlvaluefunction;401,10382
			Oid			seqid;406,10451
			Oid			seqtypid;407,10467
		}			nextvalueexpr;408,10486
			Datum	   *elemvalues;elemvalues413,10548
			bool	   *elemnulls;elemnulls414,10610
			int			nelems;415,10633
			Oid			elemtype;416,10683
			int16		elemlength;417,10727
			bool		elembyval;418,10788
			char		elemalign;419,10849
			bool		multidims;420,10904
		}			arrayexpr;421,10959
			ExprState  *elemexprstate;elemexprstate426,11019
			Oid			resultelemtype;427,11083
			struct ArrayMapState *amstate;amstate428,11143
		}			arraycoerce;429,11207
			TupleDesc	tupdesc;434,11261
			Datum	   *elemvalues;elemvalues436,11374
			bool	   *elemnulls;elemnulls437,11399
		}			row;438,11422
			FmgrInfo   *finfo;finfo444,11541
			FunctionCallInfo fcinfo_data;445,11563
			PGFunction	fn_addr;446,11596
			int			jumpnull;448,11668
			int			jumpdone;450,11738
		}			rowcompare_step;451,11757
			RowCompareType rctype;456,11828
		}			rowcompare_final;457,11854
			Datum	   *values;values463,11955
			bool	   *nulls;nulls464,11976
			int			nelems;465,11995
			MinMaxOp	op;467,12046
			FmgrInfo   *finfo;finfo469,12116
			FunctionCallInfo fcinfo_data;470,12138
		}			minmax;471,12171
			AttrNumber	fieldnum;476,12228
			Oid			resulttype;477,12282
			TupleDesc	argdesc;479,12374
		}			fieldselect;480,12396
			FieldStore *fstore;fstore486,12516
			TupleDesc  *argdesc;argdesc490,12657
			Datum	   *values;values493,12719
			bool	   *nulls;nulls494,12740
			int			ncolumns;495,12759
		}			fieldstore;496,12778
			struct SubscriptingRefState *state;state502,12876
			int			off;503,12915
			bool		isupper;504,12967
			int			jumpdone;505,13023
		}			sbsref_subscript;506,13066
			struct SubscriptingRefState *state;state512,13181
		}			sbsref;513,13220
			char	   *constraintname;constraintname519,13323
			Datum	   *checkvalue;checkvalue521,13414
			bool	   *checknull;checknull522,13439
			Oid			resulttype;524,13490
		}			domaincheck;525,13511
			ConvertRowtypeExpr *convert;convert530,13577
			TupleDesc	indesc;532,13686
			TupleDesc	outdesc;533,13736
			TupleConversionMap *map;map534,13788
			bool		initialized;535,13837
		}			convert_rowtype;536,13896
			Oid			element_type;542,14033
			bool		useOr;543,14091
			int16		typlen;544,14138
			bool		typbyval;545,14194
			char		typalign;546,14213
			FmgrInfo   *finfo;finfo547,14232
			FunctionCallInfo fcinfo_data;548,14283
			PGFunction	fn_addr;550,14394
		}			scalararrayop;551,14443
			XmlExpr    *xexpr;xexpr556,14503
			Datum	   *named_argvalue;named_argvalue558,14609
			bool	   *named_argnull;named_argnull559,14638
			Datum	   *argvalue;argvalue561,14720
			bool	   *argnull;argnull562,14743
		}			xmlexpr;563,14764
			AggrefExprState *astate;astate569,14867
		}			aggref;570,14895
			List	   *clauses;clauses575,14954
		}			grouping_func;576,15012
			WindowFuncExprState *wfstate;wfstate582,15132
		}			window_func;583,15165
			SubPlanState *sstate;sstate589,15276
		}			subplan;590,15301
			AlternativeSubPlanState *asstate;asstate596,15420
		}			alternative_subplan;597,15457
			FunctionCallInfo fcinfo_data;602,15532
			int			jumpnull;603,15565
		}			agg_deserialize;604,15584
			NullableDatum *args;args620,16157
			bool	   *nulls;nulls621,16181
			int			nargs;622,16200
			int			jumpnull;623,16216
		}			agg_strict_input_check;624,16235
			int			setoff;629,16325
			int			jumpnull;630,16342
		}			agg_plain_pergroup_nullcheck;631,16361
			AggStatePerTrans pertrans;637,16523
			ExprContext *aggcontext;aggcontext638,16553
			int			setno;639,16581
			int			transno;640,16597
			int			setoff;641,16615
		}			agg_trans;642,16632
	}			d;643,16649
} ExprEvalStep;644,16657
typedef struct SubscriptingRefState648,16722
	bool		isassignment;650,16760
	Oid			refelemtype;652,16821
	int16		refattrlength;653,16881
	int16		refelemlength;654,16935
	bool		refelembyval;655,17001
	char		refelemalign;656,17063
	int			numupper;660,17256
	bool		upperprovided[upperprovided661,17273
	int			upperindex[upperindex662,17303
	int			numlower;665,17374
	bool		lowerprovided[lowerprovided666,17391
	int			lowerindex[lowerindex667,17421
	Datum		subscriptvalue;670,17502
	bool		subscriptnull;671,17526
	Datum		replacevalue;674,17615
	bool		replacenull;675,17637
	Datum		prevvalue;678,17728
	bool		prevnull;679,17747
} SubscriptingRefState;680,17764

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeMaterial.h,30
#define NODEMATERIAL_H15,399

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeBitmapOr.h,30
#define NODEBITMAPOR_H15,399

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeNamedtuplestorescan.h,41
#define NODENAMEDTUPLESTORESCAN_H15,432

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeCtescan.h,29
#define NODECTESCAN_H15,396

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeResult.h,28
#define NODERESULT_H15,393

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeSamplescan.h,32
#define NODESAMPLESCAN_H15,405

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeIndexscan.h,31
#define NODEINDEXSCAN_H15,402

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeSetOp.h,27
#define NODESETOP_H15,390

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeValuesscan.h,32
#define NODEVALUESSCAN_H15,405

/home/seinoyu/pgsql/master/postgresql/src/include/executor/instrument.h,1576
#define INSTRUMENT_H14,361
typedef struct BufferUsage19,421
	long		shared_blks_hit;21,450
	long		shared_blks_read;22,504
	long		shared_blks_dirtied;23,564
	long		shared_blks_written;24,625
	long		local_blks_hit;25,691
	long		local_blks_read;26,743
	long		local_blks_dirtied;27,801
	long		local_blks_written;28,861
	long		temp_blks_read;29,925
	long		temp_blks_written;30,976
	instr_time	blk_read_time;31,1033
	instr_time	blk_write_time;32,1085
} BufferUsage;33,1138
typedef struct WalUsage35,1154
	long		wal_records;37,1180
	long		wal_fpi;38,1232
	uint64		wal_bytes;39,1290
} WalUsage;40,1346
typedef enum InstrumentOption43,1427
	INSTRUMENT_TIMER 45,1459
	INSTRUMENT_BUFFERS 46,1522
	INSTRUMENT_ROWS 47,1577
	INSTRUMENT_WAL 48,1626
	INSTRUMENT_ALL 49,1674
} InstrumentOption;50,1705
typedef struct Instrumentation52,1726
	bool		need_timer;55,1799
	bool		need_bufusage;56,1852
	bool		need_walusage;57,1914
	bool		running;59,2011
	instr_time	starttime;60,2070
	instr_time	counter;61,2140
	double		firsttuple;62,2202
	double		tuplecount;63,2265
	BufferUsage bufusage_start;64,2331
	WalUsage	walusage_start;65,2388
	double		startup;67,2498
	double		total;68,2555
	double		ntuples;69,2603
	double		ntuples2;70,2650
	double		nloops;71,2714
	double		nfiltered1;72,2769
	double		nfiltered2;73,2841
	BufferUsage bufusage;74,2906
	WalUsage	walusage;75,2955
} Instrumentation;76,2998
typedef struct WorkerInstrumentation78,3018
	int			num_workers;80,3057
	Instrumentation instrument[instrument81,3111
} WorkerInstrumentation;82,3163

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeSubqueryscan.h,34
#define NODESUBQUERYSCAN_H15,411

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeLimit.h,27
#define NODELIMIT_H15,390

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeProjectSet.h,32
#define NODEPROJECTSET_H15,405

/home/seinoyu/pgsql/master/postgresql/src/include/executor/tuptable.h,2968
#define TUPTABLE_H15,415
#define			TTS_FLAG_EMPTY	96,4503
#define TTS_EMPTY(97,4539
#define			TTS_FLAG_SHOULDFREE	100,4654
#define TTS_SHOULDFREE(101,4694
#define			TTS_FLAG_SLOW	104,4818
#define TTS_SLOW(105,4852
#define			TTS_FLAG_FIXED	108,4948
#define TTS_FIXED(109,4983
typedef struct TupleTableSlotOps TupleTableSlotOps;112,5078
typedef struct TupleTableSlot115,5164
	NodeTag		type;117,5196
#define FIELDNO_TUPLETABLESLOT_FLAGS 118,5212
	uint16		tts_flags;119,5251
#define FIELDNO_TUPLETABLESLOT_NVALID 120,5293
	AttrNumber	tts_nvalid;121,5333
	const TupleTableSlotOps *const tts_ops;122,5396
#define FIELDNO_TUPLETABLESLOT_TUPLEDESCRIPTOR 123,5466
	TupleDesc	tts_tupleDescriptor;124,5515
#define FIELDNO_TUPLETABLESLOT_VALUES 125,5577
	Datum	   *tts_values;tts_values126,5617
#define FIELDNO_TUPLETABLESLOT_ISNULL 127,5676
	bool	   *tts_isnull;tts_isnull128,5716
	MemoryContext tts_mcxt;129,5780
	ItemPointerData tts_tid;130,5843
	Oid			tts_tableOid;131,5894
} TupleTableSlot;132,5940
struct TupleTableSlotOps135,6010
	size_t		base_slot_size;138,6069
	void		(*init)init141,6118
	void		(*release)release144,6178
	void		(*clear)clear152,6468
	void		(*getsomeattrs)getsomeattrs161,6823
	Datum		(*getsysattr)getsysattr168,7071
	void		(*materialize)materialize174,7295
	void		(*copyslot)copyslot180,7485
	HeapTuple	(*get_heap_tuple)get_heap_tuple188,7803
	MinimalTuple (*get_minimal_tuple)get_minimal_tuple196,8112
	HeapTuple	(*copy_heap_tuple)copy_heap_tuple206,8572
	MinimalTuple (*copy_minimal_tuple)copy_minimal_tuple216,9030
#define TTS_IS_VIRTUAL(228,9480
#define TTS_IS_HEAPTUPLE(229,9545
#define TTS_IS_MINIMALTUPLE(230,9614
#define TTS_IS_BUFFERTUPLE(231,9689
typedef struct VirtualTupleTableSlot238,9813
	TupleTableSlot base;240,9852
	char	   *data;data242,9875
} VirtualTupleTableSlot;243,9927
typedef struct HeapTupleTableSlot245,9953
	TupleTableSlot base;247,9989
#define FIELDNO_HEAPTUPLETABLESLOT_TUPLE 249,10012
	HeapTuple	tuple;250,10055
#define FIELDNO_HEAPTUPLETABLESLOT_OFF 251,10096
	uint32		off;252,10137
	HeapTupleData tupdata;253,10198
} HeapTupleTableSlot;254,10266
typedef struct BufferHeapTupleTableSlot257,10327
	HeapTupleTableSlot base;259,10369
	Buffer		buffer;267,10693
} BufferHeapTupleTableSlot;268,10751
typedef struct MinimalTupleTableSlot270,10780
	TupleTableSlot base;272,10819
#define FIELDNO_MINIMALTUPLETABLESLOT_TUPLE 281,11162
	HeapTuple	tuple;282,11208
	MinimalTuple mintuple;283,11248
	HeapTupleData minhdr;284,11310
#define FIELDNO_MINIMALTUPLETABLESLOT_OFF 285,11378
	uint32		off;286,11422
} MinimalTupleTableSlot;287,11483
#define TupIsNull(292,11559
slot_getsomeattrs(341,13757
slot_getallattrs(354,14119
slot_attisnull(367,14356
slot_getattr(381,14630
slot_getsysattr(402,15194
ExecClearTuple(425,15742
ExecMaterializeSlot(443,16317
ExecCopySlotHeapTuple(452,16504
ExecCopySlotMinimalTuple(463,16741
ExecCopySlot(475,17079

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeForeignscan.h,33
#define NODEFOREIGNSCAN_H15,408

/home/seinoyu/pgsql/master/postgresql/src/include/executor/hashjoin.h,5396
#define HASHJOIN_H15,424
typedef struct HashJoinTupleData67,3088
		struct HashJoinTupleData *unshared;unshared72,3174
		dsa_pointer shared;73,3212
	}			next;74,3234
	uint32		hashvalue;75,3245
}			HashJoinTupleData;77,3364
#define HJTUPLE_OVERHEAD 79,3388
#define HJTUPLE_MINTUPLE(80,3450
typedef struct HashSkewBucket102,4741
	uint32		hashvalue;104,4773
	HashJoinTuple tuples;105,4818
} HashSkewBucket;106,4885
#define SKEW_BUCKET_OVERHEAD 108,4904
#define INVALID_SKEW_BUCKET_NO	109,4967
#define SKEW_WORK_MEM_PERCENT 110,5003
#define SKEW_MIN_OUTER_FRACTION 111,5036
typedef struct HashMemoryChunkData117,5229
	int			ntuples;119,5266
	size_t		maxlen;120,5327
	size_t		used;121,5385
		struct HashMemoryChunkData *unshared;unshared126,5502
		dsa_pointer shared;127,5542
	}			next;128,5564
}			HashMemoryChunkData;135,5790
typedef struct HashMemoryChunkData *HashMemoryChunk;HashMemoryChunk137,5816
#define HASH_CHUNK_SIZE	139,5870
#define HASH_CHUNK_HEADER_SIZE	140,5909
#define HASH_CHUNK_DATA(141,5978
#define HASH_CHUNK_THRESHOLD	143,6127
typedef struct ParallelHashJoinBatch151,6452
	dsa_pointer buckets;153,6491
	Barrier		batch_barrier;154,6548
	dsa_pointer chunks;156,6619
	size_t		size;157,6672
	size_t		estimated_size;158,6730
	size_t		ntuples;159,6800
	size_t		old_ntuples;160,6849
	bool		space_exhausted;161,6916
} ParallelHashJoinBatch;167,7059
#define ParallelHashJoinBatchInner(170,7162
#define ParallelHashJoinBatchOuter(175,7389
#define EstimateParallelHashJoinBatch(181,7644
#define NthParallelHashJoinBatch(186,7892
typedef struct ParallelHashJoinBatchAccessor195,8186
	ParallelHashJoinBatch *shared;shared197,8233
	size_t		preallocated;200,8354
	size_t		ntuples;201,8420
	size_t		size;202,8462
	size_t		estimated_size;203,8513
	size_t		old_ntuples;204,8570
	bool		at_least_one_chunk;205,8637
	bool		done;207,8707
	SharedTuplestoreAccessor *inner_tuples;inner_tuples208,8766
	SharedTuplestoreAccessor *outer_tuples;outer_tuples209,8807
} ParallelHashJoinBatchAccessor;210,8848
typedef enum ParallelHashGrowth218,9143
	PHJ_GROWTH_OK,221,9223
	PHJ_GROWTH_NEED_MORE_BUCKETS,223,9302
	PHJ_GROWTH_NEED_MORE_BATCHES,225,9405
	PHJ_GROWTH_DISABLED227,9512
} ParallelHashGrowth;228,9533
typedef struct ParallelHashJoinState234,9663
	dsa_pointer batches;236,9702
	dsa_pointer old_batches;237,9762
	int			nbatch;238,9833
	int			old_nbatch;239,9878
	int			nbuckets;240,9931
	ParallelHashGrowth growth;241,9973
	dsa_pointer chunk_work_queue;242,10035
	int			nparticipants;243,10089
	size_t		space_allowed;244,10111
	size_t		total_tuples;245,10135
	LWLock		lock;246,10193
	Barrier		build_barrier;248,10243
	Barrier		grow_batches_barrier;249,10311
	Barrier		grow_buckets_barrier;250,10343
	pg_atomic_uint32 distributor;251,10375
	SharedFileSet fileset;253,10440
} ParallelHashJoinState;254,10504
#define PHJ_BUILD_ELECTING	257,10592
#define PHJ_BUILD_ALLOCATING	258,10624
#define PHJ_BUILD_HASHING_INNER	259,10657
#define PHJ_BUILD_HASHING_OUTER	260,10693
#define PHJ_BUILD_DONE	261,10729
#define PHJ_BATCH_ELECTING	264,10827
#define PHJ_BATCH_ALLOCATING	265,10859
#define PHJ_BATCH_LOADING	266,10892
#define PHJ_BATCH_PROBING	267,10923
#define PHJ_BATCH_DONE	268,10954
#define PHJ_GROW_BATCHES_ELECTING	271,11058
#define PHJ_GROW_BATCHES_ALLOCATING	272,11095
#define PHJ_GROW_BATCHES_REPARTITIONING 273,11134
#define PHJ_GROW_BATCHES_DECIDING	274,11176
#define PHJ_GROW_BATCHES_FINISHING	275,11213
#define PHJ_GROW_BATCHES_PHASE(276,11251
#define PHJ_GROW_BUCKETS_ELECTING	279,11394
#define PHJ_GROW_BUCKETS_ALLOCATING	280,11431
#define PHJ_GROW_BUCKETS_REINSERTING	281,11470
#define PHJ_GROW_BUCKETS_PHASE(282,11509
typedef struct HashJoinTableData284,11577
	int			nbuckets;286,11612
	int			log2_nbuckets;287,11674
	int			nbuckets_original;289,11744
	int			nbuckets_optimal;290,11815
	int			log2_nbuckets_optimal;291,11876
		struct HashJoinTupleData **unshared;unshared297,12082
		dsa_pointer_atomic *shared;shared299,12187
	}			buckets;300,12217
	bool		keepNulls;302,12232
	bool		skewEnabled;304,12296
	HashSkewBucket **skewBucket;skewBucket305,12354
	int			skewBucketLen;306,12416
	int			nSkewBuckets;307,12485
	int		   *skewBucketNums;skewBucketNums308,12542
	int			nbatch;310,12612
	int			curbatch;311,12653
	int			nbatch_original;313,12713
	int			nbatch_outstart;314,12777
	bool		growEnabled;316,12842
	double		totalTuples;318,12903
	double		partialTuples;319,12965
	double		skewTuples;320,13035
	BufFile   **innerBatchFile;innerBatchFile329,13430
	BufFile   **outerBatchFile;outerBatchFile330,13502
	FmgrInfo   *outer_hashfunctions;outer_hashfunctions337,13760
	FmgrInfo   *inner_hashfunctions;inner_hashfunctions338,13831
	bool	   *hashStrict;hashStrict339,13902
	Oid		   *collations;collations340,13966
	Size		spaceUsed;342,13989
	Size		spaceAllowed;343,14052
	Size		spacePeak;344,14106
	Size		spaceUsedSkew;345,14147
	Size		spaceAllowedSkew;346,14213
	MemoryContext hashCxt;348,14276
	MemoryContext batchCxt;349,14343
	HashMemoryChunk chunks;352,14476
	HashMemoryChunk current_chunk;355,14589
	dsa_area   *area;area356,14656
	ParallelHashJoinState *parallel_state;parallel_state357,14716
	ParallelHashJoinBatchAccessor *batches;batches358,14756
	dsa_pointer current_chunk_shared;359,14797
}			HashJoinTableData;360,14832

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeBitmapHeapscan.h,36
#define NODEBITMAPHEAPSCAN_H15,417

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeLockRows.h,30
#define NODELOCKROWS_H15,399

/home/seinoyu/pgsql/master/postgresql/src/include/executor/execdebug.h,1102
#define EXECDEBUG_H18,592
#define T_OR_F(62,1966
#define NULL_OR_TUPLE(63,2012
#define NL_nodeDisplay(70,2183
#define NL_printf(71,2227
#define NL1_printf(72,2262
#define ENL1_printf(73,2303
#define NL_nodeDisplay(75,2378
#define NL_printf(76,2404
#define NL1_printf(77,2425
#define ENL1_printf(78,2450
#define SO_nodeDisplay(86,2616
#define SO_printf(87,2660
#define SO1_printf(88,2695
#define SO2_printf(89,2736
#define SO_nodeDisplay(91,2792
#define SO_printf(92,2818
#define SO1_printf(93,2839
#define SO2_printf(94,2864
#define MJ_nodeDisplay(103,3034
#define MJ_printf(104,3078
#define MJ1_printf(105,3113
#define MJ2_printf(106,3154
#define MJ_debugtup(107,3204
#define MJ_dump(108,3254
#define MJ_DEBUG_COMPARE(109,3307
#define MJ_DEBUG_QUAL(111,3389
#define MJ_DEBUG_PROC_NODE(114,3520
#define MJ_nodeDisplay(119,3662
#define MJ_printf(120,3688
#define MJ1_printf(121,3709
#define MJ2_printf(122,3734
#define MJ_debugtup(123,3764
#define MJ_dump(124,3790
#define MJ_DEBUG_COMPARE(125,3813
#define MJ_DEBUG_QUAL(126,3843
#define MJ_DEBUG_PROC_NODE(127,3878

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeAgg.h,2987
#define NODEAGG_H15,411
typedef struct AggStatePerTransData30,941
	Aggref	   *aggref;aggref44,1354
	bool		aggshared;49,1455
	int			numInputs;56,1662
	int			numTransInputs;63,1893
	Oid			transfn_oid;66,1972
	Oid			serialfn_oid;69,2048
	Oid			deserialfn_oid;72,2127
	Oid			aggtranstype;75,2188
	FmgrInfo	transfn;81,2347
	FmgrInfo	serialfn;84,2418
	FmgrInfo	deserialfn;87,2492
	Oid			aggCollation;90,2560
	int			numSortCols;93,2615
	int			numDistinctCols;97,2761
	AttrNumber *sortColIdx;sortColIdx100,2858
	Oid		   *sortOperators;sortOperators101,2883
	Oid		   *sortCollations;sortCollations102,2908
	bool	   *sortNullsFirst;sortNullsFirst103,2934
	FmgrInfo	equalfnOne;110,3169
	ExprState  *equalfnMulti;equalfnMulti111,3191
	Datum		initValue;116,3270
	bool		initValueIsNull;117,3289
	int16		inputtypeLen,126,3600
				transtypeLen;127,3622
	bool		inputtypeByVal,128,3640
				transtypeByVal;129,3663
	TupleTableSlot *sortslot;sortslot136,3883
	TupleTableSlot *uniqslot;uniqslot137,3936
	TupleDesc	sortdesc;138,4000
	Tuplesortstate **sortstates;sortstates154,4638
	FunctionCallInfo transfn_fcinfo;162,4979
	FunctionCallInfo serialfn_fcinfo;165,5078
	FunctionCallInfo deserialfn_fcinfo;167,5114
}			AggStatePerTransData;168,5151
typedef struct AggStatePerAggData179,5547
	Aggref	   *aggref;aggref187,5761
	int			transno;190,5840
	Oid			finalfn_oid;193,5915
	FmgrInfo	finalfn;199,6040
	int			numFinalArgs;207,6317
	List	   *aggdirectargs;aggdirectargs210,6393
	int16		resulttypeLen;216,6542
	bool		resulttypeByVal;217,6565
	bool		shareable;223,6730
}			AggStatePerAggData;224,6748
typedef struct AggStatePerGroupData242,7514
#define FIELDNO_AGGSTATEPERGROUPDATA_TRANSVALUE 244,7552
	Datum		transValue;245,7602
#define FIELDNO_AGGSTATEPERGROUPDATA_TRANSVALUEISNULL 246,7654
	bool		transValueIsNull;247,7710
#define FIELDNO_AGGSTATEPERGROUPDATA_NOTRANSVALUE 249,7736
	bool		noTransValue;250,7788
}			AggStatePerGroupData;259,8197
typedef struct AggStatePerPhaseData272,8737
	AggStrategy aggstrategy;274,8775
	int			numsets;275,8831
	int		   *gset_lengths;gset_lengths276,8885
	Bitmapset **grouped_cols;grouped_cols277,8940
	ExprState **eqfunctions;eqfunctions278,9001
	Agg		   *aggnode;aggnode280,9108
	Sort	   *sortnode;sortnode281,9158
	ExprState  *evaltrans;evaltrans283,9225
	ExprState  *evaltrans_cache[evaltrans_cache291,9489
}			AggStatePerPhaseData;292,9525
typedef struct AggStatePerHashData301,9769
	TupleHashTable hashtable;303,9806
	TupleHashIterator hashiter;304,9875
	TupleTableSlot *hashslot;hashslot305,9943
	FmgrInfo   *hashfunctions;hashfunctions306,10004
	Oid		   *eqfuncoids;eqfuncoids307,10066
	int			numCols;308,10127
	int			numhashGrpCols;309,10177
	int			largestGrpColIdx;310,10238
	AttrNumber *hashGrpColIdxInput;hashGrpColIdxInput311,10302
	AttrNumber *hashGrpColIdxHash;hashGrpColIdxHash312,10372
	Agg		   *aggnode;aggnode313,10439
}			AggStatePerHashData;314,10503

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeCustom.h,28
#define NODECUSTOM_H13,385

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeGather.h,28
#define NODEGATHER_H15,422

/home/seinoyu/pgsql/master/postgresql/src/include/executor/execParallel.h,689
#define EXECPARALLEL_H14,439
typedef struct SharedExecutorInstrumentation SharedExecutorInstrumentation;22,604
typedef struct ParallelExecutorInfo24,681
	PlanState  *planstate;planstate26,719
	ParallelContext *pcxt;pcxt27,789
	BufferUsage *buffer_usage;buffer_usage28,849
	WalUsage   *wal_usage;wal_usage29,914
	SharedExecutorInstrumentation *instrumentation;instrumentation30,966
	struct SharedJitInstrumentation *jit_instrumentation;jit_instrumentation31,1030
	dsa_area   *area;area32,1100
	dsa_pointer param_exec;33,1153
	bool		finished;34,1218
	shm_mq_handle **tqueue;tqueue36,1335
	struct TupleQueueReader **reader;reader37,1398
} ParallelExecutorInfo;38,1467

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeSeqscan.h,29
#define NODESEQSCAN_H15,396

/home/seinoyu/pgsql/master/postgresql/src/include/executor/execdesc.h,603
#define EXECDESC_H16,478
typedef struct QueryDesc33,881
	CmdType		operation;36,960
	PlannedStmt *plannedstmt;plannedstmt37,1017
	const char *sourceText;sourceText38,1091
	Snapshot	snapshot;39,1148
	Snapshot	crosscheck_snapshot;40,1201
	DestReceiver *dest;dest41,1270
	ParamListInfo params;42,1332
	QueryEnvironment *queryEnv;queryEnv43,1391
	int			instrument_options;44,1454
	TupleDesc	tupDesc;47,1562
	EState	   *estate;estate48,1618
	PlanState  *planstate;planstate49,1674
	bool		already_executed;52,1774
	struct Instrumentation *totaltime;totaltime55,1911
} QueryDesc;56,1985

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeGatherMerge.h,33
#define NODEGATHERMERGE_H15,442

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeMergejoin.h,31
#define NODEMERGEJOIN_H15,402

/home/seinoyu/pgsql/master/postgresql/src/include/executor/spi.h,1600
#define SPI_H14,421
typedef struct SPITupleTable22,547
	TupleDesc	tupdesc;25,600
	HeapTuple  *vals;vals26,644
	uint64		numvals;27,687
	uint64		alloced;30,794
	MemoryContext tuptabcxt;31,850
	slist_node	next;32,913
	SubTransactionId subid;33,969
} SPITupleTable;34,1039
typedef struct _SPI_plan *SPIPlanPtr;SPIPlanPtr37,1114
#define SPI_ERROR_CONNECT	39,1153
#define SPI_ERROR_COPY	40,1185
#define SPI_ERROR_OPUNKNOWN	41,1215
#define SPI_ERROR_UNCONNECTED	42,1249
#define SPI_ERROR_CURSOR	43,1284
#define SPI_ERROR_ARGUMENT	44,1338
#define SPI_ERROR_PARAM	45,1371
#define SPI_ERROR_TRANSACTION	46,1402
#define SPI_ERROR_NOATTRIBUTE	47,1437
#define SPI_ERROR_NOOUTFUNC	48,1472
#define SPI_ERROR_TYPUNKNOWN	49,1507
#define SPI_ERROR_REL_DUPLICATE 50,1542
#define SPI_ERROR_REL_NOT_FOUND 51,1580
#define SPI_OK_CONNECT	53,1619
#define SPI_OK_FINISH	54,1646
#define SPI_OK_FETCH	55,1672
#define SPI_OK_UTILITY	56,1697
#define SPI_OK_SELECT	57,1724
#define SPI_OK_SELINTO	58,1750
#define SPI_OK_INSERT	59,1777
#define SPI_OK_DELETE	60,1803
#define SPI_OK_UPDATE	61,1829
#define SPI_OK_CURSOR	62,1855
#define SPI_OK_INSERT_RETURNING 63,1882
#define SPI_OK_DELETE_RETURNING 64,1917
#define SPI_OK_UPDATE_RETURNING 65,1952
#define SPI_OK_REWRITTEN	66,1987
#define SPI_OK_REL_REGISTER	67,2016
#define SPI_OK_REL_UNREGISTER	68,2048
#define SPI_OK_TD_REGISTER	69,2081
#define SPI_OPT_NONATOMIC	71,2113
#define SPI_push(74,2228
#define SPI_pop(75,2258
#define SPI_push_conditional(76,2287
#define SPI_pop_conditional(77,2324
#define SPI_restore_connection(78,2371

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeSort.h,26
#define NODESORT_H15,387

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeModifyTable.h,33
#define NODEMODIFYTABLE_H14,405

/home/seinoyu/pgsql/master/postgresql/src/include/executor/nodeUnique.h,28
#define NODEUNIQUE_H15,393

/home/seinoyu/pgsql/master/postgresql/src/include/storage/predicate_internals.h,5620
#define PREDICATE_INTERNALS_H15,470
typedef uint64 SerCommitSeqNo;23,581
#define InvalidSerCommitSeqNo	37,1222
#define RecoverySerCommitSeqNo	38,1286
#define FirstNormalSerCommitSeqNo	39,1339
typedef struct SERIALIZABLEXACT57,2158
	VirtualTransactionId vxid;59,2192
	SerCommitSeqNo prepareSeqNo;76,2994
	SerCommitSeqNo commitSeqNo;77,3024
		SerCommitSeqNo earliestOutConflictCommit;82,3126
		SerCommitSeqNo lastCommitBeforeSnapshot;84,3225
	}			SeqNo;86,3328
	SHM_QUEUE	outConflicts;87,3340
	SHM_QUEUE	inConflicts;89,3438
	SHM_QUEUE	predicateLocks;91,3535
	SHM_QUEUE	finishedLink;92,3609
	LWLock		perXactPredicateListLock;100,3877
	SHM_QUEUE	possibleUnsafeConflicts;106,4071
	TransactionId topXid;108,4108
	TransactionId finishedBefore;110,4212
	TransactionId xmin;113,4369
	uint32		flags;114,4430
	int			pid;115,4495
} SERIALIZABLEXACT;116,4541
#define SXACT_FLAG_COMMITTED	118,4562
#define SXACT_FLAG_PREPARED	119,4628
#define SXACT_FLAG_ROLLED_BACK	120,4692
#define SXACT_FLAG_DOOMED	121,4762
#define SXACT_FLAG_CONFLICT_OUT	127,5028
#define SXACT_FLAG_READ_ONLY	128,5073
#define SXACT_FLAG_DEFERRABLE_WAITING	129,5115
#define SXACT_FLAG_RO_SAFE	130,5164
#define SXACT_FLAG_RO_UNSAFE	131,5205
#define SXACT_FLAG_SUMMARY_CONFLICT_IN	132,5247
#define SXACT_FLAG_SUMMARY_CONFLICT_OUT 133,5297
#define SXACT_FLAG_PARTIALLY_RELEASED	139,5576
typedef struct PredXactListElementData148,5985
	SHM_QUEUE	link;150,6026
	SERIALIZABLEXACT sxact;151,6043
}			PredXactListElementData;152,6068
typedef struct PredXactListElementData *PredXactListElement;PredXactListElement154,6098
#define PredXactListElementDataSize 156,6160
typedef struct PredXactListData159,6251
	SHM_QUEUE	availableList;161,6285
	SHM_QUEUE	activeList;162,6311
	TransactionId SxactGlobalXmin;170,6595
	int			SxactGlobalXminCount;172,6694
	int			WritableSxactCount;174,6799
	SerCommitSeqNo LastSxactCommitSeqNo;176,6904
	SerCommitSeqNo CanPartialClearThrough;180,7106
	SerCommitSeqNo HavePartialClearedThrough;185,7333
	SERIALIZABLEXACT *OldCommittedSxact;OldCommittedSxact187,7430
	PredXactListElement element;189,7502
}			PredXactListData;190,7532
typedef struct PredXactListData *PredXactList;PredXactList192,7555
#define PredXactListDataSize 194,7603
typedef struct RWConflictData208,8189
	SHM_QUEUE	outLink;210,8221
	SHM_QUEUE	inLink;211,8292
	SERIALIZABLEXACT *sxactOut;sxactOut212,8360
	SERIALIZABLEXACT *sxactIn;sxactIn213,8389
}			RWConflictData;214,8417
typedef struct RWConflictData *RWConflict;RWConflict216,8438
#define RWConflictDataSize 218,8482
typedef struct RWConflictPoolHeaderData221,8555
	SHM_QUEUE	availableList;223,8597
	RWConflict	element;224,8623
}			RWConflictPoolHeaderData;225,8644
typedef struct RWConflictPoolHeaderData *RWConflictPoolHeader;RWConflictPoolHeader227,8675
#define RWConflictPoolHeaderDataSize 229,8739
typedef struct SERIALIZABLEXIDTAG237,8964
	TransactionId xid;239,9000
} SERIALIZABLEXIDTAG;240,9020
typedef struct SERIALIZABLEXID255,9719
	SERIALIZABLEXIDTAG tag;258,9768
	SERIALIZABLEXACT *myXact;myXact261,9806
} SERIALIZABLEXID;262,9881
typedef struct PREDICATELOCKTARGETTAG282,10798
	uint32		locktag_field1;284,10838
	uint32		locktag_field2;285,10887
	uint32		locktag_field3;286,10936
	uint32		locktag_field4;287,10985
} PREDICATELOCKTARGETTAG;288,11034
typedef struct PREDICATELOCKTARGET299,11411
	PREDICATELOCKTARGETTAG tag;302,11464
	SHM_QUEUE	predicateLocks;305,11549
} PREDICATELOCKTARGET;307,11657
typedef struct PREDICATELOCKTAG317,11922
	PREDICATELOCKTARGET *myTarget;myTarget319,11956
	SERIALIZABLEXACT *myXact;myXact320,11988
} PREDICATELOCKTAG;321,12015
typedef struct PREDICATELOCK332,12449
	PREDICATELOCKTAG tag;335,12496
	SHM_QUEUE	targetLink;338,12565
	SHM_QUEUE	xactLink;340,12665
	SerCommitSeqNo commitSeqNo;342,12760
} PREDICATELOCK;343,12836
typedef struct LOCALPREDICATELOCK362,13752
	PREDICATELOCKTARGETTAG tag;365,13804
	bool		held;368,13889
	int			childLocks;369,13946
} LOCALPREDICATELOCK;370,14009
typedef enum PredicateLockTargetType376,14095
	PREDLOCKTAG_RELATION,378,14134
	PREDLOCKTAG_PAGE,379,14157
	PREDLOCKTAG_TUPLE380,14176
} PredicateLockTargetType;382,14256
typedef struct PredicateLockData390,14479
	int			nelements;392,14514
	PREDICATELOCKTARGETTAG *locktags;locktags393,14532
	SERIALIZABLEXACT *xacts;xacts394,14567
} PredicateLockData;395,14593
#define SET_PREDICATELOCKTARGETTAG_RELATION(403,14851
#define SET_PREDICATELOCKTARGETTAG_PAGE(409,15102
#define SET_PREDICATELOCKTARGETTAG_TUPLE(415,15350
#define GET_PREDICATELOCKTARGETTAG_DB(421,15595
#define GET_PREDICATELOCKTARGETTAG_RELATION(423,15678
#define GET_PREDICATELOCKTARGETTAG_PAGE(425,15767
#define GET_PREDICATELOCKTARGETTAG_OFFSET(427,15860
#define GET_PREDICATELOCKTARGETTAG_TYPE(429,15956
typedef enum TwoPhasePredicateRecordType439,16381
	TWOPHASEPREDICATERECORD_XACT,441,16424
	TWOPHASEPREDICATERECORD_LOCK442,16455
} TwoPhasePredicateRecordType;443,16485
typedef struct TwoPhasePredicateXactRecord456,16997
	TransactionId xmin;458,17042
	uint32		flags;459,17063
} TwoPhasePredicateXactRecord;460,17079
typedef struct TwoPhasePredicateLockRecord463,17132
	PREDICATELOCKTARGETTAG target;465,17177
	uint32		filler;466,17209
} TwoPhasePredicateLockRecord;467,17277
typedef struct TwoPhasePredicateRecord469,17309
	TwoPhasePredicateRecordType type;471,17350
		TwoPhasePredicateXactRecord xactRecord;474,17395
		TwoPhasePredicateLockRecord lockRecord;475,17437
	}			data;476,17479
} TwoPhasePredicateRecord;477,17490
#define InvalidSerializableXact 482,17593

/home/seinoyu/pgsql/master/postgresql/src/include/storage/buf.h,231
#define BUF_H15,406
typedef int Buffer;23,594
#define InvalidBuffer	25,615
#define BufferIsInvalid(31,702
#define BufferIsLocal(37,853
typedef struct BufferAccessStrategyData *BufferAccessStrategy;BufferAccessStrategy44,997

/home/seinoyu/pgsql/master/postgresql/src/include/storage/dsm.h,220
#define DSM_H14,408
typedef struct dsm_segment dsm_segment;18,454
#define DSM_CREATE_NULL_IF_MAXSEGMENTS	20,495
#define DSM_HANDLE_INVALID 23,594
typedef void (*on_dsm_detach_callback)on_dsm_detach_callback54,1694

/home/seinoyu/pgsql/master/postgresql/src/include/storage/dsm_impl.h,649
#define DSM_IMPL_H14,428
#define DSM_IMPL_POSIX	17,493
#define DSM_IMPL_SYSV	18,520
#define DSM_IMPL_WINDOWS	19,546
#define DSM_IMPL_MMAP	20,574
#define USE_DSM_WINDOWS27,752
#define DEFAULT_DYNAMIC_SHARED_MEMORY_TYPE	28,776
#define USE_DSM_POSIX31,864
#define DEFAULT_DYNAMIC_SHARED_MEMORY_TYPE	32,886
#define USE_DSM_SYSV34,952
#define DEFAULT_DYNAMIC_SHARED_MEMORY_TYPE	36,1016
#define USE_DSM_MMAP38,1081
#define PG_DYNSHMEM_DIR	50,1308
#define PG_DYNSHMEM_MMAP_FILE_PREFIX	51,1350
typedef uint32 dsm_handle;54,1448
	DSM_OP_CREATE,59,1545
	DSM_OP_ATTACH,60,1561
	DSM_OP_DETACH,61,1577
	DSM_OP_DESTROY62,1593
} dsm_op;63,1609

/home/seinoyu/pgsql/master/postgresql/src/include/storage/backendid.h,132
#define BACKENDID_H15,437
typedef int BackendId;21,519
#define InvalidBackendId	23,594
#define BackendIdForTempRelations(34,973

/home/seinoyu/pgsql/master/postgresql/src/include/storage/shm_mq.h,288
#define SHM_MQ_H14,436
typedef struct shm_mq shm_mq;22,596
typedef struct shm_mq_handle shm_mq_handle;26,678
	const char *data;data31,806
	Size		len;32,825
} shm_mq_iovec;33,837
	SHM_MQ_SUCCESS,38,924
	SHM_MQ_WOULD_BLOCK,39,978
	SHM_MQ_DETACHED	40,1035
} shm_mq_result;41,1095

/home/seinoyu/pgsql/master/postgresql/src/include/storage/bufmgr.h,902
#define BUFMGR_H15,419
typedef void *Block;Block24,607
typedef enum BufferAccessStrategyType27,678
	BAS_NORMAL,29,718
	BAS_BULKREAD,30,762
	BAS_BULKWRITE,32,844
	BAS_VACUUM	33,908
} BufferAccessStrategyType;34,937
	RBM_NORMAL,39,1027
	RBM_ZERO_AND_LOCK,40,1062
	RBM_ZERO_AND_CLEANUP_LOCK,42,1168
	RBM_ZERO_ON_ERROR,44,1274
	RBM_NORMAL_NO_LOG	45,1346
} ReadBufferMode;47,1458
typedef struct PrefetchBufferResult52,1522
	Buffer		recent_buffer;54,1560
	bool		initiated_io;55,1624
} PrefetchBufferResult;56,1690
#define MAX_IO_CONCURRENCY 88,2564
#define P_NEW	91,2641
#define BUFFER_LOCK_UNLOCK	96,2782
#define BUFFER_LOCK_SHARE	97,2812
#define BUFFER_LOCK_EXCLUSIVE	98,2841
#define BufferIsValid(123,3868
#define BufferGetBlock(136,4139
#define BufferGetPageSize(156,4613
#define BufferGetPage(169,4934
#define RelationGetNumberOfBlocks(211,6884
TestForOldSnapshot(277,9325

/home/seinoyu/pgsql/master/postgresql/src/include/storage/shm_toc.h,283
#define SHM_TOC_H23,984
typedef struct shm_toc shm_toc;28,1113
	Size		space_for_chunks;45,1790
	Size		number_of_keys;46,1815
} shm_toc_estimator;47,1838
#define shm_toc_initialize_estimator(49,1860
#define shm_toc_estimate_chunk(51,1956
#define shm_toc_estimate_keys(53,2072

/home/seinoyu/pgsql/master/postgresql/src/include/storage/md.h,20
#define MD_H15,431

/home/seinoyu/pgsql/master/postgresql/src/include/storage/relfilenode.h,404
#define RELFILENODE_H15,440
typedef struct RelFileNode57,2373
	Oid			spcNode;59,2402
	Oid			dbNode;60,2436
	Oid			relNode;61,2468
} RelFileNode;62,2500
typedef struct RelFileNodeBackend72,2939
	RelFileNode node;74,2975
	BackendId	backend;75,2994
} RelFileNodeBackend;76,3014
#define RelFileNodeBackendIsTemp(78,3037
#define RelFileNodeEquals(88,3465
#define RelFileNodeBackendEquals(93,3628

/home/seinoyu/pgsql/master/postgresql/src/include/storage/lmgr.h,299
#define LMGR_H15,411
typedef enum XLTW_Oper24,570
	XLTW_None,26,595
	XLTW_Update,27,607
	XLTW_Delete,28,621
	XLTW_Lock,29,635
	XLTW_LockUpdated,30,647
	XLTW_InsertIndex,31,666
	XLTW_InsertIndexUnique,32,685
	XLTW_FetchUpdated,33,710
	XLTW_RecheckExclusionConstr34,730
} XLTW_Oper;35,759

/home/seinoyu/pgsql/master/postgresql/src/include/storage/standbydefs.h,816
#define STANDBYDEFS_H15,449
#define XLOG_STANDBY_LOCK	34,1032
#define XLOG_RUNNING_XACTS	35,1065
#define XLOG_INVALIDATIONS	36,1099
typedef struct xl_standby_locks38,1134
	int			nlocks;40,1168
	xl_standby_lock locks[locks41,1224
} xl_standby_locks;42,1271
typedef struct xl_running_xacts47,1365
	int			xcnt;49,1399
	int			subxcnt;50,1444
	bool		subxid_overflow;51,1494
	TransactionId nextXid;52,1561
	TransactionId oldestRunningXid;53,1633
	TransactionId latestCompletedXid;54,1689
	TransactionId xids[xids56,1750
} xl_running_xacts;57,1794
typedef struct xl_invalidations63,1920
	Oid			dbId;65,1954
	Oid			tsId;66,1988
	bool		relcacheInitFileInval;67,2030
	int			nmsgs;68,2097
	SharedInvalidationMessage msgs[msgs69,2147
} xl_invalidations;70,2203
#define MinSizeOfInvalidations 72,2224

/home/seinoyu/pgsql/master/postgresql/src/include/storage/itemid.h,886
#define ITEMID_H15,454
typedef struct ItemIdData25,832
	unsigned	lp_off:lp_off27,860
				lp_flags:lp_flags28,925
				lp_len:lp_len29,981
} ItemIdData;30,1024
typedef ItemIdData *ItemId;ItemId32,1039
#define LP_UNUSED	38,1202
#define LP_NORMAL	39,1267
#define LP_REDIRECT	40,1330
#define LP_DEAD	41,1396
typedef uint16 ItemOffset;47,1578
typedef uint16 ItemLength;48,1605
#define ItemIdGetLength(59,1725
#define ItemIdGetOffset(65,1809
#define ItemIdGetFlags(71,1892
#define ItemIdGetRedirect(78,2054
#define ItemIdIsValid(86,2241
#define ItemIdIsUsed(92,2358
#define ItemIdIsNormal(99,2499
#define ItemIdIsRedirected(106,2648
#define ItemIdIsDead(113,2793
#define ItemIdHasStorage(120,2938
#define ItemIdSetUnused(128,3130
#define ItemIdSetNormal(140,3397
#define ItemIdSetRedirect(152,3683
#define ItemIdSetDead(164,3950
#define ItemIdMarkDead(179,4328

/home/seinoyu/pgsql/master/postgresql/src/include/storage/buf_internals.h,2283
#define BUFMGR_INTERNALS_H16,488
#define BUF_REFCOUNT_ONE 40,1117
#define BUF_REFCOUNT_MASK 41,1144
#define BUF_USAGECOUNT_MASK 42,1187
#define BUF_USAGECOUNT_ONE 43,1227
#define BUF_USAGECOUNT_SHIFT 44,1265
#define BUF_FLAG_MASK 45,1297
#define BUF_STATE_GET_REFCOUNT(48,1384
#define BUF_STATE_GET_USAGECOUNT(49,1452
#define BM_LOCKED	57,1709
#define BM_DIRTY	58,1771
#define BM_VALID	59,1827
#define BM_TAG_VALID	60,1878
#define BM_IO_IN_PROGRESS	61,1934
#define BM_IO_ERROR	62,2004
#define BM_JUST_DIRTIED	63,2064
#define BM_PIN_COUNT_WAITER	64,2135
#define BM_CHECKPOINT_NEEDED	65,2206
#define BM_PERMANENT	66,2278
#define BM_MAX_USAGE_COUNT	76,2774
typedef struct buftag90,3395
	RelFileNode rnode;92,3419
	ForkNumber	forkNum;93,3476
	BlockNumber blockNum;94,3497
} BufferTag;95,3560
#define CLEAR_BUFFERTAG(97,3574
#define INIT_BUFFERTAG(106,3787
#define BUFFERTAGS_EQUAL(113,3944
#define BufTableHashPartition(126,4377
#define BufMappingPartitionLock(128,4457
#define BufMappingPartitionLockByIndex(131,4594
typedef struct BufferDesc177,7184
	BufferTag	tag;179,7212
	int			buf_id;180,7267
	pg_atomic_uint32 state;183,7389
	int			wait_backend_pid;185,7415
	int			freeNext;186,7478
	LWLock		content_lock;188,7526
} BufferDesc;189,7589
#define BUFFERDESC_PAD_TO_SIZE	211,8584
typedef union BufferDescPadded213,8646
	BufferDesc	bufferdesc;215,8679
	char		pad[pad216,8703
} BufferDescPadded;217,8739
#define GetBufferDescriptor(219,8760
#define GetLocalBufferDescriptor(220,8830
#define BufferDescriptorGetBuffer(222,8900
#define BufferDescriptorGetIOLock(224,8964
#define BufferDescriptorGetContentLock(226,9055
#define FREENEXT_END_OF_LIST	235,9318
#define FREENEXT_NOT_IN_LIST	236,9352
#define UnlockBufHdr(243,9551
typedef struct PendingWriteback254,9836
	BufferTag	tag;257,9929
} PendingWriteback;258,9945
typedef struct WritebackContext261,10008
	int		   *max_pending;max_pending264,10109
	int			nr_pending;267,10185
	PendingWriteback pending_writebacks[pending_writebacks270,10229
} WritebackContext;271,10298
typedef struct CkptSortItem288,10710
	Oid			tsId;290,10740
	Oid			relNode;291,10753
	ForkNumber	forkNum;292,10769
	BlockNumber blockNum;293,10790
	int			buf_id;294,10813
} CkptSortItem;295,10828

/home/seinoyu/pgsql/master/postgresql/src/include/storage/procarray.h,413
#define PROCARRAY_H15,427
#define		PROCARRAY_VACUUM_FLAG	30,833
#define		PROCARRAY_ANALYZE_FLAG	32,923
#define		PROCARRAY_LOGICAL_DECODING_FLAG 34,1010
#define		PROCARRAY_SLOTS_XMIN	37,1125
#define		PROCARRAY_PROC_FLAGS_MASK	44,1418
#define		PROCARRAY_FLAGS_DEFAULT	50,1729
#define		PROCARRAY_FLAGS_VACUUM	52,1825
#define		PROCARRAY_FLAGS_ANALYZE	54,1937
#define		PROCARRAY_FLAGS_VACUUM_ANALYZE	56,2067

/home/seinoyu/pgsql/master/postgresql/src/include/storage/fd.h,199
#define FD_H44,1394
typedef int File;49,1430
#define FILE_POSSIBLY_DELETED(69,2060
#define FILE_POSSIBLY_DELETED(71,2119
#define PG_TEMP_FILES_DIR 165,6523
#define PG_TEMP_FILE_PREFIX 166,6561

/home/seinoyu/pgsql/master/postgresql/src/include/storage/checksum.h,26
#define CHECKSUM_H14,425

/home/seinoyu/pgsql/master/postgresql/src/include/storage/spin.h,149
#define SPIN_H52,1990
#define SpinLockInit(60,2095
#define SpinLockAcquire(62,2141
#define SpinLockRelease(64,2185
#define SpinLockFree(66,2231

/home/seinoyu/pgsql/master/postgresql/src/include/storage/pmsignal.h,575
#define PMSIGNAL_H15,451
	PMSIGNAL_RECOVERY_STARTED,35,918
	PMSIGNAL_BEGIN_HOT_STANDBY,36,973
	PMSIGNAL_WAKEN_ARCHIVER,37,1026
	PMSIGNAL_ROTATE_LOGFILE,38,1096
	PMSIGNAL_START_AUTOVAC_LAUNCHER,39,1172
	PMSIGNAL_START_AUTOVAC_WORKER,40,1241
	PMSIGNAL_BACKGROUND_WORKER_CHANGE,41,1306
	PMSIGNAL_START_WALRECEIVER,42,1379
	PMSIGNAL_ADVANCE_STATE_MACHINE,43,1434
	NUM_PMSIGNALS	45,1509
} PMSignalReason;46,1561
typedef struct PMSignalData PMSignalData;49,1657
#define USE_POSTMASTER_DEATH_SIGNAL77,2717
PostmasterIsAlive(84,2871
#define PostmasterIsAlive(91,2997

/home/seinoyu/pgsql/master/postgresql/src/include/storage/condition_variable.h,122
#define CONDITION_VARIABLE_H23,1012
	slock_t		mutex;30,1122
	proclist_head wakeup;31,1183
} ConditionVariable;32,1241

/home/seinoyu/pgsql/master/postgresql/src/include/storage/off.h,263
#define OFF_H15,409
typedef uint16 OffsetNumber;24,575
#define InvalidOffsetNumber	26,605
#define FirstOffsetNumber	27,653
#define MaxOffsetNumber	28,699
#define OffsetNumberIsValid(39,908
#define OffsetNumberNext(52,1375
#define OffsetNumberPrev(54,1455

/home/seinoyu/pgsql/master/postgresql/src/include/storage/freespace.h,28
#define FREESPACE_H_15,460

/home/seinoyu/pgsql/master/postgresql/src/include/storage/buffile.h,66
#define BUFFILE_H27,1063
typedef struct BufFile BufFile;33,1198

/home/seinoyu/pgsql/master/postgresql/src/include/storage/reinit.h,105
#define REINIT_H16,422
#define UNLOGGED_RELATION_CLEANUP	25,627
#define UNLOGGED_RELATION_INIT	26,669

/home/seinoyu/pgsql/master/postgresql/src/include/storage/copydir.h,25
#define COPYDIR_H14,400

/home/seinoyu/pgsql/master/postgresql/src/include/storage/smgr.h,543
#define SMGR_H15,430
typedef struct SMgrRelationData39,1435
	RelFileNodeBackend smgr_rnode;42,1532
	struct SMgrRelationData **smgr_owner;smgr_owner45,1650
	BlockNumber smgr_targblock;54,2059
	BlockNumber smgr_fsm_nblocks;55,2125
	BlockNumber smgr_vm_nblocks;56,2190
	int			smgr_which;64,2437
	int			md_num_open_segs[md_num_open_segs70,2624
	struct _MdfdVec *md_seg_fds[md_seg_fds71,2666
	dlist_node	node;74,2780
} SMgrRelationData;75,2798
typedef SMgrRelationData *SMgrRelation;SMgrRelation77,2819
#define SmgrIsTemp(79,2860

/home/seinoyu/pgsql/master/postgresql/src/include/storage/bufpage.h,2039
#define BUFPAGE_H15,428
typedef Pointer Page;78,2750
typedef uint16 LocationIndex;87,2965
	uint32		xlogid;96,3104
	uint32		xrecoff;97,3139
} PageXLogRecPtr;98,3173
#define PageXLogRecPtrGet(100,3192
#define PageXLogRecPtrSet(102,3272
typedef struct PageHeaderData151,5687
	PageXLogRecPtr pd_lsn;154,5789
	uint16		pd_checksum;156,5906
	uint16		pd_flags;157,5943
	LocationIndex pd_lower;158,5990
	LocationIndex pd_upper;159,6052
	LocationIndex pd_special;160,6112
	uint16		pd_pagesize_version;161,6178
	TransactionId pd_prune_xid;162,6208
	ItemIdData	pd_linp[pd_linp163,6280
} PageHeaderData;164,6349
typedef PageHeaderData *PageHeader;PageHeader166,6368
#define PD_HAS_FREE_LINES	180,6905
#define PD_PAGE_FULL	181,6980
#define PD_ALL_VISIBLE	182,7052
#define PD_VALID_FLAG_BITS	185,7145
#define PG_PAGE_LAYOUT_VERSION	199,7800
#define PG_DATA_CHECKSUM_VERSION	200,7834
#define PageIsValid(211,8089
#define SizeOfPageHeaderData 216,8194
#define PageIsEmpty(222,8344
#define PageIsNew(229,8517
#define PageGetItemId(235,8647
#define PageGetContents(246,9088
#define PageSizeIsValid(258,9317
#define PageGetPageSize(268,9634
#define PageGetPageLayoutVersion(275,9822
#define PageSetPageSizeAndVersion(285,10130
#define PageGetSpecialSize(300,10504
PageValidateSpecialPointer(313,11061
#define PageGetSpecialPointer(326,11349
#define PageGetItem(340,11697
#define PageGetMaxOffsetNumber(357,12238
#define PageGetLSN(366,12538
#define PageSetLSN(368,12615
#define PageHasFreeLinePointers(371,12703
#define PageSetHasFreeLinePointers(373,12798
#define PageClearHasFreeLinePointers(375,12897
#define PageIsFull(378,13000
#define PageSetFull(380,13077
#define PageClearFull(382,13156
#define PageIsAllVisible(385,13239
#define PageSetAllVisible(387,13324
#define PageClearAllVisible(389,13411
#define PageIsPrunable(392,13502
#define PageSetPrunable(398,13740
#define PageClearPrunable(405,14022
#define PAI_OVERWRITE	413,14284
#define PAI_IS_HEAP	414,14317
#define PageAddItem(416,14350

/home/seinoyu/pgsql/master/postgresql/src/include/storage/itemptr.h,869
#define ITEMPTR_H15,425
typedef struct ItemPointerData36,1213
	BlockIdData ip_blkid;38,1246
	OffsetNumber ip_posid;39,1269
			pg_attribute_packed(44,1430
typedef ItemPointerData *ItemPointer;ItemPointer49,1507
#define SpecTokenOffsetNumber	63,1961
#define MovedPartitionsOffsetNumber 69,2135
#define MovedPartitionsBlockNumber	70,2178
#define ItemPointerIsValid(82,2375
#define ItemPointerGetBlockNumberNoCheck(89,2576
#define ItemPointerGetBlockNumber(98,2780
#define ItemPointerGetOffsetNumberNoCheck(108,3020
#define ItemPointerGetOffsetNumber(117,3202
#define ItemPointerSet(127,3435
#define ItemPointerSetBlockNumber(138,3711
#define ItemPointerSetOffsetNumber(148,3959
#define ItemPointerCopy(161,4318
#define ItemPointerSetInvalid(172,4572
#define ItemPointerIndicatesMovedPartitions(184,4897
#define ItemPointerSetMovedPartitions(195,5246

/home/seinoyu/pgsql/master/postgresql/src/include/storage/sinvaladt.h,27
#define SINVALADT_H23,904

/home/seinoyu/pgsql/master/postgresql/src/include/storage/sync.h,441
#define SYNC_H14,411
typedef enum SyncRequestType23,627
	SYNC_REQUEST,25,658
	SYNC_UNLINK_REQUEST,26,715
	SYNC_FORGET_REQUEST,27,779
	SYNC_FILTER_REQUEST	28,835
} SyncRequestType;29,901
typedef enum SyncRequestHandler35,1078
	SYNC_HANDLER_MD 37,1112
} SyncRequestHandler;38,1149
typedef struct FileTag45,1385
	int16		handler;47,1410
	int16		forknum;48,1473
	RelFileNode rnode;49,1522
	uint32		segno;50,1542
} FileTag;51,1558

/home/seinoyu/pgsql/master/postgresql/src/include/storage/predicate.h,130
#define PREDICATE_H15,438
#define NUM_SERIAL_BUFFERS	31,748
typedef void *SerializableXactHandle;SerializableXactHandle37,890

/home/seinoyu/pgsql/master/postgresql/src/include/storage/proclist.h,506
#define PROCLIST_H20,707
proclist_init(29,842
proclist_is_empty(38,975
proclist_node_get(48,1232
proclist_push_head_offset(59,1465
proclist_push_tail_offset(87,2156
proclist_delete_offset(115,2865
proclist_contains_offset(146,3680
proclist_pop_head_node_offset(173,4612
#define proclist_delete(187,4992
#define proclist_push_head(189,5118
#define proclist_push_tail(191,5250
#define proclist_pop_head_node(193,5382
#define proclist_contains(195,5504
#define proclist_foreach_modify(206,5987

/home/seinoyu/pgsql/master/postgresql/src/include/storage/barrier.h,267
#define BARRIER_H14,432
typedef struct Barrier25,681
	slock_t		mutex;27,706
	int			phase;28,723
	int			participants;29,759
	int			arrived;30,822
	int			elected;32,901
	bool		static_party;33,946
	ConditionVariable condition_variable;34,998
} Barrier;35,1037

/home/seinoyu/pgsql/master/postgresql/src/include/storage/shmem.h,359
#define SHMEM_H22,866
typedef struct SHM_QUEUE28,929
	struct SHM_QUEUE *prev;prev30,956
	struct SHM_QUEUE *next;next31,981
} SHM_QUEUE;32,1006
#define SHMEM_INDEX_KEYSIZE	53,1749
#define SHMEM_INDEX_SIZE	55,1850
	char		key[key60,1953
	void	   *location;location61,2004
	Size		size;62,2054
	Size		allocated_size;63,2111
} ShmemIndexEnt;64,2167

/home/seinoyu/pgsql/master/postgresql/src/include/storage/pg_shmem.h,670
#define PG_SHMEM_H25,947
typedef struct PGShmemHeader	29,998
	int32		magic;31,1074
#define PGShmemMagic 32,1135
	pid_t		creatorPID;33,1167
	Size		totalsize;34,1235
	Size		freeoffset;35,1282
	dsm_handle	dsm_control;36,1335
	void	   *index;index37,1406
	dev_t		device;39,1519
	ino_t		inode;40,1571
} PGShmemHeader;42,1632
	HUGE_PAGES_OFF,52,1804
	HUGE_PAGES_ON,53,1821
	HUGE_PAGES_TRY54,1837
}			HugePagesType;55,1853
	SHMEM_TYPE_WINDOWS,60,1933
	SHMEM_TYPE_SYSV,61,1954
	SHMEM_TYPE_MMAP62,1972
}			PGShmemType;63,1989
#define DEFAULT_SHARED_MEMORY_TYPE 74,2215
#define DEFAULT_SHARED_MEMORY_TYPE 76,2288
#define DEFAULT_SHARED_MEMORY_TYPE 78,2345

/home/seinoyu/pgsql/master/postgresql/src/include/storage/fsm_internals.h,298
#define FSM_INTERNALS_H15,441
	int			fp_next_slot;35,1082
	uint8		fp_nodes[fp_nodes42,1316
} FSMPageData;43,1357
typedef FSMPageData *FSMPage;FSMPage45,1373
#define NodesPerPage 51,1533
#define NonLeafNodesPerPage 54,1640
#define LeafNodesPerPage 55,1685
#define SlotsPerFSMPage 61,1845

/home/seinoyu/pgsql/master/postgresql/src/include/storage/standby.h,460
#define STANDBY_H15,419
#define MinSizeOfXactRunningXacts 55,1889
typedef struct RunningTransactionsData70,2600
	int			xcnt;72,2641
	int			subxcnt;73,2686
	bool		subxid_overflow;74,2736
	TransactionId nextXid;75,2803
	TransactionId oldestRunningXid;76,2875
	TransactionId latestCompletedXid;77,2931
	TransactionId *xids;xids79,2992
} RunningTransactionsData;80,3054
typedef RunningTransactionsData *RunningTransactions;RunningTransactions82,3082

/home/seinoyu/pgsql/master/postgresql/src/include/storage/lock.h,5180
#define LOCK_H_15,411
typedef struct PGPROC PGPROC;27,697
typedef struct PROC_QUEUE29,728
	SHM_QUEUE	links;31,756
	int			size;32,813
} PROC_QUEUE;33,860
	BackendId	backendId;64,1941
	LocalTransactionId localTransactionId;65,2000
} VirtualTransactionId;66,2075
#define InvalidLocalTransactionId	68,2100
#define LocalTransactionIdIsValid(69,2137
#define VirtualTransactionIdIsValid(70,2215
#define VirtualTransactionIdEquals(73,2361
#define SetInvalidVirtualTransactionId(76,2518
#define GET_VXID_FROM_PGPROC(79,2663
#define MAX_LOCKMODES	84,2859
#define LOCKBIT_ON(86,2886
#define LOCKBIT_OFF(87,2933
typedef struct LockMethodData110,3879
	int			numLockModes;112,3911
	const LOCKMASK *conflictTab;conflictTab113,3932
	const char *const *lockModeNames;lockModeNames114,3962
	const bool *trace_flag;trace_flag115,3997
} LockMethodData;116,4022
typedef const LockMethodData *LockMethod;LockMethod118,4041
typedef uint16 LOCKMETHODID;124,4244
#define DEFAULT_LOCKMETHOD	127,4318
#define USER_LOCKMETHOD	128,4347
typedef enum LockTagType137,4658
	LOCKTAG_RELATION,139,4685
	LOCKTAG_RELATION_EXTEND,140,4727
	LOCKTAG_PAGE,141,4790
	LOCKTAG_TUPLE,142,4837
	LOCKTAG_TRANSACTION,143,4881
	LOCKTAG_VIRTUALTRANSACTION,144,4950
	LOCKTAG_SPECULATIVE_TOKEN,145,5013
	LOCKTAG_OBJECT,146,5083
	LOCKTAG_USERLOCK,147,5138
	LOCKTAG_ADVISORY	148,5204
} LockTagType;149,5250
#define LOCKTAG_LAST_TYPE	151,5266
typedef struct LOCKTAG163,5715
	uint32		locktag_field1;165,5740
	uint32		locktag_field2;166,5789
	uint32		locktag_field3;167,5838
	uint16		locktag_field4;168,5887
	uint8		locktag_type;169,5936
	uint8		locktag_lockmethodid;170,5985
} LOCKTAG;171,6042
#define SET_LOCKTAG_RELATION(180,6353
#define SET_LOCKTAG_RELATION_EXTEND(189,6689
#define SET_LOCKTAG_PAGE(198,7064
#define SET_LOCKTAG_TUPLE(207,7433
#define SET_LOCKTAG_TRANSACTION(216,7817
#define SET_LOCKTAG_VIRTUALTRANSACTION(225,8178
#define SET_LOCKTAG_SPECULATIVE_INSERTION(237,8621
#define SET_LOCKTAG_OBJECT(252,9224
#define SET_LOCKTAG_ADVISORY(260,9561
typedef struct LOCK287,10705
	LOCKTAG		tag;290,10743
	LOCKMASK	grantMask;293,10816
	LOCKMASK	waitMask;294,10883
	SHM_QUEUE	procLocks;295,10941
	PROC_QUEUE	waitProcs;296,11012
	int			requested[requested297,11081
	int			nRequested;298,11146
	int			granted[granted299,11199
	int			nGranted;300,11260
} LOCK;301,11309
#define LOCK_LOCKMETHOD(303,11318
#define LOCK_LOCKTAG(304,11397
typedef struct PROCLOCKTAG341,13286
	LOCK	   *myLock;myLock344,13369
	PGPROC	   *myProc;myProc345,13435
} PROCLOCKTAG;346,13496
typedef struct PROCLOCK348,13512
	PROCLOCKTAG tag;351,13549
	PGPROC	   *groupLeader;groupLeader354,13625
	LOCKMASK	holdMask;355,13697
	LOCKMASK	releaseMask;356,13762
	SHM_QUEUE	lockLink;357,13829
	SHM_QUEUE	procLink;358,13895
} PROCLOCK;359,13963
#define PROCLOCK_LOCKMETHOD(361,13976
typedef struct LOCALLOCKTAG387,15399
	LOCKTAG		lock;389,15429
	LOCKMODE	mode;390,15484
} LOCALLOCKTAG;391,15539
typedef struct LOCALLOCKOWNER393,15556
	struct ResourceOwnerData *owner;owner401,15800
	int64		nLocks;402,15834
} LOCALLOCKOWNER;403,15888
typedef struct LOCALLOCK405,15907
	LOCALLOCKTAG tag;408,15945
	uint32		hashcode;411,16022
	LOCK	   *lock;lock412,16077
	PROCLOCK   *proclock;proclock413,16132
	int64		nLocks;414,16197
	int			numLockOwners;415,16256
	int			maxLockOwners;416,16313
	LOCALLOCKOWNER *lockOwners;lockOwners417,16365
	bool		holdsStrongLockCount;418,16428
	bool		lockCleared;419,16498
} LOCALLOCK;420,16557
#define LOCALLOCK_LOCKMETHOD(422,16571
#define LOCALLOCK_LOCKTAG(423,16647
typedef struct LockInstanceData431,16862
	LOCKTAG		locktag;433,16896
	LOCKMASK	holdMask;434,16944
	LOCKMODE	waitLockMode;435,16997
	BackendId	backend;436,17063
	LocalTransactionId lxid;437,17116
	int			pid;438,17184
	int			leaderPid;439,17223
	bool		fastpath;440,17287
} LockInstanceData;441,17331
typedef struct LockData443,17352
	int			nelements;445,17378
	LockInstanceData *locks;locks446,17427
} LockData;447,17493
typedef struct BlockedProcData449,17506
	int			pid;451,17539
	int			first_lock;454,17725
	int			num_locks;455,17792
	int			first_waiter;458,17999
	int			num_waiters;459,18058
} BlockedProcData;460,18112
typedef struct BlockedProcsData462,18132
	BlockedProcData *procs;procs464,18166
	LockInstanceData *locks;locks465,18236
	int		   *waiter_pids;waiter_pids466,18302
	int			nprocs;467,18370
	int			maxprocs;468,18429
	int			nlocks;469,18487
	int			maxlocks;470,18546
	int			npids;471,18604
	int			maxpids;472,18668
} BlockedProcsData;473,18731
	LOCKACQUIRE_NOT_AVAIL,479,18805
	LOCKACQUIRE_OK,480,18874
	LOCKACQUIRE_ALREADY_HELD,481,18927
	LOCKACQUIRE_ALREADY_CLEAR	482,19000
} LockAcquireResult;483,19074
	DS_NOT_YET_CHECKED,488,19163
	DS_NO_DEADLOCK,489,19222
	DS_SOFT_DEADLOCK,490,19269
	DS_HARD_DEADLOCK,491,19336
	DS_BLOCKED_BY_AUTOVACUUM	492,19394
} DeadLockState;494,19485
#define LockHashPartition(502,19780
#define LockHashPartitionLock(504,19854
#define LockHashPartitionLockByIndex(507,19983
#define LockHashPartitionLockByProc(519,20621
extern void DeadLockReport(582,23425

/home/seinoyu/pgsql/master/postgresql/src/include/storage/latch.h,783
#define LATCH_H101,4372
typedef struct Latch110,4591
	sig_atomic_t is_set;112,4614
	bool		is_shared;113,4636
	int			owner_pid;114,4654
	HANDLE		event;116,4685
} Latch;118,4708
#define WL_LATCH_SET	124,4825
#define WL_SOCKET_READABLE	125,4857
#define WL_SOCKET_WRITEABLE 126,4894
#define WL_TIMEOUT	127,4932
#define WL_POSTMASTER_DEATH 128,4996
#define WL_EXIT_ON_PM_DEATH	129,5034
#define WL_SOCKET_CONNECTED 131,5085
#define WL_SOCKET_CONNECTED 134,5196
#define WL_SOCKET_MASK	137,5253
typedef struct WaitEvent141,5363
	int			pos;143,5390
	uint32		events;144,5447
	pgsocket	fd;145,5489
	void	   *user_data;user_data146,5544
	bool		reset;148,5623
} WaitEvent;150,5684
typedef struct WaitEventSet WaitEventSet;153,5773
#define latch_sigusr1_handler(187,6988

/home/seinoyu/pgsql/master/postgresql/src/include/storage/ipc.h,272
#define IPC_H19,627
typedef void (*pg_on_exit_callback)pg_on_exit_callback21,642
typedef void (*shmem_startup_hook_type)shmem_startup_hook_type22,701
#define PG_ENSURE_ERROR_CLEANUP(47,1688
#define PG_END_ENSURE_ERROR_CLEANUP(52,1811
extern void proc_exit(68,2198

/home/seinoyu/pgsql/master/postgresql/src/include/storage/procsignal.h,604
#define PROCSIGNAL_H15,430
	PROCSIG_CATCHUP_INTERRUPT,32,1011
	PROCSIG_NOTIFY_INTERRUPT,33,1070
	PROCSIG_PARALLEL_MESSAGE,34,1127
	PROCSIG_WALSND_INIT_STOPPING,35,1202
	PROCSIG_BARRIER,36,1279
	PROCSIG_RECOVERY_CONFLICT_DATABASE,39,1365
	PROCSIG_RECOVERY_CONFLICT_TABLESPACE,40,1402
	PROCSIG_RECOVERY_CONFLICT_LOCK,41,1441
	PROCSIG_RECOVERY_CONFLICT_SNAPSHOT,42,1474
	PROCSIG_RECOVERY_CONFLICT_BUFFERPIN,43,1511
	PROCSIG_RECOVERY_CONFLICT_STARTUP_DEADLOCK,44,1549
	NUM_PROCSIGNALS	46,1595
} ProcSignalReason;47,1635
	PROCSIGNAL_BARRIER_PLACEHOLDER 56,1877
} ProcSignalBarrierType;57,1913

/home/seinoyu/pgsql/master/postgresql/src/include/storage/sharedfileset.h,257
#define SHAREDFILESET_H16,438
typedef struct SharedFileSet25,615
	pid_t		creator_pid;27,646
	uint32		number;28,701
	slock_t		mutex;29,745
	int			refcnt;30,807
	int			ntablespaces;31,858
	Oid			tablespaces[tablespaces32,914
} SharedFileSet;35,1055

/home/seinoyu/pgsql/master/postgresql/src/include/storage/item.h,51
#define ITEM_H15,408
typedef Pointer Item;17,424

/home/seinoyu/pgsql/master/postgresql/src/include/storage/large_object.h,345
#define LARGE_OBJECT_H16,573
typedef struct LargeObjectDesc39,1406
	Oid			id;41,1439
	Snapshot	snapshot;42,1475
	SubTransactionId subid;43,1518
	uint64		offset;44,1575
	int			flags;45,1621
#define IFS_RDLOCK	48,1685
#define IFS_WRLOCK	49,1746
} LargeObjectDesc;51,1808
#define LOBLKSIZE	70,2602
#define MAX_LARGE_OBJECT_SIZE	76,2794

/home/seinoyu/pgsql/master/postgresql/src/include/storage/proc.h,3268
#define _PROC_H_15,420
#define PGPROC_MAX_CACHED_SUBXIDS 36,1189
struct XidCache38,1254
	TransactionId xids[xids40,1272
#define		PROC_IS_AUTOVACUUM	53,1697
#define		PROC_IN_VACUUM	54,1761
#define		PROC_IN_ANALYZE	55,1827
#define		PROC_VACUUM_FOR_WRAPAROUND	56,1890
#define		PROC_IN_LOGICAL_DECODING	57,1957
#define		PROC_RESERVED	59,2063
#define		PROC_VACUUM_STATE_MASK 62,2152
#define		FP_LOCK_SLOTS_PER_BACKEND 71,2543
#define INVALID_PGPROCNO	77,2733
	PROC_WAIT_STATUS_OK,81,2788
	PROC_WAIT_STATUS_WAITING,82,2810
	PROC_WAIT_STATUS_ERROR,83,2837
} ProcWaitStatus;84,2862
struct PGPROC102,3748
	SHM_QUEUE	links;105,3838
	PGPROC	  **procgloballist;procgloballist106,3898
	PGSemaphore sem;108,3971
	ProcWaitStatus waitStatus;109,4023
	Latch		procLatch;111,4052
	LocalTransactionId lxid;113,4105
	int			pid;116,4275
	int			pgprocno;117,4336
	BackendId	backendId;120,4421
	Oid			databaseId;121,4490
	Oid			roleId;122,4554
	Oid			tempNamespaceId;124,4609
	bool		isBackgroundWorker;127,4693
	bool		recoveryConflictPending;134,4970
	bool		lwWaiting;137,5074
	uint8		lwWaitMode;138,5130
	proclist_node lwWaitLink;139,5186
	proclist_node cvWaitLink;142,5290
	LOCK	   *waitLock;waitLock146,5486
	PROCLOCK   *waitProcLock;waitProcLock147,5547
	LOCKMODE	waitLockMode;148,5613
	LOCKMASK	heldLocks;149,5674
	bool		delayChkpt;152,5786
	XLogRecPtr	waitLSN;160,6138
	int			syncRepState;161,6197
	SHM_QUEUE	syncRepLinks;162,6248
	SHM_QUEUE	myProcLocks[myProcLocks169,6490
	struct XidCache subxids;171,6536
	bool		procArrayGroupMember;175,6702
	pg_atomic_uint32 procArrayGroupNext;177,6788
	TransactionId procArrayGroupMemberXid;183,6919
	uint32		wait_event_info;185,6960
	bool		clogGroupMember;188,7069
	pg_atomic_uint32 clogGroupNext;189,7129
	TransactionId clogGroupMemberXid;190,7191
	XidStatus	clogGroupMemberXidStatus;191,7268
	int			clogGroupMemberPage;193,7365
	XLogRecPtr	clogGroupMemberLsn;195,7475
	LWLock		fpInfoLock;199,7653
	uint64		fpLockBits;200,7718
	Oid			fpRelId[fpRelId201,7786
	bool		fpVXIDLock;202,7854
	LocalTransactionId fpLocalTransactionId;203,7918
	PGPROC	   *lockGroupLeader;lockGroupLeader210,8149
	dlist_head	lockGroupMembers;211,8219
	dlist_node	lockGroupLink;212,8288
typedef struct PGXACT229,8918
	TransactionId xid;231,8942
	TransactionId xmin;235,9118
	uint8		vacuumFlags;240,9321
	bool		overflowed;241,9380
	uint8		nxids;243,9400
} PGXACT;244,9415
typedef struct PROC_HDR249,9499
	PGPROC	   *allProcs;allProcs252,9601
	PGXACT	   *allPgXact;allPgXact254,9699
	uint32		allProcCount;256,9754
	PGPROC	   *freeProcs;freeProcs258,9823
	PGPROC	   *autovacFreeProcs;autovacFreeProcs260,9905
	PGPROC	   *bgworkerFreeProcs;bgworkerFreeProcs262,9990
	PGPROC	   *walsenderFreeProcs;walsenderFreeProcs264,10077
	pg_atomic_uint32 procArrayGroupFirst;266,10157
	pg_atomic_uint32 clogGroupFirst;268,10260
	Latch	   *walwriterLatch;walwriterLatch270,10327
	Latch	   *checkpointerLatch;checkpointerLatch272,10390
	int			spins_per_delay;274,10488
	PGPROC	   *startupProc;startupProc276,10575
	int			startupProcPid;277,10600
	int			startupBufferPinWaitBufId;279,10699
} PROC_HDR;280,10733
#define GetPGProcByNumber(287,10867
#define NUM_AUXILIARY_PROCS	297,11299

/home/seinoyu/pgsql/master/postgresql/src/include/storage/pg_sema.h,126
#define PG_SEMA_H21,749
typedef struct PGSemaphoreData *PGSemaphore;PGSemaphore34,1310
typedef HANDLE PGSemaphore;36,1361

/home/seinoyu/pgsql/master/postgresql/src/include/storage/lockdefs.h,550
#define LOCKDEFS_H_18,625
typedef int LOCKMASK;25,846
typedef int LOCKMODE;26,868
#define NoLock	34,1085
#define AccessShareLock	36,1107
#define RowShareLock	37,1148
#define RowExclusiveLock	38,1207
#define ShareUpdateExclusiveLock 39,1264
#define ShareLock	41,1370
#define ShareRowExclusiveLock	42,1435
#define ExclusiveLock	44,1527
#define AccessExclusiveLock	45,1596
#define MaxLockMode	48,1711
typedef struct xl_standby_lock52,1800
	TransactionId xid;54,1833
	Oid			dbOid;55,1898
	Oid			relOid;56,1940
} xl_standby_lock;57,1976

/home/seinoyu/pgsql/master/postgresql/src/include/storage/s_lock.h,3575
#define S_LOCK_H97,4367
#define HAS_TEST_AND_SET136,5750
typedef unsigned char slock_t;138,5776
#define TAS(140,5808
tas(143,5859
#define SPIN_DELAY(170,6656
spin_delay(173,6714
#define HAS_TEST_AND_SET206,8090
typedef unsigned char slock_t;208,8116
#define TAS(210,8148
#define TAS_SPIN(221,8595
tas(224,8670
#define SPIN_DELAY(237,8876
spin_delay(240,8934
#define HAS_TEST_AND_SET274,10192
typedef unsigned int slock_t;276,10218
#define TAS(278,10249
#define TAS_SPIN(281,10353
tas(286,10451
tas(301,10668
#define S_UNLOCK(311,10868
#define HAS_TEST_AND_SET325,11315
#define TAS(327,11341
typedef int slock_t;329,11370
tas(332,11414
#define S_UNLOCK(337,11490
#define HAS_TEST_AND_SET345,11738
typedef unsigned int slock_t;347,11764
#define TAS(349,11795
tas(352,11849
#define HAS_TEST_AND_SET374,12362
typedef unsigned char slock_t;376,12388
#define TAS(378,12420
tas(381,12471
#define S_UNLOCK(421,13734
#define S_UNLOCK(432,13997
#define HAS_TEST_AND_SET445,14298
typedef unsigned int slock_t;447,14324
#define TAS(449,14355
#define TAS_SPIN(452,14452
tas(471,15405
#define S_UNLOCK(507,16160
#define S_UNLOCK(514,16304
#define HAS_TEST_AND_SET527,16587
typedef unsigned char slock_t;529,16613
#define TAS(531,16645
tas(534,16696
#define HAS_TEST_AND_SET553,16994
typedef unsigned int slock_t;555,17020
#define TAS(557,17051
tas(560,17102
#define HAS_TEST_AND_SET580,17411
typedef unsigned char slock_t;582,17437
#define TAS(584,17469
tas(587,17520
#define HAS_TEST_AND_SET606,17829
typedef unsigned int slock_t;608,17855
#define TAS(610,17886
#define MIPS_SET_MIPS2	626,18596
#define MIPS_SET_MIPS2628,18657
tas(632,18710
#define S_UNLOCK(657,19365
#define HAS_TEST_AND_SET677,19837
typedef int slock_t;681,19885
#define TAS(683,19907
#define HAS_TEST_AND_SET689,20005
typedef unsigned char slock_t;691,20031
#define TAS(693,20063
tas(696,20114
#define HAS_TEST_AND_SET722,20659
typedef unsigned char slock_t;724,20685
#define S_UNLOCK(738,21210
#define HAS_TEST_AND_SET766,22105
	int			sema[sema770,22148
} slock_t;771,22164
#define TAS_ACTIVE_WORD(773,22176
tas(778,22305
#undef S_UNLOCK798,22848
#define S_UNLOCK(800,22871
#define S_INIT_LOCK(808,23019
#define S_LOCK_FREE(817,23207
#define HAS_TEST_AND_SET836,23984
typedef unsigned int slock_t;838,24010
#define TAS(841,24070
#define TAS_SPIN(843,24203
#define S_UNLOCK(844,24252
#define HAS_TEST_AND_SET853,24412
typedef int slock_t;857,24466
#define TAS(859,24488
#define S_UNLOCK(860,24546
#define HAS_TEST_AND_SET867,24780
typedef unsigned int slock_t;870,24897
typedef unsigned char slock_t;872,24933
#define TAS(878,25065
typedef LONG slock_t;883,25137
#define HAS_TEST_AND_SET885,25160
#define TAS(886,25185
#define SPIN_DELAY(888,25245
spin_delay(895,25444
spin_delay(901,25511
#define S_UNLOCK(911,25670
typedef int slock_t;934,26366
#define S_LOCK_FREE(941,26606
#define S_UNLOCK(942,26655
#define S_INIT_LOCK(943,26699
#define TAS(944,26755
#define S_LOCK(955,26906
#define S_LOCK_FREE(960,27050
#define USE_DEFAULT_S_UNLOCK980,28178
#define S_UNLOCK(982,28253
#define S_INIT_LOCK(986,28342
#define SPIN_DELAY(990,28435
#define TAS(997,28605
#define TAS_SPIN(1001,28676
#define DEFAULT_SPINS_PER_DELAY 1012,28971
	int			spins;1023,29264
	int			delays;1024,29278
	int			cur_delay;1025,29293
	const char *file;file1026,29311
	int			line;1027,29330
	const char *func;func1028,29343
} SpinDelayStatus;1029,29362
init_spin_delay(1032,29401
#define init_local_spin_delay(1043,29628

/home/seinoyu/pgsql/master/postgresql/src/include/storage/proclist_types.h,356
#define PROCLIST_TYPES_H16,444
typedef struct proclist_node26,882
	int			next;28,913
	int			prev;29,962
} proclist_node;30,1011
typedef struct proclist_head36,1175
	int			head;38,1206
	int			tail;39,1255
} proclist_head;40,1304
typedef struct proclist_mutable_iter45,1391
	int			cur;47,1430
	int			next;48,1481
} proclist_mutable_iter;49,1530

/home/seinoyu/pgsql/master/postgresql/src/include/storage/indexfsm.h,27
#define INDEXFSM_H_15,457

/home/seinoyu/pgsql/master/postgresql/src/include/storage/block.h,474
#define BLOCK_H15,412
typedef uint32 BlockNumber;31,918
#define InvalidBlockNumber	33,947
#define MaxBlockNumber	35,1003
typedef struct BlockIdData53,1781
	uint16		bi_hi;55,1810
	uint16		bi_lo;56,1826
} BlockIdData;57,1842
typedef BlockIdData *BlockId;BlockId59,1858
#define BlockNumberIsValid(70,2040
#define BlockIdIsValid(77,2214
#define BlockIdSet(84,2356
#define BlockIdCopy(95,2586
#define BlockIdEquals(107,2879
#define BlockIdGetBlockNumber(115,3099

/home/seinoyu/pgsql/master/postgresql/src/include/storage/lwlock.h,2331
#define LWLOCK_H15,407
typedef struct LWLock31,784
	uint16		tranche;33,808
	pg_atomic_uint32 state;34,844
	proclist_head waiters;35,916
	pg_atomic_uint32 nwaiters;37,989
	struct PGPROC *owner;owner38,1041
} LWLock;40,1111
#define LWLOCK_PADDED_SIZE	72,2921
#define LWLOCK_MINIMAL_SIZE 73,2967
typedef union LWLockPadded76,3076
	LWLock		lock;78,3105
	char		pad[pad79,3120
} LWLockPadded;80,3152
typedef union LWLockMinimallyPadded83,3200
	LWLock		lock;85,3238
	char		pad[pad86,3253
} LWLockMinimallyPadded;87,3286
typedef struct NamedLWLockTranche92,3414
	int			trancheId;94,3450
	char	   *trancheName;trancheName95,3468
} NamedLWLockTranche;96,3491
#define NUM_BUFFER_PARTITIONS 111,3986
#define LOG2_NUM_LOCK_PARTITIONS 114,4089
#define NUM_LOCK_PARTITIONS 115,4125
#define LOG2_NUM_PREDICATELOCK_PARTITIONS 118,4264
#define NUM_PREDICATELOCK_PARTITIONS 119,4309
#define BUFFER_MAPPING_LWLOCK_OFFSET	122,4447
#define LOCK_MANAGER_LWLOCK_OFFSET	123,4507
#define PREDICATELOCK_MANAGER_LWLOCK_OFFSET 125,4601
#define NUM_FIXED_LWLOCKS 127,4699
typedef enum LWLockMode130,4798
	LW_EXCLUSIVE,132,4824
	LW_SHARED,133,4839
	LW_WAIT_UNTIL_FREE	134,4851
} LWLockMode;137,5023
typedef enum BuiltinTrancheIds194,7482
	LWTRANCHE_XACT_BUFFER 196,7515
	LWTRANCHE_COMMITTS_BUFFER,197,7564
	LWTRANCHE_SUBTRANS_BUFFER,198,7592
	LWTRANCHE_MULTIXACTOFFSET_BUFFER,199,7620
	LWTRANCHE_MULTIXACTMEMBER_BUFFER,200,7655
	LWTRANCHE_NOTIFY_BUFFER,201,7690
	LWTRANCHE_SERIAL_BUFFER,202,7716
	LWTRANCHE_WAL_INSERT,203,7742
	LWTRANCHE_BUFFER_CONTENT,204,7765
	LWTRANCHE_BUFFER_IO,205,7792
	LWTRANCHE_REPLICATION_ORIGIN_STATE,206,7814
	LWTRANCHE_REPLICATION_SLOT_IO,207,7851
	LWTRANCHE_LOCK_FASTPATH,208,7883
	LWTRANCHE_BUFFER_MAPPING,209,7909
	LWTRANCHE_LOCK_MANAGER,210,7936
	LWTRANCHE_PREDICATE_LOCK_MANAGER,211,7961
	LWTRANCHE_PARALLEL_HASH_JOIN,212,7996
	LWTRANCHE_PARALLEL_QUERY_DSA,213,8027
	LWTRANCHE_PER_SESSION_DSA,214,8058
	LWTRANCHE_PER_SESSION_RECORD_TYPE,215,8086
	LWTRANCHE_PER_SESSION_RECORD_TYPMOD,216,8122
	LWTRANCHE_SHARED_TUPLESTORE,217,8160
	LWTRANCHE_SHARED_TIDBITMAP,218,8190
	LWTRANCHE_PARALLEL_APPEND,219,8219
	LWTRANCHE_PER_XACT_PREDICATE_LIST,220,8247
	LWTRANCHE_FIRST_USER_DEFINED221,8283
}			BuiltinTrancheIds;222,8313
typedef LWLock *LWLockId;LWLockId229,8560

/home/seinoyu/pgsql/master/postgresql/src/include/storage/sinval.h,1093
#define SINVAL_H15,444
	int8		id;62,2742
	Oid			dbId;63,2789
	uint32		hashValue;64,2849
} SharedInvalCatcacheMsg;65,2912
#define SHAREDINVALCATALOG_ID	67,2939
	int8		id;71,2992
	Oid			dbId;72,3041
	Oid			catId;73,3100
} SharedInvalCatalogMsg;74,3163
#define SHAREDINVALRELCACHE_ID	76,3189
	int8		id;80,3243
	Oid			dbId;81,3292
	Oid			relId;82,3352
} SharedInvalRelcacheMsg;83,3410
#define SHAREDINVALSMGR_ID	85,3437
	int8		id;90,3543
	int8		backend_hi;91,3592
	uint16		backend_lo;92,3654
	RelFileNode rnode;93,3717
} SharedInvalSmgrMsg;94,3770
#define SHAREDINVALRELMAP_ID	96,3793
	int8		id;100,3845
	Oid			dbId;101,3894
} SharedInvalRelmapMsg;102,3953
#define SHAREDINVALSNAPSHOT_ID	104,3978
	int8		id;108,4032
	Oid			dbId;109,4081
	Oid			relId;110,4141
} SharedInvalSnapshotMsg;111,4175
	int8		id;115,4218
	SharedInvalCatcacheMsg cc;116,4267
	SharedInvalCatalogMsg cat;117,4295
	SharedInvalRelcacheMsg rc;118,4323
	SharedInvalSmgrMsg sm;119,4351
	SharedInvalRelmapMsg rm;120,4375
	SharedInvalSnapshotMsg sn;121,4401
} SharedInvalidationMessage;122,4429

/home/seinoyu/pgsql/master/postgresql/src/include/storage/checksum_impl.h,273
#define N_SUMS 106,5808
#define FNV_PRIME 108,5864
	PageHeaderData phdr;113,5975
} PGChecksummablePage;115,6056
static const uint32 checksumBaseOffsets[checksumBaseOffsets121,6184
#define CHECKSUM_COMP(135,6678
pg_checksum_block(146,6951
pg_checksum_page(187,8159

/home/seinoyu/pgsql/master/postgresql/src/include/rusagestub.h,175
#define RUSAGESTUB_H15,410
#define RUSAGE_SELF	23,590
#define RUSAGE_CHILDREN 24,613
struct rusage26,643
	struct timeval ru_utime;28,659
	struct timeval ru_stime;29,706

/home/seinoyu/pgsql/master/postgresql/src/include/foreign/foreign.h,951
#define FOREIGN_H14,375
#define MappingUserName(20,479
typedef struct ForeignDataWrapper24,583
	Oid			fdwid;26,619
	Oid			owner;27,649
	char	   *fdwname;fdwname28,690
	Oid			fdwhandler;29,732
	Oid			fdwvalidator;30,788
	List	   *options;options31,847
} ForeignDataWrapper;32,900
typedef struct ForeignServer34,923
	Oid			serverid;36,954
	Oid			fdwid;37,989
	Oid			owner;38,1032
	char	   *servername;servername39,1076
	char	   *servertype;servertype40,1124
	char	   *serverversion;serverversion41,1175
	List	   *options;options42,1231
} ForeignServer;43,1284
typedef struct UserMapping45,1302
	Oid			umid;47,1331
	Oid			userid;48,1372
	Oid			serverid;49,1410
	List	   *options;options50,1445
} UserMapping;51,1498
typedef struct ForeignTable53,1514
	Oid			relid;55,1544
	Oid			serverid;56,1579
	List	   *options;options57,1614
} ForeignTable;58,1666
#define FSV_MISSING_OK	61,1724
#define FDW_MISSING_OK	64,1799

/home/seinoyu/pgsql/master/postgresql/src/include/foreign/fdwapi.h,5665
#define FDWAPI_H13,328
typedef void (*GetForeignRelSize_function)GetForeignRelSize_function27,606
typedef void (*GetForeignPaths_function)GetForeignPaths_function31,734
typedef ForeignScan *(*GetForeignPlan_function)GetForeignPlan_function35,862
typedef void (*BeginForeignScan_function)BeginForeignScan_function43,1126
typedef TupleTableSlot *(*IterateForeignScan_function)IterateForeignScan_function46,1220
typedef bool (*RecheckForeignScan_function)RecheckForeignScan_function48,1302
typedef void (*ReScanForeignScan_function)ReScanForeignScan_function51,1407
typedef void (*EndForeignScan_function)EndForeignScan_function53,1477
typedef void (*GetForeignJoinPaths_function)GetForeignJoinPaths_function55,1544
typedef void (*GetForeignUpperPaths_function)GetForeignUpperPaths_function62,1786
typedef void (*AddForeignUpdateTargets_function)AddForeignUpdateTargets_function68,1995
typedef List *(*PlanForeignModify_function)PlanForeignModify_function72,2146
typedef void (*BeginForeignModify_function)BeginForeignModify_function77,2308
typedef TupleTableSlot *(*ExecForeignInsert_function)ExecForeignInsert_function83,2502
typedef TupleTableSlot *(*ExecForeignUpdate_function)ExecForeignUpdate_function88,2693
typedef TupleTableSlot *(*ExecForeignDelete_function)ExecForeignDelete_function93,2884
typedef void (*EndForeignModify_function)EndForeignModify_function98,3075
typedef void (*BeginForeignInsert_function)BeginForeignInsert_function101,3171
typedef void (*EndForeignInsert_function)EndForeignInsert_function104,3279
typedef int (*IsForeignRelUpdatable_function)IsForeignRelUpdatable_function107,3375
typedef bool (*PlanDirectModify_function)PlanDirectModify_function109,3438
typedef void (*BeginDirectModify_function)BeginDirectModify_function114,3601
typedef TupleTableSlot *(*IterateDirectModify_function)IterateDirectModify_function117,3694
typedef void (*EndDirectModify_function)EndDirectModify_function119,3777
typedef RowMarkType (*GetForeignRowMarkType_function)GetForeignRowMarkType_function121,3845
typedef void (*RefetchForeignRow_function)RefetchForeignRow_function124,3967
typedef void (*ExplainForeignScan_function)ExplainForeignScan_function130,4141
typedef void (*ExplainForeignModify_function)ExplainForeignModify_function133,4249
typedef void (*ExplainDirectModify_function)ExplainDirectModify_function139,4466
typedef int (*AcquireSampleRowsFunc)AcquireSampleRowsFunc142,4576
typedef bool (*AnalyzeForeignTable_function)AnalyzeForeignTable_function147,4753
typedef List *(*ImportForeignSchema_function)ImportForeignSchema_function151,4900
typedef Size (*EstimateDSMForeignScan_function)EstimateDSMForeignScan_function154,5009
typedef void (*InitializeDSMForeignScan_function)InitializeDSMForeignScan_function156,5119
typedef void (*ReInitializeDSMForeignScan_function)ReInitializeDSMForeignScan_function159,5266
typedef void (*InitializeWorkerForeignScan_function)InitializeWorkerForeignScan_function162,5413
typedef void (*ShutdownForeignScan_function)ShutdownForeignScan_function165,5554
typedef bool (*IsForeignScanParallelSafe_function)IsForeignScanParallelSafe_function166,5625
typedef List *(*ReparameterizeForeignPathByChild_function)ReparameterizeForeignPathByChild_function169,5760
typedef struct FdwRoutine183,6364
	NodeTag		type;185,6392
	GetForeignRelSize_function GetForeignRelSize;188,6454
	GetForeignPaths_function GetForeignPaths;189,6501
	GetForeignPlan_function GetForeignPlan;190,6544
	BeginForeignScan_function BeginForeignScan;191,6585
	IterateForeignScan_function IterateForeignScan;192,6630
	ReScanForeignScan_function ReScanForeignScan;193,6679
	EndForeignScan_function EndForeignScan;194,6726
	GetForeignJoinPaths_function GetForeignJoinPaths;202,6918
	GetForeignUpperPaths_function GetForeignUpperPaths;205,7039
	AddForeignUpdateTargets_function AddForeignUpdateTargets;208,7138
	PlanForeignModify_function PlanForeignModify;209,7197
	BeginForeignModify_function BeginForeignModify;210,7244
	ExecForeignInsert_function ExecForeignInsert;211,7293
	ExecForeignUpdate_function ExecForeignUpdate;212,7340
	ExecForeignDelete_function ExecForeignDelete;213,7387
	EndForeignModify_function EndForeignModify;214,7434
	BeginForeignInsert_function BeginForeignInsert;215,7479
	EndForeignInsert_function EndForeignInsert;216,7528
	IsForeignRelUpdatable_function IsForeignRelUpdatable;217,7573
	PlanDirectModify_function PlanDirectModify;218,7628
	BeginDirectModify_function BeginDirectModify;219,7673
	IterateDirectModify_function IterateDirectModify;220,7720
	EndDirectModify_function EndDirectModify;221,7771
	GetForeignRowMarkType_function GetForeignRowMarkType;224,7872
	RefetchForeignRow_function RefetchForeignRow;225,7927
	RecheckForeignScan_function RecheckForeignScan;226,7974
	ExplainForeignScan_function ExplainForeignScan;229,8061
	ExplainForeignModify_function ExplainForeignModify;230,8110
	ExplainDirectModify_function ExplainDirectModify;231,8163
	AnalyzeForeignTable_function AnalyzeForeignTable;234,8252
	ImportForeignSchema_function ImportForeignSchema;237,8355
	IsForeignScanParallelSafe_function IsForeignScanParallelSafe;240,8466
	EstimateDSMForeignScan_function EstimateDSMForeignScan;241,8529
	InitializeDSMForeignScan_function InitializeDSMForeignScan;242,8586
	ReInitializeDSMForeignScan_function ReInitializeDSMForeignScan;243,8647
	InitializeWorkerForeignScan_function InitializeWorkerForeignScan;244,8712
	ShutdownForeignScan_function ShutdownForeignScan;245,8779
	ReparameterizeForeignPathByChild_function ReparameterizeForeignPathByChild;248,8885
} FdwRoutine;249,8962

/home/seinoyu/pgsql/master/postgresql/src/include/bootstrap/bootstrap.h,210
#define BOOTSTRAP_H15,433
#define MAXATTR 24,628
#define BOOTCOL_NULL_AUTO	26,648
#define BOOTCOL_NULL_FORCE_NULL	27,678
#define BOOTCOL_NULL_FORCE_NOT_NULL 28,713
extern void AuxiliaryProcessMain(35,849

/home/seinoyu/pgsql/master/postgresql/src/include/portability/mem.h,263
#define MEM_H13,347
#define IPCProtection	15,362
#define PG_SHMAT_FLAGS	18,492
#define PG_SHMAT_FLAGS	20,537
#define MAP_ANONYMOUS	25,679
#define MAP_HASSEMAPHORE	30,837
#define MAP_NOSYNC	38,1021
#define PG_MMAP_FLAGS	41,1052
#define MAP_FAILED 45,1195

/home/seinoyu/pgsql/master/postgresql/src/include/portability/instr_time.h,1379
#define INSTR_TIME_H56,2022
#define PG_INSTR_CLOCK	79,2796
#define PG_INSTR_CLOCK	81,2870
#define PG_INSTR_CLOCK	83,2915
typedef struct timespec instr_time;86,2961
#define INSTR_TIME_IS_ZERO(88,2998
#define INSTR_TIME_SET_ZERO(90,3067
#define INSTR_TIME_SET_CURRENT(92,3133
#define INSTR_TIME_ADD(94,3213
#define INSTR_TIME_SUBTRACT(106,3448
#define INSTR_TIME_ACCUM_DIFF(118,3678
#define INSTR_TIME_GET_DOUBLE(135,4094
#define INSTR_TIME_GET_MILLISEC(138,4195
#define INSTR_TIME_GET_MICROSEC(141,4304
typedef struct timeval instr_time;150,4506
#define INSTR_TIME_IS_ZERO(152,4542
#define INSTR_TIME_SET_ZERO(154,4611
#define INSTR_TIME_SET_CURRENT(156,4677
#define INSTR_TIME_ADD(158,4737
#define INSTR_TIME_SUBTRACT(170,4966
#define INSTR_TIME_ACCUM_DIFF(182,5193
#define INSTR_TIME_GET_DOUBLE(199,5600
#define INSTR_TIME_GET_MILLISEC(202,5698
#define INSTR_TIME_GET_MICROSEC(205,5804
typedef LARGE_INTEGER instr_time;214,6010
#define INSTR_TIME_IS_ZERO(216,6045
#define INSTR_TIME_SET_ZERO(218,6096
#define INSTR_TIME_SET_CURRENT(220,6147
#define INSTR_TIME_ADD(222,6212
#define INSTR_TIME_SUBTRACT(225,6275
#define INSTR_TIME_ACCUM_DIFF(228,6343
#define INSTR_TIME_GET_DOUBLE(231,6430
#define INSTR_TIME_GET_MILLISEC(234,6515
#define INSTR_TIME_GET_MICROSEC(237,6611
GetTimerFrequency(241,6742
#define INSTR_TIME_SET_CURRENT_LAZY(253,6912

/home/seinoyu/pgsql/master/postgresql/src/include/pg_getopt.h,27
#define PG_GETOPT_H19,747

/home/seinoyu/pgsql/master/postgresql/src/include/datatype/timestamp.h,1660
#define DATATYPE_TIMESTAMP_H16,530
typedef int64 Timestamp;38,1418
typedef int64 TimestampTz;39,1443
typedef int64 TimeOffset;40,1470
typedef int32 fsec_t;41,1496
	TimeOffset	time;45,1581
	int32		day;47,1667
	int32		month;48,1719
} Interval;49,1785
#define MAX_TIMESTAMP_PRECISION 53,1868
#define MAX_INTERVAL_PRECISION 54,1902
#define TS_PREC_INV 60,2054
#define TSROUND(61,2084
#define DAYS_PER_YEAR	68,2220
#define MONTHS_PER_YEAR 69,2290
#define DAYS_PER_MONTH	77,2608
#define HOURS_PER_DAY	78,2675
#define SECS_PER_YEAR	85,2936
#define SECS_PER_DAY	86,3011
#define SECS_PER_HOUR	87,3038
#define SECS_PER_MINUTE 88,3065
#define MINS_PER_HOUR	89,3092
#define USECS_PER_DAY	91,3118
#define USECS_PER_HOUR	92,3164
#define USECS_PER_MINUTE 93,3210
#define USECS_PER_SEC	94,3256
#define MAX_TZDISP_HOUR	103,3676
#define TZDISP_LIMIT	104,3736
#define DT_NOBEGIN	109,3882
#define DT_NOEND	110,3915
#define TIMESTAMP_NOBEGIN(112,3947
#define TIMESTAMP_IS_NOBEGIN(115,4013
#define TIMESTAMP_NOEND(117,4066
#define TIMESTAMP_IS_NOEND(120,4129
#define TIMESTAMP_NOT_FINITE(122,4178
#define JULIAN_MINYEAR 148,5532
#define JULIAN_MINMONTH 149,5563
#define JULIAN_MINDAY 150,5592
#define JULIAN_MAXYEAR 151,5619
#define JULIAN_MAXMONTH 152,5652
#define JULIAN_MAXDAY 153,5680
#define IS_VALID_JULIAN(155,5707
#define UNIX_EPOCH_JDATE	162,5986
#define POSTGRES_EPOCH_JDATE	163,6048
#define DATETIME_MIN_JULIAN 179,6720
#define DATE_END_JULIAN 180,6752
#define TIMESTAMP_END_JULIAN 181,6827
#define MIN_TIMESTAMP	184,6922
#define END_TIMESTAMP	186,7046
#define IS_VALID_DATE(190,7240
#define IS_VALID_TIMESTAMP(195,7407

/home/seinoyu/pgsql/master/postgresql/src/include/replication/reorderbuffer.h,4246
#define REORDERBUFFER_H10,221
typedef struct ReorderBufferTupleBuf23,551
	slist_node	node;26,627
	HeapTupleData tuple;29,717
	Size		alloc_tuple_size;32,809
} ReorderBufferTupleBuf;35,868
#define ReorderBufferTupleBufData(38,941
enum ReorderBufferChangeType54,1629
	REORDER_BUFFER_CHANGE_INSERT,56,1660
	REORDER_BUFFER_CHANGE_UPDATE,57,1691
	REORDER_BUFFER_CHANGE_DELETE,58,1722
	REORDER_BUFFER_CHANGE_MESSAGE,59,1753
	REORDER_BUFFER_CHANGE_INTERNAL_SNAPSHOT,60,1785
	REORDER_BUFFER_CHANGE_INTERNAL_COMMAND_ID,61,1827
	REORDER_BUFFER_CHANGE_INTERNAL_TUPLECID,62,1871
	REORDER_BUFFER_CHANGE_INTERNAL_SPEC_INSERT,63,1913
	REORDER_BUFFER_CHANGE_INTERNAL_SPEC_CONFIRM,64,1958
	REORDER_BUFFER_CHANGE_TRUNCATE65,2004
typedef struct ReorderBufferChange78,2326
	XLogRecPtr	lsn;80,2363
	enum ReorderBufferChangeType action;83,2408
	struct ReorderBufferTXN *txn;txn86,2490
	RepOriginId origin_id;88,2522
			RelFileNode relnode;100,2770
			bool		clear_toast_afterwards;103,2865
			ReorderBufferTupleBuf *oldtuple;oldtuple106,2935
			ReorderBufferTupleBuf *newtuple;newtuple108,3007
		}			tp;109,3043
			Size		nrelids;117,3188
			bool		cascade;118,3206
			bool		restart_seqs;119,3224
			Oid		   *relids;relids120,3247
		}			truncate;121,3267
			char	   *prefix;prefix126,3334
			Size		message_size;127,3354
			char	   *message;message128,3377
		}			msg;129,3398
		Snapshot	snapshot;132,3471
		CommandId	command_id;138,3619
			RelFileNode node;146,3768
			ItemPointerData tid;147,3789
			CommandId	cmin;148,3813
			CommandId	cmax;149,3832
			CommandId	combocid;150,3851
		}			tuplecid;151,3874
	}			data;152,3890
	dlist_node	node;158,4022
} ReorderBufferChange;159,4040
#define RBTXN_HAS_CATALOG_CHANGES 162,4097
#define RBTXN_IS_SUBXACT 163,4138
#define RBTXN_IS_SERIALIZED 164,4179
#define rbtxn_has_catalog_changes(167,4270
#define rbtxn_is_known_subxact(173,4419
#define rbtxn_is_serialized(179,4559
typedef struct ReorderBufferTXN184,4650
	bits32		txn_flags;187,4701
	TransactionId xid;190,4793
	TransactionId toplevel_xid;193,4860
	XLogRecPtr	first_lsn;200,5111
	XLogRecPtr	final_lsn;216,5615
	XLogRecPtr	end_lsn;221,5702
	struct ReorderBufferTXN *toptxn;toptxn224,5791
	XLogRecPtr	restart_decoding_lsn;231,5988
	RepOriginId origin_id;234,6080
	XLogRecPtr	origin_lsn;235,6104
	TimestampTz commit_time;240,6205
	Snapshot	base_snapshot;247,6403
	XLogRecPtr	base_snapshot_lsn;248,6428
	dlist_node	base_snapshot_node;249,6459
	uint64		nentries;256,6678
	uint64		nentries_mem;262,6804
	dlist_head	changes;268,6925
	dlist_head	tuplecids;275,7153
	uint64		ntuplecids;276,7176
	HTAB	   *tuplecid_hash;tuplecid_hash281,7265
	HTAB	   *toast_hash;toast_hash287,7425
	dlist_head	subtxns;293,7566
	uint32		nsubtxns;294,7587
	uint32		ninvalidations;300,7724
	SharedInvalidationMessage *invalidations;invalidations301,7749
	dlist_node	node;310,8033
	Size		size;315,8131
} ReorderBufferTXN;316,8144
typedef struct ReorderBuffer ReorderBuffer;319,8242
typedef void (*ReorderBufferApplyChangeCB)ReorderBufferApplyChangeCB322,8319
typedef void (*ReorderBufferApplyTruncateCB)ReorderBufferApplyTruncateCB328,8522
typedef void (*ReorderBufferBeginCB)ReorderBufferBeginCB335,8762
typedef void (*ReorderBufferCommitCB)ReorderBufferCommitCB339,8887
typedef void (*ReorderBufferMessageCB)ReorderBufferMessageCB344,9050
struct ReorderBuffer351,9278
	HTAB	   *by_txn;by_txn356,9351
	dlist_head	toplevel_by_lsn;362,9484
	dlist_head	txns_by_base_snapshot_lsn;371,9885
	TransactionId by_txn_last_xid;377,10041
	ReorderBufferTXN *by_txn_last_txn;by_txn_last_txn378,10073
	ReorderBufferBeginCB begin;383,10175
	ReorderBufferApplyChangeCB apply_change;384,10204
	ReorderBufferApplyTruncateCB apply_truncate;385,10246
	ReorderBufferCommitCB commit;386,10292
	ReorderBufferMessageCB message;387,10323
	void	   *private_data;private_data392,10426
	bool		output_rewrites;397,10491
	MemoryContext context;402,10553
	MemoryContext change_context;407,10634
	MemoryContext txn_context;408,10665
	MemoryContext tup_context;409,10693
	XLogRecPtr	current_restart_decoding_lsn;411,10722
	char	   *outbuf;outbuf414,10809
	Size		outbufsize;415,10827
	Size		size;418,10872

/home/seinoyu/pgsql/master/postgresql/src/include/replication/backup_manifest.h,502
#define BACKUP_MANIFEST_H13,381
typedef enum manifest_option20,523
	MANIFEST_OPTION_YES,22,554
	MANIFEST_OPTION_NO,23,576
	MANIFEST_OPTION_FORCE_ENCODE24,597
} backup_manifest_option;25,627
typedef struct backup_manifest_info27,654
	BufFile    *buffile;buffile29,692
	pg_checksum_type checksum_type;30,714
	pg_sha256_ctx manifest_ctx;31,747
	uint64		manifest_size;32,776
	bool		force_encode;33,800
	bool		first_file;34,821
	bool		still_checksumming;35,840
} backup_manifest_info;36,867

/home/seinoyu/pgsql/master/postgresql/src/include/replication/logicalproto.h,1364
#define LOGICAL_PROTO_H14,368
#define LOGICALREP_PROTO_MIN_VERSION_NUM 27,742
#define LOGICALREP_PROTO_VERSION_NUM 28,785
typedef struct LogicalRepTupleData34,963
	StringInfoData *colvalues;colvalues37,1064
	char	   *colstatus;colstatus39,1163
	int			ncols;41,1214
} LogicalRepTupleData;42,1228
#define LOGICALREP_COLUMN_NULL	46,1377
#define LOGICALREP_COLUMN_UNCHANGED	47,1413
#define LOGICALREP_COLUMN_TEXT	48,1453
#define LOGICALREP_COLUMN_BINARY	49,1489
typedef uint32 LogicalRepRelId;51,1547
typedef struct LogicalRepRelation54,1607
	LogicalRepRelId remoteid;57,1684
	char	   *nspname;nspname58,1743
	char	   *relname;relname59,1781
	int			natts;60,1821
	char	  **attnames;attnames61,1861
	Oid		   *atttyps;atttyps62,1901
	char		replident;63,1940
	char		relkind;64,1982
	Bitmapset  *attkeys;attkeys65,2026
} LogicalRepRelation;66,2077
typedef struct LogicalRepTyp69,2124
	Oid			remoteid;71,2155
	char	   *nspname;nspname72,2208
	char	   *typname;typname73,2261
} LogicalRepTyp;74,2311
typedef struct LogicalRepBeginData77,2352
	XLogRecPtr	final_lsn;79,2389
	TimestampTz committime;80,2412
	TransactionId xid;81,2437
} LogicalRepBeginData;82,2457
typedef struct LogicalRepCommitData84,2481
	XLogRecPtr	commit_lsn;86,2519
	XLogRecPtr	end_lsn;87,2543
	TimestampTz committime;88,2564
} LogicalRepCommitData;89,2589

/home/seinoyu/pgsql/master/postgresql/src/include/replication/origin.h,416
#define PG_ORIGIN_H11,342
typedef struct xl_replorigin_set18,492
	XLogRecPtr	remote_lsn;20,527
	RepOriginId node_id;21,551
	bool		force;22,573
} xl_replorigin_set;23,587
typedef struct xl_replorigin_drop25,609
	RepOriginId node_id;27,645
} xl_replorigin_drop;28,667
#define XLOG_REPLORIGIN_SET	30,690
#define XLOG_REPLORIGIN_DROP	31,724
#define InvalidRepOriginId 33,760
#define DoNotReplicateId 34,789

/home/seinoyu/pgsql/master/postgresql/src/include/replication/walsender.h,223
#define _WALSENDER_H13,359
	CRS_EXPORT_SNAPSHOT,22,490
	CRS_NOEXPORT_SNAPSHOT,23,512
	CRS_USE_SNAPSHOT24,536
} CRSSnapshotAction;25,554
#define WalSndWakeupRequest(57,1502
#define WalSndWakeupProcessRequests(63,1634

/home/seinoyu/pgsql/master/postgresql/src/include/replication/logicalrelation.h,313
#define LOGICALRELATION_H13,401
typedef struct LogicalRepRelMapEntry18,494
	LogicalRepRelation remoterel;20,533
	Oid			localreloid;23,649
	Relation	localrel;24,693
	AttrMap    *attrmap;attrmap25,735
	bool		updatable;26,803
	char		state;29,875
	XLogRecPtr	statelsn;30,889
} LogicalRepRelMapEntry;31,911

/home/seinoyu/pgsql/master/postgresql/src/include/replication/logical.h,1225
#define LOGICAL_H10,304
typedef void (*LogicalOutputPluginWriterWrite)LogicalOutputPluginWriterWrite19,481
typedef LogicalOutputPluginWriterWrite LogicalOutputPluginWriterPrepareWrite;25,655
typedef void (*LogicalOutputPluginWriterUpdateProgress)LogicalOutputPluginWriterUpdateProgress27,734
typedef struct LogicalDecodingContext32,894
	MemoryContext context;35,981
	ReplicationSlot *slot;slot38,1045
	XLogReaderState *reader;reader41,1112
	struct ReorderBuffer *reorder;reorder42,1138
	struct SnapBuild *snapshot_builder;snapshot_builder43,1170
	bool		fast_forward;50,1385
	OutputPluginCallbacks callbacks;52,1407
	OutputPluginOptions options;53,1441
	List	   *output_plugin_options;output_plugin_options58,1508
	LogicalOutputPluginWriterPrepareWrite prepare_write;63,1610
	LogicalOutputPluginWriterWrite write;64,1664
	LogicalOutputPluginWriterUpdateProgress update_progress;65,1703
	StringInfo	out;70,1790
	void	   *output_plugin_private;output_plugin_private75,1864
	void	   *output_writer_private;output_writer_private80,1953
	bool		accept_writes;85,2026
	bool		prepared_write;86,2048
	XLogRecPtr	write_location;87,2071
	TransactionId write_xid;88,2099
} LogicalDecodingContext;89,2125

/home/seinoyu/pgsql/master/postgresql/src/include/replication/syncrep.h,899
#define _SYNCREP_H14,370
#define SyncRepRequested(19,443
#define SYNC_REP_NO_WAIT	23,573
#define SYNC_REP_WAIT_WRITE	24,604
#define SYNC_REP_WAIT_FLUSH	25,635
#define SYNC_REP_WAIT_APPLY	26,666
#define NUM_SYNC_REP_WAIT_MODE	28,698
#define SYNC_REP_NOT_WAITING	31,751
#define SYNC_REP_WAITING	32,783
#define SYNC_REP_WAIT_COMPLETE	33,812
#define SYNC_REP_PRIORITY	36,889
#define SYNC_REP_QUORUM	37,918
typedef struct SyncRepStandbyData43,1063
	pid_t		pid;46,1165
	XLogRecPtr	write;47,1178
	XLogRecPtr	flush;48,1197
	XLogRecPtr	apply;49,1216
	int			sync_standby_priority;50,1235
	int			walsnd_index;52,1330
	bool		is_me;54,1423
} SyncRepStandbyData;55,1437
typedef struct SyncRepConfigData64,1719
	int			config_size;66,1754
	int			num_sync;67,1816
	uint8		syncrep_method;69,1900
	int			nmembers;70,1961
	char		member_names[member_names72,2100
} SyncRepConfigData;73,2144

/home/seinoyu/pgsql/master/postgresql/src/include/replication/decode.h,24
#define DECODE_H10,311

/home/seinoyu/pgsql/master/postgresql/src/include/replication/snapbuild.h,223
#define SNAPBUILD_H13,357
	SNAPBUILD_START 23,500
	SNAPBUILD_BUILDING_SNAPSHOT 29,615
	SNAPBUILD_FULL_SNAPSHOT 39,954
	SNAPBUILD_CONSISTENT 46,1176
} SnapBuildState;47,1202
typedef struct SnapBuild SnapBuild;51,1313

/home/seinoyu/pgsql/master/postgresql/src/include/replication/basebackup.h,221
#define _BASEBACKUP_H13,363
#define MAX_RATE_LOWER	20,496
#define MAX_RATE_UPPER	21,522
	char	   *oid;oid25,571
	char	   *path;path26,586
	char	   *rpath;rpath27,602
	int64		size;28,664
} tablespaceinfo;29,678

/home/seinoyu/pgsql/master/postgresql/src/include/replication/logicallauncher.h,33
#define LOGICALLAUNCHER_H13,380

/home/seinoyu/pgsql/master/postgresql/src/include/replication/logicalworker.h,31
#define LOGICALWORKER_H13,373

/home/seinoyu/pgsql/master/postgresql/src/include/replication/pgoutput.h,269
#define PGOUTPUT_H14,336
typedef struct PGOutputData18,384
	MemoryContext context;20,414
	uint32		protocol_version;24,535
	List	   *publication_names;publication_names25,562
	List	   *publications;publications26,591
	bool		binary;27,615
} PGOutputData;28,630

/home/seinoyu/pgsql/master/postgresql/src/include/replication/message.h,316
#define PG_LOGICAL_MESSAGE_H11,354
typedef struct xl_logical_message20,525
	Oid			dbId;22,561
	bool		transactional;23,608
	Size		prefix_size;24,662
	Size		message_size;25,705
	char		message[message26,752
} xl_logical_message;29,894
#define SizeOfLogicalMessage	31,917
#define XLOG_LOGICAL_MESSAGE	37,1122

/home/seinoyu/pgsql/master/postgresql/src/include/replication/worker_internal.h,584
#define WORKER_INTERNAL_H13,394
typedef struct LogicalRepWorker24,594
	TimestampTz launch_time;27,675
	bool		in_use;30,749
	uint16		generation;33,826
	PGPROC	   *proc;proc36,899
	Oid			dbid;39,952
	Oid			userid;42,1041
	Oid			subid;45,1096
	Oid			relid;48,1158
	char		relstate;49,1172
	XLogRecPtr	relstate_lsn;50,1189
	slock_t		relmutex;51,1215
	XLogRecPtr	last_lsn;54,1250
	TimestampTz last_send_time;55,1272
	TimestampTz last_recv_time;56,1301
	XLogRecPtr	reply_lsn;57,1330
	TimestampTz reply_time;58,1353
} LogicalRepWorker;59,1378
am_tablesync_worker(92,2615

/home/seinoyu/pgsql/master/postgresql/src/include/replication/slot.h,1501
#define SLOT_H10,286
typedef enum ReplicationSlotPersistency32,1051
	RS_PERSISTENT,34,1093
	RS_EPHEMERAL,35,1109
	RS_TEMPORARY36,1124
} ReplicationSlotPersistency;37,1138
typedef enum SlotAcquireBehavior40,1208
	SAB_Error,42,1243
	SAB_Block,43,1255
	SAB_Inquire44,1267
} SlotAcquireBehavior;45,1280
typedef struct ReplicationSlotPersistentData50,1377
	NameData	name;53,1453
	Oid			database;56,1508
	ReplicationSlotPersistency persistency;61,1608
	TransactionId xmin;69,1803
	TransactionId catalog_xmin;77,1988
	XLogRecPtr	restart_lsn;80,2084
	XLogRecPtr	invalidated_at;83,2173
	XLogRecPtr	confirmed_flush;91,2485
	NameData	plugin;94,2534
} ReplicationSlotPersistentData;95,2552
typedef struct ReplicationSlot113,3466
	slock_t		mutex;116,3548
	bool		in_use;119,3594
	pid_t		active_pid;122,3680
	bool		just_dirtied;125,3739
	bool		dirty;126,3760
	TransactionId effective_xmin;139,4405
	TransactionId effective_catalog_xmin;140,4436
	ReplicationSlotPersistentData data;143,4520
	LWLock		io_in_progress_lock;146,4605
	ConditionVariable active_cv;149,4695
	TransactionId candidate_catalog_xmin;158,4969
	XLogRecPtr	candidate_xmin_lsn;159,5008
	XLogRecPtr	candidate_restart_valid;160,5040
	XLogRecPtr	candidate_restart_lsn;161,5077
} ReplicationSlot;162,5112
#define SlotIsPhysical(164,5132
#define SlotIsLogical(165,5199
typedef struct ReplicationSlotCtlData170,5333
	ReplicationSlot replication_slots[replication_slots176,5513
} ReplicationSlotCtlData;177,5552

/home/seinoyu/pgsql/master/postgresql/src/include/replication/walreceiver.h,4525
#define _WALRECEIVER_H13,372
#define MAXCONNINFO	36,951
#define AllowCascadeReplication(39,1064
	WALRCV_STOPPED,46,1198
	WALRCV_STARTING,47,1259
	WALRCV_STREAMING,49,1345
	WALRCV_WAITING,50,1397
	WALRCV_RESTARTING,51,1461
	WALRCV_STOPPING	52,1516
} WalRcvState;53,1579
	pid_t		pid;63,1836
	WalRcvState walRcvState;64,1849
	pg_time_t	startTime;65,1875
	XLogRecPtr	receiveStart;73,2136
	TimeLineID	receiveStartTLI;74,2162
	XLogRecPtr	flushedUpto;83,2512
	TimeLineID	receivedTLI;84,2537
	XLogRecPtr	latestChunkStart;92,2839
	TimestampTz lastMsgSendTime;97,2933
	TimestampTz lastMsgReceiptTime;98,2963
	XLogRecPtr	latestWalEnd;103,3051
	TimestampTz latestWalEndTime;104,3077
	char		conninfo[conninfo110,3241
	char		sender_host[sender_host116,3415
	int			sender_port;117,3447
	char		slotname[slotname123,3565
	bool		is_temp_slot;129,3693
	bool		ready_to_display;132,3787
	Latch	   *latch;latch141,4165
	slock_t		mutex;143,4184
	pg_atomic_uint64 writtenUpto;151,4485
	sig_atomic_t force_reply;158,4712
} WalRcvData;159,4760
	bool		logical;165,4820
	char	   *slotname;slotname167,4925
	XLogRecPtr	startpoint;168,4990
			TimeLineID	startpointTLI;174,5068
		}			physical;175,5121
			uint32		proto_version;178,5150
			List	   *publication_names;publication_names179,5207
			bool		binary;180,5272
		}			logical;181,5323
	}			proto;182,5338
} WalRcvStreamOptions;183,5350
typedef struct WalReceiverConn WalReceiverConn;186,5398
	WALRCV_ERROR,195,5566
	WALRCV_OK_COMMAND,196,5632
	WALRCV_OK_TUPLES,198,5718
	WALRCV_OK_COPY_IN,199,5768
	WALRCV_OK_COPY_OUT,200,5821
	WALRCV_OK_COPY_BOTH	201,5873
} WalRcvExecStatus;203,5959
typedef struct WalRcvExecResult209,6078
	WalRcvExecStatus status;211,6112
	char	   *err;err212,6138
	Tuplestorestate *tuplestore;tuplestore213,6153
	TupleDesc	tupledesc;214,6183
} WalRcvExecResult;215,6205
typedef WalReceiverConn *(*walrcv_connect_fn)walrcv_connect_fn230,6754
typedef void (*walrcv_check_conninfo_fn)walrcv_check_conninfo_fn240,7020
typedef char *(*walrcv_get_conninfo_fn)walrcv_get_conninfo_fn248,7235
typedef void (*walrcv_get_senderinfo_fn)walrcv_get_senderinfo_fn257,7500
typedef char *(*walrcv_identify_system_fn)walrcv_identify_system_fn268,7868
typedef int (*walrcv_server_version_fn)walrcv_server_version_fn276,8070
typedef void (*walrcv_readtimelinehistoryfile_fn)walrcv_readtimelinehistoryfile_fn285,8366
typedef bool (*walrcv_startstreaming_fn)walrcv_startstreaming_fn299,8850
typedef void (*walrcv_endstreaming_fn)walrcv_endstreaming_fn308,9137
typedef int (*walrcv_receive_fn)walrcv_receive_fn319,9566
typedef void (*walrcv_send_fn)walrcv_send_fn329,9790
typedef char *(*walrcv_create_slot_fn)walrcv_create_slot_fn343,10329
typedef pid_t (*walrcv_get_backend_pid_fn)walrcv_get_backend_pid_fn354,10613
typedef WalRcvExecResult *(*walrcv_exec_fn)walrcv_exec_fn364,10948
typedef void (*walrcv_disconnect_fn)walrcv_disconnect_fn374,11181
typedef struct WalReceiverFunctionsType376,11244
	walrcv_connect_fn walrcv_connect;378,11286
	walrcv_check_conninfo_fn walrcv_check_conninfo;379,11321
	walrcv_get_conninfo_fn walrcv_get_conninfo;380,11370
	walrcv_get_senderinfo_fn walrcv_get_senderinfo;381,11415
	walrcv_identify_system_fn walrcv_identify_system;382,11464
	walrcv_server_version_fn walrcv_server_version;383,11515
	walrcv_readtimelinehistoryfile_fn walrcv_readtimelinehistoryfile;384,11564
	walrcv_startstreaming_fn walrcv_startstreaming;385,11631
	walrcv_endstreaming_fn walrcv_endstreaming;386,11680
	walrcv_receive_fn walrcv_receive;387,11725
	walrcv_send_fn walrcv_send;388,11760
	walrcv_create_slot_fn walrcv_create_slot;389,11789
	walrcv_get_backend_pid_fn walrcv_get_backend_pid;390,11832
	walrcv_exec_fn walrcv_exec;391,11883
	walrcv_disconnect_fn walrcv_disconnect;392,11912
} WalReceiverFunctionsType;393,11953
#define walrcv_connect(397,12050
#define walrcv_check_conninfo(399,12179
#define walrcv_get_conninfo(401,12276
#define walrcv_get_senderinfo(403,12361
#define walrcv_identify_system(405,12502
#define walrcv_server_version(407,12619
#define walrcv_readtimelinehistoryfile(409,12708
#define walrcv_startstreaming(411,12875
#define walrcv_endstreaming(413,12982
#define walrcv_receive(415,13087
#define walrcv_send(417,13196
#define walrcv_create_slot(419,13297
#define walrcv_get_backend_pid(421,13466
#define walrcv_exec(423,13557
#define walrcv_disconnect(425,13680
walrcv_clear_result(429,13781
extern void WalReceiverMain(447,14087

/home/seinoyu/pgsql/master/postgresql/src/include/replication/walsender_private.h,904
#define _WALSENDER_PRIVATE_H13,395
typedef enum WalSndState22,589
	WALSNDSTATE_STARTUP 24,616
	WALSNDSTATE_BACKUP,25,642
	WALSNDSTATE_CATCHUP,26,663
	WALSNDSTATE_STREAMING,27,685
	WALSNDSTATE_STOPPING28,709
} WalSndState;29,731
typedef struct WalSnd39,1111
	pid_t		pid;41,1135
	WalSndState state;43,1198
	XLogRecPtr	sentPtr;44,1249
	bool		needreload;45,1312
	XLogRecPtr	write;53,1567
	XLogRecPtr	flush;54,1586
	XLogRecPtr	apply;55,1605
	TimeOffset	writeLag;58,1676
	TimeOffset	flushLag;59,1698
	TimeOffset	applyLag;60,1720
	int			sync_standby_priority;66,1881
	slock_t		mutex;69,1958
	Latch	   *latch;latch75,2130
	TimestampTz replyTime;80,2215
} WalSnd;81,2239
	SHM_QUEUE	SyncRepQueue[SyncRepQueue92,2466
	XLogRecPtr	lsn[lsn98,2661
	bool		sync_standbys_defined;105,2882
	WalSnd		walsnds[walsnds107,2913
} WalSndCtlData;108,2954
extern void replication_yyerror(121,3232

/home/seinoyu/pgsql/master/postgresql/src/include/replication/output_plugin.h,1423
#define OUTPUT_PLUGIN_H10,318
typedef enum OutputPluginOutputType17,445
	OUTPUT_PLUGIN_BINARY_OUTPUT,19,483
	OUTPUT_PLUGIN_TEXTUAL_OUTPUT20,513
} OutputPluginOutputType;21,543
typedef struct OutputPluginOptions26,639
	OutputPluginOutputType output_type;28,676
	bool		receive_rewrites;29,713
} OutputPluginOptions;30,738
typedef void (*LogicalOutputPluginInit)LogicalOutputPluginInit36,896
typedef void (*LogicalDecodeStartupCB)LogicalDecodeStartupCB45,1232
typedef void (*LogicalDecodeBeginCB)LogicalDecodeBeginCB53,1471
typedef void (*LogicalDecodeChangeCB)LogicalDecodeChangeCB59,1657
typedef void (*LogicalDecodeTruncateCB)LogicalDecodeTruncateCB67,1908
typedef void (*LogicalDecodeCommitCB)LogicalDecodeCommitCB76,2207
typedef void (*LogicalDecodeMessageCB)LogicalDecodeMessageCB83,2414
typedef bool (*LogicalDecodeFilterByOriginCB)LogicalDecodeFilterByOriginCB94,2715
typedef void (*LogicalDecodeShutdownCB)LogicalDecodeShutdownCB100,2884
typedef struct OutputPluginCallbacks105,2997
	LogicalDecodeStartupCB startup_cb;107,3036
	LogicalDecodeBeginCB begin_cb;108,3072
	LogicalDecodeChangeCB change_cb;109,3104
	LogicalDecodeTruncateCB truncate_cb;110,3138
	LogicalDecodeCommitCB commit_cb;111,3176
	LogicalDecodeMessageCB message_cb;112,3210
	LogicalDecodeFilterByOriginCB filter_by_origin_cb;113,3246
	LogicalDecodeShutdownCB shutdown_cb;114,3298
} OutputPluginCallbacks;115,3336

/home/seinoyu/pgsql/master/postgresql/src/include/rewrite/rewriteRemove.h,31
#define REWRITEREMOVE_H15,401

/home/seinoyu/pgsql/master/postgresql/src/include/rewrite/rowsecurity.h,544
#define ROWSECURITY_H14,486
typedef struct RowSecurityPolicy20,593
	char	   *policy_name;policy_name22,628
	char		polcmd;23,676
	ArrayType  *roles;roles24,729
	bool		permissive;25,786
	Expr	   *qual;qual26,845
	Expr	   *with_check_qual;with_check_qual27,895
	bool		hassublinks;28,961
} RowSecurityPolicy;29,1021
typedef struct RowSecurityDesc31,1043
	MemoryContext rscxt;33,1076
	List	   *policies;policies34,1133
} RowSecurityDesc;35,1190
typedef List *(*row_security_policy_hook_type)row_security_policy_hook_type37,1210

/home/seinoyu/pgsql/master/postgresql/src/include/rewrite/rewriteHandler.h,32
#define REWRITEHANDLER_H15,443

/home/seinoyu/pgsql/master/postgresql/src/include/rewrite/rewriteDefine.h,170
#define REWRITEDEFINE_H15,401
#define RULE_FIRES_ON_ORIGIN	21,520
#define RULE_FIRES_ALWAYS	22,553
#define RULE_FIRES_ON_REPLICA	23,584
#define RULE_DISABLED	24,618

/home/seinoyu/pgsql/master/postgresql/src/include/rewrite/rewriteManip.h,615
#define REWRITEMANIP_H15,454
typedef struct replace_rte_variables_context replace_rte_variables_context;22,567
typedef Node *(*replace_rte_variables_callback)replace_rte_variables_callback24,644
struct replace_rte_variables_context27,758
	replace_rte_variables_callback callback;29,797
	void	   *callback_arg;callback_arg30,863
	int			target_varno;31,928
	int			sublevels_up;32,979
	bool		inserted_sublink;33,1030
typedef enum ReplaceVarsNoMatchOption36,1093
	REPLACEVARS_REPORT_ERROR,38,1133
	REPLACEVARS_CHANGE_VARNO,39,1190
	REPLACEVARS_SUBSTITUTE_NULL 40,1260
} ReplaceVarsNoMatchOption;41,1321

/home/seinoyu/pgsql/master/postgresql/src/include/rewrite/prs2lock.h,348
#define PRS2LOCK_H14,450
typedef struct RewriteRule24,590
	Oid			ruleId;26,619
	CmdType		event;27,634
	Node	   *qual;qual28,651
	List	   *actions;actions29,667
	char		enabled;30,686
	bool		isInstead;31,702
} RewriteRule;32,720
typedef struct RuleLock40,948
	int			numLocks;42,974
	RewriteRule **rules;rules43,991
} RuleLock;44,1013

/home/seinoyu/pgsql/master/postgresql/src/include/rewrite/rewriteSupport.h,67
#define REWRITESUPPORT_H15,404
#define ViewSelectRuleName	18,487

/home/seinoyu/pgsql/master/postgresql/src/include/getopt_long.h,247
#define GETOPT_LONG_H10,250
struct option16,325
	const char *name;name18,341
	int			has_arg;19,360
	int		   *flag;flag20,376
	int			val;21,392
#define no_argument 24,408
#define required_argument 25,430
#define optional_argument 26,458

/home/seinoyu/pgsql/master/postgresql/src/include/tcop/fastpath.h,26
#define FASTPATH_H14,380

/home/seinoyu/pgsql/master/postgresql/src/include/tcop/cmdtaglist.h,18
PG_CMDTAG(27,947

/home/seinoyu/pgsql/master/postgresql/src/include/tcop/cmdtag.h,332
#define CMDTAG_H14,427
#define PG_CMDTAG(17,446
typedef enum CommandTag20,508
	COMMAND_TAG_NEXTTAG23,563
} CommandTag;24,584
#undef PG_CMDTAG26,599
typedef struct QueryCompletion28,617
	CommandTag	commandTag;30,650
	uint64		nprocessed;31,674
} QueryCompletion;32,695
SetQueryCompletion(36,735
CopyQueryCompletion(44,908

/home/seinoyu/pgsql/master/postgresql/src/include/tcop/dest.h,636
#define DEST_H68,3157
#define COMPLETION_TAG_BUFSIZE	75,3284
	DestNone,89,3704
	DestDebug,90,3747
	DestRemote,91,3800
	DestRemoteExecute,92,3856
	DestRemoteSimple,93,3921
	DestSPI,94,3986
	DestTuplestore,95,4034
	DestIntoRel,96,4087
	DestCopyOut,97,4149
	DestSQLFunction,98,4201
	DestTransientRel,99,4265
	DestTupleQueue	100,4327
} CommandDest;101,4380
typedef struct _DestReceiver DestReceiver;114,4914
struct _DestReceiver116,4958
	bool		(*receiveSlot)receiveSlot119,5024
	void		(*rStartup)rStartup122,5151
	void		(*rShutdown)rShutdown125,5243
	void		(*rDestroy)rDestroy127,5354
	CommandDest mydest;129,5437

/home/seinoyu/pgsql/master/postgresql/src/include/tcop/pquery.h,24
#define PQUERY_H15,404

/home/seinoyu/pgsql/master/postgresql/src/include/tcop/tcopprot.h,200
#define TCOPPROT_H15,412
#define STACK_DEPTH_SLOP 26,689
	LOGSTMT_NONE,37,923
	LOGSTMT_DDL,38,965
	LOGSTMT_MOD,39,1019
	LOGSTMT_ALL	40,1080
} LogStmtLevel;41,1122
extern void quickdie(66,2078

/home/seinoyu/pgsql/master/postgresql/src/include/tcop/deparse_utility.h,1393
#define DEPARSE_UTILITY_H13,398
typedef enum CollectedCommandType24,608
	SCT_Simple,26,644
	SCT_AlterTable,27,657
	SCT_Grant,28,674
	SCT_AlterOpFamily,29,686
	SCT_AlterDefaultPrivileges,30,706
	SCT_CreateOpClass,31,735
	SCT_AlterTSConfig32,755
} CollectedCommandType;33,774
typedef struct CollectedATSubcmd38,878
	ObjectAddress address;40,913
	Node	   *parsetree;parsetree41,984
} CollectedATSubcmd;42,1005
typedef struct CollectedCommand44,1027
	CollectedCommandType type;46,1061
	bool		in_extension;48,1090
	Node	   *parsetree;parsetree49,1111
			ObjectAddress address;56,1178
			ObjectAddress secondaryObject;57,1204
		}			simple;58,1238
			Oid			objectId;63,1313
			Oid			classId;64,1332
			List	   *subcmds;subcmds65,1350
		}			alterTable;66,1371
			InternalGrant *istmt;istmt71,1426
		}			grant;72,1451
			ObjectAddress address;77,1508
			List	   *operators;operators78,1534
			List	   *procedures;procedures79,1557
		}			opfam;80,1581
			ObjectAddress address;85,1638
			List	   *operators;operators86,1664
			List	   *procedures;procedures87,1687
		}			createopc;88,1711
			ObjectAddress address;93,1805
			Oid		   *dictIds;dictIds94,1831
			int			ndicts;95,1852
		}			atscfg;96,1869
			ObjectType	objtype;101,1930
		}			defprivs;102,1953
	}			d;103,1969
	struct CollectedCommand *parent;parent105,1978
} CollectedCommand;106,2030

/home/seinoyu/pgsql/master/postgresql/src/include/tcop/utility.h,780
#define UTILITY_H15,408
	PROCESS_UTILITY_TOPLEVEL,22,495
	PROCESS_UTILITY_QUERY,23,557
	PROCESS_UTILITY_QUERY_NONATOMIC,24,623
	PROCESS_UTILITY_SUBCOMMAND	26,722
} ProcessUtilityContext;27,777
typedef struct AlterTableUtilityContext30,853
	PlannedStmt *pstmt;pstmt32,895
	const char *queryString;queryString33,966
	Oid			relid;34,1015
	ParamListInfo params;35,1065
	QueryEnvironment *queryEnv;queryEnv36,1135
} AlterTableUtilityContext;37,1208
#define COMMAND_OK_IN_READ_ONLY_TXN	56,1997
#define COMMAND_OK_IN_PARALLEL_MODE	57,2040
#define	COMMAND_OK_IN_RECOVERY	58,2083
#define COMMAND_IS_STRICTLY_READ_ONLY 65,2313
#define COMMAND_IS_NOT_READ_ONLY	68,2443
typedef void (*ProcessUtility_hook_type)ProcessUtility_hook_type71,2537
CreateCommandName(99,3660

/home/seinoyu/pgsql/master/postgresql/src/include/mb/stringinfo_mb.h,31
#define STRINGINFO_MB_H13,425

/home/seinoyu/pgsql/master/postgresql/src/include/mb/pg_wchar.h,5702
#define PG_WCHAR_H20,692
typedef unsigned int pg_wchar;25,740
#define MAX_MULTIBYTE_CHAR_LEN	30,850
#define SS2 35,922
#define SS3 36,973
#define ISSJISHEAD(41,1058
#define ISSJISTAIL(42,1143
#define LC_ISO8859_1	102,3884
#define LC_ISO8859_2	103,3933
#define LC_ISO8859_3	104,3982
#define LC_ISO8859_4	105,4031
#define LC_TIS620	106,4080
#define LC_ISO8859_7	107,4136
#define LC_ISO8859_6	108,4195
#define LC_ISO8859_8	109,4255
#define LC_JISX0201K	110,4315
#define LC_JISX0201R	111,4369
#define LC_KOI8_R	116,4574
#define LC_ISO8859_5	117,4621
#define LC_ISO8859_9	118,4671
#define LC_ISO8859_15	119,4740
#define IS_LC1(123,4932
#define LC_JISX0208_1978	129,5128
#define LC_GB2312_80	130,5204
#define LC_JISX0208	131,5245
#define LC_KS5601	132,5306
#define LC_JISX0212	133,5344
#define LC_CNS11643_1	134,5405
#define LC_CNS11643_2	135,5462
#define LC_JISX0213_1	136,5519
#define LC_BIG5_1	138,5617
#define LC_BIG5_2	140,5704
#define IS_LC2(144,5852
#define LCPRV1_A	150,6073
#define LCPRV1_B	151,6096
#define IS_LCPRV1(152,6119
#define IS_LCPRV1_A_RANGE(153,6207
#define IS_LCPRV1_B_RANGE(155,6298
#define LCPRV2_A	162,6531
#define LCPRV2_B	163,6554
#define IS_LCPRV2(164,6577
#define IS_LCPRV2_A_RANGE(165,6665
#define IS_LCPRV2_B_RANGE(167,6756
#define LC_SISHENG	173,6916
#define LC_IPA	175,7021
#define LC_VISCII_LOWER	177,7119
#define LC_VISCII_UPPER	179,7215
#define LC_ARABIC_DIGIT	181,7311
#define LC_ARABIC_1_COLUMN	182,7376
#define LC_ASCII_RIGHT_TO_LEFT	183,7446
#define LC_LAO	186,7590
#define LC_ARABIC_2_COLUMN	188,7684
#define LC_INDIAN_1_COLUMN	193,7821
#define LC_TIBETAN_1_COLUMN 195,7928
#define LC_UNICODE_SUBSET_2 197,8025
#define LC_UNICODE_SUBSET_3 199,8140
#define LC_UNICODE_SUBSET	201,8255
#define LC_ETHIOPIC	203,8368
#define LC_CNS11643_3	204,8437
#define LC_CNS11643_4	205,8494
#define LC_CNS11643_5	206,8551
#define LC_CNS11643_6	207,8608
#define LC_CNS11643_7	208,8665
#define LC_INDIAN_2_COLUMN	209,8722
#define LC_TIBETAN	211,8829
typedef enum pg_enc238,9777
	PG_SQL_ASCII 240,9799
	PG_EUC_JP,241,9836
	PG_EUC_CN,242,9875
	PG_EUC_KR,243,9913
	PG_EUC_TW,244,9950
	PG_EUC_JIS_2004,245,9987
	PG_UTF8,246,10026
	PG_MULE_INTERNAL,247,10059
	PG_LATIN1,248,10105
	PG_LATIN2,249,10146
	PG_LATIN3,250,10187
	PG_LATIN4,251,10228
	PG_LATIN5,252,10269
	PG_LATIN6,253,10310
	PG_LATIN7,254,10351
	PG_LATIN8,255,10392
	PG_LATIN9,256,10433
	PG_LATIN10,257,10474
	PG_WIN1256,258,10517
	PG_WIN1258,259,10553
	PG_WIN866,260,10589
	PG_WIN874,261,10626
	PG_KOI8R,262,10660
	PG_WIN1251,263,10688
	PG_WIN1252,264,10724
	PG_ISO_8859_5,265,10760
	PG_ISO_8859_6,266,10796
	PG_ISO_8859_7,267,10832
	PG_ISO_8859_8,268,10868
	PG_WIN1250,269,10904
	PG_WIN1253,270,10940
	PG_WIN1254,271,10976
	PG_WIN1255,272,11012
	PG_WIN1257,273,11048
	PG_KOI8U,274,11084
	PG_SJIS,278,11213
	PG_BIG5,279,11257
	PG_GBK,280,11296
	PG_UHC,281,11334
	PG_GB18030,282,11372
	PG_JOHAB,283,11403
	PG_SHIFT_JIS_2004,284,11445
	_PG_LAST_ENCODING_	285,11488
} pg_enc;287,11527
#define PG_ENCODING_BE_LAST 289,11538
#define PG_VALID_BE_ENCODING(295,11669
#define PG_ENCODING_IS_CLIENT_ONLY(298,11756
#define PG_VALID_ENCODING(301,11864
#define PG_VALID_FE_ENCODING(305,11985
#define MAX_CONVERSION_GROWTH 316,12457
#define MAX_UNICODE_EQUIVALENT_STRING	325,12846
typedef struct pg_enc2name335,13144
	const char *name;name337,13173
	pg_enc		encoding;338,13192
	unsigned	codepage;340,13224
} pg_enc2name;342,13277
typedef struct pg_enc2gettext349,13375
	pg_enc		encoding;351,13407
	const char *name;name352,13426
} pg_enc2gettext;353,13445
typedef int (*mb2wchar_with_len_converter)mb2wchar_with_len_converter360,13540
typedef int (*wchar2mb_with_len_converter)wchar2mb_with_len_converter364,13658
typedef int (*mblen_converter)mblen_converter368,13776
typedef int (*mbdisplaylen_converter)mbdisplaylen_converter370,13838
typedef bool (*mbcharacter_incrementer)mbcharacter_incrementer372,13907
typedef int (*mbverifier)mbverifier374,13981
	mb2wchar_with_len_converter mb2wchar_with_len;378,14064
	wchar2mb_with_len_converter wchar2mb_with_len;380,14172
	mblen_converter mblen;382,14280
	mbdisplaylen_converter dsplen;383,14337
	mbverifier	mbverify;384,14403
	int			maxmblen;385,14458
} pg_wchar_tbl;386,14520
	const uint16 *chars16;chars16436,16689
	const uint32 *chars32;chars32437,16713
	uint32		b1root;440,16774
	uint8		b1_lower;441,16841
	uint8		b1_upper;442,16908
	uint32		b2root;445,17012
	uint8		b2_1_lower;446,17064
	uint8		b2_1_upper;447,17132
	uint8		b2_2_lower;448,17152
	uint8		b2_2_upper;449,17220
	uint32		b3root;452,17277
	uint8		b3_1_lower;453,17329
	uint8		b3_1_upper;454,17397
	uint8		b3_2_lower;455,17417
	uint8		b3_2_upper;456,17485
	uint8		b3_3_lower;457,17505
	uint8		b3_3_upper;458,17573
	uint32		b4root;461,17630
	uint8		b4_1_lower;462,17682
	uint8		b4_1_upper;463,17750
	uint8		b4_2_lower;464,17770
	uint8		b4_2_upper;465,17838
	uint8		b4_3_lower;466,17858
	uint8		b4_3_upper;467,17926
	uint8		b4_4_lower;468,17946
	uint8		b4_4_upper;469,18014
} pg_mb_radix_tree;471,18035
	uint32		utf1;478,18144
	uint32		utf2;479,18180
	uint32		code;480,18216
} pg_utf_to_local_combined;481,18250
	uint32		code;488,18367
	uint32		utf1;489,18401
	uint32		utf2;490,18437
} pg_local_to_utf_combined;491,18473
typedef uint32 (*utf_local_conversion_func)utf_local_conversion_func498,18662
#define CHECK_ENCODING_CONVERSION_ARGS(506,18962
is_valid_unicode_codepoint(518,19284
is_utf16_surrogate_first(524,19381
is_utf16_surrogate_second(530,19480
surrogate_pair_to_codepoint(536,19584
extern void report_invalid_encoding(651,24452

/home/seinoyu/pgsql/master/postgresql/src/include/port.h,1894
#define PG_PORT_H14,414
typedef int pgsocket;31,785
#define PGINVALID_SOCKET 33,808
typedef SOCKET pgsocket;35,844
#define PGINVALID_SOCKET 37,870
#define IS_DIR_SEP(84,2920
#define is_absolute_path(86,2958
#define IS_DIR_SEP(91,3036
#define is_absolute_path(94,3160
#define PG_BACKEND_VERSIONSTR 112,3840
#define EXE 116,3955
#define EXE 118,3980
#define DEVNULL 122,4046
#define DEVNULL 124,4074
#define USE_REPL_SNPRINTF 143,4819
#undef vsnprintf151,5067
#undef snprintf154,5107
#undef vsprintf157,5146
#undef sprintf160,5184
#undef vfprintf163,5222
#undef fprintf166,5260
#undef vprintf169,5297
#undef printf172,5333
extern int	pg_snprintf(176,5436
#define vsnprintf	192,6379
#define snprintf	193,6411
#define vsprintf	194,6441
#define sprintf	195,6471
#define vfprintf	196,6500
#define fprintf	197,6530
#define vprintf	198,6559
#define printf(199,6588
#define strerror 206,6860
#define strerror_r 210,7025
#define PG_STRERROR_R_BUFLEN 211,7058
#define TIMEZONE_GLOBAL 224,7515
#define TZNAME_GLOBAL 225,7549
#define TIMEZONE_GLOBAL 227,7585
#define TZNAME_GLOBAL 228,7618
#define rename(243,7977
#define unlink(244,8022
#define symlink(261,8707
#define readlink(262,8769
#define		O_DIRECT	273,9052
#define		open(276,9185
#define		fopen(277,9226
#undef popen285,9490
#undef pclose288,9524
#define system(298,9760
#define popen(299,9796
#define pclose(300,9834
#define closesocket 313,10196
#define PG_IOLBF	325,10680
#define PG_IOLBF	327,10710
#define pgoff_t 337,10995
#undef isinf367,11971
#define isinf 368,11984
#define strtof(382,12351
#define pg_pread 405,12903
#define pg_pwrite 411,13031
#define RTLD_NOW 452,13957
#define RTLD_GLOBAL 460,14157
#define qsort(479,14681
typedef int (*qsort_arg_comparator)qsort_arg_comparator481,14723
#define pg_backend_random 504,15432
typedef void (*pqsigfunc)pqsigfunc513,15634

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/params.h,1229
#define PARAMS_H15,440
#define PARAM_FLAG_CONST	88,3863
typedef struct ParamExternData90,3924
	Datum		value;92,3957
	bool		isnull;93,3996
	uint16		pflags;94,4031
	Oid			ptype;95,4077
} ParamExternData;96,4126
typedef struct ParamListInfoData *ParamListInfo;ParamListInfo98,4146
typedef ParamExternData *(*ParamFetchHook)ParamFetchHook100,4196
typedef void (*ParamCompileHook)ParamCompileHook104,4345
typedef void (*ParserSetupHook)ParserSetupHook108,4497
typedef struct ParamListInfoData110,4570
	ParamFetchHook paramFetch;112,4605
	void	   *paramFetchArg;paramFetchArg113,4660
	ParamCompileHook paramCompile;114,4685
	void	   *paramCompileArg;paramCompileArg115,4746
	ParserSetupHook parserSetup;116,4773
	void	   *parserSetupArg;parserSetupArg117,4827
	char	   *paramValuesStr;paramValuesStr118,4853
	int			numParams;119,4922
	ParamExternData params[params125,5105
}			ParamListInfoData;126,5153
typedef struct ParamExecData146,5880
	void	   *execPlan;execPlan148,5911
	Datum		value;149,5965
	bool		isnull;150,5980
} ParamExecData;151,5995
typedef struct ParamsErrorCbData154,6060
	const char *portalName;portalName156,6095
	ParamListInfo params;157,6120
} ParamsErrorCbData;158,6143

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/supportnodes.h,1471
#define SUPPORTNODES_H34,1563
typedef struct SupportRequestSimplify64,2880
	NodeTag		type;66,2920
	struct PlannerInfo *root;root68,2937
	FuncExpr   *fcall;fcall69,2995
} SupportRequestSimplify;70,3054
typedef struct SupportRequestSelectivity91,4034
	NodeTag		type;93,4077
	struct PlannerInfo *root;root96,4115
	Oid			funcid;97,4173
	List	   *args;args98,4228
	Oid			inputcollid;99,4289
	bool		is_join;100,4342
	int			varRelid;101,4401
	JoinType	jointype;102,4464
	struct SpecialJoinInfo *sjinfo;sjinfo103,4516
	Selectivity selectivity;106,4609
} SupportRequestSelectivity;107,4671
typedef struct SupportRequestCost131,5998
	NodeTag		type;133,6034
	struct PlannerInfo *root;root136,6072
	Oid			funcid;137,6146
	Node	   *node;node138,6201
	Cost		startup;141,6286
	Cost		per_tuple;142,6323
} SupportRequestCost;143,6368
typedef struct SupportRequestRows158,6945
	NodeTag		type;160,6981
	struct PlannerInfo *root;root163,7019
	Oid			funcid;164,7093
	Node	   *node;node165,7148
	double		rows;168,7224
} SupportRequestRows;169,7286
typedef struct SupportRequestIndexCondition223,10617
	NodeTag		type;225,10663
	struct PlannerInfo *root;root228,10701
	Oid			funcid;229,10759
	Node	   *node;node230,10814
	int			indexarg;231,10867
	struct IndexOptInfo *index;index232,10931
	int			indexcol;233,11000
	Oid			opfamily;234,11063
	Oid			indexcollation;235,11118
	bool		lossy;238,11195
} SupportRequestIndexCondition;240,11304

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/extensible.h,1859
#define EXTENSIBLE_H15,442
#define EXTNODENAME_MAX_LEN	24,665
typedef struct ExtensibleNode32,968
	NodeTag		type;34,1000
	const char *extnodename;extnodename35,1016
} ExtensibleNode;36,1084
typedef struct ExtensibleNodeMethods60,2128
	const char *extnodename;extnodename62,2167
	Size		node_size;63,2193
	void		(*nodeCopy)nodeCopy64,2211
	bool		(*nodeEqual)nodeEqual66,2310
	void		(*nodeOut)nodeOut68,2405
	void		(*nodeRead)nodeRead70,2495
} ExtensibleNodeMethods;71,2545
#define CUSTOMPATH_SUPPORT_BACKWARD_SCAN	81,2861
#define CUSTOMPATH_SUPPORT_MARK_RESTORE	82,2909
typedef struct CustomPathMethods88,3061
	const char *CustomName;CustomName90,3096
	struct Plan *(*PlanCustomPath)PlanCustomPath93,3152
	struct List *(*ReparameterizeCustomPathByChild)ReparameterizeCustomPathByChild99,3345
}			CustomPathMethods;102,3488
typedef struct CustomScanMethods108,3645
	const char *CustomName;CustomName110,3680
	Node	   *(*CreateCustomScanState)CreateCustomScanState113,3782
} CustomScanMethods;114,3838
typedef struct CustomExecMethods120,3986
	const char *CustomName;CustomName122,4021
	void		(*BeginCustomScan)BeginCustomScan125,4080
	TupleTableSlot *(*ExecCustomScan)ExecCustomScan128,4177
	void		(*EndCustomScan)EndCustomScan129,4237
	void		(*ReScanCustomScan)ReScanCustomScan130,4286
	void		(*MarkPosCustomScan)MarkPosCustomScan133,4400
	void		(*RestrPosCustomScan)RestrPosCustomScan134,4453
	Size		(*EstimateDSMCustomScan)EstimateDSMCustomScan137,4575
	void		(*InitializeDSMCustomScan)InitializeDSMCustomScan139,4667
	void		(*ReInitializeDSMCustomScan)ReInitializeDSMCustomScan142,4789
	void		(*InitializeWorkerCustomScan)InitializeWorkerCustomScan145,4917
	void		(*ShutdownCustomScan)ShutdownCustomScan148,5039
	void		(*ExplainCustomScan)ExplainCustomScan151,5151
} CustomExecMethods;154,5261

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/plannodes.h,14654
#define PLANNODES_H15,422
typedef struct PlannedStmt42,1296
	NodeTag		type;44,1325
	CmdType		commandType;46,1342
	uint64		queryId;48,1408
	bool		hasReturning;50,1471
	bool		hasModifyingCTE;52,1537
	bool		canSetTag;54,1602
	bool		transientPlan;56,1661
	bool		dependsOnRole;58,1730
	bool		parallelModeNeeded;60,1793
	int			jitFlags;62,1862
	struct Plan *planTree;planTree64,1926
	List	   *rtable;rtable66,1977
	List	   *resultRelations;resultRelations69,2099
	List	   *rootResultRelations;rootResultRelations75,2286
	List	   *appendRelations;appendRelations77,2318
	List	   *subplans;subplans79,2380
	Bitmapset  *rewindPlanIDs;rewindPlanIDs82,2484
	List	   *rowMarks;rowMarks84,2559
	List	   *relationOids;relationOids86,2611
	List	   *invalItems;invalItems88,2680
	List	   *paramExecTypes;paramExecTypes90,2748
	Node	   *utilityStmt;utilityStmt92,2813
	int			stmt_location;95,2939
	int			stmt_len;96,3000
} PlannedStmt;97,3066
#define exec_subplan_get_plan(100,3147
typedef struct Plan116,3727
	NodeTag		type;118,3749
	Cost		startup_cost;123,3845
	Cost		total_cost;124,3913
	double		plan_rows;129,4046
	int			plan_width;130,4113
	bool		parallel_aware;135,4218
	bool		parallel_safe;136,4276
	int			plan_node_id;141,4397
	List	   *targetlist;targetlist142,4461
	List	   *qual;qual143,4530
	struct Plan *lefttree;lefttree144,4587
	struct Plan *righttree;righttree145,4637
	List	   *initPlan;initPlan146,4662
	Bitmapset  *extParam;extParam160,5248
	Bitmapset  *allParam;allParam161,5271
} Plan;162,5294
#define innerPlan(171,5593
#define outerPlan(172,5649
typedef struct Result186,6127
	Plan		plan;188,6151
	Node	   *resconstantqual;resconstantqual189,6164
} Result;190,6191
typedef struct ProjectSet198,6373
	Plan		plan;200,6401
} ProjectSet;201,6414
typedef struct ModifyTable218,7106
	Plan		plan;220,7135
	CmdType		operation;221,7148
	bool		canSetTag;222,7202
	Index		nominalRelation;223,7267
	Index		rootRelation;224,7333
	bool		partColsUpdated;225,7401
	List	   *resultRelations;resultRelations226,7466
	int			resultRelIndex;227,7526
	int			rootResultRelIndex;228,7595
	List	   *plans;plans229,7664
	List	   *withCheckOptionLists;withCheckOptionLists230,7719
	List	   *returningLists;returningLists231,7784
	List	   *fdwPrivLists;fdwPrivLists232,7850
	Bitmapset  *fdwDirectModifyPlans;fdwDirectModifyPlans233,7920
	List	   *rowMarks;rowMarks234,7985
	int			epqParam;235,8044
	OnConflictAction onConflictAction;236,8105
	List	   *arbiterIndexes;arbiterIndexes237,8166
	List	   *onConflictSet;onConflictSet238,8238
	Node	   *onConflictWhere;onConflictWhere239,8306
	Index		exclRelRTI;240,8368
	List	   *exclRelTlist;exclRelTlist241,8431
} ModifyTable;242,8499
typedef struct Append251,8706
	Plan		plan;253,8730
	Bitmapset  *apprelids;apprelids254,8743
	List	   *appendplans;appendplans255,8815
	int			first_partial_plan;261,8979
	struct PartitionPruneInfo *part_prune_info;part_prune_info264,9078
} Append;265,9123
typedef struct MergeAppend272,9273
	Plan		plan;274,9302
	Bitmapset  *apprelids;apprelids275,9315
	List	   *mergeplans;mergeplans276,9387
	int			numCols;278,9477
	AttrNumber *sortColIdx;sortColIdx279,9527
	Oid		   *sortOperators;sortOperators280,9592
	Oid		   *collations;collations281,9657
	bool	   *nullsFirst;nullsFirst282,9705
	struct PartitionPruneInfo *part_prune_info;part_prune_info284,9833
} MergeAppend;285,9878
typedef struct RecursiveUnion295,10121
	Plan		plan;297,10153
	int			wtParam;298,10166
	int			numCols;300,10281
	AttrNumber *dupColIdx;dupColIdx302,10361
	Oid		   *dupOperators;dupOperators303,10425
	Oid		   *dupCollations;dupCollations304,10490
	long		numGroups;305,10515
} RecursiveUnion;306,10576
typedef struct BitmapAnd316,10859
	Plan		plan;318,10886
	List	   *bitmapplans;bitmapplans319,10899
} BitmapAnd;320,10922
typedef struct BitmapOr330,11192
	Plan		plan;332,11218
	bool		isshared;333,11231
	List	   *bitmapplans;bitmapplans334,11248
} BitmapOr;335,11271
typedef struct Scan342,11333
	Plan		plan;344,11355
	Index		scanrelid;345,11368
} Scan;346,11430
typedef Scan SeqScan;352,11508
typedef struct SampleScan358,11602
	Scan		scan;360,11630
	struct TableSampleClause *tablesample;tablesample362,11706
} SampleScan;363,11746
typedef struct IndexScan402,13871
	Scan		scan;404,13898
	Oid			indexid;405,13911
	List	   *indexqual;indexqual406,13955
	List	   *indexqualorig;indexqualorig407,14021
	List	   *indexorderby;indexorderby408,14078
	List	   *indexorderbyorig;indexorderbyorig409,14137
	List	   *indexorderbyops;indexorderbyops410,14197
	ScanDirection indexorderdir;411,14266
} IndexScan;412,14336
typedef struct IndexOnlyScan431,15169
	Scan		scan;433,15200
	Oid			indexid;434,15213
	List	   *indexqual;indexqual435,15257
	List	   *indexorderby;indexorderby436,15323
	List	   *indextlist;indextlist437,15382
	ScanDirection indexorderdir;438,15452
} IndexOnlyScan;439,15522
typedef struct BitmapIndexScan458,16256
	Scan		scan;460,16289
	Oid			indexid;461,16302
	bool		isshared;462,16346
	List	   *indexqual;indexqual463,16398
	List	   *indexqualorig;indexqualorig464,16456
} BitmapIndexScan;465,16513
typedef struct BitmapHeapScan476,16872
	Scan		scan;478,16904
	List	   *bitmapqualorig;bitmapqualorig479,16917
} BitmapHeapScan;480,16984
typedef struct TidScan490,17247
	Scan		scan;492,17272
	List	   *tidquals;tidquals493,17285
} TidScan;494,17347
typedef struct SubqueryScan512,18094
	Scan		scan;514,18124
	Plan	   *subplan;subplan515,18137
} SubqueryScan;516,18156
typedef struct FunctionScan522,18239
	Scan		scan;524,18269
	List	   *functions;functions525,18282
	bool		funcordinality;526,18341
} FunctionScan;527,18386
typedef struct ValuesScan533,18467
	Scan		scan;535,18495
	List	   *values_lists;values_lists536,18508
} ValuesScan;537,18563
typedef struct TableFuncScan543,18646
	Scan		scan;545,18677
	TableFunc  *tablefunc;tablefunc546,18690
} TableFuncScan;547,18741
typedef struct CteScan553,18820
	Scan		scan;555,18845
	int			ctePlanId;556,18858
	int			cteParam;557,18910
} CteScan;558,18970
typedef struct NamedTuplestoreScan564,19055
	Scan		scan;566,19092
	char	   *enrname;enrname567,19105
} NamedTuplestoreScan;568,19170
typedef struct WorkTableScan574,19261
	Scan		scan;576,19292
	int			wtParam;577,19305
} WorkTableScan;578,19364
typedef struct ForeignScan612,21188
	Scan		scan;614,21217
	CmdType		operation;615,21230
	Oid			fs_server;616,21286
	List	   *fdw_exprs;fdw_exprs617,21333
	List	   *fdw_private;fdw_private618,21395
	List	   *fdw_scan_tlist;fdw_scan_tlist619,21445
	List	   *fdw_recheck_quals;fdw_recheck_quals620,21514
	Bitmapset  *fs_relids;fs_relids621,21586
	bool		fsSystemCol;622,21645
} ForeignScan;623,21709
typedef struct CustomScan640,22292
	Scan		scan;642,22320
	uint32		flags;643,22333
	List	   *custom_plans;custom_plans645,22419
	List	   *custom_exprs;custom_exprs646,22476
	List	   *custom_private;custom_private647,22548
	List	   *custom_scan_tlist;custom_scan_tlist648,22609
	Bitmapset  *custom_relids;custom_relids649,22681
	const struct CustomScanMethods *methods;methods650,22743
} CustomScan;651,22785
typedef struct Join681,23960
	Plan		plan;683,23982
	JoinType	jointype;684,23995
	bool		inner_unique;685,24015
	List	   *joinqual;joinqual686,24036
} Join;687,24101
typedef struct NestLoop700,24634
	Join		join;702,24660
	List	   *nestParams;nestParams703,24673
} NestLoop;704,24730
typedef struct NestLoopParam706,24743
	NodeTag		type;708,24774
	int			paramno;709,24790
	Var		   *paramval;paramval710,24851
} NestLoopParam;711,24916
typedef struct MergeJoin724,25455
	Join		join;726,25482
	bool		skip_mark_restore;727,25495
	List	   *mergeclauses;mergeclauses728,25559
	Oid		   *mergeFamilies;mergeFamilies730,25698
	Oid		   *mergeCollations;mergeCollations731,25765
	int		   *mergeStrategies;mergeStrategies732,25828
	bool	   *mergeNullsFirst;mergeNullsFirst733,25895
} MergeJoin;734,25954
typedef struct HashJoin740,26031
	Join		join;742,26057
	List	   *hashclauses;hashclauses743,26070
	List	   *hashoperators;hashoperators744,26093
	List	   *hashcollations;hashcollations745,26118
	List	   *hashkeys;hashkeys751,26284
} HashJoin;752,26304
typedef struct Material758,26386
	Plan		plan;760,26412
} Material;761,26425
typedef struct Sort767,26496
	Plan		plan;769,26518
	int			numCols;770,26531
	AttrNumber *sortColIdx;sortColIdx771,26581
	Oid		   *sortOperators;sortOperators772,26646
	Oid		   *collations;collations773,26711
	bool	   *nullsFirst;nullsFirst774,26759
} Sort;775,26816
typedef struct IncrementalSort781,26895
	Sort		sort;783,26928
	int			nPresortedCols;784,26941
} IncrementalSort;785,26998
typedef struct Group793,27210
	Plan		plan;795,27233
	int			numCols;796,27246
	AttrNumber *grpColIdx;grpColIdx797,27296
	Oid		   *grpOperators;grpOperators798,27360
	Oid		   *grpCollations;grpCollations799,27425
} Group;800,27450
typedef struct Agg816,28080
	Plan		plan;818,28101
	AggStrategy aggstrategy;819,28114
	AggSplit	aggsplit;820,28174
	int			numCols;821,28233
	AttrNumber *grpColIdx;grpColIdx822,28283
	Oid		   *grpOperators;grpOperators823,28347
	Oid		   *grpCollations;grpCollations824,28412
	long		numGroups;825,28437
	uint64		transitionSpace;826,28498
	Bitmapset  *aggParams;aggParams827,28562
	List	   *groupingSets;groupingSets829,28707
	List	   *chain;chain830,28758
} Agg;831,28806
typedef struct WindowAgg837,28884
	Plan		plan;839,28911
	Index		winref;840,28924
	int			partNumCols;841,28982
	AttrNumber *partColIdx;partColIdx842,29046
	Oid		   *partOperators;partOperators843,29111
	Oid		   *partCollations;partCollations844,29183
	int			ordNumCols;845,29248
	AttrNumber *ordColIdx;ordColIdx846,29311
	Oid		   *ordOperators;ordOperators847,29375
	Oid		   *ordCollations;ordCollations848,29445
	int			frameOptions;849,29508
	Node	   *startOffset;startOffset850,29571
	Node	   *endOffset;endOffset851,29638
	Oid			startInRangeFunc;853,29770
	Oid			endInRangeFunc;854,29835
	Oid			inRangeColl;855,29896
	bool		inRangeAsc;856,29951
	bool		inRangeNullsFirst;857,30016
} WindowAgg;858,30085
typedef struct Unique864,30159
	Plan		plan;866,30183
	int			numCols;867,30196
	AttrNumber *uniqColIdx;uniqColIdx868,30261
	Oid		   *uniqOperators;uniqOperators869,30326
	Oid		   *uniqCollations;uniqCollations870,30392
} Unique;871,30460
typedef struct Gather884,30976
	Plan		plan;886,31000
	int			num_workers;887,31013
	int			rescan_param;888,31074
	bool		single_copy;889,31142
	bool		invisible;890,31202
	Bitmapset  *initParam;initParam891,31267
} Gather;893,31388
typedef struct GatherMerge899,31457
	Plan		plan;901,31486
	int			num_workers;902,31499
	int			rescan_param;903,31560
	int			numCols;905,31699
	AttrNumber *sortColIdx;sortColIdx906,31749
	Oid		   *sortOperators;sortOperators907,31814
	Oid		   *collations;collations908,31879
	bool	   *nullsFirst;nullsFirst909,31927
	Bitmapset  *initParam;initParam910,31984
} GatherMerge;912,32111
typedef struct Hash922,32411
	Plan		plan;924,32433
	List	   *hashkeys;hashkeys930,32571
	Oid			skewTable;931,32635
	AttrNumber	skewColumn;932,32702
	bool		skewInherit;933,32768
	double		rows_total;935,32886
} Hash;936,32952
typedef struct SetOp942,33020
	Plan		plan;944,33043
	SetOpCmd	cmd;945,33056
	SetOpStrategy strategy;946,33103
	int			numCols;947,33161
	AttrNumber *dupColIdx;dupColIdx949,33241
	Oid		   *dupOperators;dupOperators950,33305
	Oid		   *dupCollations;dupCollations951,33370
	AttrNumber	flagColIdx;952,33395
	int			firstFlag;953,33459
	long		numGroups;954,33520
} SetOp;955,33581
typedef struct LockRows966,33938
	Plan		plan;968,33964
	List	   *rowMarks;rowMarks969,33977
	int			epqParam;970,34028
} LockRows;971,34089
typedef struct Limit980,34285
	Plan		plan;982,34308
	Node	   *limitOffset;limitOffset983,34321
	Node	   *limitCount;limitCount984,34384
	LimitOption limitOption;985,34446
	int			uniqNumCols;986,34489
	AttrNumber *uniqColIdx;uniqColIdx987,34558
	Oid		   *uniqOperators;uniqOperators988,34623
	Oid		   *uniqCollations;uniqCollations989,34689
} Limit;990,34757
typedef enum RowMarkType1023,36649
	ROW_MARK_EXCLUSIVE,1025,36676
	ROW_MARK_NOKEYEXCLUSIVE,1026,36733
	ROW_MARK_SHARE,1027,36800
	ROW_MARK_KEYSHARE,1028,36851
	ROW_MARK_REFERENCE,1029,36906
	ROW_MARK_COPY	1030,36969
} RowMarkType;1031,37023
#define RowMarkRequiresRowShareLock(1033,37039
typedef struct PlanRowMark1074,39422
	NodeTag		type;1076,39451
	Index		rti;1077,39467
	Index		prti;1078,39527
	Index		rowmarkId;1079,39586
	RowMarkType markType;1080,39650
	int			allMarkTypes;1081,39695
	LockClauseStrength strength;1082,39759
	LockWaitPolicy waitPolicy;1083,39833
	bool		isParent;1084,39898
} PlanRowMark;1085,39961
typedef struct PartitionPruneInfo1118,41439
	NodeTag		type;1120,41475
	List	   *prune_infos;prune_infos1121,41491
	Bitmapset  *other_subplans;other_subplans1122,41514
} PartitionPruneInfo;1123,41543
typedef struct PartitionedRelPruneInfo1142,42604
	NodeTag		type;1144,42645
	Index		rtindex;1145,42661
	Bitmapset  *present_parts;present_parts1146,42726
	int			nparts;1148,42840
	int		   *subplan_map;subplan_map1149,42895
	int		   *subpart_map;subpart_map1150,42964
	Oid		   *relid_map;relid_map1151,43033
	List	   *initial_pruning_steps;initial_pruning_steps1159,43390
	List	   *exec_pruning_steps;exec_pruning_steps1160,43456
	Bitmapset  *execparamids;execparamids1161,43519
} PartitionedRelPruneInfo;1163,43610
typedef struct PartitionPruneStep1171,43821
	NodeTag		type;1173,43857
	int			step_id;1174,43873
} PartitionPruneStep;1175,43889
typedef struct PartitionPruneStepOp1204,45436
	PartitionPruneStep step;1206,45474
	StrategyNumber opstrategy;1208,45501
	List	   *exprs;exprs1209,45529
	List	   *cmpfns;cmpfns1210,45546
	Bitmapset  *nullkeys;nullkeys1211,45564
} PartitionPruneStepOp;1212,45587
typedef enum PartitionPruneCombineOp1220,45804
	PARTPRUNE_COMBINE_UNION,1222,45843
	PARTPRUNE_COMBINE_INTERSECT1223,45869
} PartitionPruneCombineOp;1224,45898
typedef struct PartitionPruneStepCombine1226,45926
	PartitionPruneStep step;1228,45969
	PartitionPruneCombineOp combineOp;1230,45996
	List	   *source_stepids;source_stepids1231,46032
} PartitionPruneStepCombine;1232,46058
typedef struct PlanInvalItem1244,46468
	NodeTag		type;1246,46499
	int			cacheId;1247,46515
	uint32		hashValue;1248,46574
} PlanInvalItem;1249,46641

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/value.h,259
#define VALUE_H15,323
typedef struct Value42,1291
	NodeTag		type;44,1314
	union ValUnion45,1371
		int			ival;47,1390
		char	   *str;str48,1427
	}			val;49,1457
} Value;50,1467
#define intVal(52,1477
#define floatVal(53,1523
#define strVal(54,1574

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/replnodes.h,1261
#define REPLNODES_H15,437
typedef enum ReplicationKind20,515
	REPLICATION_KIND_PHYSICAL,22,546
	REPLICATION_KIND_LOGICAL23,574
} ReplicationKind;24,600
typedef struct IdentifySystemCmd31,705
	NodeTag		type;33,740
} IdentifySystemCmd;34,756
typedef struct BaseBackupCmd41,859
	NodeTag		type;43,890
	List	   *options;options44,906
} BaseBackupCmd;45,925
typedef struct CreateReplicationSlotCmd52,1036
	NodeTag		type;54,1078
	char	   *slotname;slotname55,1094
	ReplicationKind kind;56,1114
	char	   *plugin;plugin57,1137
	bool		temporary;58,1155
	List	   *options;options59,1173
} CreateReplicationSlotCmd;60,1192
typedef struct DropReplicationSlotCmd67,1312
	NodeTag		type;69,1352
	char	   *slotname;slotname70,1368
	bool		wait;71,1388
} DropReplicationSlotCmd;72,1401
typedef struct StartReplicationCmd79,1515
	NodeTag		type;81,1552
	ReplicationKind kind;82,1568
	char	   *slotname;slotname83,1591
	TimeLineID	timeline;84,1611
	XLogRecPtr	startpoint;85,1633
	List	   *options;options86,1657
} StartReplicationCmd;87,1676
typedef struct TimeLineHistoryCmd94,1786
	NodeTag		type;96,1822
	TimeLineID	timeline;97,1838
} TimeLineHistoryCmd;98,1860
typedef struct SQLCmd104,1956
	NodeTag		type;106,1980
} SQLCmd;107,1996

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/memnodes.h,1203
#define MEMNODES_H15,428
typedef struct MemoryContextCounters29,922
	Size		nblocks;31,961
	Size		freechunks;32,1014
	Size		totalspace;33,1068
	Size		freespace;34,1128
} MemoryContextCounters;35,1186
typedef void (*MemoryStatsPrintFunc)MemoryStatsPrintFunc54,1808
typedef struct MemoryContextMethods57,1924
	void	   *(*alloc)alloc59,1962
	void		(*free_p)free_p61,2074
	void	   *(*realloc)realloc62,2131
	void		(*reset)reset63,2203
	void		(*delete_context)delete_context64,2244
	Size		(*get_chunk_space)get_chunk_space65,2294
	bool		(*is_empty)is_empty66,2360
	void		(*stats)stats67,2404
	void		(*check)check71,2571
} MemoryContextMethods;73,2619
typedef struct MemoryContextData76,2645
	NodeTag		type;78,2680
	bool		isReset;80,2808
	bool		allowInCritSection;81,2869
	Size		mem_allocated;82,2935
	const MemoryContextMethods *methods;methods83,3003
	MemoryContext parent;84,3070
	MemoryContext firstchild;85,3137
	MemoryContext prevchild;86,3202
	MemoryContext nextchild;87,3264
	const char *name;name88,3322
	const char *ident;ident89,3383
	MemoryContextCallback *reset_cbs;reset_cbs90,3450
} MemoryContextData;91,3522
#define MemoryContextIsValid(102,3756

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/pathnodes.h,26396
#define PATHNODES_H15,459
typedef Bitmapset *Relids;Relids28,698
typedef enum CostSelector34,857
	STARTUP_COST,36,885
	STARTUP_COST, TOTAL_COST36,885
} CostSelector;37,911
typedef struct QualCost43,1051
	Cost		startup;45,1077
	Cost		per_tuple;46,1114
} QualCost;47,1159
typedef struct AggClauseCosts56,1550
	int			numAggs;58,1582
	int			numOrderedAggs;59,1641
	bool		hasNonPartial;60,1711
	bool		hasNonSerial;61,1778
	QualCost	transCost;62,1842
	QualCost	finalCost;63,1906
	Size		transitionSpace;64,1965
} AggClauseCosts;65,2033
typedef enum UpperRelationKind71,2185
	UPPERREL_SETOP,73,2218
	UPPERREL_PARTIAL_GROUP_AGG,74,2285
	UPPERREL_GROUP_AGG,76,2378
	UPPERREL_WINDOW,77,2446
	UPPERREL_DISTINCT,78,2507
	UPPERREL_ORDERED,79,2571
	UPPERREL_FINAL	80,2625
} UpperRelationKind;82,2768
typedef enum InheritanceKind89,2962
	INHKIND_NONE,91,2993
	INHKIND_INHERITED,92,3008
	INHKIND_PARTITIONED93,3028
} InheritanceKind;94,3049
typedef struct PlannerGlobal105,3332
	NodeTag		type;107,3363
	ParamListInfo boundParams;109,3380
	List	   *subplans;subplans111,3450
	List	   *subroots;subroots113,3502
	Bitmapset  *rewindPlanIDs;rewindPlanIDs115,3561
	List	   *finalrtable;finalrtable117,3636
	List	   *finalrowmarks;finalrowmarks119,3697
	List	   *resultRelations;resultRelations121,3757
	List	   *rootResultRelations;rootResultRelations123,3825
	List	   *appendRelations;appendRelations125,3897
	List	   *relationOids;relationOids127,3961
	List	   *invalItems;invalItems129,4030
	List	   *paramExecTypes;paramExecTypes131,4098
	Index		lastPHId;133,4163
	Index		lastRowMarkId;135,4224
	int			lastPlanNodeId;137,4286
	bool		transientPlan;139,4346
	bool		dependsOnRole;141,4415
	bool		parallelModeOK;143,4478
	bool		parallelModeNeeded;145,4538
	char		maxParallelHazard;147,4605
	PartitionDirectory partition_directory;149,4669
} PlannerGlobal;150,4738
#define planner_subplan_get_plan(153,4821
typedef struct PlannerInfo PlannerInfo;171,5501
#define HAVE_PLANNERINFO_TYPEDEF 172,5541
struct PlannerInfo175,5584
	NodeTag		type;177,5605
	Query	   *parse;parse179,5622
	PlannerGlobal *glob;glob181,5673
	Index		query_level;183,5739
	PlannerInfo *parent_root;parent_root185,5792
	List	   *plan_params;plan_params193,6135
	Bitmapset  *outer_params;outer_params194,6201
	struct RelOptInfo **simple_rel_array;simple_rel_array203,6597
	int			simple_rel_array_size;204,6664
	RangeTblEntry **simple_rte_array;simple_rte_array211,6946
	struct AppendRelInfo **append_rel_array;append_rel_array219,7287
	Relids		all_baserels;227,7578
	Relids		nullable_baserels;235,7866
	List	   *join_rel_list;join_rel_list246,8350
	struct HTAB *join_rel_hash;join_rel_hash247,8415
	List	  **join_rel_level;join_rel_level256,8821
	int			join_cur_level;257,8888
	List	   *init_plans;init_plans259,8947
	List	   *cte_plan_ids;cte_plan_ids261,9001
	List	   *multiexpr_params;multiexpr_params263,9065
	List	   *eq_classes;eq_classes266,9167
	bool		ec_merging_done;268,9231
	List	   *canon_pathkeys;canon_pathkeys270,9294
	List	   *left_join_clauses;left_join_clauses272,9356
	List	   *right_join_clauses;right_join_clauses276,9501
	List	   *full_join_clauses;full_join_clauses280,9648
	List	   *join_info_list;join_info_list283,9754
	List	   *append_rel_list;append_rel_list290,10032
	List	   *rowMarks;rowMarks292,10089
	List	   *placeholder_list;placeholder_list294,10138
	List	   *fkey_list;fkey_list296,10198
	List	   *query_pathkeys;query_pathkeys298,10254
	List	   *group_pathkeys;group_pathkeys300,10324
	List	   *window_pathkeys;window_pathkeys301,10385
	List	   *distinct_pathkeys;distinct_pathkeys302,10452
	List	   *sort_pathkeys;sort_pathkeys303,10519
	List	   *part_schemes;part_schemes305,10579
	List	   *initial_rels;initial_rels308,10672
	List	   *upper_rels[upper_rels311,10802
	struct PathTarget *upper_targets[upper_targets314,10948
	List	   *processed_tlist;processed_tlist325,11470
	AttrNumber *grouping_map;grouping_map328,11561
	List	   *minmax_aggs;minmax_aggs329,11617
	MemoryContext planner_cxt;331,11670
	double		total_table_pages;333,11733
	double		tuple_fraction;336,11824
	double		limit_tuples;337,11894
	Index		qual_security_level;339,11961
	InheritanceKind inhTargetKind;342,12101
	bool		hasJoinRTEs;345,12256
	bool		hasLateralRTEs;346,12317
	bool		hasHavingQual;347,12382
	bool		hasPseudoConstantQuals;348,12442
	bool		hasRecursion;350,12543
	int			wt_param_id;353,12671
	struct Path *non_recursive_path;non_recursive_path354,12730
	Relids		curOuterRels;357,12852
	List	   *curOuterParams;curOuterParams358,12911
	void	   *join_search_private;join_search_private361,13038
	bool		partColsUpdated;364,13127
#define planner_rt_fetch(373,13383
typedef struct PartitionSchemeData391,14322
	char		strategy;393,14359
	int16		partnatts;394,14402
	Oid		   *partopfamily;partopfamily395,14459
	Oid		   *partopcintype;partopcintype396,14515
	Oid		   *partcollation;partcollation397,14588
	int16	   *parttyplen;parttyplen400,14710
	bool	   *parttypbyval;parttypbyval401,14733
	struct FmgrInfo *partsupfunc;partsupfunc404,14822
}			PartitionSchemeData;405,14853
typedef struct PartitionSchemeData *PartitionScheme;PartitionScheme407,14879
typedef enum RelOptKind623,27202
	RELOPT_BASEREL,625,27228
	RELOPT_JOINREL,626,27245
	RELOPT_OTHER_MEMBER_REL,627,27262
	RELOPT_OTHER_JOINREL,628,27288
	RELOPT_UPPER_REL,629,27311
	RELOPT_OTHER_UPPER_REL,630,27330
	RELOPT_DEADREL631,27355
} RelOptKind;632,27371
#define IS_SIMPLE_REL(638,27478
#define IS_JOIN_REL(643,27644
#define IS_UPPER_REL(648,27807
#define IS_OTHER_REL(653,27977
typedef struct RelOptInfo658,28154
	NodeTag		type;660,28182
	RelOptKind	reloptkind;662,28199
	Relids		relids;665,28273
	double		rows;668,28382
	bool		consider_startup;671,28482
	bool		consider_param_startup;672,28544
	bool		consider_parallel;673,28613
	struct PathTarget *reltarget;reltarget676,28737
	List	   *pathlist;pathlist679,28842
	List	   *ppilist;ppilist680,28885
	List	   *partial_pathlist;partial_pathlist681,28943
	struct Path *cheapest_startup_path;cheapest_startup_path682,28991
	struct Path *cheapest_total_path;cheapest_total_path683,29028
	struct Path *cheapest_unique_path;cheapest_unique_path684,29063
	List	   *cheapest_parameterized_paths;cheapest_parameterized_paths685,29099
	Relids		direct_lateral_relids;689,29271
	Relids		lateral_relids;690,29344
	Index		relid;693,29469
	Oid			reltablespace;694,29484
	RTEKind		rtekind;695,29534
	AttrNumber	min_attr;696,29594
	AttrNumber	max_attr;697,29657
	Relids	   *attr_needed;attr_needed698,29708
	int32	   *attr_widths;attr_widths699,29776
	List	   *lateral_vars;lateral_vars700,29843
	Relids		lateral_referencers;701,29913
	List	   *indexlist;indexlist702,29982
	List	   *statlist;statlist703,30031
	BlockNumber pages;704,30083
	double		tuples;705,30148
	double		allvisfrac;706,30165
	Bitmapset  *eclass_indexes;eclass_indexes707,30186
	PlannerInfo *subroot;subroot709,30302
	List	   *subplan_params;subplan_params710,30344
	int			rel_parallel_workers;711,30388
	Oid			serverid;714,30516
	Oid			userid;715,30580
	bool		useridiscurrent;716,30638
	struct FdwRoutine *fdwroutine;fdwroutine718,30768
	void	   *fdw_private;fdw_private719,30800
	List	   *unique_for_rels;unique_for_rels722,30898
	List	   *non_unique_for_rels;non_unique_for_rels724,30985
	List	   *baserestrictinfo;baserestrictinfo727,31097
	QualCost	baserestrictcost;728,31169
	Index		baserestrict_min_security;729,31232
	List	   *joininfo;joininfo731,31332
	bool		has_eclass_joins;733,31430
	bool		consider_partitionwise_join;736,31529
	Relids		top_parent_relids;738,31642
	PartitionScheme part_scheme;742,31771
	int			nparts;743,31827
	struct PartitionBoundInfoData *boundinfo;boundinfo746,31978
	bool		partbounds_merged;747,32044
	List	   *partition_qual;partition_qual749,32154
	struct RelOptInfo **part_rels;part_rels750,32224
	Relids		all_partrels;752,32345
	List	  **partexprs;partexprs753,32409
	List	  **nullable_partexprs;nullable_partexprs754,32476
	List	   *partitioned_child_rels;partitioned_child_rels755,32547
} RelOptInfo;756,32606
#define IS_PARTITIONED_REL(766,32958
#define REL_HAS_ALL_PART_PROPS(774,33208
typedef struct IndexOptInfo IndexOptInfo;810,34780
#define HAVE_INDEXOPTINFO_TYPEDEF 811,34822
struct IndexOptInfo814,34866
	NodeTag		type;816,34888
	Oid			indexoid;818,34905
	Oid			reltablespace;819,34955
	RelOptInfo *rel;rel820,35015
	BlockNumber pages;823,35128
	double		tuples;824,35186
	int			tree_height;825,35243
	int			ncolumns;828,35342
	int			nkeycolumns;829,35393
	int		   *indexkeys;indexkeys830,35450
	Oid		   *indexcollations;indexcollations832,35562
	Oid		   *opfamily;opfamily833,35631
	Oid		   *opcintype;opcintype834,35696
	Oid		   *sortopfamily;sortopfamily835,35766
	bool	   *reverse_sort;reverse_sort836,35835
	bool	   *nulls_first;nulls_first837,35891
	bytea	  **opclassoptions;opclassoptions838,35959
	bool	   *canreturn;canreturn839,36029
	Oid			relam;841,36124
	List	   *indexprs;indexprs843,36183
	List	   *indpred;indpred844,36251
	List	   *indextlist;indextlist846,36317
	List	   *indrestrictinfo;indrestrictinfo848,36385
	bool		predOK;854,36630
	bool		unique;855,36691
	bool		immediate;856,36737
	bool		hypothetical;857,36798
	bool		amcanorderbyop;860,36928
	bool		amoptionalkey;861,36999
	bool		amsearcharray;862,37068
	bool		amsearchnulls;863,37135
	bool		amhasgettuple;864,37204
	bool		amhasgetbitmap;865,37267
	bool		amcanparallel;866,37332
	void		(*amcostestimate)amcostestimate868,37468
typedef struct ForeignKeyOptInfo879,37782
	NodeTag		type;881,37817
	Index		con_relid;884,37899
	Index		ref_relid;885,37959
	int			nkeys;886,38018
	AttrNumber	conkey[conkey887,38077
	AttrNumber	confkey[confkey888,38145
	Oid			conpfeqop[conpfeqop889,38213
	int			nmatched_ec;892,38352
	int			nmatched_rcols;893,38406
	int			nmatched_ri;894,38473
	struct EquivalenceClass *eclass[eclass896,38613
	List	   *rinfos[rinfos898,38732
} ForeignKeyOptInfo;899,38766
typedef struct StatisticExtInfo908,39015
	NodeTag		type;910,39049
	Oid			statOid;912,39066
	RelOptInfo *rel;rel913,39115
	char		kind;914,39172
	Bitmapset  *keys;keys915,39222
} StatisticExtInfo;916,39280
typedef struct EquivalenceClass958,41762
	NodeTag		type;960,41796
	List	   *ec_opfamilies;ec_opfamilies962,41813
	Oid			ec_collation;963,41871
	List	   *ec_members;ec_members964,41937
	List	   *ec_sources;ec_sources965,41993
	List	   *ec_derives;ec_derives966,42055
	Relids		ec_relids;967,42114
	bool		ec_has_const;969,42225
	bool		ec_has_volatile;970,42287
	bool		ec_below_outer_join;971,42354
	bool		ec_broken;972,42420
	Index		ec_sortref;973,42480
	Index		ec_min_security;974,42542
	Index		ec_max_security;975,42610
	struct EquivalenceClass *ec_merged;ec_merged976,42678
} EquivalenceClass;977,42751
#define EC_MUST_BE_REDUNDANT(983,42936
typedef struct EquivalenceMember1008,44374
	NodeTag		type;1010,44409
	Expr	   *em_expr;em_expr1012,44426
	Relids		em_relids;1013,44479
	Relids		em_nullable_relids;1014,44538
	bool		em_is_const;1015,44603
	bool		em_is_child;1016,44659
	Oid			em_datatype;1017,44723
} EquivalenceMember;1018,44789
typedef struct PathKey1037,45636
	NodeTag		type;1039,45661
	EquivalenceClass *pk_eclass;pk_eclass1041,45678
	Oid			pk_opfamily;1042,45740
	int			pk_strategy;1043,45803
	bool		pk_nulls_first;1044,45858
} PathKey;1045,45923
typedef struct PathTarget1071,47165
	NodeTag		type;1073,47193
	List	   *exprs;exprs1074,47209
	Index	   *sortgrouprefs;sortgrouprefs1075,47269
	QualCost	cost;1076,47339
	int			width;1077,47398
} PathTarget;1078,47457
#define get_pathtarget_sortgroupref(1081,47540
typedef struct ParamPathInfo1099,48333
	NodeTag		type;1101,48364
	Relids		ppi_req_outer;1103,48381
	double		ppi_rows;1104,48450
	List	   *ppi_clauses;ppi_clauses1105,48510
} ParamPathInfo;1106,48578
typedef struct Path1138,50164
	NodeTag		type;1140,50186
	NodeTag		pathtype;1142,50203
	RelOptInfo *parent;parent1144,50264
	PathTarget *pathtarget;pathtarget1145,50326
	ParamPathInfo *param_info;param_info1147,50391
	bool		parallel_aware;1149,50465
	bool		parallel_safe;1150,50523
	int			parallel_workers;1151,50587
	double		rows;1154,50726
	Cost		startup_cost;1155,50783
	Cost		total_cost;1156,50851
	List	   *pathkeys;pathkeys1158,50919
} Path;1160,51031
#define PATH_REQ_OUTER(1163,51120
typedef struct IndexPath1204,53180
	Path		path;1206,53207
	IndexOptInfo *indexinfo;indexinfo1207,53220
	List	   *indexclauses;indexclauses1208,53246
	List	   *indexorderbys;indexorderbys1209,53270
	List	   *indexorderbycols;indexorderbycols1210,53295
	ScanDirection indexscandir;1211,53323
	Cost		indextotalcost;1212,53352
	Selectivity indexselectivity;1213,53375
} IndexPath;1214,53406
typedef struct IndexClause1250,55438
	NodeTag		type;1252,55467
	struct RestrictInfo *rinfo;rinfo1253,55483
	List	   *indexquals;indexquals1254,55554
	bool		lossy;1255,55612
	AttrNumber	indexcol;1256,55676
	List	   *indexcols;indexcols1257,55747
} IndexClause;1258,55813
typedef struct BitmapHeapPath1277,56853
	Path		path;1279,56885
	Path	   *bitmapqual;bitmapqual1280,56898
} BitmapHeapPath;1281,56966
typedef struct BitmapAndPath1289,57255
	Path		path;1291,57286
	List	   *bitmapquals;bitmapquals1292,57299
	Selectivity bitmapselectivity;1293,57357
} BitmapAndPath;1294,57389
typedef struct BitmapOrPath1302,57675
	Path		path;1304,57705
	List	   *bitmapquals;bitmapquals1305,57718
	Selectivity bitmapselectivity;1306,57777
} BitmapOrPath;1307,57809
typedef struct TidPath1316,58051
	Path		path;1318,58076
	List	   *tidquals;tidquals1319,58089
} TidPath;1320,58151
typedef struct SubqueryScanPath1330,58500
	Path		path;1332,58534
	Path	   *subpath;subpath1333,58547
} SubqueryScanPath;1334,58610
typedef struct ForeignPath1346,59070
	Path		path;1348,59099
	Path	   *fdw_outerpath;fdw_outerpath1349,59112
	List	   *fdw_private;fdw_private1350,59137
} ForeignPath;1351,59160
typedef struct CustomPath1374,60146
	Path		path;1376,60174
	uint32		flags;1377,60187
	List	   *custom_paths;custom_paths1379,60273
	List	   *custom_private;custom_private1380,60336
	const struct CustomPathMethods *methods;methods1381,60362
} CustomPath;1382,60404
typedef struct AppendPath1399,61114
	Path		path;1401,61142
	List	   *partitioned_rels;partitioned_rels1403,61212
	List	   *subpaths;subpaths1404,61240
	int			first_partial_path;1406,61369
	double		limit_tuples;1407,61396
} AppendPath;1408,61460
#define IS_DUMMY_APPEND(1410,61475
#define IS_DUMMY_REL(1418,61777
typedef struct MergeAppendPath1425,62017
	Path		path;1427,62050
	List	   *partitioned_rels;partitioned_rels1429,62120
	List	   *subpaths;subpaths1430,62148
	double		limit_tuples;1431,62199
} MergeAppendPath;1432,62263
typedef struct GroupResultPath1441,62571
	Path		path;1443,62604
	List	   *quals;quals1444,62617
} GroupResultPath;1445,62634
typedef struct MaterialPath1453,62920
	Path		path;1455,62950
	Path	   *subpath;subpath1456,62963
} MaterialPath;1457,62982
	UNIQUE_PATH_NOOP,1473,63614
	UNIQUE_PATH_HASH,1474,63671
	UNIQUE_PATH_SORT	1475,63710
} UniquePathMethod;1476,63748
typedef struct UniquePath1478,63769
	Path		path;1480,63797
	Path	   *subpath;subpath1481,63810
	UniquePathMethod umethod;1482,63829
	List	   *in_operators;in_operators1483,63856
	List	   *uniq_exprs;uniq_exprs1484,63922
} UniquePath;1485,63981
typedef struct GatherPath1492,64175
	Path		path;1494,64203
	Path	   *subpath;subpath1495,64216
	bool		single_copy;1496,64263
	int			num_workers;1497,64323
} GatherPath;1498,64382
typedef struct GatherMergePath1504,64530
	Path		path;1506,64563
	Path	   *subpath;subpath1507,64576
	int			num_workers;1508,64623
} GatherMergePath;1509,64682
typedef struct JoinPath1516,64754
	Path		path;1518,64780
	JoinType	jointype;1520,64794
	bool		inner_unique;1522,64815
	Path	   *outerjoinpath;outerjoinpath1525,64917
	Path	   *innerjoinpath;innerjoinpath1526,64984
	List	   *joinrestrictinfo;joinrestrictinfo1528,65052
} JoinPath;1535,65292
typedef JoinPath NestPath;1541,65360
typedef struct MergePath1578,67152
	JoinPath	jpath;1580,67179
	List	   *path_mergeclauses;path_mergeclauses1581,67196
	List	   *outersortkeys;outersortkeys1582,67265
	List	   *innersortkeys;innersortkeys1583,67327
	bool		skip_mark_restore;1584,67389
	bool		materialize_inner;1585,67453
} MergePath;1586,67511
typedef struct HashPath1597,67740
	JoinPath	jpath;1599,67766
	List	   *path_hashclauses;path_hashclauses1600,67783
	int			num_batches;1601,67847
	double		inner_rows_total;1602,67900
} HashPath;1603,67959
typedef struct ProjectionPath1619,68809
	Path		path;1621,68841
	Path	   *subpath;subpath1622,68854
	bool		dummypp;1623,68911
} ProjectionPath;1624,68971
typedef struct ProjectSetPath1631,69161
	Path		path;1633,69193
	Path	   *subpath;subpath1634,69206
} ProjectSetPath;1635,69263
typedef struct SortPath1645,69514
	Path		path;1647,69540
	Path	   *subpath;subpath1648,69553
} SortPath;1649,69610
typedef struct IncrementalSortPath1654,69653
	SortPath	spath;1656,69690
	int			nPresortedCols;1657,69707
} IncrementalSortPath;1658,69764
typedef struct GroupPath1668,70035
	Path		path;1670,70062
	Path	   *subpath;subpath1671,70075
	List	   *groupClause;groupClause1672,70132
	List	   *qual;qual1673,70189
} GroupPath;1674,70242
typedef struct UpperUniquePath1682,70479
	Path		path;1684,70512
	Path	   *subpath;subpath1685,70525
	int			numkeys;1686,70582
} UpperUniquePath;1687,70642
typedef struct AggPath1696,70911
	Path		path;1698,70936
	Path	   *subpath;subpath1699,70949
	AggStrategy aggstrategy;1700,71006
	AggSplit	aggsplit;1701,71066
	double		numGroups;1702,71125
	uint64		transitionSpace;1703,71188
	List	   *groupClause;groupClause1704,71252
	List	   *qual;qual1705,71309
} AggPath;1706,71362
typedef struct GroupingSetData1712,71444
	NodeTag		type;1714,71477
	List	   *set;set1715,71493
	double		numGroups;1716,71554
} GroupingSetData;1717,71610
typedef struct RollupData1719,71630
	NodeTag		type;1721,71658
	List	   *groupClause;groupClause1722,71674
	List	   *gsets;gsets1723,71743
	List	   *gsets_data;gsets_data1724,71810
	double		numGroups;1725,71863
	bool		hashable;1726,71919
	bool		is_hashed;1727,71957
} RollupData;1728,72013
typedef struct GroupingSetsPath1734,72095
	Path		path;1736,72129
	Path	   *subpath;subpath1737,72142
	AggStrategy aggstrategy;1738,72199
	List	   *rollups;rollups1739,72246
	List	   *qual;qual1740,72291
	uint64		transitionSpace;1741,72344
} GroupingSetsPath;1742,72408
typedef struct MinMaxAggPath1747,72511
	Path		path;1749,72542
	List	   *mmaggregates;mmaggregates1750,72555
	List	   *quals;quals1751,72607
} MinMaxAggPath;1752,72653
typedef struct WindowAggPath1757,72746
	Path		path;1759,72777
	Path	   *subpath;subpath1760,72790
	WindowClause *winclause;winclause1761,72847
} WindowAggPath;1762,72907
typedef struct SetOpPath1767,73001
	Path		path;1769,73028
	Path	   *subpath;subpath1770,73041
	SetOpCmd	cmd;1771,73098
	SetOpStrategy strategy;1772,73145
	List	   *distinctList;distinctList1773,73203
	AttrNumber	flagColIdx;1774,73274
	int			firstFlag;1775,73338
	double		numGroups;1776,73399
} SetOpPath;1777,73462
typedef struct RecursiveUnionPath1782,73539
	Path		path;1784,73575
	Path	   *leftpath;leftpath1785,73588
	Path	   *rightpath;rightpath1786,73648
	List	   *distinctList;distinctList1787,73669
	int			wtParam;1788,73740
	double		numGroups;1789,73799
} RecursiveUnionPath;1790,73862
typedef struct LockRowsPath1795,73967
	Path		path;1797,73997
	Path	   *subpath;subpath1798,74010
	List	   *rowMarks;rowMarks1799,74067
	int			epqParam;1800,74118
} LockRowsPath;1801,74179
typedef struct ModifyTablePath1810,74506
	Path		path;1812,74539
	CmdType		operation;1813,74552
	bool		canSetTag;1814,74606
	Index		nominalRelation;1815,74671
	Index		rootRelation;1816,74737
	bool		partColsUpdated;1817,74805
	List	   *resultRelations;resultRelations1818,74870
	List	   *subpaths;subpaths1819,74930
	List	   *subroots;subroots1820,74987
	List	   *withCheckOptionLists;withCheckOptionLists1821,75044
	List	   *returningLists;returningLists1822,75109
	List	   *rowMarks;rowMarks1823,75175
	OnConflictExpr *onconflict;onconflict1824,75234
	int			epqParam;1825,75297
} ModifyTablePath;1826,75358
typedef struct LimitPath1831,75444
	Path		path;1833,75471
	Path	   *subpath;subpath1834,75484
	Node	   *limitOffset;limitOffset1835,75541
	Node	   *limitCount;limitCount1836,75604
	LimitOption limitOption;1837,75666
} LimitPath;1838,75736
typedef struct RestrictInfo1981,84297
	NodeTag		type;1983,84327
	Expr	   *clause;clause1985,84344
	bool		is_pushed_down;1987,84411
	bool		outerjoin_delayed;1989,84481
	bool		can_join;1991,84550
	bool		pseudoconstant;1993,84593
	bool		leakproof;1995,84641
	Index		security_level;1997,84707
	Relids		clause_relids;2000,84825
	Relids		required_relids;2003,84908
	Relids		outer_relids;2006,85004
	Relids		nullable_relids;2009,85105
	Relids		left_relids;2012,85185
	Relids		right_relids;2013,85243
	Expr	   *orclause;orclause2016,85361
	EquivalenceClass *parent_ec;parent_ec2019,85490
	QualCost	eval_cost;2022,85599
	Selectivity norm_selec;2023,85666
	Selectivity outer_selec;2026,85816
	List	   *mergeopfamilies;mergeopfamilies2030,85966
	EquivalenceClass *left_ec;left_ec2033,86105
	EquivalenceClass *right_ec;right_ec2034,86176
	EquivalenceMember *left_em;left_em2035,86249
	EquivalenceMember *right_em;right_em2036,86315
	List	   *scansel_cache;scansel_cache2037,86383
	bool		outer_is_left;2040,86523
	Oid			hashjoinoperator;2043,86645
	Selectivity left_bucketsize;2046,86765
	Selectivity right_bucketsize;2047,86829
	Selectivity left_mcvfreq;2048,86895
	Selectivity right_mcvfreq;2049,86963
} RestrictInfo;2050,87033
#define RINFO_IS_PUSHED_DOWN(2062,87638
typedef struct MergeScanSelCache2073,88133
	Oid			opfamily;2076,88211
	Oid			collation;2077,88272
	int			strategy;2078,88324
	bool		nulls_first;2079,88377
	Selectivity leftstartsel;2081,88454
	Selectivity leftendsel;2082,88528
	Selectivity rightstartsel;2083,88600
	Selectivity rightendsel;2084,88676
} MergeScanSelCache;2085,88749
typedef struct PlaceHolderVar2101,89441
	Expr		xpr;2103,89473
	Expr	   *phexpr;phexpr2104,89485
	Relids		phrels;2105,89538
	Index		phid;2106,89605
	Index		phlevelsup;2107,89666
} PlaceHolderVar;2108,89727
typedef struct SpecialJoinInfo SpecialJoinInfo;2168,92993
#define HAVE_SPECIALJOININFO_TYPEDEF 2169,93041
struct SpecialJoinInfo2172,93088
	NodeTag		type;2174,93113
	Relids		min_lefthand;2175,93129
	Relids		min_righthand;2176,93194
	Relids		syn_lefthand;2177,93260
	Relids		syn_righthand;2178,93326
	JoinType	jointype;2179,93393
	bool		lhs_strict;2180,93460
	bool		delay_upper_joins;2181,93524
	bool		semi_can_btree;2183,93646
	bool		semi_can_hash;2184,93712
	List	   *semi_operators;semi_operators2185,93776
	List	   *semi_rhs_exprs;semi_rhs_exprs2186,93840
typedef struct AppendRelInfo2219,95444
	NodeTag		type;2221,95475
	Index		parent_relid;2229,95776
	Index		child_relid;2230,95834
	Oid			parent_reltype;2238,96193
	Oid			child_reltype;2239,96253
	List	   *translated_vars;translated_vars2257,97155
	int			num_child_cols;2265,97508
	AttrNumber *parent_colnos;parent_colnos2266,97553
	Oid			parent_reloid;2273,97844
} AppendRelInfo;2274,97895
typedef struct PlaceHolderInfo2302,99317
	NodeTag		type;2304,99350
	Index		phid;2306,99367
	PlaceHolderVar *ph_var;ph_var2307,99427
	Relids		ph_eval_at;2308,99487
	Relids		ph_lateral;2309,99553
	Relids		ph_needed;2310,99622
	int32		ph_width;2311,99686
} PlaceHolderInfo;2312,99737
typedef struct MinMaxAggInfo2319,99994
	NodeTag		type;2321,100025
	Oid			aggfnoid;2323,100042
	Oid			aggsortop;2324,100095
	Expr	   *target;target2325,100145
	PlannerInfo *subroot;subroot2326,100204
	Path	   *path;path2327,100276
	Cost		pathcost;2328,100325
	Param	   *param;param2329,100383
} MinMaxAggInfo;2330,100436
typedef struct PlannerParamItem2379,103039
	NodeTag		type;2381,103073
	Node	   *item;item2383,103090
	int			paramId;2384,103149
} PlannerParamItem;2385,103208
typedef struct SemiAntiJoinFactors2403,104083
	Selectivity outer_match_frac;2405,104120
	Selectivity match_count;2406,104151
} SemiAntiJoinFactors;2407,104177
typedef struct JoinPathExtraData2422,104814
	List	   *restrictlist;restrictlist2424,104849
	List	   *mergeclause_list;mergeclause_list2425,104873
	bool		inner_unique;2426,104901
	SpecialJoinInfo *sjinfo;sjinfo2427,104922
	SemiAntiJoinFactors semifactors;2428,104948
	Relids		param_source_rels;2429,104982
} JoinPathExtraData;2430,105010
#define GROUPING_CAN_USE_SORT 2447,105726
#define GROUPING_CAN_USE_HASH 2448,105769
#define GROUPING_CAN_PARTIAL_AGG	2449,105812
	PARTITIONWISE_AGGREGATE_NONE,2464,106214
	PARTITIONWISE_AGGREGATE_FULL,2465,106245
	PARTITIONWISE_AGGREGATE_PARTIAL2466,106276
} PartitionwiseAggregateType;2467,106309
	int			flags;2485,107005
	bool		partial_costs_set;2486,107019
	AggClauseCosts agg_partial_costs;2487,107045
	AggClauseCosts agg_final_costs;2488,107080
	bool		target_parallel_safe;2491,107162
	Node	   *havingQual;havingQual2492,107191
	List	   *targetList;targetList2493,107213
	PartitionwiseAggregateType patype;2494,107235
} GroupPathExtraData;2495,107271
	bool		limit_needed;2509,107762
	double		limit_tuples;2510,107783
	int64		count_est;2511,107806
	int64		offset_est;2512,107825
} FinalPathExtraData;2513,107845
typedef struct JoinCostWorkspace2527,108478
	Cost		startup_cost;2530,108587
	Cost		total_cost;2531,108655
	Cost		run_cost;2534,108791
	Cost		inner_run_cost;2537,108882
	Cost		inner_rescan_run_cost;2538,108944
	double		outer_rows;2541,109014
	double		inner_rows;2542,109035
	double		outer_skip_rows;2543,109056
	double		inner_skip_rows;2544,109082
	int			numbuckets;2547,109147
	int			numbatches;2548,109166
	double		inner_rows_total;2549,109185
} JoinCostWorkspace;2550,109212

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/bitmapset.h,572
#define BITMAPSET_H21,756
#define BITS_PER_BITMAPWORD 37,1108
typedef uint64 bitmapword;38,1139
typedef int64 signedbitmapword;39,1198
#define BITS_PER_BITMAPWORD 43,1277
typedef uint32 bitmapword;44,1308
typedef int32 signedbitmapword;45,1367
typedef struct Bitmapset49,1447
	int			nwords;51,1474
	bitmapword	words[words52,1522
} Bitmapset;53,1586
	BMS_EQUAL,59,1651
	BMS_SUBSET1,60,1688
	BMS_SUBSET2,61,1747
	BMS_DIFFERENT	62,1806
} BMS_Comparison;63,1867
	BMS_EMPTY_SET,68,1932
	BMS_SINGLETON,69,1967
	BMS_MULTIPLE	70,2001
} BMS_Membership;71,2034

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/lockoptions.h,520
#define LOCKOPTIONS_H14,367
typedef enum LockClauseStrength21,629
	LCS_NONE,23,663
	LCS_FORKEYSHARE,24,726
	LCS_FORSHARE,25,766
	LCS_FORNOKEYUPDATE,26,800
	LCS_FORUPDATE	27,847
} LockClauseStrength;28,882
typedef enum LockWaitPolicy36,1213
	LockWaitBlock,39,1307
	LockWaitSkip,41,1375
	LockWaitError43,1447
} LockWaitPolicy;44,1462
typedef enum LockTupleMode49,1524
	LockTupleKeyShare,52,1581
	LockTupleShare,54,1625
	LockTupleNoKeyExclusive,56,1717
	LockTupleExclusive58,1813
} LockTupleMode;59,1833

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/parsenodes.h,59926
#define PARSENODES_H23,934
typedef enum OverridingKind32,1107
	OVERRIDING_NOT_SET 34,1137
	OVERRIDING_USER_VALUE,35,1162
	OVERRIDING_SYSTEM_VALUE36,1186
} OverridingKind;37,1211
typedef enum QuerySource40,1264
	QSRC_ORIGINAL,42,1291
	QSRC_PARSER,43,1352
	QSRC_INSTEAD_RULE,44,1412
	QSRC_QUAL_INSTEAD_RULE,45,1476
	QSRC_NON_INSTEAD_RULE	46,1542
} QuerySource;47,1598
typedef enum SortByDir50,1672
	SORTBY_DEFAULT,52,1697
	SORTBY_ASC,53,1714
	SORTBY_DESC,54,1727
	SORTBY_USING	55,1741
} SortByDir;56,1796
typedef enum SortByNulls58,1810
	SORTBY_NULLS_DEFAULT,60,1837
	SORTBY_NULLS_FIRST,61,1860
	SORTBY_NULLS_LAST62,1881
} SortByNulls;63,1900
typedef uint32 AclMode;72,2215
#define ACL_INSERT	74,2276
#define ACL_SELECT	75,2323
#define ACL_UPDATE	76,2350
#define ACL_DELETE	77,2377
#define ACL_TRUNCATE	78,2404
#define ACL_REFERENCES	79,2432
#define ACL_TRIGGER	80,2462
#define ACL_EXECUTE	81,2490
#define ACL_USAGE	82,2538
#define ACL_CREATE	84,2626
#define ACL_CREATE_TEMP 85,2688
#define ACL_CONNECT	86,2740
#define N_ACL_RIGHTS	87,2789
#define ACL_NO_RIGHTS	88,2841
#define ACL_SELECT_FOR_UPDATE	90,2943
typedef struct Query108,3578
	NodeTag		type;110,3601
	CmdType		commandType;112,3618
	QuerySource querySource;114,3684
	uint64		queryId;116,3740
	bool		canSetTag;118,3807
	Node	   *utilityStmt;utilityStmt120,3866
	int			resultRelation;122,3935
	bool		hasAggs;125,4047
	bool		hasWindowFuncs;126,4108
	bool		hasTargetSRFs;127,4167
	bool		hasSubLinks;128,4232
	bool		hasDistinctOn;129,4279
	bool		hasRecursive;130,4342
	bool		hasModifyingCTE;131,4398
	bool		hasForUpdate;132,4461
	bool		hasRowSecurity;133,4525
	List	   *cteList;cteList135,4592
	List	   *rtable;rtable137,4652
	FromExpr   *jointree;jointree138,4706
	List	   *targetList;targetList140,4778
	OverridingKind override;142,4837
	OnConflictExpr *onConflict;onConflict144,4888
	List	   *returningList;returningList146,4958
	List	   *groupClause;groupClause148,5026
	List	   *groupingSets;groupingSets150,5084
	Node	   *havingQual;havingQual152,5150
	List	   *windowClause;windowClause154,5213
	List	   *distinctClause;distinctClause156,5269
	List	   *sortClause;sortClause158,5330
	Node	   *limitOffset;limitOffset160,5388
	Node	   *limitCount;limitCount161,5456
	LimitOption limitOption;162,5526
	List	   *rowMarks;rowMarks164,5570
	Node	   *setOperations;setOperations166,5624
	List	   *constraintDeps;constraintDeps169,5741
	List	   *withCheckOptions;withCheckOptions172,5865
	int			stmt_location;181,6233
	int			stmt_len;182,6294
} Query;183,6360
typedef struct TypeName207,7378
	NodeTag		type;209,7404
	List	   *names;names210,7420
	Oid			typeOid;211,7484
	bool		setof;212,7530
	bool		pct_type;213,7562
	List	   *typmods;typmods214,7603
	int32		typemod;215,7657
	List	   *arrayBounds;arrayBounds216,7708
	int			location;217,7750
} TypeName;218,7807
typedef struct ColumnRef233,8481
	NodeTag		type;235,8508
	List	   *fields;fields236,8524
	int			location;237,8588
} ColumnRef;238,8645
typedef struct ParamRef243,8715
	NodeTag		type;245,8741
	int			number;246,8757
	int			location;247,8808
} ParamRef;248,8865
typedef enum A_Expr_Kind253,8936
	AEXPR_OP,255,8963
	AEXPR_OP_ANY,256,9000
	AEXPR_OP_ALL,257,9046
	AEXPR_DISTINCT,258,9092
	AEXPR_NOT_DISTINCT,259,9154
	AEXPR_NULLIF,260,9223
	AEXPR_OF,261,9273
	AEXPR_IN,262,9333
	AEXPR_LIKE,263,9390
	AEXPR_ILIKE,264,9453
	AEXPR_SIMILAR,265,9519
	AEXPR_BETWEEN,266,9585
	AEXPR_NOT_BETWEEN,267,9633
	AEXPR_BETWEEN_SYM,268,9688
	AEXPR_NOT_BETWEEN_SYM,269,9749
	AEXPR_PAREN	270,9817
} A_Expr_Kind;271,9876
typedef struct A_Expr273,9892
	NodeTag		type;275,9916
	A_Expr_Kind kind;276,9932
	List	   *name;name277,9969
	Node	   *lexpr;lexpr278,10029
	Node	   *rexpr;rexpr279,10085
	int			location;280,10142
} A_Expr;281,10199
typedef struct A_Const286,10249
	NodeTag		type;288,10274
	Value		val;289,10290
	int			location;290,10351
} A_Const;291,10408
typedef struct TypeCast296,10459
	NodeTag		type;298,10485
	Node	   *arg;arg299,10501
	TypeName   *typeName;typeName300,10552
	int			location;301,10598
} TypeCast;302,10655
typedef struct CollateClause307,10715
	NodeTag		type;309,10746
	Node	   *arg;arg310,10762
	List	   *collname;collname311,10802
	int			location;312,10863
} CollateClause;313,10920
typedef enum RoleSpecType318,11003
	ROLESPEC_CSTRING,320,11031
	ROLESPEC_CURRENT_USER,321,11092
	ROLESPEC_SESSION_USER,322,11149
	ROLESPEC_PUBLIC	323,11206
} RoleSpecType;324,11254
typedef struct RoleSpec326,11271
	NodeTag		type;328,11297
	RoleSpecType roletype;329,11313
	char	   *rolename;rolename330,11366
	int			location;331,11426
} RoleSpec;332,11483
typedef struct FuncCall348,12210
	NodeTag		type;350,12236
	List	   *funcname;funcname351,12252
	List	   *args;args352,12306
	List	   *agg_order;agg_order353,12360
	Node	   *agg_filter;agg_filter354,12414
	bool		agg_within_group;355,12465
	bool		agg_star;356,12530
	bool		agg_distinct;357,12578
	bool		func_variadic;358,12637
	struct WindowDef *over;over359,12700
	int			location;360,12752
} FuncCall;361,12809
typedef struct A_Star369,13009
	NodeTag		type;371,13033
} A_Star;372,13049
typedef struct A_Indices380,13292
	NodeTag		type;382,13319
	bool		is_slice;383,13335
	Node	   *lidx;lidx384,13395
	Node	   *uidx;uidx385,13445
} A_Indices;386,13508
typedef struct A_Indirection403,14181
	NodeTag		type;405,14212
	Node	   *arg;arg406,14228
	List	   *indirection;indirection407,14281
} A_Indirection;408,14349
typedef struct A_ArrayExpr413,14412
	NodeTag		type;415,14441
	List	   *elements;elements416,14457
	int			location;417,14510
} A_ArrayExpr;418,14567
typedef struct ResTarget438,15355
	NodeTag		type;440,15382
	char	   *name;name441,15398
	List	   *indirection;indirection442,15442
	Node	   *val;val443,15512
	int			location;444,15577
} ResTarget;445,15634
typedef struct MultiAssignRef456,16078
	NodeTag		type;458,16110
	Node	   *source;source459,16126
	int			colno;460,16178
	int			ncolumns;461,16237
} MultiAssignRef;462,16296
typedef struct SortBy467,16354
	NodeTag		type;469,16378
	Node	   *node;node470,16394
	SortByDir	sortby_dir;471,16440
	SortByNulls sortby_nulls;472,16493
	List	   *useOp;useOp473,16543
	int			location;474,16603
} SortBy;475,16668
typedef struct WindowDef485,17025
	NodeTag		type;487,17052
	char	   *name;name488,17068
	char	   *refname;refname489,17110
	List	   *partitionClause;partitionClause490,17167
	List	   *orderClause;orderClause491,17229
	int			frameOptions;492,17284
	Node	   *startOffset;startOffset493,17343
	Node	   *endOffset;endOffset494,17410
	int			location;495,17474
} WindowDef;496,17536
#define FRAMEOPTION_NONDEFAULT	505,17937
#define FRAMEOPTION_RANGE	506,18001
#define FRAMEOPTION_ROWS	507,18061
#define FRAMEOPTION_GROUPS	508,18119
#define FRAMEOPTION_BETWEEN	509,18181
#define FRAMEOPTION_START_UNBOUNDED_PRECEDING	510,18243
#define FRAMEOPTION_END_UNBOUNDED_PRECEDING	511,18318
#define FRAMEOPTION_START_UNBOUNDED_FOLLOWING	512,18390
#define FRAMEOPTION_END_UNBOUNDED_FOLLOWING	513,18463
#define FRAMEOPTION_START_CURRENT_ROW	514,18535
#define FRAMEOPTION_END_CURRENT_ROW	515,18604
#define FRAMEOPTION_START_OFFSET_PRECEDING	516,18670
#define FRAMEOPTION_END_OFFSET_PRECEDING	517,18743
#define FRAMEOPTION_START_OFFSET_FOLLOWING	518,18812
#define FRAMEOPTION_END_OFFSET_FOLLOWING	519,18885
#define FRAMEOPTION_EXCLUDE_CURRENT_ROW	520,18954
#define FRAMEOPTION_EXCLUDE_GROUP	521,19020
#define FRAMEOPTION_EXCLUDE_TIES	522,19089
#define FRAMEOPTION_START_OFFSET 524,19158
#define FRAMEOPTION_END_OFFSET 526,19268
#define FRAMEOPTION_EXCLUSION 528,19372
#define FRAMEOPTION_DEFAULTS 532,19499
typedef struct RangeSubselect539,19689
	NodeTag		type;541,19721
	bool		lateral;542,19737
	Node	   *subquery;subquery543,19789
	Alias	   *alias;alias544,19852
} RangeSubselect;545,19916
typedef struct RangeFunction561,20628
	NodeTag		type;563,20659
	bool		lateral;564,20675
	bool		ordinality;565,20727
	bool		is_rowsfrom;566,20790
	List	   *functions;functions567,20849
	Alias	   *alias;alias568,20913
	List	   *coldeflist;coldeflist569,20977
} RangeFunction;571,21089
typedef struct RangeTableFunc576,21181
	NodeTag		type;578,21213
	bool		lateral;579,21229
	Node	   *docexpr;docexpr580,21281
	Node	   *rowexpr;rowexpr581,21327
	List	   *namespaces;namespaces582,21378
	List	   *columns;columns583,21439
	Alias	   *alias;alias584,21491
	int			location;585,21555
} RangeTableFunc;586,21612
typedef struct RangeTableFuncCol594,21828
	NodeTag		type;596,21863
	char	   *colname;colname597,21879
	TypeName   *typeName;typeName598,21930
	bool		for_ordinality;599,21985
	bool		is_not_null;600,22043
	Node	   *colexpr;colexpr601,22092
	Node	   *coldefexpr;coldefexpr602,22143
	int			location;603,22204
} RangeTableFuncCol;604,22261
typedef struct RangeTableSample616,22733
	NodeTag		type;618,22767
	Node	   *relation;relation619,22783
	List	   *method;method620,22833
	List	   *args;args621,22901
	Node	   *repeatable;repeatable622,22957
	int			location;623,23025
} RangeTableSample;624,23088
typedef struct ColumnDef644,23952
	NodeTag		type;646,23979
	char	   *colname;colname647,23995
	TypeName   *typeName;typeName648,24036
	int			inhcount;649,24081
	bool		is_local;650,24141
	bool		is_not_null;651,24204
	bool		is_from_type;652,24261
	char		storage;653,24327
	Node	   *raw_default;raw_default654,24387
	Node	   *cooked_default;cooked_default655,24457
	char		identity;656,24527
	RangeVar   *identitySequence;identitySequence657,24571
	char		generated;659,24683
	CollateClause *collClause;collClause660,24729
	Oid			collOid;661,24798
	List	   *constraints;constraints662,24859
	List	   *fdwoptions;fdwoptions663,24916
	int			location;664,24968
} ColumnDef;665,25030
typedef struct TableLikeClause670,25109
	NodeTag		type;672,25142
	RangeVar   *relation;relation673,25158
	bits32		options;674,25181
} TableLikeClause;675,25234
typedef enum TableLikeOption677,25254
	CREATE_TABLE_LIKE_COMMENTS 679,25285
	CREATE_TABLE_LIKE_CONSTRAINTS 680,25323
	CREATE_TABLE_LIKE_DEFAULTS 681,25364
	CREATE_TABLE_LIKE_GENERATED 682,25402
	CREATE_TABLE_LIKE_IDENTITY 683,25441
	CREATE_TABLE_LIKE_INDEXES 684,25479
	CREATE_TABLE_LIKE_STATISTICS 685,25516
	CREATE_TABLE_LIKE_STORAGE 686,25556
	CREATE_TABLE_LIKE_ALL 687,25593
} TableLikeOption;688,25631
typedef struct IndexElem697,25919
	NodeTag		type;699,25946
	char	   *name;name700,25962
	Node	   *expr;expr701,26022
	char	   *indexcolname;indexcolname702,26075
	List	   *collation;collation703,26143
	List	   *opclass;opclass704,26204
	List	   *opclassopts;opclassopts705,26269
	SortByDir	ordering;706,26331
	SortByNulls nulls_ordering;707,26376
} IndexElem;708,26430
typedef enum DefElemAction720,26898
	DEFELEM_UNSPEC,722,26927
	DEFELEM_SET,723,26969
	DEFELEM_ADD,724,26983
	DEFELEM_DROP725,26997
} DefElemAction;726,27011
typedef struct DefElem728,27029
	NodeTag		type;730,27054
	char	   *defnamespace;defnamespace731,27070
	char	   *defname;defname732,27125
	Node	   *arg;arg733,27144
	DefElemAction defaction;734,27197
	int			location;735,27265
} DefElem;736,27322
typedef struct LockingClause747,27679
	NodeTag		type;749,27710
	List	   *lockedRels;lockedRels750,27726
	LockClauseStrength strength;751,27788
	LockWaitPolicy waitPolicy;752,27818
} LockingClause;753,27875
typedef struct XmlSerialize758,27941
	NodeTag		type;760,27971
	XmlOptionType xmloption;761,27987
	Node	   *expr;expr762,28039
	TypeName   *typeName;typeName763,28055
	int			location;764,28078
} XmlSerialize;765,28135
typedef struct PartitionElem775,28390
	NodeTag		type;777,28421
	char	   *name;name778,28437
	Node	   *expr;expr779,28501
	List	   *collation;collation780,28561
	List	   *opclass;opclass781,28622
	int			location;782,28687
} PartitionElem;783,28744
typedef struct PartitionSpec790,28911
	NodeTag		type;792,28942
	char	   *strategy;strategy793,28958
	List	   *partParams;partParams795,29046
	int			location;796,29098
} PartitionSpec;797,29155
#define PARTITION_STRATEGY_HASH	800,29222
#define PARTITION_STRATEGY_LIST	801,29259
#define PARTITION_STRATEGY_RANGE	802,29296
struct PartitionBoundSpec810,29549
	NodeTag		type;812,29577
	char		strategy;814,29594
	bool		is_default;815,29653
	int			modulus;818,29757
	int			remainder;819,29773
	List	   *listdatums;listdatums822,29836
	List	   *lowerdatums;lowerdatums825,29952
	List	   *upperdatums;upperdatums826,30010
	int			location;828,30069
typedef enum PartitionRangeDatumKind836,30273
	PARTITION_RANGE_DATUM_MINVALUE 838,30312
	PARTITION_RANGE_DATUM_VALUE 839,30382
	PARTITION_RANGE_DATUM_MAXVALUE 840,30449
} PartitionRangeDatumKind;841,30520
typedef struct PartitionRangeDatum843,30548
	NodeTag		type;845,30585
	PartitionRangeDatumKind kind;847,30602
	Node	   *value;value848,30633
	int			location;851,30752
} PartitionRangeDatum;852,30809
typedef struct PartitionCmd857,30918
	NodeTag		type;859,30948
	RangeVar   *name;name860,30964
	PartitionBoundSpec *bound;bound861,31026
} PartitionCmd;862,31085
typedef enum RTEKind957,36467
	RTE_RELATION,959,36490
	RTE_SUBQUERY,960,36542
	RTE_JOIN,961,36583
	RTE_FUNCTION,962,36609
	RTE_TABLEFUNC,963,36650
	RTE_VALUES,964,36702
	RTE_CTE,965,36764
	RTE_NAMEDTUPLESTORE,966,36822
	RTE_RESULT	967,36887
} RTEKind;970,37052
typedef struct RangeTblEntry972,37064
	NodeTag		type;974,37095
	RTEKind		rtekind;976,37112
	Oid			relid;1003,38360
	char		relkind;1004,38402
	int			rellockmode;1005,38462
	struct TableSampleClause *tablesample;tablesample1006,38530
	Query	   *subquery;subquery1011,38658
	bool		security_barrier;1012,38700
	JoinType	jointype;1049,40821
	int			joinmergedcols;1050,40861
	List	   *joinaliasvars;joinaliasvars1051,40928
	List	   *joinleftcols;joinleftcols1052,40988
	List	   *joinrightcols;joinrightcols1053,41049
	List	   *functions;functions1063,41406
	bool		funcordinality;1064,41465
	TableFunc  *tablefunc;tablefunc1069,41586
	List	   *values_lists;values_lists1074,41666
	char	   *ctename;ctename1079,41780
	Index		ctelevelsup;1080,41833
	bool		self_reference;1081,41886
	List	   *coltypes;coltypes1101,42940
	List	   *coltypmods;coltypmods1102,42996
	List	   *colcollations;colcollations1103,43056
	char	   *enrname;enrname1108,43179
	double		enrtuples;1109,43238
	Alias	   *alias;alias1114,43337
	Alias	   *eref;eref1115,43397
	bool		lateral;1116,43447
	bool		inh;1117,43512
	bool		inFromCl;1118,43555
	AclMode		requiredPerms;1119,43603
	Oid			checkAsUser;1120,43673
	Bitmapset  *selectedCols;selectedCols1121,43735
	Bitmapset  *insertedCols;insertedCols1122,43802
	Bitmapset  *updatedCols;updatedCols1123,43869
	Bitmapset  *extraUpdatedCols;extraUpdatedCols1124,43935
	List	   *securityQuals;securityQuals1125,44004
} RangeTblEntry;1126,44075
typedef struct RangeTblFunction1144,44863
	NodeTag		type;1146,44897
	Node	   *funcexpr;funcexpr1148,44914
	int			funccolcount;1149,44971
	List	   *funccolnames;funccolnames1151,45115
	List	   *funccoltypes;funccoltypes1152,45175
	List	   *funccoltypmods;funccoltypmods1153,45234
	List	   *funccolcollations;funccolcollations1154,45297
	Bitmapset  *funcparams;funcparams1156,45426
} RangeTblFunction;1157,45499
typedef struct TableSampleClause1164,45681
	NodeTag		type;1166,45716
	Oid			tsmhandler;1167,45732
	List	   *args;args1168,45798
	Expr	   *repeatable;repeatable1169,45857
} TableSampleClause;1170,45925
typedef enum WCOKind1178,46192
	WCO_VIEW_CHECK,1180,46215
	WCO_RLS_INSERT_CHECK,1181,46271
	WCO_RLS_UPDATE_CHECK,1182,46330
	WCO_RLS_CONFLICT_CHECK	1183,46389
} WCOKind;1184,46459
typedef struct WithCheckOption1186,46471
	NodeTag		type;1188,46504
	WCOKind		kind;1189,46520
	char	   *relname;relname1190,46556
	char	   *polname;polname1191,46622
	Node	   *qual;qual1192,46681
	bool		cascaded;1193,46730
} WithCheckOption;1194,46788
typedef struct SortGroupClause1254,50201
	NodeTag		type;1256,50234
	Index		tleSortGroupRef;1257,50250
	Oid			eqop;1258,50307
	Oid			sortop;1259,50359
	bool		nulls_first;1260,50419
	bool		hashable;1261,50481
} SortGroupClause;1262,50541
	GROUPING_SET_EMPTY,1316,52815
	GROUPING_SET_SIMPLE,1317,52836
	GROUPING_SET_ROLLUP,1318,52858
	GROUPING_SET_CUBE,1319,52880
	GROUPING_SET_SETS1320,52900
} GroupingSetKind;1321,52919
typedef struct GroupingSet1323,52939
	NodeTag		type;1325,52968
	GroupingSetKind kind;1326,52984
	List	   *content;content1327,53007
	int			location;1328,53026
} GroupingSet;1329,53043
typedef struct WindowClause1348,53990
	NodeTag		type;1350,54020
	char	   *name;name1351,54036
	char	   *refname;refname1352,54097
	List	   *partitionClause;partitionClause1353,54154
	List	   *orderClause;orderClause1354,54205
	int			frameOptions;1355,54248
	Node	   *startOffset;startOffset1356,54311
	Node	   *endOffset;endOffset1357,54378
	Oid			startInRangeFunc;1358,54442
	Oid			endInRangeFunc;1359,54507
	Oid			inRangeColl;1360,54568
	bool		inRangeAsc;1361,54623
	bool		inRangeNullsFirst;1362,54688
	Index		winref;1363,54757
	bool		copiedOrder;1364,54815
} WindowClause;1365,54879
typedef struct RowMarkClause1379,55506
	NodeTag		type;1381,55537
	Index		rti;1382,55553
	LockClauseStrength strength;1383,55611
	LockWaitPolicy waitPolicy;1384,55641
	bool		pushedDown;1385,55698
} RowMarkClause;1386,55761
typedef struct WithClause1395,55940
	NodeTag		type;1397,55968
	List	   *ctes;ctes1398,55984
	bool		recursive;1399,56033
	int			location;1400,56080
} WithClause;1401,56137
typedef struct InferClause1409,56296
	NodeTag		type;1411,56325
	List	   *indexElems;indexElems1412,56341
	Node	   *whereClause;whereClause1413,56403
	char	   *conname;conname1414,56472
	int			location;1415,56534
} InferClause;1416,56591
typedef struct OnConflictClause1424,56756
	NodeTag		type;1426,56790
	OnConflictAction action;1427,56806
	InferClause *infer;infer1428,56860
	List	   *targetList;targetList1429,56921
	Node	   *whereClause;whereClause1430,56981
	int			location;1431,57025
} OnConflictClause;1432,57082
typedef enum CTEMaterialize1440,57234
	CTEMaterializeDefault,1442,57264
	CTEMaterializeAlways,1443,57315
	CTEMaterializeNever	1444,57358
} CTEMaterialize;1445,57404
typedef struct CommonTableExpr1447,57423
	NodeTag		type;1449,57456
	char	   *ctename;ctename1450,57472
	List	   *aliascolnames;aliascolnames1451,57527
	CTEMaterialize ctematerialized;1452,57588
	Node	   *ctequery;ctequery1454,57732
	int			location;1455,57778
	bool		cterecursive;1457,57886
	int			cterefcount;1458,57945
	List	   *ctecolnames;ctecolnames1460,58055
	List	   *ctecoltypes;ctecoltypes1461,58112
	List	   *ctecoltypmods;ctecoltypmods1462,58177
	List	   *ctecolcollations;ctecolcollations1463,58246
} CommonTableExpr;1464,58314
#define GetCTETargetList(1467,58399
typedef struct TriggerTransition1481,58925
	NodeTag		type;1483,58960
	char	   *name;name1484,58976
	bool		isNew;1485,58992
	bool		isTable;1486,59006
} TriggerTransition;1487,59022
typedef struct RawStmt1505,59838
	NodeTag		type;1507,59863
	Node	   *stmt;stmt1508,59879
	int			stmt_location;1509,59918
	int			stmt_len;1510,59979
} RawStmt;1511,60045
typedef struct InsertStmt1525,60491
	NodeTag		type;1527,60519
	RangeVar   *relation;relation1528,60535
	List	   *cols;cols1529,60589
	Node	   *selectStmt;selectStmt1530,60651
	OnConflictClause *onConflictClause;onConflictClause1531,60714
	List	   *returningList;returningList1532,60776
	WithClause *withClause;withClause1533,60837
	OverridingKind override;1534,60881
} InsertStmt;1535,60931
typedef struct DeleteStmt1541,61023
	NodeTag		type;1543,61051
	RangeVar   *relation;relation1544,61067
	List	   *usingClause;usingClause1545,61121
	Node	   *whereClause;whereClause1546,61188
	List	   *returningList;returningList1547,61232
	WithClause *withClause;withClause1548,61293
} DeleteStmt;1549,61337
typedef struct UpdateStmt1555,61429
	NodeTag		type;1557,61457
	RangeVar   *relation;relation1558,61473
	List	   *targetList;targetList1559,61522
	Node	   *whereClause;whereClause1560,61582
	List	   *fromClause;fromClause1561,61626
	List	   *returningList;returningList1562,61692
	WithClause *withClause;withClause1563,61753
} UpdateStmt;1564,61797
typedef enum SetOperation1579,62455
	SETOP_NONE 1581,62483
	SETOP_UNION,1582,62500
	SETOP_INTERSECT,1583,62514
	SETOP_EXCEPT1584,62532
} SetOperation;1585,62546
typedef struct SelectStmt1587,62563
	NodeTag		type;1589,62591
	List	   *distinctClause;distinctClause1594,62671
	IntoClause *intoClause;intoClause1596,62791
	List	   *targetList;targetList1597,62846
	List	   *fromClause;fromClause1598,62906
	Node	   *whereClause;whereClause1599,62951
	List	   *groupClause;groupClause1600,63000
	Node	   *havingClause;havingClause1601,63046
	List	   *windowClause;windowClause1602,63106
	List	   *valuesLists;valuesLists1612,63589
	List	   *sortClause;sortClause1618,63753
	Node	   *limitOffset;limitOffset1619,63815
	Node	   *limitCount;limitCount1620,63871
	LimitOption limitOption;1621,63929
	List	   *lockingClause;lockingClause1622,63972
	WithClause *withClause;withClause1623,64040
	SetOperation op;1628,64153
	bool		all;1629,64194
	struct SelectStmt *larg;larg1630,64229
	struct SelectStmt *rarg;rarg1631,64272
} SelectStmt;1633,64373
typedef struct SetOperationStmt1655,65511
	NodeTag		type;1657,65545
	SetOperation op;1658,65561
	bool		all;1659,65602
	Node	   *larg;larg1660,65637
	Node	   *rarg;rarg1661,65672
	List	   *colTypes;colTypes1665,65811
	List	   *colTypmods;colTypmods1666,65874
	List	   *colCollations;colCollations1667,65941
	List	   *groupClauses;groupClauses1668,66013
} SetOperationStmt;1670,66138
typedef enum ObjectType1693,67133
	OBJECT_ACCESS_METHOD,1695,67159
	OBJECT_AGGREGATE,1696,67182
	OBJECT_AMOP,1697,67201
	OBJECT_AMPROC,1698,67215
	OBJECT_ATTRIBUTE,1699,67231
	OBJECT_CAST,1700,67302
	OBJECT_COLUMN,1701,67316
	OBJECT_COLLATION,1702,67332
	OBJECT_CONVERSION,1703,67351
	OBJECT_DATABASE,1704,67371
	OBJECT_DEFAULT,1705,67389
	OBJECT_DEFACL,1706,67406
	OBJECT_DOMAIN,1707,67422
	OBJECT_DOMCONSTRAINT,1708,67438
	OBJECT_EVENT_TRIGGER,1709,67461
	OBJECT_EXTENSION,1710,67484
	OBJECT_FDW,1711,67503
	OBJECT_FOREIGN_SERVER,1712,67516
	OBJECT_FOREIGN_TABLE,1713,67540
	OBJECT_FUNCTION,1714,67563
	OBJECT_INDEX,1715,67581
	OBJECT_LANGUAGE,1716,67596
	OBJECT_LARGEOBJECT,1717,67614
	OBJECT_MATVIEW,1718,67635
	OBJECT_OPCLASS,1719,67652
	OBJECT_OPERATOR,1720,67669
	OBJECT_OPFAMILY,1721,67687
	OBJECT_POLICY,1722,67705
	OBJECT_PROCEDURE,1723,67721
	OBJECT_PUBLICATION,1724,67740
	OBJECT_PUBLICATION_REL,1725,67761
	OBJECT_ROLE,1726,67786
	OBJECT_ROUTINE,1727,67800
	OBJECT_RULE,1728,67817
	OBJECT_SCHEMA,1729,67831
	OBJECT_SEQUENCE,1730,67847
	OBJECT_SUBSCRIPTION,1731,67865
	OBJECT_STATISTIC_EXT,1732,67887
	OBJECT_TABCONSTRAINT,1733,67910
	OBJECT_TABLE,1734,67933
	OBJECT_TABLESPACE,1735,67948
	OBJECT_TRANSFORM,1736,67968
	OBJECT_TRIGGER,1737,67987
	OBJECT_TSCONFIGURATION,1738,68004
	OBJECT_TSDICTIONARY,1739,68029
	OBJECT_TSPARSER,1740,68051
	OBJECT_TSTEMPLATE,1741,68069
	OBJECT_TYPE,1742,68089
	OBJECT_USER_MAPPING,1743,68103
	OBJECT_VIEW1744,68125
} ObjectType;1745,68138
typedef struct CreateSchemaStmt1755,68442
	NodeTag		type;1757,68476
	char	   *schemaname;schemaname1758,68492
	RoleSpec   *authrole;authrole1759,68554
	List	   *schemaElts;schemaElts1760,68616
	bool		if_not_exists;1761,68684
} CreateSchemaStmt;1762,68754
typedef enum DropBehavior1764,68775
	DROP_RESTRICT,1766,68803
	DROP_CASCADE	1767,68864
} DropBehavior;1768,68916
typedef struct AlterTableStmt1774,69004
	NodeTag		type;1776,69036
	RangeVar   *relation;relation1777,69052
	List	   *cmds;cmds1778,69099
	ObjectType	objtype;1779,69143
	bool		missing_ok;1780,69186
} AlterTableStmt;1781,69240
typedef enum AlterTableType1783,69259
	AT_AddColumn,1785,69289
	AT_AddColumnRecurse,1786,69324
	AT_AddColumnToView,1787,69386
	AT_ColumnDefault,1788,69453
	AT_DropNotNull,1789,69501
	AT_SetNotNull,1790,69554
	AT_DropExpression,1791,69605
	AT_CheckNotNull,1792,69662
	AT_SetStatistics,1793,69728
	AT_SetOptions,1794,69783
	AT_ResetOptions,1795,69837
	AT_SetStorage,1796,69894
	AT_DropColumn,1797,69944
	AT_DropColumnRecurse,1798,69981
	AT_AddIndex,1799,70044
	AT_ReAddIndex,1800,70077
	AT_AddConstraint,1801,70135
	AT_AddConstraintRecurse,1802,70177
	AT_ReAddConstraint,1803,70242
	AT_ReAddDomainConstraint,1804,70304
	AT_AlterConstraint,1805,70370
	AT_ValidateConstraint,1806,70416
	AT_ValidateConstraintRecurse,1807,70467
	AT_AddIndexConstraint,1808,70537
	AT_DropConstraint,1809,70604
	AT_DropConstraintRecurse,1810,70648
	AT_ReAddComment,1811,70714
	AT_AlterColumnType,1812,70773
	AT_AlterColumnGenericOptions,1813,70820
	AT_ChangeOwner,1814,70884
	AT_ClusterOn,1815,70923
	AT_DropCluster,1816,70958
	AT_SetLogged,1817,71004
	AT_SetUnLogged,1818,71039
	AT_DropOids,1819,71078
	AT_SetTableSpace,1820,71118
	AT_SetRelOptions,1821,71160
	AT_ResetRelOptions,1822,71223
	AT_ReplaceRelOptions,1823,71290
	AT_EnableTrig,1824,71359
	AT_EnableAlwaysTrig,1825,71404
	AT_EnableReplicaTrig,1826,71460
	AT_DisableTrig,1827,71518
	AT_EnableTrigAll,1828,71565
	AT_DisableTrigAll,1829,71611
	AT_EnableTrigUser,1830,71659
	AT_DisableTrigUser,1831,71707
	AT_EnableRule,1832,71757
	AT_EnableAlwaysRule,1833,71799
	AT_EnableReplicaRule,1834,71852
	AT_DisableRule,1835,71907
	AT_AddInherit,1836,71951
	AT_DropInherit,1837,71991
	AT_AddOf,1838,72035
	AT_DropOf,1839,72071
	AT_ReplicaIdentity,1840,72100
	AT_EnableRowSecurity,1841,72146
	AT_DisableRowSecurity,1842,72196
	AT_ForceRowSecurity,1843,72248
	AT_NoForceRowSecurity,1844,72296
	AT_GenericOptions,1845,72349
	AT_AttachPartition,1846,72391
	AT_DetachPartition,1847,72437
	AT_AddIdentity,1848,72483
	AT_SetIdentity,1849,72522
	AT_DropIdentity	1850,72576
} AlterTableType;1851,72616
typedef struct ReplicaIdentityStmt1853,72635
	NodeTag		type;1855,72672
	char		identity_type;1856,72688
	char	   *name;name1857,72710
} ReplicaIdentityStmt;1858,72726
typedef struct AlterTableCmd	1860,72750
	NodeTag		type;1862,72820
	AlterTableType subtype;1863,72836
	char	   *name;name1864,72902
	int16		num;1866,72993
	RoleSpec   *newowner;newowner1868,73075
	Node	   *def;def1869,73098
	DropBehavior behavior;1871,73193
	bool		missing_ok;1872,73259
} AlterTableCmd;1873,73308
typedef struct AlterCollationStmt1880,73402
	NodeTag		type;1882,73438
	List	   *collname;collname1883,73454
} AlterCollationStmt;1884,73474
typedef struct AlterDomainStmt1894,73660
	NodeTag		type;1896,73693
	char		subtype;1897,73709
	List	   *typeName;typeName1905,73956
	char	   *name;name1906,74001
	Node	   *def;def1907,74061
	DropBehavior behavior;1908,74120
	bool		missing_ok;1909,74186
} AlterDomainStmt;1910,74235
typedef enum GrantTargetType1917,74339
	ACL_TARGET_OBJECT,1919,74370
	ACL_TARGET_ALL_IN_SCHEMA,1920,74432
	ACL_TARGET_DEFAULTS	1921,74505
} GrantTargetType;1922,74559
typedef struct GrantStmt1924,74579
	NodeTag		type;1926,74606
	bool		is_grant;1927,74622
	GrantTargetType targtype;1928,74675
	ObjectType	objtype;1929,74733
	List	   *objects;objects1930,74794
	List	   *privileges;privileges1932,74911
	List	   *grantees;grantees1934,75013
	bool		grant_option;1935,75063
	DropBehavior behavior;1936,75119
} GrantStmt;1937,75177
typedef struct ObjectWithArgs1944,75410
	NodeTag		type;1946,75442
	List	   *objname;objname1947,75458
	List	   *objargs;objargs1948,75520
	bool		args_unspecified;1949,75569
} ObjectWithArgs;1952,75717
typedef struct AccessPriv1961,76025
	NodeTag		type;1963,76053
	char	   *priv_name;priv_name1964,76069
	List	   *cols;cols1965,76122
} AccessPriv;1966,76168
typedef struct GrantRoleStmt1977,76524
	NodeTag		type;1979,76555
	List	   *granted_roles;granted_roles1980,76571
	List	   *grantee_roles;grantee_roles1981,76638
	bool		is_grant;1982,76704
	bool		admin_opt;1983,76757
	RoleSpec   *grantor;grantor1984,76800
	DropBehavior behavior;1985,76868
} GrantRoleStmt;1986,76926
typedef struct AlterDefaultPrivilegesStmt1992,77038
	NodeTag		type;1994,77082
	List	   *options;options1995,77098
	GrantStmt  *action;action1996,77140
} AlterDefaultPrivilegesStmt;1997,77208
typedef struct CopyStmt2007,77497
	NodeTag		type;2009,77523
	RangeVar   *relation;relation2010,77539
	Node	   *query;query2011,77590
	List	   *attlist;attlist2013,77706
	bool		is_from;2015,77801
	bool		is_program;2016,77835
	char	   *filename;filename2017,77895
	List	   *options;options2018,77957
	Node	   *whereClause;whereClause2019,78005
} CopyStmt;2020,78060
	VAR_SET_VALUE,2031,78328
	VAR_SET_DEFAULT,2032,78369
	VAR_SET_CURRENT,2033,78414
	VAR_SET_MULTI,2034,78461
	VAR_RESET,2035,78523
	VAR_RESET_ALL	2036,78555
} VariableSetKind;2037,78589
typedef struct VariableSetStmt2039,78609
	NodeTag		type;2041,78642
	VariableSetKind kind;2042,78658
	char	   *name;name2043,78681
	List	   *args;args2044,78724
	bool		is_local;2045,78770
} VariableSetStmt;2046,78805
typedef struct VariableShowStmt2052,78899
	NodeTag		type;2054,78933
	char	   *name;name2055,78949
} VariableShowStmt;2056,78965
typedef struct CreateStmt2069,79377
	NodeTag		type;2071,79405
	RangeVar   *relation;relation2072,79421
	List	   *tableElts;tableElts2073,79470
	List	   *inhRelations;inhRelations2074,79537
	PartitionBoundSpec *partbound;partbound2076,79626
	PartitionSpec *partspec;partspec2077,79682
	TypeName   *ofTypename;ofTypename2078,79734
	List	   *constraints;constraints2079,79778
	List	   *options;options2080,79846
	OnCommitAction oncommit;2081,79897
	char	   *tablespacename;tablespacename2082,79954
	char	   *accessMethod;accessMethod2083,80014
	bool		if_not_exists;2084,80064
} CreateStmt;2085,80130
typedef enum ConstrType	2118,81607
	CONSTR_NULL,2120,81662
	CONSTR_NOTNULL,2122,81744
	CONSTR_DEFAULT,2123,81761
	CONSTR_IDENTITY,2124,81778
	CONSTR_GENERATED,2125,81796
	CONSTR_CHECK,2126,81815
	CONSTR_PRIMARY,2127,81830
	CONSTR_UNIQUE,2128,81847
	CONSTR_EXCLUSION,2129,81863
	CONSTR_FOREIGN,2130,81882
	CONSTR_ATTR_DEFERRABLE,2131,81899
	CONSTR_ATTR_NOT_DEFERRABLE,2132,81971
	CONSTR_ATTR_DEFERRED,2133,82000
	CONSTR_ATTR_IMMEDIATE2134,82023
} ConstrType;2135,82046
#define FKCONSTR_ACTION_NOACTION	2138,82092
#define FKCONSTR_ACTION_RESTRICT	2139,82129
#define FKCONSTR_ACTION_CASCADE	2140,82166
#define FKCONSTR_ACTION_SETNULL	2141,82203
#define FKCONSTR_ACTION_SETDEFAULT	2142,82240
#define FKCONSTR_MATCH_FULL	2145,82314
#define FKCONSTR_MATCH_PARTIAL	2146,82348
#define FKCONSTR_MATCH_SIMPLE	2147,82384
typedef struct Constraint2149,82420
	NodeTag		type;2151,82448
	ConstrType	contype;2152,82464
	char	   *conname;conname2155,82553
	bool		deferrable;2156,82615
	bool		initdeferred;2157,82653
	int			location;2158,82700
	bool		is_no_inherit;2161,82831
	Node	   *raw_expr;raw_expr2162,82890
	char	   *cooked_expr;cooked_expr2163,82951
	char		generated_when;2164,83017
	List	   *keys;keys2167,83136
	List	   *including;including2169,83216
	List	   *exclusions;exclusions2173,83350
	List	   *options;options2176,83496
	char	   *indexname;indexname2177,83547
	char	   *indexspace;indexspace2178,83613
	bool		reset_default_tblspc;2179,83677
	char	   *access_method;access_method2182,83846
	Node	   *where_clause;where_clause2183,83915
	RangeVar   *pktable;pktable2186,84018
	List	   *fk_attrs;fk_attrs2187,84065
	List	   *pk_attrs;pk_attrs2188,84118
	char		fk_matchtype;2189,84177
	char		fk_upd_action;2190,84226
	char		fk_del_action;2191,84271
	List	   *old_conpfeqop;old_conpfeqop2192,84316
	Oid			old_pktable_oid;2193,84389
	bool		skip_validation;2197,84546
	bool		initially_valid;2198,84610
} Constraint;2199,84674
typedef struct CreateTableSpaceStmt2206,84785
	NodeTag		type;2208,84823
	char	   *tablespacename;tablespacename2209,84839
	RoleSpec   *owner;owner2210,84865
	char	   *location;location2211,84885
	List	   *options;options2212,84905
} CreateTableSpaceStmt;2213,84924
typedef struct DropTableSpaceStmt2215,84949
	NodeTag		type;2217,84985
	char	   *tablespacename;tablespacename2218,85001
	bool		missing_ok;2219,85027
} DropTableSpaceStmt;2220,85076
typedef struct AlterTableSpaceOptionsStmt2222,85099
	NodeTag		type;2224,85143
	char	   *tablespacename;tablespacename2225,85159
	List	   *options;options2226,85185
	bool		isReset;2227,85204
} AlterTableSpaceOptionsStmt;2228,85220
typedef struct AlterTableMoveAllStmt2230,85251
	NodeTag		type;2232,85290
	char	   *orig_tablespacename;orig_tablespacename2233,85306
	ObjectType	objtype;2234,85337
	List	   *roles;roles2235,85385
	char	   *new_tablespacename;new_tablespacename2236,85443
	bool		nowait;2237,85473
} AlterTableMoveAllStmt;2238,85488
typedef struct CreateExtensionStmt2245,85609
	NodeTag		type;2247,85646
	char	   *extname;extname2248,85662
	bool		if_not_exists;2249,85681
	List	   *options;options2250,85747
} CreateExtensionStmt;2251,85795
typedef struct AlterExtensionStmt2254,85896
	NodeTag		type;2256,85932
	char	   *extname;extname2257,85948
	List	   *options;options2258,85967
} AlterExtensionStmt;2259,86015
typedef struct AlterExtensionContentsStmt2261,86038
	NodeTag		type;2263,86082
	char	   *extname;extname2264,86098
	int			action;2265,86141
	ObjectType	objtype;2266,86198
	Node	   *object;object2267,86240
} AlterExtensionContentsStmt;2268,86295
typedef struct CreateFdwStmt2275,86432
	NodeTag		type;2277,86463
	char	   *fdwname;fdwname2278,86479
	List	   *func_options;func_options2279,86531
	List	   *options;options2280,86587
} CreateFdwStmt;2281,86636
typedef struct AlterFdwStmt2283,86654
	NodeTag		type;2285,86684
	char	   *fdwname;fdwname2286,86700
	List	   *func_options;func_options2287,86752
	List	   *options;options2288,86808
} AlterFdwStmt;2289,86857
typedef struct CreateForeignServerStmt2296,86974
	NodeTag		type;2298,87015
	char	   *servername;servername2299,87031
	char	   *servertype;servertype2300,87072
	char	   *version;version2301,87122
	char	   *fdwname;fdwname2302,87172
	bool		if_not_exists;2303,87207
	List	   *options;options2304,87273
} CreateForeignServerStmt;2305,87325
typedef struct AlterForeignServerStmt2307,87353
	NodeTag		type;2309,87393
	char	   *servername;servername2310,87409
	char	   *version;version2311,87450
	List	   *options;options2312,87500
	bool		has_version;2313,87552
} AlterForeignServerStmt;2314,87596
typedef struct CreateForeignTableStmt2321,87715
	CreateStmt	base;2323,87755
	char	   *servername;servername2324,87773
	List	   *options;options2325,87795
} CreateForeignTableStmt;2326,87814
typedef struct CreateUserMappingStmt2333,87938
	NodeTag		type;2335,87977
	RoleSpec   *user;user2336,87993
	char	   *servername;servername2337,88030
	bool		if_not_exists;2338,88071
	List	   *options;options2339,88137
} CreateUserMappingStmt;2340,88189
typedef struct AlterUserMappingStmt2342,88215
	NodeTag		type;2344,88253
	RoleSpec   *user;user2345,88269
	char	   *servername;servername2346,88306
	List	   *options;options2347,88347
} AlterUserMappingStmt;2348,88399
typedef struct DropUserMappingStmt2350,88424
	NodeTag		type;2352,88461
	RoleSpec   *user;user2353,88477
	char	   *servername;servername2354,88514
	bool		missing_ok;2355,88555
} DropUserMappingStmt;2356,88605
typedef enum ImportForeignSchemaType2363,88722
	FDW_IMPORT_SCHEMA_ALL,2365,88761
	FDW_IMPORT_SCHEMA_LIMIT_TO,2366,88813
	FDW_IMPORT_SCHEMA_EXCEPT	2367,88885
} ImportForeignSchemaType;2368,88951
typedef struct ImportForeignSchemaStmt2370,88979
	NodeTag		type;2372,89020
	char	   *server_name;server_name2373,89036
	char	   *remote_schema;remote_schema2374,89081
	char	   *local_schema;local_schema2375,89140
	ImportForeignSchemaType list_type;2376,89204
	List	   *table_list;table_list2377,89265
	List	   *options;options2378,89311
} ImportForeignSchemaStmt;2379,89368
typedef struct CreatePolicyStmt2385,89478
	NodeTag		type;2387,89512
	char	   *policy_name;policy_name2388,89528
	RangeVar   *table;table2389,89571
	char	   *cmd_name;cmd_name2390,89636
	bool		permissive;2391,89702
	List	   *roles;roles2392,89761
	Node	   *qual;qual2393,89823
	Node	   *with_check;with_check2394,89870
} CreatePolicyStmt;2395,89934
typedef struct AlterPolicyStmt2401,90036
	NodeTag		type;2403,90069
	char	   *policy_name;policy_name2404,90085
	RangeVar   *table;table2405,90128
	List	   *roles;roles2406,90193
	Node	   *qual;qual2407,90255
	Node	   *with_check;with_check2408,90302
} AlterPolicyStmt;2409,90366
typedef struct CreateAmStmt2415,90475
	NodeTag		type;2417,90505
	char	   *amname;amname2418,90521
	List	   *handler_name;handler_name2419,90566
	char		amtype;2420,90618
} CreateAmStmt;2421,90663
typedef struct CreateTrigStmt2427,90765
	NodeTag		type;2429,90797
	char	   *trigname;trigname2430,90813
	RangeVar   *relation;relation2431,90855
	List	   *funcname;funcname2432,90908
	List	   *args;args2433,90966
	bool		row;2434,91023
	int16		timing;2436,91130
	int16		events;2438,91253
	List	   *columns;columns2439,91315
	Node	   *whenClause;whenClause2440,91378
	bool		isconstraint;2441,91440
	List	   *transitionRels;transitionRels2443,91536
	bool		deferrable;2445,91674
	bool		initdeferred;2446,91717
	RangeVar   *constrrel;constrrel2447,91775
} CreateTrigStmt;2448,91839
typedef struct CreateEventTrigStmt2454,91949
	NodeTag		type;2456,91986
	char	   *trigname;trigname2457,92002
	char	   *eventname;eventname2458,92044
	List	   *whenclause;whenclause2459,92091
	List	   *funcname;funcname2460,92158
} CreateEventTrigStmt;2461,92216
typedef struct AlterEventTrigStmt2467,92330
	NodeTag		type;2469,92366
	char	   *trigname;trigname2470,92382
	char		tgenabled;2471,92424
} AlterEventTrigStmt;2473,92520
typedef struct CreatePLangStmt2479,92630
	NodeTag		type;2481,92663
	bool		replace;2482,92679
	char	   *plname;plname2483,92733
	List	   *plhandler;plhandler2484,92767
	List	   *plinline;plinline2485,92833
	List	   *plvalidator;plvalidator2486,92898
	bool		pltrusted;2487,92968
} CreatePLangStmt;2488,93007
typedef enum RoleStmtType2499,93400
	ROLESTMT_ROLE,2501,93428
	ROLESTMT_USER,2502,93444
	ROLESTMT_GROUP2503,93460
} RoleStmtType;2504,93476
typedef struct CreateRoleStmt2506,93493
	NodeTag		type;2508,93525
	RoleStmtType stmt_type;2509,93541
	char	   *role;role2510,93589
	List	   *options;options2511,93623
} CreateRoleStmt;2512,93671
typedef struct AlterRoleStmt2514,93690
	NodeTag		type;2516,93721
	RoleSpec   *role;role2517,93737
	List	   *options;options2518,93769
	int			action;2519,93817
} AlterRoleStmt;2520,93876
typedef struct AlterRoleSetStmt2522,93894
	NodeTag		type;2524,93928
	RoleSpec   *role;role2525,93944
	char	   *database;database2526,93976
	VariableSetStmt *setstmt;setstmt2527,94026
} AlterRoleSetStmt;2528,94083
typedef struct DropRoleStmt2530,94104
	NodeTag		type;2532,94134
	List	   *roles;roles2533,94150
	bool		missing_ok;2534,94199
} DropRoleStmt;2535,94258
typedef struct CreateSeqStmt2542,94370
	NodeTag		type;2544,94401
	RangeVar   *sequence;sequence2545,94417
	List	   *options;options2546,94470
	Oid			ownerId;2547,94489
	bool		for_identity;2548,94551
	bool		if_not_exists;2549,94572
} CreateSeqStmt;2550,94638
typedef struct AlterSeqStmt2552,94656
	NodeTag		type;2554,94686
	RangeVar   *sequence;sequence2555,94702
	List	   *options;options2556,94754
	bool		for_identity;2557,94773
	bool		missing_ok;2558,94794
} AlterSeqStmt;2559,94853
typedef struct DefineStmt2565,94973
	NodeTag		type;2567,95001
	ObjectType	kind;2568,95017
	bool		oldstyle;2569,95069
	List	   *defnames;defnames2570,95130
	List	   *args;args2571,95196
	List	   *definition;definition2572,95251
	bool		if_not_exists;2573,95298
	bool		replace;2574,95364
} DefineStmt;2575,95414
typedef struct CreateDomainStmt2581,95513
	NodeTag		type;2583,95547
	List	   *domainname;domainname2584,95563
	TypeName   *typeName;typeName2585,95631
	CollateClause *collClause;collClause2586,95675
	List	   *constraints;constraints2587,95744
} CreateDomainStmt;2588,95812
typedef struct CreateOpClassStmt2594,95925
	NodeTag		type;2596,95960
	List	   *opclassname;opclassname2597,95976
	List	   *opfamilyname;opfamilyname2598,96044
	char	   *amname;amname2599,96113
	TypeName   *datatype;datatype2600,96171
	List	   *items;items2601,96228
	bool		isDefault;2602,96285
} CreateOpClassStmt;2603,96348
#define OPCLASS_ITEM_OPERATOR	2605,96370
#define OPCLASS_ITEM_FUNCTION	2606,96403
#define OPCLASS_ITEM_STORAGETYPE	2607,96436
typedef struct CreateOpClassItem2609,96472
	NodeTag		type;2611,96507
	int			itemtype;2612,96523
	ObjectWithArgs *name;name2613,96563
	int			number;2614,96628
	List	   *order_family;order_family2615,96684
	List	   *class_args;class_args2616,96747
	TypeName   *storedtype;storedtype2619,96891
} CreateOpClassItem;2620,96948
typedef struct CreateOpFamilyStmt2626,97063
	NodeTag		type;2628,97099
	List	   *opfamilyname;opfamilyname2629,97115
	char	   *amname;amname2630,97184
} CreateOpFamilyStmt;2631,97243
typedef struct AlterOpFamilyStmt2637,97358
	NodeTag		type;2639,97393
	List	   *opfamilyname;opfamilyname2640,97409
	char	   *amname;amname2641,97478
	bool		isDrop;2642,97537
	List	   *items;items2643,97583
} AlterOpFamilyStmt;2644,97640
typedef struct DropStmt2651,97794
	NodeTag		type;2653,97820
	List	   *objects;objects2654,97836
	ObjectType	removeType;2655,97876
	DropBehavior behavior;2656,97919
	bool		missing_ok;2657,97979
	bool		concurrent;2658,98038
} DropStmt;2659,98089
typedef struct TruncateStmt2665,98189
	NodeTag		type;2667,98219
	List	   *relations;relations2668,98235
	bool		restart_seqs;2669,98301
	DropBehavior behavior;2670,98353
} TruncateStmt;2671,98413
typedef struct CommentStmt2677,98513
	NodeTag		type;2679,98542
	ObjectType	objtype;2680,98558
	Node	   *object;object2681,98600
	char	   *comment;comment2682,98655
} CommentStmt;2683,98718
typedef struct SecLabelStmt2689,98821
	NodeTag		type;2691,98851
	ObjectType	objtype;2692,98867
	Node	   *object;object2693,98909
	char	   *provider;provider2694,98964
	char	   *label;label2695,99016
} SecLabelStmt;2696,99075
#define CURSOR_OPT_BINARY	2706,99379
#define CURSOR_OPT_SCROLL	2707,99426
#define CURSOR_OPT_NO_SCROLL	2708,99490
#define CURSOR_OPT_INSENSITIVE	2709,99559
#define CURSOR_OPT_HOLD	2710,99615
#define CURSOR_OPT_FAST_PLAN	2712,99736
#define CURSOR_OPT_GENERIC_PLAN 2713,99801
#define CURSOR_OPT_CUSTOM_PLAN	2714,99872
#define CURSOR_OPT_PARALLEL_OK	2715,99941
typedef struct DeclareCursorStmt2717,100003
	NodeTag		type;2719,100038
	char	   *portalname;portalname2720,100054
	int			options;2721,100111
	Node	   *query;query2722,100165
} DeclareCursorStmt;2723,100221
typedef struct ClosePortalStmt2729,100326
	NodeTag		type;2731,100359
	char	   *portalname;portalname2732,100375
} ClosePortalStmt;2734,100460
typedef enum FetchDirection2740,100568
	FETCH_FORWARD,2743,100671
	FETCH_BACKWARD,2744,100687
	FETCH_ABSOLUTE,2746,100776
	FETCH_RELATIVE2747,100793
} FetchDirection;2748,100809
#define FETCH_ALL	2750,100828
typedef struct FetchStmt2752,100856
	NodeTag		type;2754,100883
	FetchDirection direction;2755,100899
	long		howMany;2756,100942
	char	   *portalname;portalname2757,101002
	bool		ismove;2758,101055
} FetchStmt;2759,101091
typedef struct IndexStmt2772,101591
	NodeTag		type;2774,101618
	char	   *idxname;idxname2775,101634
	RangeVar   *relation;relation2776,101699
	char	   *accessMethod;accessMethod2777,101756
	char	   *tableSpace;tableSpace2778,101820
	List	   *indexParams;indexParams2779,101881
	List	   *indexIncludingParams;indexIncludingParams2780,101948
	List	   *options;options2782,102048
	Node	   *whereClause;whereClause2783,102113
	List	   *excludeOpNames;excludeOpNames2784,102182
	char	   *idxcomment;idxcomment2785,102255
	Oid			indexOid;2786,102319
	Oid			oldNode;2787,102376
	SubTransactionId oldCreateSubid;2788,102439
	SubTransactionId oldFirstRelfilenodeSubid;2789,102505
	bool		unique;2791,102606
	bool		primary;2792,102646
	bool		isconstraint;2793,102693
	bool		deferrable;2794,102756
	bool		initdeferred;2795,102812
	bool		transformed;2796,102877
	bool		concurrent;2797,102944
	bool		if_not_exists;2798,103011
	bool		reset_default_tblspc;2799,103080
} IndexStmt;2801,103172
typedef struct CreateStatsStmt2807,103274
	NodeTag		type;2809,103307
	List	   *defnames;defnames2810,103323
	List	   *stat_types;stat_types2811,103389
	List	   *exprs;exprs2812,103453
	List	   *relations;relations2813,103513
	char	   *stxcomment;stxcomment2814,103583
	bool		if_not_exists;2815,103647
} CreateStatsStmt;2816,103715
typedef struct AlterStatsStmt2822,103822
	NodeTag		type;2824,103854
	List	   *defnames;defnames2825,103870
	int			stxstattarget;2826,103936
	bool		missing_ok;2827,103982
} AlterStatsStmt;2828,104051
typedef struct CreateFunctionStmt2834,104156
	NodeTag		type;2836,104192
	bool		is_procedure;2837,104208
	bool		replace;2838,104264
	List	   *funcname;funcname2839,104318
	List	   *parameters;parameters2840,104382
	TypeName   *returnType;returnType2841,104439
	List	   *options;options2842,104487
} CreateFunctionStmt;2843,104531
typedef enum FunctionParameterMode2845,104554
	FUNC_PARAM_IN 2848,104660
	FUNC_PARAM_OUT 2849,104700
	FUNC_PARAM_INOUT 2850,104742
	FUNC_PARAM_VARIADIC 2851,104779
	FUNC_PARAM_TABLE 2852,104837
} FunctionParameterMode;2853,104897
typedef struct FunctionParameter2855,104923
	NodeTag		type;2857,104958
	char	   *name;name2858,104974
	TypeName   *argType;argType2859,105035
	FunctionParameterMode mode;2860,105092
	Node	   *defexpr;defexpr2861,105138
} FunctionParameter;2862,105203
typedef struct AlterFunctionStmt2864,105225
	NodeTag		type;2866,105260
	ObjectType	objtype;2867,105276
	ObjectWithArgs *func;func2868,105297
	List	   *actions;actions2869,105353
} AlterFunctionStmt;2870,105395
typedef struct DoStmt2878,105571
	NodeTag		type;2880,105595
	List	   *args;args2881,105611
} DoStmt;2882,105657
typedef struct InlineCodeBlock2884,105668
	NodeTag		type;2886,105701
	char	   *source_text;source_text2887,105717
	Oid			langOid;2888,105782
	bool		langIsTrusted;2889,105830
	bool		atomic;2890,105891
} InlineCodeBlock;2891,105939
typedef struct CallStmt2897,106034
	NodeTag		type;2899,106060
	FuncCall   *funccall;funccall2900,106076
	FuncExpr   *funcexpr;funcexpr2901,106122
} CallStmt;2902,106164
typedef struct CallContext2904,106177
	NodeTag		type;2906,106206
	bool		atomic;2907,106222
} CallContext;2908,106237
typedef struct RenameStmt2914,106343
	NodeTag		type;2916,106371
	ObjectType	renameType;2917,106387
	ObjectType	relationType;2918,106451
	RangeVar   *relation;relation2919,106524
	Node	   *object;object2920,106575
	char	   *subname;subname2921,106632
	char	   *newname;newname2923,106723
	DropBehavior behavior;2924,106762
	bool		missing_ok;2925,106822
} RenameStmt;2926,106871
typedef struct AlterObjectDependsStmt2932,106987
	NodeTag		type;2934,107027
	ObjectType	objectType;2935,107043
	RangeVar   *relation;relation2936,107111
	Node	   *object;object2937,107169
	Value	   *extname;extname2938,107214
	bool		remove;2939,107256
} AlterObjectDependsStmt;2940,107318
typedef struct AlterObjectSchemaStmt2946,107439
	NodeTag		type;2948,107478
	ObjectType	objectType;2949,107494
	RangeVar   *relation;relation2950,107556
	Node	   *object;object2951,107607
	char	   *newschema;newschema2952,107664
	bool		missing_ok;2953,107707
} AlterObjectSchemaStmt;2954,107756
typedef struct AlterOwnerStmt2960,107871
	NodeTag		type;2962,107903
	ObjectType	objectType;2963,107919
	RangeVar   *relation;relation2964,107981
	Node	   *object;object2965,108032
	RoleSpec   *newowner;newowner2966,108089
} AlterOwnerStmt;2967,108133
typedef struct AlterOperatorStmt2973,108247
	NodeTag		type;2975,108282
	ObjectWithArgs *opername;opername2976,108298
	List	   *options;options2977,108364
} AlterOperatorStmt;2978,108412
typedef struct AlterTypeStmt2984,108529
	NodeTag		type;2986,108560
	List	   *typeName;typeName2987,108576
	List	   *options;options2988,108634
} AlterTypeStmt;2989,108682
typedef struct RuleStmt2995,108782
	NodeTag		type;2997,108808
	RangeVar   *relation;relation2998,108824
	char	   *rulename;rulename2999,108879
	Node	   *whereClause;whereClause3000,108923
	CmdType		event;3001,108967
	bool		instead;3002,109012
	List	   *actions;actions3003,109054
	bool		replace;3004,109102
} RuleStmt;3005,109136
typedef struct NotifyStmt3011,109226
	NodeTag		type;3013,109254
	char	   *conditionname;conditionname3014,109270
	char	   *payload;payload3015,109326
} NotifyStmt;3016,109388
typedef struct ListenStmt3022,109480
	NodeTag		type;3024,109508
	char	   *conditionname;conditionname3025,109524
} ListenStmt;3026,109583
typedef struct UnlistenStmt3032,109677
	NodeTag		type;3034,109707
	char	   *conditionname;conditionname3035,109723
} UnlistenStmt;3036,109791
typedef enum TransactionStmtKind3042,109914
	TRANS_STMT_BEGIN,3044,109949
	TRANS_STMT_START,3045,109968
	TRANS_STMT_COMMIT,3046,110027
	TRANS_STMT_ROLLBACK,3047,110047
	TRANS_STMT_SAVEPOINT,3048,110069
	TRANS_STMT_RELEASE,3049,110092
	TRANS_STMT_ROLLBACK_TO,3050,110113
	TRANS_STMT_PREPARE,3051,110138
	TRANS_STMT_COMMIT_PREPARED,3052,110159
	TRANS_STMT_ROLLBACK_PREPARED3053,110188
} TransactionStmtKind;3054,110218
typedef struct TransactionStmt3056,110242
	NodeTag		type;3058,110275
	TransactionStmtKind kind;3059,110291
	List	   *options;options3060,110334
	char	   *savepoint_name;savepoint_name3061,110385
	char	   *gid;gid3062,110440
	bool		chain;3063,110501
} TransactionStmt;3064,110540
typedef struct CompositeTypeStmt3070,110659
	NodeTag		type;3072,110694
	RangeVar   *typevar;typevar3073,110710
	List	   *coldeflist;coldeflist3074,110772
} CompositeTypeStmt;3075,110825
typedef struct CreateEnumStmt3081,110941
	NodeTag		type;3083,110973
	List	   *typeName;typeName3084,110989
	List	   *vals;vals3085,111055
} CreateEnumStmt;3086,111115
typedef struct CreateRangeStmt3092,111229
	NodeTag		type;3094,111262
	List	   *typeName;typeName3095,111278
	List	   *params;params3096,111344
} CreateRangeStmt;3097,111405
typedef struct AlterEnumStmt3103,111518
	NodeTag		type;3105,111549
	List	   *typeName;typeName3106,111565
	char	   *oldVal;oldVal3107,111631
	char	   *newVal;newVal3108,111692
	char	   *newValNeighbor;newValNeighbor3109,111740
	bool		newValIsAfter;3110,111809
	bool		skipIfNewValExists;3111,111874
} AlterEnumStmt;3112,111939
typedef enum ViewCheckOption3118,112039
	NO_CHECK_OPTION,3120,112070
	LOCAL_CHECK_OPTION,3121,112088
	CASCADED_CHECK_OPTION3122,112109
} ViewCheckOption;3123,112132
typedef struct ViewStmt3125,112152
	NodeTag		type;3127,112178
	RangeVar   *view;view3128,112194
	List	   *aliases;aliases3129,112244
	Node	   *query;query3130,112290
	bool		replace;3131,112354
	List	   *options;options3132,112403
	ViewCheckOption withCheckOption;3133,112454
} ViewStmt;3134,112512
typedef struct LoadStmt3140,112600
	NodeTag		type;3142,112626
	char	   *filename;filename3143,112642
} LoadStmt;3144,112682
typedef struct CreatedbStmt3150,112774
	NodeTag		type;3152,112804
	char	   *dbname;dbname3153,112820
	List	   *options;options3154,112873
} CreatedbStmt;3155,112921
typedef struct AlterDatabaseStmt3161,113012
	NodeTag		type;3163,113047
	char	   *dbname;dbname3164,113063
	List	   *options;options3165,113115
} AlterDatabaseStmt;3166,113163
typedef struct AlterDatabaseSetStmt3168,113185
	NodeTag		type;3170,113223
	char	   *dbname;dbname3171,113239
	VariableSetStmt *setstmt;setstmt3172,113279
} AlterDatabaseSetStmt;3173,113336
typedef struct DropdbStmt3179,113438
	NodeTag		type;3181,113466
	char	   *dbname;dbname3182,113482
	bool		missing_ok;3183,113525
	List	   *options;options3184,113580
} DropdbStmt;3185,113640
typedef struct AlterSystemStmt3191,113738
	NodeTag		type;3193,113771
	VariableSetStmt *setstmt;setstmt3194,113787
} AlterSystemStmt;3195,113835
typedef enum ClusterOption3201,113981
	CLUOPT_RECHECK 3203,114010
	CLUOPT_VERBOSE 3204,114065
} ClusterOption;3205,114117
typedef struct ClusterStmt3207,114135
	NodeTag		type;3209,114164
	RangeVar   *relation;relation3210,114180
	char	   *indexname;indexname3211,114249
	int			options;3212,114300
} ClusterStmt;3213,114349
typedef struct VacuumStmt3222,114564
	NodeTag		type;3224,114592
	List	   *options;options3225,114608
	List	   *rels;rels3226,114656
	bool		is_vacuumcmd;3227,114719
} VacuumStmt;3228,114781
typedef struct VacuumRelation3237,115048
	NodeTag		type;3239,115080
	RangeVar   *relation;relation3240,115096
	Oid			oid;3241,115157
	List	   *va_cols;va_cols3242,115218
} VacuumRelation;3243,115281
typedef struct ExplainStmt3253,115580
	NodeTag		type;3255,115609
	Node	   *query;query3256,115625
	List	   *options;options3257,115681
} ExplainStmt;3258,115729
typedef struct CreateTableAsStmt3273,116304
	NodeTag		type;3275,116339
	Node	   *query;query3276,116355
	IntoClause *into;into3277,116411
	ObjectType	objtype;3278,116456
	bool		is_select_into;3279,116515
	bool		if_not_exists;3280,116574
} CreateTableAsStmt;3281,116640
typedef struct RefreshMatViewStmt3287,116758
	NodeTag		type;3289,116794
	bool		concurrent;3290,116810
	bool		skipData;3291,116861
	RangeVar   *relation;relation3292,116907
} RefreshMatViewStmt;3293,116961
typedef struct CheckPointStmt3299,117064
	NodeTag		type;3301,117096
} CheckPointStmt;3302,117112
typedef enum DiscardMode3309,117209
	DISCARD_ALL,3311,117236
	DISCARD_PLANS,3312,117250
	DISCARD_SEQUENCES,3313,117266
	DISCARD_TEMP3314,117286
} DiscardMode;3315,117300
typedef struct DiscardStmt3317,117316
	NodeTag		type;3319,117345
	DiscardMode target;3320,117361
} DiscardStmt;3321,117382
typedef struct LockStmt3327,117473
	NodeTag		type;3329,117499
	List	   *relations;relations3330,117515
	int			mode;3331,117561
	bool		nowait;3332,117592
} LockStmt;3333,117628
typedef struct ConstraintsSetStmt3339,117727
	NodeTag		type;3341,117763
	List	   *constraints;constraints3342,117779
	bool		deferred;3343,117835
} ConstraintsSetStmt;3344,117852
#define REINDEXOPT_VERBOSE 3352,117976
#define REINDEXOPT_REPORT_PROGRESS 3353,118038
typedef enum ReindexObjectType3355,118112
	REINDEX_OBJECT_INDEX,3357,118145
	REINDEX_OBJECT_TABLE,3358,118181
	REINDEX_OBJECT_SCHEMA,3359,118238
	REINDEX_OBJECT_SYSTEM,3360,118276
	REINDEX_OBJECT_DATABASE	3361,118323
} ReindexObjectType;3362,118364
typedef struct ReindexStmt3364,118386
	NodeTag		type;3366,118415
	ReindexObjectType kind;3367,118431
	RangeVar   *relation;relation3369,118523
	const char *name;name3370,118579
	int			options;3371,118634
	bool		concurrent;3372,118679
} ReindexStmt;3373,118727
typedef struct CreateConversionStmt3379,118831
	NodeTag		type;3381,118869
	List	   *conversion_name;conversion_name3382,118885
	char	   *for_encoding_name;for_encoding_name3383,118941
	char	   *to_encoding_name;to_encoding_name3384,118997
	List	   *func_name;func_name3385,119057
	bool		def;3386,119120
} CreateConversionStmt;3387,119170
typedef struct CreateCastStmt3393,119276
	NodeTag		type;3395,119308
	TypeName   *sourcetype;sourcetype3396,119324
	TypeName   *targettype;targettype3397,119349
	ObjectWithArgs *func;func3398,119374
	CoercionContext context;3399,119397
	bool		inout;3400,119423
} CreateCastStmt;3401,119437
typedef struct CreateTransformStmt3407,119542
	NodeTag		type;3409,119579
	bool		replace;3410,119595
	TypeName   *type_name;type_name3411,119611
	char	   *lang;lang3412,119635
	ObjectWithArgs *fromsql;fromsql3413,119651
	ObjectWithArgs *tosql;tosql3414,119677
} CreateTransformStmt;3415,119701
typedef struct PrepareStmt3421,119803
	NodeTag		type;3423,119832
	char	   *name;name3424,119848
	List	   *argtypes;argtypes3425,119896
	Node	   *query;query3426,119962
} PrepareStmt;3427,120025
typedef struct ExecuteStmt3435,120121
	NodeTag		type;3437,120150
	char	   *name;name3438,120166
	List	   *params;params3439,120222
} ExecuteStmt;3440,120279
typedef struct DeallocateStmt3447,120377
	NodeTag		type;3449,120409
	char	   *name;name3450,120425
} DeallocateStmt;3452,120513
typedef struct DropOwnedStmt3457,120564
	NodeTag		type;3459,120595
	List	   *roles;roles3460,120611
	DropBehavior behavior;3461,120628
} DropOwnedStmt;3462,120652
typedef struct ReassignOwnedStmt3467,120706
	NodeTag		type;3469,120741
	List	   *roles;roles3470,120757
	RoleSpec   *newrole;newrole3471,120774
} ReassignOwnedStmt;3472,120796
typedef struct AlterTSDictionaryStmt3477,120897
	NodeTag		type;3479,120936
	List	   *dictname;dictname3480,120952
	List	   *options;options3481,121018
} AlterTSDictionaryStmt;3482,121066
typedef enum AlterTSConfigType3487,121174
	ALTER_TSCONFIG_ADD_MAPPING,3489,121207
	ALTER_TSCONFIG_ALTER_MAPPING_FOR_TOKEN,3490,121236
	ALTER_TSCONFIG_REPLACE_DICT,3491,121277
	ALTER_TSCONFIG_REPLACE_DICT_FOR_TOKEN,3492,121307
	ALTER_TSCONFIG_DROP_MAPPING3493,121347
} AlterTSConfigType;3494,121376
typedef struct AlterTSConfigurationStmt3496,121398
	NodeTag		type;3498,121440
	AlterTSConfigType kind;3499,121456
	List	   *cfgname;cfgname3500,121520
	List	   *tokentype;tokentype3506,121727
	List	   *dicts;dicts3507,121777
	bool		override;3508,121832
	bool		replace;3509,121885
	bool		missing_ok;3510,121948
} AlterTSConfigurationStmt;3511,122008
typedef struct CreatePublicationStmt3514,122038
	NodeTag		type;3516,122077
	char	   *pubname;pubname3517,122093
	List	   *options;options3518,122143
	List	   *tables;tables3519,122191
	bool		for_all_tables;3520,122248
} CreatePublicationStmt;3521,122318
typedef struct AlterPublicationStmt3523,122344
	NodeTag		type;3525,122382
	char	   *pubname;pubname3526,122398
	List	   *options;options3529,122503
	List	   *tables;tables3532,122616
	bool		for_all_tables;3533,122669
	DefElemAction tableAction;3534,122739
} AlterPublicationStmt;3535,122812
typedef struct CreateSubscriptionStmt3537,122837
	NodeTag		type;3539,122877
	char	   *subname;subname3540,122893
	char	   *conninfo;conninfo3541,122944
	List	   *publication;publication3542,123002
	List	   *options;options3543,123071
} CreateSubscriptionStmt;3544,123119
typedef enum AlterSubscriptionType3546,123146
	ALTER_SUBSCRIPTION_OPTIONS,3548,123183
	ALTER_SUBSCRIPTION_CONNECTION,3549,123212
	ALTER_SUBSCRIPTION_PUBLICATION,3550,123244
	ALTER_SUBSCRIPTION_REFRESH,3551,123277
	ALTER_SUBSCRIPTION_ENABLED3552,123306
} AlterSubscriptionType;3553,123334
typedef struct AlterSubscriptionStmt3555,123360
	NodeTag		type;3557,123399
	AlterSubscriptionType kind;3558,123415
	char	   *subname;subname3559,123482
	char	   *conninfo;conninfo3560,123533
	List	   *publication;publication3561,123591
	List	   *options;options3562,123660
} AlterSubscriptionStmt;3563,123708
typedef struct DropSubscriptionStmt3565,123734
	NodeTag		type;3567,123772
	char	   *subname;subname3568,123788
	bool		missing_ok;3569,123839
	DropBehavior behavior;3570,123888
} DropSubscriptionStmt;3571,123948

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/pg_list.h,3329
#define PG_LIST_H38,1537
typedef union ListCell43,1583
	void	   *ptr_value;ptr_value45,1608
	int			int_value;46,1629
	Oid			oid_value;47,1647
} ListCell;48,1665
typedef struct List50,1678
	NodeTag		type;52,1700
	int			length;53,1756
	int			max_length;54,1816
	ListCell   *elements;elements55,1873
	ListCell	initial_elements[initial_elements57,1995
} List;59,2117
#define NIL	65,2262
typedef struct ForEachState70,2354
	const List *l;l72,2384
	int			i;73,2436
} ForEachState;74,2477
typedef struct ForBothState76,2494
	const List *l1;l178,2524
	const List *l2;l279,2578
	int			i;80,2595
} ForBothState;81,2635
typedef struct ForBothCellState83,2652
	const List *l1;l185,2686
	const List *l2;l286,2740
	int			i1;87,2757
	int			i2;88,2801
} ForBothCellState;89,2812
typedef struct ForThreeState91,2833
	const List *l1;l193,2864
	const List *l2;l294,2918
	const List *l3;l395,2935
	int			i;96,2952
} ForThreeState;97,2992
typedef struct ForFourState99,3010
	const List *l1;l1101,3040
	const List *l2;l2102,3094
	const List *l3;l3103,3111
	const List *l4;l4104,3128
	int			i;105,3145
} ForFourState;106,3185
typedef struct ForFiveState108,3202
	const List *l1;l1110,3232
	const List *l2;l2111,3286
	const List *l3;l3112,3303
	const List *l4;l4113,3320
	const List *l5;l5114,3337
	int			i;115,3354
} ForFiveState;116,3394
list_head(125,3592
list_tail(132,3743
list_second_cell(139,3914
list_third_cell(149,4116
list_fourth_cell(159,4318
list_length(169,4472
#define lfirst(190,5214
#define lfirst_int(191,5254
#define lfirst_oid(192,5297
#define lfirst_node(193,5340
#define linitial(195,5397
#define linitial_int(196,5441
#define linitial_oid(197,5492
#define linitial_node(198,5543
#define lsecond(200,5602
#define lsecond_int(201,5652
#define lsecond_oid(202,5709
#define lsecond_node(203,5766
#define lthird(205,5823
#define lthird_int(206,5871
#define lthird_oid(207,5926
#define lthird_node(208,5981
#define lfourth(210,6037
#define lfourth_int(211,6087
#define lfourth_oid(212,6144
#define lfourth_node(213,6201
#define llast(215,6258
#define llast_int(216,6299
#define llast_oid(217,6347
#define llast_node(218,6395
#define list_make_ptr_cell(223,6510
#define list_make_int_cell(224,6572
#define list_make_oid_cell(225,6634
#define list_make1(227,6697
#define list_make2(229,6771
#define list_make3(231,6872
#define list_make4(234,7007
#define list_make1_int(238,7170
#define list_make2_int(240,7251
#define list_make3_int(242,7359
#define list_make4_int(245,7501
#define list_make1_oid(249,7671
#define list_make2_oid(251,7752
#define list_make3_oid(253,7860
#define list_make4_oid(256,8002
list_nth_cell(265,8315
list_nth(277,8586
list_nth_int(288,8800
list_nth_oid(299,9021
#define list_nth_node(305,9137
list_cell_number(311,9294
lnext(321,9549
#define foreach(351,10773
#define foreach_delete_current(368,11436
#define foreach_current_index(381,11967
#define for_each_cell(390,12189
for_each_cell_setup(399,12533
#define forboth(419,13244
#define multi_for_advance_cell(426,13538
#define for_both_cell(441,14193
for_both_cell_setup(450,14608
#define forthree(464,14948
#define forfour(476,15386
#define forfive(489,15921
typedef int (*list_sort_comparator)list_sort_comparator574,19779

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/nodes.h,13512
#define NODES_H15,407
typedef enum NodeTag26,885
	T_Invalid 28,908
	T_IndexInfo,33,976
	T_ExprContext,34,990
	T_ProjectionInfo,35,1006
	T_JunkFilter,36,1025
	T_OnConflictSetState,37,1040
	T_ResultRelInfo,38,1063
	T_EState,39,1081
	T_TupleTableSlot,40,1092
	T_Plan,45,1159
	T_Result,46,1168
	T_ProjectSet,47,1179
	T_ModifyTable,48,1194
	T_Append,49,1210
	T_MergeAppend,50,1221
	T_RecursiveUnion,51,1237
	T_BitmapAnd,52,1256
	T_BitmapOr,53,1270
	T_Scan,54,1283
	T_SeqScan,55,1292
	T_SampleScan,56,1304
	T_IndexScan,57,1319
	T_IndexOnlyScan,58,1333
	T_BitmapIndexScan,59,1351
	T_BitmapHeapScan,60,1371
	T_TidScan,61,1390
	T_SubqueryScan,62,1402
	T_FunctionScan,63,1419
	T_ValuesScan,64,1436
	T_TableFuncScan,65,1451
	T_CteScan,66,1469
	T_NamedTuplestoreScan,67,1481
	T_WorkTableScan,68,1505
	T_ForeignScan,69,1523
	T_CustomScan,70,1539
	T_Join,71,1554
	T_NestLoop,72,1563
	T_MergeJoin,73,1576
	T_HashJoin,74,1590
	T_Material,75,1603
	T_Sort,76,1616
	T_IncrementalSort,77,1625
	T_Group,78,1645
	T_Agg,79,1655
	T_WindowAgg,80,1663
	T_Unique,81,1677
	T_Gather,82,1688
	T_GatherMerge,83,1699
	T_Hash,84,1715
	T_SetOp,85,1724
	T_LockRows,86,1734
	T_Limit,87,1747
	T_NestLoopParam,89,1797
	T_PlanRowMark,90,1815
	T_PartitionPruneInfo,91,1831
	T_PartitionedRelPruneInfo,92,1854
	T_PartitionPruneStepOp,93,1882
	T_PartitionPruneStepCombine,94,1907
	T_PlanInvalItem,95,1937
	T_PlanState,102,2074
	T_ResultState,103,2088
	T_ProjectSetState,104,2104
	T_ModifyTableState,105,2124
	T_AppendState,106,2145
	T_MergeAppendState,107,2161
	T_RecursiveUnionState,108,2182
	T_BitmapAndState,109,2206
	T_BitmapOrState,110,2225
	T_ScanState,111,2243
	T_SeqScanState,112,2257
	T_SampleScanState,113,2274
	T_IndexScanState,114,2294
	T_IndexOnlyScanState,115,2313
	T_BitmapIndexScanState,116,2336
	T_BitmapHeapScanState,117,2361
	T_TidScanState,118,2385
	T_SubqueryScanState,119,2402
	T_FunctionScanState,120,2424
	T_TableFuncScanState,121,2446
	T_ValuesScanState,122,2469
	T_CteScanState,123,2489
	T_NamedTuplestoreScanState,124,2506
	T_WorkTableScanState,125,2535
	T_ForeignScanState,126,2558
	T_CustomScanState,127,2579
	T_JoinState,128,2599
	T_NestLoopState,129,2613
	T_MergeJoinState,130,2631
	T_HashJoinState,131,2650
	T_MaterialState,132,2668
	T_SortState,133,2686
	T_IncrementalSortState,134,2700
	T_GroupState,135,2725
	T_AggState,136,2740
	T_WindowAggState,137,2753
	T_UniqueState,138,2772
	T_GatherState,139,2788
	T_GatherMergeState,140,2804
	T_HashState,141,2825
	T_SetOpState,142,2839
	T_LockRowsState,143,2854
	T_LimitState,144,2872
	T_Alias,149,2940
	T_RangeVar,150,2950
	T_TableFunc,151,2963
	T_Expr,152,2977
	T_Var,153,2986
	T_Const,154,2994
	T_Param,155,3004
	T_Aggref,156,3014
	T_GroupingFunc,157,3025
	T_WindowFunc,158,3042
	T_SubscriptingRef,159,3057
	T_FuncExpr,160,3077
	T_NamedArgExpr,161,3090
	T_OpExpr,162,3107
	T_DistinctExpr,163,3118
	T_NullIfExpr,164,3135
	T_ScalarArrayOpExpr,165,3150
	T_BoolExpr,166,3172
	T_SubLink,167,3185
	T_SubPlan,168,3197
	T_AlternativeSubPlan,169,3209
	T_FieldSelect,170,3232
	T_FieldStore,171,3248
	T_RelabelType,172,3263
	T_CoerceViaIO,173,3279
	T_ArrayCoerceExpr,174,3295
	T_ConvertRowtypeExpr,175,3315
	T_CollateExpr,176,3338
	T_CaseExpr,177,3354
	T_CaseWhen,178,3367
	T_CaseTestExpr,179,3380
	T_ArrayExpr,180,3397
	T_RowExpr,181,3411
	T_RowCompareExpr,182,3423
	T_CoalesceExpr,183,3442
	T_MinMaxExpr,184,3459
	T_SQLValueFunction,185,3474
	T_XmlExpr,186,3495
	T_NullTest,187,3507
	T_BooleanTest,188,3520
	T_CoerceToDomain,189,3536
	T_CoerceToDomainValue,190,3555
	T_SetToDefault,191,3579
	T_CurrentOfExpr,192,3596
	T_NextValueExpr,193,3614
	T_InferenceElem,194,3632
	T_TargetEntry,195,3650
	T_RangeTblRef,196,3666
	T_JoinExpr,197,3682
	T_FromExpr,198,3695
	T_OnConflictExpr,199,3708
	T_IntoClause,200,3727
	T_ExprState,211,4161
	T_AggrefExprState,212,4175
	T_WindowFuncExprState,213,4195
	T_SetExprState,214,4219
	T_SubPlanState,215,4236
	T_AlternativeSubPlanState,216,4253
	T_DomainConstraintState,217,4281
	T_PlannerInfo,222,4358
	T_PlannerGlobal,223,4374
	T_RelOptInfo,224,4392
	T_IndexOptInfo,225,4407
	T_ForeignKeyOptInfo,226,4424
	T_ParamPathInfo,227,4446
	T_Path,228,4464
	T_IndexPath,229,4473
	T_BitmapHeapPath,230,4487
	T_BitmapAndPath,231,4506
	T_BitmapOrPath,232,4524
	T_TidPath,233,4541
	T_SubqueryScanPath,234,4553
	T_ForeignPath,235,4574
	T_CustomPath,236,4590
	T_NestPath,237,4605
	T_MergePath,238,4618
	T_HashPath,239,4632
	T_AppendPath,240,4645
	T_MergeAppendPath,241,4660
	T_GroupResultPath,242,4680
	T_MaterialPath,243,4700
	T_UniquePath,244,4717
	T_GatherPath,245,4732
	T_GatherMergePath,246,4747
	T_ProjectionPath,247,4767
	T_ProjectSetPath,248,4786
	T_SortPath,249,4805
	T_IncrementalSortPath,250,4818
	T_GroupPath,251,4842
	T_UpperUniquePath,252,4856
	T_AggPath,253,4876
	T_GroupingSetsPath,254,4888
	T_MinMaxAggPath,255,4909
	T_WindowAggPath,256,4927
	T_SetOpPath,257,4945
	T_RecursiveUnionPath,258,4959
	T_LockRowsPath,259,4982
	T_ModifyTablePath,260,4999
	T_LimitPath,261,5019
	T_EquivalenceClass,263,5073
	T_EquivalenceMember,264,5094
	T_PathKey,265,5116
	T_PathTarget,266,5128
	T_RestrictInfo,267,5143
	T_IndexClause,268,5160
	T_PlaceHolderVar,269,5176
	T_SpecialJoinInfo,270,5195
	T_AppendRelInfo,271,5215
	T_PlaceHolderInfo,272,5233
	T_MinMaxAggInfo,273,5253
	T_PlannerParamItem,274,5271
	T_RollupData,275,5292
	T_GroupingSetData,276,5307
	T_StatisticExtInfo,277,5327
	T_MemoryContext,282,5397
	T_AllocSetContext,283,5415
	T_SlabContext,284,5435
	T_GenerationContext,285,5451
	T_Value,290,5518
	T_Integer,291,5528
	T_Float,292,5540
	T_String,293,5550
	T_BitString,294,5561
	T_Null,295,5575
	T_List,300,5630
	T_IntList,301,5639
	T_OidList,302,5651
	T_ExtensibleNode,307,5718
	T_RawStmt,312,5801
	T_Query,313,5813
	T_PlannedStmt,314,5823
	T_InsertStmt,315,5839
	T_DeleteStmt,316,5854
	T_UpdateStmt,317,5869
	T_SelectStmt,318,5884
	T_AlterTableStmt,319,5899
	T_AlterTableCmd,320,5918
	T_AlterDomainStmt,321,5936
	T_SetOperationStmt,322,5956
	T_GrantStmt,323,5977
	T_GrantRoleStmt,324,5991
	T_AlterDefaultPrivilegesStmt,325,6009
	T_ClosePortalStmt,326,6040
	T_ClusterStmt,327,6060
	T_CopyStmt,328,6076
	T_CreateStmt,329,6089
	T_DefineStmt,330,6104
	T_DropStmt,331,6119
	T_TruncateStmt,332,6132
	T_CommentStmt,333,6149
	T_FetchStmt,334,6165
	T_IndexStmt,335,6179
	T_CreateFunctionStmt,336,6193
	T_AlterFunctionStmt,337,6216
	T_DoStmt,338,6238
	T_RenameStmt,339,6249
	T_RuleStmt,340,6264
	T_NotifyStmt,341,6277
	T_ListenStmt,342,6292
	T_UnlistenStmt,343,6307
	T_TransactionStmt,344,6324
	T_ViewStmt,345,6344
	T_LoadStmt,346,6357
	T_CreateDomainStmt,347,6370
	T_CreatedbStmt,348,6391
	T_DropdbStmt,349,6408
	T_VacuumStmt,350,6423
	T_ExplainStmt,351,6438
	T_CreateTableAsStmt,352,6454
	T_CreateSeqStmt,353,6476
	T_AlterSeqStmt,354,6494
	T_VariableSetStmt,355,6511
	T_VariableShowStmt,356,6531
	T_DiscardStmt,357,6552
	T_CreateTrigStmt,358,6568
	T_CreatePLangStmt,359,6587
	T_CreateRoleStmt,360,6607
	T_AlterRoleStmt,361,6626
	T_DropRoleStmt,362,6644
	T_LockStmt,363,6661
	T_ConstraintsSetStmt,364,6674
	T_ReindexStmt,365,6697
	T_CheckPointStmt,366,6713
	T_CreateSchemaStmt,367,6732
	T_AlterDatabaseStmt,368,6753
	T_AlterDatabaseSetStmt,369,6775
	T_AlterRoleSetStmt,370,6800
	T_CreateConversionStmt,371,6821
	T_CreateCastStmt,372,6846
	T_CreateOpClassStmt,373,6865
	T_CreateOpFamilyStmt,374,6887
	T_AlterOpFamilyStmt,375,6910
	T_PrepareStmt,376,6932
	T_ExecuteStmt,377,6948
	T_DeallocateStmt,378,6964
	T_DeclareCursorStmt,379,6983
	T_CreateTableSpaceStmt,380,7005
	T_DropTableSpaceStmt,381,7030
	T_AlterObjectDependsStmt,382,7053
	T_AlterObjectSchemaStmt,383,7080
	T_AlterOwnerStmt,384,7106
	T_AlterOperatorStmt,385,7125
	T_AlterTypeStmt,386,7147
	T_DropOwnedStmt,387,7165
	T_ReassignOwnedStmt,388,7183
	T_CompositeTypeStmt,389,7205
	T_CreateEnumStmt,390,7227
	T_CreateRangeStmt,391,7246
	T_AlterEnumStmt,392,7266
	T_AlterTSDictionaryStmt,393,7284
	T_AlterTSConfigurationStmt,394,7310
	T_CreateFdwStmt,395,7339
	T_AlterFdwStmt,396,7357
	T_CreateForeignServerStmt,397,7374
	T_AlterForeignServerStmt,398,7402
	T_CreateUserMappingStmt,399,7429
	T_AlterUserMappingStmt,400,7455
	T_DropUserMappingStmt,401,7480
	T_AlterTableSpaceOptionsStmt,402,7504
	T_AlterTableMoveAllStmt,403,7535
	T_SecLabelStmt,404,7561
	T_CreateForeignTableStmt,405,7578
	T_ImportForeignSchemaStmt,406,7605
	T_CreateExtensionStmt,407,7633
	T_AlterExtensionStmt,408,7657
	T_AlterExtensionContentsStmt,409,7680
	T_CreateEventTrigStmt,410,7711
	T_AlterEventTrigStmt,411,7735
	T_RefreshMatViewStmt,412,7758
	T_ReplicaIdentityStmt,413,7781
	T_AlterSystemStmt,414,7805
	T_CreatePolicyStmt,415,7825
	T_AlterPolicyStmt,416,7846
	T_CreateTransformStmt,417,7866
	T_CreateAmStmt,418,7890
	T_CreatePublicationStmt,419,7907
	T_AlterPublicationStmt,420,7933
	T_CreateSubscriptionStmt,421,7958
	T_AlterSubscriptionStmt,422,7985
	T_DropSubscriptionStmt,423,8011
	T_CreateStatsStmt,424,8036
	T_AlterCollationStmt,425,8056
	T_CallStmt,426,8079
	T_AlterStatsStmt,427,8092
	T_A_Expr,432,8166
	T_ColumnRef,433,8177
	T_ParamRef,434,8191
	T_A_Const,435,8204
	T_FuncCall,436,8216
	T_A_Star,437,8229
	T_A_Indices,438,8240
	T_A_Indirection,439,8254
	T_A_ArrayExpr,440,8272
	T_ResTarget,441,8288
	T_MultiAssignRef,442,8302
	T_TypeCast,443,8321
	T_CollateClause,444,8334
	T_SortBy,445,8352
	T_WindowDef,446,8363
	T_RangeSubselect,447,8377
	T_RangeFunction,448,8396
	T_RangeTableSample,449,8414
	T_RangeTableFunc,450,8435
	T_RangeTableFuncCol,451,8454
	T_TypeName,452,8476
	T_ColumnDef,453,8489
	T_IndexElem,454,8503
	T_Constraint,455,8517
	T_DefElem,456,8532
	T_RangeTblEntry,457,8544
	T_RangeTblFunction,458,8562
	T_TableSampleClause,459,8583
	T_WithCheckOption,460,8605
	T_SortGroupClause,461,8625
	T_GroupingSet,462,8645
	T_WindowClause,463,8661
	T_ObjectWithArgs,464,8678
	T_AccessPriv,465,8697
	T_CreateOpClassItem,466,8712
	T_TableLikeClause,467,8734
	T_FunctionParameter,468,8754
	T_LockingClause,469,8776
	T_RowMarkClause,470,8794
	T_XmlSerialize,471,8812
	T_WithClause,472,8829
	T_InferClause,473,8844
	T_OnConflictClause,474,8860
	T_CommonTableExpr,475,8881
	T_RoleSpec,476,8901
	T_TriggerTransition,477,8914
	T_PartitionElem,478,8936
	T_PartitionSpec,479,8954
	T_PartitionBoundSpec,480,8972
	T_PartitionRangeDatum,481,8995
	T_PartitionCmd,482,9019
	T_VacuumRelation,483,9036
	T_IdentifySystemCmd,488,9124
	T_BaseBackupCmd,489,9146
	T_CreateReplicationSlotCmd,490,9164
	T_DropReplicationSlotCmd,491,9193
	T_StartReplicationCmd,492,9220
	T_TimeLineHistoryCmd,493,9244
	T_SQLCmd,494,9267
	T_TriggerData,504,9594
	T_EventTriggerData,505,9641
	T_ReturnSetInfo,506,9698
	T_WindowObjectData,507,9745
	T_TIDBitmap,508,9801
	T_InlineCodeBlock,509,9845
	T_FdwRoutine,510,9895
	T_IndexAmRoutine,511,9939
	T_TableAmRoutine,512,9984
	T_TsmRoutine,513,10031
	T_ForeignKeyCacheInfo,514,10074
	T_CallContext,515,10120
	T_SupportRequestSimplify,516,10167
	T_SupportRequestSelectivity,517,10224
	T_SupportRequestCost,518,10284
	T_SupportRequestRows,519,10338
	T_SupportRequestIndexCondition	520,10392
} NodeTag;521,10454
typedef struct Node529,10708
	NodeTag		type;531,10730
} Node;532,10746
#define nodeTag(534,10755
#define newNode(550,11300
#define newNode(567,11807
#define makeNode(577,12053
#define NodeSetTag(578,12127
#define IsA(580,12191
castNodeImpl(591,12610
#define castNode(596,12720
#define castNode(598,12807
#define copyObject(643,14257
#define copyObject(645,14323
typedef double Selectivity;662,14750
typedef double Cost;663,14826
typedef enum CmdType672,15063
	CMD_UNKNOWN,674,15086
	CMD_SELECT,675,15100
	CMD_UPDATE,676,15135
	CMD_INSERT,677,15170
	CMD_DELETE,678,15205
	CMD_UTILITY,679,15218
	CMD_NOTHING	681,15298
} CmdType;683,15382
typedef enum JoinType696,15729
	JOIN_INNER,702,15902
	JOIN_LEFT,703,15951
	JOIN_FULL,704,16002
	JOIN_RIGHT,705,16062
	JOIN_SEMI,716,16594
	JOIN_ANTI,717,16658
	JOIN_UNIQUE_OUTER,723,16864
	JOIN_UNIQUE_INNER	724,16921
} JoinType;729,17036
#define IS_OUTER_JOIN(745,17827
typedef enum AggStrategy758,18145
	AGG_PLAIN,760,18172
	AGG_SORTED,761,18227
	AGG_HASHED,762,18284
	AGG_MIXED	763,18343
} AggStrategy;764,18401
#define AGGSPLITOP_COMBINE	774,18625
#define AGGSPLITOP_SKIPFINAL	775,18697
#define AGGSPLITOP_SERIALIZE	776,18770
#define AGGSPLITOP_DESERIALIZE	777,18835
typedef enum AggSplit780,18982
	AGGSPLIT_SIMPLE 783,19043
	AGGSPLIT_INITIAL_SERIAL 785,19130
	AGGSPLIT_FINAL_DESERIAL 787,19267
} AggSplit;788,19338
#define DO_AGGSPLIT_COMBINE(791,19419
#define DO_AGGSPLIT_SKIPFINAL(792,19487
#define DO_AGGSPLIT_SERIALIZE(793,19558
#define DO_AGGSPLIT_DESERIALIZE(794,19629
typedef enum SetOpCmd802,19889
	SETOPCMD_INTERSECT,804,19913
	SETOPCMD_INTERSECT_ALL,805,19934
	SETOPCMD_EXCEPT,806,19959
	SETOPCMD_EXCEPT_ALL807,19977
} SetOpCmd;808,19998
typedef enum SetOpStrategy810,20011
	SETOP_SORTED,812,20040
	SETOP_HASHED	813,20085
} SetOpStrategy;814,20131
typedef enum OnConflictAction822,20295
	ONCONFLICT_NONE,824,20327
	ONCONFLICT_NOTHING,825,20377
	ONCONFLICT_UPDATE	826,20433
} OnConflictAction;827,20486
typedef enum LimitOption835,20633
	LIMIT_OPTION_COUNT,837,20660
	LIMIT_OPTION_WITH_TIES,838,20709
	LIMIT_OPTION_DEFAULT,839,20766
} LimitOption;840,20813

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/nodeFuncs.h,635
#define NODEFUNCS_H14,437
#define QTW_IGNORE_RT_SUBQUERIES	20,552
#define QTW_IGNORE_CTE_SUBQUERIES	21,617
#define QTW_IGNORE_RC_SUBQUERIES	22,684
#define QTW_IGNORE_JOINALIASES	23,742
#define QTW_IGNORE_RANGE_TABLE	24,806
#define QTW_EXAMINE_RTES_BEFORE	25,874
#define QTW_EXAMINE_RTES_AFTER	27,972
#define QTW_DONT_COPY_QUERY	29,1068
#define QTW_EXAMINE_SORTGROUP	30,1131
typedef bool (*check_function_callback)check_function_callback33,1254
is_funcclause(56,2096
is_opclause(63,2237
get_leftop(70,2419
get_rightop(82,2686
is_andclause(94,2916
is_orclause(103,3111
is_notclause(112,3304
get_notclausearg(121,3533

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/primnodes.h,16577
#define PRIMNODES_H18,614
typedef struct Alias39,1254
	NodeTag		type;41,1277
	char	   *aliasname;aliasname42,1293
	List	   *colnames;colnames43,1356
} Alias;44,1415
typedef enum OnCommitAction47,1481
	ONCOMMIT_NOOP,49,1511
	ONCOMMIT_PRESERVE_ROWS,50,1569
	ONCOMMIT_DELETE_ROWS,51,1638
	ONCOMMIT_DROP	52,1690
} OnCommitAction;53,1729
typedef struct RangeVar63,2064
	NodeTag		type;65,2090
	char	   *catalogname;catalogname66,2106
	char	   *schemaname;schemaname67,2172
	char	   *relname;relname68,2226
	bool		inh;69,2279
	char		relpersistence;71,2366
	Alias	   *alias;alias72,2430
	int			location;73,2494
} RangeVar;74,2551
typedef struct TableFunc82,2774
	NodeTag		type;84,2801
	List	   *ns_uris;ns_uris85,2817
	List	   *ns_names;ns_names86,2877
	Node	   *docexpr;docexpr87,2936
	Node	   *rowexpr;rowexpr88,2988
	List	   *colnames;colnames89,3036
	List	   *coltypes;coltypes90,3093
	List	   *coltypmods;coltypmods91,3149
	List	   *colcollations;colcollations92,3209
	List	   *colexprs;colexprs93,3274
	List	   *coldefexprs;coldefexprs94,3335
	Bitmapset  *notnulls;notnulls95,3399
	int			ordinalitycol;96,3469
	int			location;97,3533
} TableFunc;98,3590
typedef struct IntoClause108,3931
	NodeTag		type;110,3959
	RangeVar   *rel;rel112,3976
	List	   *colNames;colNames113,4023
	char	   *accessMethod;accessMethod114,4081
	List	   *options;options115,4131
	OnCommitAction onCommit;116,4182
	char	   *tableSpaceName;tableSpaceName117,4239
	Node	   *viewQuery;viewQuery118,4299
	bool		skipData;119,4360
} IntoClause;120,4406
typedef struct Expr136,4966
	NodeTag		type;138,4988
} Expr;139,5004
#define    INNER_VAR	171,6826
#define    OUTER_VAR	172,6887
#define    INDEX_VAR	173,6948
#define IS_SPECIAL_VARNO(175,7009
#define    PRS2_OLD_VARNO	178,7132
#define    PRS2_NEW_VARNO	179,7162
typedef struct Var181,7193
	Expr		xpr;183,7214
	Index		varno;184,7226
	AttrNumber	varattno;186,7342
	Oid			vartype;188,7452
	int32		vartypmod;189,7512
	Oid			varcollid;190,7564
	Index		varlevelsup;191,7629
	Index		varnosyn;194,7770
	AttrNumber	varattnosyn;195,7835
	int			location;196,7893
} Var;197,7950
typedef struct Const207,8281
	Expr		xpr;209,8304
	Oid			consttype;210,8316
	int32		consttypmod;211,8380
	Oid			constcollid;212,8428
	int			constlen;213,8494
	Datum		constvalue;214,8552
	bool		constisnull;215,8600
	bool		constbyval;217,8701
	int			location;221,8924
} Const;222,8981
typedef enum ParamKind251,10174
	PARAM_EXTERN,253,10199
	PARAM_EXEC,254,10214
	PARAM_SUBLINK,255,10227
	PARAM_MULTIEXPR256,10243
} ParamKind;257,10260
typedef struct Param259,10274
	Expr		xpr;261,10297
	ParamKind	paramkind;262,10309
	int			paramid;263,10367
	Oid			paramtype;264,10415
	int32		paramtypmod;265,10476
	Oid			paramcollid;266,10526
	int			location;267,10592
} Param;268,10649
typedef struct Aggref309,12792
	Expr		xpr;311,12816
	Oid			aggfnoid;312,12828
	Oid			aggtype;313,12881
	Oid			aggcollid;314,12940
	Oid			inputcollid;315,12992
	Oid			aggtranstype;316,13060
	List	   *aggargtypes;aggargtypes317,13128
	List	   *aggdirectargs;aggdirectargs318,13197
	List	   *args;args319,13268
	List	   *aggorder;aggorder320,13334
	List	   *aggdistinct;aggdistinct321,13396
	Expr	   *aggfilter;aggfilter322,13460
	bool		aggstar;323,13514
	bool		aggvariadic;324,13574
	char		aggkind;326,13685
	Index		agglevelsup;327,13744
	AggSplit	aggsplit;328,13805
	int			location;329,13874
} Aggref;330,13931
typedef struct GroupingFunc356,15178
	Expr		xpr;358,15208
	List	   *args;args359,15220
	List	   *refs;refs361,15317
	List	   *cols;cols362,15371
	Index		agglevelsup;363,15434
	int			location;364,15488
} GroupingFunc;365,15527
typedef struct WindowFunc370,15565
	Expr		xpr;372,15593
	Oid			winfnoid;373,15605
	Oid			wintype;374,15657
	Oid			wincollid;375,15722
	Oid			inputcollid;376,15774
	List	   *args;args377,15842
	Expr	   *aggfilter;aggfilter378,15899
	Index		winref;379,15953
	bool		winstar;380,16010
	bool		winagg;381,16070
	int			location;382,16125
} WindowFunc;383,16182
typedef struct SubscriptingRef415,17645
	Expr		xpr;417,17678
	Oid			refcontainertype;418,17690
	Oid			refelemtype;419,17750
	int32		reftypmod;420,17807
	Oid			refcollid;421,17876
	List	   *refupperindexpr;refupperindexpr422,17941
	List	   *reflowerindexpr;reflowerindexpr424,18039
	Expr	   *refexpr;refexpr427,18186
	Expr	   *refassgnexpr;refassgnexpr430,18275
} SubscriptingRef;432,18366
typedef enum CoercionContext440,18574
	COERCION_IMPLICIT,442,18605
	COERCION_ASSIGNMENT,443,18667
	COERCION_EXPLICIT	444,18730
} CoercionContext;445,18781
typedef enum CoercionForm456,19232
	COERCE_EXPLICIT_CALL,458,19260
	COERCE_EXPLICIT_CAST,459,19317
	COERCE_IMPLICIT_CAST	460,19375
} CoercionForm;461,19430
typedef struct FuncExpr466,19504
	Expr		xpr;468,19530
	Oid			funcid;469,19542
	Oid			funcresulttype;470,19593
	bool		funcretset;471,19650
	bool		funcvariadic;472,19705
	CoercionForm funcformat;474,19817
	Oid			funccollid;475,19883
	Oid			inputcollid;476,19936
	List	   *args;args477,20004
	int			location;478,20054
} FuncExpr;479,20111
typedef struct NamedArgExpr495,20715
	Expr		xpr;497,20745
	Expr	   *arg;arg498,20757
	char	   *name;name499,20804
	int			argnumber;500,20837
	int			location;501,20903
} NamedArgExpr;502,20968
typedef struct OpExpr513,21342
	Expr		xpr;515,21366
	Oid			opno;516,21378
	Oid			opfuncid;517,21431
	Oid			opresulttype;518,21490
	bool		opretset;519,21545
	Oid			opcollid;520,21598
	Oid			inputcollid;521,21649
	List	   *args;args522,21717
	int			location;523,21776
} OpExpr;524,21833
typedef OpExpr DistinctExpr;536,22314
typedef OpExpr NullIfExpr;544,22499
typedef struct ScalarArrayOpExpr556,23038
	Expr		xpr;558,23073
	Oid			opno;559,23085
	Oid			opfuncid;560,23138
	bool		useOr;561,23197
	Oid			inputcollid;562,23247
	List	   *args;args563,23315
	int			location;564,23369
} ScalarArrayOpExpr;565,23426
typedef enum BoolExprType574,23704
	AND_EXPR,576,23732
	AND_EXPR, OR_EXPR,576,23732
	AND_EXPR, OR_EXPR, NOT_EXPR576,23732
} BoolExprType;577,23761
typedef struct BoolExpr579,23778
	Expr		xpr;581,23804
	BoolExprType boolop;582,23816
	List	   *args;args583,23838
	int			location;584,23891
} BoolExpr;585,23948
typedef enum SubLinkType638,26744
	EXISTS_SUBLINK,640,26771
	ALL_SUBLINK,641,26788
	ANY_SUBLINK,642,26802
	ROWCOMPARE_SUBLINK,643,26816
	EXPR_SUBLINK,644,26837
	MULTIEXPR_SUBLINK,645,26852
	ARRAY_SUBLINK,646,26872
	CTE_SUBLINK	647,26888
} SubLinkType;648,26929
typedef struct SubLink651,26946
	Expr		xpr;653,26971
	SubLinkType subLinkType;654,26983
	int			subLinkId;655,27025
	Node	   *testexpr;testexpr656,27080
	List	   *operName;operName657,27147
	Node	   *subselect;subselect658,27209
	int			location;659,27274
} SubLink;660,27331
typedef struct SubPlan700,29574
	Expr		xpr;702,29599
	SubLinkType subLinkType;704,29655
	Node	   *testexpr;testexpr706,29770
	List	   *paramIds;paramIds707,29838
	int			plan_id;709,29948
	char	   *plan_name;plan_name711,30083
	Oid			firstColType;713,30207
	int32		firstColTypmod;714,30273
	Oid			firstColCollation;715,30344
	bool		useHashTable;718,30477
	bool		unknownEqFalse;720,30590
	bool		parallel_safe;723,30757
	List	   *setParam;setParam727,31021
	List	   *parParam;parParam729,31120
	List	   *args;args730,31188
	Cost		startup_cost;732,31279
	Cost		per_call_cost;733,31326
} SubPlan;734,31387
typedef struct AlternativeSubPlan744,31707
	Expr		xpr;746,31743
	List	   *subplans;subplans747,31755
} AlternativeSubPlan;748,31817
typedef struct FieldSelect759,32131
	Expr		xpr;761,32160
	Expr	   *arg;arg762,32172
	AttrNumber	fieldnum;763,32212
	Oid			resulttype;764,32278
	int32		resulttypmod;766,32360
	Oid			resultcollid;767,32415
} FieldSelect;768,32472
typedef struct FieldStore788,33195
	Expr		xpr;790,33223
	Expr	   *arg;arg791,33235
	List	   *newvals;newvals792,33276
	List	   *fieldnums;fieldnums793,33328
	Oid			resulttype;794,33386
} FieldStore;796,33519
typedef struct RelabelType811,34079
	Expr		xpr;813,34108
	Expr	   *arg;arg814,34120
	Oid			resulttype;815,34160
	int32		resulttypmod;816,34221
	Oid			resultcollid;817,34276
	CoercionForm relabelformat;818,34343
	int			location;819,34403
} RelabelType;820,34460
typedef struct CoerceViaIO831,34759
	Expr		xpr;833,34788
	Expr	   *arg;arg834,34800
	Oid			resulttype;835,34840
	Oid			resultcollid;837,34945
	CoercionForm coerceformat;838,35012
	int			location;839,35071
} CoerceViaIO;840,35128
typedef struct ArrayCoerceExpr855,35688
	Expr		xpr;857,35721
	Expr	   *arg;arg858,35733
	Expr	   *elemexpr;elemexpr859,35791
	Oid			resulttype;860,35859
	int32		resulttypmod;861,35925
	Oid			resultcollid;862,35989
	CoercionForm coerceformat;863,36056
	int			location;864,36115
} ArrayCoerceExpr;865,36172
typedef struct ConvertRowtypeExpr880,36792
	Expr		xpr;882,36828
	Expr	   *arg;arg883,36840
	Oid			resulttype;884,36880
	CoercionForm convertformat;886,37014
	int			location;887,37074
} ConvertRowtypeExpr;888,37131
typedef struct CollateExpr897,37340
	Expr		xpr;899,37369
	Expr	   *arg;arg900,37381
	Oid			collOid;901,37421
	int			location;902,37460
} CollateExpr;903,37517
typedef struct CaseExpr927,38532
	Expr		xpr;929,38558
	Oid			casetype;930,38570
	Oid			casecollid;931,38620
	Expr	   *arg;arg932,38686
	List	   *args;args933,38747
	Expr	   *defresult;defresult934,38808
	int			location;935,38869
} CaseExpr;936,38926
typedef struct CaseWhen941,38989
	Expr		xpr;943,39015
	Expr	   *expr;expr944,39027
	Expr	   *result;result945,39072
	int			location;946,39118
} CaseWhen;947,39175
typedef struct CaseTestExpr969,40185
	Expr		xpr;971,40215
	Oid			typeId;972,40227
	int32		typeMod;973,40277
	Oid			collation;974,40331
} CaseTestExpr;975,40392
typedef struct ArrayExpr985,40756
	Expr		xpr;987,40783
	Oid			array_typeid;988,40795
	Oid			array_collid;989,40848
	Oid			element_typeid;990,40915
	List	   *elements;elements991,40974
	bool		multidims;992,41034
	int			location;993,41091
} ArrayExpr;994,41148
typedef struct RowExpr1019,42540
	Expr		xpr;1021,42565
	List	   *args;args1022,42577
	Oid			row_typeid;1023,42612
	CoercionForm row_format;1037,43255
	List	   *colnames;colnames1038,43312
	int			location;1039,43362
} RowExpr;1040,43419
typedef enum RowCompareType1056,44099
	ROWCOMPARE_LT 1059,44199
	ROWCOMPARE_LE 1060,44248
	ROWCOMPARE_EQ 1061,44302
	ROWCOMPARE_GE 1062,44352
	ROWCOMPARE_GT 1063,44409
	ROWCOMPARE_NE 1064,44461
} RowCompareType;1065,44511
typedef struct RowCompareExpr1067,44530
	Expr		xpr;1069,44562
	RowCompareType rctype;1070,44574
	List	   *opnos;opnos1071,44636
	List	   *opfamilies;opfamilies1072,44697
	List	   *inputcollids;inputcollids1073,44767
	List	   *largs;largs1074,44836
	List	   *rargs;rargs1075,44891
} RowCompareExpr;1076,44947
typedef struct CoalesceExpr1081,45013
	Expr		xpr;1083,45043
	Oid			coalescetype;1084,45055
	Oid			coalescecollid;1085,45108
	List	   *args;args1086,45177
	int			location;1087,45215
} CoalesceExpr;1088,45272
typedef enum MinMaxOp1093,45341
	IS_GREATEST,1095,45365
	IS_LEAST1096,45379
} MinMaxOp;1097,45389
typedef struct MinMaxExpr1099,45402
	Expr		xpr;1101,45430
	Oid			minmaxtype;1102,45442
	Oid			minmaxcollid;1103,45504
	Oid			inputcollid;1104,45558
	MinMaxOp	op;1105,45626
	List	   *args;args1106,45669
	int			location;1107,45707
} MinMaxExpr;1108,45764
typedef enum SQLValueFunctionOp1121,46397
	SVFOP_CURRENT_DATE,1123,46431
	SVFOP_CURRENT_TIME,1124,46452
	SVFOP_CURRENT_TIME_N,1125,46473
	SVFOP_CURRENT_TIMESTAMP,1126,46496
	SVFOP_CURRENT_TIMESTAMP_N,1127,46522
	SVFOP_LOCALTIME,1128,46550
	SVFOP_LOCALTIME_N,1129,46568
	SVFOP_LOCALTIMESTAMP,1130,46588
	SVFOP_LOCALTIMESTAMP_N,1131,46611
	SVFOP_CURRENT_ROLE,1132,46636
	SVFOP_CURRENT_USER,1133,46657
	SVFOP_USER,1134,46678
	SVFOP_SESSION_USER,1135,46691
	SVFOP_CURRENT_CATALOG,1136,46712
	SVFOP_CURRENT_SCHEMA1137,46736
} SQLValueFunctionOp;1138,46758
typedef struct SQLValueFunction1140,46781
	Expr		xpr;1142,46815
	SQLValueFunctionOp op;1143,46827
	Oid			type;1144,46881
	int32		typmod;1145,46921
	int			location;1146,46937
} SQLValueFunction;1147,46994
typedef enum XmlExprOp1160,47491
	IS_XMLCONCAT,1162,47516
	IS_XMLELEMENT,1163,47556
	IS_XMLFOREST,1164,47620
	IS_XMLPARSE,1165,47670
	IS_XMLPI,1166,47729
	IS_XMLROOT,1167,47771
	IS_XMLSERIALIZE,1168,47828
	IS_DOCUMENT	1169,47888
} XmlExprOp;1170,47930
	XMLOPTION_DOCUMENT,1174,47959
	XMLOPTION_CONTENT1175,47980
} XmlOptionType;1176,47999
typedef struct XmlExpr1178,48017
	Expr		xpr;1180,48042
	XmlExprOp	op;1181,48054
	char	   *name;name1182,48094
	List	   *named_args;named_args1183,48153
	List	   *arg_names;arg_names1184,48221
	List	   *args;args1185,48280
	XmlOptionType xmloption;1186,48324
	Oid			type;1187,48376
	int32		typmod;1188,48433
	int			location;1189,48449
} XmlExpr;1190,48506
typedef enum NullTestType1211,49254
	IS_NULL,1213,49282
	IS_NULL, IS_NOT_NULL1213,49282
} NullTestType;1214,49304
typedef struct NullTest1216,49321
	Expr		xpr;1218,49347
	Expr	   *arg;arg1219,49359
	NullTestType nulltesttype;1220,49399
	bool		argisrow;1221,49454
	int			location;1222,49518
} NullTest;1223,49575
typedef enum BoolTestType1234,49906
	IS_TRUE,1236,49934
	IS_TRUE, IS_NOT_TRUE,1236,49934
	IS_TRUE, IS_NOT_TRUE, IS_FALSE,1236,49934
	IS_TRUE, IS_NOT_TRUE, IS_FALSE, IS_NOT_FALSE,1236,49934
	IS_TRUE, IS_NOT_TRUE, IS_FALSE, IS_NOT_FALSE, IS_UNKNOWN,1236,49934
	IS_TRUE, IS_NOT_TRUE, IS_FALSE, IS_NOT_FALSE, IS_UNKNOWN, IS_NOT_UNKNOWN1236,49934
} BoolTestType;1237,50008
typedef struct BooleanTest1239,50025
	Expr		xpr;1241,50054
	Expr	   *arg;arg1242,50066
	BoolTestType booltesttype;1243,50106
	int			location;1244,50150
} BooleanTest;1245,50207
typedef struct CoerceToDomain1256,50613
	Expr		xpr;1258,50645
	Expr	   *arg;arg1259,50657
	Oid			resulttype;1260,50697
	int32		resulttypmod;1261,50752
	Oid			resultcollid;1262,50816
	CoercionForm coercionformat;1263,50883
	int			location;1264,50944
} CoerceToDomain;1265,51001
typedef struct CoerceToDomainValue1276,51469
	Expr		xpr;1278,51506
	Oid			typeId;1279,51518
	int32		typeMod;1280,51568
	Oid			collation;1281,51622
	int			location;1282,51683
} CoerceToDomainValue;1283,51740
typedef struct SetToDefault1292,52058
	Expr		xpr;1294,52088
	Oid			typeId;1295,52100
	int32		typeMod;1296,52150
	Oid			collation;1297,52204
	int			location;1298,52265
} SetToDefault;1299,52322
typedef struct CurrentOfExpr1313,52898
	Expr		xpr;1315,52929
	Index		cvarno;1316,52941
	char	   *cursor_name;cursor_name1317,52993
	int			cursor_param;1318,53057
} CurrentOfExpr;1319,53117
typedef struct NextValueExpr1328,53423
	Expr		xpr;1330,53454
	Oid			seqid;1331,53466
	Oid			typeId;1332,53480
} NextValueExpr;1333,53495
typedef struct InferenceElem1342,53787
	Expr		xpr;1344,53818
	Node	   *expr;expr1345,53830
	Oid			infercollid;1346,53888
	Oid			inferopclass;1347,53946
} InferenceElem;1348,54007
typedef struct TargetEntry1404,57113
	Expr		xpr;1406,57142
	Expr	   *expr;expr1407,57154
	AttrNumber	resno;1408,57201
	char	   *resname;resname1409,57263
	Index		ressortgroupref;1410,57324
	Oid			resorigtbl;1412,57412
	AttrNumber	resorigcol;1413,57467
	bool		resjunk;1414,57530
} TargetEntry;1416,57626
typedef struct RangeTblRef1456,59507
	NodeTag		type;1458,59536
	int			rtindex;1459,59552
} RangeTblRef;1460,59568
typedef struct JoinExpr1485,60818
	NodeTag		type;1487,60844
	JoinType	jointype;1488,60860
	bool		isNatural;1489,60900
	Node	   *larg;larg1490,60964
	Node	   *rarg;rarg1491,61001
	List	   *usingClause;usingClause1492,61039
	Node	   *quals;quals1493,61106
	Alias	   *alias;alias1494,61158
	int			rtindex;1495,61218
} JoinExpr;1496,61274
typedef struct FromExpr1507,61630
	NodeTag		type;1509,61656
	List	   *fromlist;fromlist1510,61672
	Node	   *quals;quals1511,61721
} FromExpr;1512,61773
typedef struct OnConflictExpr1523,62138
	NodeTag		type;1525,62170
	OnConflictAction action;1526,62186
	List	   *arbiterElems;arbiterElems1529,62256
	Node	   *arbiterWhere;arbiterWhere1531,62344
	Oid			constraint;1532,62408
	List	   *onConflictSet;onConflictSet1535,62491
	Node	   *onConflictWhere;onConflictWhere1536,62559
	int			exclRelIndex;1537,62625
	List	   *exclRelTlist;exclRelTlist1538,62684
} OnConflictExpr;1539,62752

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/print.h,51
#define PRINT_H15,407
#define nodeDisplay(20,457

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/readfuncs.h,27
#define READFUNCS_H15,529

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/execnodes.h,42150
#define EXECNODES_H15,426
typedef Datum (*ExprStateEvalFunc)ExprStateEvalFunc53,1501
#define EEO_FLAG_IS_QUAL	59,1751
typedef struct ExprState61,1790
	NodeTag		tag;63,1817
	uint8		flags;65,1833
#define FIELDNO_EXPRSTATE_RESNULL 71,2049
	bool		resnull;72,2085
#define FIELDNO_EXPRSTATE_RESVALUE 73,2101
	Datum		resvalue;74,2138
#define FIELDNO_EXPRSTATE_RESULTSLOT 79,2239
	TupleTableSlot *resultslot;resultslot80,2278
	struct ExprEvalStep *steps;steps85,2372
	ExprStateEvalFunc evalfunc;91,2552
	Expr	   *expr;expr94,2634
	void	   *evalfunc_private;evalfunc_private97,2688
	int			steps_len;104,2839
	int			steps_alloc;105,2890
#define FIELDNO_EXPRSTATE_PARENT 107,2949
	struct PlanState *parent;parent108,2985
	ParamListInfo ext_params;109,3048
	Datum	   *innermost_caseval;innermost_caseval111,3115
	bool	   *innermost_casenull;innermost_casenull112,3145
	Datum	   *innermost_domainval;innermost_domainval114,3176
	bool	   *innermost_domainnull;innermost_domainnull115,3208
} ExprState;116,3240
typedef struct IndexInfo155,4903
	NodeTag		type;157,4930
	int			ii_NumIndexAttrs;158,4946
	int			ii_NumIndexKeyAttrs;159,5010
	AttrNumber	ii_IndexAttrNumbers[ii_IndexAttrNumbers160,5075
	List	   *ii_Expressions;ii_Expressions161,5124
	List	   *ii_ExpressionsState;ii_ExpressionsState162,5169
	List	   *ii_Predicate;ii_Predicate163,5224
	ExprState  *ii_PredicateState;ii_PredicateState164,5267
	Oid		   *ii_ExclusionOps;ii_ExclusionOps165,5299
	Oid		   *ii_ExclusionProcs;ii_ExclusionProcs166,5364
	uint16	   *ii_ExclusionStrats;ii_ExclusionStrats167,5431
	Oid		   *ii_UniqueOps;ii_UniqueOps168,5501
	Oid		   *ii_UniqueProcs;ii_UniqueProcs169,5563
	uint16	   *ii_UniqueStrats;ii_UniqueStrats170,5627
	Datum	   *ii_OpclassOptions;ii_OpclassOptions171,5694
	bool		ii_Unique;172,5762
	bool		ii_ReadyForInserts;173,5780
	bool		ii_Concurrent;174,5807
	bool		ii_BrokenHotChain;175,5829
	int			ii_ParallelWorkers;176,5855
	Oid			ii_Am;177,5882
	void	   *ii_AmCache;ii_AmCache178,5896
	MemoryContext ii_Context;179,5918
} IndexInfo;180,5945
typedef void (*ExprContextCallbackFunction)ExprContextCallbackFunction188,6086
typedef struct ExprContext_CB190,6144
	struct ExprContext_CB *next;next192,6176
	ExprContextCallbackFunction function;193,6206
	Datum		arg;194,6245
} ExprContext_CB;195,6258
typedef struct ExprContext220,7381
	NodeTag		type;222,7410
#define FIELDNO_EXPRCONTEXT_SCANTUPLE 225,7483
	TupleTableSlot *ecxt_scantuple;ecxt_scantuple226,7523
#define FIELDNO_EXPRCONTEXT_INNERTUPLE 227,7556
	TupleTableSlot *ecxt_innertuple;ecxt_innertuple228,7597
#define FIELDNO_EXPRCONTEXT_OUTERTUPLE 229,7631
	TupleTableSlot *ecxt_outertuple;ecxt_outertuple230,7672
	MemoryContext ecxt_per_query_memory;233,7776
	MemoryContext ecxt_per_tuple_memory;234,7814
	ParamExecData *ecxt_param_exec_vals;ecxt_param_exec_vals237,7911
	ParamListInfo ecxt_param_list_info;238,7977
#define FIELDNO_EXPRCONTEXT_AGGVALUES 244,8182
	Datum	   *ecxt_aggvalues;ecxt_aggvalues245,8222
#define FIELDNO_EXPRCONTEXT_AGGNULLS 246,8295
	bool	   *ecxt_aggnulls;ecxt_aggnulls247,8334
#define FIELDNO_EXPRCONTEXT_CASEDATUM 250,8462
	Datum		caseValue_datum;251,8503
#define FIELDNO_EXPRCONTEXT_CASENULL 252,8528
	bool		caseValue_isNull;253,8568
#define FIELDNO_EXPRCONTEXT_DOMAINDATUM 256,8665
	Datum		domainValue_datum;257,8708
#define FIELDNO_EXPRCONTEXT_DOMAINNULL 258,8735
	bool		domainValue_isNull;259,8777
	struct EState *ecxt_estate;ecxt_estate262,8873
	ExprContext_CB *ecxt_callbacks;ecxt_callbacks265,8976
} ExprContext;266,9009
	ExprSingleResult,274,9131
	ExprMultipleResult,275,9191
	ExprEndResult	276,9255
} ExprDoneCond;277,9317
	SFRM_ValuePerCall 287,9650
	SFRM_Materialize 288,9711
	SFRM_Materialize_Random 289,9781
	SFRM_Materialize_Preferred 290,9850
} SetFunctionReturnMode;291,9917
typedef struct ReturnSetInfo299,10204
	NodeTag		type;301,10235
	ExprContext *econtext;econtext303,10280
	TupleDesc	expectedDesc;304,10347
	int			allowedModes;305,10414
	SetFunctionReturnMode returnMode;307,10549
	ExprDoneCond isDone;308,10609
	Tuplestorestate *setResult;setResult310,10728
	TupleDesc	setDesc;311,10801
} ReturnSetInfo;312,10866
typedef struct ProjectionInfo329,11554
	NodeTag		type;331,11586
	ExprState	pi_state;333,11645
	ExprContext *pi_exprContext;pi_exprContext335,11724
} ProjectionInfo;336,11754
typedef struct JunkFilter366,13235
	NodeTag		type;368,13263
	List	   *jf_targetList;jf_targetList369,13279
	TupleDesc	jf_cleanTupType;370,13304
	AttrNumber *jf_cleanMap;jf_cleanMap371,13332
	TupleTableSlot *jf_resultSlot;jf_resultSlot372,13358
	AttrNumber	jf_junkAttNo;373,13390
} JunkFilter;374,13416
typedef struct OnConflictSetState381,13520
	NodeTag		type;383,13556
	TupleTableSlot *oc_Existing;oc_Existing385,13573
	TupleTableSlot *oc_ProjSlot;oc_ProjSlot386,13648
	ProjectionInfo *oc_ProjInfo;oc_ProjInfo387,13723
	ExprState  *oc_WhereClause;oc_WhereClause388,13789
} OnConflictSetState;389,13851
typedef struct ResultRelInfo405,14543
	NodeTag		type;407,14574
	Index		ri_RangeTableIndex;410,14662
	Relation	ri_RelationDesc;413,14738
	int			ri_NumIndices;416,14814
	RelationPtr ri_IndexRelationDescs;419,14886
	IndexInfo **ri_IndexRelationInfo;ri_IndexRelationInfo422,14965
	TriggerDesc *ri_TrigDesc;ri_TrigDesc425,15037
	FmgrInfo   *ri_TrigFunctions;ri_TrigFunctions428,15113
	ExprState **ri_TrigWhenExprs;ri_TrigWhenExprs431,15186
	Instrumentation *ri_TrigInstrument;ri_TrigInstrument434,15268
	TupleTableSlot *ri_ReturningSlot;ri_ReturningSlot437,15373
	TupleTableSlot *ri_TrigOldSlot;ri_TrigOldSlot438,15440
	TupleTableSlot *ri_TrigNewSlot;ri_TrigNewSlot439,15505
	struct FdwRoutine *ri_FdwRoutine;ri_FdwRoutine442,15619
	void	   *ri_FdwState;ri_FdwState445,15701
	bool		ri_usesFdwDirectModify;448,15775
	List	   *ri_WithCheckOptions;ri_WithCheckOptions451,15854
	List	   *ri_WithCheckOptionExprs;ri_WithCheckOptionExprs454,15929
	ExprState **ri_ConstraintExprs;ri_ConstraintExprs457,16013
	ExprState **ri_GeneratedExprs;ri_GeneratedExprs460,16100
	int			ri_NumGeneratedNeeded;463,16194
	JunkFilter *ri_junkFilter;ri_junkFilter466,16273
	List	   *ri_returningList;ri_returningList469,16339
	ProjectionInfo *ri_projectReturning;ri_projectReturning472,16406
	List	   *ri_onConflictArbiterIndexes;ri_onConflictArbiterIndexes475,16502
	OnConflictSetState *ri_onConflict;ri_onConflict478,16578
	List	   *ri_PartitionCheck;ri_PartitionCheck481,16649
	ExprState  *ri_PartitionCheckExpr;ri_PartitionCheckExpr484,16719
	Relation	ri_PartitionRoot;487,16810
	struct PartitionRoutingInfo *ri_PartitionInfo;ri_PartitionInfo490,16905
	struct CopyMultiInsertBuffer *ri_CopyMultiInsertBuffer;ri_CopyMultiInsertBuffer493,17009
} ResultRelInfo;494,17066
typedef struct EState502,17199
	NodeTag		type;504,17223
	ScanDirection es_direction;507,17280
	Snapshot	es_snapshot;508,17338
	Snapshot	es_crosscheck_snapshot;509,17384
	List	   *es_range_table;es_range_table510,17452
	Index		es_range_table_size;511,17506
	Relation   *es_relations;es_relations512,17572
	struct ExecRowMark **es_rowmarks;es_rowmarks514,17692
	PlannedStmt *es_plannedstmt;es_plannedstmt516,17807
	const char *es_sourceText;es_sourceText517,17868
	JunkFilter *es_junkFilter;es_junkFilter519,17930
	CommandId	es_output_cid;522,18070
	ResultRelInfo *es_result_relations;es_result_relations525,18165
	int			es_num_result_relations;526,18232
	ResultRelInfo *es_result_relation_info;es_result_relation_info527,18286
	ResultRelInfo *es_root_result_relations;es_root_result_relations535,18631
	int			es_num_root_result_relations;536,18703
	PartitionDirectory es_partition_directory;537,18766
	List	   *es_tuple_routing_result_relations;es_tuple_routing_result_relations543,18980
	List	   *es_trig_target_relations;es_trig_target_relations546,19065
	ParamListInfo es_param_list_info;549,19159
	ParamExecData *es_param_exec_vals;es_param_exec_vals550,19226
	QueryEnvironment *es_queryEnv;es_queryEnv552,19295
	MemoryContext es_query_cxt;555,19380
	List	   *es_tupleTable;es_tupleTable557,19456
	uint64		es_processed;559,19512
	int			es_top_eflags;561,19564
	int			es_instrument;562,19623
	bool		es_finished;563,19680
	List	   *es_exprcontexts;es_exprcontexts565,19740
	List	   *es_subplanstates;es_subplanstates567,19809
	List	   *es_auxmodifytables;es_auxmodifytables569,19875
	ExprContext *es_per_tuple_exprcontext;es_per_tuple_exprcontext576,20165
	struct EPQState *es_epq_active;es_epq_active584,20449
	bool		es_use_parallel_mode;586,20483
	struct dsa_area *es_query_dsa;es_query_dsa589,20619
	int			es_jit_flags;600,21034
	struct JitContext *es_jit;es_jit601,21055
	struct JitInstrumentation *es_jit_worker_instr;es_jit_worker_instr602,21083
} EState;603,21132
typedef struct ExecRowMark625,22133
	Relation	relation;627,22162
	Oid			relid;628,22225
	Index		rti;629,22284
	Index		prti;630,22327
	Index		rowmarkId;631,22384
	RowMarkType markType;632,22448
	LockClauseStrength strength;633,22508
	LockWaitPolicy waitPolicy;634,22582
	bool		ermActive;635,22639
	ItemPointerData curCtid;636,22705
	void	   *ermExtra;ermExtra637,22776
} ExecRowMark;638,22845
typedef struct ExecAuxRowMark652,23472
	ExecRowMark *rowmark;rowmark654,23504
	AttrNumber	ctidAttNo;655,23563
	AttrNumber	toidAttNo;656,23630
	AttrNumber	wholeAttNo;657,23701
} ExecAuxRowMark;658,23774
typedef struct TupleHashEntryData *TupleHashEntry;TupleHashEntry677,24655
typedef struct TupleHashTableData *TupleHashTable;TupleHashTable678,24706
typedef struct TupleHashEntryData680,24758
	MinimalTuple firstTuple;682,24794
	void	   *additional;additional683,24860
	uint32		status;684,24899
	uint32		hash;685,24936
} TupleHashEntryData;686,24979
#define SH_PREFIX 689,25079
#define SH_ELEMENT_TYPE 690,25107
#define SH_KEY_TYPE 691,25150
#define SH_SCOPE 692,25183
#define SH_DECLARE693,25207
typedef struct TupleHashTableData696,25255
	tuplehash_hash *hashtab;hashtab698,25291
	int			numCols;699,25345
	AttrNumber *keyColIdx;keyColIdx700,25400
	FmgrInfo   *tab_hash_funcs;tab_hash_funcs701,25459
	ExprState  *tab_eq_func;tab_eq_func702,25531
	Oid		   *tab_collations;tab_collations703,25596
	MemoryContext tablecxt;704,25663
	MemoryContext tempcxt;705,25727
	Size		entrysize;706,25791
	TupleTableSlot *tableslot;tableslot707,25852
	TupleTableSlot *inputslot;inputslot709,25992
	FmgrInfo   *in_hash_funcs;in_hash_funcs710,26053
	ExprState  *cur_eq_func;cur_eq_func711,26124
	uint32		hash_iv;712,26187
	ExprContext *exprcontext;exprcontext713,26229
}			TupleHashTableData;714,26281
typedef tuplehash_iterator TupleHashIterator;716,26306
#define InitTupleHashIterator(723,26549
#define TermTupleHashIterator(725,26643
#define ResetTupleHashIterator(727,26693
#define ScanTupleHashTable(729,26777
typedef struct AggrefExprState749,27559
	NodeTag		type;751,27592
	Aggref	   *aggref;aggref752,27608
	int			aggno;753,27657
} AggrefExprState;754,27718
typedef struct WindowFuncExprState760,27811
	NodeTag		type;762,27848
	WindowFunc *wfunc;wfunc763,27864
	List	   *args;args764,27913
	ExprState  *aggfilter;aggfilter765,27973
	int			wfuncno;766,28022
} WindowFuncExprState;767,28086
typedef struct SetExprState779,28481
	NodeTag		type;781,28511
	Expr	   *expr;expr782,28527
	List	   *args;args783,28572
	ExprState  *elidedFuncState;elidedFuncState790,28862
	FmgrInfo	func;797,29089
	Tuplestorestate *funcResultStore;funcResultStore804,29310
	TupleTableSlot *funcResultSlot;funcResultSlot805,29345
	TupleDesc	funcResultDesc;811,29501
	bool		funcReturnsTuple;812,29528
	bool		funcReturnsSet;818,29752
	bool		setArgsValid;827,30126
	bool		shutdown_reg;835,30421
	FunctionCallInfo fcinfo;842,30702
} SetExprState;843,30728
typedef struct SubPlanState849,30811
	NodeTag		type;851,30841
	SubPlan    *subplan;subplan852,30857
	struct PlanState *planstate;planstate853,30907
	struct PlanState *parent;parent854,30971
	ExprState  *testexpr;testexpr855,31034
	List	   *args;args856,31094
	HeapTuple	curTuple;857,31151
	Datum		curArray;858,31218
	TupleDesc	descRight;860,31341
	ProjectionInfo *projLeft;projLeft861,31402
	ProjectionInfo *projRight;projRight862,31465
	TupleHashTable hashtable;863,31531
	TupleHashTable hashnulls;864,31603
	bool		havehashrows;865,31669
	bool		havenullrows;866,31727
	MemoryContext hashtablecxt;867,31785
	MemoryContext hashtempcxt;868,31858
	ExprContext *innerecontext;innerecontext869,31928
	AttrNumber *keyColIdx;keyColIdx870,31999
	Oid		   *tab_eq_funcoids;tab_eq_funcoids871,32059
	Oid		   *tab_collations;tab_collations873,32145
	FmgrInfo   *tab_hash_funcs;tab_hash_funcs874,32212
	FmgrInfo   *tab_eq_funcs;tab_eq_funcs875,32284
	FmgrInfo   *lhs_hash_funcs;lhs_hash_funcs876,32358
	FmgrInfo   *cur_eq_funcs;cur_eq_funcs877,32433
	ExprState  *cur_eq_comp;cur_eq_comp878,32503
} SubPlanState;879,32573
typedef struct AlternativeSubPlanState885,32667
	NodeTag		type;887,32708
	AlternativeSubPlan *subplan;subplan888,32724
	List	   *subplans;subplans889,32781
	int			active;890,32846
} AlternativeSubPlanState;891,32903
typedef enum DomainConstraintType900,33181
	DOM_CONSTRAINT_NOTNULL,902,33217
	DOM_CONSTRAINT_CHECK903,33242
} DomainConstraintType;904,33264
typedef struct DomainConstraintState906,33289
	NodeTag		type;908,33328
	DomainConstraintType constrainttype;909,33344
	char	   *name;name910,33404
	Expr	   *check_expr;check_expr911,33464
	ExprState  *check_exprstate;check_exprstate912,33525
} DomainConstraintState;913,33594
typedef TupleTableSlot *(*ExecProcNodeMtd)ExecProcNodeMtd932,34135
typedef struct PlanState941,34404
	NodeTag		type;943,34431
	Plan	   *plan;plan945,34448
	EState	   *state;state947,34494
	ExecProcNodeMtd ExecProcNode;951,34639
	ExecProcNodeMtd ExecProcNodeReal;952,34706
	Instrumentation *instrument;instrument955,34800
	WorkerInstrumentation *worker_instrument;worker_instrument956,34873
	struct SharedJitInstrumentation *worker_jit_instrument;worker_jit_instrument959,34988
	ExprState  *qual;qual966,35262
	struct PlanState *lefttree;lefttree967,35312
	struct PlanState *righttree;righttree968,35366
	List	   *initPlan;initPlan970,35397
	List	   *subPlan;subPlan972,35491
	Bitmapset  *chgParam;chgParam977,35627
	TupleDesc	ps_ResultTupleDesc;982,35759
	TupleTableSlot *ps_ResultTupleSlot;ps_ResultTupleSlot983,35815
	ExprContext *ps_ExprContext;ps_ExprContext984,35884
	ProjectionInfo *ps_ProjInfo;ps_ProjInfo985,35957
	TupleDesc	scandesc;992,36245
	const TupleTableSlotOps *scanops;scanops1017,37393
	const TupleTableSlotOps *outerops;outerops1018,37428
	const TupleTableSlotOps *innerops;innerops1019,37464
	const TupleTableSlotOps *resultops;resultops1020,37500
	bool		scanopsfixed;1021,37537
	bool		outeropsfixed;1022,37558
	bool		inneropsfixed;1023,37580
	bool		resultopsfixed;1024,37602
	bool		scanopsset;1025,37625
	bool		outeropsset;1026,37644
	bool		inneropsset;1027,37664
	bool		resultopsset;1028,37684
} PlanState;1029,37705
#define innerPlanState(1038,38009
#define outerPlanState(1039,38074
#define InstrCountTuples2(1042,38206
#define InstrCountFiltered1(1047,38372
#define InstrCountFiltered2(1052,38541
typedef struct EPQState1077,39760
	EState	   *parentestate;parentestate1081,39834
	int			epqParam;1082,39886
	List	   *tuple_table;tuple_table1089,40176
	TupleTableSlot **relsubs_slot;relsubs_slot1090,40234
	Plan	   *plan;plan1097,40369
	List	   *arowMarks;arowMarks1098,40418
	TupleTableSlot *origslot;origslot1106,40637
	EState	   *recheckestate;recheckestate1111,40719
	ExecAuxRowMark **relsubs_rowmark;relsubs_rowmark1118,40936
	bool	   *relsubs_done;relsubs_done1124,41077
	PlanState  *recheckplanstate;recheckplanstate1126,41102
} EPQState;1127,41175
typedef struct ResultState1134,41261
	PlanState	ps;1136,41290
	ExprState  *resconstantqual;resconstantqual1137,41341
	bool		rs_done;1138,41371
	bool		rs_checkqual;1139,41407
} ResultState;1140,41464
typedef struct ProjectSetState1149,41656
	PlanState	ps;1151,41689
	Node	  **elems;elems1152,41740
	ExprDoneCond *elemdone;elemdone1153,41792
	int			nelems;1154,41856
	bool		pending_srf_tuples;1155,41906
	MemoryContext argcontext;1156,41971
} ProjectSetState;1157,42030
typedef struct ModifyTableState1163,42127
	PlanState	ps;1165,42161
	CmdType		operation;1166,42212
	bool		canSetTag;1167,42266
	bool		mt_done;1168,42331
	PlanState **mt_plans;mt_plans1169,42367
	int			mt_nplans;1170,42427
	int			mt_whichplan;1171,42481
	TupleTableSlot **mt_scans;mt_scans1172,42545
	ResultRelInfo *resultRelInfo;resultRelInfo1174,42636
	ResultRelInfo *rootResultRelInfo;rootResultRelInfo1175,42702
	List	  **mt_arowmarks;mt_arowmarks1177,42802
	EPQState	mt_epqstate;1178,42865
	bool		fireBSTriggers;1179,42931
	TupleTableSlot *mt_root_tuple_slot;mt_root_tuple_slot1185,43117
	struct PartitionTupleRouting *mt_partition_tuple_routing;mt_partition_tuple_routing1188,43189
	struct TransitionCaptureState *mt_transition_capture;mt_transition_capture1191,43317
	struct TransitionCaptureState *mt_oc_transition_capture;mt_oc_transition_capture1194,43449
	TupleConversionMap **mt_per_subplan_tupconv_maps;mt_per_subplan_tupconv_maps1197,43568
} ModifyTableState;1198,43619
typedef struct AppendState AppendState;1214,44101
typedef struct ParallelAppendState ParallelAppendState;1216,44169
struct AppendState1219,44254
	PlanState	ps;1221,44275
	PlanState **appendplans;appendplans1222,44326
	int			as_nplans;1223,44392
	int			as_whichplan;1224,44410
	int			as_first_partial_plan;1225,44431
	ParallelAppendState *as_pstate;as_pstate1227,44537
	Size		pstate_len;1228,44603
	struct PartitionPruneState *as_prune_state;as_prune_state1229,44664
	Bitmapset  *as_valid_subplans;as_valid_subplans1230,44709
	bool		(*choose_next_subplan)choose_next_subplan1231,44741
typedef struct MergeAppendState1249,45364
	PlanState	ps;1251,45398
	PlanState **mergeplans;mergeplans1252,45449
	int			ms_nplans;1253,45515
	int			ms_nkeys;1254,45533
	SortSupport ms_sortkeys;1255,45550
	TupleTableSlot **ms_slots;ms_slots1256,45607
	struct binaryheap *ms_heap;ms_heap1257,45667
	bool		ms_initialized;1258,45730
	struct PartitionPruneState *ms_prune_state;ms_prune_state1259,45781
	Bitmapset  *ms_valid_subplans;ms_valid_subplans1260,45826
} MergeAppendState;1261,45858
typedef struct RecursiveUnionState1274,46302
	PlanState	ps;1276,46339
	bool		recursing;1277,46390
	bool		intermediate_empty;1278,46408
	Tuplestorestate *working_table;working_table1279,46435
	Tuplestorestate *intermediate_table;intermediate_table1280,46468
	Oid		   *eqfuncoids;eqfuncoids1282,46559
	FmgrInfo   *hashfunctions;hashfunctions1283,46620
	MemoryContext tempContext;1284,46682
	TupleHashTable hashtable;1285,46751
	MemoryContext tableContext;1286,46819
} RecursiveUnionState;1287,46891
typedef struct BitmapAndState1293,46990
	PlanState	ps;1295,47022
	PlanState **bitmapplans;bitmapplans1296,47073
	int			nplans;1297,47139
} BitmapAndState;1298,47184
typedef struct BitmapOrState1304,47277
	PlanState	ps;1306,47308
	PlanState **bitmapplans;bitmapplans1307,47359
	int			nplans;1308,47425
} BitmapOrState;1309,47470
typedef struct ScanState1330,48240
	PlanState	ps;1332,48267
	Relation	ss_currentRelation;1333,48318
	struct TableScanDescData *ss_currentScanDesc;ss_currentScanDesc1334,48348
	TupleTableSlot *ss_ScanTupleSlot;ss_ScanTupleSlot1335,48395
} ScanState;1336,48430
typedef struct SeqScanState1342,48517
	ScanState	ss;1344,48547
	Size		pscan_len;1345,48598
} SeqScanState;1346,48661
typedef struct SampleScanState1352,48754
	ScanState	ss;1354,48787
	List	   *args;args1355,48802
	ExprState  *repeatable;repeatable1356,48861
	struct TsmRoutine *tsmroutine;tsmroutine1358,48983
	void	   *tsm_state;tsm_state1359,49055
	bool		use_bulkread;1360,49122
	bool		use_pagemode;1361,49186
	bool		begun;1362,49253
	uint32		seed;1363,49316
	int64		donetuples;1364,49351
	bool		haveblock;1365,49412
	bool		done;1366,49478
} SampleScanState;1367,49521
	struct ScanKeyData *scan_key;scan_key1376,49733
	ExprState  *key_expr;key_expr1377,49796
	bool		key_toastable;1378,49856
} IndexRuntimeKeyInfo;1379,49923
	struct ScanKeyData *scan_key;scan_key1383,49964
	ExprState  *array_expr;array_expr1384,50027
	int			next_elem;1385,50095
	int			num_elems;1386,50146
	Datum	   *elem_values;elem_values1387,50210
	bool	   *elem_nulls;elem_nulls1388,50266
} IndexArrayKeyInfo;1389,50328
typedef struct IndexScanState1417,51593
	ScanState	ss;1419,51625
	ExprState  *indexqualorig;indexqualorig1420,51676
	List	   *indexorderbyorig;indexorderbyorig1421,51704
	struct ScanKeyData *iss_ScanKeys;iss_ScanKeys1422,51732
	int			iss_NumScanKeys;1423,51767
	struct ScanKeyData *iss_OrderByKeys;iss_OrderByKeys1424,51791
	int			iss_NumOrderByKeys;1425,51829
	IndexRuntimeKeyInfo *iss_RuntimeKeys;iss_RuntimeKeys1426,51856
	int			iss_NumRuntimeKeys;1427,51895
	bool		iss_RuntimeKeysReady;1428,51922
	ExprContext *iss_RuntimeContext;iss_RuntimeContext1429,51951
	Relation	iss_RelationDesc;1430,51985
	struct IndexScanDescData *iss_ScanDesc;iss_ScanDesc1431,52013
	pairingheap *iss_ReorderQueue;iss_ReorderQueue1434,52118
	bool		iss_ReachedEnd;1435,52150
	Datum	   *iss_OrderByValues;iss_OrderByValues1436,52173
	bool	   *iss_OrderByNulls;iss_OrderByNulls1437,52203
	SortSupport iss_SortSupport;1438,52231
	bool	   *iss_OrderByTypByVals;iss_OrderByTypByVals1439,52261
	int16	   *iss_OrderByTypLens;iss_OrderByTypLens1440,52293
	Size		iss_PscanLen;1441,52324
} IndexScanState;1442,52345
typedef struct IndexOnlyScanState1463,53220
	ScanState	ss;1465,53256
	ExprState  *indexqual;indexqual1466,53307
	struct ScanKeyData *ioss_ScanKeys;ioss_ScanKeys1467,53331
	int			ioss_NumScanKeys;1468,53367
	struct ScanKeyData *ioss_OrderByKeys;ioss_OrderByKeys1469,53392
	int			ioss_NumOrderByKeys;1470,53431
	IndexRuntimeKeyInfo *ioss_RuntimeKeys;ioss_RuntimeKeys1471,53459
	int			ioss_NumRuntimeKeys;1472,53499
	bool		ioss_RuntimeKeysReady;1473,53527
	ExprContext *ioss_RuntimeContext;ioss_RuntimeContext1474,53557
	Relation	ioss_RelationDesc;1475,53592
	struct IndexScanDescData *ioss_ScanDesc;ioss_ScanDesc1476,53621
	TupleTableSlot *ioss_TableSlot;ioss_TableSlot1477,53663
	Buffer		ioss_VMBuffer;1478,53696
	Size		ioss_PscanLen;1479,53720
} IndexOnlyScanState;1480,53742
typedef struct BitmapIndexScanState1498,54425
	ScanState	ss;1500,54463
	TIDBitmap  *biss_result;biss_result1501,54514
	struct ScanKeyData *biss_ScanKeys;biss_ScanKeys1502,54540
	int			biss_NumScanKeys;1503,54576
	IndexRuntimeKeyInfo *biss_RuntimeKeys;biss_RuntimeKeys1504,54601
	int			biss_NumRuntimeKeys;1505,54641
	IndexArrayKeyInfo *biss_ArrayKeys;biss_ArrayKeys1506,54669
	int			biss_NumArrayKeys;1507,54705
	bool		biss_RuntimeKeysReady;1508,54731
	ExprContext *biss_RuntimeContext;biss_RuntimeContext1509,54761
	Relation	biss_RelationDesc;1510,54796
	struct IndexScanDescData *biss_ScanDesc;biss_ScanDesc1511,54825
} BitmapIndexScanState;1512,54867
	BM_INITIAL,1529,55413
	BM_INPROGRESS,1530,55426
	BM_FINISHED1531,55442
} SharedBitmapState;1532,55455
typedef struct ParallelBitmapHeapState1547,56026
	dsa_pointer tbmiterator;1549,56067
	dsa_pointer prefetch_iterator;1550,56093
	slock_t		mutex;1551,56125
	int			prefetch_pages;1552,56142
	int			prefetch_target;1553,56165
	SharedBitmapState state;1554,56189
	ConditionVariable cv;1555,56215
	char		phs_snapshot_data[phs_snapshot_data1556,56238
} ParallelBitmapHeapState;1557,56287
typedef struct BitmapHeapScanState1583,57476
	ScanState	ss;1585,57513
	ExprState  *bitmapqualorig;bitmapqualorig1586,57564
	TIDBitmap  *tbm;tbm1587,57593
	TBMIterator *tbmiterator;tbmiterator1588,57611
	TBMIterateResult *tbmres;tbmres1589,57638
	bool		can_skip_fetch;1590,57665
	int			return_empty_tuples;1591,57688
	Buffer		vmbuffer;1592,57716
	Buffer		pvmbuffer;1593,57735
	long		exact_pages;1594,57755
	long		lossy_pages;1595,57775
	TBMIterator *prefetch_iterator;prefetch_iterator1596,57795
	int			prefetch_pages;1597,57828
	int			prefetch_target;1598,57851
	int			prefetch_maximum;1599,57875
	Size		pscan_len;1600,57900
	bool		initialized;1601,57918
	TBMSharedIterator *shared_tbmiterator;shared_tbmiterator1602,57938
	TBMSharedIterator *shared_prefetch_iterator;shared_prefetch_iterator1603,57978
	ParallelBitmapHeapState *pstate;pstate1604,58024
} BitmapHeapScanState;1605,58058
typedef struct TidScanState1618,58466
	ScanState	ss;1620,58496
	List	   *tss_tidexprs;tss_tidexprs1621,58547
	bool		tss_isCurrentOf;1622,58571
	int			tss_NumTids;1623,58595
	int			tss_TidPtr;1624,58615
	ItemPointerData *tss_TidList;tss_TidList1625,58634
	HeapTupleData tss_htup;1626,58665
} TidScanState;1627,58690
typedef struct SubqueryScanState1636,58935
	ScanState	ss;1638,58970
	PlanState  *subplan;subplan1639,59021
} SubqueryScanState;1640,59043
typedef struct FunctionScanState1660,59696
	ScanState	ss;1662,59731
	int			eflags;1663,59782
	bool		ordinality;1664,59797
	bool		simple;1665,59816
	int64		ordinal;1666,59831
	int			nfuncs;1667,59848
	struct FunctionScanPerFuncState *funcstates;funcstates1668,59863
	MemoryContext argcontext;1669,59938
} FunctionScanState;1670,59965
typedef struct ValuesScanState1696,61180
	ScanState	ss;1698,61213
	ExprContext *rowcontext;rowcontext1699,61264
	List	  **exprlists;exprlists1700,61290
	List	  **exprstatelists;exprstatelists1701,61311
	int			array_len;1702,61337
	int			curr_idx;1703,61355
} ValuesScanState;1704,61372
typedef struct TableFuncScanState1712,61520
	ScanState	ss;1714,61556
	ExprState  *docexpr;docexpr1715,61607
	ExprState  *rowexpr;rowexpr1716,61666
	List	   *colexprs;colexprs1717,61731
	List	   *coldefexprs;coldefexprs1718,61797
	List	   *ns_names;ns_names1719,61863
	List	   *ns_uris;ns_uris1720,61917
	Bitmapset  *notnulls;notnulls1721,61981
	void	   *opaque;opaque1722,62051
	const struct TableFuncRoutine *routine;routine1723,62105
	FmgrInfo   *in_functions;in_functions1724,62174
	Oid		   *typioparams;typioparams1725,62238
	int64		ordinal;1726,62294
	MemoryContext perTableCxt;1727,62347
	Tuplestorestate *tupstore;tupstore1728,62399
} TableFuncScanState;1729,62452
typedef struct CteScanState1741,62794
	ScanState	ss;1743,62824
	int			eflags;1744,62875
	int			readptr;1745,62937
	PlanState  *cteplanstate;cteplanstate1746,62996
	struct CteScanState *leader;leader1748,63131
	Tuplestorestate *cte_table;cte_table1750,63233
	bool		eof_cte;1751,63305
} CteScanState;1752,63354
typedef struct NamedTuplestoreScanState1764,63714
	ScanState	ss;1766,63756
	int			readptr;1767,63807
	TupleDesc	tupdesc;1768,63866
	Tuplestorestate *relation;relation1769,63932
} NamedTuplestoreScanState;1770,63975
typedef struct WorkTableScanState1780,64244
	ScanState	ss;1782,64280
	RecursiveUnionState *rustate;rustate1783,64331
} WorkTableScanState;1784,64362
typedef struct ForeignScanState1792,64525
	ScanState	ss;1794,64559
	ExprState  *fdw_recheck_quals;fdw_recheck_quals1795,64610
	Size		pscan_len;1796,64681
	struct FdwRoutine *fdwroutine;fdwroutine1798,64807
	void	   *fdw_state;fdw_state1799,64839
} ForeignScanState;1800,64908
typedef struct CustomScanState1817,65523
	ScanState	ss;1819,65556
	uint32		flags;1820,65571
	List	   *custom_ps;custom_ps1822,65657
	Size		pscan_len;1823,65723
	const struct CustomExecMethods *methods;methods1824,65790
} CustomScanState;1825,65832
typedef struct JoinState1838,66142
	PlanState	ps;1840,66169
	JoinType	jointype;1841,66184
	bool		single_match;1842,66204
	ExprState  *joinqual;joinqual1844,66315
} JoinState;1845,66381
typedef struct NestLoopState1855,66669
	JoinState	js;1857,66700
	bool		nl_NeedNewOuter;1858,66751
	bool		nl_MatchedOuter;1859,66775
	TupleTableSlot *nl_NullInnerTupleSlot;nl_NullInnerTupleSlot1860,66799
} NestLoopState;1861,66839
typedef struct MergeJoinClauseData *MergeJoinClause;MergeJoinClause1886,68075
typedef struct MergeJoinState1888,68129
	JoinState	js;1890,68161
	int			mj_NumClauses;1891,68212
	MergeJoinClause mj_Clauses;1892,68234
	int			mj_JoinState;1893,68299
	bool		mj_SkipMarkRestore;1894,68320
	bool		mj_ExtraMarks;1895,68347
	bool		mj_ConstFalseJoin;1896,68369
	bool		mj_FillOuter;1897,68395
	bool		mj_FillInner;1898,68416
	bool		mj_MatchedOuter;1899,68437
	bool		mj_MatchedInner;1900,68461
	TupleTableSlot *mj_OuterTupleSlot;mj_OuterTupleSlot1901,68485
	TupleTableSlot *mj_InnerTupleSlot;mj_InnerTupleSlot1902,68521
	TupleTableSlot *mj_MarkedTupleSlot;mj_MarkedTupleSlot1903,68557
	TupleTableSlot *mj_NullOuterTupleSlot;mj_NullOuterTupleSlot1904,68594
	TupleTableSlot *mj_NullInnerTupleSlot;mj_NullInnerTupleSlot1905,68634
	ExprContext *mj_OuterEContext;mj_OuterEContext1906,68674
	ExprContext *mj_InnerEContext;mj_InnerEContext1907,68706
} MergeJoinState;1908,68738
typedef struct HashJoinTupleData *HashJoinTuple;HashJoinTuple1937,70051
typedef struct HashJoinTableData *HashJoinTable;HashJoinTable1938,70100
typedef struct HashJoinState1940,70150
	JoinState	js;1942,70181
	ExprState  *hashclauses;hashclauses1943,70232
	List	   *hj_OuterHashKeys;hj_OuterHashKeys1944,70258
	List	   *hj_HashOperators;hj_HashOperators1945,70316
	List	   *hj_Collations;hj_Collations1946,70372
	HashJoinTable hj_HashTable;1947,70397
	uint32		hj_CurHashValue;1948,70426
	int			hj_CurBucketNo;1949,70452
	int			hj_CurSkewBucketNo;1950,70475
	HashJoinTuple hj_CurTuple;1951,70502
	TupleTableSlot *hj_OuterTupleSlot;hj_OuterTupleSlot1952,70530
	TupleTableSlot *hj_HashTupleSlot;hj_HashTupleSlot1953,70566
	TupleTableSlot *hj_NullOuterTupleSlot;hj_NullOuterTupleSlot1954,70601
	TupleTableSlot *hj_NullInnerTupleSlot;hj_NullInnerTupleSlot1955,70641
	TupleTableSlot *hj_FirstOuterTupleSlot;hj_FirstOuterTupleSlot1956,70681
	int			hj_JoinState;1957,70722
	bool		hj_MatchedOuter;1958,70743
	bool		hj_OuterNotEmpty;1959,70767
} HashJoinState;1960,70792
typedef struct MaterialState1977,71232
	ScanState	ss;1979,71263
	int			eflags;1980,71314
	bool		eof_underlying;1981,71376
	Tuplestorestate *tuplestorestate;tuplestorestate1982,71437
} MaterialState;1983,71472
typedef struct PresortedKeyData1993,71767
	FmgrInfo	flinfo;1995,71801
	FunctionCallInfo fcinfo;1996,71852
	OffsetNumber attno;1997,71914
} PresortedKeyData;1998,71969
typedef struct SharedSortInfo2004,72094
	int			num_workers;2006,72126
	TuplesortInstrumentation sinstrument[sinstrument2007,72146
} SharedSortInfo;2008,72208
typedef struct SortState2014,72297
	ScanState	ss;2016,72324
	bool		randomAccess;2017,72375
	bool		bounded;2018,72437
	int64		bound;2019,72487
	bool		sort_Done;2020,72549
	bool		bounded_Done;2021,72594
	int64		bound_Done;2022,72659
	void	   *tuplesortstate;tuplesortstate2023,72722
	bool		am_worker;2024,72783
	SharedSortInfo *shared_info;shared_info2025,72825
} SortState;2026,72882
typedef struct IncrementalSortGroupInfo2032,72992
	int64		groupCount;2034,73034
	long		maxDiskSpaceUsed;2035,73054
	long		totalDiskSpaceUsed;2036,73079
	long		maxMemorySpaceUsed;2037,73106
	long		totalMemorySpaceUsed;2038,73133
	bits32		sortMethods;2039,73162
} IncrementalSortGroupInfo;2040,73217
typedef struct IncrementalSortInfo2042,73246
	IncrementalSortGroupInfo fullsortGroupInfo;2044,73283
	IncrementalSortGroupInfo prefixsortGroupInfo;2045,73328
} IncrementalSortInfo;2046,73375
typedef struct SharedIncrementalSortInfo2052,73515
	int			num_workers;2054,73558
	IncrementalSortInfo sinfo[sinfo2055,73578
} SharedIncrementalSortInfo;2056,73629
	INCSORT_LOADFULLSORT,2064,73755
	INCSORT_LOADPREFIXSORT,2065,73778
	INCSORT_READFULLSORT,2066,73803
	INCSORT_READPREFIXSORT,2067,73826
} IncrementalSortExecutionStatus;2068,73851
typedef struct IncrementalSortState2070,73886
	ScanState	ss;2072,73924
	bool		bounded;2073,73975
	int64		bound;2074,74025
	bool		outerNodeDone;2075,74087
	int64		bound_Done;2076,74156
	IncrementalSortExecutionStatus execution_status;2077,74219
	int64		n_fullsort_remaining;2078,74269
	Tuplesortstate *fullsort_state;fullsort_state2079,74299
	Tuplesortstate *prefixsort_state;prefixsort_state2080,74367
	PresortedKeyData *presorted_keys;presorted_keys2082,74495
	IncrementalSortInfo incsort_info;2084,74531
	TupleTableSlot *group_pivot;group_pivot2087,74642
	TupleTableSlot *transfer_tuple;transfer_tuple2088,74672
	bool		am_worker;2089,74705
	SharedIncrementalSortInfo *shared_info;shared_info2090,74747
} IncrementalSortState;2091,74815
typedef struct GroupState2097,74920
	ScanState	ss;2099,74948
	ExprState  *eqfunction;eqfunction2100,74999
	bool		grp_done;2101,75049
} GroupState;2102,75108
typedef struct AggregateInstrumentation2108,75213
	Size		hash_mem_peak;2110,75255
	uint64		hash_disk_used;2111,75312
	int			hash_batches_used;2112,75365
} AggregateInstrumentation;2113,75434
typedef struct SharedAggInfo2119,75572
	int			num_workers;2121,75603
	AggregateInstrumentation sinstrument[sinstrument2122,75623
} SharedAggInfo;2123,75685
typedef struct AggStatePerAggData *AggStatePerAgg;AggStatePerAgg2138,76228
typedef struct AggStatePerTransData *AggStatePerTrans;AggStatePerTrans2139,76279
typedef struct AggStatePerGroupData *AggStatePerGroup;AggStatePerGroup2140,76334
typedef struct AggStatePerPhaseData *AggStatePerPhase;AggStatePerPhase2141,76389
typedef struct AggStatePerHashData *AggStatePerHash;AggStatePerHash2142,76444
typedef struct AggState2144,76498
	ScanState	ss;2146,76524
	List	   *aggs;aggs2147,76575
	int			numaggs;2148,76638
	int			numtrans;2149,76693
	AggStrategy aggstrategy;2150,76742
	AggSplit	aggsplit;2151,76788
	AggStatePerPhase phase;2152,76847
	int			numphases;2153,76909
	int			current_phase;2154,76971
	AggStatePerAgg peragg;2155,77020
	AggStatePerTrans pertrans;2156,77074
	ExprContext *hashcontext;hashcontext2157,77136
	ExprContext **aggcontexts;aggcontexts2158,77211
	ExprContext *tmpcontext;tmpcontext2159,77284
#define FIELDNO_AGGSTATE_CURAGGCONTEXT 2160,77347
	ExprContext *curaggcontext;curaggcontext2161,77389
	AggStatePerAgg curperagg;2162,77452
#define FIELDNO_AGGSTATE_CURPERTRANS 2163,77520
	AggStatePerTrans curpertrans;2164,77560
	bool		input_done;2165,77634
	bool		agg_done;2166,77683
	int			projected_set;2167,77740
#define FIELDNO_AGGSTATE_CURRENT_SET 2168,77800
	int			current_set;2169,77840
	Bitmapset  *grouped_cols;grouped_cols2170,77907
	List	   *all_grouped_cols;all_grouped_cols2171,77975
	Bitmapset  *colnos_needed;colnos_needed2172,78048
	int			max_colno_needed;2173,78121
	bool		all_cols_needed;2174,78189
	int			maxsets;2176,78308
	AggStatePerPhase phases;2177,78367
	Tuplesortstate *sort_in;sort_in2178,78419
	Tuplesortstate *sort_out;sort_out2179,78478
	TupleTableSlot *sort_slot;sort_slot2180,78547
	AggStatePerGroup *pergroups;pergroups2182,78667
	HeapTuple	grp_firstTuple;2184,78764
	bool		table_filled;2186,78898
	int			num_hashes;2187,78948
	MemoryContext hash_metacxt;2188,78967
	struct HashTapeInfo *hash_tapeinfo;hash_tapeinfo2189,79031
	struct HashAggSpill *hash_spills;hash_spills2190,79099
	TupleTableSlot *hash_spill_rslot;hash_spill_rslot2192,79219
	TupleTableSlot *hash_spill_wslot;hash_spill_wslot2193,79284
	List	   *hash_batches;hash_batches2194,79349
	bool		hash_ever_spilled;2195,79418
	bool		hash_spill_mode;2196,79486
	Size		hash_mem_limit;2198,79602
	uint64		hash_ngroups_limit;2199,79664
	int			hash_planned_partitions;2200,79732
	double		hashentrysize;2202,79828
	Size		hash_mem_peak;2203,79892
	uint64		hash_ngroups_current;2204,79949
	uint64		hash_disk_used;2206,80055
	int			hash_batches_used;2207,80108
	AggStatePerHash perhash;2209,80178
	AggStatePerGroup *hash_pergroup;hash_pergroup2210,80238
#define FIELDNO_AGGSTATE_ALL_PERGROUPS 2214,80397
	AggStatePerGroup *all_pergroups;all_pergroups2215,80439
	ProjectionInfo *combinedproj;combinedproj2217,80541
	SharedAggInfo *shared_info;shared_info2218,80599
} AggState;2219,80655
typedef struct WindowStatePerFuncData *WindowStatePerFunc;WindowStatePerFunc2226,80794
typedef struct WindowStatePerAggData *WindowStatePerAgg;WindowStatePerAgg2227,80853
typedef struct WindowAggState2229,80911
	ScanState	ss;2231,80943
	List	   *funcs;funcs2234,81046
	int			numfuncs;2235,81106
	int			numaggs;2236,81163
	WindowStatePerFunc perfunc;2238,81220
	WindowStatePerAgg peragg;2239,81287
	ExprState  *partEqfunction;partEqfunction2240,81352
	ExprState  *ordEqfunction;ordEqfunction2241,81424
	Tuplestorestate *buffer;buffer2242,81494
	int			current_ptr;2243,81559
	int			framehead_ptr;2244,81616
	int			frametail_ptr;2245,81683
	int			grouptail_ptr;2246,81750
	int64		spooled_rows;2247,81817
	int64		currentpos;2248,81871
	int64		frameheadpos;2249,81935
	int64		frametailpos;2250,81991
	struct WindowObjectData *agg_winobj;agg_winobj2252,82123
	int64		aggregatedbase;2253,82196
	int64		aggregatedupto;2254,82259
	int			frameOptions;2256,82326
	ExprState  *startOffset;startOffset2257,82389
	ExprState  *endOffset;endOffset2258,82458
	Datum		startOffsetValue;2259,82524
	Datum		endOffsetValue;2260,82589
	FmgrInfo	startInRangeFunc;2263,82719
	FmgrInfo	endInRangeFunc;2264,82787
	Oid			inRangeColl;2265,82851
	bool		inRangeAsc;2266,82906
	bool		inRangeNullsFirst;2267,82971
	int64		currentgroup;2270,83086
	int64		frameheadgroup;2271,83155
	int64		frametailgroup;2272,83216
	int64		groupheadpos;2273,83277
	int64		grouptailpos;2274,83344
	MemoryContext partcontext;2276,83409
	MemoryContext aggcontext;2277,83479
	MemoryContext curaggcontext;2278,83554
	ExprContext *tmpcontext;tmpcontext2279,83623
	bool		all_first;2281,83686
	bool		all_done;2282,83740
	bool		partition_spooled;2283,83793
	bool		more_partitions;2285,83911
	bool		framehead_valid;2287,84000
	bool		frametail_valid;2289,84099
	bool		grouptail_valid;2291,84198
	TupleTableSlot *first_part_slot;first_part_slot2294,84298
	TupleTableSlot *framehead_slot;framehead_slot2296,84392
	TupleTableSlot *frametail_slot;frametail_slot2297,84460
	TupleTableSlot *agg_row_slot;agg_row_slot2300,84595
	TupleTableSlot *temp_slot_1;temp_slot_12301,84626
	TupleTableSlot *temp_slot_2;temp_slot_22302,84656
} WindowAggState;2303,84686
typedef struct UniqueState2316,85153
	PlanState	ps;2318,85182
	ExprState  *eqfunction;eqfunction2319,85233
} UniqueState;2320,85285
typedef struct GatherState2329,85488
	PlanState	ps;2331,85517
	bool		initialized;2332,85568
	bool		need_to_scan_locally;2333,85612
	int64		tuples_needed;2334,85677
	TupleTableSlot *funnel_slot;funnel_slot2336,85778
	struct ParallelExecutorInfo *pei;pei2337,85808
	int			nworkers_launched;2339,85906
	int			nreaders;2340,85965
	int			nextreader;2341,86020
	struct TupleQueueReader **reader;reader2342,86075
} GatherState;2343,86151
typedef struct GatherMergeState2355,86492
	PlanState	ps;2357,86526
	bool		initialized;2358,86577
	bool		gm_initialized;2359,86621
	bool		need_to_scan_locally;2360,86676
	int64		tuples_needed;2361,86741
	TupleDesc	tupDesc;2363,86842
	int			gm_nkeys;2364,86906
	SortSupport gm_sortkeys;2365,86953
	struct ParallelExecutorInfo *pei;pei2366,87010
	int			nworkers_launched;2369,87165
	int			nreaders;2370,87224
	TupleTableSlot **gm_slots;gm_slots2371,87273
	struct TupleQueueReader **reader;reader2372,87337
	struct GMReaderTupleBuffer *gm_tuple_buffers;gm_tuple_buffers2373,87413
	struct binaryheap *gm_heap;gm_heap2374,87489
} GatherMergeState;2375,87552
typedef struct HashInstrumentation2381,87657
	int			nbuckets;2383,87694
	int			nbuckets_original;2384,87756
	int			nbatch;2385,87814
	int			nbatch_original;2386,87875
	Size		space_peak;2387,87931
} HashInstrumentation;2388,87984
typedef struct SharedHashInfo2394,88112
	int			num_workers;2396,88144
	HashInstrumentation hinstrument[hinstrument2397,88164
} SharedHashInfo;2398,88221
typedef struct HashState2404,88310
	PlanState	ps;2406,88337
	HashJoinTable hashtable;2407,88388
	List	   *hashkeys;hashkeys2408,88448
	SharedHashInfo *shared_info;shared_info2416,88797
	HashInstrumentation *hinstrument;hinstrument2423,89029
	struct ParallelHashJoinState *parallel_state;parallel_state2426,89093
} HashState;2427,89140
typedef struct SetOpStatePerGroupData *SetOpStatePerGroup;SetOpStatePerGroup2439,89499
typedef struct SetOpState2441,89559
	PlanState	ps;2443,89587
	ExprState  *eqfunction;eqfunction2444,89638
	Oid		   *eqfuncoids;eqfuncoids2445,89690
	FmgrInfo   *hashfunctions;hashfunctions2446,89751
	bool		setop_done;2447,89813
	long		numOutput;2448,89875
	SetOpStatePerGroup pergroup;2450,89981
	HeapTuple	grp_firstTuple;2451,90041
	TupleHashTable hashtable;2453,90162
	MemoryContext tableContext;2454,90231
	bool		table_filled;2455,90303
	TupleHashIterator hashiter;2456,90353
} SetOpState;2457,90421
typedef struct LockRowsState2465,90584
	PlanState	ps;2467,90615
	List	   *lr_arowMarks;lr_arowMarks2468,90666
	EPQState	lr_epqstate;2469,90720
} LockRowsState;2470,90786
	LIMIT_INITIAL,2486,91320
	LIMIT_RESCAN,2487,91374
	LIMIT_EMPTY,2488,91434
	LIMIT_INWINDOW,2489,91486
	LIMIT_WINDOWEND_TIES,2490,91546
	LIMIT_SUBPLANEOF,2491,91601
	LIMIT_WINDOWEND,2492,91662
	LIMIT_WINDOWSTART	2493,91714
} LimitStateCond;2494,91773
typedef struct LimitState2496,91792
	PlanState	ps;2498,91820
	ExprState  *limitOffset;limitOffset2499,91871
	ExprState  *limitCount;limitCount2500,91937
	LimitOption limitOption;2501,92002
	int64		offset;2502,92059
	int64		count;2503,92104
	bool		noCount;2504,92149
	LimitStateCond lstate;2505,92194
	int64		position;2506,92256
	TupleTableSlot *subSlot;subSlot2507,92318
	ExprState  *eqfunction;eqfunction2508,92383
	TupleTableSlot *last_slot;last_slot2510,92474
} LimitState;2511,92536

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/makefuncs.h,26
#define MAKEFUNC_H15,442

/home/seinoyu/pgsql/master/postgresql/src/include/nodes/tidbitmap.h,364
#define TIDBITMAP_H23,901
typedef struct TIDBitmap TIDBitmap;33,1104
typedef struct TBMIterator TBMIterator;36,1180
typedef struct TBMSharedIterator TBMSharedIterator;37,1220
typedef struct TBMIterateResult40,1312
	BlockNumber blockno;42,1346
	int			ntuples;43,1405
	bool		recheck;44,1454
	OffsetNumber offsets[offsets46,1560
} TBMIterateResult;47,1606

/home/seinoyu/pgsql/master/postgresql/src/include/windowapi.h,272
#define WINDOWAPI_H29,1247
#define WINDOW_SEEK_CURRENT 32,1295
#define WINDOW_SEEK_HEAD 33,1325
#define WINDOW_SEEK_TAIL 34,1352
typedef struct WindowObjectData *WindowObject;WindowObject37,1428
#define PG_WINDOW_OBJECT(39,1476
#define WindowObjectIsValid(41,1537

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/geqo_selection.h,32
#define GEQO_SELECTION_H24,804

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/planmain.h,143
#define PLANMAIN_H15,437
#define DEFAULT_CURSOR_TUPLE_FRACTION 21,537
typedef void (*query_pathkeys_callback)query_pathkeys_callback25,672

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/pathnode.h,26
#define PATHNODE_H15,428

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/restrictinfo.h,71
#define RESTRICTINFO_H15,433
#define make_simple_restrictinfo(21,559

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/geqo_random.h,59
#define GEQO_RANDOM_H25,841
#define geqo_randint(38,1164

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/paramassign.h,29
#define PARAMASSIGN_H14,453

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/geqo_misc.h,27
#define GEQO_MISC_H23,787

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/geqo_pool.h,27
#define GEQO_POOL_H24,775

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/orclauses.h,27
#define ORCLAUSES_H15,421

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/geqo_gene.h,286
#define GEQO_GENE_H24,777
typedef int Gene;30,908
typedef struct Chromosome32,927
	Gene	   *string;string34,955
	Cost		worth;35,973
} Chromosome;36,987
typedef struct Pool38,1002
	Chromosome *data;data40,1024
	int			size;41,1043
	int			string_length;42,1056
} Pool;43,1078

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/inherit.h,25
#define INHERIT_H15,413

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/geqo_copy.h,27
#define GEQO_COPY_H23,784

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/clauses.h,149
#define CLAUSES_H15,413
	int			numWindowFuncs;22,504
	Index		maxWinRef;23,567
	List	  **windowFuncs;windowFuncs24,633
} WindowFuncLists;25,699

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/paths.h,473
#define PATHS_H15,428
typedef void (*set_rel_pathlist_hook_type)set_rel_pathlist_hook_type29,740
typedef void (*set_join_pathlist_hook_type)set_join_pathlist_hook_type36,1019
typedef RelOptInfo *(*join_search_hook_type)join_search_hook_type45,1383
typedef bool (*ec_matches_callback_type)ec_matches_callback_type116,3879
	PATHKEYS_EQUAL,183,6577
	PATHKEYS_BETTER1,184,6626
	PATHKEYS_BETTER2,185,6690
	PATHKEYS_DIFFERENT	186,6728
} PathKeysComparison;187,6791

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/placeholder.h,29
#define PLACEHOLDER_H15,444

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/appendinfo.h,28
#define APPENDINFO_H15,473

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/cost.h,507
#define COST_H15,421
#define DEFAULT_SEQ_PAGE_COST 24,699
#define DEFAULT_RANDOM_PAGE_COST 25,734
#define DEFAULT_CPU_TUPLE_COST	26,772
#define DEFAULT_CPU_INDEX_TUPLE_COST 27,808
#define DEFAULT_CPU_OPERATOR_COST 28,851
#define DEFAULT_PARALLEL_TUPLE_COST 29,893
#define DEFAULT_PARALLEL_SETUP_COST 30,933
#define DEFAULT_EFFECTIVE_CACHE_SIZE 32,978
	CONSTRAINT_EXCLUSION_OFF,36,1063
	CONSTRAINT_EXCLUSION_ON,37,1111
	CONSTRAINT_EXCLUSION_PARTITION	38,1165
}			ConstraintExclusionType;39,1231

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/prep.h,22
#define PREP_H15,418

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/optimizer.h,684
#define OPTIMIZER_H23,894
typedef struct PlannerInfo PlannerInfo;34,1257
#define HAVE_PLANNERINFO_TYPEDEF 35,1297
typedef struct IndexOptInfo IndexOptInfo;40,1427
#define HAVE_INDEXOPTINFO_TYPEDEF 41,1469
typedef struct SpecialJoinInfo SpecialJoinInfo;44,1549
#define HAVE_SPECIALJOININFO_TYPEDEF 45,1597
	FORCE_PARALLEL_OFF,96,3069
	FORCE_PARALLEL_ON,97,3090
	FORCE_PARALLEL_REGRESS98,3110
}			ForceParallelMode;99,3134
#define PVC_INCLUDE_AGGREGATES	171,5526
#define PVC_RECURSE_AGGREGATES	172,5601
#define PVC_INCLUDE_WINDOWFUNCS 173,5675
#define PVC_RECURSE_WINDOWFUNCS 174,5755
#define PVC_INCLUDE_PLACEHOLDERS	175,5834
#define PVC_RECURSE_PLACEHOLDERS	177,5933

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/planner.h,174
#define PLANNER_H19,637
typedef PlannedStmt *(*planner_hook_type)planner_hook_type26,767
typedef void (*create_upper_paths_hook_type)create_upper_paths_hook_type33,1067

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/joininfo.h,26
#define JOININFO_H15,417

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/tlist.h,58
#define TLIST_H15,405
#define create_pathtarget(54,2110

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/geqo_recombination.h,372
#define GEQO_RECOMBINATION_H25,898
typedef struct Edge35,1070
	Gene		edge_list[edge_list37,1092
	int			total_edges;38,1133
	int			unused_edges;39,1153
} Edge;40,1174
#define DAD 54,1573
#define MOM 55,1625
typedef struct City62,1781
	int			tour2_position;64,1803
	int			tour1_position;65,1826
	int			used;66,1849
	int			select_list;67,1862
}			City;68,1882

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/subselect.h,27
#define SUBSELECT_H14,424

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/plancat.h,104
#define PLANCAT_H15,413
typedef void (*get_relation_info_hook_type)get_relation_info_hook_type21,551

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/geqo.h,395
#define GEQO_H23,768
#define ERX43,1027
#define DEFAULT_GEQO_EFFORT 53,1222
#define MIN_GEQO_EFFORT 54,1252
#define MAX_GEQO_EFFORT 55,1278
#define DEFAULT_GEQO_SELECTION_BIAS 63,1473
#define MIN_GEQO_SELECTION_BIAS 64,1513
#define MAX_GEQO_SELECTION_BIAS 65,1549
	List	   *initial_rels;initial_rels75,1728
	unsigned short random_state[random_state76,1792
} GeqoPrivateData;77,1854

/home/seinoyu/pgsql/master/postgresql/src/include/optimizer/geqo_mutation.h,31
#define GEQO_MUTATION_H23,800

/home/seinoyu/pgsql/master/postgresql/src/include/postgres.h,5277
#define POSTGRES_H44,1583
typedef struct varatt_external67,2502
	int32		va_rawsize;69,2535
	int32		va_extsize;70,2599
	Oid			va_valueid;71,2656
	Oid			va_toastrelid;72,2720
}			varatt_external;73,2783
typedef struct varatt_indirect84,3220
	struct varlena *pointer;pointer86,3253
}			varatt_indirect;87,3314
typedef struct ExpandedObjectHeader ExpandedObjectHeader;99,3813
typedef struct varatt_expanded101,3872
	ExpandedObjectHeader *eohptr;eohptr103,3905
} varatt_expanded;104,3936
typedef enum vartag_external111,4193
	VARTAG_INDIRECT 113,4224
	VARTAG_EXPANDED_RO 114,4246
	VARTAG_EXPANDED_RW 115,4271
	VARTAG_ONDISK 116,4296
} vartag_external;117,4316
#define VARTAG_IS_EXPANDED(120,4392
#define VARTAG_SIZE(123,4465
		uint32		va_header;142,5165
		char		va_data[va_data143,5186
	}			va_4byte;144,5226
		uint32		va_header;147,5289
		uint32		va_rawsize;148,5310
		char		va_data[va_data149,5375
	}			va_compressed;150,5437
} varattrib_4b;151,5457
	uint8		va_header;155,5491
	char		va_data[va_data156,5510
} varattrib_1b;157,5572
	uint8		va_header;162,5685
	uint8		va_tag;163,5731
	char		va_data[va_data164,5769
} varattrib_1b_e;165,5833
#define VARATT_IS_4B(204,7471
#define VARATT_IS_4B_U(206,7555
#define VARATT_IS_4B_C(208,7641
#define VARATT_IS_1B(210,7727
#define VARATT_IS_1B_E(212,7811
#define VARATT_NOT_PAD_BYTE(214,7890
#define VARSIZE_4B(218,8014
#define VARSIZE_1B(220,8101
#define VARTAG_1B_E(222,8173
#define SET_VARSIZE_4B(225,8239
#define SET_VARSIZE_4B_C(227,8342
#define SET_VARSIZE_1B(229,8462
#define SET_VARTAG_1B_E(231,8550
#define VARATT_IS_4B(236,8717
#define VARATT_IS_4B_U(238,8801
#define VARATT_IS_4B_C(240,8887
#define VARATT_IS_1B(242,8973
#define VARATT_IS_1B_E(244,9057
#define VARATT_NOT_PAD_BYTE(246,9136
#define VARSIZE_4B(250,9260
#define VARSIZE_1B(252,9354
#define VARTAG_1B_E(254,9433
#define SET_VARSIZE_4B(257,9499
#define SET_VARSIZE_4B_C(259,9607
#define SET_VARSIZE_1B(261,9724
#define SET_VARTAG_1B_E(263,9829
#define VARHDRSZ_SHORT	268,9996
#define VARATT_SHORT_MAX	269,10053
#define VARATT_CAN_MAKE_SHORT(270,10084
#define VARATT_CONVERTED_SHORT_SIZE(273,10214
#define VARHDRSZ_EXTERNAL	276,10302
#define VARDATA_4B(278,10364
#define VARDATA_4B_C(279,10434
#define VARDATA_1B(280,10510
#define VARDATA_1B_E(281,10571
#define VARRAWSIZE_4B_C(283,10636
#define VARDATA(302,11486
#define VARSIZE(303,11528
#define VARSIZE_SHORT(305,11571
#define VARDATA_SHORT(306,11618
#define VARTAG_EXTERNAL(308,11666
#define VARSIZE_EXTERNAL(309,11715
#define VARDATA_EXTERNAL(310,11804
#define VARATT_IS_COMPRESSED(312,11856
#define VARATT_IS_EXTERNAL(313,11912
#define VARATT_IS_EXTERNAL_ONDISK(314,11967
#define VARATT_IS_EXTERNAL_INDIRECT(316,12076
#define VARATT_IS_EXTERNAL_EXPANDED_RO(318,12189
#define VARATT_IS_EXTERNAL_EXPANDED_RW(320,12308
#define VARATT_IS_EXTERNAL_EXPANDED(322,12427
#define VARATT_IS_EXTERNAL_NON_EXPANDED(324,12541
#define VARATT_IS_SHORT(326,12660
#define VARATT_IS_EXTENDED(327,12710
#define SET_VARSIZE(329,12769
#define SET_VARSIZE_SHORT(330,12827
#define SET_VARSIZE_COMPRESSED(331,12890
#define SET_VARTAG_EXTERNAL(333,12959
#define VARSIZE_ANY(335,13025
#define VARSIZE_ANY_EXHDR(341,13214
#define VARDATA_ANY(348,13542
typedef uintptr_t Datum;367,14147
typedef struct NullableDatum375,14443
#define FIELDNO_NULLABLE_DATUM_DATUM 377,14474
	Datum		value;378,14513
#define FIELDNO_NULLABLE_DATUM_ISNULL 379,14528
	bool		isnull;380,14568
} NullableDatum;382,14653
#define SIZEOF_DATUM 384,14671
#define DatumGetBool(393,14824
#define BoolGetDatum(402,14996
#define DatumGetChar(409,15109
#define CharGetDatum(416,15221
#define Int8GetDatum(423,15339
#define DatumGetUInt8(430,15456
#define UInt8GetDatum(437,15585
#define DatumGetInt16(444,15695
#define Int16GetDatum(451,15815
#define DatumGetUInt16(458,15935
#define UInt16GetDatum(465,16067
#define DatumGetInt32(472,16178
#define Int32GetDatum(479,16298
#define DatumGetUInt32(486,16418
#define UInt32GetDatum(493,16550
#define DatumGetObjectId(500,16667
#define ObjectIdGetDatum(507,16795
#define DatumGetTransactionId(514,16924
#define TransactionIdGetDatum(521,17076
#define MultiXactIdGetDatum(528,17216
#define DatumGetCommandId(535,17340
#define CommandIdGetDatum(542,17476
#define DatumGetPointer(549,17585
#define PointerGetDatum(556,17704
#define DatumGetCString(566,17972
#define CStringGetDatum(578,18373
#define DatumGetName(585,18479
#define NameGetDatum(595,18706
#define DatumGetInt64(605,18933
#define DatumGetInt64(607,18978
#define Int64GetDatum(619,19249
#define DatumGetUInt64(632,19520
#define DatumGetUInt64(634,19567
#define UInt64GetDatum(646,19850
#define UInt64GetDatum(648,19896
DatumGetFloat4(664,20324
		int32		value;668,20360
		float4		retval;669,20376
Float4GetDatum(681,20585
		float4		value;685,20622
		int32		retval;686,20639
DatumGetFloat8(702,20934
		int64		value;706,20970
		float8		retval;707,20986
#define DatumGetFloat8(714,21086
Float8GetDatum(727,21396
		float8		value;731,21433
		int64		retval;732,21450
#define Int64GetDatumFast(757,22136
#define Float8GetDatumFast(758,22183
#define Int64GetDatumFast(760,22237
#define Float8GetDatumFast(761,22289

/home/seinoyu/pgsql/master/postgresql/src/include/lib/stringinfo.h,324
#define STRINGINFO_H19,730
typedef struct StringInfoData36,1588
	char	   *data;data38,1620
	int			len;39,1636
	int			maxlen;40,1648
	int			cursor;41,1663
} StringInfoData;42,1678
typedef StringInfoData *StringInfo;StringInfo44,1697
extern void appendStringInfo(96,3412
#define appendStringInfoCharMacro(128,4696

/home/seinoyu/pgsql/master/postgresql/src/include/lib/simplehash.h,4034
#define SH_MAKE_PREFIX(63,3111
#define SH_MAKE_NAME(64,3152
#define SH_MAKE_NAME_(65,3225
#define SH_TYPE 70,3316
#define SH_STATUS 71,3351
#define SH_STATUS_EMPTY 72,3390
#define SH_STATUS_IN_USE 73,3437
#define SH_ITERATOR 74,3486
#define SH_CREATE 77,3558
#define SH_DESTROY 78,3597
#define SH_RESET 79,3638
#define SH_INSERT 80,3675
#define SH_INSERT_HASH 81,3714
#define SH_DELETE 82,3763
#define SH_LOOKUP 83,3802
#define SH_LOOKUP_HASH 84,3841
#define SH_GROW 85,3890
#define SH_START_ITERATE 86,3925
#define SH_START_ITERATE_AT 87,3978
#define SH_ITERATE 88,4037
#define SH_ALLOCATE 89,4078
#define SH_FREE 90,4121
#define SH_STAT 91,4156
#define SH_COMPUTE_PARAMETERS 94,4259
#define SH_NEXT 95,4322
#define SH_PREV 96,4357
#define SH_DISTANCE_FROM_OPTIMAL 97,4392
#define SH_INITIAL_BUCKET 98,4448
#define SH_ENTRY_HASH 99,4503
#define SH_INSERT_HASH_INTERNAL 100,4550
#define SH_LOOKUP_HASH_INTERNAL 101,4617
typedef struct SH_TYPE107,4795
	uint64		size;114,4989
	uint32		members;117,5050
	uint32		sizemask;120,5129
	uint32		grow_threshold;123,5195
	SH_ELEMENT_TYPE *data;data126,5241
	MemoryContext ctx;130,5336
	void	   *private_data;private_data134,5411
}			SH_TYPE;135,5435
typedef enum SH_STATUS137,5449
	SH_STATUS_EMPTY 139,5474
	SH_STATUS_IN_USE 140,5499
} SH_STATUS;141,5524
typedef struct SH_ITERATOR143,5538
	uint32		cur;145,5567
	uint32		end;146,5605
	bool		done;147,5619
}			SH_ITERATOR;148,5660
#define SH_MAX_SIZE 183,6957
#define SH_FILLFACTOR 187,7088
#define SH_MAX_FILLFACTOR 190,7181
#define SH_GROW_MAX_DIB 193,7292
#define SH_GROW_MAX_MOVE 197,7407
#define SH_GROW_MIN_FILLFACTOR 201,7526
#define SH_COMPARE_KEYS(205,7590
#define SH_COMPARE_KEYS(207,7703
#define SIMPLEHASH_H218,8126
#define sh_error(221,8164
#define sh_log(222,8212
#define sh_error(224,8263
#define sh_log(225,8310
SH_COMPUTE_PARAMETERS(235,8490
SH_INITIAL_BUCKET(273,9438
SH_NEXT(280,9602
SH_PREV(291,9835
SH_DISTANCE_FROM_OPTIMAL(302,10070
SH_ENTRY_HASH(311,10263
SH_ALLOCATE(328,10685
SH_FREE(340,10951
SH_CREATE(358,11550
SH_DESTROY(387,12237
SH_RESET(395,12377
SH_GROW(409,12750
SH_INSERT_HASH_INTERNAL(519,15586
SH_INSERT(690,20160
SH_INSERT_HASH(703,20537
SH_LOOKUP_HASH_INTERNAL(713,20845
SH_LOOKUP(747,21666
SH_LOOKUP_HASH(760,21939
SH_DELETE(770,22156
SH_START_ITERATE(841,23668
SH_START_ITERATE_AT(881,24687
SH_ITERATE(903,25504
SH_STAT(930,26017
#undef SH_PREFIX1002,27723
#undef SH_KEY_TYPE1003,27740
#undef SH_KEY1004,27759
#undef SH_ELEMENT_TYPE1005,27773
#undef SH_HASH_KEY1006,27796
#undef SH_SCOPE1007,27815
#undef SH_DECLARE1008,27831
#undef SH_DEFINE1009,27849
#undef SH_GET_HASH1010,27866
#undef SH_STORE_HASH1011,27885
#undef SH_USE_NONDEFAULT_ALLOCATOR1012,27906
#undef SH_EQUAL1013,27941
#undef SH_MAKE_PREFIX1016,27997
#undef SH_MAKE_NAME1017,28019
#undef SH_MAKE_NAME_1018,28039
#undef SH_FILLFACTOR1019,28060
#undef SH_MAX_FILLFACTOR1020,28081
#undef SH_GROW_MAX_DIB1021,28106
#undef SH_GROW_MAX_MOVE1022,28129
#undef SH_GROW_MIN_FILLFACTOR1023,28153
#undef SH_MAX_SIZE1024,28183
#undef SH_TYPE1027,28215
#undef SH_STATUS1028,28230
#undef SH_STATUS_EMPTY1029,28247
#undef SH_STATUS_IN_USE1030,28270
#undef SH_ITERATOR1031,28294
#undef SH_CREATE1034,28344
#undef SH_DESTROY1035,28361
#undef SH_RESET1036,28379
#undef SH_INSERT1037,28395
#undef SH_INSERT_HASH1038,28412
#undef SH_DELETE1039,28434
#undef SH_LOOKUP1040,28451
#undef SH_LOOKUP_HASH1041,28468
#undef SH_GROW1042,28490
#undef SH_START_ITERATE1043,28505
#undef SH_START_ITERATE_AT1044,28529
#undef SH_ITERATE1045,28556
#undef SH_ALLOCATE1046,28574
#undef SH_FREE1047,28593
#undef SH_STAT1048,28608
#undef SH_COMPUTE_PARAMETERS1051,28654
#undef SH_COMPARE_KEYS1052,28683
#undef SH_INITIAL_BUCKET1053,28706
#undef SH_NEXT1054,28731
#undef SH_PREV1055,28746
#undef SH_DISTANCE_FROM_OPTIMAL1056,28761
#undef SH_ENTRY_HASH1057,28793
#undef SH_INSERT_HASH_INTERNAL1058,28814
#undef SH_LOOKUP_HASH_INTERNAL1059,28845

/home/seinoyu/pgsql/master/postgresql/src/include/lib/rbtree.h,788
#define RBTREE_H14,376
typedef struct RBTNode23,733
	char color;25,758
	struct RBTNode *left;left26,816
	struct RBTNode *right;right27,876
	struct RBTNode *parent;parent28,938
} RBTNode;29,1008
typedef struct RBTree RBTree;32,1066
typedef enum RBTOrderControl35,1138
	LeftRightWalk,37,1169
	RightLeftWalk	38,1233
} RBTOrderControl;39,1292
typedef struct RBTreeIterator RBTreeIterator;46,1495
struct RBTreeIterator48,1542
	RBTree	   *rbt;rbt50,1566
	RBTNode    *(*iterate)iterate51,1583
	RBTNode    *last_visited;last_visited52,1631
	bool		is_over;53,1658
typedef int (*rbt_comparator)rbt_comparator57,1727
typedef void (*rbt_combiner)rbt_combiner58,1806
typedef RBTNode *(*rbt_allocfunc)rbt_allocfunc59,1891
typedef void (*rbt_freefunc)rbt_freefunc60,1938

/home/seinoyu/pgsql/master/postgresql/src/include/lib/qunique.h,62
#define QUNIQUE_H13,349
qunique(21,593
qunique_arg(46,1148

/home/seinoyu/pgsql/master/postgresql/src/include/lib/bipartite_match.h,359
#define BIPARTITE_MATCH_H9,161
typedef struct BipartiteMatchState27,1097
	int			u_size;30,1149
	int			v_size;31,1182
	short	  **adjacency;adjacency32,1215
	int			matching;34,1296
	short	   *pair_uv;pair_uv35,1348
	short	   *pair_vu;pair_vu36,1391
	short	   *distance;distance38,1479
	short	   *queue;queue39,1519
} BipartiteMatchState;40,1578

/home/seinoyu/pgsql/master/postgresql/src/include/lib/dshash.h,607
#define DSHASH_H15,457
typedef struct dshash_table dshash_table;21,569
typedef dsa_pointer dshash_table_handle;24,688
typedef uint32 dshash_hash;27,762
typedef int (*dshash_compare_function)dshash_compare_function30,833
typedef dshash_hash (*dshash_hash_function)dshash_hash_function34,997
typedef struct dshash_parameters49,1721
	size_t		key_size;51,1756
	size_t		entry_size;52,1823
	dshash_compare_function compare_function;53,1871
	dshash_hash_function hash_function;54,1937
	int			tranche_id;55,1994
} dshash_parameters;56,2052
typedef struct dshash_table_item dshash_table_item;60,2169

/home/seinoyu/pgsql/master/postgresql/src/include/lib/integerset.h,73
#define INTEGERSET_H10,229
typedef struct IntegerSet IntegerSet;12,251

/home/seinoyu/pgsql/master/postgresql/src/include/lib/binaryheap.h,374
#define BINARYHEAP_H12,198
typedef int (*binaryheap_comparator)binaryheap_comparator18,368
typedef struct binaryheap30,804
	int			bh_size;32,832
	int			bh_space;33,848
	bool		bh_has_heap_property;34,865
	binaryheap_comparator bh_compare;35,922
	void	   *bh_arg;bh_arg36,957
	Datum		bh_nodes[bh_nodes37,975
} binaryheap;38,1016
#define binaryheap_empty(52,1585

/home/seinoyu/pgsql/master/postgresql/src/include/lib/bloomfilter.h,78
#define BLOOMFILTER_H14,369
typedef struct bloom_filter bloom_filter;16,392

/home/seinoyu/pgsql/master/postgresql/src/include/lib/hyperloglog.h,246
#define HYPERLOGLOG_H37,1494
typedef struct hyperLogLogState53,2032
	uint8		registerWidth;55,2066
	Size		nRegisters;56,2089
	double		alphaMM;57,2108
	uint8	   *hashesArr;hashesArr58,2126
	Size		arrSize;59,2148
} hyperLogLogState;60,2164

/home/seinoyu/pgsql/master/postgresql/src/include/lib/knapsack.h,25
#define KNAPSACK_H9,140

/home/seinoyu/pgsql/master/postgresql/src/include/lib/ilist.h,2246
#define ILIST_H107,4100
typedef struct dlist_node dlist_node;120,4387
struct dlist_node121,4425
	dlist_node *prev;prev123,4445
	dlist_node *next;next124,4464
typedef struct dlist_head135,4790
	dlist_node	head;144,5118
} dlist_head;145,5136
typedef struct dlist_iter159,5529
	dlist_node *cur;cur161,5557
	dlist_node *end;end162,5599
} dlist_iter;163,5652
typedef struct dlist_mutable_iter178,6221
	dlist_node *cur;cur180,6257
	dlist_node *next;next181,6299
	dlist_node *end;end182,6353
} dlist_mutable_iter;183,6406
typedef struct slist_node slist_node;190,6543
struct slist_node191,6581
	slist_node *next;next193,6601
typedef struct slist_head203,6871
	slist_node	head;205,6899
} slist_head;206,6917
typedef struct slist_iter224,7610
	slist_node *cur;cur226,7638
} slist_iter;227,7656
typedef struct slist_mutable_iter239,8092
	slist_node *cur;cur241,8128
	slist_node *next;next242,8170
	slist_node *prev;prev243,8224
} slist_mutable_iter;244,8276
#define DLIST_STATIC_INIT(248,8326
#define SLIST_STATIC_INIT(249,8389
#define dlist_check(267,9003
#define slist_check(268,9045
dlist_init(278,9281
dlist_is_empty(289,9496
dlist_push_head(300,9697
dlist_push_tail(317,10040
dlist_insert_after(334,10392
dlist_insert_before(346,10625
dlist_delete(358,10864
dlist_pop_head_node(368,11067
dlist_move_head(385,11413
dlist_has_next(402,11753
dlist_has_prev(412,11969
dlist_next_node(421,12151
dlist_prev_node(431,12356
dlist_head_element_off(439,12563
dlist_head_node(449,12785
dlist_tail_element_off(456,12973
dlist_tail_node(466,13194
#define dlist_container(477,13475
#define dlist_head_element(487,13820
#define dlist_tail_element(496,14121
#define dlist_foreach(507,14529
#define dlist_foreach_modify(524,15218
#define dlist_reverse_foreach(538,15775
slist_init(554,16298
slist_is_empty(563,16405
slist_push_head(574,16570
slist_insert_after(586,16780
slist_pop_head_node(596,16992
slist_has_next(611,17249
slist_next_node(622,17445
slist_head_element_off(630,17652
slist_head_node(640,17874
slist_delete_current(652,18154
#define slist_container(674,18813
#define slist_head_element(684,19158
#define slist_foreach(700,19883
#define slist_foreach_modify(716,20522

/home/seinoyu/pgsql/master/postgresql/src/include/lib/pairingheap.h,724
#define PAIRINGHEAP_H12,195
typedef struct pairingheap_node30,858
	struct pairingheap_node *first_child;first_child32,892
	struct pairingheap_node *next_sibling;next_sibling33,931
	struct pairingheap_node *prev_or_parent;prev_or_parent34,971
} pairingheap_node;35,1013
#define pairingheap_container(43,1232
#define pairingheap_const_container(51,1566
typedef int (*pairingheap_comparator)pairingheap_comparator60,1993
typedef struct pairingheap71,2328
	pairingheap_comparator ph_compare;73,2357
	void	   *ph_arg;ph_arg74,2419
	pairingheap_node *ph_root;ph_root75,2475
} pairingheap;76,2534
#define pairingheap_reset(93,3199
#define pairingheap_is_empty(96,3278
#define pairingheap_is_singular(99,3381

/home/seinoyu/pgsql/master/postgresql/src/include/tsearch/ts_type.h,2415
#define _PG_TSTYPE_H_13,352
				haspos:haspos44,1226
				len:len45,1240
				pos:pos46,1268
} WordEntry;47,1296
#define MAXSTRLEN 49,1310
#define MAXSTRPOS 50,1343
typedef uint16 WordEntryPos;63,1529
	uint16		npos;67,1576
	WordEntryPos pos[pos68,1591
} WordEntryPosVector;69,1633
	uint16		npos;74,1719
	WordEntryPos pos[pos75,1734
} WordEntryPosVector1;76,1756
#define WEP_GETWEIGHT(79,1781
#define WEP_GETPOS(80,1820
#define WEP_SETWEIGHT(82,1861
#define WEP_SETPOS(83,1931
#define MAXENTRYPOS 85,2003
#define MAXNUMPOS	86,2031
#define LIMITPOS(87,2055
	int32		vl_len_;92,2199
	int32		size;93,2263
	WordEntry	entries[entries94,2277
} TSVectorData;96,2362
typedef TSVectorData *TSVector;TSVector98,2379
#define DATAHDRSIZE 100,2412
#define CALCDATASIZE(101,2466
#define ARRPTR(104,2620
#define STRPTR(107,2710
#define _POSVECPTR(109,2767
#define POSDATALEN(110,2862
#define POSDATAPTR(111,2936
#define DatumGetTSVector(117,3017
#define DatumGetTSVectorCopy(118,3080
#define TSVectorGetDatum(119,3151
#define PG_GETARG_TSVECTOR(120,3200
#define PG_GETARG_TSVECTOR_COPY(121,3268
#define PG_RETURN_TSVECTOR(122,3344
typedef int8 QueryItemType;131,3429
#define QI_VAL 134,3496
#define QI_OPR 135,3513
#define QI_VALSTOP 136,3530
	QueryItemType type;145,3774
	uint8		weight;146,3846
	bool		prefix;150,4059
	int32		valcrc;151,4111
				length:length158,4395
				distance:distance159,4410
} QueryOperand;160,4427
#define OP_NOT	166,4496
#define OP_AND	167,4515
#define OP_OR	168,4534
#define OP_PHRASE	169,4552
#define OP_COUNT	170,4612
#define OP_PRIORITY(175,4723
#define QO_PRIORITY(177,4812
	QueryItemType type;181,4896
	int8		oper;182,4917
	int16		distance;183,4948
	uint32		left;184,5009
} QueryOperator;187,5145
	QueryItemType type;195,5314
	QueryOperator qoperator;196,5335
	QueryOperand qoperand;197,5361
} QueryItem;198,5385
	int32		vl_len_;207,5510
	int32		size;208,5574
	char		data[data209,5617
} TSQueryData;210,5676
typedef TSQueryData *TSQuery;TSQuery212,5692
#define HDRSIZETQ	214,5723
#define COMPUTESIZE(219,5916
#define TSQUERY_TOO_BIG(220,6016
#define GETQUERY(224,6199
#define GETOPERAND(227,6326
#define DatumGetTSQuery(235,6570
#define DatumGetTSQueryCopy(236,6630
#define TSQueryGetDatum(237,6699
#define PG_GETARG_TSQUERY(238,6747
#define PG_GETARG_TSQUERY_COPY(239,6813
#define PG_RETURN_TSQUERY(240,6887

/home/seinoyu/pgsql/master/postgresql/src/include/tsearch/ts_locale.h,289
#define __TSLOCALE_H__13,348
	FILE	   *fp;fp33,761
	const char *filename;filename34,775
	int			lineno;35,798
	char	   *curline;curline36,813
	ErrorContextCallback cb;37,832
} tsearch_readline_state;38,858
#define TOUCHAR(40,885
#define t_iseq(43,1008
#define COPYCHAR(45,1066

/home/seinoyu/pgsql/master/postgresql/src/include/tsearch/ts_utils.h,1879
#define _PG_TS_UTILS_H_13,338
typedef struct TSVectorParseStateData *TSVectorParseState;TSVectorParseState26,616
#define P_TSV_OPR_IS_DELIM	28,676
#define P_TSV_IS_TSQUERY	29,712
#define P_TSV_IS_WEB	30,746
#define ISOPERATOR(41,1180
typedef struct TSQueryParserStateData *TSQueryParserState;TSQueryParserState53,1474
typedef void (*PushFunction)PushFunction55,1534
#define P_TSQ_PLAIN	61,1758
#define P_TSQ_WEB	62,1788
	uint16		len;80,2284
	uint16		nvariant;81,2298
		uint16		pos;84,2327
		uint16	   *apos;apos91,2507
	}			pos;92,2526
	uint16		flags;93,2536
	char	   *word;word94,2587
	uint32		alen;95,2603
} ParsedWord;96,2618
	ParsedWord *words;words100,2650
	int32		lenwords;101,2670
	int32		curwords;102,2688
	int32		pos;103,2706
} ParsedText;104,2719
	TS_NO,130,3505
	TS_YES,131,3544
	TS_MAYBE	132,3586
} TSTernaryValue;133,3646
typedef struct ExecPhraseData157,4892
	int			npos;159,4924
	bool		allocated;160,4974
	bool		negate;161,5028
	WordEntryPos *pos;pos162,5092
	int			width;163,5160
} ExecPhraseData;164,5216
typedef TSTernaryValue (*TSExecuteCallback)TSExecuteCallback178,5772
#define TS_EXEC_EMPTY	184,5918
#define TS_EXEC_SKIP_NOT	191,6216
#define TS_EXEC_PHRASE_NO_POS	198,6538
#define TSearchStrategyNumber	215,7092
#define TSearchWithClassStrategyNumber	216,7126
typedef struct QTNode224,7308
	QueryItem  *valnode;valnode226,7332
	uint32		flags;227,7354
	int32		nchild;228,7370
	char	   *word;word229,7386
	uint32		sign;230,7402
	struct QTNode **child;child231,7417
} QTNode;232,7441
#define QTN_NEEDFREE	235,7479
#define QTN_NOCHANGE	236,7505
#define QTN_WORDFREE	237,7531
typedef uint64 TSQuerySign;239,7558
#define TSQS_SIGLEN 241,7587
#define TSQuerySignGetDatum(243,7645
#define DatumGetTSQuerySign(244,7704
#define PG_RETURN_TSQUERYSIGN(245,7769
#define PG_GETARG_TSQUERYSIGN(246,7832

/home/seinoyu/pgsql/master/postgresql/src/include/tsearch/ts_public.h,1176
#define _PG_TS_PUBLIC_H_14,396
	int			lexid;27,556
	char	   *alias;alias28,570
	char	   *descr;descr29,587
} LexDescr;30,604
	uint32		selected:selected37,676
				in:in38,697
				replace:replace39,707
				repeated:repeated40,722
				skip:skip41,738
				unused:unused42,750
				type:type43,764
				len:len44,776
	WordEntryPos pos;45,788
	char	   *word;word46,807
	QueryOperand *item;item47,823
} HeadlineWordEntry;48,844
	HeadlineWordEntry *words;words52,883
	int32		lenwords;53,910
	int32		curwords;54,928
	int32		vectorpos;55,946
	char	   *startsel;startsel56,996
	char	   *stopsel;stopsel57,1016
	char	   *fragdelim;fragdelim58,1035
	int16		startsellen;59,1056
	int16		stopsellen;60,1077
	int16		fragdelimlen;61,1097
} HeadlineParsedText;62,1119
	int			len;75,1359
	char	  **stop;stop76,1371
} StopList;77,1387
	uint16		nvariant;107,2224
	uint16		flags;109,2244
	char	   *lexeme;lexeme111,2289
} TSLexeme;112,2324
#define TSL_ADDPOS	115,2387
#define TSL_PREFIX	116,2412
#define TSL_FILTER	117,2437
	bool		isend;125,2608
	bool		getnext;127,2693
	void	   *private_state;private_state128,2744
} DictSubState;130,2841

/home/seinoyu/pgsql/master/postgresql/src/include/tsearch/ts_cache.h,966
#define TS_CACHE_H14,416
typedef struct TSAnyCacheEntry23,562
	Oid			objId;25,595
	bool		isvalid;26,609
} TSAnyCacheEntry;27,625
typedef struct TSParserCacheEntry30,646
	Oid			prsId;33,736
	bool		isvalid;34,776
	Oid			startOid;36,793
	Oid			tokenOid;37,810
	Oid			endOid;38,827
	Oid			headlineOid;39,842
	Oid			lextypeOid;40,862
	FmgrInfo	prsstart;45,948
	FmgrInfo	prstoken;46,968
	FmgrInfo	prsend;47,988
	FmgrInfo	prsheadline;48,1006
} TSParserCacheEntry;49,1029
typedef struct TSDictionaryCacheEntry51,1052
	Oid			dictId;54,1147
	bool		isvalid;55,1162
	Oid			lexizeOid;58,1210
	FmgrInfo	lexize;59,1228
	MemoryContext dictCtx;61,1247
	void	   *dictData;dictData62,1315
} TSDictionaryCacheEntry;63,1335
	int			len;67,1379
	Oid		   *dictIds;dictIds68,1391
} ListDictionary;69,1410
	Oid			cfgId;74,1500
	bool		isvalid;75,1514
	Oid			prsId;77,1531
	int			lenmap;79,1546
	ListDictionary *map;map80,1561
} TSConfigCacheEntry;81,1583

/home/seinoyu/pgsql/master/postgresql/src/include/tsearch/dicts/regis.h,450
#define __REGIS_H__15,367
typedef struct RegisNode17,388
				type:type20,423
				len:len21,435
				unused:unused22,447
	struct RegisNode *next;next23,462
	unsigned char data[data24,487
} RegisNode;25,531
#define  RNHDRSZ	27,545
#define RSF_ONEOF	29,590
#define RSF_NONEOF	30,610
typedef struct Regis32,632
	RegisNode  *node;node34,655
				issuffix:issuffix36,682
				nchar:nchar37,698
				unused:unused38,712
} Regis;39,727

/home/seinoyu/pgsql/master/postgresql/src/include/tsearch/dicts/spell.h,2783
#define __SPELL_H__15,351
	uint32		val:val29,594
				isword:isword30,610
				compoundflag:compoundflag32,666
				affix:affix34,738
	struct SPNode *node;node35,752
} SPNodeData;36,774
#define FF_COMPOUNDONLY	42,899
#define FF_COMPOUNDBEGIN	43,929
#define FF_COMPOUNDMIDDLE	44,959
#define FF_COMPOUNDLAST	45,990
#define FF_COMPOUNDFLAG	46,1020
#define FF_COMPOUNDFLAGMASK	48,1113
typedef struct SPNode50,1148
	uint32		length;52,1172
	SPNodeData	data[data53,1189
} SPNode;54,1230
#define SPNHDRSZ	56,1241
typedef struct spell_struct61,1330
		char	   *flag;flag69,1487
			int			affix;74,1603
			int			len;76,1647
		}			d;77,1661
	}			p;78,1670
	char		word[word79,1678
} SPELL;80,1714
#define SPELLHDRSZ	82,1724
typedef struct aff_struct87,1816
	char	   *flag;flag89,1844
	uint32		type:type91,1890
				flagflags:flagflags92,1907
				issimple:issimple93,1924
				isregis:isregis94,1940
				replen:replen95,1955
	char	   *find;find96,1970
	char	   *repl;repl97,1986
		regex_t		regex;100,2012
		Regis		regis;101,2030
	}			reg;102,2046
} AFFIX;103,2056
#define FF_COMPOUNDPERMITFLAG	108,2109
#define FF_COMPOUNDFORBIDFLAG	109,2144
#define FF_CROSSPRODUCT	110,2179
#define FF_SUFFIX	116,2338
#define FF_PREFIX	117,2361
	uint32		val:val127,2527
				naff:naff128,2543
	AFFIX	  **aff;aff129,2556
	struct AffixNode *node;node130,2572
} AffixNodeData;131,2597
typedef struct AffixNode133,2615
	uint32		isvoid:isvoid135,2642
				length:length136,2661
	AffixNodeData data[data137,2676
} AffixNode;138,2720
#define ANHRDSZ	140,2734
	char	   *affix;affix144,2800
	int			len;145,2817
	bool		issuffix;146,2829
} CMPDAffix;147,2846
	FM_CHAR,154,2939
	FM_LONG,155,2987
	FM_NUM	156,3022
} FlagMode;157,3066
typedef struct CompoundAffixFlag163,3220
		char	   *s;s168,3317
		uint32		i;170,3371
	}			flag;171,3384
	FlagMode	flagMode;173,3457
	uint32		value;174,3477
} CompoundAffixFlag;175,3493
#define FLAGNUM_MAXSIZE	177,3515
	int			maffixes;181,3568
	int			naffixes;182,3585
	AFFIX	   *Affix;Affix183,3602
	AffixNode  *Suffix;Suffix185,3621
	AffixNode  *Prefix;Prefix186,3642
	SPNode	   *Dictionary;Dictionary188,3664
	char	  **AffixData;AffixData190,3720
	int			lenAffixData;191,3741
	int			nAffixData;192,3762
	bool		useFlagAliases;193,3781
	CMPDAffix  *CompoundAffix;CompoundAffix195,3805
	bool		usecompound;197,3834
	FlagMode	flagMode;198,3854
	CompoundAffixFlag *CompoundAffixFlags;CompoundAffixFlags205,3998
	int			nCompoundAffixFlag;207,4091
	int			mCompoundAffixFlag;209,4170
	MemoryContext buildCxt;215,4340
	SPELL	  **Spell;Spell218,4456
	int			nspell;219,4474
	int			mspell;220,4536
	char	   *firstfree;firstfree223,4665
	size_t		avail;224,4732
} IspellDict;225,4790

/home/seinoyu/pgsql/master/postgresql/src/include/port/atomics.h,1189
#define ATOMICS_H39,1712
#define INSIDE_ATOMICS_H45,1813
#define pg_compiler_barrier(133,5237
#define pg_memory_barrier(145,5747
#define pg_read_barrier(158,6401
#define pg_write_barrier(159,6450
#define pg_spin_delay(164,6562
pg_atomic_init_flag(172,6711
pg_atomic_test_set_flag(185,6984
pg_atomic_unlocked_test_flag(198,7270
pg_atomic_clear_flag(209,7511
pg_atomic_init_u32(223,7757
pg_atomic_read_u32(241,8250
pg_atomic_write_u32(258,8730
pg_atomic_unlocked_write_u32(277,9381
pg_atomic_exchange_u32(292,9714
pg_atomic_compare_exchange_u32(311,10238
pg_atomic_fetch_add_u32(328,10667
pg_atomic_fetch_sub_u32(343,11073
pg_atomic_fetch_and_u32(358,11443
pg_atomic_fetch_or_u32(372,11785
pg_atomic_add_fetch_u32(386,12114
pg_atomic_sub_fetch_u32(401,12519
pg_atomic_init_u64(415,12903
pg_atomic_read_u64(429,13281
pg_atomic_write_u64(438,13472
pg_atomic_exchange_u64(447,13677
pg_atomic_compare_exchange_u64(456,13899
pg_atomic_fetch_add_u64(467,14215
pg_atomic_fetch_sub_u64(476,14436
pg_atomic_fetch_and_u64(486,14688
pg_atomic_fetch_or_u64(495,14910
pg_atomic_add_fetch_u64(504,15128
pg_atomic_sub_fetch_u64(513,15349
#undef INSIDE_ATOMICS_H522,15580

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32_port.h,4869
#define PG_WIN32_PORT_H17,525
#define ENABLE_SSPI 23,679
#undef mkdir26,745
#undef ERROR28,759
#define _WINSOCK_DEPRECATED_NO_WARNINGS35,909
#define _WINSOCKAPI_43,1111
#undef small49,1205
#undef near53,1279
#define mkdir(57,1427
#define ftruncate(59,1456
#define fsync(62,1550
#define HAVE_FSYNC_WRITETHROUGH69,1771
#define FSYNC_WRITETHROUGH_IS_FSYNC70,1803
#define USES_WINSOCK72,1840
#undef HAVE_UNION_SEMUN77,1884
#define HAVE_UNION_SEMUN 78,1908
#define IPC_RMID 80,1936
#define IPC_CREAT 81,1957
#define IPC_EXCL 82,1979
#define IPC_PRIVATE 83,2001
#define IPC_NOWAIT	84,2028
#define IPC_STAT 85,2052
#define EACCESS 87,2075
#define EIDRM 89,2110
#define SETALL 92,2137
#define GETNCNT 93,2157
#define GETVAL 94,2179
#define SETVAL 95,2200
#define GETPID 96,2222
#define WIFEXITED(137,3986
#define WIFSIGNALED(138,4033
#define WEXITSTATUS(139,4072
#define WTERMSIG(140,4099
#define sigmask(142,4125
#undef SIG_DFL145,4202
#undef SIG_ERR146,4217
#undef SIG_IGN147,4232
#define SIG_DFL 148,4247
#define SIG_ERR 149,4278
#define SIG_IGN 150,4310
#define SIGHUP	153,4367
#define SIGQUIT	154,4387
#define SIGTRAP	155,4408
#define SIGABRT	156,4429
#define SIGKILL	157,4498
#define SIGPIPE	158,4519
#define SIGALRM	159,4541
#define SIGSTOP	160,4563
#define SIGTSTP	161,4585
#define SIGCONT	162,4607
#define SIGCHLD	163,4629
#define SIGWINCH	164,4651
#define SIGUSR1	165,4673
#define SIGUSR2	166,4695
struct timezone173,4847
	int			tz_minuteswest;175,4865
	int			tz_dsttime;176,4916
#define ITIMER_REAL 181,5038
struct itimerval182,5060
	struct timeval it_interval;184,5079
	struct timeval it_value;185,5108
#define pgoff_t 194,5336
#define fseeko(197,5377
#define ftello(198,5450
#define fseeko(201,5512
#define ftello(204,5606
#define symlink(221,6207
#define readlink(222,6269
typedef int uid_t;230,6452
typedef int gid_t;231,6471
typedef long key_t;233,6497
typedef int pid_t;236,6534
#define lstat(244,6675
#define stat(255,7043
#define S_IRUSR 260,7171
#define S_IWUSR 263,7219
#define S_IXUSR 266,7268
#define S_IRWXU 269,7316
#define S_IRGRP 272,7385
#define S_IWGRP 275,7426
#define S_IXGRP 278,7467
#define S_IRWXG 281,7508
#define S_IROTH 284,7549
#define S_IWOTH 287,7590
#define S_IXOTH 290,7631
#define S_IRWXO 293,7672
#define S_ISDIR(296,7713
#define S_ISREG(299,7783
#define O_DSYNC 308,8057
#undef EAGAIN320,8560
#define EAGAIN 321,8574
#undef EINTR322,8604
#define EINTR 323,8617
#undef EMSGSIZE324,8640
#define EMSGSIZE 325,8656
#undef EAFNOSUPPORT326,8685
#define EAFNOSUPPORT 327,8705
#undef EWOULDBLOCK328,8742
#define EWOULDBLOCK 329,8761
#undef ECONNABORTED330,8796
#define ECONNABORTED 331,8816
#undef ECONNRESET332,8853
#define ECONNRESET 333,8871
#undef EINPROGRESS334,8904
#define EINPROGRESS 335,8923
#undef EISCONN336,8958
#define EISCONN 337,8973
#undef ENOBUFS338,9000
#define ENOBUFS 339,9015
#undef EPROTONOSUPPORT340,9042
#define EPROTONOSUPPORT 341,9065
#undef ECONNREFUSED342,9108
#define ECONNREFUSED 343,9128
#undef ENOTSOCK344,9165
#define ENOTSOCK 345,9181
#undef EOPNOTSUPP346,9210
#define EOPNOTSUPP 347,9228
#undef EADDRINUSE348,9261
#define EADDRINUSE 349,9279
#undef EADDRNOTAVAIL350,9312
#define EADDRNOTAVAIL 351,9333
#undef EHOSTUNREACH352,9372
#define EHOSTUNREACH 353,9392
#undef ENOTCONN354,9429
#define ENOTCONN 355,9445
#define locale_t 363,9632
#define tolower_l 364,9659
#define toupper_l 365,9688
#define towlower_l 366,9717
#define towupper_l 367,9748
#define isdigit_l 368,9779
#define iswdigit_l 369,9808
#define isalpha_l 370,9839
#define iswalpha_l 371,9868
#define isalnum_l 372,9899
#define iswalnum_l 373,9928
#define isupper_l 374,9959
#define iswupper_l 375,9988
#define islower_l 376,10019
#define iswlower_l 377,10048
#define isgraph_l 378,10079
#define iswgraph_l 379,10108
#define isprint_l 380,10139
#define iswprint_l 381,10168
#define ispunct_l 382,10199
#define iswpunct_l 383,10228
#define isspace_l 384,10259
#define iswspace_l 385,10288
#define strcoll_l 386,10319
#define strxfrm_l 387,10348
#define wcscoll_l 388,10377
#define wcstombs_l 389,10406
#define mbstowcs_l 390,10437
#undef setlocale399,10744
#define setlocale(408,10958
#define UNBLOCKED_SIGNAL_QUEUE(417,11211
#define PG_SIGNAL_COUNT 418,11280
#define kill(426,11504
#define socket(431,11634
#define bind(432,11704
#define listen(433,11766
#define accept(434,11820
#define connect(435,11886
#define select(436,11954
#define recv(437,12026
#define send(438,12092
#define putenv(474,13423
#define unsetenv(475,13459
typedef long ssize_t;481,13603
typedef __int64 ssize_t;483,13631
typedef unsigned short mode_t;486,13664
#define F_OK 488,13696
#define W_OK 489,13711
#define R_OK 490,13726
#define DLSUFFIX 493,13783
#define HAVE_BUGGY_STRTOF 513,14629

/home/seinoyu/pgsql/master/postgresql/src/include/port/solaris.h,141
#define __i386__9,276
#define __amd64__13,345
#define __x86_64__17,417
#define __sparc__21,488
#define HAVE_BUGGY_SOLARIS_STRTOD38,1007

/home/seinoyu/pgsql/master/postgresql/src/include/port/atomics/generic-acc.h,579
#define pg_compiler_barrier_impl(28,1014
#define PG_HAVE_ATOMIC_U32_SUPPORT34,1137
typedef struct pg_atomic_uint3235,1172
	volatile uint32 value;37,1206
} pg_atomic_uint32;38,1230
#define PG_HAVE_ATOMIC_U64_SUPPORT40,1251
typedef struct pg_atomic_uint6441,1286
	volatile uint64 value;49,1551
} pg_atomic_uint64;50,1575
#define MINOR_FENCE 53,1597
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U3256,1713
pg_atomic_compare_exchange_u32_impl(58,1776
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U6484,2359
pg_atomic_compare_exchange_u64_impl(86,2422
#undef MINOR_FENCE104,2850

/home/seinoyu/pgsql/master/postgresql/src/include/port/atomics/generic-gcc.h,2090
#define pg_compiler_barrier_impl(30,988
#		define pg_memory_barrier_impl(39,1367
#		define pg_memory_barrier_impl(41,1507
#		define pg_read_barrier_impl(47,1748
#		define pg_write_barrier_impl(52,1961
#define PG_HAVE_ATOMIC_FLAG_SUPPORT62,2238
typedef struct pg_atomic_flag63,2274
	volatile int value;71,2564
	volatile char value;73,2591
} pg_atomic_flag;75,2620
#define PG_HAVE_ATOMIC_U32_SUPPORT83,2868
typedef struct pg_atomic_uint3284,2903
	volatile uint32 value;86,2937
} pg_atomic_uint32;87,2961
#define PG_HAVE_ATOMIC_U64_SUPPORT96,3287
typedef struct pg_atomic_uint6498,3323
	volatile uint64 value pg_attribute_aligned(100,3357
} pg_atomic_uint64;101,3405
#define PG_HAVE_ATOMIC_TEST_SET_FLAG110,3661
pg_atomic_test_set_flag_impl(112,3717
#define PG_HAVE_ATOMIC_UNLOCKED_TEST_FLAG123,4023
pg_atomic_unlocked_test_flag_impl(125,4084
#define PG_HAVE_ATOMIC_CLEAR_FLAG132,4219
pg_atomic_clear_flag_impl(134,4272
#define PG_HAVE_ATOMIC_INIT_FLAG141,4408
pg_atomic_init_flag_impl(143,4460
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U32153,4743
pg_atomic_compare_exchange_u32_impl(155,4806
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U32165,5198
pg_atomic_compare_exchange_u32_impl(167,5261
#define PG_HAVE_ATOMIC_FETCH_ADD_U32182,5707
pg_atomic_fetch_add_u32_impl(184,5765
#define PG_HAVE_ATOMIC_FETCH_SUB_U32191,5979
pg_atomic_fetch_sub_u32_impl(193,6037
#define PG_HAVE_ATOMIC_FETCH_AND_U32200,6251
pg_atomic_fetch_and_u32_impl(202,6309
#define PG_HAVE_ATOMIC_FETCH_OR_U32209,6523
pg_atomic_fetch_or_u32_impl(211,6580
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U64221,6842
pg_atomic_compare_exchange_u64_impl(223,6905
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U64232,7237
pg_atomic_compare_exchange_u64_impl(234,7300
#define PG_HAVE_ATOMIC_FETCH_ADD_U64249,7746
pg_atomic_fetch_add_u64_impl(251,7804
#define PG_HAVE_ATOMIC_FETCH_SUB_U64258,8018
pg_atomic_fetch_sub_u64_impl(260,8076
#define PG_HAVE_ATOMIC_FETCH_AND_U64267,8290
pg_atomic_fetch_and_u64_impl(269,8348
#define PG_HAVE_ATOMIC_FETCH_OR_U64276,8562
pg_atomic_fetch_or_u64_impl(278,8619

/home/seinoyu/pgsql/master/postgresql/src/include/port/atomics/arch-hppa.h,39
#define pg_memory_barrier_impl(17,491

/home/seinoyu/pgsql/master/postgresql/src/include/port/atomics/fallback.h,1399
#define PG_HAVE_MEMORY_BARRIER_EMULATION32,1231
#define pg_memory_barrier_impl 35,1312
#define PG_HAVE_COMPILER_BARRIER_EMULATION48,1844
#define pg_compiler_barrier_impl 50,1933
#define PG_HAVE_ATOMIC_FLAG_SIMULATION67,2626
#define PG_HAVE_ATOMIC_FLAG_SUPPORT68,2665
typedef struct pg_atomic_flag70,2702
	int			sema[sema79,3056
	int			sema;81,3078
	volatile bool value;83,3098
} pg_atomic_flag;84,3120
#define PG_HAVE_ATOMIC_U32_SIMULATION90,3223
#define PG_HAVE_ATOMIC_U32_SUPPORT92,3262
typedef struct pg_atomic_uint3293,3297
	int			sema[sema97,3477
	int			sema;99,3499
	volatile uint32 value;101,3519
} pg_atomic_uint32;102,3543
#define PG_HAVE_ATOMIC_U64_SIMULATION108,3647
#define PG_HAVE_ATOMIC_U64_SUPPORT110,3686
typedef struct pg_atomic_uint64111,3721
	int			sema[sema115,3901
	int			sema;117,3923
	volatile uint64 value;119,3943
} pg_atomic_uint64;120,3967
#define PG_HAVE_ATOMIC_INIT_FLAG126,4068
#define PG_HAVE_ATOMIC_TEST_SET_FLAG129,4170
#define PG_HAVE_ATOMIC_CLEAR_FLAG132,4280
#define PG_HAVE_ATOMIC_UNLOCKED_TEST_FLAG135,4384
#define PG_HAVE_ATOMIC_INIT_U32142,4587
#define PG_HAVE_ATOMIC_WRITE_U32145,4702
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U32148,4818
#define PG_HAVE_ATOMIC_FETCH_ADD_U32152,4989
#define PG_HAVE_ATOMIC_INIT_U64160,5198
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U64163,5313
#define PG_HAVE_ATOMIC_FETCH_ADD_U64167,5484

/home/seinoyu/pgsql/master/postgresql/src/include/port/atomics/generic-sunpro.h,660
#define pg_compiler_barrier_impl(25,621
#	define pg_memory_barrier_impl(33,880
#	define pg_read_barrier_impl(36,974
#	define pg_write_barrier_impl(39,1066
#define PG_HAVE_ATOMIC_U32_SUPPORT49,1263
typedef struct pg_atomic_uint3250,1298
	volatile uint32 value;52,1332
} pg_atomic_uint32;53,1356
#define PG_HAVE_ATOMIC_U64_SUPPORT55,1377
typedef struct pg_atomic_uint6456,1412
	volatile uint64 value pg_attribute_aligned(64,1695
} pg_atomic_uint64;65,1743
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U3276,1878
pg_atomic_compare_exchange_u32_impl(78,1941
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U6490,2207
pg_atomic_compare_exchange_u64_impl(92,2270

/home/seinoyu/pgsql/master/postgresql/src/include/port/atomics/arch-ppc.h,836
#define pg_memory_barrier_impl(23,655
#define pg_read_barrier_impl(24,733
#define pg_write_barrier_impl(25,812
#define PG_HAVE_ATOMIC_U32_SUPPORT28,900
typedef struct pg_atomic_uint3229,935
	volatile uint32 value;31,969
} pg_atomic_uint32;32,993
#define PG_HAVE_ATOMIC_U64_SUPPORT36,1084
typedef struct pg_atomic_uint6437,1119
	volatile uint64 value pg_attribute_aligned(39,1153
} pg_atomic_uint64;40,1201
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U3286,2754
pg_atomic_compare_exchange_u32_impl(88,2817
#define PG_HAVE_ATOMIC_FETCH_ADD_U32136,4143
pg_atomic_fetch_add_u32_impl(138,4201
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U64174,5055
pg_atomic_compare_exchange_u64_impl(176,5118
#define PG_HAVE_ATOMIC_FETCH_ADD_U64220,6396
pg_atomic_fetch_add_u64_impl(222,6454
#define PG_HAVE_8BYTE_SINGLE_COPY_ATOMICITY260,7443

/home/seinoyu/pgsql/master/postgresql/src/include/port/atomics/arch-x86.h,1361
#define pg_memory_barrier_impl(36,1327
#define pg_memory_barrier_impl(39,1459
#define pg_read_barrier_impl(44,1633
#define pg_write_barrier_impl(45,1692
#define PG_HAVE_ATOMIC_FLAG_SUPPORT56,2049
typedef struct pg_atomic_flag57,2085
	volatile char value;59,2117
} pg_atomic_flag;60,2139
#define PG_HAVE_ATOMIC_U32_SUPPORT62,2158
typedef struct pg_atomic_uint3263,2193
	volatile uint32 value;65,2227
} pg_atomic_uint32;66,2251
#define PG_HAVE_ATOMIC_U64_SUPPORT73,2401
typedef struct pg_atomic_uint6474,2436
	volatile uint64 value;77,2531
} pg_atomic_uint64;78,2555
#define PG_HAVE_SPIN_DELAY110,3993
pg_spin_delay_impl(112,4043
#define PG_HAVE_SPIN_DELAY117,4160
pg_spin_delay_impl(119,4213
#define PG_HAVE_SPIN_DELAY124,4280
pg_spin_delay_impl(126,4333
#define PG_HAVE_ATOMIC_TEST_SET_FLAG139,4564
pg_atomic_test_set_flag_impl(141,4620
#define PG_HAVE_ATOMIC_CLEAR_FLAG154,4835
pg_atomic_clear_flag_impl(156,4888
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U32166,5126
pg_atomic_compare_exchange_u32_impl(168,5189
#define PG_HAVE_ATOMIC_FETCH_ADD_U32187,5653
pg_atomic_fetch_add_u32_impl(189,5711
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U64203,5976
pg_atomic_compare_exchange_u64_impl(205,6039
#define PG_HAVE_ATOMIC_FETCH_ADD_U64224,6503
pg_atomic_fetch_add_u64_impl(226,6561
#define PG_HAVE_8BYTE_SINGLE_COPY_ATOMICITY249,7244

/home/seinoyu/pgsql/master/postgresql/src/include/port/atomics/arch-arm.h,41
#define PG_DISABLE_64_BIT_ATOMICS25,720

/home/seinoyu/pgsql/master/postgresql/src/include/port/atomics/generic-msvc.h,693
#define pg_compiler_barrier_impl(27,767
#define pg_memory_barrier_impl(30,854
#define PG_HAVE_ATOMIC_U32_SUPPORT35,938
typedef struct pg_atomic_uint3236,973
	volatile uint32 value;38,1007
} pg_atomic_uint32;39,1031
#define PG_HAVE_ATOMIC_U64_SUPPORT41,1052
typedef struct __declspec(align(42,1087
} pg_atomic_uint64;45,1166
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U3248,1188
pg_atomic_compare_exchange_u32_impl(50,1251
#define PG_HAVE_ATOMIC_FETCH_ADD_U3261,1529
pg_atomic_fetch_add_u32_impl(63,1587
#define PG_HAVE_ATOMIC_COMPARE_EXCHANGE_U6476,2022
pg_atomic_compare_exchange_u64_impl(78,2085
#define PG_HAVE_ATOMIC_FETCH_ADD_U6493,2477
pg_atomic_fetch_add_u64_impl(95,2535

/home/seinoyu/pgsql/master/postgresql/src/include/port/atomics/generic.h,2703
#	define pg_read_barrier_impl 25,736
#	define pg_write_barrier_impl 28,832
#define PG_HAVE_SPIN_DELAY32,921
#define pg_spin_delay_impl(33,948
#define PG_HAVE_ATOMIC_FLAG_SUPPORT39,1100
typedef pg_atomic_uint32 pg_atomic_flag;40,1136
#define PG_HAVE_ATOMIC_READ_U3244,1217
pg_atomic_read_u32_impl(46,1270
#define PG_HAVE_ATOMIC_WRITE_U3253,1391
pg_atomic_write_u32_impl(55,1443
#define PG_HAVE_ATOMIC_UNLOCKED_WRITE_U3262,1585
pg_atomic_unlocked_write_u32_impl(64,1646
#define PG_HAVE_ATOMIC_INIT_FLAG75,1918
pg_atomic_init_flag_impl(77,1970
#define PG_HAVE_ATOMIC_TEST_SET_FLAG82,2065
pg_atomic_test_set_flag_impl(84,2121
#define PG_HAVE_ATOMIC_UNLOCKED_TEST_FLAG89,2243
pg_atomic_unlocked_test_flag_impl(91,2304
#define PG_HAVE_ATOMIC_CLEAR_FLAG97,2417
pg_atomic_clear_flag_impl(99,2470
#define PG_HAVE_ATOMIC_INIT_FLAG112,2817
pg_atomic_init_flag_impl(114,2869
#define PG_HAVE_ATOMIC_TEST_SET_FLAG119,2964
pg_atomic_test_set_flag_impl(121,3020
#define PG_HAVE_ATOMIC_UNLOCKED_TEST_FLAG127,3164
pg_atomic_unlocked_test_flag_impl(129,3225
#define PG_HAVE_ATOMIC_CLEAR_FLAG134,3337
pg_atomic_clear_flag_impl(136,3390
#define PG_HAVE_ATOMIC_INIT_U32159,4067
pg_atomic_init_u32_impl(161,4118
#define PG_HAVE_ATOMIC_EXCHANGE_U32168,4309
pg_atomic_exchange_u32_impl(170,4366
#define PG_HAVE_ATOMIC_FETCH_ADD_U32181,4699
pg_atomic_fetch_add_u32_impl(183,4757
#define PG_HAVE_ATOMIC_FETCH_SUB_U32194,5094
pg_atomic_fetch_sub_u32_impl(196,5152
#define PG_HAVE_ATOMIC_FETCH_AND_U32203,5378
pg_atomic_fetch_and_u32_impl(205,5436
#define PG_HAVE_ATOMIC_FETCH_OR_U32216,5773
pg_atomic_fetch_or_u32_impl(218,5830
#define PG_HAVE_ATOMIC_ADD_FETCH_U32229,6158
pg_atomic_add_fetch_u32_impl(231,6216
#define PG_HAVE_ATOMIC_SUB_FETCH_U32238,6441
pg_atomic_sub_fetch_u32_impl(240,6499
#define PG_HAVE_ATOMIC_EXCHANGE_U64247,6730
pg_atomic_exchange_u64_impl(249,6787
#define PG_HAVE_ATOMIC_WRITE_U64260,7062
pg_atomic_write_u64_impl(266,7211
pg_atomic_write_u64_impl(280,7542
#define PG_HAVE_ATOMIC_READ_U64293,7939
pg_atomic_read_u64_impl(299,8089
pg_atomic_read_u64_impl(311,8311
#define PG_HAVE_ATOMIC_INIT_U64329,8898
pg_atomic_init_u64_impl(331,8949
#define PG_HAVE_ATOMIC_FETCH_ADD_U64338,9141
pg_atomic_fetch_add_u64_impl(340,9199
#define PG_HAVE_ATOMIC_FETCH_SUB_U64351,9536
pg_atomic_fetch_sub_u64_impl(353,9594
#define PG_HAVE_ATOMIC_FETCH_AND_U64360,9820
pg_atomic_fetch_and_u64_impl(362,9878
#define PG_HAVE_ATOMIC_FETCH_OR_U64373,10215
pg_atomic_fetch_or_u64_impl(375,10272
#define PG_HAVE_ATOMIC_ADD_FETCH_U64386,10600
pg_atomic_add_fetch_u64_impl(388,10658
#define PG_HAVE_ATOMIC_SUB_FETCH_U64395,10883
pg_atomic_sub_fetch_u64_impl(397,10941

/home/seinoyu/pgsql/master/postgresql/src/include/port/atomics/arch-ia64.h,171
#	define pg_memory_barrier_impl(21,565
#	define pg_memory_barrier_impl(23,631
#	define pg_memory_barrier_impl(25,731
#define PG_HAVE_8BYTE_SINGLE_COPY_ATOMICITY29,861

/home/seinoyu/pgsql/master/postgresql/src/include/port/cygwin.h,148
#undef HAVE_UNIX_SOCKETS9,167
#define PGDLLIMPORT 13,220
#define PGDLLIMPORT 15,269
#define PGDLLEXPORT18,320
#define HAVE_BUGGY_STRTOF 26,620

/home/seinoyu/pgsql/master/postgresql/src/include/port/pg_bitutils.h,289
#define PG_BITUTILS_H14,362
pg_leftmost_one_pos32(32,904
pg_leftmost_one_pos64(55,1304
pg_rightmost_one_pos32(85,2002
pg_rightmost_one_pos64(111,2413
pg_nextpower2_32(146,3132
pg_nextpower2_64(169,3731
pg_ceil_log2_32(189,4216
pg_ceil_log2_64(202,4415
pg_rotate_right32(221,4857

/home/seinoyu/pgsql/master/postgresql/src/include/port/pg_crc32c.h,374
#define PG_CRC32C_H34,1071
typedef uint32 pg_crc32c;38,1120
#define INIT_CRC32C(41,1214
#define EQ_CRC32C(42,1260
#define COMP_CRC32C(46,1369
#define FIN_CRC32C(48,1461
#define COMP_CRC32C(55,1670
#define FIN_CRC32C(57,1768
#define COMP_CRC32C(67,2122
#define FIN_CRC32C(69,2208
#define COMP_CRC32C(89,2919
#define FIN_CRC32C(92,3032
#define FIN_CRC32C(94,3101

/home/seinoyu/pgsql/master/postgresql/src/include/port/aix.h,98
#define CLASS_CONFLICT4,33
#define DISABLE_XOPEN_NLS5,56
#define PG_FORCE_DISABLE_INLINE13,332

/home/seinoyu/pgsql/master/postgresql/src/include/port/pg_bswap.h,715
#define PG_BSWAP_H21,714
#define pg_bswap16(33,936
#define pg_bswap16(37,1005
pg_bswap16(42,1076
#define pg_bswap32(55,1286
#define pg_bswap32(59,1355
pg_bswap32(64,1425
#define pg_bswap64(79,1701
#define pg_bswap64(84,1771
pg_bswap64(89,1842
#define pg_hton16(110,2448
#define pg_hton32(111,2474
#define pg_hton64(112,2500
#define pg_ntoh16(114,2527
#define pg_ntoh32(115,2553
#define pg_ntoh64(116,2579
#define pg_hton16(120,2613
#define pg_hton32(121,2649
#define pg_hton64(122,2685
#define pg_ntoh16(124,2722
#define pg_ntoh32(125,2758
#define pg_ntoh64(126,2794
#define		DatumBigEndianToNative(151,3903
#define		DatumBigEndianToNative(154,3999
#define		DatumBigEndianToNative(156,4084

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32/sys/socket.h,121
#define WIN32_SYS_SOCKET_H5,73
#undef ERROR18,394
#undef small19,407
#define ERROR 23,466
#undef gai_strerror31,641

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32.h,429
#define WIN329,286
#define MIN_WINNT 20,670
#define MIN_WINNT 22,701
#undef _WIN32_WINNT26,788
#define _WIN32_WINNT 30,837
#define errcode 39,1129
#undef errcode41,1181
#define PGDLLIMPORT 49,1281
#define PGDLLIMPORT 51,1330
#define PGDLLEXPORT 55,1397
#define PGDLLEXPORT57,1446
struct sockaddr_un64,1589
	unsigned short sun_family;66,1610
	char		sun_path[sun_path67,1638
#define HAVE_STRUCT_SOCKADDR_UN 69,1663

/home/seinoyu/pgsql/master/postgresql/src/include/port/linux.h,81
#define HAVE_LINUX_EIDRM_BUG14,678
#define PLATFORM_DEFAULT_SYNC_METHOD	22,993

/home/seinoyu/pgsql/master/postgresql/src/include/port/darwin.h,63
#define __darwin__	3,33
#define HAVE_FSYNC_WRITETHROUGH6,118

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32_msvc/dirent.h,199
#define _WIN32VC_DIRENT_H8,155
struct dirent9,181
	long		d_ino;11,197
	unsigned short d_reclen;12,211
	unsigned short d_namlen;13,237
	char		d_name[d_name14,263
typedef struct DIR DIR;17,292

/home/seinoyu/pgsql/master/postgresql/src/include/funcapi.h,1029
#define FUNCAPI_H18,520
typedef struct AttInMetadata35,1169
	TupleDesc	tupdesc;38,1222
	FmgrInfo   *attinfuncs;attinfuncs41,1295
	Oid		   *attioparams;attioparams44,1371
	int32	   *atttypmods;atttypmods47,1428
} AttInMetadata;48,1451
typedef struct FuncCallContext57,1814
	uint64		call_cntr;65,2040
	uint64		max_calls;74,2272
	void	   *user_fctx;user_fctx82,2511
	AttInMetadata *attinmeta;attinmeta91,2841
	MemoryContext multi_call_memory_ctx;101,3188
	TupleDesc	tuple_desc;112,3619
} FuncCallContext;114,3643
typedef enum TypeFuncClass146,5083
	TYPEFUNC_SCALAR,148,5112
	TYPEFUNC_COMPOSITE,149,5157
	TYPEFUNC_COMPOSITE_DOMAIN,150,5214
	TYPEFUNC_RECORD,151,5288
	TYPEFUNC_OTHER	152,5343
} TypeFuncClass;153,5394
#define HeapTupleGetDatum(220,8061
#define TupleGetDatum(222,8168
#define SRF_IS_FIRSTCALL(293,10709
#define SRF_FIRSTCALL_INIT(295,10772
#define SRF_PERCALL_SETUP(297,10829
#define SRF_RETURN_NEXT(299,10884
#define SRF_RETURN_NEXT_NULL(308,11123
#define  SRF_RETURN_DONE(317,11350

/home/seinoyu/pgsql/master/postgresql/src/include/pgstat.h,23428
#define PGSTAT_H12,221
#define PGSTAT_STAT_PERMANENT_DIRECTORY	29,600
#define PGSTAT_STAT_PERMANENT_FILENAME	30,651
#define PGSTAT_STAT_PERMANENT_TMPFILE	31,713
#define PG_STAT_TMP_DIR	34,836
typedef enum TrackFunctionsLevel37,948
	TRACK_FUNC_OFF,39,983
	TRACK_FUNC_PL,40,1000
	TRACK_FUNC_ALL41,1016
}			TrackFunctionsLevel;42,1032
typedef enum StatMsgType48,1136
	PGSTAT_MTYPE_DUMMY,50,1163
	PGSTAT_MTYPE_INQUIRY,51,1184
	PGSTAT_MTYPE_TABSTAT,52,1207
	PGSTAT_MTYPE_TABPURGE,53,1230
	PGSTAT_MTYPE_DROPDB,54,1254
	PGSTAT_MTYPE_RESETCOUNTER,55,1276
	PGSTAT_MTYPE_RESETSHAREDCOUNTER,56,1304
	PGSTAT_MTYPE_RESETSINGLECOUNTER,57,1338
	PGSTAT_MTYPE_RESETSLRUCOUNTER,58,1372
	PGSTAT_MTYPE_AUTOVAC_START,59,1404
	PGSTAT_MTYPE_VACUUM,60,1433
	PGSTAT_MTYPE_ANALYZE,61,1455
	PGSTAT_MTYPE_ARCHIVER,62,1478
	PGSTAT_MTYPE_BGWRITER,63,1502
	PGSTAT_MTYPE_SLRU,64,1526
	PGSTAT_MTYPE_FUNCSTAT,65,1546
	PGSTAT_MTYPE_FUNCPURGE,66,1570
	PGSTAT_MTYPE_RECOVERYCONFLICT,67,1595
	PGSTAT_MTYPE_TEMPFILE,68,1627
	PGSTAT_MTYPE_DEADLOCK,69,1651
	PGSTAT_MTYPE_CHECKSUMFAILURE70,1675
} StatMsgType;71,1705
typedef int64 PgStat_Counter;77,1789
typedef struct PgStat_TableCounts100,2955
	PgStat_Counter t_numscans;102,2991
	PgStat_Counter t_tuples_returned;104,3020
	PgStat_Counter t_tuples_fetched;105,3055
	PgStat_Counter t_tuples_inserted;107,3090
	PgStat_Counter t_tuples_updated;108,3125
	PgStat_Counter t_tuples_deleted;109,3159
	PgStat_Counter t_tuples_hot_updated;110,3193
	bool		t_truncated;111,3231
	PgStat_Counter t_delta_live_tuples;113,3252
	PgStat_Counter t_delta_dead_tuples;114,3289
	PgStat_Counter t_changed_tuples;115,3326
	PgStat_Counter t_blocks_fetched;117,3361
	PgStat_Counter t_blocks_hit;118,3395
} PgStat_TableCounts;119,3425
typedef enum PgStat_Shared_Reset_Target122,3512
	RESET_ARCHIVER,124,3554
	RESET_BGWRITER125,3571
} PgStat_Shared_Reset_Target;126,3587
typedef enum PgStat_Single_Reset_Type129,3676
	RESET_TABLE,131,3716
	RESET_FUNCTION132,3730
} PgStat_Single_Reset_Type;133,3746
typedef struct PgStat_TableStatus156,4743
	Oid			t_id;158,4779
	bool		t_shared;159,4812
	struct PgStat_TableXactStatus *trans;trans160,4860
	PgStat_TableCounts t_counts;161,4929
} PgStat_TableStatus;162,4989
typedef struct PgStat_TableXactStatus168,5108
	PgStat_Counter tuples_inserted;170,5148
	PgStat_Counter tuples_updated;171,5216
	PgStat_Counter tuples_deleted;172,5282
	bool		truncated;173,5348
	PgStat_Counter inserted_pre_trunc;174,5410
	PgStat_Counter updated_pre_trunc;175,5486
	PgStat_Counter deleted_pre_trunc;176,5560
	int			nest_level;177,5634
	struct PgStat_TableXactStatus *upper;upper179,5735
	PgStat_TableStatus *parent;parent180,5807
	struct PgStat_TableXactStatus *next;next182,5913
} PgStat_TableXactStatus;183,5978
typedef struct PgStat_MsgHdr196,6244
	StatMsgType m_type;198,6275
	int			m_size;199,6296
} PgStat_MsgHdr;200,6311
#define PGSTAT_MAX_MSG_SIZE 209,6628
#define PGSTAT_MSG_PAYLOAD	210,6661
typedef struct PgStat_MsgDummy217,6832
	PgStat_MsgHdr m_hdr;219,6865
} PgStat_MsgDummy;220,6887
typedef struct PgStat_MsgInquiry242,7788
	PgStat_MsgHdr m_hdr;244,7823
	TimestampTz clock_time;245,7845
	TimestampTz cutoff_time;246,7903
	Oid			databaseid;247,7969
} PgStat_MsgInquiry;248,8036
typedef struct PgStat_TableEntry255,8145
	Oid			t_id;257,8180
	PgStat_TableCounts t_counts;258,8193
} PgStat_TableEntry;259,8223
#define PGSTAT_NUM_TABENTRIES 266,8376
typedef struct PgStat_MsgTabstat270,8527
	PgStat_MsgHdr m_hdr;272,8562
	Oid			m_databaseid;273,8584
	int			m_nentries;274,8605
	int			m_xact_commit;275,8624
	int			m_xact_rollback;276,8646
	PgStat_Counter m_block_read_time;277,8670
	PgStat_Counter m_block_write_time;278,8733
	PgStat_TableEntry m_entry[m_entry279,8769
} PgStat_MsgTabstat;280,8820
#define PGSTAT_NUM_TABPURGE 288,8970
typedef struct PgStat_MsgTabpurge292,9073
	PgStat_MsgHdr m_hdr;294,9109
	Oid			m_databaseid;295,9131
	int			m_nentries;296,9152
	Oid			m_tableid[m_tableid297,9171
} PgStat_MsgTabpurge;298,9210
typedef struct PgStat_MsgDropdb306,9366
	PgStat_MsgHdr m_hdr;308,9400
	Oid			m_databaseid;309,9422
} PgStat_MsgDropdb;310,9443
typedef struct PgStat_MsgResetcounter318,9594
	PgStat_MsgHdr m_hdr;320,9634
	Oid			m_databaseid;321,9656
} PgStat_MsgResetcounter;322,9677
typedef struct PgStat_MsgResetsharedcounter329,9846
	PgStat_MsgHdr m_hdr;331,9892
	PgStat_Shared_Reset_Target m_resettarget;332,9914
} PgStat_MsgResetsharedcounter;333,9957
typedef struct PgStat_MsgResetsinglecounter340,10132
	PgStat_MsgHdr m_hdr;342,10178
	Oid			m_databaseid;343,10200
	PgStat_Single_Reset_Type m_resettype;344,10221
	Oid			m_objectid;345,10260
} PgStat_MsgResetsinglecounter;346,10279
typedef struct PgStat_MsgResetslrucounter353,10450
	PgStat_MsgHdr m_hdr;355,10494
	int			m_index;356,10516
} PgStat_MsgResetslrucounter;357,10532
typedef struct PgStat_MsgAutovacStart364,10713
	PgStat_MsgHdr m_hdr;366,10753
	Oid			m_databaseid;367,10775
	TimestampTz m_start_time;368,10796
} PgStat_MsgAutovacStart;369,10823
typedef struct PgStat_MsgVacuum377,10970
	PgStat_MsgHdr m_hdr;379,11004
	Oid			m_databaseid;380,11026
	Oid			m_tableoid;381,11047
	bool		m_autovacuum;382,11066
	TimestampTz m_vacuumtime;383,11087
	PgStat_Counter m_live_tuples;384,11114
	PgStat_Counter m_dead_tuples;385,11145
} PgStat_MsgVacuum;386,11176
typedef struct PgStat_MsgAnalyze394,11318
	PgStat_MsgHdr m_hdr;396,11353
	Oid			m_databaseid;397,11375
	Oid			m_tableoid;398,11396
	bool		m_autovacuum;399,11415
	bool		m_resetcounter;400,11436
	TimestampTz m_analyzetime;401,11459
	PgStat_Counter m_live_tuples;402,11487
	PgStat_Counter m_dead_tuples;403,11518
} PgStat_MsgAnalyze;404,11549
typedef struct PgStat_MsgArchiver411,11671
	PgStat_MsgHdr m_hdr;413,11707
	bool		m_failed;414,11729
	char		m_xlog[m_xlog415,11768
	TimestampTz m_timestamp;416,11802
} PgStat_MsgArchiver;417,11828
typedef struct PgStat_MsgBgWriter423,11950
	PgStat_MsgHdr m_hdr;425,11986
	PgStat_Counter m_timed_checkpoints;427,12009
	PgStat_Counter m_requested_checkpoints;428,12046
	PgStat_Counter m_buf_written_checkpoints;429,12087
	PgStat_Counter m_buf_written_clean;430,12130
	PgStat_Counter m_maxwritten_clean;431,12167
	PgStat_Counter m_buf_written_backend;432,12203
	PgStat_Counter m_buf_fsync_backend;433,12242
	PgStat_Counter m_buf_alloc;434,12279
	PgStat_Counter m_checkpoint_write_time;435,12308
	PgStat_Counter m_checkpoint_sync_time;436,12377
} PgStat_MsgBgWriter;437,12417
typedef struct PgStat_MsgSLRU443,12537
	PgStat_MsgHdr m_hdr;445,12569
	PgStat_Counter m_index;446,12591
	PgStat_Counter m_blocks_zeroed;447,12616
	PgStat_Counter m_blocks_hit;448,12649
	PgStat_Counter m_blocks_read;449,12679
	PgStat_Counter m_blocks_written;450,12710
	PgStat_Counter m_blocks_exists;451,12744
	PgStat_Counter m_flush;452,12777
	PgStat_Counter m_truncate;453,12802
} PgStat_MsgSLRU;454,12830
typedef struct PgStat_MsgRecoveryConflict460,12954
	PgStat_MsgHdr m_hdr;462,12998
	Oid			m_databaseid;464,13021
	int			m_reason;465,13042
} PgStat_MsgRecoveryConflict;466,13059
typedef struct PgStat_MsgTempFile472,13190
	PgStat_MsgHdr m_hdr;474,13226
	Oid			m_databaseid;476,13249
	size_t		m_filesize;477,13270
} PgStat_MsgTempFile;478,13291
typedef struct PgStat_FunctionCounts490,13729
	PgStat_Counter f_numcalls;492,13768
	instr_time	f_total_time;493,13796
	instr_time	f_self_time;494,13822
} PgStat_FunctionCounts;495,13847
typedef struct PgStat_BackendFunctionEntry501,13979
	Oid			f_id;503,14024
	PgStat_FunctionCounts f_counts;504,14037
} PgStat_BackendFunctionEntry;505,14070
typedef struct PgStat_FunctionEntry511,14195
	Oid			f_id;513,14233
	PgStat_Counter f_numcalls;514,14246
	PgStat_Counter f_total_time;515,14274
	PgStat_Counter f_self_time;516,14332
} PgStat_FunctionEntry;517,14361
#define PGSTAT_NUM_FUNCENTRIES	524,14509
typedef struct PgStat_MsgFuncstat528,14631
	PgStat_MsgHdr m_hdr;530,14667
	Oid			m_databaseid;531,14689
	int			m_nentries;532,14710
	PgStat_FunctionEntry m_entry[m_entry533,14729
} PgStat_MsgFuncstat;534,14784
#define PGSTAT_NUM_FUNCPURGE 541,14938
typedef struct PgStat_MsgFuncpurge545,15042
	PgStat_MsgHdr m_hdr;547,15079
	Oid			m_databaseid;548,15101
	int			m_nentries;549,15122
	Oid			m_functionid[m_functionid550,15141
} PgStat_MsgFuncpurge;551,15184
typedef struct PgStat_MsgDeadlock558,15348
	PgStat_MsgHdr m_hdr;560,15384
	Oid			m_databaseid;561,15406
} PgStat_MsgDeadlock;562,15427
typedef struct PgStat_MsgChecksumFailure569,15596
	PgStat_MsgHdr m_hdr;571,15639
	Oid			m_databaseid;572,15661
	int			m_failurecount;573,15682
	TimestampTz m_failure_time;574,15705
} PgStat_MsgChecksumFailure;575,15734
typedef union PgStat_Msg582,15849
	PgStat_MsgHdr msg_hdr;584,15876
	PgStat_MsgDummy msg_dummy;585,15900
	PgStat_MsgInquiry msg_inquiry;586,15928
	PgStat_MsgTabstat msg_tabstat;587,15960
	PgStat_MsgTabpurge msg_tabpurge;588,15992
	PgStat_MsgDropdb msg_dropdb;589,16026
	PgStat_MsgResetcounter msg_resetcounter;590,16056
	PgStat_MsgResetsharedcounter msg_resetsharedcounter;591,16098
	PgStat_MsgResetsinglecounter msg_resetsinglecounter;592,16152
	PgStat_MsgResetslrucounter msg_resetslrucounter;593,16206
	PgStat_MsgAutovacStart msg_autovacuum_start;594,16256
	PgStat_MsgVacuum msg_vacuum;595,16302
	PgStat_MsgAnalyze msg_analyze;596,16332
	PgStat_MsgArchiver msg_archiver;597,16364
	PgStat_MsgBgWriter msg_bgwriter;598,16398
	PgStat_MsgSLRU msg_slru;599,16432
	PgStat_MsgFuncstat msg_funcstat;600,16458
	PgStat_MsgFuncpurge msg_funcpurge;601,16492
	PgStat_MsgRecoveryConflict msg_recoveryconflict;602,16528
	PgStat_MsgDeadlock msg_deadlock;603,16578
	PgStat_MsgTempFile msg_tempfile;604,16612
	PgStat_MsgChecksumFailure msg_checksumfailure;605,16646
} PgStat_Msg;606,16694
#define PGSTAT_FILE_FORMAT_ID	617,16984
typedef struct PgStat_StatDBEntry623,17116
	Oid			databaseid;625,17152
	PgStat_Counter n_xact_commit;626,17171
	PgStat_Counter n_xact_rollback;627,17202
	PgStat_Counter n_blocks_fetched;628,17235
	PgStat_Counter n_blocks_hit;629,17269
	PgStat_Counter n_tuples_returned;630,17299
	PgStat_Counter n_tuples_fetched;631,17334
	PgStat_Counter n_tuples_inserted;632,17368
	PgStat_Counter n_tuples_updated;633,17403
	PgStat_Counter n_tuples_deleted;634,17437
	TimestampTz last_autovac_time;635,17471
	PgStat_Counter n_conflict_tablespace;636,17503
	PgStat_Counter n_conflict_lock;637,17542
	PgStat_Counter n_conflict_snapshot;638,17575
	PgStat_Counter n_conflict_bufferpin;639,17612
	PgStat_Counter n_conflict_startup_deadlock;640,17650
	PgStat_Counter n_temp_files;641,17695
	PgStat_Counter n_temp_bytes;642,17725
	PgStat_Counter n_deadlocks;643,17755
	PgStat_Counter n_checksum_failures;644,17784
	TimestampTz last_checksum_failure;645,17821
	PgStat_Counter n_block_read_time;646,17857
	PgStat_Counter n_block_write_time;647,17920
	TimestampTz stat_reset_timestamp;649,17957
	TimestampTz stats_timestamp;650,17992
	HTAB	   *tables;tables656,18183
	HTAB	   *functions;functions657,18201
} PgStat_StatDBEntry;658,18222
typedef struct PgStat_StatTabEntry665,18345
	Oid			tableid;667,18382
	PgStat_Counter numscans;669,18399
	PgStat_Counter tuples_returned;671,18426
	PgStat_Counter tuples_fetched;672,18459
	PgStat_Counter tuples_inserted;674,18492
	PgStat_Counter tuples_updated;675,18525
	PgStat_Counter tuples_deleted;676,18557
	PgStat_Counter tuples_hot_updated;677,18589
	PgStat_Counter n_live_tuples;679,18626
	PgStat_Counter n_dead_tuples;680,18657
	PgStat_Counter changes_since_analyze;681,18688
	PgStat_Counter inserts_since_vacuum;682,18727
	PgStat_Counter blocks_fetched;684,18766
	PgStat_Counter blocks_hit;685,18798
	TimestampTz vacuum_timestamp;687,18827
	PgStat_Counter vacuum_count;688,18886
	TimestampTz autovac_vacuum_timestamp;689,18916
	PgStat_Counter autovac_vacuum_count;690,18982
	TimestampTz analyze_timestamp;691,19020
	PgStat_Counter analyze_count;692,19073
	TimestampTz autovac_analyze_timestamp;693,19104
	PgStat_Counter autovac_analyze_count;694,19171
} PgStat_StatTabEntry;695,19210
typedef struct PgStat_StatFuncEntry702,19327
	Oid			functionid;704,19365
	PgStat_Counter f_numcalls;706,19385
	PgStat_Counter f_total_time;708,19414
	PgStat_Counter f_self_time;709,19472
} PgStat_StatFuncEntry;710,19501
typedef struct PgStat_ArchiverStats716,19585
	PgStat_Counter archived_count;718,19623
	char		last_archived_wal[last_archived_wal719,19680
	TimestampTz last_archived_timestamp;721,19771
	PgStat_Counter failed_count;722,19842
	char		last_failed_wal[last_failed_wal723,19903
	TimestampTz last_failed_timestamp;725,20002
	TimestampTz stat_reset_timestamp;726,20071
} PgStat_ArchiverStats;727,20106
typedef struct PgStat_GlobalStats732,20187
	TimestampTz stats_timestamp;734,20223
	PgStat_Counter timed_checkpoints;735,20285
	PgStat_Counter requested_checkpoints;736,20320
	PgStat_Counter checkpoint_write_time;737,20359
	PgStat_Counter checkpoint_sync_time;738,20426
	PgStat_Counter buf_written_checkpoints;739,20464
	PgStat_Counter buf_written_clean;740,20505
	PgStat_Counter maxwritten_clean;741,20540
	PgStat_Counter buf_written_backend;742,20574
	PgStat_Counter buf_fsync_backend;743,20611
	PgStat_Counter buf_alloc;744,20646
	TimestampTz stat_reset_timestamp;745,20673
} PgStat_GlobalStats;746,20708
typedef struct PgStat_SLRUStats751,20785
	PgStat_Counter blocks_zeroed;753,20819
	PgStat_Counter blocks_hit;754,20850
	PgStat_Counter blocks_read;755,20878
	PgStat_Counter blocks_written;756,20907
	PgStat_Counter blocks_exists;757,20939
	PgStat_Counter flush;758,20970
	PgStat_Counter truncate;759,20993
	TimestampTz stat_reset_timestamp;760,21019
} PgStat_SLRUStats;761,21054
typedef enum BackendState768,21126
	STATE_UNDEFINED,770,21154
	STATE_IDLE,771,21172
	STATE_RUNNING,772,21185
	STATE_IDLEINTRANSACTION,773,21201
	STATE_FASTPATH,774,21227
	STATE_IDLEINTRANSACTION_ABORTED,775,21244
	STATE_DISABLED776,21278
} BackendState;777,21294
#define PG_WAIT_LWLOCK	784,21360
#define PG_WAIT_LOCK	785,21398
#define PG_WAIT_BUFFER_PIN	786,21434
#define PG_WAIT_ACTIVITY	787,21475
#define PG_WAIT_CLIENT	788,21514
#define PG_WAIT_EXTENSION	789,21552
#define PG_WAIT_IPC	790,21592
#define PG_WAIT_TIMEOUT	791,21628
#define PG_WAIT_IO	792,21667
	WAIT_EVENT_ARCHIVER_MAIN 804,21998
	WAIT_EVENT_AUTOVACUUM_MAIN,805,22044
	WAIT_EVENT_BGWRITER_HIBERNATE,806,22073
	WAIT_EVENT_BGWRITER_MAIN,807,22105
	WAIT_EVENT_CHECKPOINTER_MAIN,808,22132
	WAIT_EVENT_LOGICAL_APPLY_MAIN,809,22163
	WAIT_EVENT_LOGICAL_LAUNCHER_MAIN,810,22195
	WAIT_EVENT_PGSTAT_MAIN,811,22230
	WAIT_EVENT_RECOVERY_WAL_STREAM,812,22255
	WAIT_EVENT_SYSLOGGER_MAIN,813,22288
	WAIT_EVENT_WAL_RECEIVER_MAIN,814,22316
	WAIT_EVENT_WAL_SENDER_MAIN,815,22347
	WAIT_EVENT_WAL_WRITER_MAIN816,22376
} WaitEventActivity;817,22404
	WAIT_EVENT_CLIENT_READ 829,22715
	WAIT_EVENT_CLIENT_WRITE,830,22757
	WAIT_EVENT_GSS_OPEN_SERVER,831,22783
	WAIT_EVENT_LIBPQWALRECEIVER_CONNECT,832,22812
	WAIT_EVENT_LIBPQWALRECEIVER_RECEIVE,833,22850
	WAIT_EVENT_SSL_OPEN_SERVER,834,22888
	WAIT_EVENT_WAL_RECEIVER_WAIT_START,835,22917
	WAIT_EVENT_WAL_SENDER_WAIT_WAL,836,22954
	WAIT_EVENT_WAL_SENDER_WRITE_DATA,837,22987
} WaitEventClient;838,23022
	WAIT_EVENT_BACKUP_WAIT_WAL_ARCHIVE 849,23252
	WAIT_EVENT_BGWORKER_SHUTDOWN,850,23303
	WAIT_EVENT_BGWORKER_STARTUP,851,23334
	WAIT_EVENT_BTREE_PAGE,852,23364
	WAIT_EVENT_CHECKPOINT_DONE,853,23388
	WAIT_EVENT_CHECKPOINT_START,854,23417
	WAIT_EVENT_EXECUTE_GATHER,855,23447
	WAIT_EVENT_HASH_BATCH_ALLOCATE,856,23475
	WAIT_EVENT_HASH_BATCH_ELECT,857,23508
	WAIT_EVENT_HASH_BATCH_LOAD,858,23538
	WAIT_EVENT_HASH_BUILD_ALLOCATE,859,23567
	WAIT_EVENT_HASH_BUILD_ELECT,860,23600
	WAIT_EVENT_HASH_BUILD_HASH_INNER,861,23630
	WAIT_EVENT_HASH_BUILD_HASH_OUTER,862,23665
	WAIT_EVENT_HASH_GROW_BATCHES_ALLOCATE,863,23700
	WAIT_EVENT_HASH_GROW_BATCHES_DECIDE,864,23740
	WAIT_EVENT_HASH_GROW_BATCHES_ELECT,865,23778
	WAIT_EVENT_HASH_GROW_BATCHES_FINISH,866,23815
	WAIT_EVENT_HASH_GROW_BATCHES_REPARTITION,867,23853
	WAIT_EVENT_HASH_GROW_BUCKETS_ALLOCATE,868,23896
	WAIT_EVENT_HASH_GROW_BUCKETS_ELECT,869,23936
	WAIT_EVENT_HASH_GROW_BUCKETS_REINSERT,870,23973
	WAIT_EVENT_LOGICAL_SYNC_DATA,871,24013
	WAIT_EVENT_LOGICAL_SYNC_STATE_CHANGE,872,24044
	WAIT_EVENT_MQ_INTERNAL,873,24083
	WAIT_EVENT_MQ_PUT_MESSAGE,874,24108
	WAIT_EVENT_MQ_RECEIVE,875,24136
	WAIT_EVENT_MQ_SEND,876,24160
	WAIT_EVENT_PARALLEL_BITMAP_SCAN,877,24181
	WAIT_EVENT_PARALLEL_CREATE_INDEX_SCAN,878,24215
	WAIT_EVENT_PARALLEL_FINISH,879,24255
	WAIT_EVENT_PROCARRAY_GROUP_UPDATE,880,24284
	WAIT_EVENT_PROC_SIGNAL_BARRIER,881,24320
	WAIT_EVENT_PROMOTE,882,24353
	WAIT_EVENT_RECOVERY_CONFLICT_SNAPSHOT,883,24374
	WAIT_EVENT_RECOVERY_CONFLICT_TABLESPACE,884,24414
	WAIT_EVENT_RECOVERY_PAUSE,885,24456
	WAIT_EVENT_REPLICATION_ORIGIN_DROP,886,24484
	WAIT_EVENT_REPLICATION_SLOT_DROP,887,24521
	WAIT_EVENT_SAFE_SNAPSHOT,888,24556
	WAIT_EVENT_SYNC_REP,889,24583
	WAIT_EVENT_XACT_GROUP_UPDATE890,24605
} WaitEventIPC;891,24635
	WAIT_EVENT_BASE_BACKUP_THROTTLE 901,24799
	WAIT_EVENT_PG_SLEEP,902,24851
	WAIT_EVENT_RECOVERY_APPLY_DELAY,903,24873
	WAIT_EVENT_RECOVERY_RETRIEVE_RETRY_INTERVAL,904,24907
	WAIT_EVENT_VACUUM_DELAY905,24953
} WaitEventTimeout;906,24978
	WAIT_EVENT_BASEBACKUP_READ 916,25126
	WAIT_EVENT_BUFFILE_READ,917,25168
	WAIT_EVENT_BUFFILE_WRITE,918,25194
	WAIT_EVENT_CONTROL_FILE_READ,919,25221
	WAIT_EVENT_CONTROL_FILE_SYNC,920,25252
	WAIT_EVENT_CONTROL_FILE_SYNC_UPDATE,921,25283
	WAIT_EVENT_CONTROL_FILE_WRITE,922,25321
	WAIT_EVENT_CONTROL_FILE_WRITE_UPDATE,923,25353
	WAIT_EVENT_COPY_FILE_READ,924,25392
	WAIT_EVENT_COPY_FILE_WRITE,925,25420
	WAIT_EVENT_DATA_FILE_EXTEND,926,25449
	WAIT_EVENT_DATA_FILE_FLUSH,927,25479
	WAIT_EVENT_DATA_FILE_IMMEDIATE_SYNC,928,25508
	WAIT_EVENT_DATA_FILE_PREFETCH,929,25546
	WAIT_EVENT_DATA_FILE_READ,930,25578
	WAIT_EVENT_DATA_FILE_SYNC,931,25606
	WAIT_EVENT_DATA_FILE_TRUNCATE,932,25634
	WAIT_EVENT_DATA_FILE_WRITE,933,25666
	WAIT_EVENT_DSM_FILL_ZERO_WRITE,934,25695
	WAIT_EVENT_LOCK_FILE_ADDTODATADIR_READ,935,25728
	WAIT_EVENT_LOCK_FILE_ADDTODATADIR_SYNC,936,25769
	WAIT_EVENT_LOCK_FILE_ADDTODATADIR_WRITE,937,25810
	WAIT_EVENT_LOCK_FILE_CREATE_READ,938,25852
	WAIT_EVENT_LOCK_FILE_CREATE_SYNC,939,25887
	WAIT_EVENT_LOCK_FILE_CREATE_WRITE,940,25922
	WAIT_EVENT_LOCK_FILE_RECHECKDATADIR_READ,941,25958
	WAIT_EVENT_LOGICAL_REWRITE_CHECKPOINT_SYNC,942,26001
	WAIT_EVENT_LOGICAL_REWRITE_MAPPING_SYNC,943,26046
	WAIT_EVENT_LOGICAL_REWRITE_MAPPING_WRITE,944,26088
	WAIT_EVENT_LOGICAL_REWRITE_SYNC,945,26131
	WAIT_EVENT_LOGICAL_REWRITE_TRUNCATE,946,26165
	WAIT_EVENT_LOGICAL_REWRITE_WRITE,947,26203
	WAIT_EVENT_RELATION_MAP_READ,948,26238
	WAIT_EVENT_RELATION_MAP_SYNC,949,26269
	WAIT_EVENT_RELATION_MAP_WRITE,950,26300
	WAIT_EVENT_REORDER_BUFFER_READ,951,26332
	WAIT_EVENT_REORDER_BUFFER_WRITE,952,26365
	WAIT_EVENT_REORDER_LOGICAL_MAPPING_READ,953,26399
	WAIT_EVENT_REPLICATION_SLOT_READ,954,26441
	WAIT_EVENT_REPLICATION_SLOT_RESTORE_SYNC,955,26476
	WAIT_EVENT_REPLICATION_SLOT_SYNC,956,26519
	WAIT_EVENT_REPLICATION_SLOT_WRITE,957,26554
	WAIT_EVENT_SLRU_FLUSH_SYNC,958,26590
	WAIT_EVENT_SLRU_READ,959,26619
	WAIT_EVENT_SLRU_SYNC,960,26642
	WAIT_EVENT_SLRU_WRITE,961,26665
	WAIT_EVENT_SNAPBUILD_READ,962,26689
	WAIT_EVENT_SNAPBUILD_SYNC,963,26717
	WAIT_EVENT_SNAPBUILD_WRITE,964,26745
	WAIT_EVENT_TIMELINE_HISTORY_FILE_SYNC,965,26774
	WAIT_EVENT_TIMELINE_HISTORY_FILE_WRITE,966,26814
	WAIT_EVENT_TIMELINE_HISTORY_READ,967,26855
	WAIT_EVENT_TIMELINE_HISTORY_SYNC,968,26890
	WAIT_EVENT_TIMELINE_HISTORY_WRITE,969,26925
	WAIT_EVENT_TWOPHASE_FILE_READ,970,26961
	WAIT_EVENT_TWOPHASE_FILE_SYNC,971,26993
	WAIT_EVENT_TWOPHASE_FILE_WRITE,972,27025
	WAIT_EVENT_WALSENDER_TIMELINE_HISTORY_READ,973,27058
	WAIT_EVENT_WAL_BOOTSTRAP_SYNC,974,27103
	WAIT_EVENT_WAL_BOOTSTRAP_WRITE,975,27135
	WAIT_EVENT_WAL_COPY_READ,976,27168
	WAIT_EVENT_WAL_COPY_SYNC,977,27195
	WAIT_EVENT_WAL_COPY_WRITE,978,27222
	WAIT_EVENT_WAL_INIT_SYNC,979,27250
	WAIT_EVENT_WAL_INIT_WRITE,980,27277
	WAIT_EVENT_WAL_READ,981,27305
	WAIT_EVENT_WAL_SYNC,982,27327
	WAIT_EVENT_WAL_SYNC_METHOD_ASSIGN,983,27349
	WAIT_EVENT_WAL_WRITE984,27385
} WaitEventIO;985,27407
typedef enum ProgressCommandType991,27503
	PROGRESS_COMMAND_INVALID,993,27538
	PROGRESS_COMMAND_VACUUM,994,27565
	PROGRESS_COMMAND_ANALYZE,995,27591
	PROGRESS_COMMAND_CLUSTER,996,27618
	PROGRESS_COMMAND_CREATE_INDEX,997,27645
	PROGRESS_COMMAND_BASEBACKUP998,27677
} ProgressCommandType;999,27706
#define PGSTAT_NUM_PROGRESS_PARAM	1001,27730
typedef struct PgBackendSSLStatus1017,28025
	int			ssl_bits;1020,28101
	bool		ssl_compression;1021,28118
	char		ssl_version[ssl_version1022,28142
	char		ssl_cipher[ssl_cipher1023,28175
	char		ssl_client_dn[ssl_client_dn1024,28207
	char		ssl_client_serial[ssl_client_serial1030,28335
	char		ssl_issuer_dn[ssl_issuer_dn1032,28375
} PgBackendSSLStatus;1033,28410
typedef struct PgBackendGSSStatus1043,28623
	char		gss_princ[gss_princ1046,28702
	bool		gss_auth;1047,28769
	bool		gss_enc;1048,28827
} PgBackendGSSStatus;1050,28879
typedef struct PgBackendStatus1065,29328
	int			st_changecount;1083,30282
	int			st_procpid;1086,30378
	BackendType st_backendType;1089,30422
	TimestampTz st_proc_start_timestamp;1092,30521
	TimestampTz st_xact_start_timestamp;1093,30559
	TimestampTz st_activity_start_timestamp;1094,30597
	TimestampTz st_state_start_timestamp;1095,30639
	Oid			st_databaseid;1098,30745
	Oid			st_userid;1099,30767
	SockAddr	st_clientaddr;1100,30785
	char	   *st_clienthostname;st_clienthostname1101,30810
	bool		st_ssl;1104,30910
	PgBackendSSLStatus *st_sslstatus;st_sslstatus1105,30925
	bool		st_gss;1108,31004
	PgBackendGSSStatus *st_gssstatus;st_gssstatus1109,31019
	BackendState st_state;1112,31076
	char	   *st_appname;st_appname1115,31150
	char	   *st_activity_raw;st_activity_raw1124,31516
	ProgressCommandType st_progress_command;1135,31993
	Oid			st_progress_command_target;1136,32035
	int64		st_progress_param[st_progress_param1137,32070
} PgBackendStatus;1138,32124
#define PGSTAT_BEGIN_WRITE_ACTIVITY(1169,33275
#define PGSTAT_END_WRITE_ACTIVITY(1176,33427
#define pgstat_begin_read_activity(1184,33625
#define pgstat_end_read_activity(1190,33790
#define pgstat_read_activity_complete(1196,33951
typedef struct LocalPgBackendStatus1209,34407
	PgBackendStatus backendStatus;1214,34501
	TransactionId backend_xid;1220,34629
	TransactionId backend_xmin;1226,34750
} LocalPgBackendStatus;1227,34779
typedef struct PgStat_FunctionCallUsage1232,34886
	PgStat_FunctionCounts *fs;fs1236,35065
	instr_time	save_f_total_time;1238,35164
	instr_time	save_total;1240,35247
	instr_time	f_start;1242,35312
} PgStat_FunctionCallUsage;1243,35333
extern void PgstatCollectorMain(1282,36310
pgstat_report_wait_end(1381,39793
#define pgstat_count_heap_scan(1397,40122
#define pgstat_count_heap_getnext(1402,40297
#define pgstat_count_heap_fetch(1407,40479
#define pgstat_count_index_scan(1412,40658
#define pgstat_count_index_tuples(1417,40833
#define pgstat_count_buffer_read(1422,41021
#define pgstat_count_buffer_hit(1427,41201
#define pgstat_count_buffer_read_time(1432,41377
#define pgstat_count_buffer_write_time(1434,41456

/home/seinoyu/pgsql/master/postgresql/src/include/getaddrinfo.h,1687
#define GETADDRINFO_H23,956
#define EAI_BADFLAGS	33,1125
#define EAI_NONAME	34,1151
#define EAI_AGAIN	35,1176
#define EAI_FAIL	36,1200
#define EAI_FAMILY	37,1223
#define EAI_SOCKTYPE	38,1248
#define EAI_SERVICE	39,1274
#define EAI_MEMORY	40,1300
#define EAI_SYSTEM	41,1326
#define WSA_NOT_ENOUGH_MEMORY	45,1422
#define WSATYPE_NOT_FOUND	47,1472
#define EAI_AGAIN	49,1523
#define EAI_BADFLAGS	50,1555
#define EAI_FAIL	51,1586
#define EAI_FAMILY	52,1619
#define EAI_MEMORY	53,1655
#define EAI_NODATA	54,1697
#define EAI_NONAME	55,1728
#define EAI_SERVICE	56,1766
#define EAI_SOCKTYPE	57,1805
#define AI_PASSIVE	62,1920
#define AI_NUMERICHOST	71,2160
#define AI_NUMERICHOST	73,2191
#define NI_NUMERICHOST	78,2259
#define NI_NUMERICSERV	81,2314
#define NI_NAMEREQD	84,2366
#define NI_MAXHOST	88,2416
#define NI_MAXSERV	91,2466
struct addrinfo98,2541
	int			ai_flags;100,2559
	int			ai_family;101,2576
	int			ai_socktype;102,2594
	int			ai_protocol;103,2614
	size_t		ai_addrlen;104,2634
	struct sockaddr *ai_addr;ai_addr105,2655
	char	   *ai_canonname;ai_canonname106,2682
	struct addrinfo *ai_next;ai_next107,2706
struct addrinfo115,2896
	int			ai_flags;117,2914
	int			ai_family;118,2931
	int			ai_socktype;119,2949
	int			ai_protocol;120,2969
	size_t		ai_addrlen;121,2989
	char	   *ai_canonname;ai_canonname122,3010
	struct sockaddr *ai_addr;ai_addr123,3034
	struct addrinfo *ai_next;ai_next124,3061
#undef getaddrinfo134,3232
#define getaddrinfo 136,3258
#undef freeaddrinfo139,3314
#define freeaddrinfo 141,3341
#undef gai_strerror144,3399
#define gai_strerror 146,3426
#undef getnameinfo149,3483
#define getnameinfo 151,3509

/home/seinoyu/pgsql/master/postgresql/src/include/miscadmin.h,2434
#define MISCADMIN_H24,900
#define InvalidPid	32,1041
#define CHECK_FOR_INTERRUPTS(99,4420
#define CHECK_FOR_INTERRUPTS(106,4556
#define HOLD_INTERRUPTS(116,4776
#define RESUME_INTERRUPTS(118,4830
#define HOLD_CANCEL_INTERRUPTS(124,4945
#define RESUME_CANCEL_INTERRUPTS(126,5008
#define START_CRIT_SECTION(132,5134
#define END_CRIT_SECTION(134,5186
#define USE_POSTGRES_DATES	213,7619
#define USE_ISO_DATES	214,7649
#define USE_SQL_DATES	215,7675
#define USE_GERMAN_DATES	216,7701
#define USE_XSD_DATES	217,7729
#define DATEORDER_YMD	220,7785
#define DATEORDER_DMY	221,7811
#define DATEORDER_MDY	222,7837
#define INTSTYLE_POSTGRES	234,8228
#define INTSTYLE_POSTGRES_VERBOSE	235,8258
#define INTSTYLE_SQL_STANDARD	236,8294
#define INTSTYLE_ISO_8601	237,8327
#define MAXTZLEN	241,8397
	char	   *stack_base_ptr;stack_base_ptr270,9109
	char	   *register_stack_base_ptr;register_stack_base_ptr271,9135
} pg_stack_base_t;272,9170
typedef char *pg_stack_base_t;pg_stack_base_t274,9195
#define SECURITY_LOCAL_USERID_CHANGE	297,10033
#define SECURITY_RESTRICTED_OPERATION	298,10077
#define SECURITY_NOFORCE_RLS	299,10122
typedef enum BackendType309,10399
	B_INVALID 311,10426
	B_AUTOVAC_LAUNCHER,312,10442
	B_AUTOVAC_WORKER,313,10463
	B_BACKEND,314,10482
	B_BG_WORKER,315,10494
	B_BG_WRITER,316,10508
	B_CHECKPOINTER,317,10522
	B_STARTUP,318,10539
	B_WAL_RECEIVER,319,10551
	B_WAL_SENDER,320,10568
	B_WAL_WRITER,321,10583
	B_ARCHIVER,322,10598
	B_STATS_COLLECTOR,323,10611
	B_LOGGER,324,10631
} BackendType;325,10642
typedef enum ProcessingMode383,13009
	BootstrapProcessing,385,13039
	InitProcessing,386,13108
	NormalProcessing	387,13154
} ProcessingMode;388,13198
#define IsBootstrapProcessingMode(392,13246
#define IsInitProcessingMode(393,13312
#define IsNormalProcessingMode(394,13369
#define GetProcessingMode(396,13430
#define SetProcessingMode(398,13464
	NotAnAuxProcess 415,13889
	CheckerProcess 416,13912
	BootstrapProcess,417,13933
	StartupProcess,418,13952
	BgWriterProcess,419,13969
	CheckpointerProcess,420,13987
	WalWriterProcess,421,14009
	WalReceiverProcess,422,14028
	NUM_AUXPROCTYPES	424,14050
} AuxProcType;425,14090
#define AmBootstrapProcess(429,14141
#define AmStartupProcess(430,14207
#define AmBackgroundWriterProcess(431,14270
#define AmCheckpointerProcess(432,14341
#define AmWalWriterProcess(433,14413
#define AmWalReceiverProcess(434,14479

/home/seinoyu/pgsql/master/postgresql/src/include/fe_utils/connect.h,71
#define CONNECT_H14,415
#define ALWAYS_SECURE_SEARCH_PATH_SQL 25,941

/home/seinoyu/pgsql/master/postgresql/src/include/fe_utils/psqlscan_int.h,1191
#define PSQLSCAN_INT_H45,2441
#define YY_TYPEDEF_YY_BUFFER_STATE55,2762
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE56,2797
#define YY_TYPEDEF_YY_SCANNER_T59,2885
typedef void *yyscan_t;yyscan_t60,2917
typedef struct StackElem69,3221
	YY_BUFFER_STATE buf;71,3248
	char	   *bufstring;bufstring72,3306
	char	   *origstring;origstring73,3370
	char	   *varname;varname74,3432
	struct StackElem *next;next75,3499
} StackElem;76,3524
typedef struct PsqlScanStateData84,3800
	yyscan_t	scanner;86,3835
	PQExpBuffer output_buf;88,3898
	StackElem  *buffer_stack;buffer_stack90,3953
	YY_BUFFER_STATE scanbufhandle;96,4138
	char	   *scanbuf;scanbuf97,4170
	const char *scanline;scanline98,4230
	int			encoding;101,4368
	bool		safe_encoding;102,4416
	bool		std_strings;103,4472
	const char *curline;curline104,4528
	const char *refline;refline105,4594
	int			start_state;112,4860
	int			state_before_str_stop;113,4919
	int			paren_depth;114,4984
	int			xcdepth;115,5042
	char	   *dolqstart;dolqstart116,5105
	const PsqlScanCallbacks *callbacks;callbacks122,5296
	void	   *cb_passthrough;cb_passthrough123,5333
} PsqlScanStateData;124,5359

/home/seinoyu/pgsql/master/postgresql/src/include/fe_utils/archive.h,28
#define FE_ARCHIVE_H14,432

/home/seinoyu/pgsql/master/postgresql/src/include/fe_utils/cancel.h,24
#define CANCEL_H15,415

/home/seinoyu/pgsql/master/postgresql/src/include/fe_utils/string_utils.h,30
#define STRING_UTILS_H17,531

/home/seinoyu/pgsql/master/postgresql/src/include/fe_utils/mbprint.h,100
#define MBPRINT_H14,426
struct lineptr16,445
	unsigned char *ptr;ptr18,462
	int			width;19,483

/home/seinoyu/pgsql/master/postgresql/src/include/fe_utils/psqlscan.h,738
#define PSQLSCAN_H21,744
typedef struct PsqlScanStateData *PsqlScanState;PsqlScanState27,838
	PSCAN_SEMICOLON,32,944
	PSCAN_BACKSLASH,33,1001
	PSCAN_INCOMPLETE,34,1051
	PSCAN_EOL	35,1116
} PsqlScanResult;36,1172
typedef enum _promptStatus39,1233
	PROMPT_READY,41,1262
	PROMPT_CONTINUE,42,1277
	PROMPT_COMMENT,43,1295
	PROMPT_SINGLEQUOTE,44,1312
	PROMPT_DOUBLEQUOTE,45,1333
	PROMPT_DOLLARQUOTE,46,1354
	PROMPT_PAREN,47,1375
	PROMPT_COPY48,1390
} promptStatus_t;49,1403
	PQUOTE_PLAIN,54,1493
	PQUOTE_SQL_LITERAL,55,1546
	PQUOTE_SQL_IDENT,56,1614
	PQUOTE_SHELL_ARG	57,1682
} PsqlScanQuoteType;58,1750
typedef struct PsqlScanCallbacks61,1821
	char	   *(*get_variable)get_variable65,1999
} PsqlScanCallbacks;67,2101

/home/seinoyu/pgsql/master/postgresql/src/include/fe_utils/simple_list.h,902
#define SIMPLE_LIST_H18,619
typedef struct SimpleOidListCell20,642
	struct SimpleOidListCell *next;next22,677
	Oid			val;23,710
} SimpleOidListCell;24,722
typedef struct SimpleOidList26,744
	SimpleOidListCell *head;head28,775
	SimpleOidListCell *tail;tail29,801
} SimpleOidList;30,827
typedef struct SimpleStringListCell32,845
	struct SimpleStringListCell *next;next34,883
	bool		touched;35,919
	char		val[val37,1001
} SimpleStringListCell;38,1070
typedef struct SimpleStringList40,1095
	SimpleStringListCell *head;head42,1129
	SimpleStringListCell *tail;tail43,1158
} SimpleStringList;44,1187
typedef struct SimplePtrListCell46,1208
	struct SimplePtrListCell *next;next48,1243
	void	   *ptr;ptr49,1276
} SimplePtrListCell;50,1291
typedef struct SimplePtrList52,1313
	SimplePtrListCell *head;head54,1344
	SimplePtrListCell *tail;tail55,1370
} SimplePtrList;56,1396

/home/seinoyu/pgsql/master/postgresql/src/include/fe_utils/recovery_gen.h,79
#define RECOVERY_GEN_H12,343
#define MINIMUM_VERSION_FOR_RECOVERY_GUC 21,534

/home/seinoyu/pgsql/master/postgresql/src/include/fe_utils/print.h,3662
#define PRINT_H14,415
#define DEFAULT_PAGER 23,554
#define DEFAULT_PAGER 25,589
enum printFormat28,626
	PRINT_NOTHING 30,645
	PRINT_ALIGNED,31,711
	PRINT_ASCIIDOC,32,727
	PRINT_CSV,33,744
	PRINT_HTML,34,756
	PRINT_LATEX,35,769
	PRINT_LATEX_LONGTABLE,36,783
	PRINT_TROFF_MS,37,807
	PRINT_UNALIGNED,38,824
	PRINT_WRAPPED39,842
typedef struct printTextLineFormat43,910
	const char *hrule;hrule46,1009
	const char *leftvrule;leftvrule47,1063
	const char *midvrule;midvrule48,1127
	const char *rightvrule;rightvrule49,1198
} printTextLineFormat;50,1264
typedef enum printTextRule52,1288
	PRINT_RULE_TOP,55,1381
	PRINT_RULE_MIDDLE,56,1427
	PRINT_RULE_BOTTOM,57,1482
	PRINT_RULE_DATA	58,1533
} printTextRule;59,1592
typedef enum printTextLineWrap61,1610
	PRINT_LINE_WRAP_NONE,64,1675
	PRINT_LINE_WRAP_WRAP,65,1717
	PRINT_LINE_WRAP_NEWLINE	66,1781
} printTextLineWrap;67,1829
typedef struct printTextFormat69,1851
	const char *name;name72,1913
	printTextLineFormat lrule[lrule73,1961
	const char *midvrule_nl;midvrule_nl74,2028
	const char *midvrule_wrap;midvrule_wrap75,2101
	const char *midvrule_blank;midvrule_blank76,2166
	const char *header_nl_left;header_nl_left77,2230
	const char *header_nl_right;header_nl_right78,2289
	const char *nl_left;nl_left79,2348
	const char *nl_right;nl_right80,2401
	const char *wrap_left;wrap_left81,2454
	const char *wrap_right;wrap_right82,2514
	bool		wrap_right_border;83,2574
} printTextFormat;85,2670
typedef enum unicode_linestyle87,2690
	UNICODE_LINESTYLE_SINGLE 89,2723
	UNICODE_LINESTYLE_DOUBLE90,2754
} unicode_linestyle;91,2780
struct separator93,2802
	char	   *separator;separator95,2821
	bool		separator_zero;96,2842
typedef struct printTableOpt99,2869
	enum printFormat format;101,2900
	unsigned short int expanded;102,2947
	unsigned short int border;104,3073
	unsigned short int pager;106,3184
	int			pager_min_lines;108,3304
	bool		tuples_only;110,3404
	bool		start_table;111,3469
	bool		stop_table;112,3530
	bool		default_footer;113,3591
	unsigned long prior_records;114,3653
	const printTextFormat *line_style;line_style115,3722
	struct separator fieldSep;116,3794
	struct separator recordSep;117,3868
	char		csvFieldSep[csvFieldSep118,3944
	bool		numericLocale;119,4004
	char	   *tableAttr;tableAttr121,4099
	int			encoding;122,4159
	int			env_columns;123,4202
	int			columns;124,4263
	unicode_linestyle unicode_border_linestyle;125,4318
	unicode_linestyle unicode_column_linestyle;126,4363
	unicode_linestyle unicode_header_linestyle;127,4408
} printTableOpt;128,4453
typedef struct printTableFooter137,4751
	char	   *data;data139,4785
	struct printTableFooter *next;next140,4801
} printTableFooter;141,4833
typedef struct printTableContent147,4959
	const printTableOpt *opt;opt149,4994
	const char *title;title150,5021
	int			ncolumns;151,5061
	int			nrows;152,5105
	const char **headers;headers153,5147
	const char **header;header154,5217
	const char **cells;cells155,5279
	const char **cell;cell157,5365
	long		cellsadded;158,5424
	bool	   *cellmustfree;cellmustfree159,5481
	printTableFooter *footers;footers160,5550
	printTableFooter *footer;footer161,5612
	char	   *aligns;aligns162,5678
	char	   *align;align164,5773
} printTableContent;165,5834
typedef struct printQueryOpt167,5856
	printTableOpt topt;169,5887
	char	   *nullPrint;nullPrint170,5934
	char	   *title;title171,5989
	char	  **footers;footers172,6029
	bool		translate_header;173,6096
	const bool *translate_columns;translate_columns174,6156
	int			n_translate_columns;176,6252
} printQueryOpt;177,6316

/home/seinoyu/pgsql/master/postgresql/src/include/fe_utils/conditional.h,599
#define CONDITIONAL_H24,881
typedef enum ifState29,962
	IFSTATE_NONE 31,985
	IFSTATE_TRUE,32,1042
	IFSTATE_FALSE,34,1161
	IFSTATE_IGNORED,37,1331
	IFSTATE_ELSE_TRUE,40,1482
	IFSTATE_ELSE_FALSE	42,1598
} ifState;44,1684
typedef struct IfStackElem58,2309
	ifState		if_state;60,2338
	int			query_len;61,2395
	int			paren_depth;62,2461
	struct IfStackElem *next;next63,2526
} IfStackElem;64,2588
typedef struct ConditionalStackData66,2604
	IfStackElem *head;head68,2642
}			ConditionalStackData;69,2662
typedef struct ConditionalStackData *ConditionalStack;ConditionalStack71,2689

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/header.h,283
#define MAXINT 6,40
#define MININT 7,63
#define HEAD 9,87
#define SIZE(11,115
#define SET_SIZE(12,155
#define CAPACITY(13,199
struct among15,240
{   int s_size;16,253
    const symbol * s;17,305
    int substring_i;18,353
    int result;19,415
    int (* function)20,462

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/api.h,323
typedef unsigned char symbol;2,1
struct SN_env 14,422
    symbol * p;15,438
    int c;16,454
    int c; int l;16,454
    int c; int l; int lb;16,454
    int c; int l; int lb; int bra;16,454
    int c; int l; int lb; int bra; int ket;16,454
    symbol * * S;17,498
    int * I;18,516
    unsigned char * B;19,529

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/header.h,258
#define SNOWBALL_HEADR_H23,934
#undef MAXINT34,1296
#undef MININT37,1331
#undef malloc48,1631
#define malloc(50,1652
#undef calloc53,1696
#define calloc(55,1717
#undef realloc58,1773
#define realloc(60,1795
#undef free63,1843
#define free(65,1862

/home/seinoyu/pgsql/master/postgresql/src/include/pgtime.h,456
#define _PGTIME_H14,357
typedef int64 pg_time_t;23,593
struct pg_tm25,619
	int			tm_sec;27,634
	int			tm_min;28,649
	int			tm_hour;29,664
	int			tm_mday;30,680
	int			tm_mon;31,696
	int			tm_year;32,736
	int			tm_wday;33,776
	int			tm_yday;34,792
	int			tm_isdst;35,808
	long int	tm_gmtoff;36,825
	const char *tm_zone;tm_zone37,846
typedef struct pg_tz pg_tz;40,872
typedef struct pg_tzenum pg_tzenum;41,900
#define TZ_STRLEN_MAX 44,1007

/home/seinoyu/pgsql/master/postgresql/src/include/utils/rel.h,6132
#define REL_H15,436
typedef struct LockRelId36,973
	Oid			relId;38,1000
	Oid			dbId;39,1044
} LockRelId;40,1087
typedef struct LockInfoData42,1101
	LockRelId	lockRelId;44,1131
} LockInfoData;45,1153
typedef LockInfoData *LockInfo;LockInfo47,1170
typedef struct RelationData53,1263
	RelFileNode rd_node;55,1293
	struct SMgrRelationData *rd_smgr;rd_smgr57,1412
	int			rd_refcnt;58,1481
	BackendId	rd_backend;59,1522
	bool		rd_islocaltemp;60,1593
	bool		rd_isnailed;61,1656
	bool		rd_isvalid;62,1705
	bool		rd_indexvalid;63,1755
	bool		rd_statvalid;65,1854
	SubTransactionId rd_createSubid;102,3654
	SubTransactionId rd_newRelfilenodeSubid;103,3726
	SubTransactionId rd_firstRelfilenodeSubid;105,3839
	SubTransactionId rd_droppedSubid;107,3950
	Form_pg_class rd_rel;109,4023
	TupleDesc	rd_att;110,4068
	Oid			rd_id;111,4112
	LockInfoData rd_lockInfo;112,4155
	RuleLock   *rd_rules;rd_rules113,4225
	MemoryContext rd_rulescxt;114,4269
	TriggerDesc *trigdesc;trigdesc115,4343
	struct RowSecurityDesc *rd_rsdesc;rd_rsdesc117,4480
	List	   *rd_fkeylist;rd_fkeylist120,4598
	bool		rd_fkeyvalid;121,4667
	PartitionKey rd_partkey;124,4774
	MemoryContext rd_partkeycxt;125,4829
	PartitionDesc rd_partdesc;128,4954
	MemoryContext rd_pdcxt;129,5018
	List	   *rd_partcheck;rd_partcheck132,5140
	bool		rd_partcheckvalid;133,5192
	MemoryContext rd_partcheckcxt;134,5255
	List	   *rd_indexlist;rd_indexlist137,5376
	Oid			rd_pkindex;138,5442
	Oid			rd_replidindex;139,5495
	List	   *rd_statlist;rd_statlist142,5610
	Bitmapset  *rd_indexattr;rd_indexattr145,5722
	Bitmapset  *rd_keyattr;rd_keyattr146,5790
	Bitmapset  *rd_pkattr;rd_pkattr147,5861
	Bitmapset  *rd_idattr;rd_idattr148,5921
	PublicationActions *rd_pubactions;rd_pubactions150,5988
	bytea	   *rd_options;rd_options157,6223
	Oid			rd_amhandler;166,6661
	const struct TableAmRoutine *rd_tableam;rd_tableam171,6758
	Form_pg_index rd_index;174,6855
	struct HeapTupleData *rd_indextuple;rd_indextuple176,6985
	MemoryContext rd_indexcxt;186,7390
	struct IndexAmRoutine *rd_indam;rd_indam188,7520
	Oid		   *rd_opfamily;rd_opfamily189,7582
	Oid		   *rd_opcintype;rd_opcintype190,7650
	RegProcedure *rd_support;rd_support191,7722
	struct FmgrInfo *rd_supportinfo;rd_supportinfo192,7782
	int16	   *rd_indoption;rd_indoption193,7857
	List	   *rd_indexprs;rd_indexprs194,7917
	List	   *rd_indpred;rd_indpred195,7977
	Oid		   *rd_exclops;rd_exclops196,8035
	Oid		   *rd_exclprocs;rd_exclprocs197,8100
	uint16	   *rd_exclstrats;rd_exclstrats198,8167
	Oid		   *rd_indcollation;rd_indcollation199,8240
	bytea	  **rd_opcoptions;rd_opcoptions200,8298
	void	   *rd_amcache;rd_amcache211,8836
	struct FdwRoutine *rd_fdwroutine;rd_fdwroutine222,9156
	Oid			rd_toastoid;233,9740
	struct PgStat_TableStatus *pgstat_info;pgstat_info236,9868
} RelationData;237,9942
typedef struct ForeignKeyCacheInfo254,10624
	NodeTag		type;256,10661
	Oid			conoid;257,10677
	Oid			conrelid;258,10729
	Oid			confrelid;259,10793
	int			nkeys;260,10857
	AttrNumber	conkey[conkey262,10967
	AttrNumber	confkey[confkey263,11035
	Oid			conpfeqop[conpfeqop264,11103
} ForeignKeyCacheInfo;265,11165
typedef struct AutoVacOpts277,11465
	bool		enabled;279,11494
	int			vacuum_threshold;280,11510
	int			vacuum_ins_threshold;281,11535
	int			analyze_threshold;282,11564
	int			vacuum_cost_limit;283,11590
	int			freeze_min_age;284,11616
	int			freeze_max_age;285,11639
	int			freeze_table_age;286,11662
	int			multixact_freeze_min_age;287,11687
	int			multixact_freeze_max_age;288,11720
	int			multixact_freeze_table_age;289,11753
	int			log_min_duration;290,11788
	float8		vacuum_cost_delay;291,11813
	float8		vacuum_scale_factor;292,11841
	float8		vacuum_ins_scale_factor;293,11871
	float8		analyze_scale_factor;294,11905
} AutoVacOpts;295,11936
typedef struct StdRdOptions297,11952
	int32		vl_len_;299,11982
	int			fillfactor;300,12046
	int			toast_tuple_target;302,12181
	AutoVacOpts autovacuum;303,12240
	bool		user_catalog_table;304,12299
	int			parallel_workers;305,12370
	bool		vacuum_index_cleanup;306,12432
	bool		vacuum_truncate;307,12503
} StdRdOptions;308,12571
#define HEAP_MIN_FILLFACTOR	310,12588
#define HEAP_DEFAULT_FILLFACTOR	311,12621
#define RelationGetToastTupleTarget(317,12777
#define RelationGetFillFactor(325,13053
#define RelationGetTargetPageUsage(333,13310
#define RelationGetTargetPageFreeSpace(340,13535
#define RelationIsUsedAsCatalogTable(348,13847
#define RelationGetParallelWorkers(359,14247
typedef enum ViewOptCheckOption364,14451
	VIEW_OPTION_CHECK_OPTION_NOT_SET,366,14485
	VIEW_OPTION_CHECK_OPTION_LOCAL,367,14520
	VIEW_OPTION_CHECK_OPTION_CASCADED368,14553
} ViewOptCheckOption;369,14588
typedef struct ViewOptions375,14670
	int32		vl_len_;377,14699
	bool		security_barrier;378,14763
	ViewOptCheckOption check_option;379,14788
} ViewOptions;380,14822
#define RelationIsSecurityView(387,14967
#define RelationHasCheckOption(397,15366
#define RelationHasLocalCheckOption(408,15778
#define RelationHasCascadedCheckOption(419,16198
#define RelationIsValid(429,16532
#define InvalidRelation 431,16592
#define RelationHasReferenceCountZero(440,16776
#define RelationGetForm(450,16989
#define RelationGetRelid(456,17108
#define RelationGetNumberOfAttributes(462,17262
#define IndexRelationGetNumberOfAttributes(468,17437
#define IndexRelationGetNumberOfKeyAttributes(475,17630
#define RelationGetDescr(482,17799
#define RelationGetRelationName(490,17991
#define RelationGetNamespace(497,18144
#define RelationIsMapped(505,18337
#define RelationOpenSmgr(513,18571
#define RelationCloseSmgr(525,18930
#define RelationGetTargetBlock(541,19357
#define RelationSetTargetBlock(548,19577
#define RelationNeedsWAL(562,19996
#define RelationUsesLocalBuffers(572,20373
#define RELATION_IS_LOCAL(583,20762
#define RELATION_IS_OTHER_TEMP(593,21037
#define RelationIsScannable(604,21406
#define RelationIsPopulated(612,21712
#define RelationIsAccessibleInLogicalDecoding(619,21924
#define RelationIsLogicallyLogged(635,22589

/home/seinoyu/pgsql/master/postgresql/src/include/utils/resowner.h,311
#define RESOWNER_H20,660
typedef struct ResourceOwnerData *ResourceOwner;ResourceOwner27,775
	RESOURCE_RELEASE_BEFORE_LOCKS,48,1531
	RESOURCE_RELEASE_LOCKS,49,1563
	RESOURCE_RELEASE_AFTER_LOCKS50,1588
} ResourceReleasePhase;51,1618
typedef void (*ResourceReleaseCallback)ResourceReleaseCallback57,1765

/home/seinoyu/pgsql/master/postgresql/src/include/utils/sharedtuplestore.h,210
#define SHAREDTUPLESTORE_H14,461
typedef struct SharedTuplestore SharedTuplestore;21,599
typedef struct SharedTuplestoreAccessor SharedTuplestoreAccessor;24,683
#define SHARED_TUPLESTORE_SINGLE_PASS 30,868

/home/seinoyu/pgsql/master/postgresql/src/include/utils/freepage.h,969
#define FREEPAGE_H15,426
typedef struct FreePageSpanLeader FreePageSpanLeader;21,529
typedef struct FreePageBtree FreePageBtree;22,583
typedef struct FreePageManager FreePageManager;23,627
#define FPM_PAGE_SIZE	30,867
#define FPM_NUM_FREELISTS	40,1338
struct FreePageManager48,1650
	RelptrFreePageManager self;50,1675
	RelptrFreePageBtree btree_root;51,1704
	RelptrFreePageSpanLeader btree_recycle;52,1737
	unsigned	btree_depth;53,1778
	unsigned	btree_recycle_count;54,1801
	Size		singleton_first_page;55,1832
	Size		singleton_npages;56,1861
	Size		contiguous_pages;57,1886
	bool		contiguous_pages_dirty;58,1911
	RelptrFreePageSpanLeader freelist[freelist59,1942
	Size		free_pages;62,2079
#define fpm_page_to_pointer(67,2188
#define fpm_pointer_to_page(70,2310
#define fpm_size_to_pages(74,2473
#define fpm_pointer_is_page_aligned(78,2619
#define fpm_relptr_is_page_aligned(80,2730
#define fpm_segment_base(84,2905
#define fpm_largest(88,3055

/home/seinoyu/pgsql/master/postgresql/src/include/utils/jsonpath.h,3262
#define JSONPATH_H15,353
	int32		vl_len_;23,461
	uint32		header;24,525
	char		data[data25,580
} JsonPath;26,616
#define JSONPATH_VERSION	28,629
#define JSONPATH_LAX	29,661
#define JSONPATH_HDRSZ	30,696
#define DatumGetJsonPathP(32,748
#define DatumGetJsonPathPCopy(33,831
#define PG_GETARG_JSONPATH_P(34,922
#define PG_GETARG_JSONPATH_P_COPY(35,994
#define PG_RETURN_JSONPATH_P(36,1073
#define jspIsScalar(38,1129
typedef enum JsonPathItemType43,1246
	jpiNull 45,1278
	jpiString 46,1319
	jpiNumeric 47,1365
	jpiBool 48,1413
	jpiAnd,49,1472
	jpiOr,50,1515
	jpiNot,51,1557
	jpiIsUnknown,52,1589
	jpiEqual,53,1636
	jpiNotEqual,54,1670
	jpiLess,55,1706
	jpiGreater,56,1738
	jpiLessOrEqual,57,1773
	jpiGreaterOrEqual,58,1812
	jpiAdd,59,1853
	jpiSub,60,1885
	jpiMul,61,1917
	jpiDiv,62,1949
	jpiMod,63,1981
	jpiPlus,64,2013
	jpiMinus,65,2040
	jpiAnyArray,66,2068
	jpiAnyKey,67,2095
	jpiIndexArray,68,2120
	jpiAny,69,2162
	jpiKey,70,2186
	jpiCurrent,71,2211
	jpiRoot,72,2236
	jpiVariable,73,2258
	jpiFilter,74,2291
	jpiExists,75,2327
	jpiType,76,2373
	jpiSize,77,2413
	jpiAbs,78,2453
	jpiFloor,79,2492
	jpiCeiling,80,2534
	jpiDouble,81,2580
	jpiDatetime,82,2624
	jpiKeyValue,83,2671
	jpiSubscript,84,2718
	jpiLast,85,2784
	jpiStartsWith,86,2825
	jpiLikeRegex,87,2872
} JsonPathItemType;88,2917
#define JSP_REGEX_ICASE	91,2993
#define JSP_REGEX_DOTALL	92,3054
#define JSP_REGEX_MLINE	93,3118
#define JSP_REGEX_WSPACE	94,3184
#define JSP_REGEX_QUOTE	95,3257
typedef struct JsonPathItem105,3635
	JsonPathItemType type;107,3665
	int32		nextPos;110,3729
	char	   *base;base116,3860
			int32		left;123,3956
			int32		right;124,3972
		}			args;125,3989
		int32		arg;128,4030
			int32		nelems;133,4110
				int32		from;136,4143
				int32		to;137,4160
			}		   *elems;elems138,4175
		}			array;139,4192
			uint32		first;144,4242
			uint32		last;145,4260
		}			anybounds;146,4277
			char	   *data;data150,4308
			int32		datalen;151,4365
		}			value;152,4417
			int32		expr;156,4444
			char	   *pattern;pattern157,4460
			int32		patternlen;158,4481
			uint32		flags;159,4503
		}			like_regex;160,4521
	}			content;161,4539
} JsonPathItem;162,4553
#define jspHasNext(164,4570
typedef struct JsonPathParseItem JsonPathParseItem;184,5330
struct JsonPathParseItem186,5383
	JsonPathItemType type;188,5410
	JsonPathParseItem *next;next189,5434
			JsonPathParseItem *left;left197,5560
			JsonPathParseItem *right;right198,5588
		}			args;199,5617
		JsonPathParseItem *arg;arg202,5658
			int			nelems;207,5750
				JsonPathParseItem *from;from210,5782
				JsonPathParseItem *to;to211,5811
			}		   *elems;elems212,5838
		}			array;213,5855
			uint32		first;218,5905
			uint32		last;219,5923
		}			anybounds;220,5940
			JsonPathParseItem *expr;expr224,5971
			char	   *pattern;pattern225,5999
			uint32		patternlen;226,6059
			uint32		flags;227,6082
		}			like_regex;228,6100
		Numeric numeric;231,6135
		bool		boolean;232,6154
			uint32		len;235,6184
			char	   *val;val236,6200
		}			string;237,6256
	}			value;238,6270
typedef struct JsonPathParseResult241,6286
	JsonPathParseItem *expr;expr243,6323
	bool		lax;244,6349
} JsonPathParseResult;245,6361

/home/seinoyu/pgsql/master/postgresql/src/include/utils/tzparser.h,242
#define TZPARSER_H14,425
typedef struct tzEntry23,637
	char	   *abbrev;abbrev26,685
	char	   *zone;zone27,739
	int			offset;29,864
	bool		is_dst;30,914
	int			lineno;32,1011
	const char *filename;filename33,1026
} tzEntry;34,1049

/home/seinoyu/pgsql/master/postgresql/src/include/utils/varlena.h,25
#define VARLENA_H14,430

/home/seinoyu/pgsql/master/postgresql/src/include/utils/sortsupport.h,665
#define SORTSUPPORT_H53,2775
typedef struct SortSupportData *SortSupport;SortSupport58,2854
typedef struct SortSupportData60,2900
	MemoryContext ssup_cxt;66,3054
	Oid			ssup_collation;67,3115
	bool		ssup_reverse;74,3363
	bool		ssup_nulls_first;75,3413
	AttrNumber	ssup_attno;81,3577
	void	   *ssup_extra;ssup_extra87,3756
	int			(*comparator)comparator106,4610
	bool		abbreviate;155,7292
	Datum		(*abbrev_converter)abbrev_converter172,8102
	bool		(*abbrev_abort)abbrev_abort182,8559
	int			(*abbrev_full_comparator)abbrev_full_comparator191,8931
} SortSupportData;192,9002
ApplySortComparator(200,9195
ApplySortAbbrevFullComparator(238,10012

/home/seinoyu/pgsql/master/postgresql/src/include/utils/dynahash.h,26
#define DYNAHASH_H15,421

/home/seinoyu/pgsql/master/postgresql/src/include/utils/typcache.h,2446
#define TYPCACHE_H17,552
typedef struct DomainConstraintCache DomainConstraintCache;26,745
typedef struct TypeCacheEntry31,906
	Oid			type_id;34,993
	uint32		type_id_hash;36,1038
	int16		typlen;39,1155
	bool		typbyval;40,1171
	char		typalign;41,1188
	char		typstorage;42,1205
	char		typtype;43,1224
	Oid			typrelid;44,1240
	Oid			typelem;45,1257
	Oid			typcollation;46,1273
	Oid			btree_opf;56,1632
	Oid			btree_opintype;57,1691
	Oid			hash_opf;58,1757
	Oid			hash_opintype;59,1814
	Oid			eq_opr;60,1878
	Oid			lt_opr;61,1923
	Oid			gt_opr;62,1969
	Oid			cmp_proc;63,2018
	Oid			hash_proc;64,2072
	Oid			hash_extended_proc;65,2127
	FmgrInfo	eq_opr_finfo;74,2569
	FmgrInfo	cmp_proc_finfo;75,2593
	FmgrInfo	hash_proc_finfo;76,2619
	FmgrInfo	hash_extended_proc_finfo;77,2646
	TupleDesc	tupDesc;88,3091
	uint64		tupDesc_identifier;89,3111
	struct TypeCacheEntry *rngelemtype;rngelemtype97,3400
	Oid			rng_collation;98,3464
	FmgrInfo	rng_cmp_proc_finfo;99,3526
	FmgrInfo	rng_canonical_finfo;100,3582
	FmgrInfo	rng_subdiff_finfo;101,3653
	Oid			domainBaseType;107,3851
	int32		domainBaseTypmod;108,3874
	DomainConstraintCache *domainData;domainData114,4059
	int			flags;117,4153
	struct TypeCacheEnumData *enumData;enumData123,4321
	struct TypeCacheEntry *nextDomain;nextDomain126,4429
} TypeCacheEntry;127,4465
#define TYPECACHE_EQ_OPR	130,4558
#define TYPECACHE_LT_OPR	131,4592
#define TYPECACHE_GT_OPR	132,4626
#define TYPECACHE_CMP_PROC	133,4660
#define TYPECACHE_HASH_PROC	134,4696
#define TYPECACHE_EQ_OPR_FINFO	135,4733
#define TYPECACHE_CMP_PROC_FINFO	136,4772
#define TYPECACHE_HASH_PROC_FINFO	137,4812
#define TYPECACHE_TUPDESC	138,4853
#define TYPECACHE_BTREE_OPFAMILY	139,4888
#define TYPECACHE_HASH_OPFAMILY	140,4928
#define TYPECACHE_RANGE_INFO	141,4968
#define TYPECACHE_DOMAIN_BASE_INFO	142,5005
#define TYPECACHE_DOMAIN_CONSTR_INFO	143,5049
#define TYPECACHE_HASH_EXTENDED_PROC	144,5094
#define TYPECACHE_HASH_EXTENDED_PROC_FINFO	145,5139
#define INVALID_TUPLEDESC_IDENTIFIER 148,5260
typedef struct DomainConstraintRef156,5624
	List	   *constraints;constraints158,5661
	MemoryContext refctx;159,5726
	TypeCacheEntry *tcache;tcache160,5792
	bool		need_exprstate;161,5855
	DomainConstraintCache *dcc;dcc164,5990
	MemoryContextCallback callback;165,6062
} DomainConstraintRef;166,6136
typedef struct SharedRecordTypmodRegistry SharedRecordTypmodRegistry;168,6160

/home/seinoyu/pgsql/master/postgresql/src/include/utils/memdebug.h,463
#define MEMDEBUG_H18,553
#define VALGRIND_CHECK_MEM_IS_DEFINED(23,630
#define VALGRIND_CREATE_MEMPOOL(24,698
#define VALGRIND_DESTROY_MEMPOOL(25,773
#define VALGRIND_MAKE_MEM_DEFINED(26,835
#define VALGRIND_MAKE_MEM_NOACCESS(27,900
#define VALGRIND_MAKE_MEM_UNDEFINED(28,966
#define VALGRIND_MEMPOOL_ALLOC(29,1033
#define VALGRIND_MEMPOOL_FREE(30,1103
#define VALGRIND_MEMPOOL_CHANGE(31,1167
wipe_mem(39,1346
set_sentinel(51,1583
sentinel_ok(61,1775

/home/seinoyu/pgsql/master/postgresql/src/include/utils/lsyscache.h,952
#define LSYSCACHE_H14,455
typedef struct OpBtreeInterpretation21,614
	Oid			opfamily_id;23,653
	int			strategy;24,714
	Oid			oplefttype;25,758
	Oid			oprighttype;26,813
} OpBtreeInterpretation;27,869
typedef enum IOFuncSelector30,944
	IOFunc_input,32,974
	IOFunc_output,33,989
	IOFunc_receive,34,1005
	IOFunc_send35,1022
} IOFuncSelector;36,1035
#define ATTSTATSSLOT_VALUES	39,1091
#define ATTSTATSSLOT_NUMBERS	40,1125
typedef struct AttStatsSlot43,1201
	Oid			staop;46,1253
	Oid			stacoll;47,1307
	Oid			valuetype;49,1417
	Datum	   *values;values50,1472
	int			nvalues;51,1538
	float4	   *numbers;numbers53,1638
	int			nnumbers;54,1706
	void	   *values_arr;values_arr57,1831
	void	   *numbers_arr;numbers_arr58,1890
} AttStatsSlot;59,1950
typedef int32 (*get_attavgwidth_hook_type)get_attavgwidth_hook_type62,2026
#define type_is_array(191,8188
#define type_is_array_domain(193,8335
#define TypeIsToastable(195,8418

/home/seinoyu/pgsql/master/postgresql/src/include/utils/combocid.h,26
#define COMBOCID_H15,420

/home/seinoyu/pgsql/master/postgresql/src/include/utils/inval.h,169
#define INVAL_H15,429
typedef void (*SyscacheCallbackFunction)SyscacheCallbackFunction22,534
typedef void (*RelcacheCallbackFunction)RelcacheCallbackFunction23,619

/home/seinoyu/pgsql/master/postgresql/src/include/utils/inet.h,1428
#define INET_H15,421
	unsigned char family;25,571
	unsigned char bits;26,633
	unsigned char ipaddr[ipaddr27,688
} inet_struct;28,747
#define PGSQL_AF_INET	39,1119
#define PGSQL_AF_INET6	40,1155
	char		vl_len_[vl_len_54,1772
	inet_struct inet_data;55,1832
} inet;56,1856
#define ip_family(71,2548
#define ip_bits(74,2628
#define ip_addr(77,2704
#define ip_addrsize(80,2782
#define ip_maxbits(83,2862
#define SET_INET_VARSIZE(86,2943
typedef struct macaddr94,3127
	unsigned char a;96,3152
	unsigned char b;97,3170
	unsigned char c;98,3188
	unsigned char d;99,3206
	unsigned char e;100,3224
	unsigned char f;101,3242
} macaddr;102,3260
typedef struct macaddr8107,3338
	unsigned char a;109,3364
	unsigned char b;110,3382
	unsigned char c;111,3400
	unsigned char d;112,3418
	unsigned char e;113,3436
	unsigned char f;114,3454
	unsigned char g;115,3472
	unsigned char h;116,3490
} macaddr8;117,3508
#define DatumGetInetPP(122,3553
#define InetPGetDatum(123,3617
#define PG_GETARG_INET_PP(124,3661
#define PG_RETURN_INET_P(125,3725
#define DatumGetInetP(127,3804
#define PG_GETARG_INET_P(128,3860
#define DatumGetMacaddrP(131,3982
#define MacaddrPGetDatum(132,4046
#define PG_GETARG_MACADDR_P(133,4096
#define PG_RETURN_MACADDR_P(134,4164
#define DatumGetMacaddr8P(137,4283
#define Macaddr8PGetDatum(138,4346
#define PG_GETARG_MACADDR8_P(139,4394
#define PG_RETURN_MACADDR8_P(140,4464

/home/seinoyu/pgsql/master/postgresql/src/include/utils/pg_locale.h,411
#define _PG_LOCALE_13,313
#define HAVE_UCOL_STRCOLLUTF8 31,750
#undef HAVE_UCOL_STRCOLLUTF833,788
struct pg_locale_struct82,2524
	char		provider;84,2550
	bool		deterministic;85,2567
		locale_t	lt;89,2620
			const char *locale;locale94,2670
			UCollator  *ucol;ucol95,2693
		}			icu;96,2714
		int			dummy;98,2732
	}			info;99,2795
typedef struct pg_locale_struct *pg_locale_t;pg_locale_t102,2810

/home/seinoyu/pgsql/master/postgresql/src/include/utils/jsonb.h,4086
#define __JSONB_H__13,339
	WJB_DONE,22,517
	WJB_KEY,23,528
	WJB_VALUE,24,538
	WJB_ELEM,25,550
	WJB_BEGIN_ARRAY,26,561
	WJB_END_ARRAY,27,579
	WJB_BEGIN_OBJECT,28,595
	WJB_END_OBJECT29,614
} JsonbIteratorToken;30,630
#define JsonbContainsStrategyNumber	33,700
#define JsonbExistsStrategyNumber	34,739
#define JsonbExistsAnyStrategyNumber	35,776
#define JsonbExistsAllStrategyNumber	36,816
#define JsonbJsonpathExistsStrategyNumber	37,856
#define JsonbJsonpathPredicateStrategyNumber	38,902
#define JGINFLAG_KEY	62,2368
#define JGINFLAG_NULL	63,2430
#define JGINFLAG_BOOL	64,2474
#define JGINFLAG_NUM	65,2521
#define JGINFLAG_STR	66,2567
#define JGINFLAG_HASHED 67,2638
#define JGIN_MAXLENGTH	68,2708
#define DatumGetJsonbP(71,2807
#define DatumGetJsonbPCopy(72,2865
#define JsonbPGetDatum(73,2932
#define PG_GETARG_JSONB_P(74,2977
#define PG_GETARG_JSONB_P_COPY(75,3041
#define PG_RETURN_JSONB_P(76,3114
typedef struct JsonbPair JsonbPair;78,3165
typedef struct JsonbValue JsonbValue;79,3201
typedef uint32 JEntry;144,6825
#define JENTRY_OFFLENMASK	146,6849
#define JENTRY_TYPEMASK	147,6887
#define JENTRY_HAS_OFF	148,6924
#define JENTRY_ISSTRING	151,6998
#define JENTRY_ISNUMERIC	152,7035
#define JENTRY_ISBOOL_FALSE	153,7072
#define JENTRY_ISBOOL_TRUE	154,7112
#define JENTRY_ISNULL	155,7151
#define JENTRY_ISCONTAINER	156,7186
#define JBE_OFFLENFLD(159,7305
#define JBE_HAS_OFF(160,7361
#define JBE_ISSTRING(161,7419
#define JBE_ISNUMERIC(162,7493
#define JBE_ISCONTAINER(163,7569
#define JBE_ISNULL(164,7648
#define JBE_ISBOOL_TRUE(165,7719
#define JBE_ISBOOL_FALSE(166,7798
#define JBE_ISBOOL(167,7879
#define JBE_ADVANCE_OFFSET(170,8018
#define JB_OFFSET_STRIDE	186,8548
typedef struct JsonbContainer198,8994
	uint32		header;200,9026
	JEntry		children[children202,9111
} JsonbContainer;205,9199
#define JB_CMASK	208,9269
#define JB_FSCALAR	209,9327
#define JB_FOBJECT	210,9376
#define JB_FARRAY	211,9409
#define JsonContainerSize(214,9505
#define JsonContainerIsScalar(215,9562
#define JsonContainerIsObject(216,9631
#define JsonContainerIsArray(217,9700
	int32		vl_len_;222,9839
	JsonbContainer root;223,9903
} Jsonb;224,9925
#define JB_ROOT_COUNT(227,10010
#define JB_ROOT_IS_SCALAR(228,10078
#define JB_ROOT_IS_OBJECT(229,10158
#define JB_ROOT_IS_ARRAY(230,10238
enum jbvType233,10318
	jbvNull 236,10353
	jbvString,237,10369
	jbvNumeric,238,10381
	jbvBool,239,10394
	jbvArray 241,10427
	jbvObject,242,10445
	jbvBinary,244,10510
	jbvDatetime 252,10682
struct JsonbValue261,10987
	enum jbvType type;263,11007
		Numeric numeric;267,11068
		bool		boolean;268,11087
			int			len;271,11117
			char	   *val;val272,11131
		}			string;273,11186
			int			nElems;277,11243
			JsonbValue *elems;elems278,11260
			bool		rawScalar;279,11282
		}			array;280,11338
			int			nPairs;284,11393
			JsonbPair  *pairs;pairs285,11435
		}			object;286,11457
			int			len;290,11519
			JsonbContainer *data;data291,11533
		}			binary;292,11558
			Datum		value;296,11628
			Oid			typid;297,11645
			int32		typmod;298,11661
			int			tz;299,11679
		}			datetime;301,11767
	}			val;302,11783
#define IsAJsonbScalar(305,11797
struct JsonbPair319,12312
	JsonbValue	key;321,12331
	JsonbValue	value;322,12376
	uint32		order;323,12422
typedef struct JsonbParseState327,12563
	JsonbValue	contVal;329,12596
	Size		size;330,12617
	struct JsonbParseState *next;next331,12630
} JsonbParseState;332,12661
	JBI_ARRAY_START,340,12857
	JBI_ARRAY_ELEM,341,12875
	JBI_OBJECT_START,342,12892
	JBI_OBJECT_KEY,343,12911
	JBI_OBJECT_VALUE344,12928
} JsonbIterState;345,12946
typedef struct JsonbIterator347,12965
	JsonbContainer *container;container350,13028
	uint32		nElems;351,13056
	bool		isScalar;353,13158
	JEntry	   *children;children354,13209
	char	   *dataProper;dataProper356,13340
	int			curIndex;359,13408
	uint32		curDataOffset;362,13475
	uint32		curValueOffset;369,13691
	JsonbIterState state;372,13738
	struct JsonbIterator *parent;parent374,13762
} JsonbIterator;375,13793

/home/seinoyu/pgsql/master/postgresql/src/include/utils/ps_status.h,27
#define PS_STATUS_H13,288

/home/seinoyu/pgsql/master/postgresql/src/include/utils/rls.h,118
#define RLS_H14,391
enum CheckEnableRlsResult41,1604
	RLS_NONE,43,1632
	RLS_NONE_ENV,44,1643
	RLS_ENABLED45,1658

/home/seinoyu/pgsql/master/postgresql/src/include/utils/arrayaccess.h,312
#define ARRAYACCESS_H15,458
typedef struct array_iter33,1070
	Datum	   *datumptr;datumptr38,1223
	bool	   *isnullptr;isnullptr39,1274
	char	   *dataptr;dataptr42,1372
	bits8	   *bitmapptr;bitmapptr43,1428
	int			bitmask;44,1499
} array_iter;45,1559
array_iter_setup(49,1594
array_iter_next(81,2314

/home/seinoyu/pgsql/master/postgresql/src/include/utils/float.h,743
#define FLOAT_H16,447
#define M_PI 22,552
#define RADIANS_PER_DEGREE 26,638
static const uint32 nan[nan30,785
#define NAN 32,841
extern void float_overflow_error(40,968
get_float8_infinity(93,2726
get_float4_nan(110,3071
get_float8_nan(122,3265
float4_pl(145,3951
float8_pl(157,4171
float4_mi(169,4391
float8_mi(181,4611
float4_mul(193,4831
float8_mul(207,5142
float4_div(221,5450
float8_div(237,5819
float4_eq(261,6387
float8_eq(267,6525
float4_ne(273,6663
float8_ne(279,6801
float4_lt(285,6939
float8_lt(291,7065
float4_le(297,7191
float8_le(303,7318
float4_gt(309,7445
float8_gt(315,7571
float4_ge(321,7697
float8_ge(327,7824
float4_min(333,7953
float8_min(339,8073
float4_max(345,8193
float8_max(351,8313

/home/seinoyu/pgsql/master/postgresql/src/include/utils/spccache.h,26
#define SPCCACHE_H14,401

/home/seinoyu/pgsql/master/postgresql/src/include/utils/regproc.h,205
#define REGPROC_H14,446
#define FORMAT_PROC_INVALID_AS_NULL	19,543
#define FORMAT_PROC_FORCE_QUALIFY	20,608
#define FORMAT_OPERATOR_INVALID_AS_NULL	24,796
#define FORMAT_OPERATOR_FORCE_QUALIFY	25,865

/home/seinoyu/pgsql/master/postgresql/src/include/utils/guc.h,2831
#define GUC_H14,420
#define MAX_KILOBYTES	24,702
#define MAX_KILOBYTES	26,738
#define PG_AUTOCONF_FILENAME	34,949
	PGC_INTERNAL,70,2540
	PGC_POSTMASTER,71,2555
	PGC_SIGHUP,72,2572
	PGC_SU_BACKEND,73,2585
	PGC_BACKEND,74,2602
	PGC_SUSET,75,2616
	PGC_USERSET76,2628
} GucContext;77,2641
	PGC_S_DEFAULT,107,4118
	PGC_S_DYNAMIC_DEFAULT,108,4175
	PGC_S_ENV_VAR,109,4245
	PGC_S_FILE,110,4302
	PGC_S_ARGV,111,4341
	PGC_S_GLOBAL,112,4388
	PGC_S_DATABASE,113,4439
	PGC_S_USER,114,4486
	PGC_S_DATABASE_USER,115,4526
	PGC_S_CLIENT,116,4585
	PGC_S_OVERRIDE,117,4640
	PGC_S_INTERACTIVE,118,4703
	PGC_S_TEST,119,4765
	PGC_S_SESSION	120,4826
} GucSource;121,4862
typedef struct ConfigVariable133,5412
	char	   *name;name135,5444
	char	   *value;value136,5460
	char	   *errmsg;errmsg137,5477
	char	   *filename;filename138,5495
	int			sourceline;139,5515
	bool		ignore;140,5534
	bool		applied;141,5549
	struct ConfigVariable *next;next142,5565
} ConfigVariable;143,5595
struct config_enum_entry164,6467
	const char *name;name166,6494
	int			val;167,6513
	bool		hidden;168,6525
typedef bool (*GucBoolCheckHook)GucBoolCheckHook174,6615
typedef bool (*GucIntCheckHook)GucIntCheckHook175,6696
typedef bool (*GucRealCheckHook)GucRealCheckHook176,6775
typedef bool (*GucStringCheckHook)GucStringCheckHook177,6858
typedef bool (*GucEnumCheckHook)GucEnumCheckHook178,6942
typedef void (*GucBoolAssignHook)GucBoolAssignHook180,7023
typedef void (*GucIntAssignHook)GucIntAssignHook181,7085
typedef void (*GucRealAssignHook)GucRealAssignHook182,7145
typedef void (*GucStringAssignHook)GucStringAssignHook183,7209
typedef void (*GucEnumAssignHook)GucEnumAssignHook184,7280
typedef const char *(*GucShowHook)GucShowHook186,7342
	GUC_ACTION_SET,194,7467
	GUC_ACTION_LOCAL,195,7513
	GUC_ACTION_SAVE	196,7558
} GucAction;197,7624
#define GUC_QUALIFIER_SEPARATOR 199,7638
#define GUC_LIST_INPUT	204,7725
#define GUC_LIST_QUOTE	205,7788
#define GUC_NO_SHOW_ALL	206,7853
#define GUC_NO_RESET_ALL	207,7914
#define GUC_REPORT	208,7976
#define GUC_NOT_IN_SAMPLE	209,8041
#define GUC_DISALLOW_IN_FILE	210,8111
#define GUC_CUSTOM_PLACEHOLDER	211,8182
#define GUC_SUPERUSER_ONLY	212,8258
#define GUC_IS_NAME	213,8323
#define GUC_NOT_WHILE_SEC_REST	214,8389
#define GUC_DISALLOW_IN_AUTO_FILE 215,8466
#define GUC_UNIT_KB	218,8562
#define GUC_UNIT_BLOCKS	219,8620
#define GUC_UNIT_XBLOCKS	220,8678
#define GUC_UNIT_MB	221,8741
#define GUC_UNIT_BYTE	222,8799
#define GUC_UNIT_MEMORY	223,8854
#define GUC_UNIT_MS	225,8922
#define GUC_UNIT_S	226,8986
#define GUC_UNIT_MIN	227,9044
#define GUC_UNIT_TIME	228,9103
#define GUC_EXPLAIN	230,9172
#define GUC_UNIT	232,9231
#define GUC_check_errmsg 411,15337
#define GUC_check_errdetail 415,15457
#define GUC_check_errhint 419,15583

/home/seinoyu/pgsql/master/postgresql/src/include/utils/rangetypes.h,1223
#define RANGETYPES_H15,431
	int32		vl_len_;27,721
	Oid			rangetypid;28,785
} RangeType;30,905
#define RangeTypeGetOid(33,992
#define RANGE_EMPTY	36,1086
#define RANGE_LB_INC	37,1134
#define RANGE_UB_INC	38,1192
#define RANGE_LB_INF	39,1250
#define RANGE_UB_INF	40,1308
#define RANGE_LB_NULL	41,1366
#define RANGE_UB_NULL	42,1431
#define RANGE_CONTAIN_EMPTY 43,1496
#define RANGE_HAS_LBOUND(46,1622
#define RANGE_HAS_UBOUND(50,1745
#define RangeIsEmpty(54,1868
#define RangeIsOrContainsEmpty(55,1935
	Datum		val;62,2136
	bool		infinite;63,2181
	bool		inclusive;64,2227
	bool		lower;65,2286
} RangeBound;66,2343
#define DatumGetRangeTypeP(71,2403
#define DatumGetRangeTypePCopy(72,2470
#define RangeTypePGetDatum(73,2545
#define PG_GETARG_RANGE_P(74,2595
#define PG_GETARG_RANGE_P_COPY(75,2664
#define PG_RETURN_RANGE_P(76,2741
#define RANGESTRAT_BEFORE	80,2951
#define RANGESTRAT_OVERLEFT	81,3001
#define RANGESTRAT_OVERLAPS	82,3057
#define RANGESTRAT_OVERRIGHT	83,3112
#define RANGESTRAT_AFTER	84,3169
#define RANGESTRAT_ADJACENT	85,3219
#define RANGESTRAT_CONTAINS	86,3271
#define RANGESTRAT_CONTAINED_BY	87,3327
#define RANGESTRAT_CONTAINS_ELEM	88,3389
#define RANGESTRAT_EQ	89,3452

/home/seinoyu/pgsql/master/postgresql/src/include/utils/evtcache.h,267
#define EVTCACHE_H15,449
	EVT_DDLCommandStart,22,541
	EVT_DDLCommandEnd,23,563
	EVT_SQLDrop,24,583
	EVT_TableRewrite25,597
} EventTriggerEvent;26,615
	Oid			fnoid;30,654
	char		enabled;31,698
	Bitmapset  *tagset;tagset32,751
} EventTriggerCacheItem;33,811

/home/seinoyu/pgsql/master/postgresql/src/include/utils/pg_rusage.h,130
#define PG_RUSAGE_H15,449
typedef struct PGRUsage27,641
	struct timeval tv;29,667
	struct rusage ru;30,687
} PGRUsage;31,706

/home/seinoyu/pgsql/master/postgresql/src/include/utils/expandeddatum.h,871
#define EXPANDEDDATUM_H45,2233
#define EXPANDED_POINTER_SIZE 48,2336
typedef Size (*EOM_get_flat_size_method)EOM_get_flat_size_method67,3089
typedef void (*EOM_flatten_into_method)EOM_flatten_into_method68,3162
typedef struct ExpandedObjectMethods72,3348
	EOM_get_flat_size_method get_flat_size;74,3387
	EOM_flatten_into_method flatten_into;75,3428
} ExpandedObjectMethods;76,3467
struct ExpandedObjectHeader98,4544
	int32		vl_len_;101,4602
	const ExpandedObjectMethods *eoh_methods;eoh_methods104,4713
	MemoryContext eoh_context;107,4822
	char		eoh_rw_ptr[eoh_rw_ptr110,4914
	char		eoh_ro_ptr[eoh_ro_ptr113,5020
#define EOH_HEADER_MAGIC 127,5759
#define VARATT_IS_EXPANDED_HEADER(128,5789
#define EOHPGetRWDatum(136,6017
#define EOHPGetRODatum(137,6086
#define DatumIsReadWriteExpandedObject(140,6215
#define MakeExpandedObjectReadOnly(144,6373

/home/seinoyu/pgsql/master/postgresql/src/include/utils/cash.h,169
#define CASH_H13,204
typedef int64 Cash;17,239
#define DatumGetCash(20,316
#define CashGetDatum(21,367
#define PG_GETARG_CASH(22,409
#define PG_RETURN_CASH(23,468

/home/seinoyu/pgsql/master/postgresql/src/include/utils/xml.h,599
#define XML_H16,412
typedef struct varlena xmltype;23,536
	XML_STANDALONE_YES,27,584
	XML_STANDALONE_NO,28,605
	XML_STANDALONE_NO_VALUE,29,625
	XML_STANDALONE_OMITTED30,651
}			XmlStandaloneType;31,675
	XMLBINARY_BASE64,35,714
	XMLBINARY_HEX36,733
}			XmlBinaryType;37,748
	PG_XML_STRICTNESS_LEGACY,41,783
	PG_XML_STRICTNESS_WELLFORMED,43,890
	PG_XML_STRICTNESS_ALL	44,954
} PgXmlStrictness;45,1019
typedef struct PgXmlErrorContext PgXmlErrorContext;48,1090
#define DatumGetXmlP(50,1143
#define XmlPGetDatum(51,1202
#define PG_GETARG_XML_P(53,1247
#define PG_RETURN_XML_P(54,1307

/home/seinoyu/pgsql/master/postgresql/src/include/utils/elog.h,2844
#define ELOG_H15,420
#define DEBUG5	20,481
#define DEBUG4	22,575
#define DEBUG3	23,594
#define DEBUG2	24,613
#define DEBUG1	25,632
#define LOG	26,689
#define LOG_SERVER_ONLY 28,790
#define COMMERROR	30,895
#define INFO	33,1050
#define NOTICE	37,1272
#define WARNING	40,1419
#define ERROR	43,1591
#define PGERROR	50,1899
#define FATAL	52,1926
#define PANIC	53,1980
#define PGSIXBIT(59,2173
#define PGUNSIXBIT(60,2216
#define MAKE_SQLSTATE(62,2264
#define ERRCODE_TO_CATEGORY(67,2500
#define ERRCODE_IS_CATEGORY(68,2558
#define pg_prevent_errno_in_scope(83,3260
#define pg_prevent_errno_in_scope(85,3409
#define pg_prevent_errno_in_scope(87,3485
#define ereport_domain(124,5190
#define ereport_domain(133,5517
#define ereport(144,5847
#define TEXTDOMAIN 147,5928
extern int	errmsg(157,6211
#define errcontext	185,7564
#define elog(214,8376
typedef struct ErrorContextCallback226,8751
	struct ErrorContextCallback *previous;previous228,8789
	void		(*callback)callback229,8829
	void	   *arg;arg230,8861
} ErrorContextCallback;231,8876
#define PG_TRY(295,11236
#define PG_CATCH(305,11553
#define PG_FINALLY(312,11690
#define PG_END_TRY(320,11854
#define PG_RE_THROW(333,12215
#define PG_RE_THROW(336,12261
typedef struct ErrorData351,12666
	int			elevel;353,12693
	bool		output_to_server;354,12728
	bool		output_to_client;355,12786
	bool		show_funcname;356,12840
	bool		hide_stmt;357,12901
	bool		hide_ctx;358,12963
	const char *filename;filename359,13022
	int			lineno;360,13079
	const char *funcname;funcname361,13129
	const char *domain;domain362,13186
	const char *context_domain;context_domain363,13230
	int			sqlerrcode;364,13300
	char	   *message;message365,13343
	char	   *detail;detail366,13404
	char	   *detail_log;detail_log367,13451
	char	   *hint;hint368,13521
	char	   *context;context369,13558
	char	   *backtrace;backtrace370,13600
	const char *message_id;message_id371,13638
	char	   *schema_name;schema_name372,13709
	char	   *table_name;table_name373,13753
	char	   *column_name;column_name374,13796
	char	   *datatype_name;datatype_name375,13840
	char	   *constraint_name;constraint_name376,13888
	int			cursorpos;377,13940
	int			internalpos;378,13996
	char	   *internalquery;internalquery379,14054
	int			saved_errno;380,14120
	struct MemoryContextData *assoc_context;assoc_context383,14220
} ErrorData;384,14262
extern void ReThrowError(390,14430
typedef void (*emit_log_hook_type)emit_log_hook_type397,14718
	PGERROR_TERSE,405,14878
	PGERROR_DEFAULT,406,14930
	PGERROR_VERBOSE	407,14974
}			PGErrorVerbosity;408,15021
#define LOG_DESTINATION_STDERR	418,15273
#define LOG_DESTINATION_SYSLOG	419,15307
#define LOG_DESTINATION_EVENTLOG 420,15341
#define LOG_DESTINATION_CSVLOG	421,15376
extern void write_stderr(437,15827

/home/seinoyu/pgsql/master/postgresql/src/include/utils/datetime.h,3461
#define DATETIME_H17,518
#define DAGO	36,1037
#define DCURRENT	37,1058
#define EPOCH	38,1086
#define INVALID	39,1110
#define EARLY	40,1138
#define LATE	41,1166
#define NOW	42,1192
#define TODAY	43,1213
#define TOMORROW	44,1237
#define YESTERDAY	45,1266
#define ZULU	46,1297
#define DMICROSEC	48,1320
#define DMILLISEC	49,1349
#define DSECOND	50,1378
#define DMINUTE	51,1405
#define DHOUR	52,1432
#define DDAY	53,1455
#define DWEEK	54,1476
#define DMONTH	55,1499
#define DQUARTER	56,1524
#define DYEAR	57,1552
#define DDECADE	58,1575
#define DCENTURY	59,1602
#define DMILLENNIUM	60,1630
#define DA_D	61,1664
#define DB_C	62,1684
#define DTIMEZONE	63,1704
#define AM	72,1859
#define PM	73,1873
#define HR24	74,1887
#define AD	76,1903
#define BC	77,1917
#define RESERV	91,2392
#define MONTH	92,2409
#define YEAR	93,2425
#define DAY	94,2440
#define JULIAN	95,2455
#define TZ	96,2472
#define DTZ	97,2530
#define DYNTZ	98,2588
#define IGNORE_DTF	99,2643
#define AMPM	100,2664
#define HOUR	101,2679
#define MINUTE	102,2695
#define SECOND	103,2713
#define MILLISECOND 104,2731
#define MICROSECOND 105,2754
#define DOY	106,2777
#define DOW	107,2793
#define UNITS	108,2809
#define ADBC	109,2826
#define AGO	111,2882
#define ABS_BEFORE	112,2898
#define ABS_AFTER	113,2921
#define ISODATE 115,2985
#define ISOTIME 116,3004
#define WEEK	118,3066
#define DECADE	119,3083
#define CENTURY	120,3102
#define MILLENNIUM	121,3122
#define DTZMOD	123,3205
#define UNKNOWN_FIELD	125,3303
#define DTK_NUMBER	142,3963
#define DTK_STRING	143,3985
#define DTK_DATE	145,4008
#define DTK_TIME	146,4028
#define DTK_TZ	147,4048
#define DTK_AGO	148,4067
#define DTK_SPECIAL	150,4088
#define DTK_EARLY	151,4111
#define DTK_LATE	152,4132
#define DTK_EPOCH	153,4153
#define DTK_NOW	154,4175
#define DTK_YESTERDAY	155,4196
#define DTK_TODAY	156,4221
#define DTK_TOMORROW	157,4243
#define DTK_ZULU	158,4267
#define DTK_DELTA	160,4289
#define DTK_SECOND	161,4311
#define DTK_MINUTE	162,4334
#define DTK_HOUR	163,4357
#define DTK_DAY	164,4378
#define DTK_WEEK	165,4399
#define DTK_MONTH	166,4420
#define DTK_QUARTER	167,4442
#define DTK_YEAR	168,4466
#define DTK_DECADE	169,4487
#define DTK_CENTURY	170,4510
#define DTK_MILLENNIUM	171,4534
#define DTK_MILLISEC	172,4560
#define DTK_MICROSEC	173,4584
#define DTK_JULIAN	174,4608
#define DTK_DOW	176,4632
#define DTK_DOY	177,4653
#define DTK_TZ_HOUR	178,4674
#define DTK_TZ_MINUTE	179,4698
#define DTK_ISOYEAR	180,4723
#define DTK_ISODOW	181,4747
#define DTK_M(188,4822
#define DTK_ALL_SECS_M	191,4914
#define DTK_DATE_M	192,4995
#define DTK_TIME_M	193,5057
#define MAXDATELEN	201,5429
#define MAXDATEFIELDS	203,5510
#define TOKMAXLEN	205,5586
	char		token[token210,5675
	char		type;211,5732
	int32		value;212,5780
} datetkn;213,5827
typedef struct TimeZoneAbbrevTable216,5901
	Size		tblsize;218,5938
	int			numabbrevs;219,5998
	datetkn		abbrevs[abbrevs220,6061
} TimeZoneAbbrevTable;222,6162
typedef struct DynamicZoneAbbrev225,6263
	pg_tz	   *tz;tz227,6298
	char		zone[zone228,6348
} DynamicZoneAbbrev;229,6415
#define FMODULO(238,6580
#define TMODULO(249,6925
#define isleap(271,7580
#define DTERR_BAD_FORMAT	280,7913
#define DTERR_FIELD_OVERFLOW	281,7944
#define DTERR_MD_FIELD_OVERFLOW 282,7978
#define DTERR_INTERVAL_OVERFLOW 283,8051
#define DTERR_TZDISP_OVERFLOW	284,8088
extern void DateTimeParseError(307,9049

/home/seinoyu/pgsql/master/postgresql/src/include/utils/hsearch.h,1542
#define HSEARCH_H15,449
typedef uint32 (*HashValueFunc)HashValueFunc21,520
typedef int (*HashCompareFunc)HashCompareFunc29,854
typedef void *(*HashCopyFunc)HashCopyFunc37,1122
typedef void *(*HashAllocFunc)HashAllocFunc44,1389
typedef struct HASHELEMENT51,1676
	struct HASHELEMENT *link;link53,1705
	uint32		hashvalue;54,1772
} HASHELEMENT;55,1835
typedef struct HASHHDR HASHHDR;58,1929
typedef struct HTAB HTAB;61,2041
typedef struct HASHCTL65,2175
	long		num_partitions;67,2200
	long		ssize;68,2263
	long		dsize;69,2298
	long		max_dsize;70,2345
	long		ffactor;71,2408
	Size		keysize;72,2443
	Size		entrysize;73,2491
	HashValueFunc hash;74,2549
	HashCompareFunc match;75,2592
	HashCopyFunc keycopy;76,2647
	HashAllocFunc alloc;77,2698
	MemoryContext hcxt;78,2744
	HASHHDR    *hctl;hctl79,2811
} HASHCTL;80,2871
#define HASH_PARTITION	83,2937
#define HASH_SEGMENT	84,3013
#define HASH_DIRSIZE	85,3064
#define HASH_FFACTOR	86,3135
#define HASH_ELEM	87,3185
#define HASH_BLOBS	88,3243
#define HASH_FUNCTION	89,3317
#define HASH_COMPARE	90,3383
#define HASH_KEYCOPY	91,3454
#define HASH_ALLOC	92,3526
#define HASH_CONTEXT	93,3580
#define HASH_SHARED_MEM 94,3644
#define HASH_ATTACH	95,3711
#define HASH_FIXED_SIZE 96,3768
#define NO_MAX_DSIZE	100,3891
	HASH_FIND,105,3964
	HASH_ENTER,106,3976
	HASH_REMOVE,107,3989
	HASH_ENTER_NULL108,4003
} HASHACTION;109,4020
	HTAB	   *hashp;hashp114,4123
	uint32		curBucket;115,4140
	HASHELEMENT *curEntry;curEntry116,4191
} HASH_SEQ_STATUS;117,4246

/home/seinoyu/pgsql/master/postgresql/src/include/utils/aclchk_internal.h,340
#define ACLCHK_INTERNAL_H13,399
	bool		is_grant;33,1212
	ObjectType	objtype;34,1229
	List	   *objects;objects35,1250
	bool		all_privs;36,1269
	AclMode		privileges;37,1287
	List	   *col_privs;col_privs38,1309
	List	   *grantees;grantees39,1330
	bool		grant_option;40,1350
	DropBehavior behavior;41,1371
} InternalGrant;42,1395

/home/seinoyu/pgsql/master/postgresql/src/include/utils/ascii.h,25
#define _ASCII_H_12,294

/home/seinoyu/pgsql/master/postgresql/src/include/utils/help_config.h,62
#define HELP_CONFIG_H 13,369
extern void GucInfoMain(15,394

/home/seinoyu/pgsql/master/postgresql/src/include/utils/syscache.h,2631
#define SYSCACHE_H17,520
enum SysCacheIdentifier32,889
	AGGFNOID 34,915
	AMNAME,35,930
	AMOID,36,939
	AMOPOPID,37,947
	AMOPSTRATEGY,38,958
	AMPROCNUM,39,973
	ATTNAME,40,985
	ATTNUM,41,995
	AUTHMEMMEMROLE,42,1004
	AUTHMEMROLEMEM,43,1021
	AUTHNAME,44,1038
	AUTHOID,45,1049
	CASTSOURCETARGET,46,1059
	CLAAMNAMENSP,47,1078
	CLAOID,48,1093
	COLLNAMEENCNSP,49,1102
	COLLOID,50,1119
	CONDEFAULT,51,1129
	CONNAMENSP,52,1142
	CONSTROID,53,1155
	CONVOID,54,1167
	DATABASEOID,55,1177
	DEFACLROLENSPOBJ,56,1191
	ENUMOID,57,1210
	ENUMTYPOIDNAME,58,1220
	EVENTTRIGGERNAME,59,1237
	EVENTTRIGGEROID,60,1256
	FOREIGNDATAWRAPPERNAME,61,1274
	FOREIGNDATAWRAPPEROID,62,1299
	FOREIGNSERVERNAME,63,1323
	FOREIGNSERVEROID,64,1343
	FOREIGNTABLEREL,65,1362
	INDEXRELID,66,1380
	LANGNAME,67,1393
	LANGOID,68,1404
	NAMESPACENAME,69,1414
	NAMESPACEOID,70,1430
	OPERNAMENSP,71,1445
	OPEROID,72,1459
	OPFAMILYAMNAMENSP,73,1469
	OPFAMILYOID,74,1489
	PARTRELID,75,1503
	PROCNAMEARGSNSP,76,1515
	PROCOID,77,1533
	PUBLICATIONNAME,78,1543
	PUBLICATIONOID,79,1561
	PUBLICATIONREL,80,1578
	PUBLICATIONRELMAP,81,1595
	RANGETYPE,82,1615
	RELNAMENSP,83,1627
	RELOID,84,1640
	REPLORIGIDENT,85,1649
	REPLORIGNAME,86,1665
	RULERELNAME,87,1680
	SEQRELID,88,1694
	STATEXTDATASTXOID,89,1705
	STATEXTNAMENSP,90,1725
	STATEXTOID,91,1742
	STATRELATTINH,92,1755
	SUBSCRIPTIONNAME,93,1771
	SUBSCRIPTIONOID,94,1790
	SUBSCRIPTIONRELMAP,95,1808
	TABLESPACEOID,96,1829
	TRFOID,97,1845
	TRFTYPELANG,98,1854
	TSCONFIGMAP,99,1868
	TSCONFIGNAMENSP,100,1882
	TSCONFIGOID,101,1900
	TSDICTNAMENSP,102,1914
	TSDICTOID,103,1930
	TSPARSERNAMENSP,104,1942
	TSPARSEROID,105,1960
	TSTEMPLATENAMENSP,106,1974
	TSTEMPLATEOID,107,1994
	TYPENAMENSP,108,2010
	TYPEOID,109,2024
	USERMAPPINGOID,110,2034
	USERMAPPINGUSERSERVER111,2051
#define SysCacheSize 113,2075
#define SearchSysCacheCopy1(174,4387
#define SearchSysCacheCopy2(176,4476
#define SearchSysCacheCopy3(178,4574
#define SearchSysCacheCopy4(180,4681
#define SearchSysCacheExists1(183,4798
#define SearchSysCacheExists2(185,4891
#define SearchSysCacheExists3(187,4993
#define SearchSysCacheExists4(189,5104
#define GetSysCacheOid1(192,5225
#define GetSysCacheOid2(194,5322
#define GetSysCacheOid3(196,5428
#define GetSysCacheOid4(198,5543
#define GetSysCacheHashValue1(201,5668
#define GetSysCacheHashValue2(203,5761
#define GetSysCacheHashValue3(205,5863
#define GetSysCacheHashValue4(207,5974
#define SearchSysCacheList1(210,6095
#define SearchSysCacheList2(212,6184
#define SearchSysCacheList3(214,6282
#define ReleaseSysCacheList(217,6390

/home/seinoyu/pgsql/master/postgresql/src/include/utils/index_selfuncs.h,32
#define INDEX_SELFUNCS_H20,715

/home/seinoyu/pgsql/master/postgresql/src/include/utils/plancache.h,2146
#define PLANCACHE_H16,446
	PLAN_CACHE_MODE_AUTO,32,773
	PLAN_CACHE_MODE_FORCE_GENERIC_PLAN,33,796
	PLAN_CACHE_MODE_FORCE_CUSTOM_PLAN34,833
}			PlanCacheMode;35,868
#define CACHEDPLANSOURCE_MAGIC	40,937
#define CACHEDPLAN_MAGIC	41,979
#define CACHEDEXPR_MAGIC	42,1016
typedef struct CachedPlanSource96,4097
	int			magic;98,4131
	struct RawStmt *raw_parse_tree;raw_parse_tree99,4189
	const char *query_string;query_string100,4260
	CommandTag	commandTag;101,4314
	Oid		   *param_types;param_types102,4356
	int			num_params;103,4423
	ParserSetupHook parserSetup;104,4477
	void	   *parserSetupArg;parserSetupArg105,4547
	int			cursor_options;106,4573
	bool		fixed_result;107,4635
	TupleDesc	resultDesc;108,4697
	MemoryContext context;109,4769
	List	   *query_list;query_list111,4909
	List	   *relationOids;relationOids112,4979
	List	   *invalItems;invalItems113,5049
	struct OverrideSearchPath *search_path;search_path114,5116
	MemoryContext query_context;116,5219
	Oid			rewriteRoleId;117,5290
	bool		rewriteRowSecurity;118,5347
	bool		dependsOnRLS;119,5413
	struct CachedPlan *gplan;gplan121,5556
	bool		is_oneshot;123,5649
	bool		is_complete;124,5699
	bool		is_saved;125,5759
	bool		is_valid;126,5818
	int			generation;127,5877
	dlist_node	node;129,6016
	double		generic_cost;131,6138
	double		total_custom_cost;132,6208
	int64		num_custom_plans;133,6276
	int64		num_generic_plans;134,6344
} CachedPlanSource;135,6396
typedef struct CachedPlan147,6976
	int			magic;149,7004
	List	   *stmt_list;stmt_list150,7056
	bool		is_oneshot;151,7105
	bool		is_saved;152,7155
	bool		is_valid;153,7218
	Oid			planRoleId;154,7276
	bool		dependsOnRole;155,7335
	TransactionId saved_xmin;156,7394
	int			generation;158,7500
	int			refcount;159,7567
	MemoryContext context;160,7631
} CachedPlan;161,7697
typedef struct CachedExpression175,8445
	int			magic;177,8479
	Node	   *expr;expr178,8531
	bool		is_valid;179,8582
	List	   *relationOids;relationOids181,8706
	List	   *invalItems;invalItems182,8774
	MemoryContext context;183,8841
	dlist_node	node;184,8913
} CachedExpression;185,8980

/home/seinoyu/pgsql/master/postgresql/src/include/utils/pg_lsn.h,140
#define PG_LSN_H16,457
#define DatumGetLSN(21,523
#define LSNGetDatum(22,578
#define PG_GETARG_LSN(24,631
#define PG_RETURN_LSN(25,689

/home/seinoyu/pgsql/master/postgresql/src/include/utils/pidfile.h,499
#define UTILS_PIDFILE_H14,456
#define LOCK_FILE_LINE_PID	37,1331
#define LOCK_FILE_LINE_DATA_DIR	38,1362
#define LOCK_FILE_LINE_START_TIME	39,1397
#define LOCK_FILE_LINE_PORT	40,1433
#define LOCK_FILE_LINE_SOCKET_DIR	41,1465
#define LOCK_FILE_LINE_LISTEN_ADDR	42,1501
#define LOCK_FILE_LINE_SHMEM_KEY	43,1538
#define LOCK_FILE_LINE_PM_STATUS	44,1573
#define PM_STATUS_STARTING	51,1810
#define PM_STATUS_STOPPING	52,1873
#define PM_STATUS_READY	53,1939
#define PM_STATUS_STANDBY	54,2004

/home/seinoyu/pgsql/master/postgresql/src/include/utils/datum.h,23
#define DATUM_H19,736

/home/seinoyu/pgsql/master/postgresql/src/include/utils/guc_tables.h,4617
#define GUC_TABLES_H 15,412
enum config_type22,509
	PGC_BOOL,24,528
	PGC_INT,25,539
	PGC_REAL,26,549
	PGC_STRING,27,560
	PGC_ENUM28,573
union config_var_val31,587
	bool		boolval;33,610
	int			intval;34,626
	double		realval;35,641
	char	   *stringval;stringval36,659
	int			enumval;37,680
typedef struct config_var_value44,858
	union config_var_val val;46,892
	void	   *extra;extra47,919
} config_var_value;48,936
enum config_group53,1031
	UNGROUPED,55,1051
	FILE_LOCATIONS,56,1063
	CONN_AUTH,57,1080
	CONN_AUTH_SETTINGS,58,1092
	CONN_AUTH_AUTH,59,1113
	CONN_AUTH_SSL,60,1130
	RESOURCES,61,1146
	RESOURCES_MEM,62,1158
	RESOURCES_DISK,63,1174
	RESOURCES_KERNEL,64,1191
	RESOURCES_VACUUM_DELAY,65,1210
	RESOURCES_BGWRITER,66,1235
	RESOURCES_ASYNCHRONOUS,67,1256
	WAL,68,1281
	WAL_SETTINGS,69,1287
	WAL_CHECKPOINTS,70,1302
	WAL_ARCHIVING,71,1320
	WAL_ARCHIVE_RECOVERY,72,1336
	WAL_RECOVERY_TARGET,73,1359
	REPLICATION,74,1381
	REPLICATION_SENDING,75,1395
	REPLICATION_PRIMARY,76,1417
	REPLICATION_STANDBY,77,1439
	REPLICATION_SUBSCRIBERS,78,1461
	QUERY_TUNING,79,1487
	QUERY_TUNING_METHOD,80,1502
	QUERY_TUNING_COST,81,1524
	QUERY_TUNING_GEQO,82,1544
	QUERY_TUNING_OTHER,83,1564
	LOGGING,84,1585
	LOGGING_WHERE,85,1595
	LOGGING_WHEN,86,1611
	LOGGING_WHAT,87,1626
	PROCESS_TITLE,88,1641
	STATS,89,1657
	STATS_MONITORING,90,1665
	STATS_COLLECTOR,91,1684
	AUTOVACUUM,92,1702
	CLIENT_CONN,93,1715
	CLIENT_CONN_STATEMENT,94,1729
	CLIENT_CONN_LOCALE,95,1753
	CLIENT_CONN_PRELOAD,96,1774
	CLIENT_CONN_OTHER,97,1796
	LOCK_MANAGEMENT,98,1816
	COMPAT_OPTIONS,99,1834
	COMPAT_OPTIONS_PREVIOUS,100,1851
	COMPAT_OPTIONS_CLIENT,101,1877
	ERROR_HANDLING_OPTIONS,102,1901
	PRESET_OPTIONS,103,1926
	CUSTOM_OPTIONS,104,1943
	DEVELOPER_OPTIONS105,1960
	GUC_SAVE,115,2178
	GUC_SET,116,2235
	GUC_LOCAL,117,2289
	GUC_SET_LOCAL	118,2345
} GucStackState;119,2404
typedef struct guc_stack121,2422
	struct guc_stack *prev;prev123,2449
	int			nest_level;124,2509
	GucStackState state;125,2572
	GucSource	source;126,2616
	GucContext	scontext;128,2744
	GucContext	masked_scontext;129,2806
	config_var_value prior;130,2875
	config_var_value masked;131,2934
} GucStack;132,3001
struct config_generic146,3595
	const char *name;name149,3683
	GucContext	context;150,3743
	enum config_group group;151,3808
	const char *short_desc;short_desc152,3879
	const char *long_desc;long_desc153,3950
	int			flags;154,4019
	enum config_type vartype;156,4110
	int			status;157,4182
	GucSource	source;158,4228
	GucSource	reset_source;159,4290
	GucContext	scontext;160,4347
	GucContext	reset_scontext;161,4411
	GucStack   *stack;stack162,4478
	void	   *extra;extra163,4527
	char	   *sourcefile;sourcefile164,4593
	int			sourceline;166,4695
#define GUC_IS_IN_FILE	170,4778
#define GUC_PENDING_RESTART 175,4996
struct config_bool180,5080
	struct config_generic gen;182,5101
	bool	   *variable;variable184,5193
	bool		boot_val;185,5213
	GucBoolCheckHook check_hook;186,5230
	GucBoolAssignHook assign_hook;187,5260
	GucShowHook show_hook;188,5292
	bool		reset_val;190,5364
	void	   *reset_extra;reset_extra191,5382
struct config_int194,5409
	struct config_generic gen;196,5429
	int		   *variable;variable198,5521
	int			boot_val;199,5541
	int			min;200,5558
	int			max;201,5570
	GucIntCheckHook check_hook;202,5582
	GucIntAssignHook assign_hook;203,5611
	GucShowHook show_hook;204,5642
	int			reset_val;206,5714
	void	   *reset_extra;reset_extra207,5732
struct config_real210,5759
	struct config_generic gen;212,5780
	double	   *variable;variable214,5872
	double		boot_val;215,5894
	double		min;216,5913
	double		max;217,5927
	GucRealCheckHook check_hook;218,5941
	GucRealAssignHook assign_hook;219,5971
	GucShowHook show_hook;220,6003
	double		reset_val;222,6075
	void	   *reset_extra;reset_extra223,6095
struct config_string226,6122
	struct config_generic gen;228,6145
	char	  **variable;variable230,6237
	const char *boot_val;boot_val231,6257
	GucStringCheckHook check_hook;232,6280
	GucStringAssignHook assign_hook;233,6312
	GucShowHook show_hook;234,6346
	char	   *reset_val;reset_val236,6418
	void	   *reset_extra;reset_extra237,6439
struct config_enum240,6466
	struct config_generic gen;242,6487
	int		   *variable;variable244,6579
	int			boot_val;245,6599
	const struct config_enum_entry *options;options246,6616
	GucEnumCheckHook check_hook;247,6658
	GucEnumAssignHook assign_hook;248,6688
	GucShowHook show_hook;249,6720
	int			reset_val;251,6792
	void	   *reset_extra;reset_extra252,6810

/home/seinoyu/pgsql/master/postgresql/src/include/utils/timeout.h,751
#define TIMEOUT_H15,454
typedef enum TimeoutId23,660
	STARTUP_PACKET_TIMEOUT,26,719
	DEADLOCK_TIMEOUT,27,744
	LOCK_TIMEOUT,28,763
	STATEMENT_TIMEOUT,29,778
	STANDBY_DEADLOCK_TIMEOUT,30,798
	STANDBY_TIMEOUT,31,825
	STANDBY_LOCK_TIMEOUT,32,843
	IDLE_IN_TRANSACTION_SESSION_TIMEOUT,33,866
	USER_TIMEOUT,35,947
	MAX_TIMEOUTS 37,1003
} TimeoutId;38,1022
typedef void (*timeout_handler_proc)timeout_handler_proc41,1070
typedef enum TimeoutType46,1184
	TMPARAM_AFTER,48,1211
	TMPARAM_AT49,1227
} TimeoutType;50,1239
	TimeoutId	id;54,1272
	TimeoutType type;55,1311
	int			delay_ms;56,1366
	TimestampTz fin_time;57,1418
} EnableTimeoutParams;58,1473
	TimeoutId	id;65,1583
	bool		keep_indicator;66,1624
} DisableTimeoutParams;67,1678

/home/seinoyu/pgsql/master/postgresql/src/include/utils/geo_decls.h,2030
#define GEO_DECLS_H19,626
#define EPSILON	30,897
#define FPzero(33,941
#define FPeq(34,983
#define FPne(35,1033
#define FPlt(36,1082
#define FPle(37,1125
#define FPgt(38,1169
#define FPge(39,1212
#define FPzero(41,1262
#define FPeq(42,1294
#define FPne(43,1328
#define FPlt(44,1362
#define FPle(45,1395
#define FPgt(46,1429
#define FPge(47,1462
#define HYPOT(50,1504
	float8		x,57,1721
				y;58,1733
} Point;59,1740
	Point		p[p67,1963
} LSEG;68,1977
	int32		vl_len_;76,2186
	int32		npts;77,2250
	int32		closed;78,2264
	int32		dummy;79,2314
	Point		p[p80,2369
} PATH;81,2403
	float8		A,89,2631
				B,90,2643
				C;91,2650
} LINE;92,2657
	Point		high,101,2923
				low;102,2937
} BOX;103,2968
	int32		vl_len_;112,3282
	int32		npts;113,3346
	BOX			boundbox;114,3360
	Point		p[p115,3377
} POLYGON;116,3411
	Point		center;123,3636
	float8		radius;124,3652
} CIRCLE;125,3669
#define DatumGetPointP(134,3824
#define PointPGetDatum(135,3882
#define PG_GETARG_POINT_P(136,3928
#define PG_RETURN_POINT_P(137,3992
#define DatumGetLsegP(139,4047
#define LsegPGetDatum(140,4102
#define PG_GETARG_LSEG_P(141,4146
#define PG_RETURN_LSEG_P(142,4208
#define DatumGetPathP(144,4261
#define DatumGetPathPCopy(145,4319
#define PathPGetDatum(146,4385
#define PG_GETARG_PATH_P(147,4431
#define PG_GETARG_PATH_P_COPY(148,4495
#define PG_RETURN_PATH_P(149,4566
#define DatumGetLineP(151,4621
#define LinePGetDatum(152,4676
#define PG_GETARG_LINE_P(153,4720
#define PG_RETURN_LINE_P(154,4782
#define DatumGetBoxP(156,4835
#define BoxPGetDatum(157,4891
#define PG_GETARG_BOX_P(158,4937
#define PG_RETURN_BOX_P(159,4997
#define DatumGetPolygonP(161,5048
#define DatumGetPolygonPCopy(162,5112
#define PolygonPGetDatum(163,5184
#define PG_GETARG_POLYGON_P(164,5233
#define PG_GETARG_POLYGON_P_COPY(165,5302
#define PG_RETURN_POLYGON_P(166,5379
#define DatumGetCircleP(168,5439
#define CirclePGetDatum(169,5500
#define PG_GETARG_CIRCLE_P(170,5548
#define PG_RETURN_CIRCLE_P(171,5614

/home/seinoyu/pgsql/master/postgresql/src/include/utils/bytea.h,105
#define BYTEA_H15,419
	BYTEA_OUTPUT_ESCAPE,21,453
	BYTEA_OUTPUT_HEX22,475
}			ByteaOutputType;23,493

/home/seinoyu/pgsql/master/postgresql/src/include/utils/jsonfuncs.h,341
#define JSONFUNCS_H15,425
typedef enum JsonToIndex24,620
	jtiKey 26,647
	jtiString 27,663
	jtiNumeric 28,682
	jtiBool 29,702
	jtiAll 30,719
} JsonToIndex;31,771
typedef void (*JsonIterateStringValuesAction)JsonIterateStringValuesAction34,874
typedef text *(*JsonTransformStringValuesAction)JsonTransformStringValuesAction37,1057

/home/seinoyu/pgsql/master/postgresql/src/include/utils/acl.h,2255
#define ACL_H33,1455
#define ACL_ID_PUBLIC	46,1706
typedef struct AclItem54,1913
	Oid			ai_grantee;56,1938
	Oid			ai_grantor;57,1998
	AclMode		ai_privs;58,2041
} AclItem;59,2083
#define ACLITEM_GET_PRIVS(66,2319
#define ACLITEM_GET_GOPTIONS(67,2381
#define ACLITEM_GET_RIGHTS(68,2451
#define ACL_GRANT_OPTION_FOR(70,2505
#define ACL_OPTION_TO_PRIVS(71,2578
#define ACLITEM_SET_PRIVS(73,2651
#define ACLITEM_SET_GOPTIONS(76,2792
#define ACLITEM_SET_RIGHTS(79,2958
#define ACLITEM_SET_PRIVS_GOPTIONS(82,3042
#define ACLITEM_ALL_PRIV_BITS	87,3203
#define ACLITEM_ALL_GOPTION_BITS	88,3253
typedef struct ArrayType Acl;106,3866
#define ACL_NUM(108,3897
#define ACL_DAT(109,3939
#define ACL_N_SIZE(110,3994
#define ACL_SIZE(111,4070
#define DatumGetAclItemP(116,4147
#define PG_GETARG_ACLITEM_P(117,4212
#define PG_RETURN_ACLITEM_P(118,4283
#define DatumGetAclP(120,4339
#define DatumGetAclPCopy(121,4398
#define PG_GETARG_ACL_P(122,4465
#define PG_GETARG_ACL_P_COPY(123,4529
#define PG_RETURN_ACL_P(124,4601
#define ACL_MODECHG_ADD	129,4703
#define ACL_MODECHG_DEL	130,4731
#define ACL_MODECHG_EQL	131,4759
#define ACL_INSERT_CHR	137,4944
#define ACL_SELECT_CHR	138,5006
#define ACL_UPDATE_CHR	139,5066
#define ACL_DELETE_CHR	140,5127
#define ACL_TRUNCATE_CHR	141,5156
#define ACL_REFERENCES_CHR	142,5217
#define ACL_TRIGGER_CHR	143,5249
#define ACL_EXECUTE_CHR	144,5279
#define ACL_USAGE_CHR	145,5309
#define ACL_CREATE_CHR	146,5337
#define ACL_CREATE_TEMP_CHR	147,5366
#define ACL_CONNECT_CHR	148,5399
#define ACL_ALL_RIGHTS_STR	151,5506
#define ACL_ALL_RIGHTS_COLUMN	156,5621
#define ACL_ALL_RIGHTS_RELATION	157,5702
#define ACL_ALL_RIGHTS_SEQUENCE	158,5821
#define ACL_ALL_RIGHTS_DATABASE	159,5888
#define ACL_ALL_RIGHTS_FDW	160,5962
#define ACL_ALL_RIGHTS_FOREIGN_SERVER 161,6003
#define ACL_ALL_RIGHTS_FUNCTION	162,6053
#define ACL_ALL_RIGHTS_LANGUAGE	163,6100
#define ACL_ALL_RIGHTS_LARGEOBJECT	164,6145
#define ACL_ALL_RIGHTS_SCHEMA	165,6204
#define ACL_ALL_RIGHTS_TABLESPACE	166,6258
#define ACL_ALL_RIGHTS_TYPE	167,6305
	ACLMASK_ALL,172,6402
	ACLMASK_ANY	173,6455
} AclMaskHow;174,6514
	ACLCHECK_OK 179,6581
	ACLCHECK_NO_PRIV,180,6599
	ACLCHECK_NOT_OWNER181,6618
} AclResult;182,6638

/home/seinoyu/pgsql/master/postgresql/src/include/utils/builtins.h,305
#define BUILTINS_H15,433
#define MAXINT8LEN 22,592
#define CStringGetTextDatum(87,2934
#define TextDatumGetCString(88,3001
#define FORMAT_TYPE_TYPEMOD_GIVEN	113,3769
#define FORMAT_TYPE_ALLOW_INVALID	114,3840
#define FORMAT_TYPE_FORCE_QUALIFY	115,3905
#define FORMAT_TYPE_INVALID_AS_NULL	116,3978

/home/seinoyu/pgsql/master/postgresql/src/include/utils/relfilenodemap.h,32
#define RELFILENODEMAP_H14,435

/home/seinoyu/pgsql/master/postgresql/src/include/utils/relptr.h,263
#define RELPTR_H15,439
#define relptr(29,1060
#define relptr_declare(38,1400
#define relptr_access(42,1517
#define relptr_access(51,1803
#define relptr_is_null(56,1961
#define relptr_store(60,2055
#define relptr_store(69,2387
#define relptr_copy(74,2549

/home/seinoyu/pgsql/master/postgresql/src/include/utils/dsa.h,1099
#define DSA_H15,417
typedef struct dsa_area dsa_area;22,541
#define SIZEOF_DSA_POINTER 40,1360
#define SIZEOF_DSA_POINTER 42,1395
typedef uint32 dsa_pointer;53,1787
typedef pg_atomic_uint32 dsa_pointer_atomic;54,1815
#define dsa_pointer_atomic_init 55,1860
#define dsa_pointer_atomic_read 56,1911
#define dsa_pointer_atomic_write 57,1962
#define dsa_pointer_atomic_fetch_add 58,2015
#define dsa_pointer_atomic_compare_exchange 59,2076
#define DSA_POINTER_FORMAT 60,2151
typedef uint64 dsa_pointer;62,2191
typedef pg_atomic_uint64 dsa_pointer_atomic;63,2219
#define dsa_pointer_atomic_init 64,2264
#define dsa_pointer_atomic_read 65,2315
#define dsa_pointer_atomic_write 66,2366
#define dsa_pointer_atomic_fetch_add 67,2419
#define dsa_pointer_atomic_compare_exchange 68,2480
#define DSA_POINTER_FORMAT 69,2555
#define DSA_ALLOC_HUGE	73,2655
#define DSA_ALLOC_NO_OOM	74,2721
#define DSA_ALLOC_ZERO	75,2785
#define InvalidDsaPointer 78,2920
#define DsaPointerIsValid(81,3010
#define dsa_allocate(84,3132
#define dsa_allocate0(88,3274
typedef dsm_handle dsa_handle;100,3761

/home/seinoyu/pgsql/master/postgresql/src/include/utils/json.h,22
#define JSON_H15,413

/home/seinoyu/pgsql/master/postgresql/src/include/utils/numeric.h,499
#define _PG_NUMERIC_H_15,432
#define NUMERIC_MAX_PRECISION	24,685
#define NUMERIC_MAX_DISPLAY_SCALE	29,793
#define NUMERIC_MIN_DISPLAY_SCALE	30,849
#define NUMERIC_MAX_RESULT_SCALE	32,886
#define NUMERIC_MIN_SIG_DIGITS	39,1147
typedef struct NumericData *Numeric;Numeric43,1265
#define DatumGetNumeric(49,1336
#define DatumGetNumericCopy(50,1398
#define NumericGetDatum(51,1468
#define PG_GETARG_NUMERIC(52,1517
#define PG_GETARG_NUMERIC_COPY(53,1584
#define PG_RETURN_NUMERIC(54,1658

/home/seinoyu/pgsql/master/postgresql/src/include/utils/queryenvironment.h,840
#define QUERYENVIRONMENT_H15,522
typedef enum EphemeralNameRelationType20,580
	ENR_NAMED_TUPLESTORE	22,621
} EphemeralNameRelationType;23,690
typedef struct EphemeralNamedRelationMetadataData32,1095
	char	   *name;name34,1147
	Oid			reliddesc;37,1261
	TupleDesc	tupdesc;38,1317
	EphemeralNameRelationType enrtype;40,1372
	double		enrtuples;41,1443
} EphemeralNamedRelationMetadataData;42,1497
typedef EphemeralNamedRelationMetadataData *EphemeralNamedRelationMetadata;EphemeralNamedRelationMetadata44,1536
typedef struct EphemeralNamedRelationData50,1752
	EphemeralNamedRelationMetadataData md;52,1796
	void	   *reldata;reldata53,1836
} EphemeralNamedRelationData;54,1906
typedef EphemeralNamedRelationData *EphemeralNamedRelation;EphemeralNamedRelation56,1937
typedef struct QueryEnvironment QueryEnvironment;64,2239

/home/seinoyu/pgsql/master/postgresql/src/include/utils/fmgrtab.h,239
#define FMGRTAB_H14,432
	Oid			foid;27,650
	short		nargs;28,691
	bool		strict;29,756
	bool		retset;30,805
	const char *funcName;funcName31,856
	PGFunction	func;32,909
} FmgrBuiltin;33,964
#define InvalidOidBuiltinMapping 45,1314

/home/seinoyu/pgsql/master/postgresql/src/include/utils/date.h,819
#define DATE_H15,423
typedef int32 DateADT;23,529
typedef int64 TimeADT;25,553
	TimeADT		time;29,594
	int32		zone;30,661
} TimeTzADT;31,713
#define DATEVAL_NOBEGIN	36,808
#define DATEVAL_NOEND	37,858
#define DATE_NOBEGIN(39,907
#define DATE_IS_NOBEGIN(40,956
#define DATE_NOEND(41,1008
#define DATE_IS_NOEND(42,1053
#define DATE_NOT_FINITE(43,1101
#define MAX_TIME_PRECISION 51,1357
#define DatumGetDateADT(53,1387
#define DatumGetTimeADT(54,1445
#define DatumGetTimeTzADTP(55,1503
#define DateADTGetDatum(57,1569
#define TimeADTGetDatum(58,1615
#define TimeTzADTPGetDatum(59,1661
#define PG_GETARG_DATEADT(61,1711
#define PG_GETARG_TIMEADT(62,1777
#define PG_GETARG_TIMETZADT_P(63,1843
#define PG_RETURN_DATEADT(65,1916
#define PG_RETURN_TIMEADT(66,1972
#define PG_RETURN_TIMETZADT_P(67,2028

/home/seinoyu/pgsql/master/postgresql/src/include/utils/ruleutils.h,27
#define RULEUTILS_H14,414

/home/seinoyu/pgsql/master/postgresql/src/include/utils/array.h,3269
#define ARRAY_H62,2952
typedef struct ArrayType80,3455
	int32		vl_len_;82,3482
	int			ndim;83,3546
	int32		dataoffset;84,3583
	Oid			elemtype;85,3644
} ArrayType;86,3685
#define EA_MAGIC 101,4444
typedef struct ExpandedArrayHeader103,4508
	ExpandedObjectHeader hdr;106,4589
	int			ea_magic;109,4687
	int			ndims;112,4747
	int		   *dims;dims113,4785
	int		   *lbound;lbound114,4826
	Oid			element_type;117,4931
	int16		typlen;118,4975
	bool		typbyval;119,5034
	char		typalign;120,5051
	Datum	   *dvalues;dvalues134,5649
	bool	   *dnulls;dnulls135,5692
	int			dvalueslen;136,5752
	int			nelems;137,5811
	Size		flat_size;144,6079
	ArrayType  *fvalue;fvalue153,6457
	char	   *fstartptr;fstartptr154,6518
	char	   *fendptr;fendptr155,6569
} ExpandedArrayHeader;156,6618
typedef union AnyArrayType165,7011
	ArrayType	flt;167,7040
	ExpandedArrayHeader xpn;168,7056
} AnyArrayType;169,7082
typedef struct ArrayBuildState175,7220
	MemoryContext mcontext;177,7253
	Datum	   *dvalues;dvalues178,7318
	bool	   *dnulls;dnulls179,7373
	int			alen;180,7433
	int			nelems;181,7487
	Oid			element_type;182,7550
	int16		typlen;183,7601
	bool		typbyval;184,7652
	char		typalign;185,7669
	bool		private_cxt;186,7686
} ArrayBuildState;187,7739
typedef struct ArrayBuildStateArr193,7896
	MemoryContext mcontext;195,7932
	char	   *data;data196,7997
	bits8	   *nullbitmap;nullbitmap197,8038
	int			abytes;198,8109
	int			nbytes;199,8159
	int			aitems;200,8210
	int			nitems;201,8274
	int			ndims;202,8332
	int			dims[dims203,8383
	int			lbs[lbs204,8404
	Oid			array_type;205,8424
	Oid			element_type;206,8474
	bool		private_cxt;207,8533
} ArrayBuildStateArr;208,8586
typedef struct ArrayBuildStateAny214,8708
	ArrayBuildState *scalarstate;scalarstate217,8785
	ArrayBuildStateArr *arraystate;arraystate218,8816
} ArrayBuildStateAny;219,8849
typedef struct ArrayMetaState224,8945
	Oid			element_type;226,8977
	int16		typlen;227,8998
	bool		typbyval;228,9014
	char		typalign;229,9031
	char		typdelim;230,9048
	Oid			typioparam;231,9065
	Oid			typiofunc;232,9084
	FmgrInfo	proc;233,9102
} ArrayMetaState;234,9118
typedef struct ArrayMapState239,9219
	ArrayMetaState inp_extra;241,9250
	ArrayMetaState ret_extra;242,9277
} ArrayMapState;243,9304
typedef struct ArrayIteratorData *ArrayIterator;ArrayIterator246,9373
#define DatumGetArrayTypeP(249,9475
#define DatumGetArrayTypePCopy(250,9544
#define PG_GETARG_ARRAYTYPE_P(251,9621
#define PG_GETARG_ARRAYTYPE_P_COPY(252,9695
#define PG_RETURN_ARRAYTYPE_P(253,9776
#define PG_GETARG_EXPANDED_ARRAY(256,9878
#define PG_GETARG_EXPANDED_ARRAYX(257,9957
#define PG_RETURN_EXPANDED_ARRAY(259,10062
#define PG_GETARG_ANY_ARRAY_P(262,10220
#define ARR_SIZE(277,10710
#define ARR_NDIM(278,10744
#define ARR_HASNULL(279,10779
#define ARR_ELEMTYPE(280,10827
#define ARR_DIMS(282,10870
#define ARR_LBOUND(284,10941
#define ARR_NULLBITMAP(288,11051
#define ARR_OVERHEAD_NONULLS(298,11346
#define ARR_OVERHEAD_WITHNULLS(300,11442
#define ARR_DATA_OFFSET(304,11577
#define ARR_DATA_PTR(310,11734
#define AARR_NDIM(316,11885
#define AARR_HASNULL(319,11991
#define AARR_ELEMTYPE(323,12176
#define AARR_DIMS(326,12297
#define AARR_LBOUND(329,12402

/home/seinoyu/pgsql/master/postgresql/src/include/utils/attoptcache.h,179
#define ATTOPTCACHE_H14,417
typedef struct AttributeOpts19,469
	int32		vl_len_;21,500
	float8		n_distinct;22,564
	float8		n_distinct_inherited;23,585
} AttributeOpts;24,616

/home/seinoyu/pgsql/master/postgresql/src/include/utils/memutils.h,885
#define MEMUTILS_H18,635
#define MaxAllocSize	40,1482
#define AllocSizeIsValid(42,1545
#define MaxAllocHugeSize	44,1609
#define AllocHugeSizeIsValid(46,1650
#define MemoryContextResetAndDeleteChildren(67,2384
#define MemoryContextCopyAndSetIdentifier(97,3757
GetMemoryChunkContext(113,4385
#define AllocSetContextCreate(165,5777
#define AllocSetContextCreate 170,6002
#define ALLOCSET_DEFAULT_MINSIZE 189,6502
#define ALLOCSET_DEFAULT_INITSIZE 190,6539
#define ALLOCSET_DEFAULT_MAXSIZE 191,6585
#define ALLOCSET_DEFAULT_SIZES 192,6638
#define ALLOCSET_SMALL_MINSIZE	199,6909
#define ALLOCSET_SMALL_INITSIZE 200,6943
#define ALLOCSET_SMALL_MAXSIZE	201,6987
#define ALLOCSET_SMALL_SIZES 202,7030
#define ALLOCSET_START_SMALL_SIZES 209,7249
#define ALLOCSET_SEPARATE_THRESHOLD 219,7608
#define SLAB_DEFAULT_BLOCK_SIZE	221,7651
#define SLAB_LARGE_BLOCK_SIZE	222,7695

/home/seinoyu/pgsql/master/postgresql/src/include/utils/resowner_private.h,34
#define RESOWNER_PRIVATE_H17,502

/home/seinoyu/pgsql/master/postgresql/src/include/utils/selfuncs.h,1167
#define SELFUNCS_H16,502
#define DEFAULT_EQ_SEL	34,1146
#define DEFAULT_INEQ_SEL 37,1244
#define DEFAULT_RANGE_INEQ_SEL	40,1366
#define DEFAULT_MATCH_SEL	43,1480
#define DEFAULT_MATCHING_SEL	46,1577
#define DEFAULT_NUM_DISTINCT 49,1664
#define DEFAULT_UNK_SEL	52,1766
#define DEFAULT_NOT_UNK_SEL	53,1798
#define CLAMP_PROBABILITY(60,2010
typedef struct VariableStatData70,2183
	Node	   *var;var72,2217
	RelOptInfo *rel;rel73,2267
	HeapTuple	statsTuple;74,2331
	void		(*freefunc)freefunc76,2466
	Oid			vartype;77,2533
	Oid			atttype;78,2583
	int32		atttypmod;79,2644
	bool		isunique;80,2710
	bool		acl_ok;81,2774
} VariableStatData;82,2836
#define ReleaseVariableStats(84,2857
	Cost		indexStartupCost;107,3828
	Cost		indexTotalCost;108,3886
	Selectivity indexSelectivity;109,3945
	double		indexCorrelation;110,4003
	double		numIndexPages;113,4115
	double		numIndexTuples;114,4174
	double		spc_random_page_cost;115,4235
	double		num_sa_scans;116,4304
} GenericCosts;117,4370
typedef bool (*get_relation_stats_hook_type)get_relation_stats_hook_type120,4448
typedef bool (*get_index_stats_hook_type)get_index_stats_hook_type125,4692

/home/seinoyu/pgsql/master/postgresql/src/include/utils/partcache.h,892
#define PARTCACHE_H12,300
typedef struct PartitionKeyData24,546
	char		strategy;26,580
	int16		partnatts;27,626
	AttrNumber *partattrs;partattrs28,691
	List	   *partexprs;partexprs30,804
	Oid		   *partopfamily;partopfamily33,924
	Oid		   *partopcintype;partopcintype34,980
	FmgrInfo   *partsupfunc;partsupfunc35,1053
	Oid		   *partcollation;partcollation38,1160
	Oid		   *parttypid;parttypid41,1224
	int32	   *parttypmod;parttypmod42,1245
	int16	   *parttyplen;parttyplen43,1268
	bool	   *parttypbyval;parttypbyval44,1291
	char	   *parttypalign;parttypalign45,1315
	Oid		   *parttypcoll;parttypcoll46,1339
}			PartitionKeyData;47,1362
get_partition_strategy(58,1608
get_partition_natts(64,1695
get_partition_exprs(70,1783
get_partition_col_attnum(79,1924
get_partition_col_typid(85,2028
get_partition_col_typmod(91,2133
get_partition_col_collation(97,2238

/home/seinoyu/pgsql/master/postgresql/src/include/utils/tuplesort.h,890
#define TUPLESORT_H22,916
typedef struct Tuplesortstate Tuplesortstate;34,1157
typedef struct Sharedsort Sharedsort;35,1203
typedef struct SortCoordinateData42,1412
	bool		isWorker;45,1496
	int			nParticipants;52,1701
	Sharedsort *sharedsort;sharedsort55,1778
}			SortCoordinateData;56,1803
typedef struct SortCoordinateData *SortCoordinate;SortCoordinate58,1828
	SORT_TYPE_STILL_IN_PROGRESS 74,2496
	SORT_TYPE_TOP_N_HEAPSORT 75,2530
	SORT_TYPE_QUICKSORT 76,2566
	SORT_TYPE_EXTERNAL_SORT 77,2597
	SORT_TYPE_EXTERNAL_MERGE 78,2632
} TuplesortMethod;79,2667
#define NUM_TUPLESORTMETHODS 81,2687
	SORT_SPACE_TYPE_DISK,85,2734
	SORT_SPACE_TYPE_MEMORY86,2757
} TuplesortSpaceType;87,2781
typedef struct TuplesortInstrumentation89,2804
	TuplesortMethod sortMethod;91,2846
	TuplesortSpaceType spaceType;92,2901
	long		spaceUsed;93,2973
} TuplesortInstrumentation;94,3023

/home/seinoyu/pgsql/master/postgresql/src/include/utils/expandedrecord.h,1808
#define EXPANDEDRECORD_H14,446
#define ER_MAGIC 40,1582
typedef struct ExpandedRecordHeader42,1647
	ExpandedObjectHeader hdr;45,1729
	int			er_magic;48,1828
	int			flags;51,1872
#define ER_FLAG_FVALUE_VALID	52,1886
#define ER_FLAG_FVALUE_ALLOCED	53,1950
#define ER_FLAG_DVALUES_VALID	54,2019
#define ER_FLAG_DVALUES_ALLOCED	55,2093
#define ER_FLAG_HAVE_EXTERNAL	56,2170
#define ER_FLAG_TUPDESC_ALLOCED	57,2244
#define ER_FLAG_IS_DOMAIN	58,2315
#define ER_FLAG_IS_DUMMY	59,2380
#define ER_FLAGS_NON_DATA 61,2522
	Oid			er_decltypeid;65,2686
	Oid			er_typeid;73,2986
	int32		er_typmod;74,3042
	TupleDesc	er_tupdesc;83,3450
	uint64		er_tupdesc_id;89,3622
	Datum	   *dvalues;dvalues100,4132
	bool	   *dnulls;dnulls101,4175
	int			nfields;102,4235
	Size		flat_size;110,4583
	Size		data_len;112,4602
	int			hoff;113,4652
	bool		hasnull;114,4687
	HeapTuple	fvalue;126,5305
	char	   *fstartptr;fstartptr127,5370
	char	   *fendptr;fendptr128,5421
	MemoryContext er_short_term_cxt;131,5544
	struct ExpandedRecordHeader *er_dummy_header;er_dummy_header134,5686
	void	   *er_domaininfo;er_domaininfo135,5759
	MemoryContextCallback er_mcb;138,5883
} ExpandedRecordHeader;139,5914
#define PG_GETARG_EXPANDED_RECORD(142,5985
#define ExpandedRecordGetDatum(143,6066
#define ExpandedRecordGetRODatum(144,6132
#define PG_RETURN_EXPANDED_RECORD(145,6198
#define ExpandedRecordIsEmpty(148,6308
#define ExpandedRecordIsDomain(150,6417
#define TransferExpandedRecord(154,6579
typedef struct ExpandedRecordFieldInfo158,6737
	int			fnumber;160,6778
	Oid			ftypeid;161,6831
	int32		ftypmod;162,6879
	Oid			fcollation;163,6896
} ExpandedRecordFieldInfo;164,6947
#define expanded_record_set_field(198,8666
expanded_record_get_tupdesc(208,9038
expanded_record_get_field(218,9265

/home/seinoyu/pgsql/master/postgresql/src/include/utils/pg_crc.h,435
#define PG_CRC_H35,976
typedef uint32 pg_crc32;37,994
#define INIT_TRADITIONAL_CRC32(46,1260
#define FIN_TRADITIONAL_CRC32(47,1317
#define COMP_TRADITIONAL_CRC32(48,1374
#define EQ_TRADITIONAL_CRC32(50,1480
#define COMP_CRC32_NORMAL_TABLE(53,1597
#define INIT_LEGACY_CRC32(79,2550
#define FIN_LEGACY_CRC32(80,2602
#define COMP_LEGACY_CRC32(81,2654
#define EQ_LEGACY_CRC32(83,2758
#define COMP_CRC32_REFLECTED_TABLE(89,2961

/home/seinoyu/pgsql/master/postgresql/src/include/utils/varbit.h,590
#define VARBIT_H16,488
	int32		vl_len_;32,925
	int32		bit_len;33,989
	bits8		bit_dat[bit_dat34,1034
} VarBit;36,1128
#define DatumGetVarBitP(44,1314
#define DatumGetVarBitPCopy(45,1378
#define VarBitPGetDatum(46,1450
#define PG_GETARG_VARBIT_P(47,1500
#define PG_GETARG_VARBIT_P_COPY(48,1569
#define PG_RETURN_VARBIT_P(49,1644
#define VARBITHDRSZ	52,1752
#define VARBITLEN(54,1828
#define VARBITS(56,1941
#define VARBITBYTES(58,2051
#define VARBITPAD(60,2169
#define VARBITTOTALLEN(62,2312
#define VARBITMAXLEN	68,2568
#define VARBITEND(70,2698
#define BITMASK 72,2826

/home/seinoyu/pgsql/master/postgresql/src/include/utils/catcache.h,1822
#define CATCACHE_H21,788
#define CATCACHE_MAXKEYS	35,1156
typedef uint32 (*CCHashFN)CCHashFN39,1226
typedef bool (*CCFastEqualFN)CCFastEqualFN42,1317
typedef struct catcache44,1368
	int			id;46,1394
	int			cc_nbuckets;47,1450
	TupleDesc	cc_tupdesc;48,1508
	dlist_head *cc_bucket;cc_bucket49,1577
	CCHashFN	cc_hashfunc[cc_hashfunc50,1621
	CCFastEqualFN cc_fastequal[cc_fastequal51,1695
	int			cc_keyno[cc_keyno53,1797
	dlist_head	cc_lists;54,1861
	int			cc_ntup;55,1915
	int			cc_nkeys;56,1974
	const char *cc_relname;cc_relname57,2030
	Oid			cc_reloid;58,2100
	Oid			cc_indexoid;59,2162
	bool		cc_relisshared;60,2221
	slist_node	cc_next;61,2287
	ScanKeyData cc_skey[cc_skey62,2325
	long		cc_searches;70,2569
	long		cc_hits;71,2631
	long		cc_neg_hits;72,2690
	long		cc_newloads;73,2752
	long		cc_invals;79,2967
	long		cc_lsearches;80,3028
	long		cc_lhits;81,3077
} CatCache;83,3144
typedef struct catctup86,3158
	int			ct_magic;88,3183
#define CT_MAGIC 89,3239
	uint32		hash_value;91,3270
	Datum		keys[keys97,3493
	dlist_node	cache_elem;104,3697
	int			refcount;118,4356
	bool		dead;119,4408
	bool		negative;120,4455
	HeapTupleData tuple;121,4501
	struct catclist *c_list;c_list130,4882
	CatCache   *my_cache;my_cache132,4952
} CatCTup;134,5074
typedef struct catclist157,6092
	int			cl_magic;159,6118
#define CL_MAGIC 160,6175
	uint32		hash_value;162,6206
	dlist_node	cache_elem;164,6262
	Datum		keys[keys170,6457
	int			refcount;172,6490
	bool		dead;173,6542
	bool		ordered;174,6589
	short		nkeys;175,6643
	int			n_members;176,6698
	CatCache   *my_cache;my_cache177,6747
	CatCTup    *members[members178,6801
} CatCList;179,6860
typedef struct catcacheheader182,6874
	slist_head	ch_caches;184,6906
	int			ch_ntup;185,6969
} CatCacheHeader;186,7018

/home/seinoyu/pgsql/master/postgresql/src/include/utils/timestamp.h,871
#define TIMESTAMP_H14,444
#define DatumGetTimestamp(27,728
#define DatumGetTimestampTz(28,789
#define DatumGetIntervalP(29,853
#define TimestampGetDatum(31,918
#define TimestampTzGetDatum(32,964
#define IntervalPGetDatum(33,1012
#define PG_GETARG_TIMESTAMP(35,1061
#define PG_GETARG_TIMESTAMPTZ(36,1130
#define PG_GETARG_INTERVAL_P(37,1203
#define PG_RETURN_TIMESTAMP(39,1274
#define PG_RETURN_TIMESTAMPTZ(40,1333
#define PG_RETURN_INTERVAL_P(41,1396
#define TIMESTAMP_MASK(44,1458
#define INTERVAL_MASK(45,1495
#define INTERVAL_FULL_RANGE 48,1608
#define INTERVAL_RANGE_MASK 49,1645
#define INTERVAL_FULL_PRECISION 50,1682
#define INTERVAL_PRECISION_MASK 51,1723
#define INTERVAL_TYPMOD(52,1764
#define INTERVAL_PRECISION(53,1865
#define INTERVAL_RANGE(54,1927
#define TimestampTzPlusMilliseconds(56,1990
#define timestamptz_cmp_internal(98,3507

/home/seinoyu/pgsql/master/postgresql/src/include/utils/tuplestore.h,125
#define TUPLESTORE_H32,1485
typedef struct Tuplestorestate Tuplestorestate;40,1634
#define tuplestore_donestoring(60,2380

/home/seinoyu/pgsql/master/postgresql/src/include/utils/xid8.h,194
#define XID8_H13,317
#define DatumGetFullTransactionId(17,362
#define FullTransactionIdGetDatum(18,445
#define PG_GETARG_FULLTRANSACTIONID(19,528
#define PG_RETURN_FULLTRANSACTIONID(20,613

/home/seinoyu/pgsql/master/postgresql/src/include/utils/snapshot.h,963
#define SNAPSHOT_H14,412
typedef enum SnapshotType35,1158
	SNAPSHOT_MVCC 50,1759
	SNAPSHOT_SELF,64,2276
	SNAPSHOT_ANY,69,2328
	SNAPSHOT_TOAST,74,2415
	SNAPSHOT_DIRTY,102,3864
	SNAPSHOT_HISTORIC_MVCC,109,4081
	SNAPSHOT_NON_VACUUMABLE118,4352
} SnapshotType;119,4377
typedef struct SnapshotData *Snapshot;Snapshot121,4394
#define InvalidSnapshot	123,4434
typedef struct SnapshotData142,5181
	SnapshotType snapshot_type;144,5211
	TransactionId xmin;157,5777
	TransactionId xmax;158,5839
	TransactionId *xip;xip168,6260
	uint32		xcnt;169,6281
	TransactionId *subxip;subxip180,6722
	int32		subxcnt;181,6746
	bool		suboverflowed;182,6796
	bool		takenDuringRecovery;184,6858
	bool		copied;185,6918
	CommandId	curcid;187,6974
	uint32		speculativeToken;193,7135
	uint32		active_count;198,7231
	uint32		regd_count;199,7293
	pairingheap_node ph_node;200,7353
	TimestampTz whenTaken;202,7424
	XLogRecPtr	lsn;203,7489
} SnapshotData;204,7552

/home/seinoyu/pgsql/master/postgresql/src/include/utils/relcache.h,437
#define RELCACHE_H15,425
#define RELCACHE_INIT_FILENAME	25,600
typedef struct RelationData *Relation;Relation27,651
typedef Relation *RelationPtr;RelationPtr35,888
typedef enum IndexAttrBitmapKind57,1754
	INDEX_ATTR_BITMAP_ALL,59,1789
	INDEX_ATTR_BITMAP_KEY,60,1813
	INDEX_ATTR_BITMAP_PRIMARY_KEY,61,1837
	INDEX_ATTR_BITMAP_IDENTITY_KEY62,1869
} IndexAttrBitmapKind;63,1901
#define AssertPendingSyncs_RelationCache(131,3961

/home/seinoyu/pgsql/master/postgresql/src/include/utils/relmapper.h,254
#define RELMAPPER_H15,417
#define XLOG_RELMAP_UPDATE	25,575
typedef struct xl_relmap_update27,609
	Oid			dbid;29,643
	Oid			tsid;30,697
	int32		nbytes;31,754
	char		data[data32,798
} xl_relmap_update;33,834
#define MinSizeOfRelmapUpdate 35,855

/home/seinoyu/pgsql/master/postgresql/src/include/utils/palloc.h,583
#define PALLOC_H29,1233
typedef struct MemoryContextData *MemoryContext;MemoryContext36,1445
typedef void (*MemoryContextCallbackFunction)MemoryContextCallbackFunction45,1876
typedef struct MemoryContextCallback47,1936
	MemoryContextCallbackFunction func;49,1975
	void	   *arg;arg50,2035
	struct MemoryContextCallback *next;next51,2078
} MemoryContextCallback;52,2147
#define MCXT_ALLOC_HUGE	64,2452
#define MCXT_ALLOC_NO_OOM	65,2520
#define MCXT_ALLOC_ZERO	66,2586
#define palloc0fast(91,3631
MemoryContextSwitchTo(109,4282
extern char *psprintf(psprintf133,5008

/home/seinoyu/pgsql/master/postgresql/src/include/utils/logtape.h,165
#define LOGTAPE_H17,473
typedef struct LogicalTapeSet LogicalTapeSet;23,615
typedef struct TapeShare44,1723
	long		firstblocknumber;50,1863
} TapeShare;51,1888

/home/seinoyu/pgsql/master/postgresql/src/include/utils/portal.h,1656
#define PORTAL_H47,1906
typedef enum PortalStrategy89,3994
	PORTAL_ONE_SELECT,91,4024
	PORTAL_ONE_RETURNING,92,4044
	PORTAL_ONE_MOD_WITH,93,4067
	PORTAL_UTIL_SELECT,94,4089
	PORTAL_MULTI_QUERY95,4110
} PortalStrategy;96,4130
typedef enum PortalStatus103,4338
	PORTAL_NEW,105,4366
	PORTAL_DEFINED,106,4405
	PORTAL_READY,107,4454
	PORTAL_ACTIVE,108,4511
	PORTAL_DONE,109,4572
	PORTAL_FAILED	110,4632
} PortalStatus;111,4691
typedef struct PortalData *Portal;Portal113,4708
typedef struct PortalData115,4744
	const char *name;name118,4796
	const char *prepStmtName;prepStmtName119,4837
	MemoryContext portalContext;120,4911
	ResourceOwner resowner;121,4976
	void		(*cleanup)cleanup122,5034
	SubTransactionId createSubid;131,5415
	SubTransactionId activeSubid;132,5473
	const char *sourceText;sourceText135,5594
	CommandTag	commandTag;136,5664
	QueryCompletion qc;137,5726
	List	   *stmts;stmts138,5798
	CachedPlan *cplan;cplan139,5844
	ParamListInfo portalParams;141,5907
	QueryEnvironment *queryEnv;queryEnv142,5966
	PortalStrategy strategy;145,6048
	int			cursorOptions;146,6090
	bool		run_once;147,6145
	PortalStatus status;150,6218
	bool		portalPinned;151,6257
	bool		autoHeld;152,6317
	QueryDesc  *queryDesc;queryDesc156,6496
	TupleDesc	tupDesc;159,6620
	int16	   *formats;formats161,6738
	Tuplestorestate *holdStore;holdStore168,7002
	MemoryContext holdContext;169,7064
	Snapshot	holdSnapshot;179,7562
	bool		atStart;190,8143
	bool		atEnd;191,8159
	uint64		portalPos;192,8173
	TimestampTz creation_time;195,8265
	bool		visible;196,8337
}			PortalData;197,8395
#define PortalIsValid(203,8466

/home/seinoyu/pgsql/master/postgresql/src/include/utils/reltrigger.h,1615
#define RELTRIGGER_H15,431
typedef struct Trigger23,597
	Oid			tgoid;25,622
	char	   *tgname;tgname27,745
	Oid			tgfoid;28,763
	int16		tgtype;29,778
	char		tgenabled;30,794
	bool		tgisinternal;31,812
	bool		tgisclone;32,833
	Oid			tgconstrrelid;33,851
	Oid			tgconstrindid;34,873
	Oid			tgconstraint;35,895
	bool		tgdeferrable;36,916
	bool		tginitdeferred;37,937
	int16		tgnargs;38,960
	int16		tgnattr;39,977
	int16	   *tgattr;tgattr40,994
	char	  **tgargs;tgargs41,1013
	char	   *tgqual;tgqual42,1031
	char	   *tgoldtable;tgoldtable43,1049
	char	   *tgnewtable;tgnewtable44,1071
} Trigger;45,1093
typedef struct TriggerDesc47,1105
	Trigger    *triggers;triggers49,1134
	int			numtriggers;50,1189
	bool		trig_insert_before_row;56,1393
	bool		trig_insert_after_row;57,1424
	bool		trig_insert_instead_row;58,1454
	bool		trig_insert_before_statement;59,1486
	bool		trig_insert_after_statement;60,1523
	bool		trig_update_before_row;61,1559
	bool		trig_update_after_row;62,1590
	bool		trig_update_instead_row;63,1620
	bool		trig_update_before_statement;64,1652
	bool		trig_update_after_statement;65,1689
	bool		trig_delete_before_row;66,1725
	bool		trig_delete_after_row;67,1756
	bool		trig_delete_instead_row;68,1786
	bool		trig_delete_before_statement;69,1818
	bool		trig_delete_after_statement;70,1855
	bool		trig_truncate_before_statement;72,1939
	bool		trig_truncate_after_statement;73,1978
	bool		trig_insert_new_table;75,2090
	bool		trig_update_old_table;76,2120
	bool		trig_update_new_table;77,2150
	bool		trig_delete_old_table;78,2180
} TriggerDesc;79,2210

/home/seinoyu/pgsql/master/postgresql/src/include/utils/int8.h,22
#define INT8_H21,707

/home/seinoyu/pgsql/master/postgresql/src/include/utils/formatting.h,30
#define _FORMATTING_H_18,480

/home/seinoyu/pgsql/master/postgresql/src/include/utils/uuid.h,258
#define UUID_H15,450
#define UUID_LEN 18,491
typedef struct pg_uuid_t20,512
	unsigned char data[data22,539
} pg_uuid_t;23,570
#define UUIDPGetDatum(26,612
#define PG_RETURN_UUID_P(27,657
#define DatumGetUUIDP(28,710
#define PG_GETARG_UUID_P(29,771

/home/seinoyu/pgsql/master/postgresql/src/include/utils/sampling.h,459
#define SAMPLING_H14,418
typedef unsigned short SamplerRandomState[SamplerRandomState20,539
	BlockNumber N;31,845
	int			n;32,905
	BlockNumber t;33,944
	int			m;34,990
	SamplerRandomState randstate;35,1032
} BlockSamplerData;36,1092
typedef BlockSamplerData *BlockSampler;BlockSampler38,1113
	double		W;49,1429
	SamplerRandomState randstate;50,1441
} ReservoirStateData;51,1501
typedef ReservoirStateData *ReservoirState;ReservoirState53,1524

/home/seinoyu/pgsql/master/postgresql/src/include/utils/snapmgr.h,403
#define SNAPMGR_H14,406
#define OLD_SNAPSHOT_PADDING_ENTRIES 31,1074
#define OLD_SNAPSHOT_TIME_MAP_ENTRIES 32,1114
#define RelationAllowsEarlyPruning(38,1332
#define EarlyPruningEnabled(45,1489
#define SnapshotSelf	68,2288
#define SnapshotAny	69,2330
#define InitDirtySnapshot(76,2599
#define InitNonVacuumableSnapshot(83,2851
#define InitToastSnapshot(91,3165
#define IsMVCCSnapshot(97,3406

/home/seinoyu/pgsql/master/postgresql/src/include/pg_config_manual.h,1230
#define DEFAULT_XLOG_SEG_SIZE	20,789
#define NAMEDATALEN 29,1082
#define FUNC_MAX_ARGS	43,1620
#define INDEX_MAX_KEYS	52,1898
#define PARTITION_MAX_KEYS	57,1981
#define USE_FLOAT8_BYVAL 69,2445
#define NUM_SPINLOCK_SEMAPHORES	78,2739
#define NUM_ATOMICS_SEMAPHORES	86,3034
#define MAXPGPATH	98,3494
#define PG_SOMAXCONN	109,3961
#define BITS_PER_BYTE	115,4098
#define ALIGNOF_BUFFER	123,4420
#define EXEC_BACKEND135,4988
#define USE_POSIX_FADVISE145,5369
#define USE_PREFETCH156,5762
#define DEFAULT_BACKEND_FLUSH_AFTER 166,6126
#define DEFAULT_BGWRITER_FLUSH_AFTER 167,6195
#define DEFAULT_CHECKPOINT_FLUSH_AFTER 168,6235
#define DEFAULT_BACKEND_FLUSH_AFTER 170,6283
#define DEFAULT_BGWRITER_FLUSH_AFTER 171,6321
#define DEFAULT_CHECKPOINT_FLUSH_AFTER 172,6360
#define WRITEBACK_MAX_PENDING_FLUSHES 175,6450
#define USE_SSL183,6702
#define DEFAULT_PGSOCKET_DIR 204,7578
#define DEFAULT_PGSOCKET_DIR 206,7621
#define DEFAULT_EVENT_SOURCE 212,7727
#define MAX_RANDOM_VALUE 223,8225
#define USE_PPC_LWARX_MUTEX_HINT236,8905
#define USE_PPC_LWSYNC248,9329
#define PG_CACHE_LINE_SIZE	260,9840
#define CLOBBER_FREED_MEMORY293,11283
#define MEMORY_CONTEXT_CHECKING302,11569
#define TRACE_SORT 348,12874

/home/seinoyu/pgsql/master/postgresql/src/include/pg_trace.h,26
#define PG_TRACE_H13,217

/home/seinoyu/pgsql/master/postgresql/src/include/parser/kwlist.h,19
PG_KEYWORD(28,870

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_relation.h,70
#define PARSE_RELATION_H15,438
extern void errorMissingRTE(106,4094

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_collate.h,31
#define PARSE_COLLATE_H15,446

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parsetree.h,52
#define PARSETREE_H16,467
#define rt_fetch(31,682

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parser.h,150
#define PARSER_H16,508
	BACKSLASH_QUOTE_OFF,23,573
	BACKSLASH_QUOTE_ON,24,595
	BACKSLASH_QUOTE_SAFE_ENCODING25,616
}			BackslashQuoteType;26,647

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_param.h,29
#define PARSE_PARAM_H14,421

/home/seinoyu/pgsql/master/postgresql/src/include/parser/scansup.h,25
#define SCANSUP_H16,473

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_oper.h,63
#define PARSE_OPER_H15,426
typedef HeapTuple Operator;22,536

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_agg.h,27
#define PARSE_AGG_H14,436

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_func.h,258
#define PARSE_FUNC_H15,391
	FUNCDETAIL_NOTFOUND,24,531
	FUNCDETAIL_MULTIPLE,25,581
	FUNCDETAIL_NORMAL,26,638
	FUNCDETAIL_PROCEDURE,27,700
	FUNCDETAIL_AGGREGATE,28,757
	FUNCDETAIL_WINDOWFUNC,29,823
	FUNCDETAIL_COERCION	30,887
} FuncDetailCode;31,945

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_enr.h,27
#define PARSE_ENR_H15,421

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_utilcmd.h,31
#define PARSE_UTILCMD_H15,437

/home/seinoyu/pgsql/master/postgresql/src/include/parser/analyze.h,106
#define ANALYZE_H15,425
typedef void (*post_parse_analyze_hook_type)post_parse_analyze_hook_type20,539

/home/seinoyu/pgsql/master/postgresql/src/include/parser/gramparse.h,435
#define GRAMPARSE_H20,675
typedef struct base_yy_extra_type35,1022
	core_yy_extra_type core_yy_extra;40,1104
	bool		have_lookahead;45,1187
	int			lookahead_token;46,1241
	core_YYSTYPE lookahead_yylval;47,1291
	YYLTYPE		lookahead_yylloc;48,1356
	char	   *lookahead_end;lookahead_end49,1417
	char		lookahead_hold_char;50,1469
	List	   *parsetree;parsetree55,1594
} base_yy_extra_type;56,1659
#define pg_yyget_extra(64,1946

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_cte.h,27
#define PARSE_CTE_H15,439

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_target.h,30
#define PARSE_TARGET_H15,419

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_coerce.h,288
#define PARSE_COERCE_H15,425
typedef char TYPCATEGORY;21,555
typedef enum CoercionPathType24,627
	COERCION_PATH_NONE,26,659
	COERCION_PATH_FUNC,27,724
	COERCION_PATH_RELABELTYPE,28,791
	COERCION_PATH_ARRAYCOERCE,29,861
	COERCION_PATH_COERCEVIAIO	30,924
} CoercionPathType;31,981

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_expr.h,28
#define PARSE_EXPR_H14,419

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_node.h,4023
#define PARSE_NODE_H15,424
typedef struct ParseState ParseState;23,599
typedef struct ParseNamespaceItem ParseNamespaceItem;24,637
typedef struct ParseNamespaceColumn ParseNamespaceColumn;25,691
typedef enum ParseExprKind38,1356
	EXPR_KIND_NONE 40,1385
	EXPR_KIND_OTHER,41,1437
	EXPR_KIND_JOIN_ON,42,1487
	EXPR_KIND_JOIN_USING,43,1523
	EXPR_KIND_FROM_SUBSELECT,44,1564
	EXPR_KIND_FROM_FUNCTION,45,1623
	EXPR_KIND_WHERE,46,1679
	EXPR_KIND_HAVING,47,1711
	EXPR_KIND_FILTER,48,1745
	EXPR_KIND_WINDOW_PARTITION,49,1779
	EXPR_KIND_WINDOW_ORDER,50,1845
	EXPR_KIND_WINDOW_FRAME_RANGE,51,1904
	EXPR_KIND_WINDOW_FRAME_ROWS,52,1972
	EXPR_KIND_WINDOW_FRAME_GROUPS,53,2038
	EXPR_KIND_SELECT_TARGET,54,2108
	EXPR_KIND_INSERT_TARGET,55,2164
	EXPR_KIND_UPDATE_SOURCE,56,2220
	EXPR_KIND_UPDATE_TARGET,57,2282
	EXPR_KIND_GROUP_BY,58,2344
	EXPR_KIND_ORDER_BY,59,2382
	EXPR_KIND_DISTINCT_ON,60,2420
	EXPR_KIND_LIMIT,61,2463
	EXPR_KIND_OFFSET,62,2495
	EXPR_KIND_RETURNING,63,2529
	EXPR_KIND_VALUES,64,2568
	EXPR_KIND_VALUES_SINGLE,65,2602
	EXPR_KIND_CHECK_CONSTRAINT,66,2669
	EXPR_KIND_DOMAIN_CHECK,67,2733
	EXPR_KIND_COLUMN_DEFAULT,68,2795
	EXPR_KIND_FUNCTION_DEFAULT,69,2861
	EXPR_KIND_INDEX_EXPRESSION,70,2933
	EXPR_KIND_INDEX_PREDICATE,71,2985
	EXPR_KIND_ALTER_COL_TRANSFORM,72,3035
	EXPR_KIND_EXECUTE_PARAMETER,73,3109
	EXPR_KIND_TRIGGER_WHEN,74,3172
	EXPR_KIND_POLICY,75,3237
	EXPR_KIND_PARTITION_BOUND,76,3299
	EXPR_KIND_PARTITION_EXPRESSION,77,3360
	EXPR_KIND_CALL_ARGUMENT,78,3423
	EXPR_KIND_COPY_WHERE,79,3482
	EXPR_KIND_GENERATED_COLUMN,80,3541
} ParseExprKind;81,3611
typedef Node *(*PreParseColumnRefHook)PreParseColumnRefHook87,3677
typedef Node *(*PostParseColumnRefHook)PostParseColumnRefHook88,3755
typedef Node *(*ParseParamRefHook)ParseParamRefHook89,3845
typedef Node *(*CoerceParamHook)CoerceParamHook90,3918
struct ParseState176,7738
	ParseState *parentParseState;parentParseState178,7758
	const char *p_sourcetext;p_sourcetext179,7806
	List	   *p_rtable;p_rtable180,7877
	List	   *p_joinexprs;p_joinexprs181,7923
	List	   *p_joinlist;p_joinlist182,7992
	List	   *p_namespace;p_namespace184,8089
	bool		p_lateral_active;186,8187
	List	   *p_ctenamespace;p_ctenamespace187,8248
	List	   *p_future_ctes;p_future_ctes188,8321
	CommonTableExpr *p_parent_cte;p_parent_cte189,8392
	Relation	p_target_relation;190,8458
	ParseNamespaceItem *p_target_nsitem;p_target_nsitem191,8525
	bool		p_is_insert;192,8598
	List	   *p_windowdefs;p_windowdefs193,8666
	ParseExprKind p_expr_kind;194,8734
	int			p_next_resno;195,8806
	List	   *p_multiassign_exprs;p_multiassign_exprs196,8865
	List	   *p_locking_clause;p_locking_clause197,8937
	bool		p_locked_from_parent;198,9001
	bool		p_resolve_unknowns;200,9107
	QueryEnvironment *p_queryEnv;p_queryEnv203,9202
	bool		p_hasAggs;206,9331
	bool		p_hasWindowFuncs;207,9349
	bool		p_hasTargetSRFs;208,9374
	bool		p_hasSubLinks;209,9398
	bool		p_hasModifyingCTE;210,9420
	Node	   *p_last_srf;p_last_srf212,9447
	PreParseColumnRefHook p_pre_columnref_hook;218,9644
	PostParseColumnRefHook p_post_columnref_hook;219,9689
	ParseParamRefHook p_paramref_hook;220,9736
	CoerceParamHook p_coerce_param_hook;221,9772
	void	   *p_ref_hook_state;p_ref_hook_state222,9810
struct ParseNamespaceItem255,11562
	RangeTblEntry *p_rte;p_rte257,11590
	int			p_rtindex;258,11652
	ParseNamespaceColumn *p_nscolumns;p_nscolumns260,11770
	bool		p_rel_visible;261,11828
	bool		p_cols_visible;262,11882
	bool		p_lateral_only;263,11953
	bool		p_lateral_ok;264,12022
struct ParseNamespaceColumn288,13143
	Index		p_varno;290,13173
	AttrNumber	p_varattno;291,13214
	Oid			p_vartype;292,13276
	int32		p_vartypmod;293,13313
	Oid			p_varcollid;294,13360
	Index		p_varnosyn;295,13418
	AttrNumber	p_varattnosyn;296,13484
typedef struct ParseCallbackState300,13615
	ParseState *pstate;pstate302,13651
	int			location;303,13672
	ErrorContextCallback errcallback;304,13689
} ParseCallbackState;305,13724

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_type.h,86
#define PARSE_TYPE_H14,423
typedef HeapTuple Type;20,503
#define ISCOMPLEX(58,2091

/home/seinoyu/pgsql/master/postgresql/src/include/parser/parse_clause.h,30
#define PARSE_CLAUSE_H15,424

/home/seinoyu/pgsql/master/postgresql/src/include/parser/scanner.h,1162
#define SCANNER_H20,615
typedef union core_YYSTYPE29,854
	int			ival;31,883
	char	   *str;str32,925
	const char *keyword;keyword33,989
} core_YYSTYPE;34,1049
#define YYLTYPE 44,1481
typedef struct core_yy_extra_type66,2495
	char	   *scanbuf;scanbuf72,2689
	Size		scanbuflen;73,2708
	const ScanKeywordList *keywordlist;keywordlist78,2806
	const uint16 *keyword_tokens;keyword_tokens79,2843
	int			backslash_quote;87,3131
	bool		escape_string_warning;88,3155
	bool		standard_conforming_strings;89,3185
	char	   *literalbuf;literalbuf98,3599
	int			literallen;99,3655
	int			literalalloc;100,3710
	int			state_before_str_stop;105,3812
	int			xcdepth;106,3877
	char	   *dolqstart;dolqstart107,3940
	YYLTYPE		save_yylloc;108,4001
	int32		utf16_first_part;111,4129
	bool		warn_on_first_escape;114,4207
	bool		saw_non_ascii;115,4236
} core_yy_extra_type;116,4258
typedef void *core_yyscan_t;core_yyscan_t121,4339
typedef struct ScannerCallbackState124,4425
	core_yyscan_t yyscanner;126,4463
	int			location;127,4489
	ErrorContextCallback errcallback;128,4506
} ScannerCallbackState;129,4541
extern void scanner_yyerror(148,5325

/home/seinoyu/pgsql/master/postgresql/src/include/common/pg_lzcompress.h,322
#define _PG_LZCOMPRESS_H_11,169
#define PGLZ_MAX_OUTPUT(21,390
typedef struct PGLZ_Strategy57,1715
	int32		min_input_size;59,1746
	int32		max_input_size;60,1770
	int32		min_comp_rate;61,1794
	int32		first_success_by;62,1817
	int32		match_size_good;63,1843
	int32		match_size_drop;64,1868
} PGLZ_Strategy;65,1893

/home/seinoyu/pgsql/master/postgresql/src/include/common/logging.h,429
#define COMMON_LOGGING_H11,329
enum pg_log_level16,434
	PG_LOG_NOTSET 21,487
	PG_LOG_DEBUG,26,574
	PG_LOG_INFO,33,752
	PG_LOG_WARNING,38,833
	PG_LOG_ERROR,43,871
	PG_LOG_FATAL,50,1071
	PG_LOG_OFF,55,1122
#define PG_LOG_FLAG_TERSE	64,1292
void		pg_log_generic(72,1604
#define pg_log_fatal(75,1827
#define pg_log_error(79,1964
#define pg_log_warning(83,2101
#define pg_log_info(87,2244
#define pg_log_debug(91,2378

/home/seinoyu/pgsql/master/postgresql/src/include/common/unicode_normprops_table.h,301
	unsigned int codepoint:codepoint10,188
	signed int	quickcheck:quickcheck11,216
} pg_unicode_normprops;12,278
static const pg_unicode_normprops UnicodeNormProps_NFC_QC[UnicodeNormProps_NFC_QC14,303
static const pg_unicode_normprops UnicodeNormProps_NFKC_QC[UnicodeNormProps_NFKC_QC1248,39429

/home/seinoyu/pgsql/master/postgresql/src/include/common/saslprep.h,159
#define SASLPREP_H15,420
	SASLPREP_SUCCESS 22,506
	SASLPREP_OOM 23,529
	SASLPREP_INVALID_UTF8 24,590
	SASLPREP_PROHIBITED 25,659
} pg_saslprep_rc;26,734

/home/seinoyu/pgsql/master/postgresql/src/include/common/unicode_norm_table.h,569
	uint32		codepoint;21,622
	uint8		comb_class;22,667
	uint8		dec_size_flags;23,723
	uint16		dec_index;24,795
} pg_unicode_decomposition;26,915
#define DECOMP_NO_COMPOSE	28,944
#define DECOMP_INLINE	29,1010
#define DECOMP_COMPAT	31,1100
#define DECOMPOSITION_SIZE(33,1157
#define DECOMPOSITION_NO_COMPOSE(34,1216
#define DECOMPOSITION_IS_INLINE(35,1319
#define DECOMPOSITION_IS_COMPAT(36,1399
static const pg_unicode_decomposition UnicodeDecompMain[UnicodeDecompMain39,1539
static const uint32 UnicodeDecomp_codepoints[UnicodeDecomp_codepoints6649,278552

/home/seinoyu/pgsql/master/postgresql/src/include/common/archive.h,25
#define ARCHIVE_H14,409

/home/seinoyu/pgsql/master/postgresql/src/include/common/unicode_combining_table.h,57
static const struct mbinterval combining[combining3,88

/home/seinoyu/pgsql/master/postgresql/src/include/common/hashfn.h,255
#define HASHFN_H8,144
#define ROTATE_HIGH_AND_LOW_32BITS(18,488
hash_any(31,928
hash_any_extended(37,1045
hash_uint32(43,1199
hash_uint32_extended(49,1292
#define oid_hash 59,1581
hash_combine(68,1802
hash_combine64(80,2105
murmurhash32(92,2387

/home/seinoyu/pgsql/master/postgresql/src/include/common/relpath.h,422
#define RELPATH_H14,427
#define TABLESPACE_VERSION_DIRECTORY	26,695
#define OIDCHARS	30,859
typedef enum ForkNumber40,1217
	InvalidForkNumber 42,1243
	MAIN_FORKNUM 43,1268
	FSM_FORKNUM,44,1287
	VISIBILITYMAP_FORKNUM,45,1301
	INIT_FORKNUM46,1325
} ForkNumber;53,1498
#define MAX_FORKNUM	55,1513
#define FORKNAMECHARS	57,1548
#define relpathbackend(78,2175
#define relpathperm(83,2356
#define relpath(87,2490

/home/seinoyu/pgsql/master/postgresql/src/include/common/restricted_token.h,41
#define COMMON_RESTRICTED_TOKEN_H11,312

/home/seinoyu/pgsql/master/postgresql/src/include/common/string.h,31
#define COMMON_STRING_H11,253

/home/seinoyu/pgsql/master/postgresql/src/include/common/kwlookup.h,353
#define KWLOOKUP_H15,418
typedef int (*ScanKeywordHashFunc)ScanKeywordHashFunc18,484
typedef struct ScanKeywordList25,788
	const char *kw_string;kw_string27,821
	const uint16 *kw_offsets;kw_offsets28,891
	ScanKeywordHashFunc hash;29,961
	int			num_keywords;30,1029
	int			max_kw_len;31,1075
} ScanKeywordList;32,1127
GetScanKeyword(39,1337

/home/seinoyu/pgsql/master/postgresql/src/include/common/int.h,565
#define COMMON_INT_H21,772
pg_add_s16_overflow(47,1602
pg_sub_s16_overflow(65,1976
pg_mul_s16_overflow(83,2350
pg_add_s32_overflow(104,2740
pg_sub_s32_overflow(122,3114
pg_mul_s32_overflow(140,3488
pg_add_s64_overflow(161,3878
pg_sub_s64_overflow(188,4483
pg_mul_s64_overflow(215,5088
pg_add_u16_overflow(266,6604
pg_sub_u16_overflow(284,6925
pg_mul_u16_overflow(300,7223
pg_add_u32_overflow(321,7599
pg_sub_u32_overflow(339,7920
pg_mul_u32_overflow(355,8218
pg_add_u64_overflow(376,8595
pg_sub_u64_overflow(394,8916
pg_mul_u64_overflow(410,9214

/home/seinoyu/pgsql/master/postgresql/src/include/common/username.h,26
#define USERNAME_H10,173

/home/seinoyu/pgsql/master/postgresql/src/include/common/md5.h,90
#define PG_MD5_H17,507
#define MD5_PASSWD_CHARSET	19,525
#define MD5_PASSWD_LEN	20,571

/home/seinoyu/pgsql/master/postgresql/src/include/common/unicode_norm.h,272
#define UNICODE_NORM_H15,424
	UNICODE_NFC 21,489
	UNICODE_NFD 22,507
	UNICODE_NFKC 23,525
	UNICODE_NFKD 24,544
} UnicodeNormalizationForm;25,563
	UNICODE_NORM_QC_NO 30,625
	UNICODE_NORM_QC_YES 31,650
	UNICODE_NORM_QC_MAYBE 32,676
} UnicodeNormalizationQC;33,705

/home/seinoyu/pgsql/master/postgresql/src/include/common/checksum_helper.h,712
#define CHECKSUM_HELPER_H15,420
typedef enum pg_checksum_type28,923
	CHECKSUM_TYPE_NONE,30,955
	CHECKSUM_TYPE_CRC32C,31,976
	CHECKSUM_TYPE_SHA224,32,999
	CHECKSUM_TYPE_SHA256,33,1022
	CHECKSUM_TYPE_SHA384,34,1045
	CHECKSUM_TYPE_SHA51235,1068
} pg_checksum_type;36,1090
typedef union pg_checksum_raw_context41,1175
	pg_crc32c	c_crc32c;43,1215
	pg_sha224_ctx c_sha224;44,1236
	pg_sha256_ctx c_sha256;45,1261
	pg_sha384_ctx c_sha384;46,1286
	pg_sha512_ctx c_sha512;47,1311
} pg_checksum_raw_context;48,1336
typedef struct pg_checksum_context54,1486
	pg_checksum_type type;56,1523
	pg_checksum_raw_context raw_context;57,1547
} pg_checksum_context;58,1585
#define PG_CHECKSUM_MAX_LENGTH	64,1709

/home/seinoyu/pgsql/master/postgresql/src/include/common/ip.h,74
#define IP_H15,396
#define IS_AF_UNIX(22,540
#define IS_AF_UNIX(24,589

/home/seinoyu/pgsql/master/postgresql/src/include/common/base64.h,24
#define BASE64_H11,226

/home/seinoyu/pgsql/master/postgresql/src/include/common/int128.h,616
#define INT128_H18,543
#define USE_NATIVE_INT128 26,719
#define USE_NATIVE_INT128 28,753
typedef int128 INT128;35,820
int128_add_uint64(41,926
int128_add_int64(50,1065
int128_add_int64_mul_int64(62,1365
int128_compare(71,1540
int64_to_int128(84,1694
int128_to_int64(94,1880
	int64		hi;110,2268
	uint64		lo;111,2330
	uint64		lo;113,2398
	int64		hi;114,2460
} INT128;116,2529
int128_add_uint64(122,2622
int128_add_int64(143,3282
#define INT64_AU32(170,3980
#define INT64_AL32(171,4018
int128_add_int64_mul_int64(177,4175
int128_compare(238,5939
int64_to_int128(255,6166
int128_to_int64(269,6434

/home/seinoyu/pgsql/master/postgresql/src/include/common/config_info.h,152
#define COMMON_CONFIG_INFO_H10,196
typedef struct ConfigData12,226
	char	   *name;name14,254
	char	   *setting;setting15,270
} ConfigData;16,289

/home/seinoyu/pgsql/master/postgresql/src/include/common/shortest_dec.h,120
#define SHORTEST_DEC_H35,1196
#define DOUBLE_SHORTEST_DECIMAL_LEN 44,1399
#define FLOAT_SHORTEST_DECIMAL_LEN 57,1769

/home/seinoyu/pgsql/master/postgresql/src/include/common/sha2.h,1125
#define _PG_SHA2_H_51,2155
#define PG_SHA224_BLOCK_LENGTH	58,2304
#define PG_SHA224_DIGEST_LENGTH	59,2340
#define PG_SHA224_DIGEST_STRING_LENGTH	60,2377
#define PG_SHA256_BLOCK_LENGTH	61,2450
#define PG_SHA256_DIGEST_LENGTH	62,2486
#define PG_SHA256_DIGEST_STRING_LENGTH	63,2523
#define PG_SHA384_BLOCK_LENGTH	64,2596
#define PG_SHA384_DIGEST_LENGTH	65,2633
#define PG_SHA384_DIGEST_STRING_LENGTH	66,2670
#define PG_SHA512_BLOCK_LENGTH	67,2743
#define PG_SHA512_DIGEST_LENGTH	68,2780
#define PG_SHA512_DIGEST_STRING_LENGTH	69,2817
typedef SHA256_CTX pg_sha256_ctx;73,2958
typedef SHA512_CTX pg_sha512_ctx;74,2992
typedef SHA256_CTX pg_sha224_ctx;75,3026
typedef SHA512_CTX pg_sha384_ctx;76,3060
typedef struct pg_sha256_ctx78,3100
	uint32		state[state80,3131
	uint64		bitcount;81,3150
	uint8		buffer[buffer82,3169
} pg_sha256_ctx;83,3209
typedef struct pg_sha512_ctx84,3226
	uint64		state[state86,3257
	uint64		bitcount[bitcount87,3276
	uint8		buffer[buffer88,3298
} pg_sha512_ctx;89,3338
typedef struct pg_sha256_ctx pg_sha224_ctx;90,3355
typedef struct pg_sha512_ctx pg_sha384_ctx;91,3399

/home/seinoyu/pgsql/master/postgresql/src/include/common/keywords.h,166
#define KEYWORDS_H15,421
#define UNRESERVED_KEYWORD	20,529
#define COL_NAME_KEYWORD	21,559
#define TYPE_FUNC_NAME_KEYWORD	22,587
#define RESERVED_KEYWORD	23,620

/home/seinoyu/pgsql/master/postgresql/src/include/common/scram-common.h,375
#define SCRAM_COMMON_H14,459
#define SCRAM_SHA_256_NAME 19,549
#define SCRAM_SHA_256_PLUS_NAME 20,592
#define SCRAM_KEY_LEN	23,720
#define SHA256_HMAC_B	26,791
#define SCRAM_RAW_NONCE_LEN	33,1042
#define SCRAM_DEFAULT_SALT_LEN	40,1257
#define SCRAM_DEFAULT_ITERATIONS	46,1398
	pg_sha256_ctx sha256ctx;53,1516
	uint8		k_opad[k_opad54,1542
} scram_HMAC_ctx;55,1573

/home/seinoyu/pgsql/master/postgresql/src/include/common/file_utils.h,28
#define FILE_UTILS_H16,477

/home/seinoyu/pgsql/master/postgresql/src/include/common/fe_memutils.h,167
#define FE_MEMUTILS_H10,200
#define MCXT_ALLOC_HUGE	16,336
#define MCXT_ALLOC_NO_OOM	18,449
#define MCXT_ALLOC_ZERO	19,515
extern char *psprintf(psprintf42,1396

/home/seinoyu/pgsql/master/postgresql/src/include/common/jsonapi.h,2236
#define JSONAPI_H15,417
	JSON_TOKEN_INVALID,21,480
	JSON_TOKEN_STRING,22,501
	JSON_TOKEN_NUMBER,23,521
	JSON_TOKEN_OBJECT_START,24,541
	JSON_TOKEN_OBJECT_END,25,567
	JSON_TOKEN_ARRAY_START,26,591
	JSON_TOKEN_ARRAY_END,27,616
	JSON_TOKEN_COMMA,28,639
	JSON_TOKEN_COLON,29,658
	JSON_TOKEN_TRUE,30,677
	JSON_TOKEN_FALSE,31,695
	JSON_TOKEN_NULL,32,714
	JSON_TOKEN_END33,732
} JsonTokenType;34,748
	JSON_SUCCESS,38,781
	JSON_ESCAPING_INVALID,39,796
	JSON_ESCAPING_REQUIRED,40,820
	JSON_EXPECTED_ARRAY_FIRST,41,845
	JSON_EXPECTED_ARRAY_NEXT,42,873
	JSON_EXPECTED_COLON,43,900
	JSON_EXPECTED_END,44,922
	JSON_EXPECTED_JSON,45,942
	JSON_EXPECTED_MORE,46,963
	JSON_EXPECTED_OBJECT_FIRST,47,984
	JSON_EXPECTED_OBJECT_NEXT,48,1013
	JSON_EXPECTED_STRING,49,1041
	JSON_INVALID_TOKEN,50,1064
	JSON_UNICODE_CODE_POINT_ZERO,51,1085
	JSON_UNICODE_ESCAPE_FORMAT,52,1116
	JSON_UNICODE_HIGH_ESCAPE,53,1145
	JSON_UNICODE_HIGH_SURROGATE,54,1172
	JSON_UNICODE_LOW_SURROGATE55,1202
} JsonParseErrorType;56,1230
typedef struct JsonLexContext72,1787
	char	   *input;input74,1819
	int			input_length;75,1836
	int			input_encoding;76,1857
	char	   *token_start;token_start77,1880
	char	   *token_terminator;token_terminator78,1903
	char	   *prev_token_terminator;prev_token_terminator79,1931
	JsonTokenType token_type;80,1964
	int			lex_level;81,1991
	int			line_number;82,2009
	char	   *line_start;line_start83,2029
	StringInfo	strval;84,2051
} JsonLexContext;85,2071
typedef void (*json_struct_action)json_struct_action87,2090
typedef void (*json_ofield_action)json_ofield_action88,2140
typedef void (*json_aelem_action)json_aelem_action89,2216
typedef void (*json_scalar_action)json_scalar_action90,2278
typedef struct JsonSemAction104,2886
	void	   *semstate;semstate106,2917
	json_struct_action object_start;107,2937
	json_struct_action object_end;108,2971
	json_struct_action array_start;109,3003
	json_struct_action array_end;110,3036
	json_ofield_action object_field_start;111,3067
	json_ofield_action object_field_end;112,3107
	json_aelem_action array_element_start;113,3145
	json_aelem_action array_element_end;114,3185
	json_scalar_action scalar;115,3223
} JsonSemAction;116,3251

/home/seinoyu/pgsql/master/postgresql/src/include/common/openssl.h,236
#define COMMON_OPENSSL_H15,478
#define MIN_OPENSSL_TLS_VERSION 29,932
#define MAX_OPENSSL_TLS_VERSION 32,1002
#define MAX_OPENSSL_TLS_VERSION 34,1075
#define MAX_OPENSSL_TLS_VERSION 36,1148
#define MAX_OPENSSL_TLS_VERSION 38,1197

/home/seinoyu/pgsql/master/postgresql/src/include/common/link-canary.h,29
#define LINK_CANARY_H13,379

/home/seinoyu/pgsql/master/postgresql/src/include/common/file_perm.h,237
#define FILE_PERM_H14,415
#define PG_MODE_MASK_OWNER	24,604
#define PG_MODE_MASK_GROUP	29,745
#define PG_DIR_MODE_OWNER	32,839
#define PG_DIR_MODE_GROUP	35,943
#define PG_FILE_MODE_OWNER	38,1040
#define PG_FILE_MODE_GROUP	41,1146

/home/seinoyu/pgsql/master/postgresql/src/include/common/controldata_utils.h,42
#define COMMON_CONTROLDATA_UTILS_H11,300

/home/seinoyu/pgsql/master/postgresql/src/include/partitioning/partprune.h,514
#define PARTPRUNE_H15,423
typedef struct PartitionPruneContext48,1835
	char		strategy;50,1874
	int			partnatts;51,1891
	int			nparts;52,1909
	PartitionBoundInfo boundinfo;53,1924
	Oid		   *partcollation;partcollation54,1955
	FmgrInfo   *partsupfunc;partsupfunc55,1980
	FmgrInfo   *stepcmpfuncs;stepcmpfuncs56,2006
	MemoryContext ppccontext;57,2033
	PlanState  *planstate;planstate58,2060
	ExprState **exprstates;exprstates59,2084
} PartitionPruneContext;60,2109
#define PruneCxtStateIdx(68,2407

/home/seinoyu/pgsql/master/postgresql/src/include/partitioning/partdesc.h,216
#define PARTDESC_H13,305
typedef struct PartitionDescData21,452
	int			nparts;23,487
	Oid		   *oids;oids24,531
	bool	   *is_leaf;is_leaf26,648
	PartitionBoundInfo boundinfo;29,807
} PartitionDescData;30,875

/home/seinoyu/pgsql/master/postgresql/src/include/partitioning/partbounds.h,421
#define PARTBOUNDS_H12,310
typedef struct PartitionBoundInfoData60,2707
	char		strategy;62,2747
	int			ndatums;63,2792
	Datum	  **datums;datums64,2852
	PartitionRangeDatumKind **kind;kind65,2871
	int		   *indexes;indexes68,3012
	int			null_index;69,3056
	int			default_index;71,3154
} PartitionBoundInfoData;73,3247
#define partition_bound_accepts_nulls(75,3274
#define partition_bound_has_default(76,3341

/home/seinoyu/pgsql/master/postgresql/src/include/partitioning/partdefs.h,394
#define PARTDEFS_H13,356
typedef struct PartitionBoundInfoData *PartitionBoundInfo;PartitionBoundInfo16,377
typedef struct PartitionKeyData *PartitionKey;PartitionKey18,437
typedef struct PartitionBoundSpec PartitionBoundSpec;20,485
typedef struct PartitionDescData *PartitionDesc;PartitionDesc22,540
typedef struct PartitionDirectoryData *PartitionDirectory;PartitionDirectory24,590

/home/seinoyu/pgsql/master/postgresql/src/include/pgtar.h,182
#define PG_TAR_H15,439
#define		TAR_BLOCK_SIZE	17,457
enum tarError19,486
	TAR_OK 21,502
	TAR_NAME_TOO_LONG,22,515
	TAR_SYMLINK_TOO_LONG23,535
tarPaddingBytesRequired(40,1114

/home/seinoyu/pgsql/master/postgresql/src/include/pg_config.h,6569
#define ACCEPT_TYPE_ARG1 5,203
#define ACCEPT_TYPE_ARG2 8,279
#define ACCEPT_TYPE_ARG3 11,369
#define ACCEPT_TYPE_RETURN 14,449
#define ALIGNOF_DOUBLE 20,629
#define ALIGNOF_INT 23,702
#define ALIGNOF_LONG 26,773
#define ALIGNOF_PG_INT128_TYPE 32,948
#define ALIGNOF_SHORT 35,1032
#define BLCKSZ 44,1552
#define CONFIGURE_ARGS 47,1610
#define DEF_PGPORT 53,2000
#define DEF_PGPORT_STR 56,2091
#define ENABLE_THREAD_SAFETY 66,2396
# define gettimeofday(72,2544
#define HAVE_APPEND_HISTORY 76,2656
#define HAVE_ATOMICS 82,2855
#define HAVE_BACKTRACE_SYMBOLS 88,3029
#define HAVE_CLOCK_GETTIME 97,3305
#define HAVE_COMPUTED_GOTO 100,3394
#define HAVE_DECL_FDATASYNC 116,3862
#define HAVE_DECL_F_FULLFSYNC 120,3983
#define HAVE_DECL_POSIX_FADVISE 144,4884
#define HAVE_DECL_RTLD_GLOBAL 148,5009
#define HAVE_DECL_RTLD_NOW 152,5129
#define HAVE_DECL_STRLCAT 156,5245
#define HAVE_DECL_STRLCPY 160,5360
#define HAVE_DECL_STRNLEN 164,5475
#define HAVE_DECL_STRTOLL 168,5590
#define HAVE_DECL_STRTOULL 172,5706
#define HAVE_DLOPEN 175,5789
#define HAVE_EXECINFO_H 184,6086
#define HAVE_EXPLICIT_BZERO 187,6174
#define HAVE_FDATASYNC 190,6261
#define HAVE_FSEEKO 196,6436
#define HAVE_FUNCNAME__FUNC 199,6516
#define HAVE_GCC__ATOMIC_INT32_CAS 205,6724
#define HAVE_GCC__ATOMIC_INT64_CAS 209,6849
#define HAVE_GCC__SYNC_CHAR_TAS 212,6963
#define HAVE_GCC__SYNC_INT32_CAS 215,7074
#define HAVE_GCC__SYNC_INT32_TAS 218,7185
#define HAVE_GCC__SYNC_INT64_CAS 222,7306
#define HAVE_GETADDRINFO 225,7400
#define HAVE_GETHOSTBYNAME_R 228,7490
#define HAVE_GETIFADDRS 231,7579
#define HAVE_GETOPT 234,7659
#define HAVE_GETOPT_H 237,7740
#define HAVE_GETOPT_LONG 240,7823
#define HAVE_GETPWUID_R 249,8086
#define HAVE_GETRLIMIT 252,8169
#define HAVE_GETRUSAGE 255,8251
#define HAVE_HISTORY_TRUNCATE_FILE 270,8710
#define HAVE_IFADDRS_H 273,8807
#define HAVE_INET_ATON 276,8889
#define HAVE_INTTYPES_H 285,9131
#define HAVE_INT_OPTERR 288,9222
#define HAVE_INT_TIMEZONE 294,9413
#define HAVE_IPV6 297,9490
#define HAVE_LANGINFO_H 306,9774
#define HAVE_LIBM 324,10303
#define HAVE_LIBREADLINE 330,10460
#define HAVE_LIBZ 348,10986
#define HAVE_LINK 351,11058
#define HAVE_LOCALE_T 354,11136
#define HAVE_LONG_INT_64 357,11215
#define HAVE_MEMORY_H 369,11573
#define HAVE_MKDTEMP 378,11830
#define HAVE_NETINET_TCP_H 381,11917
#define HAVE_NET_IF_H 384,12005
#define HAVE_POLL 396,12370
#define HAVE_POLL_H 399,12447
#define HAVE_POSIX_FADVISE 402,12530
#define HAVE_POSIX_FALLOCATE 405,12622
#define HAVE_PPOLL 411,12818
#define HAVE_PREAD 414,12892
#define HAVE_PTHREAD 423,13138
#define HAVE_PTHREAD_PRIO_INHERIT 429,13306
#define HAVE_PWRITE 432,13396
#define HAVE_RANDOM 435,13472
#define HAVE_READLINE_HISTORY_H 441,13653
#define HAVE_READLINE_READLINE_H 444,13757
#define HAVE_READLINK 447,13848
#define HAVE_RL_COMPLETION_APPEND_CHARACTER 451,13960
#define HAVE_RL_COMPLETION_MATCHES 454,14075
#define HAVE_RL_COMPLETION_SUPPRESS_QUOTE 458,14198
#define HAVE_RL_FILENAME_COMPLETION_FUNCTION 461,14321
#define HAVE_RL_FILENAME_QUOTE_CHARACTERS 465,14454
#define HAVE_RL_FILENAME_QUOTING_FUNCTION 469,14584
#define HAVE_RL_RESET_SCREEN_SIZE 472,14696
#define HAVE_SETSID 484,15086
#define HAVE_SHM_OPEN 487,15164
#define HAVE_SPINLOCKS 490,15230
#define HAVE_SRANDOM 493,15310
#define HAVE_STDBOOL_H 496,15382
#define HAVE_STDINT_H 499,15466
#define HAVE_STDLIB_H 502,15549
#define HAVE_STRCHRNUL 505,15630
#define HAVE_STRERROR_R 508,15713
#define HAVE_STRINGS_H 511,15799
#define HAVE_STRING_H 514,15883
#define HAVE_STRNLEN 523,16124
#define HAVE_STRSIGNAL 526,16204
#define HAVE_STRTOF 529,16283
#define HAVE_STRTOLL 532,16360
#define HAVE_STRTOULL 538,16518
#define HAVE_STRUCT_ADDRINFO 544,16688
#define HAVE_STRUCT_OPTION 550,16881
#define HAVE_STRUCT_SOCKADDR_STORAGE 556,17089
#define HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY 559,17204
#define HAVE_STRUCT_SOCKADDR_UN 571,17701
#define HAVE_STRUCT_TM_TM_ZONE 574,17795
#define HAVE_SYMLINK 577,17883
#define HAVE_SYNC_FILE_RANGE 580,17969
#define HAVE_SYSLOG 583,18053
#define HAVE_SYS_EPOLL_H 586,18137
#define HAVE_SYS_IPC_H 592,18316
#define HAVE_SYS_PRCTL_H 595,18403
#define HAVE_SYS_RESOURCE_H 604,18683
#define HAVE_SYS_SELECT_H 607,18776
#define HAVE_SYS_SEM_H 610,18864
#define HAVE_SYS_SHM_H 613,18949
#define HAVE_SYS_STAT_H 619,19129
#define HAVE_SYS_TYPES_H 625,19305
#define HAVE_SYS_UN_H 631,19483
#define HAVE_TERMIOS_H 634,19567
#define HAVE_TYPEOF 637,19671
#define HAVE_UNISTD_H 652,20087
#define HAVE_UNSETENV 655,20167
#define HAVE_USELOCALE 658,20248
#define HAVE_WCTYPE_H 679,20825
#define HAVE_X86_64_POPCNTQ 688,21123
#define HAVE__BOOL 691,21208
#define HAVE__BUILTIN_BSWAP16 694,21296
#define HAVE__BUILTIN_BSWAP32 697,21395
#define HAVE__BUILTIN_BSWAP64 700,21494
#define HAVE__BUILTIN_CLZ 703,21589
#define HAVE__BUILTIN_CONSTANT_P 706,21687
#define HAVE__BUILTIN_CTZ 709,21785
#define HAVE__BUILTIN_OP_OVERFLOW 712,21885
#define HAVE__BUILTIN_POPCOUNT 715,21989
#define HAVE__BUILTIN_TYPES_COMPATIBLE_P 718,22100
#define HAVE__BUILTIN_UNREACHABLE 721,22214
#define HAVE__GET_CPUID 730,22464
#define HAVE__STATIC_ASSERT 733,22554
#define INT64_MODIFIER 742,22829
#define MAXIMUM_ALIGNOF 748,23015
#define MEMSET_LOOP_LIMIT 751,23083
#define PACKAGE_BUGREPORT 758,23340
#define PACKAGE_NAME 761,23448
#define PACKAGE_STRING 764,23542
#define PACKAGE_TARNAME 767,23646
#define PACKAGE_URL 770,23732
#define PACKAGE_VERSION 773,23828
#define PG_INT128_TYPE 776,23922
#define PG_INT64_TYPE 779,24013
#define PG_KRB_SRVNAM 783,24164
#define PG_MAJORVERSION 786,24241
#define PG_MAJORVERSION_NUM 789,24309
#define PG_MINORVERSION_NUM 792,24379
#define PG_PRINTF_ATTRIBUTE 795,24489
#define PG_USE_STDBOOL 798,24587
#define PG_VERSION 801,24650
#define PG_VERSION_NUM 804,24717
#define PG_VERSION_STR 807,24819
#define RELSEG_SIZE 828,25988
#define SIZEOF_BOOL 831,26065
#define SIZEOF_LONG 834,26137
#define SIZEOF_OFF_T 837,26210
#define SIZEOF_SIZE_T 840,26285
#define SIZEOF_VOID_P 843,26361
#define STDC_HEADERS 846,26441
#define USE_ASSERT_CHECKING 858,26804
#define USE_DEV_URANDOM 867,27094
#define USE_SSE42_CRC32C_WITH_RUNTIME_CHECK 904,28189
#define USE_SYSV_SHARED_MEMORY 913,28452
#define USE_UNNAMED_POSIX_SEMAPHORES 916,28535
#  define WORDS_BIGENDIAN 934,29147
#define XLOG_BLCKSZ 947,29581
#define pg_restrict 968,30180
#define restrict 973,30371
# define _Restrict980,30807
# define __restrict__981,30826

/home/seinoyu/pgsql/master/postgresql/src/include/fmgr.h,6545
#define FMGR_H19,560
typedef struct Node *fmNodePtr;fmNodePtr22,654
typedef struct Aggref *fmAggrefPtr;fmAggrefPtr23,686
typedef void (*fmExprContextCallbackFunction)fmExprContextCallbackFunction26,772
typedef struct StringInfoData *fmStringInfo;fmStringInfo29,882
typedef struct FunctionCallInfoBaseData *FunctionCallInfo;FunctionCallInfo38,1104
typedef Datum (*PGFunction)PGFunction40,1164
typedef struct FmgrInfo56,1877
	PGFunction	fn_addr;58,1903
	Oid			fn_oid;59,1975
	short		fn_nargs;60,2039
	bool		fn_strict;61,2104
	bool		fn_retset;62,2172
	unsigned char fn_stats;63,2220
	void	   *fn_extra;fn_extra64,2292
	MemoryContext fn_mcxt;65,2350
	fmNodePtr	fn_expr;66,2417
} FmgrInfo;67,2484
typedef struct FunctionCallInfoBaseData85,3283
	FmgrInfo   *flinfo;flinfo87,3325
	fmNodePtr	context;88,3392
	fmNodePtr	resultinfo;89,3451
	Oid			fncollation;90,3520
#define FIELDNO_FUNCTIONCALLINFODATA_ISNULL 91,3576
	bool		isnull;92,3622
	short		nargs;93,3686
#define FIELDNO_FUNCTIONCALLINFODATA_ARGS 94,3737
	NullableDatum args[args95,3781
} FunctionCallInfoBaseData;96,3825
#define SizeForFunctionCallInfo(102,3963
#define LOCAL_FCINFO(110,4236
#define fmgr_info_set_expr(135,5067
#define InitFunctionCallInfoData(150,5447
#define FunctionCallInvoke(172,6354
#define PG_FUNCTION_ARGS	193,6975
#define PG_GET_COLLATION(198,7070
#define PG_NARGS(203,7174
#define PG_ARGISNULL(209,7365
#define PG_DETOAST_DATUM(240,9050
#define PG_DETOAST_DATUM_COPY(242,9145
#define PG_DETOAST_DATUM_SLICE(244,9250
#define PG_DETOAST_DATUM_PACKED(248,9427
#define PG_FREE_IF_COPY(260,9987
#define PG_GETARG_DATUM(268,10163
#define PG_GETARG_INT32(269,10215
#define PG_GETARG_UINT32(270,10277
#define PG_GETARG_INT16(271,10341
#define PG_GETARG_UINT16(272,10403
#define PG_GETARG_CHAR(273,10467
#define PG_GETARG_BOOL(274,10527
#define PG_GETARG_OID(275,10587
#define PG_GETARG_POINTER(276,10650
#define PG_GETARG_CSTRING(277,10715
#define PG_GETARG_NAME(278,10780
#define PG_GETARG_FLOAT4(280,10908
#define PG_GETARG_FLOAT8(281,10972
#define PG_GETARG_INT64(282,11036
#define PG_GETARG_RAW_VARLENA_P(284,11164
#define PG_GETARG_VARLENA_P(286,11296
#define PG_GETARG_VARLENA_PP(288,11419
#define DatumGetByteaPP(290,11569
#define DatumGetTextPP(291,11637
#define DatumGetBpCharPP(292,11703
#define DatumGetVarCharPP(293,11773
#define DatumGetHeapTupleHeader(294,11844
#define DatumGetByteaPCopy(296,11984
#define DatumGetTextPCopy(297,12052
#define DatumGetBpCharPCopy(298,12118
#define DatumGetVarCharPCopy(299,12188
#define DatumGetHeapTupleHeaderCopy(300,12260
#define DatumGetByteaPSlice(302,12399
#define DatumGetTextPSlice(303,12476
#define DatumGetBpCharPSlice(304,12551
#define DatumGetVarCharPSlice(305,12630
#define PG_GETARG_BYTEA_PP(307,12780
#define PG_GETARG_TEXT_PP(308,12847
#define PG_GETARG_BPCHAR_PP(309,12912
#define PG_GETARG_VARCHAR_PP(310,12981
#define PG_GETARG_HEAPTUPLEHEADER(311,13052
#define PG_GETARG_BYTEA_P_COPY(313,13198
#define PG_GETARG_TEXT_P_COPY(314,13271
#define PG_GETARG_BPCHAR_P_COPY(315,13342
#define PG_GETARG_VARCHAR_P_COPY(316,13417
#define PG_GETARG_HEAPTUPLEHEADER_COPY(317,13494
#define PG_GETARG_BYTEA_P_SLICE(319,13643
#define PG_GETARG_TEXT_P_SLICE(320,13726
#define PG_GETARG_BPCHAR_P_SLICE(321,13808
#define PG_GETARG_VARCHAR_P_SLICE(322,13893
#define DatumGetByteaP(330,14365
#define DatumGetTextP(331,14425
#define DatumGetBpCharP(332,14483
#define DatumGetVarCharP(333,14545
#define PG_GETARG_BYTEA_P(334,14609
#define PG_GETARG_TEXT_P(335,14674
#define PG_GETARG_BPCHAR_P(336,14738
#define PG_GETARG_VARCHAR_P(337,14805
#define PG_HAS_OPCLASS_OPTIONS(340,14940
#define PG_GET_OPCLASS_OPTIONS(341,15012
#define PG_RETURN_NULL(344,15117
#define PG_RETURN_VOID(348,15281
#define PG_RETURN_DATUM(352,15379
#define PG_RETURN_INT32(353,15418
#define PG_RETURN_UINT32(354,15470
#define PG_RETURN_INT16(355,15524
#define PG_RETURN_UINT16(356,15576
#define PG_RETURN_CHAR(357,15630
#define PG_RETURN_BOOL(358,15680
#define PG_RETURN_OID(359,15730
#define PG_RETURN_POINTER(360,15783
#define PG_RETURN_CSTRING(361,15838
#define PG_RETURN_NAME(362,15893
#define PG_RETURN_FLOAT4(364,16011
#define PG_RETURN_FLOAT8(365,16065
#define PG_RETURN_INT64(366,16119
#define PG_RETURN_UINT64(367,16171
#define PG_RETURN_BYTEA_P(369,16304
#define PG_RETURN_TEXT_P(370,16356
#define PG_RETURN_BPCHAR_P(371,16408
#define PG_RETURN_VARCHAR_P(372,16460
#define PG_RETURN_HEAPTUPLEHEADER(373,16512
	int			api_version;394,17257
} Pg_finfo_record;396,17388
typedef const Pg_finfo_record *(*PGFInfoFunction)PGFInfoFunction399,17453
#define PG_FUNCTION_INFO_V1(413,18126
	int			len;453,19695
	int			version;454,19735
	int			funcmaxargs;455,19783
	int			indexmaxkeys;456,19823
	int			namedatalen;457,19865
	int			float8byval;458,19903
} Pg_magic_struct;459,19945
#define PG_MODULE_MAGIC_DATA 462,20002
typedef const Pg_magic_struct *(*PGModuleMagicFunction)PGModuleMagicFunction476,20318
#define PG_MAGIC_FUNCTION_NAME 478,20383
#define PG_MAGIC_FUNCTION_NAME_STRING 479,20428
#define PG_MODULE_MAGIC 481,20483
#define DirectFunctionCall1(624,26857
#define DirectFunctionCall2(626,26948
#define DirectFunctionCall3(628,27051
#define DirectFunctionCall4(630,27166
#define DirectFunctionCall5(632,27293
#define DirectFunctionCall6(634,27432
#define DirectFunctionCall7(636,27583
#define DirectFunctionCall8(638,27746
#define DirectFunctionCall9(640,27921
#define FunctionCall1(642,28108
#define FunctionCall2(644,28191
#define FunctionCall3(646,28286
#define FunctionCall4(648,28393
#define FunctionCall5(650,28512
#define FunctionCall6(652,28643
#define FunctionCall7(654,28786
#define FunctionCall8(656,28941
#define FunctionCall9(658,29108
#define OidFunctionCall0(660,29287
#define OidFunctionCall1(662,29372
#define OidFunctionCall2(664,29469
#define OidFunctionCall3(666,29578
#define OidFunctionCall4(668,29699
#define OidFunctionCall5(670,29832
#define OidFunctionCall6(672,29977
#define OidFunctionCall7(674,30134
#define OidFunctionCall8(676,30303
#define OidFunctionCall9(678,30484
#define AGG_CONTEXT_AGGREGATE	736,33110
#define AGG_CONTEXT_WINDOW	737,33166
typedef enum FmgrHookEventType757,34094
	FHET_START,759,34127
	FHET_END,760,34140
	FHET_ABORT761,34151
} FmgrHookEventType;762,34163
typedef bool (*needs_fmgr_hook_type)needs_fmgr_hook_type764,34185
typedef void (*fmgr_hook_type)fmgr_hook_type766,34237
#define FmgrHookIsNeeded(772,34437

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_attrdef.h,145
#define PG_ATTRDEF_H19,553
CATALOG(29,769
} FormData_pg_attrdef;40,1114
typedef FormData_pg_attrdef *Form_pg_attrdef;Form_pg_attrdef47,1282

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_sequence.h,148
#define PG_SEQUENCE_H18,546
CATALOG(23,633
} FormData_pg_sequence;33,821
typedef FormData_pg_sequence *Form_pg_sequence;Form_pg_sequence40,992

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_replication_origin.h,200
#define PG_REPLICATION_ORIGIN_H19,599
CATALOG(30,877
} FormData_pg_replication_origin;53,1519
typedef FormData_pg_replication_origin *Form_pg_replication_origin;Form_pg_replication_origin55,1554

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_proc.h,674
#define PG_PROC_H18,529
CATALOG(30,795
} FormData_pg_proc;126,3356
typedef FormData_pg_proc *Form_pg_proc;Form_pg_proc133,3515
#define PROKIND_FUNCTION 140,3631
#define PROKIND_AGGREGATE 141,3660
#define PROKIND_WINDOW 142,3690
#define PROKIND_PROCEDURE 143,3717
#define PROVOLATILE_IMMUTABLE	153,4184
#define PROVOLATILE_STABLE	154,4254
#define PROVOLATILE_VOLATILE	155,4322
#define PROPARALLEL_SAFE	162,4606
#define PROPARALLEL_RESTRICTED	163,4670
#define PROPARALLEL_UNSAFE	164,4743
#define PROARGMODE_IN	171,5007
#define PROARGMODE_OUT	172,5034
#define PROARGMODE_INOUT	173,5062
#define PROARGMODE_VARIADIC 174,5091
#define PROARGMODE_TABLE	175,5123

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_default_acl.h,342
#define PG_DEFAULT_ACL_H20,585
CATALOG(30,817
} FormData_pg_default_acl;41,1240
typedef FormData_pg_default_acl *Form_pg_default_acl;Form_pg_default_acl48,1420
#define DEFACLOBJ_RELATION	57,1674
#define DEFACLOBJ_SEQUENCE	58,1724
#define DEFACLOBJ_FUNCTION	59,1771
#define DEFACLOBJ_TYPE	60,1818
#define DEFACLOBJ_NAMESPACE	61,1858

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_class.h,924
#define PG_CLASS_H19,535
CATALOG(32,895
} FormData_pg_class;142,4220
#define CLASS_TUPLE_SIZE 145,4318
typedef FormData_pg_class *Form_pg_class;Form_pg_class153,4553
#define		  RELKIND_RELATION	157,4626
#define		  RELKIND_INDEX	158,4682
#define		  RELKIND_SEQUENCE	159,4737
#define		  RELKIND_TOASTVALUE	160,4794
#define		  RELKIND_VIEW	161,4859
#define		  RELKIND_MATVIEW	162,4902
#define		  RELKIND_COMPOSITE_TYPE 163,4960
#define		  RELKIND_FOREIGN_TABLE 164,5020
#define		  RELKIND_PARTITIONED_TABLE 165,5079
#define		  RELKIND_PARTITIONED_INDEX 166,5144
#define		  RELPERSISTENCE_PERMANENT	168,5210
#define		  RELPERSISTENCE_UNLOGGED	169,5270
#define		  RELPERSISTENCE_TEMP	170,5340
#define		  REPLICA_IDENTITY_DEFAULT	173,5469
#define		  REPLICA_IDENTITY_NOTHING	175,5563
#define		  REPLICA_IDENTITY_FULL	177,5652
#define		  REPLICA_IDENTITY_INDEX	183,5885
#define RELKIND_HAS_STORAGE(190,6093

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_aggregate.h,423
#define PG_AGGREGATE_H19,552
CATALOG(32,934
} FormData_pg_aggregate;102,3267
typedef FormData_pg_aggregate *Form_pg_aggregate;Form_pg_aggregate109,3441
#define AGGKIND_NORMAL	121,3913
#define AGGKIND_ORDERED_SET	122,3942
#define AGGKIND_HYPOTHETICAL	123,3975
#define AGGKIND_IS_ORDERED_SET(126,4088
#define AGGMODIFY_READ_ONLY	136,4584
#define AGGMODIFY_SHAREABLE	137,4618
#define AGGMODIFY_READ_WRITE	138,4652

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_inherits.h,149
#define PG_INHERITS_H19,547
CATALOG(32,821
} FormData_pg_inherits;37,921
typedef FormData_pg_inherits *Form_pg_inherits;Form_pg_inherits44,1092

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/storage.h,25
#define STORAGE_H15,439

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/index.h,1241
#define INDEX_H15,411
#define DEFAULT_INDEX_TYPE	21,494
	INDEX_CREATE_SET_READY,26,589
	INDEX_CREATE_SET_VALID,27,614
	INDEX_DROP_CLEAR_VALID,28,639
	INDEX_DROP_SET_DEAD29,664
} IndexStateFlagsAction;30,685
typedef struct ValidateIndexState33,767
	Tuplesortstate *tuplesort;tuplesort35,803
	double		htups,37,909
				itups,38,925
				tups_inserted;39,936
} ValidateIndexState;40,955
#define	INDEX_CREATE_IS_PRIMARY	47,1121
#define	INDEX_CREATE_ADD_CONSTRAINT	48,1165
#define	INDEX_CREATE_SKIP_BUILD	49,1212
#define	INDEX_CREATE_CONCURRENT	50,1256
#define	INDEX_CREATE_IF_NOT_EXISTS	51,1300
#define	INDEX_CREATE_PARTITIONED	52,1346
#define INDEX_CREATE_INVALID	53,1390
#define	INDEX_CONSTR_CREATE_MARK_AS_PRIMARY	75,1992
#define	INDEX_CONSTR_CREATE_DEFERRABLE	76,2045
#define	INDEX_CONSTR_CREATE_INIT_DEFERRED	77,2094
#define	INDEX_CONSTR_CREATE_UPDATE_INDEX	78,2145
#define	INDEX_CONSTR_CREATE_REMOVE_OLD_DEPS	79,2195
#define REINDEX_REL_PROCESS_TOAST	140,4114
#define REINDEX_REL_SUPPRESS_INDEX_USE	141,4155
#define REINDEX_REL_CHECK_CONSTRAINTS	142,4200
#define REINDEX_REL_FORCE_INDEXES_UNLOGGED	143,4244
#define REINDEX_REL_FORCE_INDEXES_PERMANENT 144,4292
itemptr_encode(170,5181
itemptr_decode(191,5772

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_publication_rel.h,185
#define PG_PUBLICATION_REL_H19,614
CATALOG(29,862
} FormData_pg_publication_rel;34,1035
typedef FormData_pg_publication_rel *Form_pg_publication_rel;Form_pg_publication_rel41,1227

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_foreign_server.h,180
#define PG_FOREIGN_SERVER_H18,574
CATALOG(28,818
} FormData_pg_foreign_server;41,1220
typedef FormData_pg_foreign_server *Form_pg_foreign_server;Form_pg_foreign_server48,1409

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_rewrite.h,145
#define PG_REWRITE_H22,700
CATALOG(32,916
} FormData_pg_rewrite;45,1234
typedef FormData_pg_rewrite *Form_pg_rewrite;Form_pg_rewrite52,1402

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/catversion.h,65
#define CATVERSION_H45,2163
#define CATALOG_VERSION_NO	56,2546

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_ts_config.h,155
#define PG_TS_CONFIG_H20,573
CATALOG(30,797
} FormData_pg_ts_config;46,1091
typedef FormData_pg_ts_config *Form_pg_ts_config;Form_pg_ts_config48,1117

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_user_mapping.h,170
#define PG_USER_MAPPING_H18,564
CATALOG(28,800
} FormData_pg_user_mapping;39,1127
typedef FormData_pg_user_mapping *Form_pg_user_mapping;Form_pg_user_mapping46,1310

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_subscription.h,530
#define PG_SUBSCRIPTION_H18,566
CATALOG(39,1154
} FormData_pg_subscription;67,2091
typedef FormData_pg_subscription *Form_pg_subscription;Form_pg_subscription69,2120
typedef struct Subscription71,2177
	Oid			oid;73,2207
	Oid			dbid;74,2251
	char	   *name;name76,2328
	Oid			owner;77,2377
	bool		enabled;78,2429
	bool		binary;79,2493
	char	   *conninfo;conninfo81,2585
	char	   *slotname;slotname82,2647
	char	   *synccommit;synccommit83,2703
	List	   *publications;publications84,2770
} Subscription;85,2842

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_shseclabel.h,142
#define PG_SHSECLABEL_H18,567
CATALOG(28,794
} FormData_pg_shseclabel;37,1268
typedef FormData_pg_shseclabel * Form_pg_shseclabel;39,1295

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_transform.h,154
#define PG_TRANSFORM_H19,552
CATALOG(29,776
} FormData_pg_transform;36,923
typedef FormData_pg_transform *Form_pg_transform;Form_pg_transform43,1097

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/toasting.h,718
#define TOASTING_H18,609
#define DECLARE_TOAST(38,1159
#define PgAuthidToastTable 81,2872
#define PgAuthidToastIndex 82,2904
#define PgDatabaseToastTable 84,2976
#define PgDatabaseToastIndex 85,3010
#define PgDbRoleSettingToastTable 87,3091
#define PgDbRoleSettingToastIndex 88,3130
#define PgReplicationOriginToastTable 90,3219
#define PgReplicationOriginToastIndex 91,3262
#define PgShdescriptionToastTable 93,3350
#define PgShdescriptionToastIndex 94,3389
#define PgShseclabelToastTable 96,3470
#define PgShseclabelToastIndex 97,3506
#define PgSubscriptionToastTable 99,3586
#define PgSubscriptionToastIndex 100,3624
#define PgTablespaceToastTable 102,3704
#define PgTablespaceToastIndex 103,3740

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_opclass.h,147
#define PG_OPCLASS_H39,1739
CATALOG(49,1955
} FormData_pg_opclass;76,2623
typedef FormData_pg_opclass *Form_pg_opclass;Form_pg_opclass83,2791

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_attribute.h,348
#define PG_ATTRIBUTE_H23,732
CATALOG(37,1129
} FormData_pg_attribute;177,5928
#define ATTRIBUTE_FIXED_PART_SIZE 185,6237
typedef FormData_pg_attribute *Form_pg_attribute;Form_pg_attribute193,6484
#define		  ATTRIBUTE_IDENTITY_ALWAYS	197,6565
#define		  ATTRIBUTE_IDENTITY_BY_DEFAULT 198,6607
#define		  ATTRIBUTE_GENERATED_STORED	200,6653

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_shdepend.h,151
#define PG_SHDEPEND_H27,999
CATALOG(37,1219
} FormData_pg_shdepend;63,2168
typedef FormData_pg_shdepend *Form_pg_shdepend;Form_pg_shdepend70,2337

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_ts_dict.h,145
#define PG_TS_DICT_H19,557
CATALOG(29,773
} FormData_pg_ts_dict;50,1211
typedef FormData_pg_ts_dict *Form_pg_ts_dict;Form_pg_ts_dict52,1235

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_extension.h,155
#define PG_EXTENSION_H19,552
CATALOG(29,776
} FormData_pg_extension;43,1377
typedef FormData_pg_extension *Form_pg_extension;Form_pg_extension50,1551

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_partitioned_table.h,195
#define PG_PARTITIONED_TABLE_H20,597
CATALOG(30,853
} FormData_pg_partitioned_table;58,2031
typedef FormData_pg_partitioned_table *Form_pg_partitioned_table;Form_pg_partitioned_table65,2229

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_type.h,1378
#define PG_TYPE_H19,527
CATALOG(36,1043
} FormData_pg_type;248,8915
typedef FormData_pg_type *Form_pg_type;Form_pg_type255,9072
#define  TYPTYPE_BASE	262,9208
#define  TYPTYPE_COMPOSITE	263,9274
#define  TYPTYPE_DOMAIN	264,9345
#define  TYPTYPE_ENUM	265,9405
#define  TYPTYPE_PSEUDO	266,9454
#define  TYPTYPE_RANGE	267,9501
#define  TYPCATEGORY_INVALID	269,9547
#define  TYPCATEGORY_ARRAY	270,9611
#define  TYPCATEGORY_BOOLEAN	271,9643
#define  TYPCATEGORY_COMPOSITE	272,9676
#define  TYPCATEGORY_DATETIME	273,9711
#define  TYPCATEGORY_ENUM	274,9745
#define  TYPCATEGORY_GEOMETRIC	275,9776
#define  TYPCATEGORY_NETWORK	276,9811
#define  TYPCATEGORY_NUMERIC	277,9861
#define  TYPCATEGORY_PSEUDOTYPE 278,9894
#define  TYPCATEGORY_RANGE	279,9930
#define  TYPCATEGORY_STRING	280,9962
#define  TYPCATEGORY_TIMESPAN	281,9995
#define  TYPCATEGORY_USER	282,10029
#define  TYPCATEGORY_BITSTRING	283,10060
#define  TYPCATEGORY_UNKNOWN	284,10118
#define  TYPALIGN_CHAR	286,10152
#define  TYPALIGN_SHORT	287,10219
#define  TYPALIGN_INT	288,10291
#define  TYPALIGN_DOUBLE	289,10359
#define  TYPSTORAGE_PLAIN	291,10429
#define  TYPSTORAGE_EXTERNAL	292,10497
#define  TYPSTORAGE_EXTENDED	293,10569
#define  TYPSTORAGE_MAIN	294,10624
#define IsPolymorphicType(297,10772
#define IsPolymorphicTypeFamily1(302,10963
#define IsPolymorphicTypeFamily2(309,11157

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_amop.h,189
#define PG_AMOP_H44,2044
CATALOG(54,2248
} FormData_pg_amop;81,2994
typedef FormData_pg_amop *Form_pg_amop;Form_pg_amop88,3153
#define AMOP_SEARCH	93,3261
#define AMOP_ORDER	94,3316

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_db_role_setting.h,162
#define PG_DB_ROLE_SETTING_H20,618
CATALOG(34,946
} FormData_pg_db_role_setting;42,1218
typedef FormData_pg_db_role_setting * Form_pg_db_role_setting;44,1250

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_event_trigger.h,175
#define PG_EVENT_TRIGGER_H19,572
CATALOG(29,814
} FormData_pg_event_trigger;42,1263
typedef FormData_pg_event_trigger *Form_pg_event_trigger;Form_pg_event_trigger49,1449

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/binary_upgrade.h,32
#define BINARY_UPGRADE_H15,441

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/partition.h,63
#define PARTITION_H14,383
#define HASH_PARTITION_SEED 20,510

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_operator.h,150
#define PG_OPERATOR_H19,547
CATALOG(31,829
} FormData_pg_operator;76,1964
typedef FormData_pg_operator *Form_pg_operator;Form_pg_operator83,2135

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_conversion.h,160
#define PG_CONVERSION_H18,554
CATALOG(29,817
} FormData_pg_conversion;54,1387
typedef FormData_pg_conversion *Form_pg_conversion;Form_pg_conversion61,1564

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_namespace.h,156
#define PG_NAMESPACE_H19,552
CATALOG(35,1018
} FormData_pg_namespace;45,1221
typedef FormData_pg_namespace *Form_pg_namespace;Form_pg_namespace52,1395

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_ts_template.h,165
#define PG_TS_TEMPLATE_H19,571
CATALOG(29,803
} FormData_pg_ts_template;44,1146
typedef FormData_pg_ts_template *Form_pg_ts_template;Form_pg_ts_template46,1174

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/heap.h,634
#define HEAP_H15,427
#define CHKATYPE_ANYARRAY	23,605
#define CHKATYPE_ANYRECORD	24,658
#define CHKATYPE_IS_PARTKEY	25,723
typedef struct RawColumnDefault27,797
	AttrNumber	attnum;29,831
	Node	   *raw_default;raw_default30,890
	bool		missingMode;31,960
	char		generated;32,1024
} RawColumnDefault;33,1070
typedef struct CookedConstraint35,1091
	ConstrType	contype;37,1125
	Oid			conoid;38,1184
	char	   *name;name39,1248
	AttrNumber	attnum;40,1294
	Node	   *expr;expr41,1352
	bool		skip_validation;42,1410
	bool		is_local;43,1474
	int			inhcount;44,1539
	bool		is_no_inherit;45,1603
} CookedConstraint;47,1691

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_publication.h,710
#define PG_PUBLICATION_H18,559
CATALOG(29,826
} FormData_pg_publication;57,1482
typedef FormData_pg_publication *Form_pg_publication;Form_pg_publication64,1662
typedef struct PublicationActions66,1717
	bool		pubinsert;68,1753
	bool		pubupdate;69,1771
	bool		pubdelete;70,1789
	bool		pubtruncate;71,1807
} PublicationActions;72,1827
typedef struct Publication74,1850
	Oid			oid;76,1879
	char	   *name;name77,1891
	bool		alltables;78,1907
	bool		pubviaroot;79,1925
	PublicationActions pubactions;80,1944
} Publication;81,1976
typedef enum PublicationPartOpt96,2534
	PUBLICATION_PART_ROOT,98,2568
	PUBLICATION_PART_LEAF,99,2592
	PUBLICATION_PART_ALL,100,2616
} PublicationPartOpt;101,2639

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_collation.h,262
#define PG_COLLATION_H19,552
CATALOG(29,776
} FormData_pg_collation;44,1405
typedef FormData_pg_collation *Form_pg_collation;Form_pg_collation51,1577
#define COLLPROVIDER_DEFAULT	55,1658
#define COLLPROVIDER_ICU	56,1691
#define COLLPROVIDER_LIBC	57,1721

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_am.h,179
#define PG_AM_H19,528
CATALOG(29,724
} FormData_pg_am;41,958
typedef FormData_pg_am *Form_pg_am;Form_pg_am48,1111
#define AMTYPE_INDEX	55,1214
#define AMTYPE_TABLE	56,1269

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_control.h,2745
#define PG_CONTROL_H16,521
#define PG_CONTROL_VERSION	25,725
#define MOCK_AUTH_NONCE_LEN	28,792
typedef struct CheckPoint35,1041
	XLogRecPtr	redo;37,1069
	TimeLineID	ThisTimeLineID;39,1187
	TimeLineID	PrevTimeLineID;40,1233
	bool		fullPageWrites;42,1363
	FullTransactionId nextFullXid;43,1417
	Oid			nextOid;44,1485
	MultiXactId nextMulti;45,1522
	MultiXactOffset nextMultiOffset;46,1575
	TransactionId oldestXid;47,1642
	Oid			oldestXidDB;48,1708
	MultiXactId oldestMulti;49,1769
	Oid			oldestMultiDB;50,1833
	pg_time_t	time;51,1894
	TransactionId oldestCommitTsXid;52,1944
	TransactionId newestCommitTsXid;54,2036
	TransactionId oldestActiveXid;63,2396
} CheckPoint;64,2428
#define XLOG_CHECKPOINT_SHUTDOWN	67,2480
#define XLOG_CHECKPOINT_ONLINE	68,2519
#define XLOG_NOOP	69,2557
#define XLOG_NEXTOID	70,2585
#define XLOG_SWITCH	71,2615
#define XLOG_BACKUP_END	72,2645
#define XLOG_PARAMETER_CHANGE	73,2678
#define XLOG_RESTORE_POINT	74,2715
#define XLOG_FPW_CHANGE	75,2750
#define XLOG_END_OF_RECOVERY	76,2783
#define XLOG_FPI_FOR_HINT	77,2819
#define XLOG_FPI	78,2853
typedef enum DBState85,3007
	DB_STARTUP 87,3030
	DB_SHUTDOWNED,88,3047
	DB_SHUTDOWNED_IN_RECOVERY,89,3063
	DB_SHUTDOWNING,90,3091
	DB_IN_CRASH_RECOVERY,91,3108
	DB_IN_ARCHIVE_RECOVERY,92,3131
	DB_IN_PRODUCTION93,3156
} DBState;94,3174
typedef struct ControlFileData100,3221
	uint64		system_identifier;106,3375
	uint32		pg_control_version;121,3996
	uint32		catalog_version_no;122,4050
	DBState		state;127,4135
	pg_time_t	time;128,4175
	XLogRecPtr	checkPoint;129,4237
	CheckPoint	checkPointCopy;131,4297
	XLogRecPtr	unloggedLSN;133,4364
	XLogRecPtr	minRecoveryPoint;166,6148
	TimeLineID	minRecoveryPointTLI;167,6178
	XLogRecPtr	backupStartPoint;168,6211
	XLogRecPtr	backupEndPoint;169,6241
	bool		backupEndRequired;170,6269
	int			wal_level;176,6399
	bool		wal_log_hints;177,6417
	int			MaxConnections;178,6439
	int			max_worker_processes;179,6462
	int			max_wal_senders;180,6491
	int			max_prepared_xacts;181,6515
	int			max_locks_per_xact;182,6542
	bool		track_commit_timestamp;183,6569
	uint32		maxAlign;197,7228
	double		floatFormat;198,7287
#define FLOATFORMAT_VALUE	199,7334
	uint32		blcksz;205,7498
	uint32		relseg_size;206,7551
	uint32		xlog_blcksz;208,7617
	uint32		xlog_seg_size;209,7673
	uint32		nameDataLen;211,7729
	uint32		indexMaxKeys;212,7782
	uint32		toast_max_chunk_size;214,7846
	uint32		loblksize;215,7910
	bool		float8ByVal;217,7967
	uint32		data_checksum_version;220,8101
	char		mock_authentication_nonce[mock_authentication_nonce227,8315
	pg_crc32c	crc;230,8413
} ControlFileData;231,8429
#define PG_CONTROL_MAX_SAFE_SIZE	239,8752
#define PG_CONTROL_FILE_SIZE	248,9161

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_policy.h,140
#define PG_POLICY_H19,537
CATALOG(29,748
} FormData_pg_policy;43,1243
typedef FormData_pg_policy *Form_pg_policy;Form_pg_policy50,1406

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_enum.h,129
#define PG_ENUM_H19,527
CATALOG(31,759
} FormData_pg_enum;37,996
typedef FormData_pg_enum *Form_pg_enum;Form_pg_enum44,1155

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_foreign_table.h,175
#define PG_FOREIGN_TABLE_H18,569
CATALOG(28,809
} FormData_pg_foreign_table;36,1075
typedef FormData_pg_foreign_table *Form_pg_foreign_table;Form_pg_foreign_table43,1261

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_shdescription.h,156
#define PG_SHDESCRIPTION_H31,1167
CATALOG(41,1409
} FormData_pg_shdescription;49,1728
typedef FormData_pg_shdescription * Form_pg_shdescription;56,1914

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_auth_members.h,170
#define PG_AUTH_MEMBERS_H20,593
CATALOG(30,829
} FormData_pg_auth_members;36,1156
typedef FormData_pg_auth_members *Form_pg_auth_members;Form_pg_auth_members43,1339

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_range.h,135
#define PG_RANGE_H19,537
CATALOG(29,745
} FormData_pg_range;48,1257
typedef FormData_pg_range *Form_pg_range;Form_pg_range55,1419

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_tablespace.h,160
#define PG_TABLESPACE_H19,557
CATALOG(29,785
} FormData_pg_tablespace;39,1136
typedef FormData_pg_tablespace *Form_pg_tablespace;Form_pg_tablespace46,1313

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_authid.h,140
#define PG_AUTHID_H21,634
CATALOG(31,846
} FormData_pg_authid;49,1773
typedef FormData_pg_authid *Form_pg_authid;Form_pg_authid56,1938

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_seclabel.h,77
#define PG_SECLABEL_H18,552
CATALOG(28,772
} FormData_pg_seclabel;38,1188

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_largeobject_metadata.h,210
#define PG_LARGEOBJECT_METADATA_H20,613
CATALOG(30,880
} FormData_pg_largeobject_metadata;39,1147
typedef FormData_pg_largeobject_metadata *Form_pg_largeobject_metadata;Form_pg_largeobject_metadata46,1354

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_ts_parser.h,155
#define PG_TS_PARSER_H19,561
CATALOG(29,785
} FormData_pg_ts_parser;53,1336
typedef FormData_pg_ts_parser *Form_pg_ts_parser;Form_pg_ts_parser55,1362

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/dependency.h,2022
#define DEPENDENCY_H15,441
typedef enum DependencyType31,971
	DEPENDENCY_NORMAL 33,1001
	DEPENDENCY_AUTO 34,1027
	DEPENDENCY_INTERNAL 35,1051
	DEPENDENCY_PARTITION_PRI 36,1079
	DEPENDENCY_PARTITION_SEC 37,1112
	DEPENDENCY_EXTENSION 38,1145
	DEPENDENCY_AUTO_EXTENSION 39,1174
	DEPENDENCY_PIN 40,1208
} DependencyType;41,1230
typedef enum SharedDependencyType73,2789
	SHARED_DEPENDENCY_PIN 75,2825
	SHARED_DEPENDENCY_OWNER 76,2855
	SHARED_DEPENDENCY_ACL 77,2887
	SHARED_DEPENDENCY_POLICY 78,2917
	SHARED_DEPENDENCY_INVALID 79,2950
} SharedDependencyType;80,2981
typedef struct ObjectAddresses ObjectAddresses;83,3073
typedef enum ObjectClass89,3271
	OCLASS_CLASS,91,3298
	OCLASS_PROC,92,3331
	OCLASS_TYPE,93,3362
	OCLASS_CAST,94,3393
	OCLASS_COLLATION,95,3424
	OCLASS_CONSTRAINT,96,3464
	OCLASS_CONVERSION,97,3506
	OCLASS_DEFAULT,98,3548
	OCLASS_LANGUAGE,99,3585
	OCLASS_LARGEOBJECT,100,3623
	OCLASS_OPERATOR,101,3667
	OCLASS_OPCLASS,102,3705
	OCLASS_OPFAMILY,103,3742
	OCLASS_AM,104,3780
	OCLASS_AMOP,105,3808
	OCLASS_AMPROC,106,3839
	OCLASS_REWRITE,107,3874
	OCLASS_TRIGGER,108,3911
	OCLASS_SCHEMA,109,3948
	OCLASS_STATISTIC_EXT,110,3986
	OCLASS_TSPARSER,111,4033
	OCLASS_TSDICT,112,4072
	OCLASS_TSTEMPLATE,113,4108
	OCLASS_TSCONFIG,114,4151
	OCLASS_ROLE,115,4190
	OCLASS_DATABASE,116,4223
	OCLASS_TBLSPACE,117,4261
	OCLASS_FDW,118,4301
	OCLASS_FOREIGN_SERVER,119,4348
	OCLASS_USER_MAPPING,120,4397
	OCLASS_DEFACL,121,4442
	OCLASS_EXTENSION,122,4482
	OCLASS_EVENT_TRIGGER,123,4522
	OCLASS_POLICY,124,4569
	OCLASS_PUBLICATION,125,4604
	OCLASS_PUBLICATION_REL,126,4648
	OCLASS_SUBSCRIPTION,127,4699
	OCLASS_TRANSFORM	128,4744
} ObjectClass;129,4783
#define LAST_OCLASS	131,4799
#define PERFORM_DELETION_INTERNAL	134,4900
#define PERFORM_DELETION_CONCURRENTLY	135,4965
#define PERFORM_DELETION_QUIETLY	136,5033
#define PERFORM_DELETION_SKIP_ORIGINAL	137,5098
#define PERFORM_DELETION_SKIP_EXTENSIONS	138,5169
#define PERFORM_DELETION_CONCURRENT_LOCK	139,5239

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_cast.h,453
#define PG_CAST_H21,646
CATALOG(32,882
} FormData_pg_cast;50,1277
typedef FormData_pg_cast *Form_pg_cast;Form_pg_cast57,1436
typedef enum CoercionCodes70,1927
	COERCION_CODE_IMPLICIT 72,1956
	COERCION_CODE_ASSIGNMENT 73,2027
	COERCION_CODE_EXPLICIT 74,2100
} CoercionCodes;75,2160
typedef enum CoercionMethod82,2369
	COERCION_METHOD_FUNCTION 84,2399
	COERCION_METHOD_BINARY 85,2453
	COERCION_METHOD_INOUT 86,2518
} CoercionMethod;87,2580

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_description.h,148
#define PG_DESCRIPTION_H38,1670
CATALOG(48,1902
} FormData_pg_description;57,2250
typedef FormData_pg_description * Form_pg_description;64,2430

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/opfam_internal.h,176
#define OPFAM_INTERNAL_H13,398
	Oid			object;21,575
	int			number;22,629
	Oid			lefttype;23,684
	Oid			righttype;24,717
	Oid			sortfamily;25,752
} OpFamilyMember;26,818

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/objectaddress.h,236
#define OBJECTADDRESS_H14,444
typedef struct ObjectAddress24,652
	Oid			classId;26,683
	Oid			objectId;27,729
	int32		objectSubId;28,771
} ObjectAddress;29,838
#define ObjectAddressSubSet(33,906
#define ObjectAddressSet(40,1110

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_statistic_ext_data.h,174
#define PG_STATISTIC_EXT_DATA_H21,685
CATALOG(31,945
} FormData_pg_statistic_ext_data;43,1327
typedef FormData_pg_statistic_ext_data * Form_pg_statistic_ext_data;50,1528

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_database.h,150
#define PG_DATABASE_H19,547
CATALOG(29,767
} FormData_pg_database;74,1774
typedef FormData_pg_database *Form_pg_database;Form_pg_database81,1945

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_constraint.h,547
#define PG_CONSTRAINT_H19,557
CATALOG(31,844
} FormData_pg_constraint;147,4749
typedef FormData_pg_constraint *Form_pg_constraint;Form_pg_constraint154,4926
#define CONSTRAINT_CHECK	159,5040
#define CONSTRAINT_FOREIGN	160,5071
#define CONSTRAINT_PRIMARY	161,5104
#define CONSTRAINT_UNIQUE	162,5137
#define CONSTRAINT_TRIGGER	163,5169
#define CONSTRAINT_EXCLUSION	164,5202
typedef enum ConstraintCategory177,5553
	CONSTRAINT_RELATION,179,5587
	CONSTRAINT_DOMAIN,180,5609
	CONSTRAINT_ASSERTION	181,5629
} ConstraintCategory;182,5679

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_index.h,206
#define PG_INDEX_H19,532
CATALOG(29,741
} FormData_pg_index;61,2345
typedef FormData_pg_index *Form_pg_index;Form_pg_index68,2507
#define INDOPTION_DESC	77,2762
#define INDOPTION_NULLS_FIRST	78,2828

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/storage_xlog.h,501
#define STORAGE_XLOG_H15,458
#define XLOG_SMGR_CREATE	30,841
#define XLOG_SMGR_TRUNCATE	31,871
typedef struct xl_smgr_create33,904
	RelFileNode rnode;35,936
	ForkNumber	forkNum;36,956
} xl_smgr_create;37,977
#define SMGR_TRUNCATE_HEAP	40,1029
#define SMGR_TRUNCATE_VM	41,1064
#define SMGR_TRUNCATE_FSM	42,1097
#define SMGR_TRUNCATE_ALL	43,1131
typedef struct xl_smgr_truncate46,1218
	BlockNumber blkno;48,1252
	RelFileNode rnode;49,1272
	int			flags;50,1292
} xl_smgr_truncate;51,1306

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_amproc.h,142
#define PG_AMPROC_H33,1433
CATALOG(43,1645
} FormData_pg_amproc;61,2100
typedef FormData_pg_amproc *Form_pg_amproc;Form_pg_amproc68,2265

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/namespace.h,930
#define NAMESPACE_H15,447
typedef struct _FuncCandidateList28,849
	struct _FuncCandidateList *next;next30,885
	int			pathpos;31,919
	Oid			oid;32,979
	int			nargs;33,1030
	int			nvargs;34,1081
	int			ndargs;35,1144
	int		   *argnumbers;argnumbers36,1192
	Oid			args[args37,1261
}		   *FuncCandidateList;FuncCandidateList38,1313
typedef enum TempNamespaceStatus43,1385
	TEMP_NAMESPACE_NOT_TEMP,45,1420
	TEMP_NAMESPACE_IDLE,46,1487
	TEMP_NAMESPACE_IN_USE	47,1553
} TempNamespaceStatus;48,1614
typedef struct OverrideSearchPath57,1898
	List	   *schemas;schemas59,1934
	bool		addCatalog;60,1993
	bool		addTemp;61,2050
	uint64		generation;62,2105
} OverrideSearchPath;63,2175
typedef enum RVROption68,2257
	RVR_MISSING_OK 70,2282
	RVR_NOWAIT 71,2352
	RVR_SKIP_LOCKED 72,2416
} RVROption;73,2482
typedef void (*RangeVarGetRelidCallback)RangeVarGetRelidCallback75,2496
#define RangeVarGetRelid(78,2623

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_trigger.h,1367
#define PG_TRIGGER_H19,542
CATALOG(34,1036
} FormData_pg_trigger;66,2472
typedef FormData_pg_trigger *Form_pg_trigger;Form_pg_trigger73,2640
#define TRIGGER_TYPE_ROW	78,2742
#define TRIGGER_TYPE_BEFORE	79,2779
#define TRIGGER_TYPE_INSERT	80,2819
#define TRIGGER_TYPE_DELETE	81,2859
#define TRIGGER_TYPE_UPDATE	82,2899
#define TRIGGER_TYPE_TRUNCATE	83,2939
#define TRIGGER_TYPE_INSTEAD	84,2980
#define TRIGGER_TYPE_LEVEL_MASK	86,3021
#define TRIGGER_TYPE_STATEMENT	87,3074
#define TRIGGER_TYPE_TIMING_MASK 90,3174
#define TRIGGER_TYPE_AFTER	92,3255
#define TRIGGER_TYPE_EVENT_MASK 94,3288
#define TRIGGER_CLEAR_TYPE(98,3451
#define TRIGGER_SETT_ROW(100,3499
#define TRIGGER_SETT_STATEMENT(101,3561
#define TRIGGER_SETT_BEFORE(102,3633
#define TRIGGER_SETT_AFTER(103,3700
#define TRIGGER_SETT_INSTEAD(104,3765
#define TRIGGER_SETT_INSERT(105,3834
#define TRIGGER_SETT_DELETE(106,3901
#define TRIGGER_SETT_UPDATE(107,3968
#define TRIGGER_SETT_TRUNCATE(108,4035
#define TRIGGER_FOR_ROW(110,4107
#define TRIGGER_FOR_BEFORE(111,4167
#define TRIGGER_FOR_AFTER(112,4262
#define TRIGGER_FOR_INSTEAD(113,4356
#define TRIGGER_FOR_INSERT(114,4453
#define TRIGGER_FOR_DELETE(115,4518
#define TRIGGER_FOR_UPDATE(116,4583
#define TRIGGER_FOR_TRUNCATE(117,4648
#define TRIGGER_TYPE_MATCHES(126,5108
#define TRIGGER_USES_TRANSITION_TABLE(133,5378

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_depend.h,142
#define PG_DEPEND_H31,1210
CATALOG(41,1422
} FormData_pg_depend;64,2166
typedef FormData_pg_depend *Form_pg_depend;Form_pg_depend71,2329

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_foreign_data_wrapper.h,210
#define PG_FOREIGN_DATA_WRAPPER_H19,607
CATALOG(29,875
} FormData_pg_foreign_data_wrapper;41,1338
typedef FormData_pg_foreign_data_wrapper *Form_pg_foreign_data_wrapper;Form_pg_foreign_data_wrapper48,1545

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_statistic.h,510
#define PG_STATISTIC_H19,553
CATALOG(29,777
} FormData_pg_statistic;124,4316
#define STATISTIC_NUM_SLOTS 126,4342
typedef FormData_pg_statistic *Form_pg_statistic;Form_pg_statistic134,4523
#define STATISTIC_KIND_MCV	178,6562
#define STATISTIC_KIND_HISTOGRAM 198,7777
#define STATISTIC_KIND_CORRELATION	210,8380
#define STATISTIC_KIND_MCELEM 235,9864
#define STATISTIC_KIND_DECHIST	249,10650
#define STATISTIC_KIND_RANGE_LENGTH_HISTOGRAM 260,11213
#define STATISTIC_KIND_BOUNDS_HISTOGRAM 271,11778

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/objectaccess.h,1029
#define OBJECTACCESS_H11,225
typedef enum ObjectAccessType46,1852
	OAT_POST_CREATE,48,1884
	OAT_DROP,49,1902
	OAT_POST_ALTER,50,1913
	OAT_NAMESPACE_SEARCH,51,1930
	OAT_FUNCTION_EXECUTE,52,1953
	OAT_TRUNCATE53,1976
} ObjectAccessType;54,1990
	bool		is_internal;66,2290
} ObjectAccessPostCreate;67,2310
	int			dropflags;78,2510
} ObjectAccessDrop;79,2528
	Oid			auxiliary_id;92,2890
	bool		is_internal;100,3188
} ObjectAccessPostAlter;101,3208
	bool		ereport_on_violation;112,3398
	bool		result;121,3773
} ObjectAccessNamespaceSearch;122,3788
typedef void (*object_access_hook_type)object_access_hook_type125,3883
#define InvokeObjectPostCreateHook(151,4912
#define InvokeObjectPostCreateHookArg(153,5042
#define InvokeObjectDropHook(160,5280
#define InvokeObjectDropHookArg(162,5395
#define InvokeObjectTruncateHook(169,5621
#define InvokeObjectPostAlterHook(175,5787
#define InvokeObjectPostAlterHookArg(178,5939
#define InvokeNamespaceSearchHook(186,6214
#define InvokeFunctionExecuteHook(191,6406

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_language.h,150
#define PG_LANGUAGE_H19,547
CATALOG(29,767
} FormData_pg_language;58,1488
typedef FormData_pg_language *Form_pg_language;Form_pg_language65,1659

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_subscription_rel.h,599
#define PG_SUBSCRIPTION_REL_H19,640
CATALOG(31,947
} FormData_pg_subscription_rel;48,1558
typedef FormData_pg_subscription_rel *Form_pg_subscription_rel;Form_pg_subscription_rel50,1591
#define SUBREL_STATE_INIT	58,1753
#define SUBREL_STATE_DATASYNC	59,1817
#define SUBREL_STATE_SYNCDONE	61,1910
#define SUBREL_STATE_READY	63,2018
#define SUBREL_STATE_UNKNOWN	66,2147
#define SUBREL_STATE_SYNCWAIT	67,2201
#define SUBREL_STATE_CATCHUP	68,2258
typedef struct SubscriptionRelState72,2363
	Oid			relid;74,2401
	XLogRecPtr	lsn;75,2415
	char		state;76,2432
} SubscriptionRelState;77,2446

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_ts_config_map.h,175
#define PG_TS_CONFIG_MAP_H20,592
CATALOG(30,832
} FormData_pg_ts_config_map;43,1160
typedef FormData_pg_ts_config_map *Form_pg_ts_config_map;Form_pg_ts_config_map45,1190

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_opfamily.h,185
#define PG_OPFAMILY_H19,554
CATALOG(29,773
} FormData_pg_opfamily;44,1113
typedef FormData_pg_opfamily *Form_pg_opfamily;Form_pg_opfamily51,1284
#define IsBooleanOpfamily(55,1363

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/indexing.h,5030
#define INDEXING_H19,617
typedef struct ResultRelInfo *CatalogIndexState;CatalogIndexState29,886
#define DECLARE_INDEX(51,1691
#define DECLARE_UNIQUE_INDEX(52,1756
#define AggregateFnoidIndexId 69,2446
#define AmNameIndexId 72,2568
#define AmOidIndexId 74,2676
#define AccessMethodStrategyIndexId 77,2869
#define AccessMethodOperatorIndexId 79,3045
#define AccessMethodOperatorOidIndexId	81,3171
#define AccessMethodProcedureIndexId 84,3387
#define AccessMethodProcedureOidIndexId 86,3518
#define AttrDefaultIndexId	89,3685
#define AttrDefaultOidIndexId 91,3807
#define AttributeRelidNameIndexId 94,3970
#define AttributeRelidNumIndexId 96,4135
#define AuthIdRolnameIndexId	99,4272
#define AuthIdOidIndexId	101,4394
#define AuthMemRoleMemIndexId	104,4552
#define AuthMemMemRoleIndexId	106,4714
#define CastOidIndexId	109,4834
#define CastSourceTargetIndexId 111,4983
#define ClassOidIndexId 114,5108
#define ClassNameNspIndexId 116,5259
#define ClassTblspcRelfilenodeIndexId 118,5418
#define CollationNameEncNspIndexId 121,5618
#define CollationOidIndexId 123,5752
#define ConstraintNameNspIndexId 126,5911
#define ConstraintRelidTypidNameIndexId	128,6109
#define ConstraintTypidIndexId	130,6253
#define ConstraintOidIndexId 132,6385
#define ConstraintParentIndexId	134,6525
#define ConversionDefaultIndexId 137,6734
#define ConversionNameNspIndexId 139,6901
#define ConversionOidIndexId 141,7036
#define DatabaseNameIndexId 144,7173
#define DatabaseOidIndexId	146,7299
#define DependDependerIndexId 149,7456
#define DependReferenceIndexId	151,7626
#define DescriptionObjIndexId 154,7803
#define SharedDescriptionObjIndexId 156,7962
#define EnumOidIndexId	159,8088
#define EnumTypIdLabelIndexId 161,8234
#define EnumTypIdSortOrderIndexId 163,8397
#define IndexIndrelidIndexId 166,8526
#define IndexRelidIndexId 168,8661
#define InheritsRelidSeqnoIndexId 171,8818
#define InheritsParentIndexId 173,8952
#define InitPrivsObjIndexId 176,9127
#define LanguageNameIndexId 179,9260
#define LanguageOidIndexId	181,9386
#define LargeObjectLOidPNIndexId 184,9539
#define LargeObjectMetadataOidIndexId	187,9695
#define NamespaceNameIndexId 190,9842
#define NamespaceOidIndexId 192,9971
#define OpclassAmNameNspIndexId 195,10150
#define OpclassOidIndexId 197,10278
#define OperatorOidIndexId	200,10403
#define OperatorNameNspIndexId	202,10599
#define OpfamilyAmNameNspIndexId 205,10782
#define OpfamilyOidIndexId	207,10913
#define ProcedureOidIndexId 210,11030
#define ProcedureNameArgsNspIndexId 212,11215
#define RewriteOidIndexId 215,11348
#define RewriteRelRulenameIndexId 217,11503
#define SequenceRelidIndexId	220,11646
#define SharedDependDependerIndexId	223,11823
#define SharedDependReferenceIndexId	225,11981
#define StatisticRelidAttnumInhIndexId	228,12174
#define StatisticExtOidIndexId	231,12321
#define StatisticExtNameIndexId 233,12487
#define StatisticExtRelidIndexId 235,12626
#define StatisticExtDataStxoidIndexId 238,12783
#define TablespaceOidIndexId 241,12923
#define TablespaceNameIndexId 243,13063
#define TransformOidIndexId 246,13194
#define TransformTypeLangIndexId 248,13348
#define TriggerConstraintIndexId 251,13489
#define TriggerRelidNameIndexId 253,13650
#define TriggerOidIndexId 255,13778
#define EventTriggerNameIndexId 258,13922
#define EventTriggerOidIndexId	260,14062
#define TSConfigNameNspIndexId	263,14224
#define TSConfigOidIndexId	265,14354
#define TSConfigMapIndexId	268,14530
#define TSDictionaryNameNspIndexId	271,14687
#define TSDictionaryOidIndexId	273,14817
#define TSParserNameNspIndexId	276,14979
#define TSParserOidIndexId	278,15109
#define TSTemplateNameNspIndexId	281,15274
#define TSTemplateOidIndexId	283,15410
#define TypeOidIndexId	286,15529
#define TypeNameNspIndexId	288,15676
#define ForeignDataWrapperOidIndexId	291,15824
#define ForeignDataWrapperNameIndexId	293,15986
#define ForeignServerOidIndexId 296,16132
#define ForeignServerNameIndexId	298,16277
#define UserMappingOidIndexId	301,16414
#define UserMappingUserServerIndexId	303,16576
#define ForeignTableRelidIndexId 306,16726
#define DefaultAclRoleNspObjIndexId 309,16927
#define DefaultAclOidIndexId	311,17064
#define DbRoleSettingDatidRolidIndexId	314,17240
#define SecLabelObjectIndexId	317,17439
#define SharedSecLabelObjectIndexId	320,17617
#define ExtensionOidIndexId 323,17755
#define ExtensionNameIndexId 325,17888
#define RangeTypidIndexId	328,18019
#define PolicyOidIndexId	331,18143
#define PolicyPolrelidPolnameIndexId	334,18301
#define ReplicationOriginIdentIndex 337,18468
#define ReplicationOriginNameIndex 340,18629
#define PartitionedRelidIndexId	343,18792
#define PublicationObjectIndexId 346,18931
#define PublicationNameIndexId 349,19077
#define PublicationRelObjectIndexId 352,19220
#define PublicationRelPrrelidPrpubidIndexId 355,19401
#define SubscriptionObjectIndexId 358,19551
#define SubscriptionNameIndexId 361,19717
#define SubscriptionRelSrrelidSrsubidIndexId 364,19896

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/catalog.h,25
#define CATALOG_H15,439

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/genbki.h,401
#define GENBKI_H20,686
#define CATALOG(23,754
#define BKI_BOOTSTRAP26,894
#define BKI_SHARED_RELATION27,916
#define BKI_ROWTYPE_OID(28,944
#define BKI_SCHEMA_MACRO29,982
#define BKI_FORCE_NULL32,1076
#define BKI_FORCE_NOT_NULL33,1099
#define BKI_DEFAULT(35,1178
#define BKI_ARRAY_DEFAULT(37,1268
#define BKI_LOOKUP(42,1393
#undef CATALOG_VARLEN52,1773
#undef EXPOSE_TO_CLIENT_CODE62,2255

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_statistic_ext.h,284
#define PG_STATISTIC_EXT_H23,771
CATALOG(33,1011
} FormData_pg_statistic_ext;57,1718
typedef FormData_pg_statistic_ext *Form_pg_statistic_ext;Form_pg_statistic_ext64,1904
#define STATS_EXT_NDISTINCT	68,1993
#define STATS_EXT_DEPENDENCIES	69,2027
#define STATS_EXT_MCV	70,2063

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_largeobject.h,165
#define PG_LARGEOBJECT_H19,563
CATALOG(29,795
} FormData_pg_largeobject;37,1114
typedef FormData_pg_largeobject *Form_pg_largeobject;Form_pg_largeobject44,1294

/home/seinoyu/pgsql/master/postgresql/src/include/catalog/pg_init_privs.h,261
#define PG_INIT_PRIVS_H36,1580
CATALOG(46,1808
} FormData_pg_init_privs;56,2209
typedef FormData_pg_init_privs * Form_pg_init_privs;63,2386
typedef enum InitPrivsType72,2744
	INITPRIVS_INITDB 74,2773
	INITPRIVS_EXTENSION 75,2798
} InitPrivsType;76,2825

/home/seinoyu/pgsql/master/postgresql/src/include/postmaster/autovacuum.h,173
#define AUTOVACUUM_H15,442
	AVW_BRINSummarizeRange25,622
} AutoVacuumWorkItemType;26,646
#define IsAnyAutoVacuumProcess(55,1523
extern void AutoVacLauncherMain(70,2002

/home/seinoyu/pgsql/master/postgresql/src/include/postmaster/startup.h,65
#define _STARTUP_H13,349
extern void StartupProcessMain(16,416

/home/seinoyu/pgsql/master/postgresql/src/include/postmaster/syslogger.h,546
#define _SYSLOGGER_H13,348
#define PIPE_CHUNK_SIZE 35,1237
#define PIPE_CHUNK_SIZE 37,1274
#define PIPE_CHUNK_SIZE 41,1426
	char		nuls[nuls46,1480
	uint16		len;47,1515
	int32		pid;48,1575
	char		is_last;49,1609
	char		data[data51,1703
} PipeProtoHeader;52,1770
	PipeProtoHeader proto;56,1806
	char		filler[filler57,1830
} PipeProtoChunk;58,1862
#define PIPE_HEADER_SIZE 60,1881
#define PIPE_MAX_PAYLOAD 61,1939
extern void SysLoggerMain(85,2477
#define LOG_METAINFO_DATAFILE 95,2757
#define LOG_METAINFO_DATAFILE_TMP 96,2807

/home/seinoyu/pgsql/master/postgresql/src/include/postmaster/interrupt.h,27
#define INTERRUPT_H20,621

/home/seinoyu/pgsql/master/postgresql/src/include/postmaster/walwriter.h,62
#define _WALWRITER_H13,357
extern void WalWriterMain(19,457

/home/seinoyu/pgsql/master/postgresql/src/include/postmaster/bgwriter.h,68
#define _BGWRITER_H16,532
extern void BackgroundWriterMain(30,814

/home/seinoyu/pgsql/master/postgresql/src/include/postmaster/bgworker_internals.h,454
#define BGWORKER_INTERNALS_H13,468
#define MAX_PARALLEL_WORKER_LIMIT 24,660
typedef struct RegisteredBgWorker33,977
	BackgroundWorker rw_worker;35,1013
	struct bkend *rw_backend;rw_backend36,1067
	pid_t		rw_pid;37,1131
	int			rw_child_slot;38,1172
	TimestampTz rw_crashed_at;39,1194
	int			rw_shmem_slot;40,1259
	bool		rw_terminate;41,1281
	slist_node	rw_lnode;42,1302
} RegisteredBgWorker;43,1341
extern void StartBackgroundWorker(57,1909

/home/seinoyu/pgsql/master/postgresql/src/include/postmaster/postmaster.h,167
#define _POSTMASTER_H14,433
#define POSTMASTER_FD_WATCH	42,1178
#define POSTMASTER_FD_OWN	44,1274
extern void PostmasterMain(49,1388
#define MAX_BACKENDS	75,2517

/home/seinoyu/pgsql/master/postgresql/src/include/postmaster/fork_process.h,30
#define FORK_PROCESS_H13,359

/home/seinoyu/pgsql/master/postgresql/src/include/postmaster/pgarch.h,153
#define _PGARCH_H14,417
#define MIN_XFN_CHARS	25,778
#define MAX_XFN_CHARS	26,803
#define VALID_XFN_CHARS 27,828
extern void PgArchiverMain(36,1015

/home/seinoyu/pgsql/master/postgresql/src/include/postmaster/bgworker.h,1243
#define BGWORKER_H42,2127
#define BGWORKER_SHMEM_ACCESS	52,2402
#define BGWORKER_BACKEND_DATABASE_CONNECTION	59,2663
#define BGWORKER_CLASS_PARALLEL	67,2998
typedef void (*bgworker_main_type)bgworker_main_type71,3086
	BgWorkerStart_PostmasterStart,78,3226
	BgWorkerStart_ConsistentState,79,3258
	BgWorkerStart_RecoveryFinished80,3290
} BgWorkerStartTime;81,3322
#define BGW_DEFAULT_RESTART_INTERVAL	83,3344
#define BGW_NEVER_RESTART	84,3384
#define BGW_MAXLEN	85,3416
#define BGW_EXTRALEN	86,3443
typedef struct BackgroundWorker88,3473
	char		bgw_name[bgw_name90,3507
	char		bgw_type[bgw_type91,3536
	int			bgw_flags;92,3565
	BgWorkerStartTime bgw_start_time;93,3583
	int			bgw_restart_time;94,3618
	char		bgw_library_name[bgw_library_name95,3682
	char		bgw_function_name[bgw_function_name96,3719
	Datum		bgw_main_arg;97,3757
	char		bgw_extra[bgw_extra98,3779
	pid_t		bgw_notify_pid;99,3811
} BackgroundWorker;100,3876
typedef enum BgwHandleStatus102,3897
	BGWH_STARTED,104,3928
	BGWH_NOT_YET_STARTED,105,3970
	BGWH_STOPPED,106,4031
	BGWH_POSTMASTER_DIED	107,4073
} BgwHandleStatus;108,4141
typedef struct BackgroundWorkerHandle BackgroundWorkerHandle;111,4192
#define BGWORKER_BYPASS_ALLOWCONN 154,5882

/home/seinoyu/pgsql/master/postgresql/src/include/postgres_fe.h,54
#define POSTGRES_FE_H19,618
#define FRONTEND 22,658

/home/seinoyu/pgsql/master/postgresql/src/include/commands/tablecmds.h,27
#define TABLECMDS_H15,420

/home/seinoyu/pgsql/master/postgresql/src/include/commands/dbcommands.h,28
#define DBCOMMANDS_H15,447

/home/seinoyu/pgsql/master/postgresql/src/include/commands/defrem.h,24
#define DEFREM_H15,431

/home/seinoyu/pgsql/master/postgresql/src/include/commands/progress.h,4203
#define PROGRESS_H18,688
#define PROGRESS_VACUUM_PHASE	21,752
#define PROGRESS_VACUUM_TOTAL_HEAP_BLKS	22,788
#define PROGRESS_VACUUM_HEAP_BLKS_SCANNED	23,832
#define PROGRESS_VACUUM_HEAP_BLKS_VACUUMED	24,877
#define PROGRESS_VACUUM_NUM_INDEX_VACUUMS	25,923
#define PROGRESS_VACUUM_MAX_DEAD_TUPLES	26,968
#define PROGRESS_VACUUM_NUM_DEAD_TUPLES	27,1012
#define PROGRESS_VACUUM_PHASE_SCAN_HEAP	30,1122
#define PROGRESS_VACUUM_PHASE_VACUUM_INDEX	31,1166
#define PROGRESS_VACUUM_PHASE_VACUUM_HEAP	32,1212
#define PROGRESS_VACUUM_PHASE_INDEX_CLEANUP	33,1257
#define PROGRESS_VACUUM_PHASE_TRUNCATE	34,1304
#define PROGRESS_VACUUM_PHASE_FINAL_CLEANUP	35,1347
#define PROGRESS_ANALYZE_PHASE	38,1433
#define PROGRESS_ANALYZE_BLOCKS_TOTAL	39,1471
#define PROGRESS_ANALYZE_BLOCKS_DONE	40,1514
#define PROGRESS_ANALYZE_EXT_STATS_TOTAL	41,1556
#define PROGRESS_ANALYZE_EXT_STATS_COMPUTED	42,1601
#define PROGRESS_ANALYZE_CHILD_TABLES_TOTAL	43,1649
#define PROGRESS_ANALYZE_CHILD_TABLES_DONE	44,1697
#define PROGRESS_ANALYZE_CURRENT_CHILD_TABLE_RELID	45,1744
#define PROGRESS_ANALYZE_PHASE_ACQUIRE_SAMPLE_ROWS	48,1865
#define PROGRESS_ANALYZE_PHASE_ACQUIRE_SAMPLE_ROWS_INH	49,1919
#define PROGRESS_ANALYZE_PHASE_COMPUTE_STATS	50,1976
#define PROGRESS_ANALYZE_PHASE_COMPUTE_EXT_STATS	51,2025
#define PROGRESS_ANALYZE_PHASE_FINALIZE_ANALYZE	52,2077
#define PROGRESS_CLUSTER_COMMAND	55,2168
#define PROGRESS_CLUSTER_PHASE	56,2206
#define PROGRESS_CLUSTER_INDEX_RELID	57,2243
#define PROGRESS_CLUSTER_HEAP_TUPLES_SCANNED	58,2284
#define PROGRESS_CLUSTER_HEAP_TUPLES_WRITTEN	59,2331
#define PROGRESS_CLUSTER_TOTAL_HEAP_BLKS	60,2378
#define PROGRESS_CLUSTER_HEAP_BLKS_SCANNED	61,2422
#define PROGRESS_CLUSTER_INDEX_REBUILD_COUNT	62,2468
#define PROGRESS_CLUSTER_PHASE_SEQ_SCAN_HEAP	65,2583
#define PROGRESS_CLUSTER_PHASE_INDEX_SCAN_HEAP	66,2630
#define PROGRESS_CLUSTER_PHASE_SORT_TUPLES	67,2679
#define PROGRESS_CLUSTER_PHASE_WRITE_NEW_HEAP	68,2725
#define PROGRESS_CLUSTER_PHASE_SWAP_REL_FILES	69,2773
#define PROGRESS_CLUSTER_PHASE_REBUILD_INDEX	70,2821
#define PROGRESS_CLUSTER_PHASE_FINAL_CLEANUP	71,2868
#define PROGRESS_CLUSTER_COMMAND_CLUSTER	74,2951
#define PROGRESS_CLUSTER_COMMAND_VACUUM_FULL	75,2995
#define PROGRESS_CREATEIDX_COMMAND	79,3134
#define PROGRESS_CREATEIDX_INDEX_OID	80,3174
#define PROGRESS_CREATEIDX_ACCESS_METHOD_OID	81,3215
#define PROGRESS_CREATEIDX_PHASE	82,3262
#define PROGRESS_CREATEIDX_SUBPHASE	83,3326
#define PROGRESS_CREATEIDX_TUPLES_TOTAL	84,3395
#define PROGRESS_CREATEIDX_TUPLES_DONE	85,3440
#define PROGRESS_CREATEIDX_PARTITIONS_TOTAL	86,3484
#define PROGRESS_CREATEIDX_PARTITIONS_DONE	87,3532
#define PROGRESS_CREATEIDX_PHASE_WAIT_1	91,3706
#define PROGRESS_CREATEIDX_PHASE_BUILD	92,3750
#define PROGRESS_CREATEIDX_PHASE_WAIT_2	93,3793
#define PROGRESS_CREATEIDX_PHASE_VALIDATE_IDXSCAN	94,3837
#define PROGRESS_CREATEIDX_PHASE_VALIDATE_SORT	95,3889
#define PROGRESS_CREATEIDX_PHASE_VALIDATE_TABLESCAN	96,3939
#define PROGRESS_CREATEIDX_PHASE_WAIT_3	97,3993
#define PROGRESS_CREATEIDX_PHASE_WAIT_4	98,4037
#define PROGRESS_CREATEIDX_PHASE_WAIT_5	99,4081
#define PROGRESS_CREATEIDX_SUBPHASE_INITIALIZE	104,4180
#define PROGRESS_CREATEIDX_COMMAND_CREATE	108,4314
#define PROGRESS_CREATEIDX_COMMAND_CREATE_CONCURRENTLY	109,4360
#define PROGRESS_CREATEIDX_COMMAND_REINDEX	110,4417
#define PROGRESS_CREATEIDX_COMMAND_REINDEX_CONCURRENTLY	111,4463
#define PROGRESS_WAITFOR_TOTAL	114,4552
#define PROGRESS_WAITFOR_DONE	115,4589
#define PROGRESS_WAITFOR_CURRENT_PID	116,4625
#define PROGRESS_SCAN_BLOCKS_TOTAL	119,4714
#define PROGRESS_SCAN_BLOCKS_DONE	120,4755
#define PROGRESS_BASEBACKUP_PHASE	123,4840
#define PROGRESS_BASEBACKUP_BACKUP_TOTAL	124,4879
#define PROGRESS_BASEBACKUP_BACKUP_STREAMED	125,4924
#define PROGRESS_BASEBACKUP_TBLSPC_TOTAL	126,4972
#define PROGRESS_BASEBACKUP_TBLSPC_STREAMED	127,5017
#define PROGRESS_BASEBACKUP_PHASE_WAIT_CHECKPOINT	130,5142
#define PROGRESS_BASEBACKUP_PHASE_ESTIMATE_BACKUP_SIZE	131,5195
#define PROGRESS_BASEBACKUP_PHASE_STREAM_BACKUP	132,5253
#define PROGRESS_BASEBACKUP_PHASE_WAIT_WAL_ARCHIVE	133,5305
#define PROGRESS_BASEBACKUP_PHASE_TRANSFER_WAL	134,5359

/home/seinoyu/pgsql/master/postgresql/src/include/commands/conversioncmds.h,32
#define CONVERSIONCMDS_H16,441

/home/seinoyu/pgsql/master/postgresql/src/include/commands/createas.h,26
#define CREATEAS_H15,416

/home/seinoyu/pgsql/master/postgresql/src/include/commands/alter.h,23
#define ALTER_H15,412

/home/seinoyu/pgsql/master/postgresql/src/include/commands/trigger.h,2274
#define TRIGGER_H14,418
#define CALLED_AS_TRIGGER(25,663
typedef uint32 TriggerEvent;28,768
typedef struct TriggerData30,798
	NodeTag		type;32,827
	TriggerEvent tg_event;33,843
	Relation	tg_relation;34,867
	HeapTuple	tg_trigtuple;35,890
	HeapTuple	tg_newtuple;36,915
	Trigger    *tg_trigger;tg_trigger37,939
	TupleTableSlot *tg_trigslot;tg_trigslot38,964
	TupleTableSlot *tg_newslot;tg_newslot39,994
	Tuplestorestate *tg_oldtable;tg_oldtable40,1023
	Tuplestorestate *tg_newtable;tg_newtable41,1054
	const Bitmapset *tg_updatedcols;tg_updatedcols42,1085
} TriggerData;43,1119
typedef struct TransitionCaptureState55,1532
	bool		tcs_delete_old_table;63,1860
	bool		tcs_update_old_table;64,1889
	bool		tcs_update_new_table;65,1918
	bool		tcs_insert_new_table;66,1947
	TupleConversionMap *tcs_map;tcs_map74,2277
	TupleTableSlot *tcs_original_insert_tuple;tcs_original_insert_tuple83,2666
	struct AfterTriggersTableData *tcs_private;tcs_private88,2794
} TransitionCaptureState;89,2839
#define TRIGGER_EVENT_INSERT	99,3142
#define TRIGGER_EVENT_DELETE	100,3184
#define TRIGGER_EVENT_UPDATE	101,3226
#define TRIGGER_EVENT_TRUNCATE	102,3268
#define TRIGGER_EVENT_OPMASK	103,3312
#define TRIGGER_EVENT_ROW	105,3355
#define TRIGGER_EVENT_BEFORE	107,3396
#define TRIGGER_EVENT_AFTER	108,3438
#define TRIGGER_EVENT_INSTEAD	109,3480
#define TRIGGER_EVENT_TIMINGMASK	110,3523
#define AFTER_TRIGGER_DEFERRABLE	114,3628
#define AFTER_TRIGGER_INITDEFERRED	115,3673
#define TRIGGER_FIRED_BY_INSERT(117,3721
#define TRIGGER_FIRED_BY_DELETE(120,3823
#define TRIGGER_FIRED_BY_UPDATE(123,3925
#define TRIGGER_FIRED_BY_TRUNCATE(126,4027
#define TRIGGER_FIRED_FOR_ROW(129,4133
#define TRIGGER_FIRED_FOR_STATEMENT(132,4204
#define TRIGGER_FIRED_BEFORE(135,4283
#define TRIGGER_FIRED_AFTER(138,4386
#define TRIGGER_FIRED_INSTEAD(141,4487
#define SESSION_REPLICATION_ROLE_ORIGIN	147,4649
#define SESSION_REPLICATION_ROLE_REPLICA	148,4692
#define SESSION_REPLICATION_ROLE_LOCAL	149,4735
#define TRIGGER_FIRES_ON_ORIGIN	156,4934
#define TRIGGER_FIRES_ALWAYS	157,4973
#define TRIGGER_FIRES_ON_REPLICA	158,5009
#define TRIGGER_DISABLED	159,5048
#define RI_TRIGGER_PK	271,9414
#define RI_TRIGGER_FK	272,9477
#define RI_TRIGGER_NONE 273,9540

/home/seinoyu/pgsql/master/postgresql/src/include/commands/collationcmds.h,31
#define COLLATIONCMDS_H16,437

/home/seinoyu/pgsql/master/postgresql/src/include/commands/discard.h,25
#define DISCARD_H14,331

/home/seinoyu/pgsql/master/postgresql/src/include/commands/event_trigger.h,382
#define EVENT_TRIGGER_H14,444
typedef struct EventTriggerData24,699
	NodeTag		type;26,733
	const char *event;event27,749
	Node	   *parsetree;parsetree28,788
	CommandTag	tag;29,827
} EventTriggerData;30,844
#define AT_REWRITE_ALTER_PERSISTENCE	32,865
#define AT_REWRITE_DEFAULT_VAL	33,907
#define AT_REWRITE_COLUMN_REWRITE	34,945
#define CALLED_AS_EVENT_TRIGGER(40,1127

/home/seinoyu/pgsql/master/postgresql/src/include/commands/extension.h,27
#define EXTENSION_H15,446

/home/seinoyu/pgsql/master/postgresql/src/include/commands/subscriptioncmds.h,34
#define SUBSCRIPTIONCMDS_H16,449

/home/seinoyu/pgsql/master/postgresql/src/include/commands/view.h,22
#define VIEW_H15,375

/home/seinoyu/pgsql/master/postgresql/src/include/commands/prepare.h,196
#define PREPARE_H14,373
	char		stmt_name[stmt_name30,792
	CachedPlanSource *plansource;plansource31,823
	bool		from_sql;32,883
	TimestampTz prepare_time;33,945
} PreparedStatement;34,1014

/home/seinoyu/pgsql/master/postgresql/src/include/commands/comment.h,25
#define COMMENT_H16,354

/home/seinoyu/pgsql/master/postgresql/src/include/commands/tablespace.h,550
#define TABLESPACE_H15,451
#define XLOG_TBLSPC_CREATE	23,615
#define XLOG_TBLSPC_DROP	24,648
typedef struct xl_tblspc_create_rec26,680
	Oid			ts_id;28,718
	char		ts_path[ts_path29,732
} xl_tblspc_create_rec;30,800
typedef struct xl_tblspc_drop_rec32,825
	Oid			ts_id;34,861
} xl_tblspc_drop_rec;35,875
typedef struct TableSpaceOpts37,898
	int32		vl_len_;39,930
	float8		random_page_cost;40,994
	float8		seq_page_cost;41,1021
	int			effective_io_concurrency;42,1045
	int			maintenance_io_concurrency;43,1078
} TableSpaceOpts;44,1113

/home/seinoyu/pgsql/master/postgresql/src/include/commands/schemacmds.h,28
#define SCHEMACMDS_H16,425

/home/seinoyu/pgsql/master/postgresql/src/include/commands/seclabel.h,101
#define SECLABEL_H10,242
typedef void (*check_object_relabel_type)check_object_relabel_type29,751

/home/seinoyu/pgsql/master/postgresql/src/include/commands/matview.h,25
#define MATVIEW_H15,412

/home/seinoyu/pgsql/master/postgresql/src/include/commands/typecmds.h,59
#define TYPECMDS_H15,416
#define DEFAULT_TYPDELIM	22,526

/home/seinoyu/pgsql/master/postgresql/src/include/commands/portalcmds.h,28
#define PORTALCMDS_H15,424

/home/seinoyu/pgsql/master/postgresql/src/include/commands/proclang.h,26
#define PROCLANG_H14,413

/home/seinoyu/pgsql/master/postgresql/src/include/commands/explain.h,1320
#define EXPLAIN_H14,410
typedef enum ExplainFormat20,520
	EXPLAIN_FORMAT_TEXT,22,549
	EXPLAIN_FORMAT_XML,23,571
	EXPLAIN_FORMAT_JSON,24,592
	EXPLAIN_FORMAT_YAML25,614
} ExplainFormat;26,635
typedef struct ExplainWorkersState28,653
	int			num_workers;30,690
	bool	   *worker_inited;worker_inited31,752
	StringInfoData *worker_str;worker_str32,818
	int		   *worker_state_save;worker_state_save33,889
	StringInfo	prev_str;34,961
} ExplainWorkersState;35,1028
typedef struct ExplainState37,1052
	StringInfo	str;39,1082
	bool		verbose;41,1136
	bool		analyze;42,1170
	bool		costs;43,1212
	bool		buffers;44,1256
	bool		wal;45,1298
	bool		timing;46,1334
	bool		summary;47,1384
	bool		settings;48,1449
	ExplainFormat format;49,1497
	int			indent;51,1613
	List	   *grouping_stack;grouping_stack52,1662
	PlannedStmt *pstmt;pstmt54,1800
	List	   *rtable;rtable55,1841
	List	   *rtable_names;rtable_names56,1879
	List	   *deparse_cxt;deparse_cxt57,1930
	Bitmapset  *printed_subplans;printed_subplans58,1998
	bool		hide_workers;59,2065
	ExplainWorkersState *workers_state;workers_state61,2173
} ExplainState;62,2240
typedef void (*ExplainOneQuery_hook_type)ExplainOneQuery_hook_type65,2316
typedef const char *(*explain_get_index_name_hook_type)explain_get_index_name_hook_type75,2716

/home/seinoyu/pgsql/master/postgresql/src/include/commands/dbcommands_xlog.h,480
#define DBCOMMANDS_XLOG_H15,476
#define XLOG_DBASE_CREATE	21,582
#define XLOG_DBASE_DROP	22,614
typedef struct xl_dbase_create_rec24,646
	Oid			db_id;27,746
	Oid			tablespace_id;28,760
	Oid			src_db_id;29,782
	Oid			src_tablespace_id;30,800
} xl_dbase_create_rec;31,826
typedef struct xl_dbase_drop_rec33,850
	Oid			db_id;35,885
	int			ntablespaces;36,899
	Oid			tablespace_ids[tablespace_ids37,951
} xl_dbase_drop_rec;38,997
#define MinSizeOfDbaseDropRec 39,1018

/home/seinoyu/pgsql/master/postgresql/src/include/commands/cluster.h,25
#define CLUSTER_H14,432

/home/seinoyu/pgsql/master/postgresql/src/include/commands/publicationcmds.h,33
#define PUBLICATIONCMDS_H16,445

/home/seinoyu/pgsql/master/postgresql/src/include/commands/sequence.h,542
#define SEQUENCE_H14,413
typedef struct FormData_pg_sequence_data25,641
	int64		last_value;27,684
	int64		log_cnt;28,704
	bool		is_called;29,721
} FormData_pg_sequence_data;30,739
typedef FormData_pg_sequence_data *Form_pg_sequence_data;Form_pg_sequence_data32,769
#define SEQ_COL_LASTVAL	38,870
#define SEQ_COL_LOG	39,898
#define SEQ_COL_CALLED	40,923
#define SEQ_COL_FIRSTCOL	42,951
#define SEQ_COL_LASTCOL	43,993
#define XLOG_SEQ_LOG	46,1052
typedef struct xl_seq_rec48,1081
	RelFileNode node;50,1109
} xl_seq_rec;52,1174

/home/seinoyu/pgsql/master/postgresql/src/include/commands/vacuum.h,2445
#define VACUUM_H15,447
#define VACUUM_OPTION_NO_PARALLEL	39,1223
#define VACUUM_OPTION_PARALLEL_BULKDEL	45,1404
#define VACUUM_OPTION_PARALLEL_COND_CLEANUP	52,1641
#define VACUUM_OPTION_PARALLEL_CLEANUP	60,1980
#define VACUUM_OPTION_MAX_VALID_VALUE	63,2068
typedef struct VacAttrStats *VacAttrStatsP;VacAttrStatsP100,3957
typedef Datum (*AnalyzeAttrFetchFunc)AnalyzeAttrFetchFunc102,4002
typedef void (*AnalyzeAttrComputeStatsFunc)AnalyzeAttrComputeStatsFunc105,4102
typedef struct VacAttrStats110,4272
	Form_pg_attribute attr;123,4853
	Oid			attrtypid;124,4921
	int32		attrtypmod;125,4974
	Form_pg_type attrtype;126,5031
	Oid			attrcollid;127,5096
	MemoryContext anl_context;128,5155
	AnalyzeAttrComputeStatsFunc compute_stats;134,5320
	int			minrows;135,5387
	void	   *extra_data;extra_data136,5445
	bool		stats_valid;142,5643
	float4		stanullfrac;143,5663
	int32		stawidth;144,5725
	float4		stadistinct;145,5781
	int16		stakind[stakind146,5827
	Oid			staop[staop147,5865
	Oid			stacoll[stacoll148,5900
	int			numnumbers[numnumbers149,5937
	float4	   *stanumbers[stanumbers150,5977
	int			numvalues[numvalues151,6022
	Datum	   *stavalues[stavalues152,6061
	Oid			statypid[statypid160,6386
	int16		statyplen[statyplen161,6424
	bool		statypbyval[statypbyval162,6464
	char		statypalign[statypalign163,6505
	int			tupattnum;169,6670
	HeapTuple  *rows;rows170,6726
	TupleDesc	tupDesc;171,6788
	Datum	   *exprvals;exprvals172,6808
	bool	   *exprnulls;exprnulls173,6873
	int			rowstride;174,6894
} VacAttrStats;175,6912
typedef enum VacuumOption177,6929
	VACOPT_VACUUM 179,6957
	VACOPT_ANALYZE 180,6999
	VACOPT_VERBOSE 181,7042
	VACOPT_FREEZE 182,7094
	VACOPT_FULL 183,7140
	VACOPT_SKIP_LOCKED 184,7199
	VACOPT_SKIPTOAST 185,7259
	VACOPT_DISABLE_PAGE_SKIPPING 186,7331
} VacuumOption;187,7397
typedef enum VacOptTernaryValue195,7569
	VACOPT_TERNARY_DEFAULT 197,7603
	VACOPT_TERNARY_DISABLED,198,7632
	VACOPT_TERNARY_ENABLED,199,7658
} VacOptTernaryValue;200,7683
typedef struct VacuumParams208,7863
	int			options;210,7893
	int			freeze_min_age;211,7940
	int			freeze_table_age;212,8003
	int			multixact_freeze_min_age;213,8067
	int			multixact_freeze_table_age;215,8164
	bool		is_wraparound;217,8262
	int			log_min_duration;218,8320
	VacOptTernaryValue index_cleanup;221,8465
	VacOptTernaryValue truncate;223,8584
	int			nworkers;231,8870
} VacuumParams;232,8887

/home/seinoyu/pgsql/master/postgresql/src/include/commands/policy.h,24
#define POLICY_H16,409

/home/seinoyu/pgsql/master/postgresql/src/include/commands/variable.h,26
#define VARIABLE_H11,279

/home/seinoyu/pgsql/master/postgresql/src/include/commands/lockcmds.h,26
#define LOCKCMDS_H15,416

/home/seinoyu/pgsql/master/postgresql/src/include/commands/user.h,95
#define USER_H12,286
typedef void (*check_password_hook_type)check_password_hook_type23,564

/home/seinoyu/pgsql/master/postgresql/src/include/commands/copy.h,142
#define COPY_H15,426
typedef struct CopyStateData *CopyState;CopyState23,606
typedef int (*copy_data_source_cb)copy_data_source_cb24,647

/home/seinoyu/pgsql/master/postgresql/src/include/commands/async.h,58
#define ASYNC_H14,429
#define NUM_NOTIFY_BUFFERS	21,544

/home/seinoyu/pgsql/master/postgresql/src/include/jit/llvmjit_emit.h,555
#define LLVMJIT_EMIT_H10,228
l_ptr_const(27,509
l_ptr(38,709
l_int8_const(47,826
l_int16_const(56,960
l_int32_const(65,1097
l_int64_const(74,1234
l_sizet_const(83,1371
l_sbool_const(92,1552
l_pbool_const(101,1745
l_load_struct_gep(110,1903
l_load_gep1(121,2184
static inline LLVMBasicBlockRef l_bb_before_v(129,2443
static inline LLVMBasicBlockRef l_bb_append_v(149,2982
l_callsite_ro(172,3505
l_callsite_alwaysinline(189,3850
l_mcxt_switch(205,4252
l_funcnullp(223,4681
l_funcvaluep(241,5115
l_funcnull(259,5537
l_funcvalue(268,5740

/home/seinoyu/pgsql/master/postgresql/src/include/jit/jit.h,1311
#define JIT_H12,323
#define PGJIT_NONE 19,464
#define PGJIT_PERFORM 20,489
#define PGJIT_OPT3 21,521
#define PGJIT_INLINE 22,553
#define PGJIT_EXPR	23,585
#define PGJIT_DEFORM 24,616
typedef struct JitInstrumentation27,650
	size_t		created_functions;30,721
	instr_time	generation_counter;33,791
	instr_time	inlining_counter;36,861
	instr_time	optimization_counter;39,933
	instr_time	emission_counter;42,1010
} JitInstrumentation;43,1040
typedef struct SharedJitInstrumentation48,1140
	int			num_workers;50,1182
	JitInstrumentation jit_instr[jit_instr51,1202
} SharedJitInstrumentation;52,1256
typedef struct JitContext54,1285
	int			flags;57,1338
	ResourceOwner resowner;59,1353
	JitInstrumentation instr;61,1379
} JitContext;62,1406
typedef struct JitProviderCallbacks JitProviderCallbacks;64,1421
typedef void (*JitProviderInit)JitProviderInit67,1541
typedef void (*JitProviderResetAfterErrorCB)JitProviderResetAfterErrorCB68,1601
typedef void (*JitProviderReleaseContextCB)JitProviderReleaseContextCB69,1654
typedef bool (*JitProviderCompileExprCB)JitProviderCompileExprCB71,1739
struct JitProviderCallbacks73,1808
	JitProviderResetAfterErrorCB reset_after_error;75,1838
	JitProviderReleaseContextCB release_context;76,1887
	JitProviderCompileExprCB compile_expr;77,1933

/home/seinoyu/pgsql/master/postgresql/src/include/jit/llvmjit.h,262
#define LLVMJIT_H12,313
typedef struct LLVMJitContext38,790
	JitContext	base;40,822
	size_t		module_generation;43,874
	LLVMModuleRef module;46,944
	bool		compiled;49,1026
	int			counter;52,1112
	List	   *handles;handles55,1177
} LLVMJitContext;56,1196

/home/seinoyu/pgsql/master/postgresql/src/include/access/xlogrecord.h,1969
#define XLOGRECORD_H12,275
typedef struct XLogRecord41,1172
	uint32		xl_tot_len;43,1200
	TransactionId xl_xid;44,1255
	XLogRecPtr	xl_prev;45,1293
	uint8		xl_info;46,1351
	RmgrId		xl_rmid;47,1396
	pg_crc32c	xl_crc;49,1505
} XLogRecord;53,1628
#define SizeOfXLogRecord	55,1643
#define XLR_INFO_MASK	62,1928
#define XLR_RMGR_INFO_MASK	63,1957
#define XLR_SPECIAL_REL_UPDATE	71,2293
#define XLR_CHECK_CONSISTENCY	80,2692
typedef struct XLogRecordBlockHeader92,3132
	uint8		id;94,3171
	uint8		fork_flags;95,3211
	uint16		data_length;96,3274
} XLogRecordBlockHeader;102,3529
#define SizeOfXLogRecordBlockHeader 104,3555
typedef struct XLogRecordBlockImageHeader130,5102
	uint16		length;132,5146
	uint16		hole_offset;133,5198
	uint8		bimg_info;134,5256
} XLogRecordBlockImageHeader;140,5419
#define SizeOfXLogRecordBlockImageHeader	142,5450
#define BKPIMAGE_HAS_HOLE	146,5599
#define BKPIMAGE_IS_COMPRESSED	147,5659
#define BKPIMAGE_APPLY	148,5727
typedef struct XLogRecordBlockCompressHeader155,5908
	uint16		hole_length;157,5955
} XLogRecordBlockCompressHeader;158,6009
#define SizeOfXLogRecordBlockCompressHeader 160,6043
#define MaxSizeOfXLogRecordBlockHeader 167,6261
#define BKPBLOCK_FORK_MASK	178,6581
#define BKPBLOCK_FLAG_MASK	179,6613
#define BKPBLOCK_HAS_IMAGE	180,6645
#define BKPBLOCK_HAS_DATA	181,6721
#define BKPBLOCK_WILL_INIT	182,6752
#define BKPBLOCK_SAME_REL	183,6817
typedef struct XLogRecordDataHeaderShort194,7249
	uint8		id;196,7292
	uint8		data_length;197,7337
}			XLogRecordDataHeaderShort;198,7388
#define SizeOfXLogRecordDataHeaderShort 200,7420
typedef struct XLogRecordDataHeaderLong202,7481
	uint8		id;204,7523
}			XLogRecordDataHeaderLong;206,7616
#define SizeOfXLogRecordDataHeaderLong 208,7647
#define XLR_MAX_BLOCK_ID	221,8270
#define XLR_BLOCK_ID_DATA_SHORT	223,8301
#define XLR_BLOCK_ID_DATA_LONG	224,8338
#define XLR_BLOCK_ID_ORIGIN	225,8374
#define XLR_BLOCK_ID_TOPLEVEL_XID	226,8408

/home/seinoyu/pgsql/master/postgresql/src/include/access/slru.h,1149
#define SLRU_H14,424
#define SLRU_PAGES_PER_SEGMENT	33,1206
	SLRU_PAGE_EMPTY,43,1502
	SLRU_PAGE_READ_IN_PROGRESS,44,1549
	SLRU_PAGE_VALID,45,1606
	SLRU_PAGE_WRITE_IN_PROGRESS 46,1668
} SlruPageStatus;47,1729
typedef struct SlruSharedData52,1778
	LWLock	   *ControlLock;ControlLock54,1810
	int			num_slots;57,1892
	char	  **page_buffer;page_buffer63,2040
	SlruPageStatus *page_status;page_status64,2063
	bool	   *page_dirty;page_dirty65,2093
	int		   *page_number;page_number66,2115
	int		   *page_lru_count;page_lru_count67,2138
	LWLockPadded *buffer_locks;buffer_locks68,2164
	XLogRecPtr *group_lsn;group_lsn78,2586
	int			lsn_groups_per_page;79,2610
	int			cur_lru_count;90,3011
	int			latest_page_number;97,3211
	int			slru_stats_idx;100,3305
} SlruSharedData;101,3328
typedef SlruSharedData *SlruShared;SlruShared103,3347
typedef struct SlruCtlData109,3490
	SlruShared	shared;111,3519
	bool		do_fsync;117,3674
	bool		(*PagePrecedes)PagePrecedes124,3894
	char		Dir[Dir130,4079
} SlruCtlData;131,4095
typedef SlruCtlData *SlruCtl;SlruCtl133,4111
typedef bool (*SlruScanCallback)SlruScanCallback149,4838

/home/seinoyu/pgsql/master/postgresql/src/include/access/tupconvert.h,338
#define TUPCONVERT_H15,419
typedef struct TupleConversionMap23,554
	TupleDesc	indesc;25,590
	TupleDesc	outdesc;26,644
	AttrMap    *attrMap;attrMap27,698
	Datum	   *invalues;invalues28,766
	bool	   *inisnull;inisnull29,830
	Datum	   *outvalues;outvalues30,850
	bool	   *outisnull;outisnull31,913
} TupleConversionMap;32,934

/home/seinoyu/pgsql/master/postgresql/src/include/access/skey.h,608
#define SKEY_H15,406
typedef struct ScanKeyData64,2799
	int			sk_flags;66,2828
	AttrNumber	sk_attno;67,2869
	StrategyNumber sk_strategy;68,2927
	Oid			sk_subtype;69,2987
	Oid			sk_collation;70,3030
	FmgrInfo	sk_func;71,3085
	Datum		sk_argument;72,3144
} ScanKeyData;73,3187
typedef ScanKeyData *ScanKey;ScanKey75,3203
#define SK_ISNULL	115,5067
#define SK_UNARY	116,5120
#define SK_ROW_HEADER	117,5184
#define SK_ROW_MEMBER	118,5254
#define SK_ROW_END	119,5324
#define SK_SEARCHARRAY	120,5385
#define SK_SEARCHNULL	121,5455
#define SK_SEARCHNOTNULL	122,5524
#define SK_ORDER_BY	123,5599

/home/seinoyu/pgsql/master/postgresql/src/include/access/tableam.h,5515
#define TABLEAM_H18,491
#define DEFAULT_TABLE_ACCESS_METHOD	27,639
typedef enum ScanOptions44,992
	SO_TYPE_SEQSCAN 47,1060
	SO_TYPE_BITMAPSCAN 48,1087
	SO_TYPE_SAMPLESCAN 49,1117
	SO_TYPE_TIDSCAN 50,1147
	SO_TYPE_ANALYZE 51,1174
	SO_ALLOW_STRAT 55,1296
	SO_ALLOW_SYNC 57,1364
	SO_ALLOW_PAGEMODE 59,1430
	SO_TEMP_SNAPSHOT 62,1500
} ScanOptions;63,1527
typedef enum TM_Result69,1653
	TM_Ok,75,1779
	TM_Invisible,78,1854
	TM_SelfModified,81,1940
	TM_Updated,87,2098
	TM_Deleted,90,2173
	TM_BeingModified,97,2366
	TM_WouldBlock100,2460
} TM_Result;101,2475
typedef struct TM_FailureData122,3377
	ItemPointerData ctid;124,3409
	TransactionId xmax;125,3432
	CommandId	cmax;126,3453
	bool		traversed;127,3470
} TM_FailureData;128,3488
#define TABLE_INSERT_SKIP_FSM	132,3627
#define TABLE_INSERT_FROZEN	133,3665
#define TABLE_INSERT_NO_LOGICAL	134,3702
#define TUPLE_LOCK_FLAG_LOCK_UPDATE_IN_PROGRESS	138,3858
#define TUPLE_LOCK_FLAG_FIND_LAST_VERSION	140,3974
typedef void (*IndexBuildCallback)IndexBuildCallback144,4091
typedef struct TableAmRoutine162,4697
	NodeTag		type;165,4773
	const TupleTableSlotOps *(*slot_callbacks)slot_callbacks176,5060
	TableScanDesc (*scan_begin)scan_begin200,6093
	void		(*scan_end)scan_end210,6409
	void		(*scan_rescan)scan_rescan216,6607
	bool		(*scan_getnextslot)scan_getnextslot223,6825
	Size		(*parallelscan_estimate)parallelscan_estimate237,7291
	Size		(*parallelscan_initialize)parallelscan_initialize244,7514
	void		(*parallelscan_reinitialize)parallelscan_reinitialize251,7751
	struct IndexFetchTableData *(*index_fetch_begin)index_fetch_begin268,8363
	void		(*index_fetch_reset)index_fetch_reset274,8551
	void		(*index_fetch_end)index_fetch_end279,8675
	bool		(*index_fetch_tuple)index_fetch_tuple301,9711
	bool		(*tuple_fetch_row_version)tuple_fetch_row_version318,10331
	bool		(*tuple_tid_valid)tuple_tid_valid326,10528
	void		(*tuple_get_latest_tid)tuple_get_latest_tid333,10719
	bool		(*tuple_satisfies_snapshot)tuple_satisfies_snapshot340,10921
	TransactionId (*compute_xid_horizon_for_tuples)compute_xid_horizon_for_tuples345,11088
	void		(*tuple_insert)tuple_insert356,11480
	void		(*tuple_insert_speculative)tuple_insert_speculative361,11700
	void		(*tuple_complete_speculative)tuple_complete_speculative369,11994
	void		(*multi_insert)multi_insert375,12209
	TM_Result	(*tuple_delete)tuple_delete379,12422
	TM_Result	(*tuple_update)tuple_update389,12716
	TM_Result	(*tuple_lock)tuple_lock401,13077
	void		(*finish_bulk_insert)finish_bulk_insert423,13835
	void		(*relation_set_new_filenode)relation_set_new_filenode447,14783
	void		(*relation_nontransactional_truncate)relation_nontransactional_truncate461,15294
	void		(*relation_copy_data)relation_copy_data469,15551
	void		(*relation_copy_for_cluster)relation_copy_for_cluster473,15683
	void		(*relation_vacuum)relation_vacuum499,16660
	bool		(*scan_analyze_next_block)scan_analyze_next_block520,17518
	bool		(*scan_analyze_next_tuple)scan_analyze_next_tuple532,17929
	double		(*index_build_range_scan)index_build_range_scan539,18185
	void		(*index_validate_scan)index_validate_scan552,18661
	uint64		(*relation_size)relation_size572,19321
	bool		(*relation_needs_toast_table)relation_needs_toast_table582,19715
	Oid			(*relation_toast_am)relation_toast_am589,19981
	void		(*relation_fetch_toast_slice)relation_fetch_toast_slice596,20202
	void		(*relation_estimate_size)relation_estimate_size618,20995
	bool		(*scan_bitmap_next_block)scan_bitmap_next_block659,22869
	bool		(*scan_bitmap_next_tuple)scan_bitmap_next_tuple673,23427
	bool		(*scan_sample_next_block)scan_sample_next_block702,24799
	bool		(*scan_sample_next_tuple)scan_sample_next_tuple718,25460
} TableAmRoutine;722,25599
table_beginscan(754,26604
table_beginscan_strat(778,27483
table_beginscan_bm(799,28155
table_beginscan_sampling(815,28798
table_beginscan_tid(838,29476
table_beginscan_analyze(851,29900
table_endscan(862,30096
table_rescan(871,30231
table_rescan_set_params(886,30732
table_scan_getnextslot(903,31186
table_parallelscan_reinitialize(947,32751
table_index_fetch_begin(965,33312
table_index_fetch_reset(975,33540
table_index_fetch_end(984,33727
table_index_fetch_tuple(1014,35170
table_tuple_fetch_row_version(1054,36479
table_tuple_tid_valid(1072,37083
table_tuple_satisfies_snapshot(1093,37701
table_compute_xid_horizon_for_tuples(1105,38092
table_tuple_insert(1153,40201
table_tuple_insert_speculative(1172,40996
table_tuple_complete_speculative(1186,41456
table_multi_insert(1208,42283
table_tuple_delete(1242,43683
table_tuple_update(1286,45567
table_tuple_lock(1331,47364
table_finish_bulk_insert(1346,47852
table_relation_set_new_filenode(1372,48759
table_relation_nontransactional_truncate(1389,49325
table_relation_copy_data(1401,49721
table_relation_copy_for_cluster(1428,50706
table_relation_vacuum(1457,51740
table_scan_analyze_next_block(1472,52259
table_scan_analyze_next_tuple(1490,52890
table_index_build_scan(1527,54708
table_index_build_range_scan(1560,55816
table_index_validate_scan(1591,56650
table_relation_size(1620,57590
table_relation_needs_toast_table(1629,57812
table_relation_toast_am(1639,58046
table_relation_fetch_toast_slice(1668,58972
table_relation_estimate_size(1689,59670
table_scan_bitmap_next_block(1713,60522
table_scan_bitmap_next_tuple(1729,61054
table_scan_sample_next_block(1748,61694
table_scan_sample_next_tuple(1763,62258

/home/seinoyu/pgsql/master/postgresql/src/include/access/tupdesc.h,1034
#define TUPDESC_H15,423
typedef struct AttrDefault22,532
	AttrNumber	adnum;24,561
	char	   *adbin;adbin25,580
} AttrDefault;26,641
typedef struct ConstrCheck28,657
	char	   *ccname;ccname30,686
	char	   *ccbin;ccbin31,704
	bool		ccvalid;32,765
	bool		ccnoinherit;33,781
} ConstrCheck;34,844
typedef struct TupleConstr37,913
	AttrDefault *defval;defval39,942
	ConstrCheck *check;check40,977
	struct AttrMissing *missing;missing41,1012
	uint16		num_defval;42,1088
	uint16		num_check;43,1109
	bool		has_not_null;44,1129
	bool		has_generated_stored;45,1150
} TupleConstr;46,1179
typedef struct TupleDescData79,2926
	int			natts;81,2957
	Oid			tdtypeid;82,3013
	int32		tdtypmod;83,3070
	int			tdrefcount;84,3117
	TupleConstr *constr;constr85,3182
	FormData_pg_attribute attrs[attrs87,3299
}			TupleDescData;88,3352
typedef struct TupleDescData *TupleDesc;TupleDesc89,3371
#define TupleDescAttr(92,3463
#define TupleDescSize(102,3771
#define PinTupleDesc(116,4222
#define ReleaseTupleDesc(122,4349

/home/seinoyu/pgsql/master/postgresql/src/include/access/rewriteheap.h,353
#define REWRITE_HEAP_H14,444
typedef struct RewriteStateData *RewriteState;RewriteState22,636
typedef struct LogicalRewriteMappingData35,1167
	RelFileNode old_node;37,1210
	RelFileNode new_node;38,1233
	ItemPointerData old_tid;39,1256
	ItemPointerData new_tid;40,1282
} LogicalRewriteMappingData;41,1308
#define LOGICAL_REWRITE_FORMAT 54,1700

/home/seinoyu/pgsql/master/postgresql/src/include/access/tupmacs.h,384
#define TUPMACS_H15,440
#define att_isnull(25,685
#define fetchatt(41,1369
#define fetch_att(48,1538
#define fetch_att(75,2021
#define att_align_datum(105,2861
#define att_align_pointer(126,3836
#define att_align_nominal(148,4783
#define att_addlength_datum(164,5314
#define att_addlength_pointer(176,5816
#define store_att_byval(202,6466
#define store_att_byval(226,7031

/home/seinoyu/pgsql/master/postgresql/src/include/access/bufmask.h,53
#define BUFMASK_H18,640
#define MASK_MARKER	24,760

/home/seinoyu/pgsql/master/postgresql/src/include/access/htup.h,611
#define HTUP_H15,408
typedef struct HeapTupleHeaderData HeapTupleHeaderData;21,533
typedef HeapTupleHeaderData *HeapTupleHeader;HeapTupleHeader23,590
typedef struct MinimalTupleData MinimalTupleData;25,637
typedef MinimalTupleData *MinimalTuple;MinimalTuple27,688
typedef struct HeapTupleData62,2335
	uint32		t_len;64,2366
	ItemPointerData t_self;65,2408
	Oid			t_tableOid;66,2456
#define FIELDNO_HEAPTUPLEDATA_DATA 67,2508
	HeapTupleHeader t_data;68,2545
} HeapTupleData;69,2602
typedef HeapTupleData *HeapTuple;HeapTuple71,2620
#define HEAPTUPLESIZE	73,2655
#define HeapTupleIsValid(78,2772

/home/seinoyu/pgsql/master/postgresql/src/include/access/itup.h,714
#define ITUP_H15,409
typedef struct IndexTupleData35,1083
	ItemPointerData t_tid;37,1115
	unsigned short t_info;49,1405
} IndexTupleData;51,1462
typedef IndexTupleData *IndexTuple;IndexTuple53,1525
typedef struct IndexAttributeBitMapData55,1562
}			IndexAttributeBitMapData;58,1648
typedef IndexAttributeBitMapData * IndexAttributeBitMap;60,1679
#define INDEX_SIZE_MASK 65,1774
#define INDEX_AM_RESERVED_BIT 66,1805
#define INDEX_VAR_MASK	68,1898
#define INDEX_NULL_MASK 69,1928
#define IndexTupleSize(71,1960
#define IndexTupleHasNulls(72,2034
#define IndexTupleHasVarwidths(73,2119
#define IndexInfoFindDataOffset(80,2351
#define index_getattr(100,2779
#define MaxIndexTuplesPerPage	145,4363

/home/seinoyu/pgsql/master/postgresql/src/include/access/xlogreader.h,2925
#define XLOGREADER_H35,1451
typedef struct WALOpenSegment44,1616
	int			ws_file;46,1648
	XLogSegNo	ws_segno;47,1695
	TimeLineID	ws_tli;48,1738
} WALOpenSegment;49,1805
typedef struct WALSegmentContext52,1903
	char		ws_dir[ws_dir54,1938
	int			ws_segsize;55,1964
} WALSegmentContext;56,1983
typedef struct XLogReaderState XLogReaderState;58,2005
typedef int (*XLogPageReadCB)XLogPageReadCB61,2122
typedef void (*WALSegmentOpenCB)WALSegmentOpenCB66,2301
typedef void (*WALSegmentCloseCB)WALSegmentCloseCB69,2425
typedef struct XLogReaderRoutine71,2491
	XLogPageReadCB page_read;93,3482
	WALSegmentOpenCB segment_open;107,4020
	WALSegmentCloseCB segment_close;113,4148
} XLogReaderRoutine;114,4182
#define XL_ROUTINE(116,4204
	bool		in_use;121,4313
	RelFileNode rnode;124,4370
	ForkNumber	forknum;125,4390
	BlockNumber blkno;126,4411
	uint8		flags;129,4499
	bool		has_image;132,4561
	bool		apply_image;133,4627
	char	   *bkp_image;bkp_image134,4687
	uint16		hole_offset;135,4708
	uint16		hole_length;136,4730
	uint16		bimg_len;137,4752
	uint8		bimg_info;138,4771
	bool		has_data;141,4863
	char	   *data;data142,4880
	uint16		data_len;143,4896
	uint16		data_bufsz;144,4915
} DecodedBkpBlock;145,4936
struct XLogReaderState147,4956
	XLogReaderRoutine routine;152,5016
	uint64		system_identifier;163,5297
	void	   *private_data;private_data168,5398
	XLogRecPtr	ReadRecPtr;175,5631
	XLogRecPtr	EndRecPtr;176,5688
	XLogRecord *decoded_record;decoded_record186,5997
	char	   *main_data;main_data188,6058
	uint32		main_data_len;189,6113
	uint32		main_data_bufsz;190,6170
	RepOriginId record_origin;192,6232
	TransactionId toplevel_xid;194,6261
	DecodedBkpBlock blocks[blocks197,6384
	int			max_block_id;199,6432
	char	   *readBuf;readBuf210,6724
	uint32		readLen;211,6743
	WALSegmentContext segcxt;214,6823
	WALOpenSegment seg;215,6850
	uint32		segoff;216,6871
	XLogRecPtr	latestPagePtr;222,7036
	TimeLineID	latestPageTLI;223,7063
	XLogRecPtr	currRecPtr;226,7138
	TimeLineID	currTLI;228,7221
	XLogRecPtr	currTLIValidUntil;238,7593
	TimeLineID	nextTLI;244,7758
	char	   *readRecordBuf;readRecordBuf250,7892
	uint32		readRecordBufSize;251,7917
	char	   *errormsg_buf;errormsg_buf254,7982
typedef struct WALReadError285,9033
	int			wre_errno;287,9063
	int			wre_off;288,9121
	int			wre_req;289,9174
	int			wre_read;290,9225
	WALOpenSegment wre_seg;291,9280
} WALReadError;292,9343
#define XLogRecGetTotalLen(303,9641
#define XLogRecGetPrev(304,9717
#define XLogRecGetInfo(305,9786
#define XLogRecGetRmid(306,9855
#define XLogRecGetXid(307,9924
#define XLogRecGetOrigin(308,9991
#define XLogRecGetTopXid(309,10052
#define XLogRecGetData(310,10112
#define XLogRecGetDataLen(311,10167
#define XLogRecHasAnyBlockRefs(312,10229
#define XLogRecHasBlockRef(313,10300
#define XLogRecHasBlockImage(315,10386
#define XLogRecBlockImageApply(317,10477

/home/seinoyu/pgsql/master/postgresql/src/include/access/nbtree.h,7271
#define NBTREE_H15,442
typedef uint16 BTCycleId;28,780
typedef struct BTPageOpaqueData56,2202
	BlockNumber btpo_prev;58,2236
	BlockNumber btpo_next;59,2303
		uint32		level;62,2382
		TransactionId xact;63,2441
	}			btpo;64,2502
	uint16		btpo_flags;65,2513
	BTCycleId	btpo_cycleid;66,2562
} BTPageOpaqueData;67,2625
typedef BTPageOpaqueData *BTPageOpaque;BTPageOpaque69,2646
#define BTP_LEAF	72,2720
#define BTP_ROOT	73,2787
#define BTP_DELETED	74,2846
#define BTP_META	75,2914
#define BTP_HALF_DEAD	76,2957
#define BTP_SPLIT_END	77,3019
#define BTP_HAS_GARBAGE 78,3086
#define BTP_INCOMPLETE_SPLIT 79,3149
#define MAX_BT_CYCLE_ID	88,3574
typedef struct BTMetaPageData98,3857
	uint32		btm_magic;100,3889
	uint32		btm_version;101,3943
	BlockNumber btm_root;102,4012
	uint32		btm_level;103,4064
	BlockNumber btm_fastroot;104,4119
	uint32		btm_fastlevel;105,4181
	TransactionId btm_oldest_btpo_xact;107,4321
	float8		btm_last_cleanup_num_heap_tuples;109,4418
	bool		btm_allequalimage;111,4525
} BTMetaPageData;112,4587
#define BTPageGetMeta(114,4606
#define BTREE_METAPAGE	141,5917
#define BTREE_MAGIC	142,5968
#define BTREE_VERSION	143,6029
#define BTREE_MIN_VERSION	144,6083
#define BTREE_NOVAC_VERSION	145,6143
#define BTMaxItemSize(157,6593
#define BTMaxItemSizeNoHeapTid(163,6825
#define MaxTIDsPerBTreePage 179,7571
#define BTREE_MIN_FILLFACTOR	193,8189
#define BTREE_DEFAULT_FILLFACTOR	194,8222
#define BTREE_NONLEAF_FILLFACTOR	195,8258
#define BTREE_SINGLEVAL_FILLFACTOR	196,8294
#define P_NONE	206,8655
#define P_LEFTMOST(212,8815
#define P_RIGHTMOST(213,8875
#define P_ISLEAF(214,8936
#define P_ISROOT(215,9003
#define P_ISDELETED(216,9070
#define P_ISMETA(217,9143
#define P_ISHALFDEAD(218,9210
#define P_IGNORE(219,9285
#define P_HAS_GARBAGE(220,9371
#define P_INCOMPLETE_SPLIT(221,9449
#define P_HIKEY	242,10457
#define P_FIRSTKEY	243,10495
#define P_FIRSTDATAKEY(244,10535
#define INDEX_ALT_TID_MASK	334,15421
#define BT_OFFSET_MASK	337,15509
#define BT_STATUS_OFFSET_MASK	338,15542
#define BT_PIVOT_HEAP_TID_ATTR	340,15620
#define BT_IS_POSTING	341,15659
BTreeTupleIsPivot(348,15838
BTreeTupleIsPosting(360,16139
BTreeTupleSetPosting(372,16445
BTreeTupleGetNPosting(386,16913
BTreeTupleGetPostingOffset(397,17147
BTreeTupleGetPosting(405,17324
BTreeTupleGetPostingN(412,17484
BTreeTupleGetDownLink(424,17811
BTreeTupleSetDownLink(430,17932
#define BTreeTupleGetNAtts(445,18399
BTreeTupleSetNAtts(463,18879
BTreeTupleGetTopParent(488,19628
BTreeTupleSetTopParent(494,19758
BTreeTupleGetHeapTID(506,20084
BTreeTupleGetMaxHeapTID(532,20766
#define BTCommuteStrategyNumber(553,21252
#define BTORDER_PROC	575,22233
#define BTSORTSUPPORT_PROC	576,22257
#define BTINRANGE_PROC	577,22286
#define BTEQUALIMAGE_PROC	578,22312
#define BTOPTIONS_PROC	579,22340
#define BTNProcs	580,22366
#define BT_READ	587,22521
#define BT_WRITE	588,22557
typedef struct BTStackData600,23130
	BlockNumber bts_blkno;602,23159
	OffsetNumber bts_offset;603,23183
	struct BTStackData *bts_parent;bts_parent604,23209
} BTStackData;605,23242
typedef BTStackData *BTStack;BTStack607,23258
typedef struct BTScanInsertData657,26062
	bool		heapkeyspace;659,26096
	bool		allequalimage;660,26117
	bool		anynullkeys;661,26139
	bool		nextkey;662,26159
	bool		pivotsearch;663,26175
	ItemPointer scantid;664,26195
	int			keysz;665,26248
	ScanKeyData scankeys[scankeys666,26293
} BTScanInsertData;667,26355
typedef BTScanInsertData *BTScanInsert;BTScanInsert669,26376
typedef struct BTInsertStateData682,26811
	IndexTuple	itup;684,26846
	Size		itemsz;685,26893
	BTScanInsert itup_key;686,26955
	Buffer		buf;689,27071
	bool		bounds_valid;696,27269
	OffsetNumber low;697,27290
	OffsetNumber stricthigh;698,27309
	int			postingoff;705,27566
} BTInsertStateData;706,27585
typedef BTInsertStateData *BTInsertState;BTInsertState708,27607
typedef struct BTDedupInterval714,27740
	OffsetNumber baseoff;716,27773
	uint16		nitems;717,27796
} BTDedupInterval;718,27813
typedef struct BTDedupStateData738,28801
	bool		deduplicate;741,28894
	int			nmaxitems;742,28946
	Size		maxpostingsize;743,29005
	IndexTuple	base;746,29129
	OffsetNumber baseoff;747,29184
	Size		basetupsize;748,29234
	ItemPointer htids;751,29350
	int			nhtids;752,29412
	int			nitems;753,29470
	Size		phystupsize;754,29533
	int			nintervals;762,29873
	BTDedupInterval intervals[intervals763,29936
} BTDedupStateData;764,29987
typedef BTDedupStateData *BTDedupState;BTDedupState766,30008
typedef struct BTVacuumPostingData775,30355
	IndexTuple	itup;778,30430
	OffsetNumber updatedoffset;779,30448
	uint16		ndeletedtids;782,30528
	uint16		deletetids[deletetids783,30551
} BTVacuumPostingData;784,30595
typedef BTVacuumPostingData *BTVacuumPosting;BTVacuumPosting786,30619
typedef struct BTScanPosItem	816,32269
	ItemPointerData heapTid;818,32340
	OffsetNumber indexOffset;819,32400
	LocationIndex tupleOffset;820,32467
} BTScanPosItem;821,32542
typedef struct BTScanPosData823,32560
	Buffer		buf;825,32591
	XLogRecPtr	lsn;827,32645
	BlockNumber currPage;828,32711
	BlockNumber nextPage;829,32772
	bool		moreLeft;837,33103
	bool		moreRight;838,33120
	int			nextTupleOffset;844,33278
	int			firstItem;853,33677
	int			lastItem;854,33731
	int			itemIndex;855,33783
	BTScanPosItem items[items857,33834
} BTScanPosData;858,33896
typedef BTScanPosData *BTScanPos;BTScanPos860,33914
#define BTScanPosIsPinned(862,33949
#define BTScanPosUnpin(868,34119
#define BTScanPosUnpinIfPinned(873,34243
#define BTScanPosIsValid(879,34373
#define BTScanPosInvalidate(885,34552
typedef struct BTArrayKeyInfo895,34886
	int			scan_key;897,34918
	int			cur_elem;898,34982
	int			mark_elem;899,35046
	int			num_elems;900,35110
	Datum	   *elem_values;elem_values901,35174
} BTArrayKeyInfo;902,35230
typedef struct BTScanOpaqueData904,35249
	bool		qual_ok;907,35337
	int			numberOfKeys;908,35397
	ScanKey		keyData;909,35457
	ScanKey		arrayKeyData;912,35560
	int			numArrayKeys;913,35621
	int			arrayKeyCount;915,35741
	BTArrayKeyInfo *arrayKeys;arrayKeys917,35833
	MemoryContext arrayContext;918,35907
	int		   *killedItems;killedItems921,36054
	int			numKilled;922,36121
	char	   *currTuples;currTuples929,36400
	char	   *markTuples;markTuples930,36455
	int			markItemIndex;939,36822
	BTScanPosData currPos;942,36929
	BTScanPosData markPos;943,36982
} BTScanOpaqueData;944,37037
typedef BTScanOpaqueData *BTScanOpaque;BTScanOpaque946,37058
#define SK_BT_REQFWD	953,37320
#define SK_BT_REQBKWD	954,37392
#define SK_BT_INDOPTION_SHIFT 955,37466
#define SK_BT_DESC	956,37532
#define SK_BT_NULLS_FIRST	957,37595
typedef struct BTOptions959,37671
	int32		varlena_header_;961,37698
	int			fillfactor;962,37769
	float8		vacuum_cleanup_index_scale_factor;964,37904
	bool		deduplicate_items;965,37948
} BTOptions;966,38006
#define BTGetFillFactor(968,38020
#define BTGetTargetPageFreeSpace(974,38281
#define BTGetDeduplicateItems(976,38378
#define PROGRESS_BTREE_PHASE_INDEXBUILD_TABLESCAN	987,38798
#define PROGRESS_BTREE_PHASE_PERFORMSORT_1	988,38851
#define PROGRESS_BTREE_PHASE_PERFORMSORT_2	989,38899
#define PROGRESS_BTREE_PHASE_LEAF_LOAD	990,38947

/home/seinoyu/pgsql/master/postgresql/src/include/access/sysattr.h,347
#define SYSATTR_H15,423
#define SelfItemPointerAttributeNumber	21,505
#define MinTransactionIdAttributeNumber	22,551
#define MinCommandIdAttributeNumber	23,598
#define MaxTransactionIdAttributeNumber	24,642
#define MaxCommandIdAttributeNumber	25,689
#define TableOidAttributeNumber	26,733
#define FirstLowInvalidHeapAttributeNumber	27,774

/home/seinoyu/pgsql/master/postgresql/src/include/access/tupdesc_details.h,140
#define TUPDESC_DETAILS_H16,475
typedef struct AttrMissing22,662
	bool		am_present;24,691
	Datum		am_value;25,755
} AttrMissing;26,812

/home/seinoyu/pgsql/master/postgresql/src/include/access/visibilitymap.h,251
#define VISIBILITYMAP_H15,426
#define BITS_PER_HEAPBLOCK 23,600
#define VISIBILITYMAP_ALL_VISIBLE	26,654
#define VISIBILITYMAP_ALL_FROZEN	27,693
#define VISIBILITYMAP_VALID_BITS	28,731
#define VM_ALL_VISIBLE(32,867
#define VM_ALL_FROZEN(34,979

/home/seinoyu/pgsql/master/postgresql/src/include/access/brin_pageops.h,30
#define BRIN_PAGEOPS_H12,300

/home/seinoyu/pgsql/master/postgresql/src/include/access/xlog_internal.h,3306
#define XLOG_INTERNAL_H20,731
#define XLOG_PAGE_MAGIC 34,1015
typedef struct XLogPageHeaderData36,1090
	uint16		xlp_magic;38,1126
	uint16		xlp_info;39,1188
	TimeLineID	xlp_tli;40,1235
	XLogRecPtr	xlp_pageaddr;41,1298
	uint32		xlp_rem_len;52,1736
} XLogPageHeaderData;53,1803
#define SizeOfXLogShortPHD	55,1826
typedef XLogPageHeaderData *XLogPageHeader;XLogPageHeader57,1891
typedef struct XLogLongPageHeaderData64,2165
	XLogPageHeaderData std;66,2205
	uint64		xlp_sysid;67,2260
	uint32		xlp_seg_size;68,2321
	uint32		xlp_xlog_blcksz;69,2372
} XLogLongPageHeaderData;70,2426
#define SizeOfXLogLongPHD	72,2453
typedef XLogLongPageHeaderData *XLogLongPageHeader;XLogLongPageHeader74,2521
#define XLP_FIRST_IS_CONTRECORD	77,2650
#define XLP_LONG_HEADER	79,2737
#define XLP_BKP_REMOVABLE	81,2846
#define XLP_ALL_FLAGS	83,2960
#define XLogPageHeaderSize(85,2993
#define WalSegMinSize 89,3158
#define WalSegMaxSize 90,3192
#define DEFAULT_MIN_WAL_SEGS 92,3282
#define DEFAULT_MAX_WAL_SEGS 93,3313
#define IsPowerOf2(96,3406
#define IsValidWalSegSize(97,3460
#define XLogSegmentsPerXLogId(101,3576
#define XLogSegNoOffsetToRecPtr(104,3674
#define XLogSegmentOffset(107,3797
#define XLByteToSeg(118,4190
#define XLByteToPrevSeg(121,4285
#define XLogMBVarToSegs(128,4486
#define XLByteInSeg(137,4785
#define XLByteInPrevSeg(140,4887
#define XRecOffIsValid(144,5058
#define XLOGDIR	150,5205
#define XLOG_CONTROL_FILE	151,5233
#define MAXFNAMELEN	157,5431
#define XLOG_FNAME_LEN	160,5487
#define XLogFileName(166,5641
#define XLogFileNameById(171,5896
#define IsXLogFileName(174,6007
#define IsPartialXLogFileName(183,6312
#define XLogFromFileName(188,6525
#define XLogFilePath(196,6803
#define TLHistoryFileName(201,7062
#define IsTLHistoryFileName(204,7154
#define TLHistoryFilePath(209,7327
#define StatusFilePath(212,7424
#define BackupHistoryFileName(215,7543
#define IsBackupHistoryFileName(221,7895
#define BackupHistoryFilePath(226,8105
typedef struct xl_parameter_change236,8572
	int			MaxConnections;238,8609
	int			max_worker_processes;239,8632
	int			max_wal_senders;240,8661
	int			max_prepared_xacts;241,8685
	int			max_locks_per_xact;242,8712
	int			wal_level;243,8739
	bool		wal_log_hints;244,8757
	bool		track_commit_timestamp;245,8779
} xl_parameter_change;246,8810
typedef struct xl_restore_point249,8859
	TimestampTz rp_time;251,8893
	char		rp_name[rp_name252,8915
} xl_restore_point;253,8944
typedef struct xl_end_of_recovery256,9040
	TimestampTz end_time;258,9076
	TimeLineID	ThisTimeLineID;259,9099
	TimeLineID	PrevTimeLineID;260,9141
} xl_end_of_recovery;261,9207
typedef struct XLogRecData267,9349
	struct XLogRecData *next;next269,9378
	char	   *data;data270,9441
	uint32		len;271,9495
} XLogRecData;272,9548
	RECOVERY_TARGET_ACTION_PAUSE,279,9613
	RECOVERY_TARGET_ACTION_PROMOTE,280,9644
	RECOVERY_TARGET_ACTION_SHUTDOWN281,9677
}			RecoveryTargetAction;282,9710
typedef struct RmgrData300,10348
	const char *rm_name;rm_name302,10374
	void		(*rm_redo)rm_redo303,10396
	void		(*rm_desc)rm_desc304,10441
	const char *(*rm_identify)rm_identify305,10502
	void		(*rm_startup)rm_startup306,10544
	void		(*rm_cleanup)rm_cleanup307,10573
	void		(*rm_mask)rm_mask308,10602
} RmgrData;309,10657

/home/seinoyu/pgsql/master/postgresql/src/include/access/stratnum.h,1614
#define STRATNUM_H15,425
typedef uint16 StrategyNumber;22,652
#define InvalidStrategy 24,684
#define BTLessStrategyNumber	29,777
#define BTLessEqualStrategyNumber	30,810
#define BTEqualStrategyNumber	31,847
#define BTGreaterEqualStrategyNumber	32,881
#define BTGreaterStrategyNumber	33,920
#define BTMaxStrategyNumber	35,957
#define HTEqualStrategyNumber	41,1094
#define HTMaxStrategyNumber	43,1129
#define RTLeftStrategyNumber	51,1392
#define RTOverLeftStrategyNumber	52,1438
#define RTOverlapStrategyNumber	53,1487
#define RTOverRightStrategyNumber	54,1536
#define RTRightStrategyNumber	55,1586
#define RTSameStrategyNumber	56,1633
#define RTContainsStrategyNumber	57,1679
#define RTContainedByStrategyNumber	58,1728
#define RTOverBelowStrategyNumber	59,1780
#define RTBelowStrategyNumber	60,1831
#define RTAboveStrategyNumber	61,1880
#define RTOverAboveStrategyNumber	62,1929
#define RTOldContainsStrategyNumber	63,1981
#define RTOldContainedByStrategyNumber	64,2050
#define RTKNNSearchStrategyNumber	65,2121
#define RTContainsElemStrategyNumber	66,2184
#define RTAdjacentStrategyNumber	67,2254
#define RTEqualStrategyNumber	68,2305
#define RTNotEqualStrategyNumber	69,2352
#define RTLessStrategyNumber	70,2402
#define RTLessEqualStrategyNumber	71,2448
#define RTGreaterStrategyNumber	72,2499
#define RTGreaterEqualStrategyNumber	73,2548
#define RTSubStrategyNumber	74,2601
#define RTSubEqualStrategyNumber	75,2653
#define RTSuperStrategyNumber	76,2709
#define RTSuperEqualStrategyNumber	77,2762
#define RTPrefixStrategyNumber	78,2820
#define RTMaxStrategyNumber	80,2875

/home/seinoyu/pgsql/master/postgresql/src/include/access/relation.h,33
#define ACCESS_RELATION_H15,429

/home/seinoyu/pgsql/master/postgresql/src/include/access/relscan.h,3214
#define RELSCAN_H15,431
typedef struct TableScanDescData31,798
	Relation	rs_rd;34,856
	struct SnapshotData *rs_snapshot;rs_snapshot35,906
	int			rs_nkeys;36,963
	struct ScanKeyData *rs_key;rs_key37,1007
	uint32		rs_flags;43,1202
	void	   *rs_private;rs_private45,1222
	struct ParallelTableScanDescData *rs_parallel;rs_parallel46,1291
} TableScanDescData;48,1387
typedef struct TableScanDescData *TableScanDesc;TableScanDesc49,1408
typedef struct ParallelTableScanDescData60,1866
	Oid			phs_relid;62,1909
	bool		phs_syncscan;63,1958
	bool		phs_snapshot_any;64,2020
	Size		phs_snapshot_off;65,2087
} ParallelTableScanDescData;66,2136
typedef struct ParallelTableScanDescData *ParallelTableScanDesc;ParallelTableScanDesc67,2165
typedef struct ParallelBlockTableScanDescData72,2308
	ParallelTableScanDescData base;74,2356
	BlockNumber phs_nblocks;76,2390
	slock_t		phs_mutex;77,2460
	BlockNumber phs_startblock;78,2528
	pg_atomic_uint64 phs_nallocated;79,2585
}			ParallelBlockTableScanDescData;81,2684
typedef struct ParallelBlockTableScanDescData *ParallelBlockTableScanDesc;ParallelBlockTableScanDesc82,2720
typedef struct ParallelBlockTableScanWorkerData87,2877
	uint64		phsw_nallocated;89,2927
	uint32		phsw_chunk_remaining;90,2993
	uint32		phsw_chunk_size;91,3058
}			ParallelBlockTableScanWorkerData;93,3166
typedef struct ParallelBlockTableScanWorkerData *ParallelBlockTableScanWorker;ParallelBlockTableScanWorker94,3204
typedef struct IndexFetchTableData101,3461
	Relation	rel;103,3498
} IndexFetchTableData;104,3513
typedef struct IndexScanDescData111,3716
	Relation	heapRelation;114,3774
	Relation	indexRelation;115,3838
	struct SnapshotData *xs_snapshot;xs_snapshot116,3895
	int			numberOfKeys;117,3952
	int			numberOfOrderBys;118,4016
	struct ScanKeyData *keyData;keyData119,4076
	struct ScanKeyData *orderByData;orderByData120,4149
	bool		xs_want_itup;121,4222
	bool		xs_temp_snap;122,4278
	bool		kill_prior_tuple;125,4395
	bool		ignore_killed_tuples;126,4454
	bool		xactStartedInRecovery;127,4518
	void	   *opaque;opaque131,4649
	IndexTuple	xs_itup;139,4960
	struct TupleDescData *xs_itupdesc;xs_itupdesc140,5015
	HeapTuple	xs_hitup;141,5087
	struct TupleDescData *xs_hitupdesc;xs_hitupdesc142,5155
	ItemPointerData xs_heaptid;144,5230
	bool		xs_heap_continue;145,5272
	IndexFetchTableData *xs_heapfetch;xs_heapfetch147,5365
	bool		xs_recheck;149,5402
	Datum	   *xs_orderbyvals;xs_orderbyvals158,5778
	bool	   *xs_orderbynulls;xs_orderbynulls159,5805
	bool		xs_recheckorderby;160,5832
	struct ParallelIndexScanDescData *parallel_scan;parallel_scan163,5916
}			IndexScanDescData;164,5966
typedef struct ParallelIndexScanDescData167,6033
	Oid			ps_relid;169,6076
	Oid			ps_indexid;170,6093
	Size		ps_offset;171,6112
	char		ps_snapshot_data[ps_snapshot_data172,6178
}			ParallelIndexScanDescData;173,6226
typedef struct SysScanDescData178,6339
	Relation	heap_rel;180,6372
	Relation	irel;181,6421
	struct TableScanDescData *scan;scan182,6469
	struct IndexScanDescData *iscan;iscan183,6540
	struct SnapshotData *snapshot;snapshot184,6610
	struct TupleTableSlot *slot;slot185,6686
}			SysScanDescData;186,6716

/home/seinoyu/pgsql/master/postgresql/src/include/access/gist.h,2401
#define GIST_H17,539
#define GIST_CONSISTENT_PROC	30,790
#define GIST_UNION_PROC	31,823
#define GIST_COMPRESS_PROC	32,853
#define GIST_DECOMPRESS_PROC	33,885
#define GIST_PENALTY_PROC	34,918
#define GIST_PICKSPLIT_PROC	35,949
#define GIST_EQUAL_PROC	36,982
#define GIST_DISTANCE_PROC	37,1012
#define GIST_FETCH_PROC	38,1044
#define GIST_OPTIONS_PROC	39,1074
#define GISTNProcs	40,1106
#define F_LEAF	45,1183
#define F_DELETED	46,1226
#define F_TUPLES_DELETED	47,1287
#define F_FOLLOW_RIGHT	49,1377
#define F_HAS_GARBAGE	50,1450
typedef XLogRecPtr GistNSN;53,1556
#define GistBuildLSN	60,1782
typedef PageXLogRecPtr PageGistNSN;66,1940
typedef struct GISTPageOpaqueData68,1977
	PageGistNSN nsn;70,2013
	BlockNumber rightlink;71,2076
	uint16		flags;72,2124
	uint16		gist_page_id;73,2174
} GISTPageOpaqueData;74,2238
typedef GISTPageOpaqueData *GISTPageOpaque;GISTPageOpaque76,2261
#define GISTMaxIndexTupleSize	89,2884
#define GISTMaxIndexKeySize	93,3027
#define GIST_PAGE_ID	102,3401
typedef struct GIST_SPLITVEC131,5047
	OffsetNumber *spl_left;spl_left133,5078
	int			spl_nleft;134,5140
	Datum		spl_ldatum;135,5184
	bool		spl_ldatum_exists;136,5237
	OffsetNumber *spl_right;spl_right138,5306
	int			spl_nright;139,5369
	Datum		spl_rdatum;140,5413
	bool		spl_rdatum_exists;141,5467
} GIST_SPLITVEC;142,5535
typedef struct GISTENTRY149,5759
	Datum		key;151,5786
	Relation	rel;152,5799
	Page		page;153,5814
	OffsetNumber offset;154,5827
	bool		leafkey;155,5849
} GISTENTRY;156,5865
#define GistPageGetOpaque(158,5879
#define GistPageIsLeaf(160,5961
#define GIST_LEAF(161,6033
#define GistPageIsDeleted(163,6091
#define GistTuplesDeleted(165,6170
#define GistMarkTuplesDeleted(166,6255
#define GistClearTuplesDeleted(167,6345
#define GistPageHasGarbage(169,6438
#define GistMarkPageHasGarbage(170,6521
#define GistClearPageHasGarbage(171,6609
#define GistFollowRight(173,6700
#define GistMarkFollowRight(174,6781
#define GistClearFollowRight(175,6867
#define GistPageGetNSN(177,6956
#define GistPageSetNSN(178,7036
typedef struct GISTDeletedPageContents188,7508
	FullTransactionId deleteXid;191,7600
} GISTDeletedPageContents;192,7630
GistPageSetDeleted(195,7677
GistPageGetDeleteXid(206,8025
	int32		n;226,8574
	GISTENTRY	vector[vector227,8613
} GistEntryVector;228,8655
#define GEVHDRSZ	230,8675
#define gistentryinit(235,8771

/home/seinoyu/pgsql/master/postgresql/src/include/access/sdir.h,334
#define SDIR_H15,412
typedef enum ScanDirection22,584
	BackwardScanDirection 24,613
	NoMovementScanDirection 25,642
	ForwardScanDirection 26,672
} ScanDirection;27,698
#define ScanDirectionIsValid(33,785
#define ScanDirectionIsBackward(41,997
#define ScanDirectionIsNoMovement(48,1179
#define ScanDirectionIsForward(55,1351

/home/seinoyu/pgsql/master/postgresql/src/include/access/spgxlog.h,2823
#define SPGXLOG_H14,426
#define XLOG_SPGIST_ADD_LEAF	22,639
#define XLOG_SPGIST_MOVE_LEAFS	23,674
#define XLOG_SPGIST_ADD_NODE	24,711
#define XLOG_SPGIST_SPLIT_TUPLE	25,746
#define XLOG_SPGIST_PICKSPLIT	26,784
#define XLOG_SPGIST_VACUUM_LEAF	27,820
#define XLOG_SPGIST_VACUUM_ROOT	28,858
#define XLOG_SPGIST_VACUUM_REDIRECT 29,896
typedef struct spgxlogState36,1156
	TransactionId myXid;38,1186
	bool		isBuild;39,1208
} spgxlogState;40,1224
typedef struct spgxlogAddLeaf46,1335
	bool		newPage;48,1367
	bool		storesNulls;49,1406
	OffsetNumber offnumLeaf;50,1459
	OffsetNumber offnumHeadLeaf;51,1527
	OffsetNumber offnumParent;53,1602
	uint16		nodeI;54,1673
} spgxlogAddLeaf;57,1733
typedef struct spgxlogMoveLeafs64,1861
	uint16		nMoves;66,1895
	bool		newPage;67,1960
	bool		replaceDead;68,1999
	bool		storesNulls;69,2063
	OffsetNumber offnumParent;72,2155
	uint16		nodeI;73,2183
	spgxlogState stateSrc;75,2200
	OffsetNumber offsets[offsets88,2635
} spgxlogMoveLeafs;89,2681
#define SizeOfSpgxlogMoveLeafs	91,2702
typedef struct spgxlogAddNode99,2961
	OffsetNumber offnum;105,3088
	OffsetNumber offnumNew;111,3252
	bool		newPage;112,3277
	int8		parentBlk;125,3638
	OffsetNumber offnumParent;126,3656
	uint16		nodeI;128,3721
	spgxlogState stateSrc;130,3738
} spgxlogAddNode;135,3817
typedef struct spgxlogSplitTuple141,3954
	OffsetNumber offnumPrefix;144,4024
	OffsetNumber offnumPostfix;147,4089
	bool		newPage;148,4118
	bool		postfixBlkSame;149,4165
} spgxlogSplitTuple;156,4352
typedef struct spgxlogPickSplit165,4600
	bool		isRootSplit;167,4634
	uint16		nDelete;169,4655
	uint16		nInsert;170,4701
	bool		initSrc;171,4757
	bool		initDest;172,4802
	OffsetNumber offnumInner;175,4886
	bool		initInner;176,4913
	bool		storesNulls;178,4963
	bool		innerIsParent;181,5063
	OffsetNumber offnumParent;182,5125
	uint16		nodeI;183,5153
	spgxlogState stateSrc;185,5170
	OffsetNumber offsets[offsets196,5509
} spgxlogPickSplit;197,5555
#define SizeOfSpgxlogPickSplit 199,5576
typedef struct spgxlogVacuumLeaf201,5644
	uint16		nDead;203,5679
	uint16		nPlaceholder;204,5735
	uint16		nMove;205,5803
	uint16		nChain;206,5852
	spgxlogState stateSrc;208,5907
	OffsetNumber offsets[offsets220,6275
} spgxlogVacuumLeaf;221,6321
#define SizeOfSpgxlogVacuumLeaf 223,6343
typedef struct spgxlogVacuumRoot225,6413
	uint16		nDelete;228,6497
	spgxlogState stateSrc;230,6550
	OffsetNumber offsets[offsets233,6617
} spgxlogVacuumRoot;234,6663
#define SizeOfSpgxlogVacuumRoot 236,6685
typedef struct spgxlogVacuumRedirect238,6755
	uint16		nToPlaceholder;240,6794
	OffsetNumber firstPlaceholder;241,6866
	TransactionId newestRedirectXid;242,6938
	OffsetNumber offsets[offsets245,7073
} spgxlogVacuumRedirect;246,7119
#define SizeOfSpgxlogVacuumRedirect 248,7145

/home/seinoyu/pgsql/master/postgresql/src/include/access/detoast.h,191
#define DETOAST_H13,350
#define VARATT_EXTERNAL_IS_COMPRESSED(22,734
#define VARATT_EXTERNAL_GET_POINTER(32,1215
#define TOAST_POINTER_SIZE 41,1615
#define INDIRECT_POINTER_SIZE 44,1758

/home/seinoyu/pgsql/master/postgresql/src/include/access/timeline.h,131
#define TIMELINE_H12,288
	TimeLineID	tli;27,789
	XLogRecPtr	begin;28,806
	XLogRecPtr	end;29,843
} TimeLineHistoryEntry;30,912

/home/seinoyu/pgsql/master/postgresql/src/include/access/heapam_xlog.h,5660
#define HEAPAM_XLOG_H15,435
#define XLOG_HEAP_INSERT	32,856
#define XLOG_HEAP_DELETE	33,887
#define XLOG_HEAP_UPDATE	34,918
#define XLOG_HEAP_TRUNCATE	35,949
#define XLOG_HEAP_HOT_UPDATE	36,982
#define XLOG_HEAP_CONFIRM	37,1016
#define XLOG_HEAP_LOCK	38,1048
#define XLOG_HEAP_INPLACE	39,1078
#define XLOG_HEAP_OPMASK	41,1111
#define XLOG_HEAP_INIT_PAGE	46,1286
#define XLOG_HEAP2_REWRITE	53,1568
#define XLOG_HEAP2_CLEAN	54,1601
#define XLOG_HEAP2_FREEZE_PAGE	55,1632
#define XLOG_HEAP2_CLEANUP_INFO 56,1668
#define XLOG_HEAP2_VISIBLE	57,1705
#define XLOG_HEAP2_MULTI_INSERT 58,1738
#define XLOG_HEAP2_LOCK_UPDATED 59,1775
#define XLOG_HEAP2_NEW_CID	60,1812
#define XLH_INSERT_ALL_VISIBLE_CLEARED	66,1960
#define XLH_INSERT_LAST_IN_MULTI	67,2008
#define XLH_INSERT_IS_SPECULATIVE	68,2051
#define XLH_INSERT_CONTAINS_NEW_TUPLE	69,2095
#define XLH_UPDATE_OLD_ALL_VISIBLE_CLEARED	75,2236
#define XLH_UPDATE_NEW_ALL_VISIBLE_CLEARED	77,2336
#define XLH_UPDATE_CONTAINS_OLD_TUPLE	78,2387
#define XLH_UPDATE_CONTAINS_OLD_KEY	79,2434
#define XLH_UPDATE_CONTAINS_NEW_TUPLE	80,2480
#define XLH_UPDATE_PREFIX_FROM_OLD	81,2527
#define XLH_UPDATE_SUFFIX_FROM_OLD	82,2572
#define XLH_UPDATE_CONTAINS_OLD	85,2696
#define XLH_DELETE_ALL_VISIBLE_CLEARED	92,2892
#define XLH_DELETE_CONTAINS_OLD_TUPLE	93,2940
#define XLH_DELETE_CONTAINS_OLD_KEY	94,2987
#define XLH_DELETE_IS_SUPER	95,3033
#define XLH_DELETE_IS_PARTITION_MOVE	96,3073
#define XLH_DELETE_CONTAINS_OLD	99,3198
typedef struct xl_heap_delete103,3349
	TransactionId xmax;105,3381
	OffsetNumber offnum;106,3436
	uint8		infobits_set;107,3488
	uint8		flags;108,3530
} xl_heap_delete;109,3545
#define SizeOfHeapDelete	111,3564
#define XLH_TRUNCATE_CASCADE	116,3702
#define XLH_TRUNCATE_RESTART_SEQS	117,3742
typedef struct xl_heap_truncate124,3998
	Oid			dbId;126,4032
	uint32		nrelids;127,4045
	uint8		flags;128,4063
	Oid			relids[relids129,4078
} xl_heap_truncate;130,4116
#define SizeOfHeapTruncate	132,4137
typedef struct xl_heap_header142,4636
	uint16		t_infomask2;144,4668
	uint16		t_infomask;145,4690
	uint8		t_hoff;146,4711
} xl_heap_header;147,4727
#define SizeOfHeapHeader	149,4746
typedef struct xl_heap_insert152,4871
	OffsetNumber offnum;154,4903
	uint8		flags;155,4956
} xl_heap_insert;158,5025
#define SizeOfHeapInsert	160,5044
typedef struct xl_heap_multi_insert173,5537
	uint8		flags;175,5575
	uint16		ntuples;176,5590
	OffsetNumber offsets[offsets177,5608
} xl_heap_multi_insert;178,5654
#define SizeOfHeapMultiInsert	180,5679
typedef struct xl_multi_insert_tuple182,5750
	uint16		datalen;184,5789
	uint16		t_infomask2;185,5846
	uint16		t_infomask;186,5868
	uint8		t_hoff;187,5889
} xl_multi_insert_tuple;189,5948
#define SizeOfMultiInsertTuple	191,5974
typedef struct xl_heap_update210,6676
	TransactionId old_xmax;212,6708
	OffsetNumber old_offnum;213,6762
	uint8		old_infobits_set;214,6813
	uint8		flags;215,6879
	TransactionId new_xmax;216,6894
	OffsetNumber new_offnum;217,6948
} xl_heap_update;223,7152
#define SizeOfHeapUpdate	225,7171
typedef struct xl_heap_clean238,7772
	TransactionId latestRemovedXid;240,7803
	uint16		nredirected;241,7836
	uint16		ndead;242,7858
} xl_heap_clean;244,7925
#define SizeOfHeapClean 246,7943
typedef struct xl_heap_cleanup_info253,8208
	RelFileNode node;255,8246
	TransactionId latestRemovedXid;256,8265
} xl_heap_cleanup_info;257,8298
#define SizeOfHeapCleanupInfo 259,8323
#define XLHL_XMAX_IS_MULTI	262,8414
#define XLHL_XMAX_LOCK_ONLY	263,8447
#define XLHL_XMAX_EXCL_LOCK	264,8481
#define XLHL_XMAX_KEYSHR_LOCK	265,8515
#define XLHL_KEYS_UPDATED	266,8550
#define XLH_LOCK_ALL_FROZEN_CLEARED	269,8652
typedef struct xl_heap_lock272,8741
	TransactionId locking_xid;274,8771
	OffsetNumber offnum;275,8836
	int8		infobits_set;276,8895
	uint8		flags;277,8957
} xl_heap_lock;278,9001
#define SizeOfHeapLock	280,9018
typedef struct xl_heap_lock_updated283,9166
	TransactionId xmax;285,9204
	OffsetNumber offnum;286,9225
	uint8		infobits_set;287,9247
	uint8		flags;288,9269
} xl_heap_lock_updated;289,9284
#define SizeOfHeapLockUpdated	291,9309
typedef struct xl_heap_confirm294,9475
	OffsetNumber offnum;296,9508
} xl_heap_confirm;297,9570
#define SizeOfHeapConfirm	299,9590
typedef struct xl_heap_inplace302,9733
	OffsetNumber offnum;304,9766
} xl_heap_inplace;306,9869
#define SizeOfHeapInplace	308,9889
#define		XLH_FREEZE_XVAC	315,10138
#define		XLH_INVALID_XVAC	316,10169
typedef struct xl_heap_freeze_tuple318,10201
	TransactionId xmax;320,10239
	OffsetNumber offset;321,10260
	uint16		t_infomask2;322,10282
	uint16		t_infomask;323,10304
	uint8		frzflags;324,10325
} xl_heap_freeze_tuple;325,10343
typedef struct xl_heap_freeze_page333,10550
	TransactionId cutoff_xid;335,10587
	uint16		ntuples;336,10614
} xl_heap_freeze_page;337,10632
#define SizeOfHeapFreezePage 339,10656
typedef struct xl_heap_visible347,10889
	TransactionId cutoff_xid;349,10922
	uint8		flags;350,10949
} xl_heap_visible;351,10964
#define SizeOfHeapVisible 353,10984
typedef struct xl_heap_new_cid355,11062
	TransactionId top_xid;361,11190
	CommandId	cmin;362,11214
	CommandId	cmax;363,11231
	CommandId	combocid;364,11248
	RelFileNode target_node;369,11364
	ItemPointerData target_tid;370,11390
} xl_heap_new_cid;371,11419
#define SizeOfHeapNewCid 373,11439
typedef struct xl_heap_rewrite_mapping376,11572
	TransactionId mapped_xid;378,11613
	Oid			mapped_db;379,11681
	Oid			mapped_rel;380,11742
	off_t		offset;381,11795
	uint32		num_mappings;382,11850
	XLogRecPtr	start_lsn;383,11908
} xl_heap_rewrite_mapping;384,11969

/home/seinoyu/pgsql/master/postgresql/src/include/access/gistscan.h,26
#define GISTSCAN_H15,430

/home/seinoyu/pgsql/master/postgresql/src/include/access/rmgrlist.h,17
PG_RMGR(28,1073

/home/seinoyu/pgsql/master/postgresql/src/include/access/commit_ts.h,503
#define COMMIT_TS_H12,269
#define COMMIT_TS_ZEROPAGE	49,1605
#define COMMIT_TS_TRUNCATE	50,1638
#define COMMIT_TS_SETTS	51,1671
typedef struct xl_commit_ts_set53,1703
	TimestampTz timestamp;55,1737
	RepOriginId nodeid;56,1761
	TransactionId mainxid;57,1782
} xl_commit_ts_set;59,1833
#define SizeOfCommitTsSet	61,1854
typedef struct xl_commit_ts_truncate64,1953
	int			pageno;66,1992
	TransactionId oldestXid;67,2007
} xl_commit_ts_truncate;68,2033
#define SizeOfCommitTsTruncate	70,2059

/home/seinoyu/pgsql/master/postgresql/src/include/access/gistxlog.h,1166
#define GIST_XLOG_H14,404
#define XLOG_GIST_PAGE_UPDATE	20,510
#define XLOG_GIST_DELETE	21,546
#define XLOG_GIST_PAGE_REUSE	23,634
#define XLOG_GIST_PAGE_SPLIT	25,729
#define XLOG_GIST_PAGE_DELETE	28,902
#define XLOG_GIST_ASSIGN_LSN	29,938
typedef struct gistxlogPageUpdate36,1175
	uint16		ntodelete;39,1244
	uint16		ntoinsert;40,1264
} gistxlogPageUpdate;45,1366
typedef struct gistxlogDelete50,1456
	TransactionId latestRemovedXid;52,1488
	uint16		ntodelete;53,1521
} gistxlogDelete;58,1633
#define SizeOfGistxlogDelete	60,1652
typedef struct gistxlogPageSplit67,1943
	BlockNumber origrlink;69,1978
	GistNSN		orignsn;70,2044
	bool		origleaf;71,2099
	uint16		npage;73,2155
	bool		markfollowright;74,2203
} gistxlogPageSplit;79,2333
typedef struct gistxlogPageDelete85,2477
	FullTransactionId deleteXid;87,2513
	OffsetNumber downlinkOffset;88,2587
} gistxlogPageDelete;90,2676
#define SizeOfGistxlogPageDelete	92,2699
typedef struct gistxlogPageReuse98,2878
	RelFileNode node;100,2913
	BlockNumber block;101,2932
	FullTransactionId latestRemovedFullXid;102,2952
} gistxlogPageReuse;103,2993
#define SizeOfGistxlogPageReuse	105,3015

/home/seinoyu/pgsql/master/postgresql/src/include/access/brin_internal.h,885
#define BRIN_INTERNAL_H12,301
typedef struct BrinOpcInfo25,593
	uint16		oi_nstored;28,689
	void	   *oi_opaque;oi_opaque31,762
	TypeCacheEntry *oi_typcache[oi_typcache34,832
} BrinOpcInfo;35,885
#define SizeofBrinOpcInfo(38,965
typedef struct BrinDesc41,1074
	MemoryContext bd_context;44,1133
	Relation	bd_index;47,1194
	TupleDesc	bd_tupdesc;50,1261
	TupleDesc	bd_disktdesc;53,1347
	int			bd_totalstored;56,1450
	BrinOpcInfo *bd_info[bd_info59,1529
} BrinDesc;60,1575
#define BRIN_PROCNUM_OPCINFO	67,1806
#define BRIN_PROCNUM_ADDVALUE	68,1838
#define BRIN_PROCNUM_CONSISTENT	69,1871
#define BRIN_PROCNUM_UNION	70,1906
#define BRIN_MANDATORY_NPROCS	71,1937
#define BRIN_PROCNUM_OPTIONS 72,1970
#define BRIN_FIRST_OPTIONAL_PROCNUM 74,2090
#define BRIN_LAST_OPTIONAL_PROCNUM	75,2129
#undef BRIN_DEBUG77,2168
#define BRIN_elog(80,2205
#define BRIN_elog(82,2247

/home/seinoyu/pgsql/master/postgresql/src/include/access/attmap.h,135
#define ATTMAP_H15,427
typedef struct AttrMap34,1123
	AttrNumber *attnums;attnums36,1148
	int			maplen;37,1170
} AttrMap;38,1185

/home/seinoyu/pgsql/master/postgresql/src/include/access/spgist.h,3518
#define SPGIST_H15,427
#define SPGIST_CONFIG_PROC	23,578
#define SPGIST_CHOOSE_PROC	24,610
#define SPGIST_PICKSPLIT_PROC	25,642
#define SPGIST_INNER_CONSISTENT_PROC	26,676
#define SPGIST_LEAF_CONSISTENT_PROC	27,715
#define SPGIST_COMPRESS_PROC	28,754
#define SPGIST_OPTIONS_PROC	29,787
#define SPGISTNRequiredProc	30,820
#define SPGISTNProc	31,853
typedef struct spgConfigIn36,930
	Oid			attType;38,959
} spgConfigIn;39,1006
typedef struct spgConfigOut41,1022
	Oid			prefixType;43,1052
	Oid			labelType;44,1112
	Oid			leafType;45,1174
	bool		canReturnData;46,1229
	bool		longValuesOK;47,1295
} spgConfigOut;48,1360
typedef struct spgChooseIn53,1426
	Datum		datum;55,1455
	Datum		leafDatum;56,1507
	int			level;57,1568
	bool		allTheSame;60,1663
	bool		hasPrefix;61,1719
	Datum		prefixDatum;62,1764
	int			nNodes;63,1815
	Datum	   *nodeLabels;nodeLabels64,1873
} spgChooseIn;65,1936
typedef enum spgChooseResultType67,1952
	spgMatchNode 69,1987
	spgAddNode,70,2041
	spgSplitTuple	71,2094
} spgChooseResultType;72,2156
typedef struct spgChooseOut74,2180
	spgChooseResultType resultType;76,2210
			int			nodeN;81,2330
			int			levelAdd;82,2388
			Datum		restDatum;83,2442
		}			matchNode;84,2484
			Datum		nodeLabel;87,2547
			int			nodeN;88,2591
		}			addNode;89,2647
			bool		prefixHasPrefix;93,2782
			Datum		prefixPrefixDatum;94,2842
			int			prefixNNodes;95,2894
			Datum	   *prefixNodeLabels;prefixNodeLabels96,2939
			int			childNodeN;98,3027
			bool		postfixHasPrefix;101,3152
			Datum		postfixPrefixDatum;102,3213
		}			splitTuple;103,3266
	}			result;104,3284
} spgChooseOut;105,3297
typedef struct spgPickSplitIn110,3366
	int			nTuples;112,3398
	Datum	   *datums;datums113,3443
	int			level;114,3509
} spgPickSplitIn;115,3566
typedef struct spgPickSplitOut117,3585
	bool		hasPrefix;119,3618
	Datum		prefixDatum;120,3681
	int			nNodes;122,3726
	Datum	   *nodeLabels;nodeLabels123,3785
	int		   *mapTuplesToNodes;mapTuplesToNodes125,3853
	Datum	   *leafTupleDatums;leafTupleDatums126,3918
} spgPickSplitOut;127,3990
typedef struct spgInnerConsistentIn132,4069
	ScanKey		scankeys;134,4107
	ScanKey		orderbys;135,4175
	int			nkeys;137,4263
	int			norderbys;138,4310
	Datum		reconstructedValue;140,4361
	void	   *traversalValue;traversalValue141,4425
	MemoryContext traversalMemoryContext;142,4489
	int			level;143,4563
	bool		returnData;144,4620
	bool		allTheSame;147,4716
	bool		hasPrefix;148,4772
	Datum		prefixDatum;149,4817
	int			nNodes;150,4868
	Datum	   *nodeLabels;nodeLabels151,4926
} spgInnerConsistentIn;152,4989
typedef struct spgInnerConsistentOut154,5014
	int			nNodes;156,5053
	int		   *nodeNumbers;nodeNumbers157,5112
	int		   *levelAdds;levelAdds158,5173
	Datum	   *reconstructedValues;reconstructedValues159,5239
	void	  **traversalValues;traversalValues160,5309
	double	  **distances;distances161,5375
} spgInnerConsistentOut;162,5426
typedef struct spgLeafConsistentIn167,5510
	ScanKey		scankeys;169,5547
	ScanKey		orderbys;170,5615
	int			nkeys;172,5703
	int			norderbys;173,5750
	Datum		reconstructedValue;175,5801
	void	   *traversalValue;traversalValue176,5865
	int			level;177,5929
	bool		returnData;178,5986
	Datum		leafDatum;180,6045
} spgLeafConsistentIn;181,6091
typedef struct spgLeafConsistentOut183,6115
	Datum		leafValue;185,6153
	bool		recheck;186,6215
	bool		recheckDistances;187,6277
	double	   *distances;distances188,6348
} spgLeafConsistentOut;189,6399

/home/seinoyu/pgsql/master/postgresql/src/include/access/spgist_private.h,6045
#define SPGIST_PRIVATE_H15,453
typedef struct SpGistOptions26,673
	int32		varlena_header_;28,704
	int			fillfactor;29,775
} SpGistOptions;30,838
#define SpGistGetFillFactor(32,856
#define SpGistGetTargetPageFreeSpace(38,1127
#define SPGIST_METAPAGE_BLKNO	43,1277
#define SPGIST_ROOT_BLKNO	44,1327
#define SPGIST_NULL_BLKNO	45,1389
#define SPGIST_LAST_FIXED_BLKNO 46,1455
#define SpGistBlockIsRoot(48,1507
#define SpGistBlockIsFixed(50,1606
typedef struct SpGistPageOpaqueData56,1772
	uint16		flags;58,1810
	uint16		nRedirection;59,1860
	uint16		nPlaceholder;60,1926
	uint16		spgist_page_id;62,2055
} SpGistPageOpaqueData;63,2124
typedef SpGistPageOpaqueData *SpGistPageOpaque;SpGistPageOpaque65,2149
#define SPGIST_META	68,2236
#define SPGIST_DELETED	69,2265
#define SPGIST_LEAF	71,2362
#define SPGIST_NULLS	72,2391
#define SpGistPageGetOpaque(74,2421
#define SpGistPageIsMeta(75,2504
#define SpGistPageIsDeleted(76,2584
#define SpGistPageIsLeaf(77,2670
#define SpGistPageStoresNulls(78,2750
#define SPGIST_PAGE_ID	88,3164
typedef struct SpGistLastUsedPage95,3392
	BlockNumber blkno;97,3428
	int			freeSpace;98,3492
} SpGistLastUsedPage;99,3556
#define SPGIST_CACHED_PAGES 102,3658
typedef struct SpGistLUPCache104,3689
	SpGistLastUsedPage cachedPage[cachedPage106,3721
} SpGistLUPCache;107,3774
typedef struct SpGistMetaPageData112,3812
	uint32		magicNumber;114,3848
	SpGistLUPCache lastUsedPages;115,3901
} SpGistMetaPageData;116,3971
#define SPGIST_MAGIC_NUMBER 118,3994
#define SpGistPageGetMeta(120,4036
typedef struct SpGistTypeDesc129,4294
	Oid			type;131,4326
	bool		attbyval;132,4339
	int16		attlen;133,4356
} SpGistTypeDesc;134,4372
typedef struct SpGistState136,4391
	spgConfigOut config;138,4420
	SpGistTypeDesc attType;140,4485
	SpGistTypeDesc attLeafType;141,4555
	SpGistTypeDesc attPrefixType;142,4616
	SpGistTypeDesc attLabelType;143,4687
	char	   *deadTupleStorage;deadTupleStorage145,4750
	TransactionId myXid;147,4816
	bool		isBuild;148,4887
} SpGistState;149,4936
typedef struct SpGistSearchItem151,4952
	pairingheap_node phNode;153,4986
	Datum		value;154,5036
	void	   *traversalValue;traversalValue156,5128
	int			level;157,5192
	ItemPointerData heapPtr;158,5242
	bool		isNull;159,5299
	bool		isLeaf;160,5346
	bool		recheck;161,5393
	bool		recheckDistances;162,5439
	double		distances[distances165,5541
} SpGistSearchItem;166,5584
#define SizeOfSpGistSearchItem(168,5605
typedef struct SpGistScanOpaqueData174,5767
	SpGistState state;176,5805
	pairingheap *scanQueue;scanQueue177,5843
	MemoryContext tempCxt;178,5904
	MemoryContext traversalCxt;179,5962
	bool		searchNulls;182,6104
	bool		searchNonNulls;183,6162
	int			numberOfKeys;186,6301
	ScanKey		keyData;187,6365
	int			numberOfOrderBys;188,6428
	int			numberOfNonNullOrderBys;189,6488
	ScanKey		orderByData;191,6593
	Oid		   *orderByTypes;orderByTypes192,6655
	int		   *nonNullOrderByOffsets;nonNullOrderByOffsets193,6719
	Oid			indexCollation;195,6835
	FmgrInfo	innerConsistentFn;198,6925
	FmgrInfo	leafConsistentFn;199,6954
	double	   *zeroDistances;zeroDistances202,7022
	double	   *infDistances;infDistances203,7049
	TIDBitmap  *tbm;tbm206,7132
	int64		ntids;207,7178
	bool		want_itup;210,7289
	TupleDesc	indexTupDesc;211,7344
	int			nPtrs;212,7408
	int			iPtr;213,7467
	ItemPointerData heapPtrs[heapPtrs214,7520
	bool		recheck[recheck215,7595
	bool		recheckDistances[recheckDistances216,7660
	HeapTuple	reconTups[reconTups218,7755
	IndexOrderByDistance *distances[distances221,7859
} SpGistScanOpaqueData;228,8087
typedef SpGistScanOpaqueData *SpGistScanOpaque;SpGistScanOpaque230,8112
typedef struct SpGistCache236,8315
	spgConfigOut config;238,8344
	SpGistTypeDesc attType;240,8409
	SpGistTypeDesc attLeafType;241,8479
	SpGistTypeDesc attPrefixType;242,8540
	SpGistTypeDesc attLabelType;243,8611
	SpGistLUPCache lastUsedPages;245,8674
} SpGistCache;246,8743
#define SPGIST_LIVE	257,9092
#define SPGIST_REDIRECT	258,9163
#define SPGIST_DEAD	259,9230
#define SPGIST_PLACEHOLDER	260,9301
typedef struct SpGistInnerTupleData270,9603
	unsigned int tupstate:tupstate272,9641
				allTheSame:allTheSame273,9704
				nNodes:nNodes274,9762
				prefixSize:prefixSize275,9819
	uint16		size;276,9873
} SpGistInnerTupleData;279,10030
typedef SpGistInnerTupleData *SpGistInnerTuple;SpGistInnerTuple281,10055
#define SGITMAXNNODES	284,10180
#define SGITMAXPREFIXSIZE	285,10210
#define SGITMAXSIZE	286,10243
#define SGITHDRSZ	288,10273
#define _SGITDATA(289,10332
#define SGITDATAPTR(290,10383
#define SGITDATUM(291,10447
#define SGITNODEPTR(296,10634
#define SGITITERATE(299,10774
typedef IndexTupleData SpGistNodeTupleData;314,11329
typedef SpGistNodeTupleData *SpGistNodeTuple;SpGistNodeTuple316,11374
#define SGNTHDRSZ	318,11421
#define SGNTDATAPTR(319,11479
#define SGNTDATUM(320,11532
typedef struct SpGistLeafTupleData350,12949
	unsigned int tupstate:tupstate352,12986
				size:size353,13049
	OffsetNumber nextOffset;354,13108
	ItemPointerData heapPtr;355,13184
} SpGistLeafTupleData;357,13272
typedef SpGistLeafTupleData *SpGistLeafTuple;SpGistLeafTuple359,13296
#define SGLTHDRSZ	361,13343
#define SGLTDATAPTR(362,13401
#define SGLTDATUM(363,13454
typedef struct SpGistDeadTupleData378,14109
	unsigned int tupstate:tupstate380,14146
				size:size381,14209
	OffsetNumber nextOffset;382,14222
	ItemPointerData pointer;383,14278
	TransactionId xid;384,14335
} SpGistDeadTupleData;385,14399
typedef SpGistDeadTupleData *SpGistDeadTuple;SpGistDeadTuple387,14423
#define SGDTSIZE	389,14470
#define SPGIST_PAGE_CAPACITY 399,14885
#define SpGistPageGetFreeSpace(408,15174
#define STORE_STATE(417,15353
#define GBUF_LEAF	434,15971
#define GBUF_INNER_PARITY(435,15997
#define GBUF_NULLS	436,16036
#define GBUF_PARITY_MASK	438,16064
#define GBUF_REQ_LEAF(439,16095
#define GBUF_REQ_NULLS(440,16168
#define SPGIST_MIN_FILLFACTOR	445,16267
#define SPGIST_DEFAULT_FILLFACTOR	446,16302

/home/seinoyu/pgsql/master/postgresql/src/include/access/session.h,358
#define SESSION_H13,331
typedef struct Session25,662
	dsm_segment *segment;segment27,687
	dsa_area   *area;area28,749
	struct SharedRecordTypmodRegistry *shared_typmod_registry;shared_typmod_registry31,842
	dshash_table *shared_record_table;shared_record_table32,902
	dshash_table *shared_typmod_table;shared_typmod_table33,938
} Session;34,974

/home/seinoyu/pgsql/master/postgresql/src/include/access/nbtxlog.h,2911
#define NBTXLOG_H14,426
#define XLOG_BTREE_INSERT_LEAF	26,664
#define XLOG_BTREE_INSERT_UPPER 27,736
#define XLOG_BTREE_INSERT_META	28,804
#define XLOG_BTREE_SPLIT_L	29,873
#define XLOG_BTREE_SPLIT_R	30,939
#define XLOG_BTREE_INSERT_POST	31,1006
#define XLOG_BTREE_DEDUP	32,1083
#define XLOG_BTREE_DELETE	33,1150
#define XLOG_BTREE_UNLINK_PAGE	34,1224
#define XLOG_BTREE_UNLINK_PAGE_META 35,1290
#define XLOG_BTREE_NEWROOT	36,1363
#define XLOG_BTREE_MARK_PAGE_HALFDEAD 37,1416
#define XLOG_BTREE_VACUUM	38,1490
#define XLOG_BTREE_REUSE_PAGE	40,1580
#define XLOG_BTREE_META_CLEANUP	42,1674
typedef struct xl_btree_metadata48,1835
	uint32		version;50,1870
	BlockNumber root;51,1888
	uint32		level;52,1907
	BlockNumber fastroot;53,1923
	uint32		fastlevel;54,1946
	TransactionId oldest_btpo_xact;55,1966
	float8		last_cleanup_num_heap_tuples;56,1999
	bool		allequalimage;57,2038
} xl_btree_metadata;58,2060
typedef struct xl_btree_insert79,2999
	OffsetNumber offnum;81,3032
} xl_btree_insert;85,3153
#define SizeOfBtreeInsert	87,3173
typedef struct xl_btree_split153,7054
	uint32		level;155,7086
	OffsetNumber firstrightoff;156,7141
	OffsetNumber newitemoff;157,7209
	uint16		postingoff;158,7259
} xl_btree_split;159,7320
#define SizeOfBtreeSplit	161,7339
typedef struct xl_btree_dedup170,7671
	uint16		nintervals;172,7703
} xl_btree_dedup;175,7763
#define SizeOfBtreeDedup 177,7782
typedef struct xl_btree_delete187,8192
	TransactionId latestRemovedXid;189,8225
	uint32		ndeleted;190,8258
} xl_btree_delete;193,8322
#define SizeOfBtreeDelete	195,8342
typedef struct xl_btree_reuse_page204,8694
	RelFileNode node;206,8731
	BlockNumber block;207,8750
	TransactionId latestRemovedXid;208,8770
} xl_btree_reuse_page;209,8803
#define SizeOfBtreeReusePage	211,8827
typedef struct xl_btree_update218,9084
	uint16		ndeletedtids;220,9117
} xl_btree_update;223,9200
#define SizeOfBtreeUpdate	225,9220
typedef struct xl_btree_vacuum240,10040
	uint16		ndeleted;242,10073
	uint16		nupdated;243,10092
} xl_btree_vacuum;248,10245
#define SizeOfBtreeVacuum	250,10265
typedef struct xl_btree_mark_page_halfdead262,10788
	OffsetNumber poffset;264,10833
	BlockNumber leafblk;267,10949
	BlockNumber leftblk;268,11014
	BlockNumber rightblk;269,11077
	BlockNumber topparent;270,11134
} xl_btree_mark_page_halfdead;271,11202
#define SizeOfBtreeMarkPageHalfDead 273,11234
typedef struct xl_btree_unlink_page286,11826
	BlockNumber leftsib;288,11864
	BlockNumber rightsib;289,11929
	BlockNumber leafleftsib;295,12085
	BlockNumber leafrightsib;296,12111
	BlockNumber topparent;297,12138
	TransactionId btpo_xact;299,12201
} xl_btree_unlink_page;301,12336
#define SizeOfBtreeUnlinkPage	303,12361
typedef struct xl_btree_newroot316,12923
	BlockNumber rootblk;318,12957
	uint32		level;319,13030
} xl_btree_newroot;320,13069
#define SizeOfBtreeNewroot	322,13090

/home/seinoyu/pgsql/master/postgresql/src/include/access/ginblock.h,3805
#define GINBLOCK_H11,348
typedef struct GinPageOpaqueData29,1031
	BlockNumber rightlink;31,1066
	OffsetNumber maxoff;32,1114
	uint16		flags;35,1259
} GinPageOpaqueData;36,1309
typedef GinPageOpaqueData *GinPageOpaque;GinPageOpaque38,1331
#define GIN_DATA	40,1374
#define GIN_LEAF	41,1403
#define GIN_DELETED	42,1432
#define GIN_META	43,1464
#define GIN_LIST	44,1493
#define GIN_LIST_FULLROW 45,1522
#define GIN_INCOMPLETE_SPLIT 46,1597
#define GIN_COMPRESSED	48,1693
#define GIN_METAPAGE_BLKNO	51,1771
#define GIN_ROOT_BLKNO	52,1802
typedef struct GinMetaPageData54,1831
	BlockNumber head;61,2057
	BlockNumber tail;62,2076
	uint32		tailFreeSize;67,2162
	BlockNumber nPendingPages;73,2289
	int64		nPendingHeapTuples;74,2317
	BlockNumber nTotalPages;79,2415
	BlockNumber nEntryPages;80,2441
	BlockNumber nDataPages;81,2467
	int64		nEntries;82,2492
	int32		ginVersion;99,3121
} GinMetaPageData;100,3141
#define GIN_CURRENT_VERSION	102,3161
#define GinPageGetMeta(104,3193
#define GinPageGetOpaque(110,3326
#define GinPageIsLeaf(112,3406
#define GinPageSetLeaf(113,3489
#define GinPageSetNonLeaf(114,3566
#define GinPageIsData(115,3648
#define GinPageSetData(116,3731
#define GinPageIsList(117,3808
#define GinPageSetList(118,3891
#define GinPageHasFullRow(119,3968
#define GinPageSetFullRow(120,4063
#define GinPageIsCompressed(121,4151
#define GinPageSetCompressed(122,4244
#define GinPageIsDeleted(124,4333
#define GinPageSetDeleted(125,4419
#define GinPageSetNonDeleted(126,4502
#define GinPageIsIncompleteSplit(127,4586
#define GinPageRightMost(129,4690
#define GinPageGetDeleteXid(135,4890
#define GinPageSetDeleteXid(136,4964
#define GinPageIsRecyclable(137,5048
#define GinItemPointerGetBlockNumber(144,5333
#define GinItemPointerGetOffsetNumber(147,5427
#define GinItemPointerSetBlockNumber(150,5523
#define GinItemPointerSetOffsetNumber(153,5628
#define ItemPointerSetMin(167,6224
#define ItemPointerIsMin(169,6310
#define ItemPointerSetMax(172,6453
#define ItemPointerSetLossyPage(174,6548
#define ItemPointerIsLossyPage(176,6637
	BlockIdData child_blkno;186,6941
	ItemPointerData key;187,6967
} PostingItem;188,6989
#define PostingItemGetBlockNumber(190,7005
#define PostingItemSetBlockNumber(193,7099
typedef signed char GinNullCategory;207,7695
#define GIN_CAT_NORM_KEY	209,7733
#define GIN_CAT_NULL_KEY	210,7794
#define GIN_CAT_EMPTY_ITEM	211,7843
#define GIN_CAT_NULL_ITEM	212,7909
#define GIN_CAT_EMPTY_QUERY	213,7970
#define GinCategoryOffset(218,8106
#define GinGetNullCategory(221,8239
#define GinSetNullCategory(223,8360
#define GinGetNPosting(229,8568
#define GinSetNPosting(230,8643
#define GIN_TREE_POSTING	231,8719
#define GinIsPostingTree(232,8768
#define GinSetPostingTree(233,8842
#define GinGetPostingTree(234,8975
#define GIN_ITUP_COMPRESSED	236,9053
#define GinGetPostingOffset(237,9093
#define GinSetPostingOffset(238,9199
#define GinGetPosting(239,9301
#define GinItupIsCompressed(240,9387
#define GinMaxItemSize 249,9881
#define GinGetDownlink(258,10126
#define GinSetDownlink(259,10200
#define GinDataLeafPageGetPostingList(279,11042
#define GinDataLeafPageGetPostingListSize(281,11170
#define GinDataLeafPageIsEmpty(284,11323
#define GinDataLeafPageGetFreeSpace(287,11496
#define GinDataPageGetRightBound(289,11567
#define GinDataPageGetData(296,11932
#define GinDataPageGetPostingItem(299,12070
#define GinDataPageSetDataSize(310,12604
#define GinNonLeafDataPageGetFreeSpace(316,12815
#define GinDataPageMaxDataSize	320,12948
#define GinListPageSize 328,13128
	ItemPointerData first;338,13327
	uint16		nbytes;339,13401
	unsigned char bytes[bytes340,13454
} GinPostingList;341,13527
#define SizeOfGinPostingList(343,13546
#define GinNextPostingListSegment(344,13647

/home/seinoyu/pgsql/master/postgresql/src/include/access/xlogarchive.h,30
#define XLOG_ARCHIVE_H16,454

/home/seinoyu/pgsql/master/postgresql/src/include/access/reloptions.h,2964
#define RELOPTIONS_H20,678
typedef enum relopt_type29,869
	RELOPT_TYPE_BOOL,31,896
	RELOPT_TYPE_INT,32,915
	RELOPT_TYPE_REAL,33,933
	RELOPT_TYPE_ENUM,34,952
	RELOPT_TYPE_STRING35,971
} relopt_type;36,991
typedef enum relopt_kind39,1043
	RELOPT_KIND_LOCAL 41,1070
	RELOPT_KIND_HEAP 42,1094
	RELOPT_KIND_TOAST 43,1124
	RELOPT_KIND_BTREE 44,1155
	RELOPT_KIND_HASH 45,1186
	RELOPT_KIND_GIN 46,1216
	RELOPT_KIND_GIST 47,1245
	RELOPT_KIND_ATTRIBUTE 48,1275
	RELOPT_KIND_TABLESPACE 49,1310
	RELOPT_KIND_SPGIST 50,1346
	RELOPT_KIND_VIEW 51,1378
	RELOPT_KIND_BRIN 52,1408
	RELOPT_KIND_PARTITIONED 53,1439
	RELOPT_KIND_LAST_DEFAULT 55,1547
	RELOPT_KIND_MAX 57,1674
} relopt_kind;58,1703
#define HEAP_RELOPT_NAMESPACES 61,1788
typedef struct relopt_gen64,1879
	const char *name;name66,1907
	const char *desc;desc68,1993
	bits32		kinds;69,2012
	LOCKMODE	lockmode;70,2028
	int			namelen;71,2048
	relopt_type type;72,2064
} relopt_gen;73,2083
typedef struct relopt_value76,2125
	relopt_gen *gen;gen78,2155
	bool		isset;79,2173
		bool		bool_val;82,2197
		int			int_val;83,2215
		double		real_val;84,2232
		int			enum_val;85,2252
		char	   *string_val;string_val86,2270
	}			values;87,2320
} relopt_value;88,2333
typedef struct relopt_bool91,2403
	relopt_gen	gen;93,2432
	bool		default_val;94,2449
} relopt_bool;95,2469
typedef struct relopt_int97,2485
	relopt_gen	gen;99,2513
	int			default_val;100,2530
	int			min;101,2550
	int			max;102,2562
} relopt_int;103,2574
typedef struct relopt_real105,2589
	relopt_gen	gen;107,2618
	double		default_val;108,2635
	double		min;109,2657
	double		max;110,2671
} relopt_real;111,2685
typedef struct relopt_enum_elt_def117,2804
	const char *string_val;string_val119,2841
	int			symbol_val;120,2866
} relopt_enum_elt_def;121,2885
typedef struct relopt_enum123,2909
	relopt_gen	gen;125,2938
	relopt_enum_elt_def *members;members126,2955
	int			default_val;127,2986
	const char *detailmsg;detailmsg128,3006
} relopt_enum;130,3070
typedef void (*validate_string_relopt)validate_string_relopt133,3124
typedef Size (*fill_string_relopt)fill_string_relopt134,3184
typedef void (*relopts_validator)relopts_validator137,3302
typedef struct relopt_string139,3392
	relopt_gen	gen;141,3423
	int			default_len;142,3440
	bool		default_isnull;143,3460
	validate_string_relopt validate_cb;144,3483
	fill_string_relopt fill_cb;145,3520
	char	   *default_val;default_val146,3549
} relopt_string;147,3572
	const char *optname;optname152,3663
	relopt_type opttype;153,3706
	int			offset;154,3753
} relopt_parse_elt;155,3809
typedef struct local_relopt158,3863
	relopt_gen *option;option160,3893
	int			offset;161,3940
} local_relopt;162,4005
typedef struct local_relopts165,4096
	List	   *options;options167,4127
	List	   *validators;validators168,4186
	Size		relopt_struct_size;169,4251
} local_relopts;170,4315
#define GET_STRING_RELOPTION(178,4603

/home/seinoyu/pgsql/master/postgresql/src/include/access/heaptoast.h,416
#define HEAPTOAST_H14,402
#define MaximumBytesPerTuple(23,596
#define TOAST_TUPLES_PER_PAGE	46,1604
#define TOAST_TUPLE_THRESHOLD	48,1637
#define TOAST_TUPLE_TARGET	50,1712
#define TOAST_TUPLES_PER_PAGE_MAIN	59,2135
#define TOAST_TUPLE_TARGET_MAIN 61,2173
#define TOAST_INDEX_TARGET	68,2482
#define EXTERN_TUPLES_PER_PAGE	80,3013
#define EXTERN_TUPLE_MAX_SIZE	82,3069
#define TOAST_MAX_CHUNK_SIZE	84,3145

/home/seinoyu/pgsql/master/postgresql/src/include/access/brin_tuple.h,891
#define BRIN_TUPLE_H12,306
typedef struct BrinValues24,645
	AttrNumber	bv_attno;26,673
	bool		bv_hasnulls;27,725
	bool		bv_allnulls;28,790
	Datum	   *bv_values;bv_values29,856
} BrinValues;30,912
typedef struct BrinMemTuple36,1074
	bool		bt_placeholder;38,1104
	BlockNumber bt_blkno;39,1161
	MemoryContext bt_context;40,1224
	Datum	   *bt_values;bt_values42,1338
	bool	   *bt_allnulls;bt_allnulls43,1380
	bool	   *bt_hasnulls;bt_hasnulls44,1424
	BrinValues	bt_columns[bt_columns46,1513
} BrinMemTuple;47,1560
typedef struct BrinTuple54,1791
	BlockNumber bt_blkno;57,1865
	uint8		bt_info;68,2100
} BrinTuple;69,2117
#define SizeOfBrinTuple 71,2131
#define BRIN_OFFSET_MASK	76,2241
#define BRIN_PLACEHOLDER_MASK	78,2310
#define BRIN_NULLS_MASK	79,2345
#define BrinTupleDataOffset(81,2377
#define BrinTupleHasNulls(82,2471
#define BrinTupleIsPlaceholder(83,2562

/home/seinoyu/pgsql/master/postgresql/src/include/access/twophase.h,108
#define TWOPHASE_H15,426
typedef struct GlobalTransactionData *GlobalTransaction;GlobalTransaction26,683

/home/seinoyu/pgsql/master/postgresql/src/include/access/gist_private.h,5259
#define GIST_PRIVATE_H15,514
#define GIST_MAX_SPLIT_PAGES	39,1518
#define GIST_SHARE	42,1576
#define GIST_EXCLUSIVE	43,1613
#define GIST_UNLOCK 44,1658
	BlockNumber prev;48,1715
	uint32		freespace;49,1734
	char		tupledata[tupledata50,1754
} GISTNodeBufferPage;51,1795
#define BUFFER_PAGE_DATA_OFFSET 53,1818
#define PAGE_FREE_SPACE(55,1945
#define PAGE_IS_EMPTY(57,2033
#define PAGE_NO_SPACE(59,2194
typedef struct GISTSTATE75,2951
	MemoryContext scanCxt;77,2978
	MemoryContext tempCxt;78,3040
	TupleDesc	leafTupdesc;80,3113
	TupleDesc	nonLeafTupdesc;81,3168
	TupleDesc	fetchTupdesc;83,3258
	FmgrInfo	consistentFn[consistentFn86,3360
	FmgrInfo	unionFn[unionFn87,3400
	FmgrInfo	compressFn[compressFn88,3435
	FmgrInfo	decompressFn[decompressFn89,3473
	FmgrInfo	penaltyFn[penaltyFn90,3513
	FmgrInfo	picksplitFn[picksplitFn91,3550
	FmgrInfo	equalFn[equalFn92,3589
	FmgrInfo	distanceFn[distanceFn93,3624
	FmgrInfo	fetchFn[fetchFn94,3662
	Oid			supportCollation[supportCollation97,3749
} GISTSTATE;98,3790
typedef struct GISTSearchHeapItem118,4627
	ItemPointerData heapPtr;120,4663
	bool		recheck;121,4689
	bool		recheckDistances;122,4741
	HeapTuple	recontup;123,4805
	OffsetNumber offnum;125,4904
} GISTSearchHeapItem;127,4990
typedef struct GISTSearchItem130,5067
	pairingheap_node phNode;132,5099
	BlockNumber blkno;133,5125
		GistNSN		parentlsn;136,5204
		GISTSearchHeapItem heap;138,5332
	}			data;139,5390
	IndexOrderByDistance distances[distances142,5434
} GISTSearchItem;143,5490
#define GISTSearchItemIsHeap(145,5509
#define SizeOfGISTSearchItem(147,5582
typedef struct GISTScanOpaqueData154,5788
	GISTSTATE  *giststate;giststate156,5824
	Oid		   *orderByTypes;orderByTypes157,5884
	pairingheap *queue;queue159,5949
	MemoryContext queueCxt;160,6003
	bool		qual_ok;161,6061
	bool		firstCall;162,6121
	IndexOrderByDistance *distances;distances165,6220
	OffsetNumber *killedItems;killedItems168,6369
	int			numKilled;169,6434
	BlockNumber curBlkno;170,6492
	GistNSN		curPageLSN;171,6546
	OffsetNumber nPageData;175,6751
	OffsetNumber curPageData;176,6814
	MemoryContext pageDataCxt;177,6867
} GISTScanOpaqueData;179,6969
typedef GISTScanOpaqueData *GISTScanOpaque;GISTScanOpaque181,6992
typedef struct gistxlogPage184,7105
	BlockNumber blkno;186,7135
	int			num;187,7155
} gistxlogPage;188,7208
typedef struct SplitedPageLayout191,7277
	gistxlogPage block;193,7312
	IndexTupleData *list;list194,7333
	int			lenlist;195,7356
	IndexTuple	itup;196,7372
	Page		page;197,7417
	Buffer		buffer;198,7449
	struct SplitedPageLayout *next;next200,7502
} SplitedPageLayout;201,7535
typedef struct GISTInsertStack207,7651
	BlockNumber blkno;210,7704
	Buffer		buffer;211,7724
	Page		page;212,7741
	GistNSN		lsn;218,7887
	bool		retry_from_parent;225,8122
	OffsetNumber downlinkoffnum;228,8224
	struct GISTInsertStack *parent;parent231,8280
} GISTInsertStack;232,8313
typedef struct GistSplitVector235,8409
	GIST_SPLITVEC splitVector;237,8442
	Datum		spl_lattr[spl_lattr239,8514
	bool		spl_lisnull[spl_lisnull241,8610
	Datum		spl_rattr[spl_rattr243,8647
	bool		spl_risnull[spl_risnull245,8744
	bool	   *spl_dontcare;spl_dontcare247,8781
} GistSplitVector;249,8895
	Relation	r;253,8932
	Relation	heapRel;254,8945
	Size		freespace;255,8964
	bool		is_build;256,9011
	GISTInsertStack *stack;stack258,9029
} GISTInsertState;259,9054
#define GIST_ROOT_BLKNO	262,9106
#define TUPLE_IS_VALID	285,10423
#define TUPLE_IS_INVALID	286,10454
#define  GistTupleIsInvalid(288,10487
#define  GistTupleSetValid(289,10592
	BlockNumber nodeBlocknum;300,10808
	int32		blocksCount;301,10874
	BlockNumber pageBlocknum;303,10941
	GISTNodeBufferPage *pageBuffer;pageBuffer304,10997
	bool		queuedForEmptying;307,11102
	bool		isTemp;310,11185
	int			level;312,11201
} GISTNodeBuffer;313,11233
#define LEVEL_HAS_BUFFERS(319,11346
#define BUFFER_HALF_FILLED(324,11560
#define BUFFER_OVERFLOWED(332,11860
typedef struct GISTBuildBuffers338,12032
	MemoryContext context;341,12129
	BufFile    *pfile;pfile343,12154
	long		nFileBlocks;344,12217
	long	   *freeBlocks;freeBlocks349,12324
	int			nFreeBlocks;350,12346
	int			freeBlocksLen;351,12412
	HTAB	   *nodeBuffersTab;nodeBuffersTab354,12519
	List	   *bufferEmptyingQueue;bufferEmptyingQueue357,12592
	int			levelStep;364,12806
	int			pagesPerBuffer;365,12824
	List	  **buffersOnLevels;buffersOnLevels368,12915
	int			buffersOnLevelsLen;369,12942
	GISTNodeBuffer **loadedBuffers;loadedBuffers375,13081
	int			loadedBuffersCount;376,13114
	int			loadedBuffersLen;377,13177
	int			rootlevel;380,13312
} GISTBuildBuffers;381,13330
typedef enum GistOptBufferingMode384,13392
	GIST_OPTION_BUFFERING_AUTO,386,13428
	GIST_OPTION_BUFFERING_ON,387,13457
	GIST_OPTION_BUFFERING_OFF388,13484
} GistOptBufferingMode;389,13511
typedef struct GiSTOptions394,13581
	int32		vl_len_;396,13610
	int			fillfactor;397,13674
	GistOptBufferingMode buffering_mode;398,13737
} GiSTOptions;399,13802
	Buffer		buf;420,14460
	IndexTuple	downlink;421,14504
} GISTPageSplitInfo;422,14557
#define GiSTPageSize 470,16093
#define GIST_MIN_FILLFACTOR	473,16193
#define GIST_DEFAULT_FILLFACTOR	474,16226

/home/seinoyu/pgsql/master/postgresql/src/include/access/xact.h,5308
#define XACT_H15,415
#define GIDSIZE 31,809
#define XACT_READ_UNCOMMITTED	36,862
#define XACT_READ_COMMITTED	37,894
#define XACT_REPEATABLE_READ	38,925
#define XACT_SERIALIZABLE	39,956
#define IsolationUsesXactSnapshot(51,1366
#define IsolationIsSerializable(52,1441
	SYNCHRONOUS_COMMIT_OFF,70,1865
	SYNCHRONOUS_COMMIT_LOCAL_FLUSH,71,1917
	SYNCHRONOUS_COMMIT_REMOTE_WRITE,72,1982
	SYNCHRONOUS_COMMIT_REMOTE_FLUSH,74,2073
	SYNCHRONOUS_COMMIT_REMOTE_APPLY 75,2145
}			SyncCommitLevel;76,2222
#define SYNCHRONOUS_COMMIT_ON	79,2300
#define XACT_FLAGS_ACCESSEDTEMPNAMESPACE	97,2920
#define XACT_FLAGS_ACQUIREDACCESSEXCLUSIVELOCK	103,3097
	XACT_EVENT_COMMIT,110,3251
	XACT_EVENT_PARALLEL_COMMIT,111,3271
	XACT_EVENT_ABORT,112,3300
	XACT_EVENT_PARALLEL_ABORT,113,3319
	XACT_EVENT_PREPARE,114,3347
	XACT_EVENT_PRE_COMMIT,115,3368
	XACT_EVENT_PARALLEL_PRE_COMMIT,116,3392
	XACT_EVENT_PRE_PREPARE117,3425
} XactEvent;118,3449
typedef void (*XactCallback)XactCallback120,3463
	SUBXACT_EVENT_START_SUB,124,3538
	SUBXACT_EVENT_COMMIT_SUB,125,3564
	SUBXACT_EVENT_ABORT_SUB,126,3591
	SUBXACT_EVENT_PRE_COMMIT_SUB127,3617
} SubXactEvent;128,3647
typedef void (*SubXactCallback)SubXactCallback130,3664
#define XLOG_XACT_COMMIT	143,4039
#define XLOG_XACT_PREPARE	144,4071
#define XLOG_XACT_ABORT	145,4104
#define XLOG_XACT_COMMIT_PREPARED	146,4136
#define XLOG_XACT_ABORT_PREPARED	147,4175
#define XLOG_XACT_ASSIGNMENT	148,4213
#define XLOG_XACT_INVALIDATIONS	149,4248
#define XLOG_XACT_OPMASK	153,4358
#define XLOG_XACT_HAS_INFO	156,4442
#define XACT_XINFO_HAS_DBINFO	162,4594
#define XACT_XINFO_HAS_SUBXACTS	163,4636
#define XACT_XINFO_HAS_RELFILENODES	164,4680
#define XACT_XINFO_HAS_INVALS	165,4727
#define XACT_XINFO_HAS_TWOPHASE	166,4769
#define XACT_XINFO_HAS_ORIGIN	167,4813
#define XACT_XINFO_HAS_AE_LOCKS	168,4855
#define XACT_XINFO_HAS_GID	169,4899
#define XACT_COMPLETION_APPLY_FEEDBACK	179,5247
#define XACT_COMPLETION_UPDATE_RELCACHE_FILE	180,5299
#define XACT_COMPLETION_FORCE_SYNC_COMMIT	181,5355
#define XactCompletionApplyFeedback(184,5446
#define XactCompletionRelcacheInitFileInval(186,5540
#define XactCompletionForceSyncCommit(188,5648
typedef struct xl_xact_assignment191,5748
	TransactionId xtop;193,5784
	int			nsubxacts;194,5842
	TransactionId xsub[xsub195,5897
} xl_xact_assignment;196,5964
#define MinSizeOfXactAssignment 198,5987
typedef struct xl_xact_xinfo217,6768
	uint32		xinfo;224,7025
} xl_xact_xinfo;225,7041
typedef struct xl_xact_dbinfo227,7059
	Oid			dbId;229,7091
	Oid			tsId;230,7125
} xl_xact_dbinfo;231,7167
typedef struct xl_xact_subxacts233,7186
	int			nsubxacts;235,7220
	TransactionId subxacts[subxacts236,7275
} xl_xact_subxacts;237,7323
#define MinSizeOfXactSubxacts 238,7343
typedef struct xl_xact_relfilenodes240,7411
	int			nrels;242,7449
	RelFileNode xnodes[xnodes243,7491
} xl_xact_relfilenodes;244,7535
#define MinSizeOfXactRelfilenodes 245,7559
typedef struct xl_xact_invals247,7633
	int			nmsgs;249,7665
	SharedInvalidationMessage msgs[msgs250,7715
} xl_xact_invals;251,7771
#define MinSizeOfXactInvals 252,7789
typedef struct xl_xact_twophase254,7849
	TransactionId xid;256,7883
} xl_xact_twophase;257,7903
typedef struct xl_xact_origin259,7924
	XLogRecPtr	origin_lsn;261,7956
	TimestampTz origin_timestamp;262,7980
} xl_xact_origin;263,8011
typedef struct xl_xact_commit265,8030
	TimestampTz xact_time;267,8062
} xl_xact_commit;277,8573
#define MinSizeOfXactCommit 278,8591
typedef struct xl_xact_abort280,8680
	TimestampTz xact_time;282,8711
} xl_xact_abort;292,9211
#define MinSizeOfXactAbort 293,9228
typedef struct xl_xact_prepare295,9278
	uint32		magic;297,9311
	uint32		total_len;298,9353
	TransactionId xid;299,9399
	Oid			database;300,9452
	TimestampTz prepared_at;301,9502
	Oid			owner;302,9554
	int32		nsubxacts;303,9605
	int32		ncommitrels;304,9664
	int32		nabortrels;305,9723
	int32		ninvalmsgs;306,9781
	bool		initfileinval;307,9846
	uint16		gidlen;308,9917
	XLogRecPtr	origin_lsn;309,9985
	TimestampTz origin_timestamp;310,10050
} xl_xact_prepare;311,10118
typedef struct xl_xact_parsed_commit318,10320
	TimestampTz xact_time;320,10359
	uint32		xinfo;321,10383
	Oid			dbId;323,10400
	Oid			tsId;324,10434
	int			nsubxacts;326,10477
	TransactionId *subxacts;subxacts327,10495
	int			nrels;329,10522
	RelFileNode *xnodes;xnodes330,10536
	int			nmsgs;332,10559
	SharedInvalidationMessage *msgs;msgs333,10573
	TransactionId twophase_xid;335,10608
	char		twophase_gid[twophase_gid336,10656
	int			nabortrels;337,10705
	RelFileNode *abortnodes;abortnodes338,10744
	XLogRecPtr	origin_lsn;340,10790
	TimestampTz origin_timestamp;341,10814
} xl_xact_parsed_commit;342,10845
typedef xl_xact_parsed_commit xl_xact_parsed_prepare;344,10871
typedef struct xl_xact_parsed_abort346,10926
	TimestampTz xact_time;348,10964
	uint32		xinfo;349,10988
	Oid			dbId;351,11005
	Oid			tsId;352,11039
	int			nsubxacts;354,11082
	TransactionId *subxacts;subxacts355,11100
	int			nrels;357,11127
	RelFileNode *xnodes;xnodes358,11141
	TransactionId twophase_xid;360,11164
	char		twophase_gid[twophase_gid361,11212
	XLogRecPtr	origin_lsn;363,11262
	TimestampTz origin_timestamp;364,11286
} xl_xact_parsed_abort;365,11317

/home/seinoyu/pgsql/master/postgresql/src/include/access/valid.h,51
#define VALID_H15,429
#define HeapKeyTest(22,529

/home/seinoyu/pgsql/master/postgresql/src/include/access/xlog.h,3164
#define XLOG_H12,253
#define SYNC_METHOD_FSYNC	25,517
#define SYNC_METHOD_FDATASYNC	26,546
#define SYNC_METHOD_OPEN	27,578
#define SYNC_METHOD_FSYNC_WRITETHROUGH	28,623
#define SYNC_METHOD_OPEN_DSYNC	29,664
	STANDBY_DISABLED,66,2154
	STANDBY_INITIALIZED,67,2173
	STANDBY_SNAPSHOT_PENDING,68,2195
	STANDBY_SNAPSHOT_READY69,2222
} HotStandbyState;70,2246
#define InHotStandby 74,2304
	RECOVERY_TARGET_UNSET,82,2487
	RECOVERY_TARGET_XID,83,2511
	RECOVERY_TARGET_TIME,84,2533
	RECOVERY_TARGET_NAME,85,2556
	RECOVERY_TARGET_LSN,86,2579
	RECOVERY_TARGET_IMMEDIATE87,2601
} RecoveryTargetType;88,2628
	RECOVERY_TARGET_TIMELINE_CONTROLFILE,95,2706
	RECOVERY_TARGET_TIMELINE_LATEST,96,2745
	RECOVERY_TARGET_TIMELINE_NUMERIC97,2779
} RecoveryTargetTimeLineGoal;98,2813
typedef enum ArchiveMode153,4529
	ARCHIVE_MODE_OFF 155,4556
	ARCHIVE_MODE_ON,156,4595
	ARCHIVE_MODE_ALWAYS	157,4662
} ArchiveMode;158,4729
typedef enum WalLevel162,4790
	WAL_LEVEL_MINIMAL 164,4814
	WAL_LEVEL_REPLICA,165,4838
	WAL_LEVEL_LOGICAL166,4858
} WalLevel;167,4877
typedef enum RecoveryState170,4912
	RECOVERY_STATE_CRASH 172,4941
	RECOVERY_STATE_ARCHIVE,173,4989
	RECOVERY_STATE_DONE	174,5038
} RecoveryState;175,5091
#define XLogArchivingActive(180,5226
#define XLogArchivingAlways(183,5442
#define XLogArchiveCommandSet(185,5600
#define XLogIsNeeded(191,5810
#define XLogHintBitIsNeeded(202,6277
#define XLogStandbyInfoActive(205,6445
#define XLogLogicalInfoActive(208,6590
#define CHECKPOINT_IS_SHUTDOWN	221,7016
#define CHECKPOINT_END_OF_RECOVERY	222,7087
#define CHECKPOINT_IMMEDIATE	224,7209
#define CHECKPOINT_FORCE	225,7272
#define CHECKPOINT_FLUSH_ALL	226,7337
#define CHECKPOINT_WAIT	229,7501
#define CHECKPOINT_REQUESTED	230,7560
#define CHECKPOINT_CAUSE_XLOG	232,7690
#define CHECKPOINT_CAUSE_TIME	233,7750
#define XLOG_INCLUDE_ORIGIN	238,7890
#define XLOG_MARK_UNIMPORTANT	239,7961
#define XLOG_INCLUDE_XID	240,8038
typedef struct CheckpointStatsData244,8135
	TimestampTz ckpt_start_t;246,8172
	TimestampTz ckpt_write_t;247,8225
	TimestampTz ckpt_sync_t;248,8284
	TimestampTz ckpt_sync_end_t;249,8332
	TimestampTz ckpt_end_t;250,8382
	int			ckpt_bufs_written;252,8433
	int			ckpt_segs_added;254,8487
	int			ckpt_segs_removed;255,8548
	int			ckpt_segs_recycled;256,8607
	int			ckpt_sync_rels;258,8669
	uint64		ckpt_longest_sync;259,8720
	uint64		ckpt_agg_sync_time;260,8784
} CheckpointStatsData;264,8984
typedef enum WALAvailability271,9095
	WALAVAIL_INVALID_LSN,273,9126
	WALAVAIL_RESERVED,274,9172
	WALAVAIL_EXTENDED,275,9235
	WALAVAIL_UNRESERVED,277,9325
	WALAVAIL_REMOVED	278,9394
} WALAvailability;279,9449
typedef enum SessionBackupState369,12943
	SESSION_BACKUP_NONE,371,12977
	SESSION_BACKUP_EXCLUSIVE,372,12999
	SESSION_BACKUP_NON_EXCLUSIVE373,13026
} SessionBackupState;374,13056
#define RECOVERY_SIGNAL_FILE	387,13619
#define STANDBY_SIGNAL_FILE	388,13666
#define BACKUP_LABEL_FILE	389,13712
#define BACKUP_LABEL_OLD	390,13754
#define TABLESPACE_MAP	392,13800
#define TABLESPACE_MAP_OLD	393,13842
#define PROMOTE_SIGNAL_FILE	396,13935
#define FALLBACK_PROMOTE_SIGNAL_FILE 397,13974

/home/seinoyu/pgsql/master/postgresql/src/include/access/heapam.h,1182
#define HEAPAM_H15,422
#define HEAP_INSERT_SKIP_FSM	34,941
#define HEAP_INSERT_FROZEN	35,992
#define HEAP_INSERT_NO_LOGICAL	36,1040
#define HEAP_INSERT_SPECULATIVE 37,1095
typedef struct BulkInsertStateData *BulkInsertState;BulkInsertState39,1135
#define MaxLockTupleMode	42,1212
typedef struct HeapScanDescData47,1300
	TableScanDescData rs_base;49,1334
	BlockNumber rs_nblocks;52,1444
	BlockNumber rs_startblock;53,1506
	BlockNumber rs_numblocks;54,1560
	bool		rs_inited;58,1725
	BlockNumber rs_cblock;59,1778
	Buffer		rs_cbuf;60,1841
	BufferAccessStrategy rs_strategy;64,2047
	HeapTupleData rs_ctup;66,2115
	int			rs_cindex;69,2251
	int			rs_ntuples;70,2311
	OffsetNumber rs_vistuples[rs_vistuples71,2370
}			HeapScanDescData;72,2440
typedef struct HeapScanDescData *HeapScanDesc;HeapScanDesc73,2462
typedef struct IndexFetchHeapData78,2567
	IndexFetchTableData xs_base;80,2603
	Buffer		xs_cbuf;82,2678
} IndexFetchHeapData;84,2812
	HEAPTUPLE_DEAD,89,2898
	HEAPTUPLE_LIVE,90,2952
	HEAPTUPLE_RECENTLY_DEAD,91,3016
	HEAPTUPLE_INSERT_IN_PROGRESS,92,3085
	HEAPTUPLE_DELETE_IN_PROGRESS	93,3158
} HTSV_Result;94,3229
#define HeapScanIsValid(109,3507

/home/seinoyu/pgsql/master/postgresql/src/include/access/gin.h,966
#define GIN_H11,349
#define GIN_COMPARE_PROC	22,527
#define GIN_EXTRACTVALUE_PROC	23,559
#define GIN_EXTRACTQUERY_PROC	24,595
#define GIN_CONSISTENT_PROC	25,631
#define GIN_COMPARE_PARTIAL_PROC	26,666
#define GIN_TRICONSISTENT_PROC	27,704
#define GIN_OPTIONS_PROC	28,741
#define GINNProcs	29,771
#define GIN_SEARCH_MODE_DEFAULT	34,849
#define GIN_SEARCH_MODE_INCLUDE_EMPTY	35,885
#define GIN_SEARCH_MODE_ALL	36,925
#define GIN_SEARCH_MODE_EVERYTHING	37,958
typedef struct GinStatsData42,1086
	BlockNumber nPendingPages;44,1116
	BlockNumber nTotalPages;45,1144
	BlockNumber nEntryPages;46,1170
	BlockNumber nDataPages;47,1196
	int64		nEntries;48,1221
	int32		ginVersion;49,1239
} GinStatsData;50,1259
typedef char GinTernaryValue;58,1468
#define GIN_FALSE	60,1499
#define GIN_TRUE	61,1564
#define GIN_MAYBE	62,1617
#define DatumGetGinTernaryValue(65,1711
#define GinTernaryValueGetDatum(66,1769
#define PG_RETURN_GIN_TERNARY_VALUE(67,1817

/home/seinoyu/pgsql/master/postgresql/src/include/access/attnum.h,289
#define ATTNUM_H15,420
typedef int16 AttrNumber;21,503
#define InvalidAttrNumber	23,530
#define MaxAttrNumber	24,559
#define AttributeNumberIsValid(34,730
#define AttrNumberIsForUserDefinedAttr(41,949
#define AttrNumberGetAttrOffset(51,1212
#define AttrOffsetGetAttrNumber(61,1427

/home/seinoyu/pgsql/master/postgresql/src/include/access/toast_internals.h,353
#define TOAST_INTERNALS_H13,367
typedef struct toast_compress_header22,550
	int32		vl_len_;24,589
	int32		rawsize;25,653
} toast_compress_header;26,670
#define TOAST_COMPRESS_HDRSZ	32,788
#define TOAST_COMPRESS_RAWSIZE(33,858
#define TOAST_COMPRESS_SIZE(34,939
#define TOAST_COMPRESS_RAWDATA(35,1022
#define TOAST_COMPRESS_SET_RAWSIZE(37,1103

/home/seinoyu/pgsql/master/postgresql/src/include/access/transam.h,1980
#define TRANSAM_H15,432
#define InvalidTransactionId	31,868
#define BootstrapTransactionId	32,918
#define FrozenTransactionId	33,970
#define FirstNormalTransactionId	34,1020
#define MaxTransactionId	35,1073
#define TransactionIdIsValid(41,1213
#define TransactionIdIsNormal(42,1280
#define TransactionIdEquals(43,1352
#define TransactionIdStore(44,1407
#define StoreInvalidTransactionId(45,1463
#define EpochFromFullTransactionId(47,1537
#define XidFromFullTransactionId(48,1604
#define U64FromFullTransactionId(49,1662
#define FullTransactionIdEquals(50,1711
#define FullTransactionIdPrecedes(51,1774
#define FullTransactionIdPrecedesOrEquals(52,1838
#define FullTransactionIdFollows(53,1911
#define FullTransactionIdFollowsOrEquals(54,1974
#define FullTransactionIdIsValid(55,2046
#define InvalidFullTransactionId	56,2133
typedef struct FullTransactionId63,2428
	uint64		value;65,2463
} FullTransactionId;66,2479
FullTransactionIdFromEpochAndXid(69,2533
FullTransactionIdFromU64(79,2727
#define TransactionIdAdvance(89,2910
FullTransactionIdAdvance(98,3155
#define TransactionIdRetreat(106,3382
#define NormalTransactionIdPrecedes(112,3564
#define NormalTransactionIdFollows(117,3795
#define FirstGenbkiObjectId	153,5499
#define FirstBootstrapObjectId	154,5534
#define FirstNormalObjectId	155,5571
typedef struct VariableCacheData167,6016
	Oid			nextOid;172,6106
	uint32		oidCount;173,6148
	FullTransactionId nextFullXid;178,6270
	TransactionId oldestXid;180,6333
	TransactionId xidVacLimit;181,6399
	TransactionId xidWarnLimit;182,6464
	TransactionId xidStopLimit;183,6522
	TransactionId xidWrapLimit;184,6599
	Oid			oldestXidDB;185,6655
	TransactionId oldestCommitTsXid;190,6773
	TransactionId newestCommitTsXid;191,6807
	TransactionId latestCompletedXid;196,6900
	TransactionId oldestClogXid;202,7058
} VariableCacheData;204,7131
typedef VariableCacheData *VariableCache;VariableCache206,7153
ReadNewTransactionId(258,9259

/home/seinoyu/pgsql/master/postgresql/src/include/access/rmgr.h,186
#define RMGR_H9,99
typedef uint8 RmgrId;11,115
#define PG_RMGR(22,378
typedef enum RmgrIds25,461
	RM_NEXT_ID28,513
} RmgrIds;29,525
#undef PG_RMGR31,537
#define RM_MAX_ID	33,553

/home/seinoyu/pgsql/master/postgresql/src/include/access/brin_xlog.h,1378
#define BRIN_XLOG_H15,429
#define XLOG_BRIN_CREATE_INDEX	31,780
#define XLOG_BRIN_INSERT	32,817
#define XLOG_BRIN_UPDATE	33,849
#define XLOG_BRIN_SAMEPAGE_UPDATE	34,881
#define XLOG_BRIN_REVMAP_EXTEND	35,920
#define XLOG_BRIN_DESUMMARIZE	36,958
#define XLOG_BRIN_OPMASK	38,995
#define XLOG_BRIN_INIT_PAGE	43,1121
typedef struct xl_brin_createidx50,1253
	BlockNumber pagesPerRange;52,1288
	uint16		version;53,1316
} xl_brin_createidx;54,1334
#define SizeOfBrinCreateIdx 55,1355
typedef struct xl_brin_insert63,1602
	BlockNumber heapBlk;65,1634
	BlockNumber pagesPerRange;68,1710
	OffsetNumber offnum;71,1801
} xl_brin_insert;72,1823
#define SizeOfBrinInsert	74,1842
typedef struct xl_brin_update87,2214
	OffsetNumber oldOffnum;90,2292
	xl_brin_insert insert;92,2318
} xl_brin_update;93,2342
#define SizeOfBrinUpdate	95,2361
typedef struct xl_brin_samepage_update102,2584
	OffsetNumber offnum;104,2625
} xl_brin_samepage_update;105,2647
#define SizeOfBrinSamepageUpdate	107,2675
typedef struct xl_brin_revmap_extend115,2863
	BlockNumber targetBlk;121,3007
} xl_brin_revmap_extend;122,3031
#define SizeOfBrinRevmapExtend	124,3057
typedef struct xl_brin_desummarize133,3303
	BlockNumber pagesPerRange;135,3340
	BlockNumber heapBlk;137,3414
	OffsetNumber regOffset;139,3490
} xl_brin_desummarize;140,3515
#define SizeOfBrinDesummarize	142,3539

/home/seinoyu/pgsql/master/postgresql/src/include/access/gin_private.h,5695
#define GIN_PRIVATE_H11,378
typedef struct GinOptions25,649
	int32		vl_len_;27,677
	bool		useFastUpdate;28,741
	int			pendingListCleanupSize;29,787
} GinOptions;30,853
#define GIN_DEFAULT_USE_FASTUPDATE	32,868
#define GinGetUseFastUpdate(33,908
#define GinGetPendingListCleanupSize(38,1173
#define GIN_UNLOCK	48,1582
#define GIN_SHARE	49,1620
#define GIN_EXCLUSIVE 50,1656
typedef struct GinState56,1783
	Relation	index;58,1809
	bool		oneCol;59,1826
	TupleDesc	origTupdesc;72,2529
	TupleDesc	tupdesc[tupdesc73,2553
	FmgrInfo	compareFn[compareFn78,2646
	FmgrInfo	extractValueFn[extractValueFn79,2683
	FmgrInfo	extractQueryFn[extractQueryFn80,2725
	FmgrInfo	consistentFn[consistentFn81,2767
	FmgrInfo	triConsistentFn[triConsistentFn82,2807
	FmgrInfo	comparePartialFn[comparePartialFn83,2850
	bool		canPartialMatch[canPartialMatch85,2982
	Oid			supportCollation[supportCollation87,3073
} GinState;88,3114
typedef struct GinBtreeStack127,4722
	BlockNumber blkno;129,4753
	Buffer		buffer;130,4773
	OffsetNumber off;131,4790
	ItemPointerData iptr;132,4809
	uint32		predictNumber;134,4905
	struct GinBtreeStack *parent;parent135,4929
} GinBtreeStack;136,4960
typedef struct GinBtreeData *GinBtree;GinBtree138,4978
	GPTP_NO_WORK,143,5093
	GPTP_INSERT,144,5108
	GPTP_SPLIT145,5122
} GinPlaceToPageRC;146,5134
typedef struct GinBtreeData148,5155
	BlockNumber (*findChildPage)findChildPage151,5207
	BlockNumber (*getLeftMostChild)getLeftMostChild152,5266
	bool		(*isMoveRight)isMoveRight153,5317
	bool		(*findItem)findItem154,5357
	OffsetNumber (*findChildPtr)findChildPtr157,5428
	GinPlaceToPageRC (*beginPlaceToPage)beginPlaceToPage158,5503
	void		(*execPlaceToPage)execPlaceToPage159,5624
	void	   *(*prepareDownlink)prepareDownlink160,5716
	void		(*fillRoot)fillRoot161,5765
	bool		isData;163,5841
	Relation	index;165,5857
	BlockNumber rootBlkno;166,5874
	GinState   *ginstate;ginstate167,5898
	bool		fullScan;168,5953
	bool		isBuild;169,5970
	OffsetNumber entryAttnum;172,6020
	Datum		entryKey;173,6047
	GinNullCategory entryCategory;174,6065
	ItemPointerData itemptr;177,6145
} GinBtreeData;178,6171
	IndexTuple	entry;183,6265
	bool		isDelete;184,6308
} GinBtreeEntryInsertData;185,6365
	ItemPointerData *items;items193,6527
	uint32		nitem;194,6552
	uint32		curitem;195,6568
} GinBtreeDataLeafInsertData;196,6586
typedef struct GinVacuumState GinVacuumState;240,8759
typedef struct GinScanKeyData *GinScanKey;GinScanKey261,9716
typedef struct GinScanEntryData *GinScanEntry;GinScanEntry263,9760
typedef struct GinScanKeyData265,9808
	uint32		nentries;268,9898
	uint32		nuserentries;270,9990
	GinScanEntry *scanEntry;scanEntry273,10088
	GinScanEntry *requiredEntries;requiredEntries283,10439
	int			nrequired;284,10471
	GinScanEntry *additionalEntries;additionalEntries285,10489
	int			nadditional;286,10523
	GinTernaryValue *entryRes;entryRes289,10598
	bool		(*boolConsistentFn)boolConsistentFn290,10626
	GinTernaryValue (*triConsistentFn)triConsistentFn291,10671
	FmgrInfo   *consistentFmgrInfo;consistentFmgrInfo292,10725
	FmgrInfo   *triConsistentFmgrInfo;triConsistentFmgrInfo293,10758
	Oid			collation;294,10794
	Datum		query;297,10863
	Datum	   *queryValues;queryValues299,10941
	GinNullCategory *queryCategories;queryCategories300,10965
	Pointer    *extra_data;extra_data301,11000
	StrategyNumber strategy;302,11025
	int32		searchMode;303,11051
	OffsetNumber attnum;304,11071
	bool		excludeOnly;318,11796
	ItemPointerData curItem;327,12153
	bool		curItemMatches;328,12179
	bool		recheckCurItem;329,12202
	bool		isFinished;330,12225
}			GinScanKeyData;331,12244
typedef struct GinScanEntryData333,12265
	Datum		queryKey;336,12358
	GinNullCategory queryCategory;337,12376
	bool		isPartialMatch;338,12408
	Pointer		extra_data;339,12431
	StrategyNumber strategy;340,12453
	int32		searchMode;341,12479
	OffsetNumber attnum;342,12499
	Buffer		buffer;345,12558
	ItemPointerData curItem;348,12611
	TIDBitmap  *matchBitmap;matchBitmap351,12713
	TBMIterator *matchIterator;matchIterator352,12739
	TBMIterateResult *matchResult;matchResult353,12768
	ItemPointerData *list;list356,12859
	int			nlist;357,12883
	OffsetNumber offset;358,12897
	bool		isFinished;360,12920
	bool		reduceResult;361,12939
	uint32		predictNumberResult;362,12960
	GinBtreeData btree;363,12990
}			GinScanEntryData;364,13011
typedef struct GinScanOpaqueData366,13034
	MemoryContext tempCtx;368,13069
	GinState	ginstate;369,13093
	GinScanKey	keys;371,13114
	uint32		nkeys;372,13168
	GinScanEntry *entries;entries374,13185
	uint32		totalentries;375,13247
	uint32		allocentries;376,13270
	MemoryContext keyCtx;378,13330
	bool		isVoidRes;380,13393
} GinScanOpaqueData;381,13449
typedef GinScanOpaqueData *GinScanOpaque;GinScanOpaque383,13471
typedef struct GinEntryAccumulator412,14536
	RBTNode		rbtnode;414,14573
	Datum		key;415,14592
	GinNullCategory category;416,14605
	OffsetNumber attnum;417,14632
	bool		shouldSort;418,14654
	ItemPointerData *list;list419,14673
	uint32		maxcount;420,14697
	uint32		count;421,14748
} GinEntryAccumulator;422,14805
	GinState   *ginstate;ginstate426,14846
	Size		allocatedMemory;427,14869
	GinEntryAccumulator *entryallocator;entryallocator428,14893
	uint32		eas_used;429,14931
	RBTree	   *tree;tree430,14950
	RBTreeIterator tree_walk;431,14968
} BuildAccumulator;432,14995
typedef struct GinTupleCollector446,15483
	IndexTuple *tuples;tuples448,15518
	uint32		ntuples;449,15539
	uint32		lentuples;450,15557
	uint32		sumsize;451,15577
} GinTupleCollector;452,15595
ginCompareItemPointers(480,16728

/home/seinoyu/pgsql/master/postgresql/src/include/access/ginxlog.h,2267
#define GINXLOG_H11,357
#define XLOG_GIN_CREATE_PTREE 19,515
typedef struct ginxlogCreatePostingTree21,552
	uint32		size;23,594
} ginxlogCreatePostingTree;25,650
#define XLOG_GIN_INSERT 35,926
	uint16		flags;39,974
} ginxlogInsert;55,1550
	OffsetNumber offset;59,1585
	bool		isDelete;60,1607
	IndexTupleData tuple;61,1624
} ginxlogInsertEntry;62,1670
	uint16		nactions;67,1711
} ginxlogRecompressDataLeaf;70,1774
	uint8		segno;79,2046
	char		type;80,2100
}			ginxlogSegmentAction;88,2406
#define GIN_SEGMENT_UNMODIFIED	91,2452
#define GIN_SEGMENT_DELETE	92,2527
#define GIN_SEGMENT_INSERT	93,2590
#define GIN_SEGMENT_REPLACE	94,2651
#define GIN_SEGMENT_ADDITEMS	95,2710
	OffsetNumber offset;99,2801
	PostingItem newitem;100,2823
} ginxlogInsertDataInternal;101,2845
#define XLOG_GIN_SPLIT	109,3118
typedef struct ginxlogSplit111,3147
	RelFileNode node;113,3177
	BlockNumber rrlink;114,3196
	BlockNumber leftChildBlkno;116,3284
	BlockNumber rightChildBlkno;117,3345
	uint16		flags;118,3375
} ginxlogSplit;119,3409
#define GIN_INSERT_ISDATA	124,3489
#define GIN_INSERT_ISLEAF	125,3560
#define GIN_SPLIT_ROOT	126,3603
#define XLOG_GIN_VACUUM_PAGE	135,4036
#define XLOG_GIN_VACUUM_DATA_LEAF_PAGE	141,4171
typedef struct ginxlogVacuumDataLeafPage143,4216
	ginxlogRecompressDataLeaf data;145,4259
} ginxlogVacuumDataLeafPage;146,4292
#define XLOG_GIN_DELETE_PAGE	153,4413
typedef struct ginxlogDeletePage155,4448
	OffsetNumber parentOffset;157,4483
	BlockNumber rightLink;158,4511
	TransactionId deleteXid;159,4535
} ginxlogDeletePage;160,4610
#define XLOG_GIN_UPDATE_META_PAGE 162,4632
typedef struct ginxlogUpdateMeta168,4732
	RelFileNode node;170,4767
	GinMetaPageData metadata;171,4786
	BlockNumber prevTail;172,4813
	BlockNumber newRightlink;173,4836
	int32		ntuples;174,4863
} ginxlogUpdateMeta;178,5049
#define XLOG_GIN_INSERT_LISTPAGE 180,5071
typedef struct ginxlogInsertListPage182,5111
	BlockNumber rightlink;184,5150
	int32		ntuples;185,5174
} ginxlogInsertListPage;187,5231
#define XLOG_GIN_DELETE_LISTPAGE 194,5340
#define GIN_NDELETE_AT_ONCE 202,5623
typedef struct ginxlogDeleteListPages203,5681
	GinMetaPageData metadata;205,5721
	int32		ndeleted;206,5748
} ginxlogDeleteListPages;207,5766

/home/seinoyu/pgsql/master/postgresql/src/include/access/clog.h,448
#define CLOG_H12,260
typedef int XidStatus;24,540
#define TRANSACTION_STATUS_IN_PROGRESS	26,564
#define TRANSACTION_STATUS_COMMITTED	27,609
#define TRANSACTION_STATUS_ABORTED	28,652
#define TRANSACTION_STATUS_SUB_COMMITTED	29,694
typedef struct xl_clog_truncate31,741
	int			pageno;33,775
	TransactionId oldestXact;34,790
	Oid			oldestXactDb;35,817
} xl_clog_truncate;36,838
#define CLOG_ZEROPAGE	54,1482
#define CLOG_TRUNCATE	55,1510

/home/seinoyu/pgsql/master/postgresql/src/include/access/xlogdefs.h,621
#define XLOG_DEFS_H13,314
typedef uint64 XLogRecPtr;21,509
#define InvalidXLogRecPtr	28,733
#define XLogRecPtrIsInvalid(29,761
#define FirstNormalUnloggedLSN	36,936
typedef uint64 XLogSegNo;41,1045
typedef uint32 TimeLineID;52,1571
typedef uint16 RepOriginId;58,1736
#define PG_O_DIRECT	70,2273
#define PG_O_DIRECT	72,2311
#define OPEN_SYNC_FLAG	82,2634
#define OPEN_SYNC_FLAG	84,2688
#define OPEN_DATASYNC_FLAG	91,2834
#define OPEN_DATASYNC_FLAG	95,2949
#define DEFAULT_SYNC_METHOD	100,3042
#define DEFAULT_SYNC_METHOD	102,3134
#define DEFAULT_SYNC_METHOD	104,3216
#define DEFAULT_SYNC_METHOD	106,3273

/home/seinoyu/pgsql/master/postgresql/src/include/access/parallel.h,1137
#define PARALLEL_H15,431
typedef void (*parallel_worker_main_type)parallel_worker_main_type23,594
typedef struct ParallelWorkerInfo25,671
	BackgroundWorkerHandle *bgwhandle;bgwhandle27,707
	shm_mq_handle *error_mqh;error_mqh28,743
	int32		pid;29,770
} ParallelWorkerInfo;30,783
typedef struct ParallelContext32,806
	dlist_node	node;34,839
	SubTransactionId subid;35,857
	int			nworkers;36,882
	int			nworkers_to_launch;37,942
	int			nworkers_launched;38,1010
	char	   *library_name;library_name39,1036
	char	   *function_name;function_name40,1060
	ErrorContextCallback *error_context_stack;error_context_stack41,1085
	shm_toc_estimator estimator;42,1129
	dsm_segment *seg;seg43,1159
	void	   *private_memory;private_memory44,1178
	shm_toc    *toc;toc45,1204
	ParallelWorkerInfo *worker;worker46,1222
	int			nknown_attached_workers;47,1251
	bool	   *known_attached_workers;known_attached_workers48,1283
} ParallelContext;49,1317
typedef struct ParallelWorkerContext51,1337
	dsm_segment *seg;seg53,1376
	shm_toc    *toc;toc54,1395
} ParallelWorkerContext;55,1413
#define		IsParallelWorker(61,1582

/home/seinoyu/pgsql/master/postgresql/src/include/access/brin.h,417
#define BRIN_H11,263
typedef struct BrinOptions20,383
	int32		vl_len_;22,412
	BlockNumber pagesPerRange;23,476
	bool		autosummarize;24,504
} BrinOptions;25,526
typedef struct BrinStatsData31,605
	BlockNumber pagesPerRange;33,636
	BlockNumber revmapNumPages;34,664
} BrinStatsData;35,693
#define BRIN_DEFAULT_PAGES_PER_RANGE	38,712
#define BrinGetPagesPerRange(39,753
#define BrinGetAutoSummarize(45,1028

/home/seinoyu/pgsql/master/postgresql/src/include/access/generic_xlog.h,166
#define GENERIC_XLOG_H15,428
#define MAX_GENERIC_XLOG_PAGES	23,595
#define GENERIC_XLOG_FULL_IMAGE 26,697
typedef struct GenericXLogState GenericXLogState;30,838

/home/seinoyu/pgsql/master/postgresql/src/include/access/hash.h,4091
#define HASH_H18,510
typedef uint32 Bucket;35,942
#define InvalidBucket	37,966
#define BUCKET_TO_BLKNO(39,1011
#define LH_UNUSED_PAGE	53,1599
#define LH_OVERFLOW_PAGE	54,1628
#define LH_BUCKET_PAGE	55,1663
#define LH_BITMAP_PAGE	56,1697
#define LH_META_PAGE	57,1731
#define LH_BUCKET_BEING_POPULATED	58,1763
#define LH_BUCKET_BEING_SPLIT	59,1806
#define LH_BUCKET_NEEDS_SPLIT_CLEANUP	60,1845
#define LH_PAGE_HAS_DEAD_TUPLES 61,1892
#define LH_PAGE_TYPE 63,1934
typedef struct HashPageOpaqueData77,2612
	BlockNumber hasho_prevblkno;79,2648
	BlockNumber hasho_nextblkno;80,2694
	Bucket		hasho_bucket;81,2740
	uint16		hasho_flag;82,2802
	uint16		hasho_page_id;83,2868
} HashPageOpaqueData;84,2933
typedef HashPageOpaqueData *HashPageOpaque;HashPageOpaque86,2956
#define H_NEEDS_SPLIT_CLEANUP(88,3001
#define H_BUCKET_BEING_SPLIT(89,3101
#define H_BUCKET_BEING_POPULATED(90,3192
#define H_HAS_DEAD_TUPLES(91,3291
#define HASHO_PAGE_ID	99,3666
typedef struct HashScanPosItem	101,3697
	ItemPointerData heapTid;103,3770
	OffsetNumber indexOffset;104,3830
} HashScanPosItem;105,3897
typedef struct HashScanPosData107,3917
	Buffer		buf;109,3950
	BlockNumber currPage;110,4003
	BlockNumber nextPage;111,4057
	BlockNumber prevPage;112,4106
	int			firstItem;121,4540
	int			lastItem;122,4594
	int			itemIndex;123,4646
	HashScanPosItem items[items125,4697
} HashScanPosData;126,4763
#define HashScanPosIsPinned(128,4783
#define HashScanPosIsValid(135,4956
#define HashScanPosInvalidate(142,5138
typedef struct HashScanOpaqueData156,5526
	uint32		hashso_sk_hash;159,5622
	Buffer		hashso_bucket_buf;162,5706
	Buffer		hashso_split_bucket_buf;169,5930
	bool		hashso_buc_populated;172,6031
	bool		hashso_buc_split;178,6196
	int		   *killedItems;killedItems180,6295
	int			numKilled;181,6362
	HashScanPosData currPos;187,6513
} HashScanOpaqueData;188,6567
typedef HashScanOpaqueData *HashScanOpaque;HashScanOpaque190,6590
#define HASH_METAPAGE	196,6672
#define HASH_MAGIC	198,6731
#define HASH_VERSION	199,6761
#define HASH_MAX_BITMAPS	228,8288
#define HASH_SPLITPOINT_PHASE_BITS	230,8338
#define HASH_SPLITPOINT_PHASES_PER_GRP	231,8375
#define HASH_SPLITPOINT_PHASE_MASK	232,8448
#define HASH_SPLITPOINT_GROUPS_WITH_ONE_PHASE	233,8521
#define HASH_MAX_SPLITPOINT_GROUP	236,8639
#define HASH_MAX_SPLITPOINTS 237,8676
typedef struct HashMetaPageData242,8863
	uint32		hashm_magic;244,8897
	uint32		hashm_version;245,8951
	double		hashm_ntuples;246,8992
	uint16		hashm_ffactor;247,9059
	uint16		hashm_bsize;248,9124
	uint16		hashm_bmsize;249,9176
	uint16		hashm_bmshift;251,9265
	uint32		hashm_maxbucket;252,9327
	uint32		hashm_highmask;253,9387
	uint32		hashm_lowmask;254,9451
	uint32		hashm_ovflpoint;255,9521
	uint32		hashm_firstfree;257,9612
	uint32		hashm_nmaps;258,9679
	RegProcedure hashm_procid;259,9730
	uint32		hashm_spares[hashm_spares260,9794
	BlockNumber hashm_mapp[hashm_mapp262,9896
} HashMetaPageData;263,9968
typedef HashMetaPageData *HashMetaPage;HashMetaPage265,9989
typedef struct HashOptions267,10030
	int32		varlena_header_;269,10059
	int			fillfactor;270,10130
} HashOptions;271,10193
#define HashGetFillFactor(273,10209
#define HashGetTargetPageUsage(279,10472
#define HashMaxItemSize(285,10644
#define INDEX_MOVED_BY_SPLIT_MASK	291,10822
#define HASH_MIN_FILLFACTOR	293,10879
#define HASH_DEFAULT_FILLFACTOR	294,10912
#define BYTE_TO_BIT	299,10969
#define ALL_SET	300,11014
#define BMPGSZ_BYTE(309,11384
#define BMPGSZ_BIT(310,11436
#define BMPG_SHIFT(311,11502
#define BMPG_MASK(312,11554
#define HashPageGetBitmap(314,11605
#define HashGetMaxBitmapSize(317,11676
#define HashPageGetMeta(321,11824
#define BITS_PER_MAP	327,11954
#define CLRBIT(330,12088
#define SETBIT(331,12161
#define ISSET(332,12233
#define HASH_READ	337,12368
#define HASH_WRITE	338,12405
#define HASH_NOLOCK	339,12447
#define HASHSTANDARD_PROC	353,13079
#define HASHEXTENDED_PROC	354,13108
#define HASHOPTIONS_PROC	355,13137
#define HASHNProcs	356,13165
typedef struct HSpool HSpool;440,17058

/home/seinoyu/pgsql/master/postgresql/src/include/access/printtup.h,26
#define PRINTTUP_H15,385

/home/seinoyu/pgsql/master/postgresql/src/include/access/amapi.h,3762
#define AMAPI_H13,333
typedef enum IndexAMProperty34,916
	AMPROP_UNKNOWN 36,947
	AMPROP_ASC,37,1008
	AMPROP_DESC,38,1049
	AMPROP_NULLS_FIRST,39,1063
	AMPROP_NULLS_LAST,40,1084
	AMPROP_ORDERABLE,41,1104
	AMPROP_DISTANCE_ORDERABLE,42,1123
	AMPROP_RETURNABLE,43,1151
	AMPROP_SEARCH_ARRAY,44,1171
	AMPROP_SEARCH_NULLS,45,1193
	AMPROP_CLUSTERABLE,46,1215
	AMPROP_INDEX_SCAN,47,1261
	AMPROP_BITMAP_SCAN,48,1281
	AMPROP_BACKWARD_SCAN,49,1302
	AMPROP_CAN_ORDER,50,1325
	AMPROP_CAN_UNIQUE,51,1366
	AMPROP_CAN_MULTI_COL,52,1386
	AMPROP_CAN_EXCLUDE,53,1409
	AMPROP_CAN_INCLUDE54,1430
} IndexAMProperty;55,1450
typedef IndexBuildResult *(*ambuild_function)ambuild_function63,1569
typedef void (*ambuildempty_function)ambuildempty_function68,1746
typedef bool (*aminsert_function)aminsert_function71,1835
typedef IndexBulkDeleteResult *(*ambulkdelete_function)ambulkdelete_function80,2113
typedef IndexBulkDeleteResult *(*amvacuumcleanup_function)amvacuumcleanup_function86,2352
typedef bool (*amcanreturn_function)amcanreturn_function90,2522
typedef void (*amcostestimate_function)amcostestimate_function93,2633
typedef bytea *(*amoptions_function)amoptions_function103,2974
typedef bool (*amproperty_function)amproperty_function107,3107
typedef char *(*ambuildphasename_function)ambuildphasename_function112,3311
typedef bool (*amvalidate_function)amvalidate_function115,3425
typedef IndexScanDesc (*ambeginscan_function)ambeginscan_function118,3509
typedef void (*amrescan_function)amrescan_function123,3663
typedef bool (*amgettuple_function)amgettuple_function130,3845
typedef int64 (*amgetbitmap_function)amgetbitmap_function134,3968
typedef void (*amendscan_function)amendscan_function138,4078
typedef void (*ammarkpos_function)ammarkpos_function141,4169
typedef void (*amrestrpos_function)amrestrpos_function144,4262
typedef Size (*amestimateparallelscan_function)amestimateparallelscan_function151,4437
typedef void (*aminitparallelscan_function)aminitparallelscan_function154,4532
typedef void (*amparallelrescan_function)amparallelrescan_function157,4629
typedef struct IndexAmRoutine163,4799
	NodeTag		type;165,4831
	uint16		amstrategies;171,5008
	uint16		amsupport;173,5090
	uint16		amoptsprocnum;175,5162
	bool		amcanorder;177,5242
	bool		amcanorderbyop;179,5334
	bool		amcanbackward;181,5399
	bool		amcanunique;183,5460
	bool		amcanmulticol;185,5525
	bool		amoptionalkey;187,5624
	bool		amsearcharray;189,5693
	bool		amsearchnulls;191,5764
	bool		amstorage;193,5851
	bool		amclusterable;195,5919
	bool		ampredlocks;197,5980
	bool		amcanparallel;199,6038
	bool		amcaninclude;201,6121
	bool		amusemaintenanceworkmem;203,6183
	uint8		amparallelvacuumoptions;205,6276
	Oid			amkeytype;207,6372
	ambuild_function ambuild;216,6641
	ambuildempty_function ambuildempty;217,6668
	aminsert_function aminsert;218,6705
	ambulkdelete_function ambulkdelete;219,6734
	amvacuumcleanup_function amvacuumcleanup;220,6771
	amcanreturn_function amcanreturn;221,6814
	amcostestimate_function amcostestimate;222,6867
	amoptions_function amoptions;223,6908
	amproperty_function amproperty;224,6939
	ambuildphasename_function ambuildphasename;225,6990
	amvalidate_function amvalidate;226,7053
	ambeginscan_function ambeginscan;227,7086
	amrescan_function amrescan;228,7121
	amgettuple_function amgettuple;229,7150
	amgetbitmap_function amgetbitmap;230,7201
	amendscan_function amendscan;231,7254
	ammarkpos_function ammarkpos;232,7285
	amrestrpos_function amrestrpos;233,7334
	amestimateparallelscan_function amestimateparallelscan;236,7445
	aminitparallelscan_function aminitparallelscan;237,7520
	amparallelrescan_function amparallelrescan;238,7587
} IndexAmRoutine;239,7650

/home/seinoyu/pgsql/master/postgresql/src/include/access/xloginsert.h,269
#define XLOGINSERT_H12,273
#define XLR_NORMAL_MAX_BLOCK_ID	27,761
#define XLR_NORMAL_RDATAS	28,796
#define REGBUF_FORCE_IMAGE	31,863
#define REGBUF_NO_IMAGE	32,925
#define REGBUF_WILL_INIT	33,990
#define REGBUF_STANDARD	35,1106
#define REGBUF_KEEP_DATA	38,1256

/home/seinoyu/pgsql/master/postgresql/src/include/access/printsimple.h,29
#define PRINTSIMPLE_H15,437

/home/seinoyu/pgsql/master/postgresql/src/include/access/brin_page.h,905
#define BRIN_PAGE_H18,479
typedef struct BrinSpecialSpace29,706
} BrinSpecialSpace;32,787
#define BrinPageType(42,1104
#define BrinPageFlags(46,1237
#define		BRIN_PAGETYPE_META	51,1436
#define		BRIN_PAGETYPE_REVMAP	52,1473
#define		BRIN_PAGETYPE_REGULAR	53,1511
#define BRIN_IS_META_PAGE(55,1551
#define BRIN_IS_REVMAP_PAGE(56,1626
#define BRIN_IS_REGULAR_PAGE(57,1705
#define		BRIN_EVACUATE_PAGE	60,1820
typedef struct BrinMetaPageData64,1888
	uint32		brinMagic;66,1922
	uint32		brinVersion;67,1942
	BlockNumber pagesPerRange;68,1964
	BlockNumber lastRevmapPage;69,1992
} BrinMetaPageData;70,2021
#define BRIN_CURRENT_VERSION	72,2042
#define BRIN_META_MAGIC	73,2074
#define BRIN_METAPAGE_BLKNO	75,2112
typedef struct RevmapContents78,2179
	ItemPointerData rm_tids[rm_tids85,2402
} RevmapContents;86,2431
#define REVMAP_CONTENT_SIZE 88,2450
#define REVMAP_PAGE_MAXITEMS 93,2640

/home/seinoyu/pgsql/master/postgresql/src/include/access/toast_helper.h,768
#define TOAST_HELPER_H15,423
	struct varlena *tai_oldexternal;tai_oldexternal32,887
	int32		tai_size;33,921
	uint8		tai_colflags;34,939
} ToastAttrInfo;35,961
	Relation	ttc_rel;48,1305
	Datum	   *ttc_values;ttc_values49,1368
	bool	   *ttc_isnull;ttc_isnull50,1428
	Datum	   *ttc_oldvalues;ttc_oldvalues51,1490
	bool	   *ttc_oldisnull;ttc_oldisnull52,1549
	uint8		ttc_flags;60,1896
	ToastAttrInfo *ttc_attr;ttc_attr61,1915
} ToastTupleContext;62,1941
#define TOAST_NEEDS_DELETE_OLD	77,2403
#define TOAST_NEEDS_FREE	78,2444
#define TOAST_HAS_NULLS	79,2480
#define TOAST_NEEDS_CHANGE	80,2516
#define TOASTCOL_NEEDS_DELETE_OLD	98,3071
#define TOASTCOL_NEEDS_FREE	99,3130
#define TOASTCOL_IGNORE	100,3179
#define TOASTCOL_INCOMPRESSIBLE	101,3215

/home/seinoyu/pgsql/master/postgresql/src/include/access/genam.h,1404
#define GENAM_H15,432
typedef struct IndexBuildResult30,742
	double		heap_tuples;32,776
	double		index_tuples;33,837
} IndexBuildResult;34,898
typedef struct IndexVacuumInfo44,1256
	Relation	index;46,1289
	bool		analyze_only;47,1339
	bool		report_progress;48,1402
	bool		estimated_count;49,1463
	int			message_level;50,1524
	double		num_heap_tuples;51,1588
	BufferAccessStrategy strategy;52,1645
} IndexVacuumInfo;53,1709
typedef struct IndexBulkDeleteResult72,2674
	BlockNumber num_pages;74,2713
	BlockNumber pages_removed;75,2769
	bool		estimated_count;76,2837
	double		num_index_tuples;77,2899
	double		tuples_removed;78,2949
	BlockNumber pages_deleted;79,3014
	BlockNumber pages_free;80,3072
} IndexBulkDeleteResult;81,3132
typedef bool (*IndexBulkDeleteCallback)IndexBulkDeleteCallback84,3236
typedef struct IndexScanDescData *IndexScanDesc;IndexScanDesc87,3358
typedef struct SysScanDescData *SysScanDesc;SysScanDesc88,3407
typedef struct ParallelIndexScanDescData *ParallelIndexScanDesc;ParallelIndexScanDesc90,3453
typedef enum IndexUniqueCheck112,4511
	UNIQUE_CHECK_NO,114,4543
	UNIQUE_CHECK_YES,115,4602
	UNIQUE_CHECK_PARTIAL,116,4666
	UNIQUE_CHECK_EXISTING	117,4726
} IndexUniqueCheck;118,4790
typedef struct IndexOrderByDistance122,4860
	double		value;124,4898
	bool		isnull;125,4914
} IndexOrderByDistance;126,4929
#define IndexScanIsValid(136,5083

/home/seinoyu/pgsql/master/postgresql/src/include/access/subtrans.h,63
#define SUBTRANS_H12,268
#define NUM_SUBTRANS_BUFFERS	15,337

/home/seinoyu/pgsql/master/postgresql/src/include/access/brin_revmap.h,74
#define BRIN_REVMAP_H13,296
typedef struct BrinRevmap BrinRevmap;24,560

/home/seinoyu/pgsql/master/postgresql/src/include/access/xlogutils.h,139
#define XLOG_UTILS_H12,271
	BLK_NEEDS_REDO,29,719
	BLK_DONE,30,788
	BLK_RESTORED,31,837
	BLK_NOTFOUND	32,903
} XLogRedoAction;34,998

/home/seinoyu/pgsql/master/postgresql/src/include/access/table.h,23
#define TABLE_H15,419

/home/seinoyu/pgsql/master/postgresql/src/include/access/amvalidate.h,207
#define AMVALIDATE_H13,374
typedef struct OpFamilyOpFuncGroup19,490
	Oid			lefttype;21,527
	Oid			righttype;22,579
	uint64		operatorset;23,634
	uint64		functionset;24,700
} OpFamilyOpFuncGroup;25,770

/home/seinoyu/pgsql/master/postgresql/src/include/access/hio.h,161
#define HIO_H15,426
typedef struct BulkInsertStateData29,756
	BufferAccessStrategy strategy;31,793
	Buffer		current_buf;32,861
} BulkInsertStateData;33,919

/home/seinoyu/pgsql/master/postgresql/src/include/access/tsmapi.h,1016
#define TSMAPI_H13,325
typedef void (*SampleScanGetSampleSize_function)SampleScanGetSampleSize_function23,490
typedef void (*InitSampleScan_function)InitSampleScan_function29,692
typedef void (*BeginSampleScan_function)BeginSampleScan_function32,781
typedef BlockNumber (*NextSampleBlock_function)NextSampleBlock_function37,925
typedef OffsetNumber (*NextSampleTuple_function)NextSampleTuple_function40,1033
typedef void (*EndSampleScan_function)EndSampleScan_function44,1181
typedef struct TsmRoutine56,1746
	NodeTag		type;58,1774
	List	   *parameterTypes;parameterTypes61,1864
	bool		repeatable_across_queries;64,1969
	bool		repeatable_across_scans;65,2003
	SampleScanGetSampleSize_function SampleScanGetSampleSize;68,2099
	InitSampleScan_function InitSampleScan;71,2223
	BeginSampleScan_function BeginSampleScan;72,2282
	NextSampleBlock_function NextSampleBlock;73,2325
	NextSampleTuple_function NextSampleTuple;74,2386
	EndSampleScan_function EndSampleScan;75,2429
} TsmRoutine;76,2486

/home/seinoyu/pgsql/master/postgresql/src/include/access/htup_details.h,5176
#define HTUP_DETAILS_H15,439
#define MaxTupleAttributeNumber 33,1159
#define MaxHeapAttributeNumber	47,1907
typedef struct HeapTupleFields121,6280
	TransactionId t_xmin;123,6313
	TransactionId t_xmax;124,6361
		CommandId	t_cid;128,6430
		TransactionId t_xvac;129,6498
	}			t_field3;130,6558
} HeapTupleFields;131,6573
typedef struct DatumTupleFields133,6593
	int32		datum_len_;135,6627
	int32		datum_typmod;137,6695
	Oid			datum_typeid;139,6759
} DatumTupleFields;150,7214
struct HeapTupleHeaderData152,7235
		HeapTupleFields t_heap;156,7274
		DatumTupleFields t_datum;157,7300
	}			t_choice;158,7328
	ItemPointerData t_ctid;160,7344
#define FIELDNO_HEAPTUPLEHEADERDATA_INFOMASK2 165,7513
	uint16		t_infomask2;166,7561
#define FIELDNO_HEAPTUPLEHEADERDATA_INFOMASK 168,7627
	uint16		t_infomask;169,7674
#define FIELDNO_HEAPTUPLEHEADERDATA_HOFF 171,7732
	uint8		t_hoff;172,7775
#define FIELDNO_HEAPTUPLEHEADERDATA_BITS 176,7861
	bits8		t_bits[t_bits177,7904
#define SizeofHeapTupleHeader 184,8045
#define HEAP_HASNULL	189,8158
#define HEAP_HASVARWIDTH	190,8216
#define HEAP_HASEXTERNAL	191,8287
#define HEAP_HASOID_OLD	192,8359
#define HEAP_XMAX_KEYSHR_LOCK	193,8421
#define HEAP_COMBOCID	194,8492
#define HEAP_XMAX_EXCL_LOCK	195,8550
#define HEAP_XMAX_LOCK_ONLY	196,8617
#define HEAP_XMAX_SHR_LOCK	199,8724
#define HEAP_LOCK_MASK	201,8798
#define HEAP_XMIN_COMMITTED	203,8897
#define HEAP_XMIN_INVALID	204,8956
#define HEAP_XMIN_FROZEN	205,9019
#define HEAP_XMAX_COMMITTED	206,9085
#define HEAP_XMAX_INVALID	207,9144
#define HEAP_XMAX_IS_MULTI	208,9207
#define HEAP_UPDATED	209,9272
#define HEAP_MOVED_OFF	210,9339
#define HEAP_MOVED_IN	213,9482
#define HEAP_MOVED 216,9626
#define HEAP_XACT_MASK	218,9679
#define HEAP_XMAX_IS_LOCKED_ONLY(230,10098
#define HEAP_LOCKED_UPGRADED(252,11202
#define HEAP_XMAX_IS_SHR_LOCKED(262,11491
#define HEAP_XMAX_IS_EXCL_LOCKED(264,11590
#define HEAP_XMAX_IS_KEYSHR_LOCKED(266,11691
#define HEAP_XMAX_BITS 270,11845
#define HEAP_NATTS_MASK	276,12024
#define HEAP_KEYS_UPDATED	278,12128
#define HEAP_HOT_UPDATED	280,12239
#define HEAP_ONLY_TUPLE	281,12300
#define HEAP2_XACT_MASK	283,12364
#define HEAP_TUPLE_HAS_MATCH	291,12695
#define HeapTupleHeaderGetRawXmin(308,13343
#define HeapTupleHeaderGetXmin(313,13424
#define HeapTupleHeaderSetXmin(319,13562
#define HeapTupleHeaderXminCommitted(324,13653
#define HeapTupleHeaderXminInvalid(329,13754
#define HeapTupleHeaderXminFrozen(335,13893
#define HeapTupleHeaderSetXminCommitted(340,14005
#define HeapTupleHeaderSetXminInvalid(346,14155
#define HeapTupleHeaderSetXminFrozen(352,14303
#define HeapTupleHeaderGetUpdateXid(365,14823
#define HeapTupleHeaderGetRawXmax(375,15090
#define HeapTupleHeaderSetXmax(380,15171
#define HeapTupleHeaderGetRawCommandId(391,15564
#define HeapTupleHeaderSetCmin(397,15725
#define HeapTupleHeaderSetCmax(405,15999
#define HeapTupleHeaderGetXvac(415,16272
#define HeapTupleHeaderSetXvac(423,16428
#define HeapTupleHeaderIsSpeculative(429,16585
#define HeapTupleHeaderGetSpeculativeToken(434,16716
#define HeapTupleHeaderSetSpeculativeToken(440,16869
#define HeapTupleHeaderIndicatesMovedPartitions(445,16997
#define HeapTupleHeaderSetMovedPartitions(449,17216
#define HeapTupleHeaderGetDatumLength(452,17355
#define HeapTupleHeaderSetDatumLength(455,17415
#define HeapTupleHeaderGetTypeId(458,17489
#define HeapTupleHeaderSetTypeId(463,17576
#define HeapTupleHeaderGetTypMod(468,17682
#define HeapTupleHeaderSetTypMod(473,17769
#define HeapTupleHeaderIsHotUpdated(484,18160
#define HeapTupleHeaderSetHotUpdated(491,18348
#define HeapTupleHeaderClearHotUpdated(496,18441
#define HeapTupleHeaderIsHeapOnly(501,18537
#define HeapTupleHeaderSetHeapOnly(506,18633
#define HeapTupleHeaderClearHeapOnly(511,18724
#define HeapTupleHeaderHasMatch(516,18818
#define HeapTupleHeaderSetMatch(521,18917
#define HeapTupleHeaderClearMatch(526,19010
#define HeapTupleHeaderGetNatts(531,19106
#define HeapTupleHeaderSetNatts(534,19186
#define HeapTupleHeaderHasExternal(539,19313
#define BITMAPLEN(547,19497
#define MaxHeapTupleSize 560,20135
#define MinHeapTupleSize 561,20224
#define MaxHeapTuplesPerPage	574,20868
#define MaxAttrSize	585,21367
#define MINIMAL_TUPLE_OFFSET 619,23171
#define MINIMAL_TUPLE_PADDING 621,23303
#define MINIMAL_TUPLE_DATA_OFFSET 623,23418
struct MinimalTupleData626,23496
	uint32		t_len;628,23522
	char		mt_padding[mt_padding630,23578
	uint16		t_infomask2;634,23679
	uint16		t_infomask;636,23745
	uint8		t_hoff;638,23803
	bits8		t_bits[t_bits642,23889
#define SizeofMinimalTupleHeader 649,24030
#define GETSTRUCT(655,24181
#define HeapTupleHasNulls(661,24319
#define HeapTupleNoNulls(664,24409
#define HeapTupleHasVarWidth(667,24494
#define HeapTupleAllFixed(670,24591
#define HeapTupleHasExternal(673,24681
#define HeapTupleIsHotUpdated(676,24778
#define HeapTupleSetHotUpdated(679,24865
#define HeapTupleClearHotUpdated(682,24954
#define HeapTupleIsHeapOnly(685,25047
#define HeapTupleSetHeapOnly(688,25130
#define HeapTupleClearHeapOnly(691,25215
#define fastgetattr(712,25822
#define heap_getattr(762,27500

/home/seinoyu/pgsql/master/postgresql/src/include/access/hash_xlog.h,2829
#define HASH_XLOG_H15,438
#define HASH_XLOG_FREE_OVFL_BUFS	22,614
#define XLOG_HASH_INIT_META_PAGE	27,693
#define XLOG_HASH_INIT_BITMAP_PAGE	28,762
#define XLOG_HASH_INSERT	29,835
#define XLOG_HASH_ADD_OVFL_PAGE 30,902
#define XLOG_HASH_SPLIT_ALLOCATE_PAGE	31,963
#define XLOG_HASH_SPLIT_PAGE	32,1040
#define XLOG_HASH_SPLIT_COMPLETE	33,1091
#define XLOG_HASH_MOVE_PAGE_CONTENTS	34,1165
#define XLOG_HASH_SQUEEZE_PAGE	36,1280
#define XLOG_HASH_DELETE	39,1420
#define XLOG_HASH_SPLIT_CLEANUP 40,1489
#define XLOG_HASH_UPDATE_META_PAGE	43,1656
#define XLOG_HASH_VACUUM_ONE_PAGE	45,1733
#define XLH_SPLIT_META_UPDATE_MASKS	51,1901
#define XLH_SPLIT_META_UPDATE_SPLITPOINT	52,1945
typedef struct xl_hash_insert62,2237
	OffsetNumber offnum;64,2269
} xl_hash_insert;65,2291
#define SizeOfHashInsert	67,2310
typedef struct xl_hash_add_ovfl_page80,2730
	uint16		bmsize;82,2769
	bool		bmpage_found;83,2786
} xl_hash_add_ovfl_page;84,2807
#define SizeOfHashAddOvflPage	86,2833
typedef struct xl_hash_split_allocate_page98,3172
	uint32		new_bucket;100,3217
	uint16		old_bucket_flag;101,3238
	uint16		new_bucket_flag;102,3264
	uint8		flags;103,3290
} xl_hash_split_allocate_page;104,3305
#define SizeOfHashSplitAllocPage	106,3337
typedef struct xl_hash_split_complete117,3651
	uint16		old_bucket_flag;119,3691
	uint16		new_bucket_flag;120,3717
} xl_hash_split_complete;121,3743
#define SizeOfHashSplitComplete 123,3770
typedef struct xl_hash_move_page_contents136,4175
	uint16		ntups;138,4219
	bool		is_prim_bucket_same_wrt;139,4235
} xl_hash_move_page_contents;142,4375
#define SizeOfHashMovePageContents	144,4406
typedef struct xl_hash_squeeze_page159,4973
	BlockNumber prevblkno;161,5011
	BlockNumber nextblkno;162,5035
	uint16		ntups;163,5059
	bool		is_prim_bucket_same_wrt;164,5075
	bool		is_prev_bucket_same_wrt;167,5215
} xl_hash_squeeze_page;171,5386
#define SizeOfHashSqueezePage	173,5411
typedef struct xl_hash_delete184,5749
	bool		clear_dead_marking;186,5781
	bool		is_primary_bucket_page;188,5885
} xl_hash_delete;190,5984
#define SizeOfHashDelete	192,6003
typedef struct xl_hash_update_meta_page201,6249
	double		ntuples;203,6291
} xl_hash_update_meta_page;204,6309
#define SizeOfHashUpdateMetaPage	206,6338
typedef struct xl_hash_init_meta_page216,6583
	double		num_tuples;218,6623
	RegProcedure procid;219,6644
	uint16		ffactor;220,6666
} xl_hash_init_meta_page;221,6684
#define SizeOfHashInitMetaPage	223,6711
typedef struct xl_hash_init_bitmap_page234,6987
	uint16		bmsize;236,7029
} xl_hash_init_bitmap_page;237,7046
#define SizeOfHashInitBitmapPage	239,7075
typedef struct xl_hash_vacuum_one_page251,7382
	TransactionId latestRemovedXid;253,7423
	int			ntuples;254,7456
} xl_hash_vacuum_one_page;257,7520
#define SizeOfHashVacuumOnePage 259,7548

/home/seinoyu/pgsql/master/postgresql/src/include/access/multixact.h,1444
#define MULTIXACT_H12,274
#define InvalidMultiXactId	23,525
#define FirstMultiXactId	24,570
#define MaxMultiXactId	25,613
#define MultiXactIdIsValid(27,665
#define MaxMultiXactOffset	29,732
#define NUM_MULTIXACTOFFSET_BUFFERS	32,841
#define NUM_MULTIXACTMEMBER_BUFFERS	33,880
	MultiXactStatusForKeyShare 42,1146
	MultiXactStatusForShare 43,1182
	MultiXactStatusForNoKeyUpdate 44,1215
	MultiXactStatusForUpdate 45,1254
	MultiXactStatusNoKeyUpdate 47,1338
	MultiXactStatusUpdate 49,1407
} MultiXactStatus;50,1437
#define MaxMultiXactStatus 52,1457
#define ISUPDATE_from_mxstatus(55,1563
typedef struct MultiXactMember59,1647
	TransactionId xid;61,1680
	MultiXactStatus status;62,1700
} MultiXactMember;63,1725
#define XLOG_MULTIXACT_ZERO_OFF_PAGE	71,1826
#define XLOG_MULTIXACT_ZERO_MEM_PAGE	72,1868
#define XLOG_MULTIXACT_CREATE_ID	73,1910
#define XLOG_MULTIXACT_TRUNCATE_ID	74,1949
typedef struct xl_multixact_create76,1991
	MultiXactId mid;78,2028
	MultiXactOffset moff;79,2073
	int32		nmembers;80,2139
	MultiXactMember members[members81,2186
} xl_multixact_create;82,2235
#define SizeOfMultiXactCreate 84,2259
typedef struct xl_multixact_truncate86,2331
	Oid			oldestMultiDB;88,2370
	MultiXactId startTruncOff;91,2443
	MultiXactId endTruncOff;92,2505
	MultiXactOffset startTruncMemb;95,2582
	MultiXactOffset endTruncMemb;96,2615
} xl_multixact_truncate;97,2646
#define SizeOfMultiXactTruncate 99,2672

/home/seinoyu/pgsql/master/postgresql/src/include/access/twophase_rmgr.h,355
#define TWOPHASE_RMGR_H15,448
typedef void (*TwoPhaseCallback)TwoPhaseCallback17,473
typedef uint8 TwoPhaseRmgrId;19,577
#define TWOPHASE_RM_END_ID	24,645
#define TWOPHASE_RM_LOCK_ID	25,676
#define TWOPHASE_RM_PGSTAT_ID	26,708
#define TWOPHASE_RM_MULTIXACT_ID	27,741
#define TWOPHASE_RM_PREDICATELOCK_ID	28,776
#define TWOPHASE_RM_MAX_ID	29,815

/home/seinoyu/pgsql/master/postgresql/src/include/libpq/pqcomm.h,2063
#define PQCOMM_H17,544
#define ss_family 30,810
#define ss_len 37,974
#define HAVE_STRUCT_SOCKADDR_STORAGE_SS_LEN 38,998
struct sockaddr_storage44,1162
		struct sockaddr sa;48,1198
		int64		ss_align;49,1259
		char		ss_pad[ss_pad50,1319
	}			ss_stuff;51,1378
#define ss_family	54,1397
#define ss_len	57,1533
#define HAVE_STRUCT_SOCKADDR_STORAGE_SS_LEN 58,1568
	struct sockaddr_storage addr;64,1687
	ACCEPT_TYPE_ARG3 salen;65,1718
} SockAddr;66,1743
#define UNIXSOCK_PATH(70,1823
#define UNIXSOCK_PATH_BUFLEN 86,2537
#define PG_PROTOCOL_MAJOR(104,3140
#define PG_PROTOCOL_MINOR(105,3181
#define PG_PROTOCOL(106,3229
#define PG_PROTOCOL_EARLIEST	110,3351
#define PG_PROTOCOL_LATEST	111,3397
typedef uint32 ProtocolVersion;113,3443
typedef ProtocolVersion MsgType;115,3512
typedef uint32 PacketLen;124,3685
#define SM_DATABASE	133,3933
#define SM_USER	134,3957
#define SM_DATABASE_USER 136,4035
#define SM_OPTIONS	137,4099
#define SM_UNUSED	138,4122
#define SM_TTY	139,4144
typedef struct StartupPacket141,4165
	ProtocolVersion protoVersion;143,4196
	char		database[database144,4250
	char		user[user146,4340
	char		options[options147,4378
	char		unused[unused148,4437
	char		tty[tty149,4476
} StartupPacket;150,4523
#define MAX_STARTUP_PACKET_LENGTH 160,4818
#define AUTH_REQ_OK	165,4931
#define AUTH_REQ_KRB4	166,4984
#define AUTH_REQ_KRB5	167,5052
#define AUTH_REQ_PASSWORD	168,5120
#define AUTH_REQ_CRYPT	169,5163
#define AUTH_REQ_MD5	170,5235
#define AUTH_REQ_SCM_CREDS	171,5278
#define AUTH_REQ_GSS	172,5338
#define AUTH_REQ_GSS_CONT	173,5390
#define AUTH_REQ_SSPI	174,5447
#define AUTH_REQ_SASL	175,5508
#define AUTH_REQ_SASL_CONT 176,5568
#define AUTH_REQ_SASL_FIN 177,5633
typedef uint32 AuthRequest;179,5689
#define CANCEL_REQUEST_CODE 190,6075
typedef struct CancelRequestPacket192,6127
	MsgType		cancelRequestCode;195,6225
	uint32		backendPID;196,6294
	uint32		cancelAuthCode;197,6346
} CancelRequestPacket;198,6408
#define NEGOTIATE_SSL_CODE 205,6542
#define NEGOTIATE_GSS_CODE 206,6592

/home/seinoyu/pgsql/master/postgresql/src/include/libpq/pqmq.h,22
#define PQMQ_H14,437

/home/seinoyu/pgsql/master/postgresql/src/include/libpq/hba.h,2618
#define HBA_H12,242
typedef enum UserAuth25,558
	uaReject,27,582
	uaImplicitReject,28,593
	uaTrust,29,646
	uaIdent,30,656
	uaPassword,31,666
	uaMD5,32,679
	uaSCRAM,33,687
	uaGSS,34,697
	uaSSPI,35,705
	uaPAM,36,714
	uaBSD,37,722
	uaLDAP,38,730
	uaCert,39,739
	uaRADIUS,40,748
	uaPeer41,759
#define USER_AUTH_LAST 42,767
} UserAuth;43,835
typedef enum IPCompareMethod45,848
	ipCmpMask,47,879
	ipCmpSameHost,48,891
	ipCmpSameNet,49,907
	ipCmpAll50,922
} IPCompareMethod;51,932
typedef enum ConnType53,952
	ctLocal,55,976
	ctHost,56,986
	ctHostSSL,57,995
	ctHostNoSSL,58,1007
	ctHostGSS,59,1021
	ctHostNoGSS,60,1033
} ConnType;61,1047
typedef enum ClientCertMode63,1060
	clientCertOff,65,1090
	clientCertCA,66,1106
	clientCertFull67,1121
} ClientCertMode;68,1137
typedef struct HbaLine70,1156
	int			linenumber;72,1181
	char	   *rawline;rawline73,1200
	ConnType	conntype;74,1219
	List	   *databases;databases75,1239
	List	   *roles;roles76,1260
	struct sockaddr_storage addr;77,1277
	struct sockaddr_storage mask;78,1308
	IPCompareMethod ip_cmp_method;79,1339
	char	   *hostname;hostname80,1371
	UserAuth	auth_method;81,1391
	char	   *usermap;usermap83,1415
	char	   *pamservice;pamservice84,1434
	bool		pam_use_hostname;85,1456
	bool		ldaptls;86,1481
	char	   *ldapscheme;ldapscheme87,1497
	char	   *ldapserver;ldapserver88,1519
	int			ldapport;89,1541
	char	   *ldapbinddn;ldapbinddn90,1558
	char	   *ldapbindpasswd;ldapbindpasswd91,1580
	char	   *ldapsearchattribute;ldapsearchattribute92,1606
	char	   *ldapsearchfilter;ldapsearchfilter93,1637
	char	   *ldapbasedn;ldapbasedn94,1665
	int			ldapscope;95,1687
	char	   *ldapprefix;ldapprefix96,1705
	char	   *ldapsuffix;ldapsuffix97,1727
	ClientCertMode clientcert;98,1749
	char	   *krb_realm;krb_realm99,1777
	bool		include_realm;100,1798
	bool		compat_realm;101,1820
	bool		upn_username;102,1841
	List	   *radiusservers;radiusservers103,1862
	char	   *radiusservers_s;radiusservers_s104,1887
	List	   *radiussecrets;radiussecrets105,1914
	char	   *radiussecrets_s;radiussecrets_s106,1939
	List	   *radiusidentifiers;radiusidentifiers107,1966
	char	   *radiusidentifiers_s;radiusidentifiers_s108,1995
	List	   *radiusports;radiusports109,2026
	char	   *radiusports_s;radiusports_s110,2049
} HbaLine;111,2074
typedef struct IdentLine113,2086
	int			linenumber;115,2113
	char	   *usermap;usermap117,2133
	char	   *ident_user;ident_user118,2152
	char	   *pg_role;pg_role119,2174
	regex_t		re;120,2193
} IdentLine;121,2207
typedef struct Port hbaPort;124,2274

/home/seinoyu/pgsql/master/postgresql/src/include/libpq/libpq-fs.h,77
#define LIBPQ_FS_H15,459
#define INV_WRITE	21,547
#define INV_READ	22,577

/home/seinoyu/pgsql/master/postgresql/src/include/libpq/pqsignal.h,216
#define PQSIGNAL_H14,440
#define PG_SETMASK(19,495
typedef int sigset_t;22,608
#define PG_SETMASK(26,667
#define sigemptyset(27,715
#define sigfillset(28,754
#define sigaddset(29,794
#define sigdelset(30,855

/home/seinoyu/pgsql/master/postgresql/src/include/libpq/scram.h,141
#define PG_SCRAM_H14,404
#define SASL_EXCHANGE_CONTINUE	20,521
#define SASL_EXCHANGE_SUCCESS	21,555
#define SASL_EXCHANGE_FAILURE	22,588

/home/seinoyu/pgsql/master/postgresql/src/include/libpq/pqformat.h,276
#define PQFORMAT_H14,447
pq_writeint8(47,1762
pq_writeint16(61,2115
pq_writeint32(75,2485
pq_writeint64(89,2855
pq_writestring(109,3440
pq_sendint8(129,3913
pq_sendint16(137,4091
pq_sendint32(145,4273
pq_sendint64(153,4455
pq_sendbyte(161,4633
pq_sendint(172,4847

/home/seinoyu/pgsql/master/postgresql/src/include/libpq/ifaddr.h,81
#define IFADDR_H13,357
typedef void (*PgIfAddrCallback)PgIfAddrCallback17,428

/home/seinoyu/pgsql/master/postgresql/src/include/libpq/be-fsstubs.h,28
#define BE_FSSTUBS_H15,390

/home/seinoyu/pgsql/master/postgresql/src/include/libpq/libpq.h,829
#define LIBPQ_H15,422
	void		(*comm_reset)comm_reset26,566
	int			(*flush)flush27,595
	int			(*flush_if_writable)flush_if_writable28,619
	bool		(*is_send_pending)is_send_pending29,655
	int			(*putmessage)putmessage30,689
	void		(*putmessage_noblock)putmessage_noblock31,753
	void		(*startcopyout)startcopyout32,825
	void		(*endcopyout)endcopyout33,856
} PQcommMethods;34,896
#define pq_comm_reset(38,970
#define pq_flush(39,1024
#define pq_flush_if_writable(40,1068
#define pq_is_send_pending(41,1136
#define pq_putmessage(42,1200
#define pq_putmessage_noblock(44,1287
#define pq_startcopyout(46,1390
#define pq_endcopyout(47,1448
enum ssl_protocol_versions116,3603
	PG_TLS_ANY 118,3632
	PG_TLS1_VERSION,119,3649
	PG_TLS1_1_VERSION,120,3667
	PG_TLS1_2_VERSION,121,3687
	PG_TLS1_3_VERSION,122,3707

/home/seinoyu/pgsql/master/postgresql/src/include/libpq/auth.h,107
#define AUTH_H15,422
typedef void (*ClientAuthentication_hook_type)ClientAuthentication_hook_type26,676

/home/seinoyu/pgsql/master/postgresql/src/include/libpq/be-gssapi-common.h,34
#define BE_GSSAPI_COMMON_H15,474

/home/seinoyu/pgsql/master/postgresql/src/include/libpq/libpq-be.h,2097
#define LIBPQ_BE_H19,638
#undef HAVE_GETADDRINFO42,1224
#define SECURITY_WIN3247,1305
#undef SECURITY_WIN3252,1420
	void	   *value;value60,1545
	int			length;61,1562
} gss_buffer_desc;62,1577
typedef enum CAC_state71,1718
	CAC_OK,73,1743
	CAC_OK, CAC_STARTUP,73,1743
	CAC_OK, CAC_STARTUP, CAC_SHUTDOWN,73,1743
	CAC_OK, CAC_STARTUP, CAC_SHUTDOWN, CAC_RECOVERY,73,1743
	CAC_OK, CAC_STARTUP, CAC_SHUTDOWN, CAC_RECOVERY, CAC_TOOMANY,73,1743
	CAC_WAITBACKUP74,1806
} CAC_state;75,1822
	gss_buffer_desc outbuf;84,1945
	gss_cred_id_t cred;86,2022
	gss_ctx_id_t ctx;87,2076
	gss_name_t	name;88,2129
	char	   *princ;princ89,2174
	bool		auth;91,2275
	bool		enc;92,2323
} pg_gssinfo;94,2375
typedef struct Port120,3689
	pgsocket	sock;122,3711
	bool		noblock;123,3751
	ProtocolVersion proto;124,3810
	SockAddr	laddr;125,3864
	SockAddr	raddr;126,3913
	char	   *remote_host;remote_host127,3959
	char	   *remote_hostname;remote_hostname128,4021
	int			remote_hostname_resolv;130,4114
	int			remote_hostname_errcode;131,4161
	char	   *remote_port;remote_port132,4209
	CAC_state	canAcceptConnections;133,4262
	char	   *database_name;database_name140,4553
	char	   *user_name;user_name141,4578
	char	   *cmdline_options;cmdline_options142,4599
	List	   *guc_options;guc_options143,4626
	char	   *application_name;application_name150,4875
	HbaLine    *hba;hba155,4984
	int			default_keepalives_idle;164,5271
	int			default_keepalives_interval;165,5303
	int			default_keepalives_count;166,5339
	int			default_tcp_user_timeout;167,5372
	int			keepalives_idle;168,5405
	int			keepalives_interval;169,5429
	int			keepalives_count;170,5457
	int			tcp_user_timeout;171,5482
	pg_gssinfo *gss;gss182,5740
	void	   *gss;gss184,5764
	bool		ssl_in_use;190,5816
	char	   *peer_cn;peer_cn191,5835
	bool		peer_cert_valid;192,5854
	SSL		   *ssl;ssl199,6043
	X509	   *peer;peer200,6058
} Port;202,6081
#define FILE_DH2048 215,6541
#define HAVE_BE_TLS_GET_CERTIFICATE_HASH286,8809
typedef void (*openssl_tls_init_hook_typ)openssl_tls_init_hook_typ292,9023

/home/seinoyu/pgsql/master/postgresql/src/include/libpq/crypt.h,178
#define PG_CRYPT_H14,404
typedef enum PasswordType27,829
	PASSWORD_TYPE_PLAINTEXT 29,857
	PASSWORD_TYPE_MD5,30,887
	PASSWORD_TYPE_SCRAM_SHA_25631,907
} PasswordType;32,936

/home/seinoyu/pgsql/master/postgresql/src/include/regex/regexport.h,91
#define _REGEXPORT_H_29,1301
	int			co;36,1416
	int			to;37,1471
} regex_arc_t;38,1509

/home/seinoyu/pgsql/master/postgresql/src/include/regex/regcustom.h,474
#define FUNCPTR(59,2228
#define MALLOC(60,2269
#define FREE(61,2298
#define REALLOC(62,2328
#define assert(63,2366
typedef pg_wchar chr;66,2438
typedef unsigned uchr;67,2484
#define CHR(69,2551
#define DIGITVAL(70,2629
#define CHRBITS 71,2695
#define CHR_MIN 72,2758
#define CHR_MAX 73,2828
#define CHR_IS_IN_RANGE(85,3449
#define MAX_SIMPLE_CHR	95,3912
#define iscalnum(98,4008
#define iscalpha(99,4045
#define iscdigit(100,4082
#define iscspace(101,4119

/home/seinoyu/pgsql/master/postgresql/src/include/regex/regerrs.h,425
	REG_OKAY,6,41
	REG_NOMATCH,10,91
	REG_BADPAT,14,144
	REG_ECOLLATE,18,212
	REG_ECTYPE,22,277
	REG_EESCAPE,26,336
	REG_ESUBREG,30,400
	REG_EBRACK,34,466
	REG_EPAREN,38,526
	REG_EBRACE,42,589
	REG_BADBR,46,647
	REG_ERANGE,50,708
	REG_ESPACE,54,767
	REG_BADRPT,58,816
	REG_ASSERT,62,878
	REG_INVARG,66,950
	REG_MIXED,70,1020
	REG_BADOPT,74,1097
	REG_ETOOBIG,78,1156
	REG_ECOLORS,82,1227
	REG_CANCEL,86,1280

/home/seinoyu/pgsql/master/postgresql/src/include/regex/regguts.h,5295
#define  NDEBUG	51,1875
#define DISCARD 58,1978
#define VS(61,2050
#define FUNCPTR(66,2172
#define MALLOC(71,2262
#define REALLOC(74,2313
#define FREE(77,2373
#define _POSIX2_RE_DUP_MAX	82,2509
#define NOTREACHED	91,2597
#define DUPMAX	93,2619
#define DUPINF	94,2653
#define REMAGIC 96,2680
#define LATYPE_AHEAD_POS	99,2785
#define LATYPE_AHEAD_NEG	100,2838
#define LATYPE_BEHIND_POS	101,2891
#define LATYPE_BEHIND_NEG	102,2946
#define LATYPE_IS_POS(103,3001
#define LATYPE_IS_AHEAD(104,3039
#define FDEBUG(112,3168
#define MDEBUG(114,3277
#define FDEBUG(116,3353
#define MDEBUG(117,3380
#define UBITS	125,3447
#define BSET(126,3491
#define ISBSET(127,3562
typedef short color;134,3766
#define MAX_COLOR	136,3817
#define COLORLESS	137,3889
#define WHITE	138,3936
struct colordesc154,4606
	int			nschrs;156,4625
	int			nuchrs;157,4685
	color		sub;158,4750
#define  NOSUB	159,4812
	struct arc *arcs;arcs160,4882
	chr			firstchr;161,4941
	int			flags;162,5006
#define  FREECOL 163,5052
#define  PSEUDO 164,5096
#define  UNUSEDCOLOR(165,5152
#define NUM_CCLASSES 197,6789
typedef struct colormaprange199,6855
	chr			cmin;201,6886
	chr			cmax;202,6945
	int			rownum;203,6958
} colormaprange;204,7018
struct colormap206,7036
	int			magic;208,7054
#define  CMMAGIC 209,7068
	struct vars *v;v210,7091
	size_t		ncds;211,7145
	size_t		max;212,7205
	color		free;213,7265
	struct colordesc *cd;cd214,7322
#define  CDEND(215,7383
	color	   *locolormap;locolormap218,7479
	int			classbits[classbits221,7590
	int			numcmranges;222,7646
	colormaprange *cmranges;cmranges223,7697
	color	   *hicolormap;hicolormap224,7749
	int			maxarrayrows;225,7806
	int			hiarrayrows;226,7864
	int			hiarraycols;227,7918
#define  NINLINECDS 230,8047
	struct colordesc cdspace[cdspace231,8082
#define GETCOLOR(235,8196
struct cvec256,9072
	int			nchrs;258,9086
	int			chrspace;259,9123
	chr		   *chrs;chrs260,9182
	int			nranges;261,9232
	int			rangespace;262,9284
	chr		   *ranges;ranges263,9349
	int			cclasscode;264,9406
struct arc276,9636
	int			type;278,9649
	color		co;279,9707
	struct state *from;from280,9719
	struct state *to;to281,9787
	struct arc *outchain;outchain282,9828
	struct arc *outchainRev;outchainRev283,9899
#define  freechain	284,9963
	struct arc *inchain;inchain285,10031
	struct arc *inchainRev;inchainRev286,10084
	struct arc *colorchain;colorchain287,10145
	struct arc *colorchainRev;colorchainRev288,10203
struct arcbatch291,10272
	struct arcbatch *next;next293,10331
#define  ABSIZE 294,10355
	struct arc	a[a295,10375
struct state298,10402
	int			no;300,10417
#define  FREESTATE	301,10428
	char		flag;302,10453
	int			nins;303,10495
	struct arc *ins;ins304,10533
	int			nouts;305,10575
	struct arc *outs;outs306,10615
	struct arc *free;free307,10659
	struct state *tmp;tmp308,10705
	struct state *next;next309,10768
	struct state *prev;prev310,10822
	struct arcbatch oas;311,10862
	int			noas;312,10933
struct nfa315,10996
	struct state *pre;pre317,11009
	struct state *init;init318,11055
	struct state *final;final319,11098
	struct state *post;post320,11139
	int			nstates;321,11185
	struct state *states;states322,11229
	struct state *slast;slast323,11278
	struct state *free;free324,11325
	struct colormap *cm;cm325,11364
	color		bos[bos326,11407
	color		eos[eos327,11471
	struct vars *v;v328,11535
	struct nfa *parent;parent329,11596
struct carc348,12319
	color		co;350,12333
	int			to;351,12383
struct cnfa354,12425
	int			nstates;356,12439
	int			ncolors;357,12479
	int			flags;358,12542
#define  HASLACONS	359,12556
	int			pre;360,12614
	int			post;361,12653
	color		bos[bos362,12696
	color		eos[eos363,12760
	char	   *stflags;stflags364,12824
#define  CNFA_NOPROGRESS	365,12882
	struct carc **states;states366,12949
	struct carc *arcs;arcs368,13081
#define ZAPCNFA(371,13136
#define NULLCNFA(372,13179
#define REG_MAX_COMPILE_SPACE 383,13675
struct subre408,14812
	char		op;410,14827
	char		flags;411,14868
#define  LONGER 412,14882
#define  SHORTER 413,14932
#define  MIXED	414,14983
#define  CAP	415,15034
#define  BACKR	416,15083
#define  INUSE	417,15132
#define  NOPROP 418,15182
#define  LMIX(419,15243
#define  SMIX(420,15292
#define  UP(421,15342
#define  MESSY(422,15404
#define  PREF(423,15447
#define  PREF2(424,15477
#define  COMBINE(425,15541
	short		id;426,15598
	int			subno;427,15644
	short		min;429,15756
	short		max;430,15818
	struct subre *left;left431,15880
	struct subre *right;right432,15950
	struct state *begin;begin433,15999
	struct state *end;end434,16049
	struct cnfa cnfa;435,16102
	struct subre *chain;chain436,16151
struct fns445,16338
	void		FUNCPTR(447,16351
	int			FUNCPTR(448,16386
	int			FUNCPTR(449,16428
#define CANCEL_REQUESTED(452,16472
#define STACK_TOO_DEEP(455,16562
struct guts462,16707
	int			magic;464,16721
#define  GUTSMAGIC	465,16735
	int			cflags;466,16762
	long		info;467,16807
	size_t		nsub;468,16844
	struct subre *tree;tree469,16883
	struct cnfa search;470,16904
	int			ntree;471,16961
	struct colormap cmap;472,17011
	int			FUNCPTR(473,17034
	struct subre *lacons;lacons474,17095
	int			nlacons;475,17154

/home/seinoyu/pgsql/master/postgresql/src/include/regex/regex.h,2285
#define _REGEX_H_	2,18
typedef long regoff_t;48,1821
	int			re_magic;57,1960
	size_t		re_nsub;58,1997
	long		re_info;59,2047
#define  REG_UBACKREF	60,2091
#define  REG_ULOOKAROUND	61,2122
#define  REG_UBOUNDS	62,2155
#define  REG_UBRACES	63,2184
#define  REG_UBSALNUM	64,2213
#define  REG_UPBOTCH	65,2244
#define  REG_UBBS	66,2273
#define  REG_UNONPOSIX	67,2300
#define  REG_UUNSPEC	68,2332
#define  REG_UUNPORT	69,2361
#define  REG_ULOCALE	70,2390
#define  REG_UEMPTYMATCH	71,2419
#define  REG_UIMPOSSIBLE	72,2452
#define  REG_USHORTEST	73,2485
	int			re_csize;74,2517
	char	   *re_endp;re_endp75,2559
	Oid			re_collation;76,2615
	char	   *re_guts;re_guts78,2736
	char	   *re_fns;re_fns79,2802
} regex_t;80,2820
	regoff_t	rm_so;85,2904
	regoff_t	rm_eo;86,2948
} regmatch_t;87,2990
	regmatch_t	rm_extend;92,3064
} rm_detail_t;93,3109
#define REG_BASIC	100,3161
#define REG_EXTENDED	101,3212
#define REG_ADVF	102,3251
#define REG_ADVANCED	103,3308
#define REG_QUOTE	104,3369
#define REG_NOSPEC	105,3429
#define REG_ICASE	106,3483
#define REG_NOSUB	107,3527
#define REG_EXPANDED	108,3591
#define REG_NLSTOP	109,3665
#define REG_NLANCH	110,3725
#define REG_NEWLINE 111,3787
#define REG_PEND	112,3851
#define REG_EXPECT	113,3917
#define REG_BOSONLY 114,3992
#define REG_DUMP	115,4064
#define REG_FAKE	116,4121
#define REG_PROGRESS	117,4178
#define REG_NOTBOL	124,4273
#define REG_NOTEOL	125,4319
#define REG_STARTEND	126,4365
#define REG_FTRACE	127,4427
#define REG_MTRACE	128,4480
#define REG_SMALL	129,4533
#define REG_OKAY	137,4742
#define REG_NOMATCH 138,4789
#define REG_BADPAT	139,4836
#define REG_ECOLLATE	140,4881
#define REG_ECTYPE	141,4938
#define REG_EESCAPE 142,4992
#define REG_ESUBREG 143,5049
#define REG_EBRACK	144,5109
#define REG_EPAREN	145,5164
#define REG_EBRACE	146,5222
#define REG_BADBR	147,5275
#define REG_ERANGE	148,5332
#define REG_ESPACE	149,5386
#define REG_BADRPT	150,5430
#define REG_ASSERT	151,5487
#define REG_INVARG	152,5551
#define REG_MIXED	153,5616
#define REG_BADOPT	154,5689
#define REG_ETOOBIG 155,5743
#define REG_ECOLORS 156,5808
#define REG_CANCEL	157,5855
#define REG_ATOI	159,5950
#define REG_ITOA	160,6013
#define REG_PREFIX	162,6122
#define REG_EXACT	163,6180

/home/seinoyu/pgsql/master/postgresql/src/include/pg_config_ext.h,29
#define PG_INT64_TYPE 8,292

/home/seinoyu/pgsql/master/postgresql/src/pl/plperl/ppport.h,25219
#define _P_P_PORTABILITY_H_3168,70595
#  define DPPP_NAMESPACE 3171,70647
#define DPPP_CAT2(3174,70686
#define DPPP_(3175,70719
#    define PERL_PATCHLEVEL_H_IMPLICIT3179,70885
#    define PERL_REVISION 3186,71121
#    define PERL_VERSION 3188,71179
#    define PERL_SUBVERSION 3189,71222
#define _dpppDEC2BCD(3195,71357
#define PERL_BCDVERSION 3196,71435
#  define dTHR 3205,71780
#  define dTHX 3208,71847
#  define dTHXa(3212,71916
#  define pTHX 3215,71983
#  define pTHX_3219,72051
#  define aTHX3223,72088
#  define aTHX_3227,72125
#    define aTHXR 3232,72204
#    define aTHXR_ 3233,72227
#    define aTHXR3235,72259
#    define aTHXR_3236,72277
#  define dTHXR 3238,72305
#  define aTHXR 3240,72333
#  define aTHXR_ 3241,72355
#  define dTHXR 3242,72378
#  define dTHXoa(3245,72422
#  define PERL_UCHAR_MIN 3253,72549
#    define PERL_UCHAR_MAX 3258,72643
#      define PERL_UCHAR_MAX 3261,72725
#      define PERL_UCHAR_MAX 3263,72790
#  define PERL_USHORT_MIN 3269,72901
#    define PERL_USHORT_MAX 3274,72999
#      define PERL_USHORT_MAX 3277,73085
#        define PERL_USHORT_MAX 3280,73176
#        define PERL_USHORT_MAX 3282,73248
#    define PERL_SHORT_MAX 3290,73394
#      define PERL_SHORT_MAX 3293,73502
#        define PERL_SHORT_MAX 3296,73581
#        define PERL_SHORT_MAX 3298,73642
#    define PERL_SHORT_MIN 3306,73789
#      define PERL_SHORT_MIN 3309,73863
#        define PERL_SHORT_MIN 3312,73942
#        define PERL_SHORT_MIN 3314,74003
#    define PERL_UINT_MAX 3322,74151
#      define PERL_UINT_MAX 3325,74229
#      define PERL_UINT_MAX 3327,74291
#  define PERL_UINT_MIN 3333,74388
#    define PERL_INT_MAX 3338,74476
#      define PERL_INT_MAX 3341,74576
#      define PERL_INT_MAX 3343,74627
#    define PERL_INT_MIN 3350,74748
#      define PERL_INT_MIN 3353,74814
#      define PERL_INT_MIN 3355,74865
#    define PERL_ULONG_MAX 3362,74996
#      define PERL_ULONG_MAX 3365,75078
#      define PERL_ULONG_MAX 3367,75143
#  define PERL_ULONG_MIN 3373,75243
#    define PERL_LONG_MAX 3378,75336
#      define PERL_LONG_MAX 3381,75406
#      define PERL_LONG_MAX 3383,75460
#    define PERL_LONG_MIN 3390,75587
#      define PERL_LONG_MIN 3393,75657
#      define PERL_LONG_MIN 3395,75711
#      define PERL_UQUAD_MAX 3403,75911
#        define PERL_UQUAD_MAX 3406,76012
#        define PERL_UQUAD_MAX 3408,76090
#    define PERL_UQUAD_MIN 3414,76205
#      define PERL_QUAD_MAX 3419,76315
#        define PERL_QUAD_MAX 3422,76404
#        define PERL_QUAD_MAX 3424,76471
#      define PERL_QUAD_MIN 3431,76619
#        define PERL_QUAD_MIN 3434,76708
#        define PERL_QUAD_MIN 3436,76775
#  define IVTYPE 3446,76972
#  define IV_MIN 3450,77040
#  define IV_MAX 3454,77117
#  define UV_MIN 3458,77194
#  define UV_MAX 3462,77272
#  define IVSIZE 3467,77369
#  define IVTYPE 3474,77500
#  define IV_MIN 3478,77574
#  define IV_MAX 3482,77652
#  define UV_MIN 3486,77730
#  define UV_MAX 3490,77809
#  define IVSIZE 3495,77914
#  define IVTYPE 3501,78014
#  define IV_MIN 3505,78083
#  define IV_MAX 3509,78161
#  define UV_MIN 3513,78239
#  define UV_MAX 3517,78318
#  define IVSIZE 3522,78419
#  define IVSIZE 3529,78525
#  define PERL_QUAD_MIN 3533,78598
#  define PERL_QUAD_MAX 3537,78676
#  define PERL_UQUAD_MIN 3541,78755
#  define PERL_UQUAD_MAX 3545,78834
#  define IVTYPE 3550,78911
#  define IV_MIN 3554,78980
#  define IV_MAX 3558,79058
#  define UV_MIN 3562,79136
#  define UV_MAX 3566,79215
#    define IVSIZE 3573,79320
#    define IVSIZE 3575,79356
#  define UVTYPE 3579,79454
#  define UVSIZE 3583,79534
#  define sv_setuv(3586,79606
#  define newSVuv(3596,80022
#  define sv_2uv(3599,80138
#  define SvUVX(3603,80269
#  define SvUVXx(3607,80349
#  define SvUV(3611,80421
#  define SvUVx(3615,80521
#  define sv_uv(3622,80685
#  define SvUOK(3626,80785
#  define XST_mUV(3629,80841
#  define XSRETURN_UV(3633,80945
#  define PUSHu(3636,81059
#  define XPUSHu(3640,81183
#  define memNE(3645,81324
#  define memEQ(3649,81405
#  define memNE(3654,81493
#  define memEQ(3658,81572
#  define MoveD(3663,81659
#  define CopyD(3667,81770
#  define ZeroD(3672,81898
#  define ZeroD(3677,82004
#  define PoisonWith(3682,82127
#  define PoisonNew(3686,82245
#  define PoisonFree(3690,82336
#  define Poison(3694,82423
#  define Newx(3697,82502
#  define Newxc(3701,82578
#  define Newxz(3705,82657
#      define PERL_UNUSED_DECL3711,82848
#      define PERL_UNUSED_DECL 3713,82889
#    define PERL_UNUSED_DECL3716,82963
#    define PERL_UNUSED_ARG(3723,83119
#    define PERL_UNUSED_ARG(3725,83177
#  define PERL_UNUSED_VAR(3730,83259
#    define PERL_UNUSED_CONTEXT 3735,83356
#    define PERL_UNUSED_CONTEXT3737,83421
#  define NOOP 3741,83482
#  define dNOOP 3745,83562
#    define NVTYPE 3750,83741
#    define NVTYPE 3752,83780
typedef NVTYPE NV;3754,83815
#    define PTRV 3759,83907
#    define INT2PTR(3760,83944
#      define PTRV 3763,84023
#      define PTRV 3765,84081
#    define INT2PTR(3767,84135
#    define PTR2ul(3773,84242
#    define PTR2ul(3775,84295
#  define PTR2nat(3779,84378
#  define NUM2PTR(3783,84453
#  define PTR2IV(3787,84533
#  define PTR2UV(3791,84611
#  define PTR2NV(3795,84689
#undef START_EXTERN_C3798,84752
#undef END_EXTERN_C3799,84774
#undef EXTERN_C3800,84794
#  define START_EXTERN_C 3802,84829
#  define END_EXTERN_C 3803,84867
#  define EXTERN_C 3804,84892
#  define START_EXTERN_C3806,84928
#  define END_EXTERN_C3807,84953
#  define EXTERN_C 3808,84976
#    define PERL_GCC_BRACE_GROUPS_FORBIDDEN3813,85083
#    define PERL_USE_GCC_BRACE_GROUPS3819,85272
#undef STMT_START3823,85327
#undef STMT_END3824,85345
#  define STMT_START	3826,85394
#  define STMT_END	3827,85464
#    define STMT_START	3830,85591
#    define STMT_END	3831,85621
#    define STMT_START	3833,85663
#    define STMT_END	3834,85689
#  define boolSV(3838,85751
#  define DEFSV 3843,85883
#  define SAVE_DEFSV 3847,85966
#  define DEFSV_set(3851,86058
#  define AvFILLp 3856,86179
#  define ERRSV 3859,86248
#  define gv_stashpvn(3869,86615
#  define get_cv 3874,86719
#  define get_sv 3878,86795
#  define get_av 3882,86871
#  define get_hv 3886,86947
#  define dUNDERBAR 3891,87043
#  define UNDERBAR 3895,87115
#  define dAX 3898,87181
#  define dITEMS 3902,87279
#  define dXSTARG 3905,87365
#  define dAXMARK 3908,87456
#  define XSprePUSH 3912,87622
#  undef XSRETURN3916,87735
#  define XSRETURN(3917,87753
#  define XSPROTO(3924,88033
#  define SVfARG(3928,88121
#  define PERL_ABS(3931,88199
#  define dVAR 3934,88283
#  define SVf 3937,88349
#  define UTF8_MAXBYTES 3940,88423
#  define CPERLscope(3943,88502
#  define PERL_HASH(3946,88570
#  define PERLIO_FUNCS_DECL(3959,88903
#  define PERLIO_FUNCS_CAST(3960,88963
#  define PERLIO_FUNCS_DECL(3962,89028
#  define PERLIO_FUNCS_CAST(3963,89082
typedef OP* (CPERLscope(*Perl_ppaddr_t)Perl_ppaddr_t3971,89239
typedef OP* (CPERLscope(*Perl_ppaddr_t)Perl_ppaddr_t3973,89299
typedef OP* (CPERLscope(*Perl_check_t)Perl_check_t3976,89356
#  define isPSXSPC(3980,89434
#  define isBLANK(3984,89527
#  define isALNUMC(3989,89635
#  define isASCII(3993,89711
#  define isCNTRL(3997,89787
#  define isGRAPH(4001,89863
#  define isPRINT(4005,89939
#  define isPUNCT(4009,90015
#  define isXDIGIT(4013,90092
#  undef isPRINT4023,90404
#  define isALNUMC(4026,90446
#  define isASCII(4030,90538
#  define isCNTRL(4034,90616
#  define isGRAPH(4038,90707
#  define isPRINT(4042,90799
#  define isPUNCT(4046,90891
#  define isXDIGIT(4050,91071
#define PERL_SIGNALS_UNSAFE_FLAG 4057,91235
#  define D_PPP_PERL_SIGNALS_INIT 4060,91310
#  define D_PPP_PERL_SIGNALS_INIT 4062,91377
#define PL_signals 4072,91647
#  define PL_ppaddr 4085,92029
#  define PL_no_modify 4086,92072
#  define PL_DBsignal 4092,92195
#  define PL_DBsingle 4093,92240
#  define PL_DBsub 4094,92285
#  define PL_DBtrace 4095,92327
#  define PL_Sv 4096,92371
#  define PL_bufend 4097,92410
#  define PL_bufptr 4098,92453
#  define PL_compiling 4099,92496
#  define PL_copline 4100,92542
#  define PL_curcop 4101,92586
#  define PL_curstash 4102,92629
#  define PL_debstash 4103,92674
#  define PL_defgv 4104,92719
#  define PL_diehook 4105,92761
#  define PL_dirty 4106,92805
#  define PL_dowarn 4107,92847
#  define PL_errgv 4108,92890
#  define PL_error_count 4109,92932
#  define PL_expect 4110,92980
#  define PL_hexdigit 4111,93023
#  define PL_hints 4112,93068
#  define PL_in_my 4113,93110
#  define PL_laststatval 4114,93152
#  define PL_lex_state 4115,93200
#  define PL_lex_stuff 4116,93246
#  define PL_linestr 4117,93292
#  define PL_na 4118,93336
#  define PL_perl_destruct_level 4119,93375
#  define PL_perldb 4120,93431
#  define PL_rsfp_filters 4121,93474
#  define PL_rsfp 4122,93523
#  define PL_stack_base 4123,93564
#  define PL_stack_sp 4124,93611
#  define PL_statcache 4125,93656
#  define PL_stdingv 4126,93702
#  define PL_sv_arenaroot 4127,93746
#  define PL_sv_no 4128,93795
#  define PL_sv_undef 4129,93837
#  define PL_sv_yes 4130,93882
#  define PL_tainted 4131,93925
#  define PL_tainting 4132,93969
#  define PL_tokenbuf 4133,94014
#  define D_PPP_my_PL_parser_var(4149,94525
#   define D_PPP_parser_dummy_warning(4154,94772
#   define D_PPP_parser_dummy_warning(4156,94823
#  define D_PPP_my_PL_parser_var(4159,94960
# define PL_expect 4186,96237
# define PL_copline 4187,96295
# define PL_rsfp 4188,96354
# define PL_rsfp_filters 4189,96410
# define PL_linestr 4190,96474
# define PL_bufptr 4191,96533
# define PL_bufend 4192,96591
# define PL_lex_state 4193,96649
# define PL_lex_stuff 4194,96710
# define PL_tokenbuf 4195,96771
# define PL_in_my 4196,96831
# define PL_in_my_stash 4197,96888
# define PL_error_count 4198,96951
# define PL_parser 4204,97086
#  define mPUSHs(4208,97149
#  define PUSHmortal 4212,97238
#  define mPUSHp(4216,97324
#  define mPUSHn(4220,97420
#  define mPUSHi(4224,97514
#  define mPUSHu(4228,97608
#  define mXPUSHs(4231,97702
#  define XPUSHmortal 4235,97793
#  define mXPUSHp(4239,97881
#  define mXPUSHn(4243,98017
#  define mXPUSHi(4247,98151
#  define mXPUSHu(4251,98285
#  define call_sv 4256,98436
#  define call_pv 4260,98514
#  define call_argv 4264,98594
#  define call_method 4268,98678
#  define eval_sv 4271,98759
#  define PERL_LOADMOD_DENY 4276,98864
#  define PERL_LOADMOD_NOIMPORT 4280,98947
#  define PERL_LOADMOD_IMPORT_OPS 4284,99032
# define G_METHOD	4288,99102
#  undef call_sv4290,99140
#  define call_sv(4293,99200
#  define call_sv(4296,99361
#  undef eval_pv4312,99780
#define eval_pv(4314,99804
#define Perl_eval_pv 4315,99854
DPPP_(4320,99957
#  undef vload_module4351,100522
#define vload_module(4353,100551
#define Perl_vload_module 4354,100619
DPPP_(4359,100743
#  undef load_module4423,102356
#define load_module 4425,102384
#define Perl_load_module 4426,102426
DPPP_(4431,102546
#  define newRV_inc(4442,102744
#  undef newRV_noinc4454,102995
#define newRV_noinc(4456,103023
#define Perl_newRV_noinc 4457,103077
DPPP_(4461,103196
#  undef newCONSTSUB4485,103772
#define newCONSTSUB(4487,103800
#define Perl_newCONSTSUB 4488,103862
#define D_PPP_PL_copline 4494,104131
DPPP_(4497,104173
#define START_MY_CXT4559,106247
#define dMY_CXT_SV 4563,106361
#define dMY_CXT_SV 4566,106453
#define dMY_CXT	4573,106692
#define MY_CXT_INIT 4580,106940
#define MY_CXT	4589,107273
#define pMY_CXT	4593,107423
#define pMY_CXT_	4594,107458
#define _pMY_CXT	4595,107484
#define aMY_CXT	4596,107510
#define aMY_CXT_	4597,107535
#define _aMY_CXT	4598,107561
#define MY_CXT_CLONE 4604,107675
#define START_MY_CXT	4615,107953
#define dMY_CXT_SV	4616,107998
#define dMY_CXT	4617,108023
#define MY_CXT_INIT	4618,108046
#define MY_CXT	4619,108071
#define pMY_CXT	4621,108095
#define pMY_CXT_4622,108117
#define _pMY_CXT4623,108134
#define aMY_CXT4624,108151
#define aMY_CXT_4625,108167
#define _aMY_CXT4626,108184
#define MY_CXT_CLONE	4631,108250
#    define	IVdf 4638,108330
#    define	UVuf 4639,108357
#    define	UVof 4640,108384
#    define	UVxf 4641,108411
#    define	UVXf 4642,108438
#      define	IVdf 4645,108499
#      define	UVuf 4646,108527
#      define	UVof 4647,108555
#      define	UVxf 4648,108583
#      define	UVXf 4649,108611
#    define NVef 4658,108864
#    define NVff 4659,108904
#    define NVgf 4660,108944
#    define NVef 4662,108992
#    define NVff 4663,109022
#    define NVgf 4664,109052
#    define SvREFCNT_inc(4670,109155
#    define SvREFCNT_inc(4678,109337
#    define SvREFCNT_inc_simple(4685,109515
#    define SvREFCNT_inc_simple(4692,109671
#    define SvREFCNT_inc_NN(4699,109838
#    define SvREFCNT_inc_NN(4706,109995
#    define SvREFCNT_inc_void(4713,110161
#    define SvREFCNT_inc_void(4720,110334
#  define SvREFCNT_inc_simple_void(4725,110481
#  define SvREFCNT_inc_simple_NN(4729,110609
#  define SvREFCNT_inc_void_NN(4733,110715
#  define SvREFCNT_inc_simple_void_NN(4737,110830
#  undef newSV_type4750,111108
#define newSV_type(4752,111135
#define Perl_newSV_type 4753,111187
DPPP_(4758,111302
# define D_PPP_CONSTPV_ARG(4770,111461
# define D_PPP_CONSTPV_ARG(4772,111513
#  define newSVpvn(4775,111572
#  define newSVpvn_utf8(4780,111835
#  define SVf_UTF8 4783,111947
#  undef newSVpvn_flags4796,112262
#define newSVpvn_flags(4798,112293
#define Perl_newSVpvn_flags 4799,112361
DPPP_(4804,112493
#  define NEED_sv_2pv_flags4817,112824
#  define NEED_sv_2pv_flags_GLOBAL4820,112935
#  define sv_2pv_nolen(4827,113105
#  undef sv_2pvbyte4847,113527
#define sv_2pvbyte(4849,113554
#define Perl_sv_2pvbyte 4850,113610
DPPP_(4855,113728
#undef SvPVbyte4867,113916
#define SvPVbyte(4869,113933
#  define SvPVbyte 4877,114161
#  define sv_2pvbyte 4878,114194
#  define sv_2pvbyte_nolen(4882,114262
#  define SV_IMMEDIATE_UNREF 4895,114588
#  define SV_GMAGIC 4899,114657
#  define SV_COW_DROP_PV 4903,114731
#  define SV_UTF8_NO_ENCODING 4907,114810
#  define SV_NOSTEAL 4911,114880
#  define SV_CONST_RETURN 4915,114955
#  define SV_MUTABLE_RETURN 4919,115032
#  define SV_SMAGIC 4923,115101
#  define SV_HAS_TRAILING_NUL 4927,115180
#  define SV_COW_SHARED_HASH_KEYS 4931,115263
#  undef sv_2pv_flags4944,115571
#define sv_2pv_flags(4946,115600
#define Perl_sv_2pv_flags 4947,115664
DPPP_(4952,115790
#  undef sv_pvn_force_flags4968,116177
#define sv_pvn_force_flags(4970,116212
#define Perl_sv_pvn_force_flags 4971,116288
DPPP_(4976,116438
# define DPPP_SVPV_NOLEN_LP_ARG 4987,116704
# define DPPP_SVPV_NOLEN_LP_ARG 4989,116749
#  define SvPV_const(4992,116809
#  define SvPV_mutable(4996,116915
#  define SvPV_flags(4999,117020
#  define SvPV_flags_const(5004,117234
#  define SvPV_flags_const_nolen(5010,117511
#  define SvPV_flags_mutable(5016,117785
#  define SvPV_force(5022,118042
#  define SvPV_force_nolen(5026,118152
#  define SvPV_force_mutable(5030,118266
#  define SvPV_force_nomg(5034,118383
#  define SvPV_force_nomg_nolen(5038,118490
#  define SvPV_force_flags(5041,118593
#  define SvPV_force_flags_nolen(5046,118834
#  define SvPV_force_flags_mutable(5051,119078
#  define SvPV_nolen(5057,119361
#  define SvPV_nolen_const(5062,119578
#  define SvPV_nomg(5067,119810
#  define SvPV_nomg_const(5071,119905
#  define SvPV_nomg_const_nolen(5075,120012
#  define SvPV_renew(5078,120109
#  define SvMAGIC_set(5084,120366
#  define SvPVX_const(5091,120604
#  define SvPVX_mutable(5095,120707
#  define SvRV_set(5098,120788
#  define SvPVX_const(5105,120992
#  define SvPVX_mutable(5109,121098
#  define SvRV_set(5112,121183
#  define SvSTASH_set(5119,121379
#  define SvUV_set(5126,121614
#  define SvUV_set(5133,121847
#  undef vnewSVpvf5149,122326
#define vnewSVpvf(5151,122352
#define Perl_vnewSVpvf 5152,122406
DPPP_(5157,122518
#  define sv_vcatpvf(5168,122769
#  define sv_vsetpvf(5172,122941
#define Perl_sv_catpvf_mg 5183,123311
DPPP_(5188,123435
#define sv_catpvf_mg_nocontext 5209,123973
#define Perl_sv_catpvf_mg_nocontext 5210,124037
DPPP_(5215,124201
#    define sv_catpvf_mg 5232,124549
#    define sv_catpvf_mg 5234,124612
#  define sv_vcatpvf_mg(5239,124736
#define Perl_sv_setpvf_mg 5254,125323
DPPP_(5259,125447
#define sv_setpvf_mg_nocontext 5280,125985
#define Perl_sv_setpvf_mg_nocontext 5281,126049
DPPP_(5286,126213
#    define sv_setpvf_mg 5303,126561
#    define sv_setpvf_mg 5305,126624
#  define sv_vsetpvf_mg(5310,126748
#  undef newSVpvn_share5327,127338
#define newSVpvn_share(5329,127369
#define Perl_newSVpvn_share 5330,127437
DPPP_(5335,127569
#  define SvSHARED_HASH(5354,127905
#  define HvNAME_get(5357,127988
#  define HvNAMELEN_get(5360,128069
#  define GvSVn(5363,128182
#  define isGV_with_GP(5367,128261
#  define WARN_ALL 5370,128335
#  define WARN_CLOSURE 5374,128407
#  define WARN_DEPRECATED 5378,128482
#  define WARN_EXITING 5382,128554
#  define WARN_GLOB 5386,128623
#  define WARN_IO 5390,128690
#  define WARN_CLOSED 5394,128761
#  define WARN_EXEC 5398,128830
#  define WARN_LAYER 5402,128900
#  define WARN_NEWLINE 5406,128972
#  define WARN_PIPE 5410,129041
#  define WARN_UNOPENED 5414,129115
#  define WARN_MISC 5418,129185
#  define WARN_NUMERIC 5422,129258
#  define WARN_ONCE 5426,129328
#  define WARN_OVERFLOW 5430,129402
#  define WARN_PACK 5434,129472
#  define WARN_PORTABLE 5438,129546
#  define WARN_RECURSION 5442,129621
#  define WARN_REDEFINE 5446,129695
#  define WARN_REGEXP 5450,129767
#  define WARN_SEVERE 5454,129839
#  define WARN_DEBUGGING 5458,129914
#  define WARN_INPLACE 5462,129987
#  define WARN_INTERNAL 5466,130061
#  define WARN_MALLOC 5470,130133
#  define WARN_SIGNAL 5474,130205
#  define WARN_SUBSTR 5478,130277
#  define WARN_SYNTAX 5482,130349
#  define WARN_AMBIGUOUS 5486,130424
#  define WARN_BAREWORD 5490,130498
#  define WARN_DIGIT 5494,130569
#  define WARN_PARENTHESIS 5498,130646
#  define WARN_PRECEDENCE 5502,130722
#  define WARN_PRINTF 5506,130794
#  define WARN_PROTOTYPE 5510,130869
#  define WARN_QW 5514,130937
#  define WARN_RESERVED 5518,131011
#  define WARN_SEMICOLON 5522,131086
#  define WARN_TAINT 5526,131157
#  define WARN_THREADS 5530,131230
#  define WARN_UNINITIALIZED 5534,131309
#  define WARN_UNPACK 5538,131381
#  define WARN_UNTIE 5542,131452
#  define WARN_UTF8 5546,131522
#  define WARN_VOID 5550,131592
#  define WARN_ASSERTIONS 5554,131668
#  define packWARN(5557,131736
#    define  ckWARN(5562,131823
#    define  ckWARN(5564,131895
#define Perl_warner 5576,132185
DPPP_(5581,132285
#define warner 5595,132507
#define Perl_warner_nocontext 5597,132536
#  define STR_WITH_LEN(5607,132831
#  define newSVpvs(5610,132918
#  define newSVpvs_flags(5614,133024
#  define sv_catpvs(5618,133138
#  define sv_setpvs(5622,133244
#  define hv_fetchs(5626,133350
#  define hv_stores(5630,133461
#  define gv_fetchpvn_flags(5633,133581
#  define gv_fetchpvs(5637,133689
#  define gv_stashpvs(5641,133815
#  define SvGETMAGIC(5644,133928
#  define PERL_MAGIC_sv 5647,134052
#  define PERL_MAGIC_overload 5651,134134
#  define PERL_MAGIC_overload_elem 5655,134220
#  define PERL_MAGIC_overload_table 5659,134307
#  define PERL_MAGIC_bm 5663,134382
#  define PERL_MAGIC_regdata 5667,134462
#  define PERL_MAGIC_regdatum 5671,134543
#  define PERL_MAGIC_env 5675,134619
#  define PERL_MAGIC_envelem 5679,134699
#  define PERL_MAGIC_fm 5683,134774
#  define PERL_MAGIC_regex_global 5687,134859
#  define PERL_MAGIC_isa 5691,134935
#  define PERL_MAGIC_isaelem 5695,135015
#  define PERL_MAGIC_nkeys 5699,135093
#  define PERL_MAGIC_dbfile 5703,135172
#  define PERL_MAGIC_dbline 5707,135251
#  define PERL_MAGIC_mutex 5711,135329
#  define PERL_MAGIC_shared 5715,135408
#  define PERL_MAGIC_shared_scalar 5719,135494
#  define PERL_MAGIC_collxfrm 5723,135575
#  define PERL_MAGIC_tied 5727,135652
#  define PERL_MAGIC_tiedelem 5731,135733
#  define PERL_MAGIC_tiedscalar 5735,135816
#  define PERL_MAGIC_qr 5739,135891
#  define PERL_MAGIC_sig 5743,135967
#  define PERL_MAGIC_sigelem 5747,136047
#  define PERL_MAGIC_taint 5751,136125
#  define PERL_MAGIC_uvar 5755,136202
#  define PERL_MAGIC_uvar_elem 5759,136284
#  define PERL_MAGIC_vstring 5763,136364
#  define PERL_MAGIC_vec 5767,136440
#  define PERL_MAGIC_utf8 5771,136517
#  define PERL_MAGIC_substr 5775,136596
#  define PERL_MAGIC_defelem 5779,136676
#  define PERL_MAGIC_glob 5783,136753
#  define PERL_MAGIC_arylen 5787,136832
#  define PERL_MAGIC_pos 5791,136908
#  define PERL_MAGIC_backref 5795,136988
#  define PERL_MAGIC_ext 5799,137064
#  define sv_catpvn_nomg 5804,137175
#  define sv_catsv_nomg 5808,137256
#  define sv_setsv_nomg 5812,137336
#  define sv_pvn_nomg 5816,137414
#  define SvIV_nomg 5820,137488
#  define SvUV_nomg 5824,137560
#  define sv_catpv_mg(5828,137634
#  define sv_catpvn_mg(5837,137887
#  define sv_catsv_mg(5846,138139
#  define sv_setiv_mg(5855,138391
#  define sv_setnv_mg(5864,138643
#  define sv_setpv_mg(5873,138895
#  define sv_setpvn_mg(5882,139148
#  define sv_setsv_mg(5891,139400
#  define sv_setuv_mg(5900,139652
#  define sv_usepvn_mg(5909,139905
#  define SvVSTRING_mg(5917,140157
#  define sv_magic_portable(5936,140842
#  define sv_magic_portable(5957,141918
#  define CopFILE(5963,142031
#  define CopFILEGV(5967,142114
#  define CopFILE_set(5971,142232
#  define CopFILESV(5975,142328
#  define CopFILEAV(5979,142450
#  define CopSTASHPV(5983,142573
#  define CopSTASHPV_set(5987,142664
#  define CopSTASH(5991,142780
#  define CopSTASH_set(5995,142910
#  define CopSTASH_eq(5999,143025
#  define CopFILEGV(6006,143221
#  define CopFILEGV_set(6010,143310
#  define CopFILE_set(6014,143421
#  define CopFILESV(6018,143525
#  define CopFILEAV(6022,143637
#  define CopFILE(6026,143747
#  define CopSTASH(6030,143859
#  define CopSTASH_set(6034,143946
#  define CopSTASHPV(6038,144038
#  define CopSTASHPV_set(6042,144155
#  define CopSTASH_eq(6046,144265
#  define IN_PERL_COMPILETIME 6051,144390
#  define IN_LOCALE_RUNTIME 6055,144494
#  define IN_LOCALE_COMPILETIME 6059,144611
#  define IN_LOCALE 6063,144703
#  define IS_NUMBER_IN_UV 6066,144841
#  define IS_NUMBER_GREATER_THAN_UV_MAX 6070,144933
#  define IS_NUMBER_NOT_INT 6074,145013
#  define IS_NUMBER_NEG 6078,145089
#  define IS_NUMBER_INFINITY 6082,145170
#  define IS_NUMBER_NAN 6086,145246
#  define GROK_NUMERIC_RADIX(6089,145326
#  define PERL_SCAN_GREATER_THAN_UV_MAX 6092,145441
#  define PERL_SCAN_SILENT_ILLDIGIT 6096,145529
#  define PERL_SCAN_ALLOW_UNDERSCORES 6100,145619
#  define PERL_SCAN_DISALLOW_PREFIX 6104,145707
#  undef grok_numeric_radix6116,146042
#define grok_numeric_radix(6118,146077
#define Perl_grok_numeric_radix 6119,146149
DPPP_(6123,146296
#  undef grok_number6172,147644
#define grok_number(6174,147672
#define Perl_grok_number 6175,147734
DPPP_(6179,147852
#  undef grok_bin6386,155082
#define grok_bin(6388,155107
#define Perl_grok_bin 6389,155167
DPPP_(6393,155272
#  undef grok_hex6488,158177
#define grok_hex(6490,158202
#define Perl_grok_hex 6491,158262
DPPP_(6495,158367
#  undef grok_oct6590,161286
#define grok_oct(6592,161311
#define Perl_grok_oct 6593,161371
DPPP_(6597,161476
#define my_snprintf 6682,164261
#define Perl_my_snprintf 6683,164303
DPPP_(6688,164422
#define my_sprintf 6716,165082
#define Perl_my_sprintf 6717,165122
DPPP_(6722,165237
#    define dXCPT 6736,165470
#    define XCPT_TRY_START 6737,165522
#    define XCPT_TRY_END 6738,165586
#    define XCPT_CATCH 6739,165628
#    define XCPT_RETHROW 6740,165673
#    define dXCPT 6742,165729
#    define XCPT_TRY_START 6743,165791
#    define XCPT_TRY_END 6744,165904
#    define XCPT_CATCH 6745,165972
#    define XCPT_RETHROW 6746,166017
#define my_strlcat 6758,166323
#define Perl_my_strlcat 6759,166363
DPPP_(6764,166481
#define my_strlcpy 6788,167087
#define Perl_my_strlcpy 6789,167127
DPPP_(6794,167245
#  define PERL_PV_ESCAPE_QUOTE 6810,167563
#  define PERL_PV_PRETTY_QUOTE 6814,167648
#  define PERL_PV_PRETTY_ELLIPSES 6818,167750
#  define PERL_PV_PRETTY_LTGT 6822,167834
#  define PERL_PV_ESCAPE_FIRSTCHAR 6826,167923
#  define PERL_PV_ESCAPE_UNI 6830,168006
#  define PERL_PV_ESCAPE_UNI_DETECT 6834,168096
#  define PERL_PV_ESCAPE_ALL 6838,168179
#  define PERL_PV_ESCAPE_NOBACKSLASH 6842,168270
#  define PERL_PV_ESCAPE_NOCLEAR 6846,168357
#  define PERL_PV_ESCAPE_RE 6850,168439
#  define PERL_PV_PRETTY_NOCLEAR 6854,168526
#  define PERL_PV_PRETTY_DUMP 6857,168625
#  define PERL_PV_PRETTY_REGPROP 6861,168750
#  undef pv_escape6879,169446
#define pv_escape(6881,169472
#define Perl_pv_escape 6882,169542
DPPP_(6887,169656
#  undef pv_pretty6988,172865
#define pv_pretty(6990,172891
#define Perl_pv_pretty 6991,172965
DPPP_(6996,173079
#  undef pv_display7042,174319
#define pv_display(7044,174346
#define Perl_pv_display 7045,174414
DPPP_(7050,174532

/home/seinoyu/pgsql/master/postgresql/src/pl/plperl/plperl.c,5478
#undef TEXTDOMAIN43,1094
#define TEXTDOMAIN 44,1112
PG_MODULE_MAGIC;58,1529
typedef struct plperl_interp_desc85,3135
	Oid			user_id;87,3171
	PerlInterpreter *interp;interp88,3220
	HTAB	   *query_hash;query_hash89,3268
} plperl_interp_desc;90,3324
typedef struct plperl_proc_desc102,3919
	char	   *proname;proname104,3953
	MemoryContext fn_cxt;105,4002
	unsigned long fn_refcount;106,4066
	TransactionId fn_xmin;107,4128
	ItemPointerData fn_tid;108,4197
	SV		   *reference;reference109,4222
	plperl_interp_desc *interp;interp110,4277
	bool		fn_readonly;111,4340
	Oid			lang_oid;112,4403
	List	   *trftypes;trftypes113,4420
	bool		lanpltrusted;114,4440
	bool		fn_retistuple;115,4502
	bool		fn_retisset;116,4562
	bool		fn_retisarray;117,4618
	Oid			result_oid;119,4728
	FmgrInfo	result_in_func;120,4773
	Oid			result_typioparam;121,4842
	int			nargs;123,4924
	FmgrInfo   *arg_out_func;arg_out_func124,4938
	bool	   *arg_is_rowtype;arg_is_rowtype125,4996
	Oid		   *arg_arraytype;arg_arraytype126,5051
} plperl_proc_desc;127,5109
#define increment_prodesc_refcount(129,5130
#define decrement_prodesc_refcount(131,5205
typedef struct plperl_proc_key151,6264
	Oid			proc_id;153,6297
	Oid			is_trigger;159,6441
	Oid			user_id;160,6493
} plperl_proc_key;161,6548
typedef struct plperl_proc_ptr163,6568
	plperl_proc_key proc_key;165,6601
	plperl_proc_desc *proc_ptr;proc_ptr166,6660
} plperl_proc_ptr;167,6689
typedef struct plperl_call_data173,6796
	plperl_proc_desc *prodesc;prodesc175,6830
	FunctionCallInfo fcinfo;176,6858
	Tuplestorestate *tuple_store;tuple_store178,6951
	TupleDesc	ret_tdesc;179,6982
	Oid			cdomain_oid;180,7004
	void	   *cdomain_info;cdomain_info181,7071
	MemoryContext tmp_cxt;182,7095
} plperl_call_data;183,7119
typedef struct plperl_query_desc188,7344
	char		qname[qname190,7379
	MemoryContext plan_cxt;191,7397
	SPIPlanPtr	plan;192,7457
	int			nargs;193,7475
	Oid		   *argtypes;argtypes194,7489
	FmgrInfo   *arginfuncs;arginfuncs195,7509
	Oid		   *argtypioparams;argtypioparams196,7534
} plperl_query_desc;197,7560
typedef struct plperl_query_entry201,7621
	char		query_name[query_name203,7657
	plperl_query_desc *query_data;query_data204,7689
} plperl_query_entry;205,7721
typedef struct plperl_array_info210,7944
	int			ndims;212,7979
	bool		elem_is_rowtype;213,7993
	Datum	   *elements;elements214,8056
	bool	   *nulls;nulls215,8077
	int		   *nelems;nelems216,8094
	FmgrInfo	proc;217,8112
	FmgrInfo	transform_proc;218,8128
} plperl_array_info;219,8154
static HTAB *plperl_interp_hash plperl_interp_hash225,8337
static HTAB *plperl_proc_hash plperl_proc_hash226,8377
static plperl_interp_desc *plperl_active_interp plperl_active_interp227,8415
static PerlInterpreter *plperl_held_interp plperl_held_interp230,8540
static bool plperl_use_strict 233,8612
static char *plperl_on_init plperl_on_init234,8651
static char *plperl_on_plperl_init plperl_on_plperl_init235,8687
static char *plperl_on_plperlu_init plperl_on_plperlu_init236,8730
static bool plperl_ending 238,8775
static char plperl_opmask[plperl_opmask240,8856
static plperl_call_data *current_call_data current_call_data243,8946
SvREFCNT_dec_current(312,11913
hek2cstr(323,12071
_PG_init(380,13499
set_interp_require(492,16840
plperl_fini(511,17236
select_perl_context(555,18290
activate_interpreter(687,21688
plperl_init_interp(708,22389
#define PLPERL_RESTORE_LOCALE(757,23847
pp_require_safe(883,27772
plperl_destroy_interp(921,28678
plperl_trusted_init(960,29575
plperl_untrusted_init(1041,31790
strip_trailing_ws(1064,32300
plperl_build_tuple_result(1078,32541
plperl_hash_to_datum(1129,33732
get_perl_array_ref(1141,34056
array_to_datum_internal(1168,34617
plperl_array_to_datum(1243,36606
_sv_to_datum_finfo(1287,37686
plperl_sv_to_datum(1310,38395
plperl_sv_to_literal(1431,41469
plperl_ref_from_pg_array(1465,42206
split_array(1544,44278
make_array_ref(1578,45143
plperl_trigger_build_args(1616,45991
plperl_event_trigger_build_args(1729,48987
plperl_modify_tuple(1747,49403
plperl_call_handler(1837,51655
plperl_inline_handler(1879,52666
plperl_validator(1974,55372
plperlu_call_handler(2052,57601
plperlu_inline_handler(2060,57734
plperlu_validator(2068,57866
plperl_create_sub(2080,58125
plperl_init_shared_libs(2153,59829
plperl_call_perl_func(2165,60124
plperl_call_perl_trigger_func(2258,62013
plperl_call_perl_event_trigger_func(2326,63278
plperl_func_handler(2387,64380
plperl_trigger_handler(2503,67577
plperl_event_trigger_handler(2616,70860
validate_plperl_function(2653,71894
free_plperl_function(2682,72815
compile_plperl_function(2700,73300
plperl_hash_from_datum(2984,83159
plperl_hash_from_tuple(3012,83828
check_spi_usage_allowed(3092,85649
plperl_spi_exec(3104,85873
plperl_spi_execute_fetch_result(3164,87197
plperl_return_next(3216,88426
plperl_return_next_internal(3244,88905
plperl_spi_query(3373,92534
plperl_spi_fetchrow(3445,94155
plperl_spi_cursor_close(3520,95618
plperl_spi_prepare(3536,95794
plperl_spi_exec_prepared(3684,100542
plperl_spi_query_prepared(3811,103750
plperl_spi_freeplan(3929,106705
plperl_spi_commit(3960,107412
plperl_spi_rollback(3985,107784
plperl_util_elog(4021,108615
hv_store_string(4055,109223
hv_fetch_string(4082,109734
plperl_exec_callback(4105,110108
plperl_compile_callback(4117,110322
plperl_inline_callback(4129,110546
setlocale_perl(4141,110757

/home/seinoyu/pgsql/master/postgresql/src/pl/plperl/plperl_helpers.h,118
#define PL_PERL_HELPERS_H2,26
utf_u2e(15,225
utf_e2u(34,574
sv2cstr(54,931
cstr2sv(112,2325
croak_cstr(140,2968

/home/seinoyu/pgsql/master/postgresql/src/pl/plperl/plperl.h,1468
#define PL_PERL_H15,408
#define WIN32IO_IS_STDIO19,512
#define PERL_UNUSED_DECL 26,681
#undef vsnprintf32,875
#undef snprintf33,892
#undef vsprintf34,908
#undef sprintf35,924
#undef vfprintf36,939
#undef fprintf37,955
#undef vprintf38,970
#undef printf39,985
#undef _44,1047
#define __inline__ 53,1327
#undef isnan55,1366
#define HAS_BOOL 68,1851
#define PERL_NO_GET_CONTEXT76,2037
#undef accept91,2535
#undef bind92,2549
#undef connect93,2561
#undef fopen94,2576
#undef kill95,2589
#undef listen96,2601
#undef lstat97,2615
#undef mkdir98,2628
#undef open99,2641
#undef putenv100,2653
#undef recv101,2667
#undef rename102,2679
#undef select103,2693
#undef send104,2707
#undef socket105,2719
#undef stat106,2733
#undef unlink107,2745
#undef vsnprintf115,2883
#undef snprintf118,2923
#undef vsprintf121,2962
#undef sprintf124,3000
#undef vfprintf127,3038
#undef fprintf130,3076
#undef vprintf133,3113
#undef printf136,3149
#define vsnprintf	139,3171
#define snprintf	140,3203
#define vsprintf	141,3233
#define sprintf	142,3263
#define vfprintf	143,3292
#define fprintf	144,3322
#define vprintf	145,3351
#define printf(146,3380
#undef _155,3764
#define _(156,3773
#define isnan(161,3890
#define NEED_eval_pv166,3976
#define NEED_newRV_noinc167,3997
#define NEED_sv_2pv_flags168,4022
#undef bool180,4447
#define HeUTF8(186,4569
#define GvCV_set(193,4801
#define AV_SIZE_MAX 198,4944
#define AV_SIZE_MAX 200,4982

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_main.h,222
#define PLPY_MAIN_H6,59
typedef struct PLyExecutionContext18,398
	PLyProcedure *curr_proc;curr_proc20,435
	MemoryContext scratch_ctx;21,501
	struct PLyExecutionContext *next;next22,570
} PLyExecutionContext;23,632

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_exec.c,690
typedef struct PLySRFState27,561
	PyObject   *iter;iter29,590
	PLySavedArgs *savedargs;savedargs30,651
	MemoryContextCallback callback;31,708
} PLySRFState;32,781
PLy_exec_function(55,1791
PLy_exec_trigger(305,9203
PLy_function_build_args(415,12252
PLy_function_save_args(488,14122
PLy_function_restore_args(527,14976
PLy_function_drop_args(560,15706
PLy_global_args_push(588,16482
PLy_global_args_pop(618,17337
plpython_srf_cleanup_callback(656,18407
plpython_return_error_callback(670,18776
PLy_trigger_build_args(680,19019
PLy_modify_tuple(880,24492
plpython_trigger_error_callback(1012,27823
PLy_procedure_call(1022,28093
PLy_abort_open_subtransactions(1064,29144

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_spi.c,307
PLy_spi_prepare(39,1000
PLy_spi_execute(156,3995
PLy_spi_execute_plan(177,4486
PLy_spi_execute_query(308,7162
PLy_spi_execute_fetch_result(350,8072
PLy_spi_subtransaction_begin(485,11451
PLy_spi_subtransaction_commit(493,11664
PLy_spi_subtransaction_abort(502,11923
PLy_spi_exception_set(537,12812

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_util.c,125
PLyUnicode_Bytes(21,376
PLyUnicode_AsString(89,2203
PLyUnicode_FromStringAndSize(104,2542
PLyUnicode_FromString(125,2866

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_subxactobject.c,439
List	   *explicit_subtransactions explicit_subtransactions15,236
static char PLy_subtransaction_doc[PLy_subtransaction_doc22,490
static PyMethodDef PLy_subtransaction_methods[PLy_subtransaction_methods25,575
static PyTypeObject PLy_SubtransactionType 34,933
PLy_subtransaction_init_type(46,1281
PLy_subtransaction_new(54,1474
PLy_subtransaction_dealloc(71,1807
PLy_subtransaction_enter(84,2153
PLy_subtransaction_exit(137,3705

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_spi.h,145
#define PLPY_SPI_H6,57
typedef struct PLyExceptionEntry15,342
	int			sqlstate;17,377
	PyObject   *exc;exc18,425
} PLyExceptionEntry;19,475

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpython.h,1123
#define PLPYTHON_H13,425
#undef _POSIX_C_SOURCE29,950
#undef _XOPEN_SOURCE30,973
#undef vsnprintf36,1143
#undef snprintf37,1160
#undef vsprintf38,1176
#undef sprintf39,1192
#undef vfprintf40,1207
#undef fprintf41,1223
#undef vprintf42,1238
#undef printf43,1253
#undef _DEBUG48,1403
#define errcode 50,1488
#undef errcode52,1539
#define _DEBUG53,1554
#define errcode 55,1594
#undef errcode57,1645
#define PyString_Check(74,2309
#define PyString_AsString(75,2337
#define PyString_FromString(76,2389
#define PyString_FromStringAndSize(77,2445
#define PyInt_FromLong(84,2595
#define PyInt_AsLong(85,2640
#define Py_TPFLAGS_HAVE_ITER 90,2768
#undef TEXTDOMAIN94,2853
#define TEXTDOMAIN 95,2871
#undef vsnprintf102,3047
#undef snprintf105,3087
#undef vsprintf108,3126
#undef sprintf111,3164
#undef vfprintf114,3202
#undef fprintf117,3240
#undef vprintf120,3277
#undef printf123,3313
#define vsnprintf	126,3335
#define snprintf	127,3367
#define vsprintf	128,3397
#define sprintf	129,3427
#define vfprintf	130,3456
#define fprintf	131,3486
#define vprintf	132,3515
#define printf(133,3544

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_resultobject.c,645
static char PLy_result_doc[PLy_result_doc25,895
static PySequenceMethods PLy_result_as_sequence 27,960
static PyMappingMethods PLy_result_as_mapping 32,1078
static PyMethodDef PLy_result_methods[PLy_result_methods38,1251
static PyTypeObject PLy_ResultType 47,1593
PLy_result_init_type(61,2006
PLy_result_new(68,2143
PLy_result_dealloc(92,2520
PLy_result_colnames(109,2804
PLy_result_coltypes(135,3339
PLy_result_coltypmods(161,3861
PLy_result_nrows(187,4386
PLy_result_status(196,4550
PLy_result_length(205,4717
PLy_result_item(213,4853
PLy_result_str(225,5072
PLy_result_subscript(245,5587
PLy_result_ass_subscript(253,5746

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_procedure.c,310
static HTAB *PLy_procedure_cache PLy_procedure_cache25,518
init_procedure_caches(33,806
PLy_procedure_name(50,1259
PLy_procedure_get(70,1896
PLy_procedure_create(134,3475
PLy_procedure_compile(354,9614
PLy_procedure_delete(405,10899
PLy_procedure_valid(417,11141
PLy_procedure_munge_source(431,11469

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_util.h,26
#define PLPY_UTIL_H7,111

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_typeio.c,1147
PLy_input_convert(80,3387
PLy_output_convert(119,4721
PLy_input_from_tuple(133,5175
PLy_input_setup_tuple(164,6176
PLy_output_setup_tuple(214,7719
PLy_output_setup_record(260,8968
PLy_output_setup_func(295,10083
PLy_input_setup_func(417,13879
PLyBool_FromBool(549,17430
PLyFloat_FromFloat4(557,17556
PLyFloat_FromFloat8(563,17674
PLyDecimal_FromNumeric(569,17792
PLyInt_FromInt16(603,18717
PLyInt_FromInt32(609,18827
PLyLong_FromInt64(615,18937
PLyLong_FromOid(621,19053
PLyBytes_FromBytea(627,19174
PLyString_FromScalar(641,19473
PLyObject_FromTransform(654,19725
PLyList_FromArray(666,19956
PLyList_FromArray_recurse(706,21206
PLyDict_FromComposite(780,22755
PLyDict_FromTuple(814,23580
PLyObject_ToBool(878,24877
PLyObject_ToBytea(896,25306
PLyObject_ToComposite(940,26226
PLyObject_AsString(1023,28514
PLyObject_ToScalar(1081,29838
PLyObject_ToDomain(1106,30236
PLyObject_ToTransform(1123,30612
PLySequence_ToArray(1140,30933
PLySequence_ToArray_recurse(1251,33490
PLyString_ToComposite(1292,34499
PLyMapping_ToComposite(1353,36675
PLySequence_ToComposite(1418,38017
PLyGenericObject_ToComposite(1495,39572

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_elog.h,109
#define PLPY_ELOG_H6,59
#define PLy_elog(21,345
#define PLy_elog(28,563
extern void PLy_elog_impl(37,785

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_typeio.h,2233
#define PLPY_TYPEIO_H6,63
typedef struct PLyDatumToOb PLyDatumToOb;26,604
typedef PyObject *(*PLyDatumToObFunc)PLyDatumToObFunc28,671
typedef struct PLyScalarToOb30,742
	FmgrInfo	typfunc;32,773
} PLyScalarToOb;33,838
typedef struct PLyArrayToOb35,856
	PLyDatumToOb *elm;elm37,886
} PLyArrayToOb;38,955
typedef struct PLyTupleToOb40,972
	TupleDesc	recdesc;43,1073
	TypeCacheEntry *typentry;typentry45,1168
	uint64		tupdescid;46,1225
	PLyDatumToOb *atts;atts48,1340
	int			natts;49,1405
} PLyTupleToOb;50,1443
typedef struct PLyTransformToOb52,1460
	FmgrInfo	typtransform;54,1494
} PLyTransformToOb;55,1564
struct PLyDatumToOb57,1585
	PLyDatumToObFunc func;59,1607
	Oid			typoid;60,1666
	int32		typmod;61,1712
	bool		typbyval;62,1762
	int16		typlen;63,1822
	char		typalign;64,1838
	MemoryContext mcxt;65,1855
		PLyScalarToOb scalar;68,1966
		PLyArrayToOb array;69,1990
		PLyTupleToOb tuple;70,2012
		PLyTransformToOb transform;71,2034
	}			u;72,2064
typedef struct PLyObToDatum PLyObToDatum;87,2540
typedef Datum (*PLyObToDatumFunc)PLyObToDatumFunc89,2607
typedef struct PLyObToScalar93,2728
	FmgrInfo	typfunc;95,2759
	Oid			typioparam;96,2823
} PLyObToScalar;97,2872
typedef struct PLyObToArray99,2890
	PLyObToDatum *elm;elm101,2920
	Oid			elmbasetype;102,2989
} PLyObToArray;103,3033
typedef struct PLyObToTuple105,3050
	TupleDesc	recdesc;108,3151
	TypeCacheEntry *typentry;typentry110,3246
	uint64		tupdescid;111,3303
	PLyObToDatum *atts;atts113,3418
	int			natts;114,3483
	FmgrInfo	recinfunc;116,3595
} PLyObToTuple;117,3649
typedef struct PLyObToDomain119,3666
	PLyObToDatum *base;base121,3697
	void	   *domain_info;domain_info122,3765
} PLyObToDomain;123,3825
typedef struct PLyObToTransform125,3843
	FmgrInfo	typtransform;127,3877
} PLyObToTransform;128,3949
struct PLyObToDatum130,3970
	PLyObToDatumFunc func;132,3992
	Oid			typoid;133,4051
	int32		typmod;134,4097
	bool		typbyval;135,4147
	int16		typlen;136,4207
	char		typalign;137,4223
	MemoryContext mcxt;138,4240
		PLyObToScalar scalar;141,4351
		PLyObToArray array;142,4375
		PLyObToTuple tuple;143,4397
		PLyObToDomain domain;144,4419
		PLyObToTransform transform;145,4443
	}			u;146,4473

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_cursorobject.c,374
static char PLy_cursor_doc[PLy_cursor_doc30,726
static PyMethodDef PLy_cursor_methods[PLy_cursor_methods32,796
static PyTypeObject PLy_CursorType 38,966
PLy_cursor_init_type(51,1356
PLy_cursor(58,1493
PLy_cursor_query(78,1909
PLy_cursor_plan(141,3478
PLy_cursor_dealloc(281,6592
PLy_cursor_iternext(308,7035
PLy_cursor_fetch(370,8336
PLy_cursor_close(471,10595

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_cursorobject.h,216
#define PLPY_CURSOROBJECT_H6,75
typedef struct PLyCursorObject11,131
	char	   *portalname;portalname14,179
	PLyDatumToOb result;15,201
	bool		closed;16,223
	MemoryContext mcxt;17,238
} PLyCursorObject;18,259

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_elog.c,480
PyObject   *PLy_exc_error PLy_exc_error15,242
PyObject   *PLy_exc_fatal PLy_exc_fatal16,276
PyObject   *PLy_exc_spi_error PLy_exc_spi_error17,310
PLy_elog_impl(43,1529
PLy_traceback(165,4719
PLy_get_sqlerrcode(359,9859
PLy_get_spi_error_data(383,10359
PLy_get_error_data(419,11318
get_source_line(437,11973
PLy_exception_set(479,12708
PLy_exception_set_plural(493,12964
PLy_exception_set_with_details(511,13358
get_string_attr(569,14700
set_string_attr(585,15037

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_subxactobject.h,299
#define PLPY_SUBXACTOBJECT6,75
typedef struct PLySubtransactionObject16,270
	bool		started;19,326
	bool		exited;20,342
} PLySubtransactionObject;21,357
typedef struct PLySubtransactionData24,420
	MemoryContext oldcontext;26,459
	ResourceOwner oldowner;27,486
} PLySubtransactionData;28,511

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_exec.h,25
#define PLPY_EXEC_H6,59

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_main.c,930
#define plpython_validator 33,650
#define plpython_call_handler 34,697
#define plpython_inline_handler 35,750
PG_MODULE_MAGIC;40,844
static int *plpython_version_bitmask_ptr plpython_version_bitmask_ptr63,1592
static int	plpython_version_bitmask 64,1641
PyObject   *PLy_interp_globals PLy_interp_globals67,1717
static PLyExecutionContext *PLy_execution_contexts PLy_execution_contexts70,1831
_PG_init(74,1897
PLy_initialize(107,3079
PLy_init_interp(154,4316
plpython_validator(174,4939
plpython2_validator(208,5800
plpython_call_handler(216,5991
plpython2_call_handler(289,7871
plpython_inline_handler(296,8002
plpython2_inline_handler(373,10233
PLy_procedure_is_trigger(380,10374
plpython_error_callback(386,10489
plpython_inline_error_callback(402,10871
PLy_current_execution_context(408,10987
PLy_get_scratch_context(417,11172
PLy_push_execution_context(432,11593
PLy_pop_execution_context(448,12047

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_plpymodule.c,929
HTAB	   *PLy_spi_exceptions PLy_spi_exceptions23,438
typedef struct ExceptionMap48,1688
	char	   *name;name50,1718
	char	   *classname;classname51,1734
	int			sqlstate;52,1755
} ExceptionMap;53,1772
static const ExceptionMap exception_map[exception_map55,1789
static PyMethodDef PLy_methods[PLy_methods60,1883
static PyMethodDef PLy_exc_methods[PLy_exc_methods108,3295
static PyModuleDef PLy_module 113,3389
static PyModuleDef PLy_exc_module 120,3512
PyInit_plpy(132,3773
PLy_init_plpy(147,3962
PLy_add_exceptions(189,4919
PLy_create_exception(230,6142
PLy_generate_spi_exceptions(259,6857
PLy_debug(300,7850
PLy_log(306,7973
PLy_info(312,8091
PLy_notice(318,8211
PLy_warning(324,8335
PLy_error(330,8461
PLy_fatal(336,8583
PLy_quote_literal(342,8705
PLy_quote_nullable(359,9005
PLy_quote_ident(379,9364
object_to_string(396,9680
PLy_output(417,9924
PLy_commit(583,14606
PLy_rollback(597,14883

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_plpymodule.h,31
#define PLPY_PLPYMODULE_H6,71

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_procedure.h,1179
#define PLPY_PROCEDURE_H6,69
typedef struct PLySavedArgs15,239
	struct PLySavedArgs *next;next17,269
	PyObject   *args;args18,323
	int			nargs;19,381
	PyObject   *namedargs[namedargs20,429
} PLySavedArgs;21,493
typedef struct PLyProcedure24,538
	MemoryContext mcxt;26,568
	char	   *proname;proname28,666
	char	   *pyname;pyname29,714
	TransactionId fn_xmin;30,765
	ItemPointerData fn_tid;31,789
	bool		fn_readonly;32,814
	bool		is_setof;33,834
	bool		is_procedure;34,895
	PLyObToDatum result;35,916
	PLyDatumToOb result_in;36,984
	char	   *src;src37,1057
	char	  **argnames;argnames38,1119
	PLyDatumToOb *args;args39,1161
	int			nargs;40,1221
	Oid			langid;41,1278
	List	   *trftypes;trftypes42,1335
	PyObject   *code;code43,1390
	PyObject   *statics;statics44,1441
	PyObject   *globals;globals45,1507
	long		calldepth;46,1574
	PLySavedArgs *argstack;argstack47,1636
} PLyProcedure;48,1704
typedef struct PLyProcedureKey51,1751
	Oid			fn_oid;53,1784
	Oid			fn_rel;54,1820
} PLyProcedureKey;55,1879
typedef struct PLyProcedureEntry58,1931
	PLyProcedureKey key;60,1966
	PLyProcedure *proc;proc61,2004
} PLyProcedureEntry;62,2025

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_planobject.c,328
static char PLy_plan_doc[PLy_plan_doc21,493
static PyMethodDef PLy_plan_methods[PLy_plan_methods23,550
static PyTypeObject PLy_PlanType 30,771
PLy_plan_init_type(41,1058
PLy_plan_new(48,1189
is_PLyPlanObject(66,1454
PLy_plan_dealloc(72,1540
PLy_plan_cursor(91,1809
PLy_plan_execute(103,2016
PLy_plan_status(116,2251

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_resultobject.h,223
#define PLPY_RESULTOBJECT_H6,75
typedef struct PLyResultObject13,157
	PyObject   *nrows;nrows17,231
	PyObject   *rows;rows18,292
	PyObject   *status;status20,375
	TupleDesc	tupdesc;21,441
} PLyResultObject;22,461

/home/seinoyu/pgsql/master/postgresql/src/pl/plpython/plpy_planobject.h,261
#define PLPY_PLANOBJECT_H6,71
typedef struct PLyPlanObject12,151
	SPIPlanPtr	plan;15,197
	int			nargs;16,215
	Oid		   *types;types17,229
	Datum	   *values;values18,246
	PLyObToDatum *args;args19,265
	MemoryContext mcxt;20,286
} PLyPlanObject;21,307

/home/seinoyu/pgsql/master/postgresql/src/pl/plpgsql/src/pl_unreserved_kwlist_d.h,375
#define PL_UNRESERVED_KWLIST_D_H20,607
static const char UnreservedPLKeywords_kw_string[UnreservedPLKeywords_kw_string24,671
static const uint16 UnreservedPLKeywords_kw_offsets[UnreservedPLKeywords_kw_offsets109,1829
#define UNRESERVEDPLKEYWORDS_NUM_KEYWORDS 195,2373
UnreservedPLKeywords_hash_func(198,2430
static const ScanKeywordList UnreservedPLKeywords 238,4128

/home/seinoyu/pgsql/master/postgresql/src/pl/plpgsql/src/pl_unreserved_kwlist.h,20
PG_KEYWORD(30,1035

/home/seinoyu/pgsql/master/postgresql/src/pl/plpgsql/src/pl_handler.c,776
PG_MODULE_MAGIC;34,1017
static const struct config_enum_entry variable_conflict_options[variable_conflict_options37,1061
int			plpgsql_variable_conflict 44,1295
bool		plpgsql_print_strict_params 46,1353
bool		plpgsql_check_asserts 48,1397
char	   *plpgsql_extra_warnings_string plpgsql_extra_warnings_string50,1434
char	   *plpgsql_extra_errors_string plpgsql_extra_errors_string51,1481
int			plpgsql_extra_warnings;52,1526
int			plpgsql_extra_errors;53,1556
PLpgSQL_plugin **plpgsql_plugin_ptr plpgsql_plugin_ptr56,1608
plpgsql_extra_checks_check_hook(60,1666
plpgsql_extra_warnings_assign_hook(127,3339
plpgsql_extra_errors_assign_hook(133,3470
_PG_init(145,3700
plpgsql_call_handler(222,6041
plpgsql_inline_handler(295,7771
plpgsql_validator(417,11662

/home/seinoyu/pgsql/master/postgresql/src/pl/plpgsql/src/pl_reserved_kwlist_d.h,355
#define PL_RESERVED_KWLIST_D_H20,603
static const char ReservedPLKeywords_kw_string[ReservedPLKeywords_kw_string24,665
static const uint16 ReservedPLKeywords_kw_offsets[ReservedPLKeywords_kw_offsets50,956
#define RESERVEDPLKEYWORDS_NUM_KEYWORDS 77,1138
ReservedPLKeywords_hash_func(80,1193
static const ScanKeywordList ReservedPLKeywords 106,1913

/home/seinoyu/pgsql/master/postgresql/src/pl/plpgsql/src/pl_funcs.c,1932
static PLpgSQL_nsitem *ns_top ns_top35,1124
plpgsql_ns_init(43,1273
plpgsql_ns_push(54,1404
plpgsql_ns_pop(67,1686
plpgsql_ns_top(81,1944
plpgsql_ns_additem(92,2090
plpgsql_ns_lookup(130,3326
plpgsql_ns_lookup_label(195,4780
plpgsql_ns_find_nearest_loop(214,5178
plpgsql_stmt_typename(232,5521
plpgsql_getdiag_kindname(302,7406
free_stmt(378,10353
free_stmts(473,12853
free_block(484,12977
free_assign(501,13246
free_if(507,13326
free_case(524,13623
free_loop(540,13900
free_while(546,13977
free_fori(553,14080
free_fors(562,14231
free_forc(569,14333
free_foreach_a(576,14438
free_open(583,14549
free_fetch(597,14775
free_close(603,14853
free_perform(608,14907
free_call(614,14989
free_commit(620,15065
free_rollback(625,15121
free_set(630,15181
free_exit(636,15255
free_return(642,15331
free_return_next(648,15411
free_return_query(654,15501
free_raise(667,15715
free_assert(684,15988
free_execsql(691,16095
free_dynexecute(697,16180
free_dynfors(709,16362
free_getdiag(722,16563
free_expr(727,16621
plpgsql_free_function_memory(737,16741
static int	dump_indent;799,18223
dump_ind(836,19886
dump_stmt(845,19979
dump_stmts(941,22510
dump_block(952,22666
dump_assign(993,23381
dump_if(1002,23532
dump_case(1032,24048
dump_loop(1070,24712
dump_while(1082,24862
dump_fori(1096,25054
dump_fors(1126,25568
dump_forc(1140,25780
dump_foreach_a(1163,26151
dump_open(1180,26450
dump_fetch(1231,27296
dump_cursor_direction(1257,27730
dump_close(1291,28301
dump_perform(1298,28412
dump_call(1307,28550
dump_commit(1316,28708
dump_rollback(1326,28855
dump_set(1336,29010
dump_exit(1343,29109
dump_return(1358,29381
dump_return_next(1372,29631
dump_return_query(1386,29896
dump_raise(1423,30500
dump_assert(1492,31991
dump_execsql(1511,32278
dump_dynexecute(1530,32624
dump_dynfors(1567,33273
dump_getdiag(1598,33817
dump_expr(1618,34254
plpgsql_dumptree(1624,34324

/home/seinoyu/pgsql/master/postgresql/src/pl/plpgsql/src/pl_reserved_kwlist.h,19
PG_KEYWORD(29,944

/home/seinoyu/pgsql/master/postgresql/src/pl/plpgsql/src/pl_comp.c,2174
PLpgSQL_stmt_block *plpgsql_parse_result;plpgsql_parse_result41,994
static int	datums_alloc;43,1037
int			plpgsql_nDatums;44,1062
PLpgSQL_datum **plpgsql_Datums;plpgsql_Datums45,1085
static int	datums_last;46,1117
char	   *plpgsql_error_funcname;plpgsql_error_funcname48,1142
bool		plpgsql_DumpExecTree 49,1175
bool		plpgsql_check_syntax 50,1211
PLpgSQL_function *plpgsql_curr_compile;plpgsql_curr_compile52,1248
MemoryContext plpgsql_compile_tmp_cxt;55,1358
static HTAB *plpgsql_HashTable plpgsql_HashTable61,1467
typedef struct plpgsql_hashent63,1507
	PLpgSQL_func_hashkey key;65,1540
	PLpgSQL_function *function;function66,1567
} plpgsql_HashEnt;67,1596
#define FUNCS_PER_USER	69,1616
	const char *label;label77,1765
	int			sqlerrstate;78,1785
} ExceptionLabelMap;79,1805
static const ExceptionLabelMap exception_label_map[exception_label_map81,1827
plpgsql_compile(135,4129
do_compile(263,7993
plpgsql_compile_inline(843,26437
plpgsql_compile_error_callback(979,30202
add_parameter_name(1006,30822
add_dummy_return(1031,31608
plpgsql_parser_setup(1074,32872
plpgsql_pre_column_ref(1087,33281
plpgsql_post_column_ref(1101,33641
plpgsql_param_ref(1145,35241
resolve_column_ref(1172,35992
make_datum_param(1336,40262
plpgsql_parse_word(1389,41886
plpgsql_parse_dblword(1444,43145
plpgsql_parse_tripword(1524,45012
plpgsql_parse_wordtype(1592,46577
plpgsql_parse_cwordtype(1658,47897
plpgsql_parse_wordrowtype(1778,51205
plpgsql_parse_cwordrowtype(1815,52374
plpgsql_build_variable(1863,53798
plpgsql_build_record(1926,55351
build_row_from_vars(1953,56096
plpgsql_build_recfield(2020,57841
plpgsql_build_datatype(2067,59249
build_datatype(2089,59826
plpgsql_recognize_err_condition(2205,63297
plpgsql_parse_err_condition(2241,64224
plpgsql_start_datums(2292,65327
plpgsql_adddatum(2309,65796
plpgsql_finish_datums(2326,66192
plpgsql_add_initdatums(2370,67440
compute_function_hashkey(2428,68405
plpgsql_resolve_polymorphic_argtypes(2488,70431
delete_function(2550,72167
plpgsql_HashTableInit(2562,72494
plpgsql_HashTableLookup(2579,72897
plpgsql_HashTableInsert(2594,73192
plpgsql_HashTableDelete(2613,73682

/home/seinoyu/pgsql/master/postgresql/src/pl/plpgsql/src/pl_scanner.c,1401
IdentifierLookup plpgsql_IdentifierLookup 26,645
#define PG_KEYWORD(64,2667
static const uint16 ReservedPLKeywordTokens[ReservedPLKeywordTokens66,2709
static const uint16 UnreservedPLKeywordTokens[UnreservedPLKeywordTokens70,2795
#undef PG_KEYWORD74,2885
#define AT_STMT_START(82,3159
	YYSTYPE		lval;93,3421
	YYLTYPE		lloc;94,3466
	int			leng;95,3508
} TokenAuxData;96,3545
static core_yyscan_t yyscanner 106,3899
static core_yy_extra_type core_yy;107,3938
static const char *scanorig;scanorig110,4006
static int	plpgsql_yyleng;113,4116
static int	plpgsql_yytoken;116,4222
#define MAX_PUSHBACKS 119,4278
static int	num_pushbacks;121,4303
static int	pushback_token[pushback_token122,4329
static TokenAuxData pushback_auxdata[pushback_auxdata123,4371
static const char *cur_line_start;cur_line_start126,4470
static const char *cur_line_end;cur_line_end127,4505
static int	cur_line_num;128,4538
plpgsql_yylex(146,5193
internal_yylex(308,9695
push_back_token(354,10709
plpgsql_push_back_token(370,11181
plpgsql_token_is_unreserved_keyword(387,11555
plpgsql_append_source_text(404,11910
plpgsql_peek(420,12429
plpgsql_peek2(439,12914
plpgsql_scanner_errposition(472,13660
plpgsql_yyerror(499,14490
plpgsql_location_to_lineno(538,15637
location_lineno_init(562,16197
plpgsql_latest_lineno(572,16374
plpgsql_scanner_init(586,16667
plpgsql_scanner_finish(613,17363

/home/seinoyu/pgsql/master/postgresql/src/pl/plpgsql/src/plpgsql.h,21762
#define PLPGSQL_H17,459
#undef TEXTDOMAIN32,866
#define TEXTDOMAIN 33,884
#undef _35,929
#define _(36,938
typedef enum PLpgSQL_nsitem_type41,1018
	PLPGSQL_NSTYPE_LABEL,43,1053
	PLPGSQL_NSTYPE_VAR,44,1095
	PLPGSQL_NSTYPE_REC	45,1140
} PLpgSQL_nsitem_type;46,1187
typedef enum PLpgSQL_label_type51,1283
	PLPGSQL_LABEL_BLOCK,53,1317
	PLPGSQL_LABEL_LOOP,54,1366
	PLPGSQL_LABEL_OTHER	55,1413
} PLpgSQL_label_type;56,1456
typedef enum PLpgSQL_datum_type61,1512
	PLPGSQL_DTYPE_VAR,63,1546
	PLPGSQL_DTYPE_ROW,64,1566
	PLPGSQL_DTYPE_REC,65,1586
	PLPGSQL_DTYPE_RECFIELD,66,1606
	PLPGSQL_DTYPE_ARRAYELEM,67,1631
	PLPGSQL_DTYPE_PROMISE68,1657
} PLpgSQL_datum_type;69,1680
typedef enum PLpgSQL_promise_type74,1784
	PLPGSQL_PROMISE_NONE 76,1820
	PLPGSQL_PROMISE_TG_NAME,77,1889
	PLPGSQL_PROMISE_TG_WHEN,78,1915
	PLPGSQL_PROMISE_TG_LEVEL,79,1941
	PLPGSQL_PROMISE_TG_OP,80,1968
	PLPGSQL_PROMISE_TG_RELID,81,1992
	PLPGSQL_PROMISE_TG_TABLE_NAME,82,2019
	PLPGSQL_PROMISE_TG_TABLE_SCHEMA,83,2051
	PLPGSQL_PROMISE_TG_NARGS,84,2085
	PLPGSQL_PROMISE_TG_ARGV,85,2112
	PLPGSQL_PROMISE_TG_EVENT,86,2138
	PLPGSQL_PROMISE_TG_TAG87,2165
} PLpgSQL_promise_type;88,2189
typedef enum PLpgSQL_type_type93,2271
	PLPGSQL_TTYPE_SCALAR,95,2304
	PLPGSQL_TTYPE_REC,96,2359
	PLPGSQL_TTYPE_PSEUDO	97,2421
} PLpgSQL_type_type;98,2462
typedef enum PLpgSQL_stmt_type103,2520
	PLPGSQL_STMT_BLOCK,105,2553
	PLPGSQL_STMT_ASSIGN,106,2574
	PLPGSQL_STMT_IF,107,2596
	PLPGSQL_STMT_CASE,108,2614
	PLPGSQL_STMT_LOOP,109,2634
	PLPGSQL_STMT_WHILE,110,2654
	PLPGSQL_STMT_FORI,111,2675
	PLPGSQL_STMT_FORS,112,2695
	PLPGSQL_STMT_FORC,113,2715
	PLPGSQL_STMT_FOREACH_A,114,2735
	PLPGSQL_STMT_EXIT,115,2760
	PLPGSQL_STMT_RETURN,116,2780
	PLPGSQL_STMT_RETURN_NEXT,117,2802
	PLPGSQL_STMT_RETURN_QUERY,118,2829
	PLPGSQL_STMT_RAISE,119,2857
	PLPGSQL_STMT_ASSERT,120,2878
	PLPGSQL_STMT_EXECSQL,121,2900
	PLPGSQL_STMT_DYNEXECUTE,122,2923
	PLPGSQL_STMT_DYNFORS,123,2949
	PLPGSQL_STMT_GETDIAG,124,2972
	PLPGSQL_STMT_OPEN,125,2995
	PLPGSQL_STMT_FETCH,126,3015
	PLPGSQL_STMT_CLOSE,127,3036
	PLPGSQL_STMT_PERFORM,128,3057
	PLPGSQL_STMT_CALL,129,3080
	PLPGSQL_STMT_COMMIT,130,3100
	PLPGSQL_STMT_ROLLBACK,131,3122
	PLPGSQL_STMT_SET132,3146
} PLpgSQL_stmt_type;133,3164
	PLPGSQL_RC_OK,140,3231
	PLPGSQL_RC_EXIT,141,3247
	PLPGSQL_RC_RETURN,142,3265
	PLPGSQL_RC_CONTINUE143,3285
typedef enum PLpgSQL_getdiag_kind149,3354
	PLPGSQL_GETDIAG_ROW_COUNT,151,3390
	PLPGSQL_GETDIAG_CONTEXT,152,3418
	PLPGSQL_GETDIAG_ERROR_CONTEXT,153,3444
	PLPGSQL_GETDIAG_ERROR_DETAIL,154,3476
	PLPGSQL_GETDIAG_ERROR_HINT,155,3507
	PLPGSQL_GETDIAG_RETURNED_SQLSTATE,156,3536
	PLPGSQL_GETDIAG_COLUMN_NAME,157,3572
	PLPGSQL_GETDIAG_CONSTRAINT_NAME,158,3602
	PLPGSQL_GETDIAG_DATATYPE_NAME,159,3636
	PLPGSQL_GETDIAG_MESSAGE_TEXT,160,3668
	PLPGSQL_GETDIAG_TABLE_NAME,161,3699
	PLPGSQL_GETDIAG_SCHEMA_NAME162,3728
} PLpgSQL_getdiag_kind;163,3757
typedef enum PLpgSQL_raise_option_type168,3816
	PLPGSQL_RAISEOPTION_ERRCODE,170,3857
	PLPGSQL_RAISEOPTION_MESSAGE,171,3887
	PLPGSQL_RAISEOPTION_DETAIL,172,3917
	PLPGSQL_RAISEOPTION_HINT,173,3946
	PLPGSQL_RAISEOPTION_COLUMN,174,3973
	PLPGSQL_RAISEOPTION_CONSTRAINT,175,4002
	PLPGSQL_RAISEOPTION_DATATYPE,176,4035
	PLPGSQL_RAISEOPTION_TABLE,177,4066
	PLPGSQL_RAISEOPTION_SCHEMA178,4094
} PLpgSQL_raise_option_type;179,4122
typedef enum PLpgSQL_resolve_option184,4211
	PLPGSQL_RESOLVE_ERROR,186,4249
	PLPGSQL_RESOLVE_VARIABLE,187,4305
	PLPGSQL_RESOLVE_COLUMN	188,4373
} PLpgSQL_resolve_option;189,4439
typedef struct PLpgSQL_type199,4676
	char	   *typname;typname201,4706
	Oid			typoid;202,4758
	PLpgSQL_type_type ttype;203,4802
	int16		typlen;204,4854
	bool		typbyval;205,4914
	char		typtype;206,4931
	Oid			collation;207,4947
	bool		typisarray;208,5008
	int32		atttypmod;209,5070
	TypeName   *origtypname;origtypname211,5208
	TypeCacheEntry *tcache;tcache212,5269
	uint64		tupdesc_id;213,5335
} PLpgSQL_type;214,5392
typedef struct PLpgSQL_expr219,5449
	char	   *query;query221,5479
	SPIPlanPtr	plan;222,5496
	Bitmapset  *paramnos;paramnos223,5514
	int			rwparam;224,5578
	struct PLpgSQL_function *func;func227,5715
	struct PLpgSQL_nsitem *ns;ns230,5792
	Expr	   *expr_simple_expr;expr_simple_expr233,5880
	Oid			expr_simple_type;234,5943
	int32		expr_simple_typmod;235,6001
	bool		expr_simple_mutable;236,6060
	CachedPlanSource *expr_simple_plansource;expr_simple_plansource244,6427
	CachedPlan *expr_simple_plan;expr_simple_plan245,6498
	LocalTransactionId expr_simple_plan_lxid;246,6557
	ExprState  *expr_simple_state;expr_simple_state254,6856
	bool		expr_simple_in_use;255,6925
	LocalTransactionId expr_simple_lxid;256,6986
} PLpgSQL_expr;257,7024
typedef struct PLpgSQL_datum265,7207
	PLpgSQL_datum_type dtype;267,7238
	int			dno;268,7265
} PLpgSQL_datum;269,7277
typedef struct PLpgSQL_variable277,7418
	PLpgSQL_datum_type dtype;279,7452
	int			dno;280,7479
	char	   *refname;refname281,7491
	int			lineno;282,7510
	bool		isconst;283,7525
	bool		notnull;284,7541
	PLpgSQL_expr *default_val;default_val285,7557
} PLpgSQL_variable;286,7585
typedef struct PLpgSQL_var299,8081
	PLpgSQL_datum_type dtype;301,8110
	int			dno;302,8137
	char	   *refname;refname303,8149
	int			lineno;304,8168
	bool		isconst;305,8183
	bool		notnull;306,8199
	PLpgSQL_expr *default_val;default_val307,8215
	PLpgSQL_type *datatype;datatype310,8282
	PLpgSQL_expr *cursor_explicit_expr;cursor_explicit_expr317,8474
	int			cursor_explicit_argrow;318,8511
	int			cursor_options;319,8542
	Datum		value;323,8614
	bool		isnull;324,8629
	bool		freeval;325,8644
	PLpgSQL_promise_type promise;332,8866
} PLpgSQL_var;333,8897
typedef struct PLpgSQL_row353,9814
	PLpgSQL_datum_type dtype;355,9843
	int			dno;356,9870
	char	   *refname;refname357,9882
	int			lineno;358,9901
	bool		isconst;359,9916
	bool		notnull;360,9932
	PLpgSQL_expr *default_val;default_val361,9948
	TupleDesc	rowtupdesc;369,10193
	int			nfields;371,10217
	char	  **fieldnames;fieldnames372,10233
	int		   *varnos;varnos373,10255
} PLpgSQL_row;374,10273
typedef struct PLpgSQL_rec379,10354
	PLpgSQL_datum_type dtype;381,10383
	int			dno;382,10410
	char	   *refname;refname383,10422
	int			lineno;384,10441
	bool		isconst;385,10456
	bool		notnull;386,10472
	PLpgSQL_expr *default_val;default_val387,10488
	PLpgSQL_type *datatype;datatype396,10730
	Oid			rectypeid;397,10801
	int			firstfield;399,10922
	ExpandedRecordHeader *erh;erh404,11096
} PLpgSQL_rec;405,11124
typedef struct PLpgSQL_recfield410,11166
	PLpgSQL_datum_type dtype;412,11200
	int			dno;413,11227
	char	   *fieldname;fieldname416,11275
	int			recparentno;417,11317
	int			nextfield;418,11364
	uint64		rectupledescid;419,11422
	ExpandedRecordFieldInfo finfo;420,11493
} PLpgSQL_recfield;422,11636
typedef struct PLpgSQL_arrayelem427,11693
	PLpgSQL_datum_type dtype;429,11728
	int			dno;430,11755
	PLpgSQL_expr *subscript;subscript433,11803
	int			arrayparentno;434,11829
	Oid			parenttypoid;437,11959
	int32		parenttypmod;438,12027
	Oid			arraytypoid;439,12080
	int32		arraytypmod;440,12131
	int16		arraytyplen;441,12197
	Oid			elemtypoid;442,12245
	int16		elemtyplen;443,12297
	bool		elemtypbyval;444,12347
	char		elemtypalign;445,12405
} PLpgSQL_arrayelem;446,12457
typedef struct PLpgSQL_nsitem451,12526
	PLpgSQL_nsitem_type itemtype;453,12558
	int			itemno;459,12732
	struct PLpgSQL_nsitem *prev;prev460,12747
	char		name[name461,12777
} PLpgSQL_nsitem;462,12841
typedef struct PLpgSQL_stmt467,12893
	PLpgSQL_stmt_type cmd_type;469,12923
	int			lineno;470,12952
	unsigned int stmtid;477,13149
} PLpgSQL_stmt;478,13171
typedef struct PLpgSQL_condition483,13227
	int			sqlerrstate;485,13262
	char	   *condname;condname486,13302
	struct PLpgSQL_condition *next;next487,13360
} PLpgSQL_condition;488,13393
typedef struct PLpgSQL_exception_block493,13441
	int			sqlstate_varno;495,13482
	int			sqlerrm_varno;496,13505
	List	   *exc_list;exc_list497,13527
} PLpgSQL_exception_block;498,13575
typedef struct PLpgSQL_exception503,13643
	int			lineno;505,13678
	PLpgSQL_condition *conditions;conditions506,13693
	List	   *action;action507,13725
} PLpgSQL_exception;508,13770
typedef struct PLpgSQL_stmt_block513,13822
	PLpgSQL_stmt_type cmd_type;515,13858
	int			lineno;516,13887
	unsigned int stmtid;517,13902
	char	   *label;label518,13924
	List	   *body;body519,13941
	int			n_initvars;520,13984
	int		   *initvarnos;initvarnos521,14033
	PLpgSQL_exception_block *exceptions;exceptions522,14103
} PLpgSQL_stmt_block;523,14141
typedef struct PLpgSQL_stmt_assign528,14191
	PLpgSQL_stmt_type cmd_type;530,14228
	int			lineno;531,14257
	unsigned int stmtid;532,14272
	int			varno;533,14294
	PLpgSQL_expr *expr;expr534,14308
} PLpgSQL_stmt_assign;535,14329
typedef struct PLpgSQL_stmt_perform540,14381
	PLpgSQL_stmt_type cmd_type;542,14419
	int			lineno;543,14448
	unsigned int stmtid;544,14463
	PLpgSQL_expr *expr;expr545,14485
} PLpgSQL_stmt_perform;546,14506
typedef struct PLpgSQL_stmt_call551,14556
	PLpgSQL_stmt_type cmd_type;553,14591
	int			lineno;554,14620
	unsigned int stmtid;555,14635
	PLpgSQL_expr *expr;expr556,14657
	bool		is_call;557,14678
	PLpgSQL_variable *target;target558,14694
} PLpgSQL_stmt_call;559,14721
typedef struct PLpgSQL_stmt_commit564,14770
	PLpgSQL_stmt_type cmd_type;566,14807
	int			lineno;567,14836
	unsigned int stmtid;568,14851
	bool		chain;569,14873
} PLpgSQL_stmt_commit;570,14887
typedef struct PLpgSQL_stmt_rollback575,14940
	PLpgSQL_stmt_type cmd_type;577,14979
	int			lineno;578,15008
	unsigned int stmtid;579,15023
	bool		chain;580,15045
} PLpgSQL_stmt_rollback;581,15059
typedef struct PLpgSQL_stmt_set586,15109
	PLpgSQL_stmt_type cmd_type;588,15143
	int			lineno;589,15172
	unsigned int stmtid;590,15187
	PLpgSQL_expr *expr;expr591,15209
} PLpgSQL_stmt_set;592,15230
typedef struct PLpgSQL_diag_item597,15282
	PLpgSQL_getdiag_kind kind;599,15317
	int			target;600,15383
} PLpgSQL_diag_item;601,15425
typedef struct PLpgSQL_stmt_getdiag606,15483
	PLpgSQL_stmt_type cmd_type;608,15521
	int			lineno;609,15550
	unsigned int stmtid;610,15565
	bool		is_stacked;611,15587
	List	   *diag_items;diag_items612,15650
} PLpgSQL_stmt_getdiag;613,15705
typedef struct PLpgSQL_stmt_if618,15753
	PLpgSQL_stmt_type cmd_type;620,15786
	int			lineno;621,15815
	unsigned int stmtid;622,15830
	PLpgSQL_expr *cond;cond623,15852
	List	   *then_body;then_body624,15909
	List	   *elsif_list;elsif_list625,15956
	List	   *else_body;else_body626,16018
} PLpgSQL_stmt_if;627,16065
typedef struct PLpgSQL_if_elsif632,16125
	int			lineno;634,16159
	PLpgSQL_expr *cond;cond635,16174
	List	   *stmts;stmts636,16236
} PLpgSQL_if_elsif;637,16280
typedef struct PLpgSQL_stmt_case642,16326
	PLpgSQL_stmt_type cmd_type;644,16361
	int			lineno;645,16390
	unsigned int stmtid;646,16405
	PLpgSQL_expr *t_expr;t_expr647,16427
	int			t_varno;648,16490
	List	   *case_when_list;case_when_list649,16553
	bool		have_else;650,16619
	List	   *else_stmts;else_stmts651,16684
} PLpgSQL_stmt_case;652,16732
typedef struct PLpgSQL_case_when657,16790
	int			lineno;659,16825
	PLpgSQL_expr *expr;expr660,16840
	List	   *stmts;stmts661,16902
} PLpgSQL_case_when;662,16946
typedef struct PLpgSQL_stmt_loop667,17007
	PLpgSQL_stmt_type cmd_type;669,17042
	int			lineno;670,17071
	unsigned int stmtid;671,17086
	char	   *label;label672,17108
	List	   *body;body673,17125
} PLpgSQL_stmt_loop;674,17168
typedef struct PLpgSQL_stmt_while679,17226
	PLpgSQL_stmt_type cmd_type;681,17262
	int			lineno;682,17291
	unsigned int stmtid;683,17306
	char	   *label;label684,17328
	PLpgSQL_expr *cond;cond685,17345
	List	   *body;body686,17366
} PLpgSQL_stmt_while;687,17409
typedef struct PLpgSQL_stmt_fori692,17477
	PLpgSQL_stmt_type cmd_type;694,17512
	int			lineno;695,17541
	unsigned int stmtid;696,17556
	char	   *label;label697,17578
	PLpgSQL_var *var;var698,17595
	PLpgSQL_expr *lower;lower699,17614
	PLpgSQL_expr *upper;upper700,17636
	PLpgSQL_expr *step;step701,17658
	int			reverse;702,17717
	List	   *body;body703,17733
} PLpgSQL_stmt_fori;704,17776
typedef struct PLpgSQL_stmt_forq711,17978
	PLpgSQL_stmt_type cmd_type;713,18013
	int			lineno;714,18042
	unsigned int stmtid;715,18057
	char	   *label;label716,18079
	PLpgSQL_variable *var;var717,18096
	List	   *body;body718,18157
} PLpgSQL_stmt_forq;719,18200
typedef struct PLpgSQL_stmt_fors724,18266
	PLpgSQL_stmt_type cmd_type;726,18301
	int			lineno;727,18330
	unsigned int stmtid;728,18345
	char	   *label;label729,18367
	PLpgSQL_variable *var;var730,18384
	List	   *body;body731,18445
	PLpgSQL_expr *query;query733,18543
} PLpgSQL_stmt_fors;734,18565
typedef struct PLpgSQL_stmt_forc739,18631
	PLpgSQL_stmt_type cmd_type;741,18666
	int			lineno;742,18695
	unsigned int stmtid;743,18710
	char	   *label;label744,18732
	PLpgSQL_variable *var;var745,18749
	List	   *body;body746,18810
	int			curvar;748,18908
	PLpgSQL_expr *argquery;argquery749,18923
} PLpgSQL_stmt_forc;750,18979
typedef struct PLpgSQL_stmt_dynfors755,19046
	PLpgSQL_stmt_type cmd_type;757,19084
	int			lineno;758,19113
	unsigned int stmtid;759,19128
	char	   *label;label760,19150
	PLpgSQL_variable *var;var761,19167
	List	   *body;body762,19228
	PLpgSQL_expr *query;query764,19326
	List	   *params;params765,19348
} PLpgSQL_stmt_dynfors;766,19392
typedef struct PLpgSQL_stmt_foreach_a771,19454
	PLpgSQL_stmt_type cmd_type;773,19494
	int			lineno;774,19523
	unsigned int stmtid;775,19538
	char	   *label;label776,19560
	int			varno;777,19577
	int			slice;778,19620
	PLpgSQL_expr *expr;expr779,19664
	List	   *body;body780,19710
} PLpgSQL_stmt_foreach_a;781,19753
typedef struct PLpgSQL_stmt_open786,19804
	PLpgSQL_stmt_type cmd_type;788,19839
	int			lineno;789,19868
	unsigned int stmtid;790,19883
	int			curvar;791,19905
	int			cursor_options;792,19920
	PLpgSQL_expr *argquery;argquery793,19943
	PLpgSQL_expr *query;query794,19968
	PLpgSQL_expr *dynquery;dynquery795,19990
	List	   *params;params796,20015
} PLpgSQL_stmt_open;797,20059
typedef struct PLpgSQL_stmt_fetch802,20115
	PLpgSQL_stmt_type cmd_type;804,20151
	int			lineno;805,20180
	unsigned int stmtid;806,20195
	PLpgSQL_variable *target;target807,20217
	int			curvar;808,20273
	FetchDirection direction;809,20326
	long		how_many;810,20375
	PLpgSQL_expr *expr;expr811,20433
	bool		is_move;812,20483
	bool		returns_multiple_rows;813,20531
} PLpgSQL_stmt_fetch;814,20597
typedef struct PLpgSQL_stmt_close819,20643
	PLpgSQL_stmt_type cmd_type;821,20679
	int			lineno;822,20708
	unsigned int stmtid;823,20723
	int			curvar;824,20745
} PLpgSQL_stmt_close;825,20760
typedef struct PLpgSQL_stmt_exit830,20820
	PLpgSQL_stmt_type cmd_type;832,20855
	int			lineno;833,20884
	unsigned int stmtid;834,20899
	bool		is_exit;835,20921
	char	   *label;label836,20975
	PLpgSQL_expr *cond;cond837,21040
} PLpgSQL_stmt_exit;838,21061
typedef struct PLpgSQL_stmt_return843,21110
	PLpgSQL_stmt_type cmd_type;845,21147
	int			lineno;846,21176
	unsigned int stmtid;847,21191
	PLpgSQL_expr *expr;expr848,21213
	int			retvarno;849,21234
} PLpgSQL_stmt_return;850,21251
typedef struct PLpgSQL_stmt_return_next855,21307
	PLpgSQL_stmt_type cmd_type;857,21349
	int			lineno;858,21378
	unsigned int stmtid;859,21393
	PLpgSQL_expr *expr;expr860,21415
	int			retvarno;861,21436
} PLpgSQL_stmt_return_next;862,21453
typedef struct PLpgSQL_stmt_return_query867,21515
	PLpgSQL_stmt_type cmd_type;869,21558
	int			lineno;870,21587
	unsigned int stmtid;871,21602
	PLpgSQL_expr *query;query872,21624
	PLpgSQL_expr *dynquery;dynquery873,21669
	List	   *params;params874,21741
} PLpgSQL_stmt_return_query;875,21801
typedef struct PLpgSQL_stmt_raise880,21857
	PLpgSQL_stmt_type cmd_type;882,21893
	int			lineno;883,21922
	unsigned int stmtid;884,21937
	int			elog_level;885,21959
	char	   *condname;condname886,21978
	char	   *message;message887,22039
	List	   *params;params888,22107
	List	   *options;options889,22175
} PLpgSQL_stmt_raise;890,22230
typedef struct PLpgSQL_raise_option895,22286
	PLpgSQL_raise_option_type opt_type;897,22324
	PLpgSQL_expr *expr;expr898,22361
} PLpgSQL_raise_option;899,22382
typedef struct PLpgSQL_stmt_assert904,22434
	PLpgSQL_stmt_type cmd_type;906,22471
	int			lineno;907,22500
	unsigned int stmtid;908,22515
	PLpgSQL_expr *cond;cond909,22537
	PLpgSQL_expr *message;message910,22558
} PLpgSQL_stmt_assert;911,22582
typedef struct PLpgSQL_stmt_execsql916,22649
	PLpgSQL_stmt_type cmd_type;918,22687
	int			lineno;919,22716
	unsigned int stmtid;920,22731
	PLpgSQL_expr *sqlstmt;sqlstmt921,22753
	bool		mod_stmt;922,22777
	bool		into;924,22892
	bool		strict;925,22928
	PLpgSQL_variable *target;target926,22968
} PLpgSQL_stmt_execsql;927,23029
typedef struct PLpgSQL_stmt_dynexecute932,23094
	PLpgSQL_stmt_type cmd_type;934,23135
	int			lineno;935,23164
	unsigned int stmtid;936,23179
	PLpgSQL_expr *query;query937,23201
	bool		into;938,23248
	bool		strict;939,23284
	PLpgSQL_variable *target;target940,23324
	List	   *params;params941,23385
} PLpgSQL_stmt_dynexecute;942,23429
typedef struct PLpgSQL_func_hashkey947,23497
	Oid			funcOid;949,23535
	bool		isTrigger;951,23552
	bool		isEventTrigger;952,23609
	Oid			trigOid;962,24019
	Oid			inputCollation;969,24234
	Oid			argtypes[argtypes975,24411
} PLpgSQL_func_hashkey;976,24443
typedef enum PLpgSQL_trigtype981,24491
	PLPGSQL_DML_TRIGGER,983,24523
	PLPGSQL_EVENT_TRIGGER,984,24545
	PLPGSQL_NOT_TRIGGER985,24569
} PLpgSQL_trigtype;986,24590
typedef struct PLpgSQL_function991,24648
	char	   *fn_signature;fn_signature993,24682
	Oid			fn_oid;994,24706
	TransactionId fn_xmin;995,24721
	ItemPointerData fn_tid;996,24745
	PLpgSQL_trigtype fn_is_trigger;997,24770
	Oid			fn_input_collation;998,24803
	PLpgSQL_func_hashkey *fn_hashkey;fn_hashkey999,24830
	MemoryContext fn_cxt;1000,24898
	Oid			fn_rettype;1002,24922
	int			fn_rettyplen;1003,24941
	bool		fn_retbyval;1004,24962
	bool		fn_retistuple;1005,24982
	bool		fn_retisdomain;1006,25004
	bool		fn_retset;1007,25027
	bool		fn_readonly;1008,25045
	char		fn_prokind;1009,25065
	int			fn_nargs;1011,25085
	int			fn_argvarnos[fn_argvarnos1012,25102
	int			out_param_varno;1013,25138
	int			found_varno;1014,25162
	int			new_varno;1015,25182
	int			old_varno;1016,25200
	PLpgSQL_resolve_option resolve_option;1018,25219
	bool		print_strict_params;1020,25260
	int			extra_warnings;1023,25309
	int			extra_errors;1024,25332
	unsigned int nstatements;1027,25397
	int			ndatums;1030,25487
	PLpgSQL_datum **datums;datums1031,25503
	Size		copiable_size;1032,25528
	PLpgSQL_stmt_block *action;action1035,25626
	struct PLpgSQL_execstate *cur_estate;cur_estate1038,25709
	unsigned long use_count;1039,25748
} PLpgSQL_function;1040,25774
typedef struct PLpgSQL_execstate1045,25828
	PLpgSQL_function *func;func1047,25863
	TriggerData *trigdata;trigdata1049,25920
	EventTriggerData *evtrigdata;evtrigdata1050,25989
	Datum		retval;1052,26063
	bool		retisnull;1053,26079
	Oid			rettype;1054,26097
	Oid			fn_rettype;1056,26144
	bool		retistuple;1057,26207
	bool		retisset;1058,26226
	bool		readonly_func;1060,26244
	bool		atomic;1061,26266
	char	   *exitlabel;exitlabel1063,26282
	ErrorData  *cur_error;cur_error1065,26385
	Tuplestorestate *tuple_store;tuple_store1067,26451
	TupleDesc	tuple_store_desc;1068,26517
	MemoryContext tuple_store_cxt;1069,26589
	ResourceOwner tuple_store_owner;1070,26621
	ReturnSetInfo *rsi;rsi1071,26655
	int			found_varno;1073,26677
	int			ndatums;1081,26988
	PLpgSQL_datum **datums;datums1082,27004
	MemoryContext datum_context;1084,27105
	ParamListInfo paramLI;1092,27431
	EState	   *simple_eval_estate;simple_eval_estate1095,27525
	ResourceOwner simple_eval_resowner;1096,27557
	HTAB	   *cast_hash;cast_hash1099,27647
	MemoryContext cast_hash_context;1100,27668
	MemoryContext stmt_mcontext;1103,27765
	MemoryContext stmt_mcontext_parent;1104,27839
	SPITupleTable *eval_tuptable;eval_tuptable1107,27977
	uint64		eval_processed;1108,28008
	ExprContext *eval_econtext;eval_econtext1109,28033
	PLpgSQL_stmt *err_stmt;err_stmt1112,28156
	const char *err_text;err_text1113,28201
	void	   *plugin_info;plugin_info1115,28254
} PLpgSQL_execstate;1116,28319
typedef struct PLpgSQL_plugin1148,29706
	void		(*func_setup)func_setup1151,29784
	void		(*func_beg)func_beg1152,29858
	void		(*func_end)func_end1153,29930
	void		(*stmt_beg)stmt_beg1154,30002
	void		(*stmt_end)stmt_end1155,30070
	void		(*error_callback)error_callback1158,30187
	void		(*assign_expr)assign_expr1159,30225
} PLpgSQL_plugin;1161,30327
typedef struct PLword1167,30390
	char	   *ident;ident1169,30414
	bool		quoted;1170,30469
} PLword;1171,30514
typedef struct PLcword1173,30525
	List	   *idents;idents1175,30550
} PLcword;1176,30615
typedef struct PLwdatum1178,30627
	PLpgSQL_datum *datum;datum1180,30653
	char	   *ident;ident1181,30703
	bool		quoted;1182,30749
	List	   *idents;idents1183,30764
} PLwdatum;1184,30814
	IDENTIFIER_LOOKUP_NORMAL,1192,31020
	IDENTIFIER_LOOKUP_DECLARE,1193,31084
	IDENTIFIER_LOOKUP_EXPR	1194,31153
} IdentifierLookup;1195,31219
#define PLPGSQL_XCHECK_NONE	1206,31453
#define PLPGSQL_XCHECK_SHADOWVAR	1207,31488
#define PLPGSQL_XCHECK_TOOMANYROWS	1208,31533
#define PLPGSQL_XCHECK_STRICTMULTIASSIGNMENT	1209,31580
#define PLPGSQL_XCHECK_ALL	1210,31634
extern void plpgsql_yyerror(1334,36474

/home/seinoyu/pgsql/master/postgresql/src/pl/plpgsql/src/pl_exec.c,4254
typedef struct SimpleEcontextStackEntry88,3515
	ExprContext *stack_econtext;stack_econtext90,3557
	SubTransactionId xact_subxid;91,3612
	struct SimpleEcontextStackEntry *next;next92,3672
} SimpleEcontextStackEntry;93,3738
static EState *shared_simple_eval_estate shared_simple_eval_estate95,3767
static SimpleEcontextStackEntry *simple_econtext_stack simple_econtext_stack96,3816
static ResourceOwner shared_simple_eval_resowner 106,4330
#define get_eval_mcontext(131,5594
#define eval_mcontext_alloc(133,5680
#define eval_mcontext_alloc0(135,5773
	Oid			srctype;155,6639
	Oid			dsttype;156,6683
	int32		srctypmod;157,6732
	int32		dsttypmod;158,6781
} plpgsql_CastHashKey;159,6835
	plpgsql_CastHashKey key;163,6908
	Expr	   *cast_expr;cast_expr164,6967
	CachedExpression *cast_cexpr;cast_cexpr165,7034
	ExprState  *cast_exprstate;cast_exprstate167,7174
	bool		cast_in_use;168,7232
	LocalTransactionId cast_lxid;169,7295
} plpgsql_CastHashEntry;170,7326
static MemoryContext shared_cast_context 172,7352
static HTAB *shared_cast_hash shared_cast_hash173,7401
#define LOOP_RC_PROCESSING(198,8232
plpgsql_exec_function(467,19314
coerce_function_result_tuple(790,28784
plpgsql_exec_trigger(901,32321
plpgsql_exec_event_trigger(1141,39912
plpgsql_exec_error_callback(1209,41723
copy_plpgsql_datums(1267,43362
plpgsql_fulfill_promise(1342,45361
get_stmt_mcontext(1502,50938
push_stmt_mcontext(1521,51495
pop_stmt_mcontext(1540,52273
exception_matches_conditions(1553,52619
exec_toplevel_block(1592,53669
exec_stmt_block(1621,54413
exec_stmts(1947,63668
exec_stmt_assign(2119,68103
exec_stmt_perform(2135,68484
exec_stmt_call(2150,68789
exec_stmt_getdiag(2386,75010
exec_stmt_if(2496,77911
exec_stmt_case(2526,78541
exec_stmt_loop(2613,80901
exec_stmt_while(2635,81274
exec_stmt_fori(2666,81824
exec_stmt_fors(2809,85080
exec_stmt_forc(2838,85600
exec_stmt_foreach_a(2974,89358
exec_stmt_exit(3130,94271
exec_stmt_return(3163,95002
exec_stmt_return_next(3306,99237
exec_stmt_return_query(3524,105445
exec_init_tuple_store(3642,108721
#define SET_RAISE_OPTION_TEXT(3679,109924
exec_stmt_raise(3694,110283
exec_stmt_assert(3905,116053
plpgsql_estate_setup(3948,116949
exec_eval_cleanup(4098,121758
exec_prepare_plan(4119,122267
exec_stmt_execsql(4165,123515
exec_stmt_dynexecute(4390,129800
exec_stmt_dynfors(4573,134781
exec_stmt_open(4600,135261
exec_stmt_fetch(4756,139423
exec_stmt_close(4847,141635
exec_stmt_commit(4890,142619
exec_stmt_rollback(4917,143108
exec_stmt_set(4947,143747
exec_assign_expr(4972,144324
exec_assign_c_string(5009,145379
exec_assign_value(5037,146179
exec_eval_datum(5456,159636
plpgsql_exec_get_datum_type(5607,163607
plpgsql_exec_get_datum_type_info(5692,165794
exec_eval_integer(5787,168460
exec_eval_boolean(5810,169042
exec_eval_expr(5833,169641
exec_run_select(5916,171647
exec_for_query(5980,173448
exec_eval_simple_expr(6151,178588
setup_param_list(6369,185465
plpgsql_param_fetch(6427,187289
plpgsql_param_compile(6556,190607
plpgsql_param_eval_var(6631,193059
plpgsql_param_eval_var_ro(6663,193993
plpgsql_param_eval_recfield(6700,195090
plpgsql_param_eval_generic(6772,197331
plpgsql_param_eval_generic_ro(6812,198553
exec_move_row(6862,200135
revalidate_rectypeid(6997,203883
make_expanded_record_for_rec(7077,206439
exec_move_row_from_fields(7140,208344
compatible_tupdescs(7406,216540
make_tuple_from_row(7450,217726
deconstruct_composite_datum(7505,219315
exec_move_row_from_datum(7536,220265
instantiate_empty_record_variable(7769,228027
convert_value_to_string(7804,229456
exec_cast_value(7833,230392
do_cast_value(7857,230950
get_cast_hashentry(7901,232130
exec_simple_check_plan(8062,237517
exec_save_simple_expr(8179,240846
exec_check_rw_parameter(8267,243814
contains_target_param(8344,245696
exec_set_found(8366,246165
plpgsql_create_econtext(8382,246691
plpgsql_destroy_econtext(8451,248974
plpgsql_xact_cb(8473,249583
plpgsql_subxact_cb(8515,251010
assign_simple_var(8542,251814
assign_text_var(8609,254227
assign_record_var(8618,254463
exec_eval_using_params(8641,255071
exec_dynquery_with_params(8723,257182
format_expr_params(8783,258940
format_preparedparamsdata(8840,260187

/home/seinoyu/pgsql/master/postgresql/src/pl/tcl/pltcl.c,4369
PG_MODULE_MAGIC;43,1017
#define HAVE_TCL_VERSION(45,1035
#define CONST8656,1368
#undef TEXTDOMAIN60,1438
#define TEXTDOMAIN 61,1456
utf_u2e(75,1938
utf_e2u(81,2042
#define UTF_BEGIN 86,2125
#define UTF_END 91,2223
#define UTF_U2E(96,2339
#define UTF_E2U(99,2411
typedef struct pltcl_interp_desc113,3151
	Oid			user_id;115,3186
	Tcl_Interp *interp;interp116,3235
	Tcl_HashTable query_hash;117,3280
} pltcl_interp_desc;118,3338
typedef struct pltcl_proc_desc136,4281
	char	   *user_proname;user_proname138,4314
	char	   *internal_proname;internal_proname139,4379
	MemoryContext fn_cxt;140,4446
	unsigned long fn_refcount;141,4510
	TransactionId fn_xmin;142,4572
	ItemPointerData fn_tid;143,4623
	bool		fn_readonly;144,4674
	bool		lanpltrusted;145,4722
	pltcl_interp_desc *interp_desc;interp_desc146,4775
	Oid			result_typid;147,4833
	FmgrInfo	result_in_func;148,4884
	Oid			result_typioparam;149,4952
	bool		fn_retisset;150,5006
	bool		fn_retistuple;151,5063
	bool		fn_retisdomain;152,5126
	void	   *domain_info;domain_info153,5187
	int			nargs;154,5247
	FmgrInfo   *arg_out_func;arg_out_func156,5329
	bool	   *arg_is_rowtype;arg_is_rowtype157,5387
} pltcl_proc_desc;158,5442
typedef struct pltcl_query_desc164,5667
	char		qname[qname166,5701
	SPIPlanPtr	plan;167,5719
	int			nargs;168,5737
	Oid		   *argtypes;argtypes169,5751
	FmgrInfo   *arginfuncs;arginfuncs170,5771
	Oid		   *argtypioparams;argtypioparams171,5796
} pltcl_query_desc;172,5822
typedef struct pltcl_proc_key186,6537
	Oid			proc_id;188,6569
	Oid			is_trigger;194,6713
	Oid			user_id;195,6765
} pltcl_proc_key;196,6820
typedef struct pltcl_proc_ptr198,6839
	pltcl_proc_key proc_key;200,6871
	pltcl_proc_desc *proc_ptr;proc_ptr201,6929
} pltcl_proc_ptr;202,6957
typedef struct pltcl_call_state208,7140
	FunctionCallInfo fcinfo;211,7220
	TriggerData *trigdata;trigdata214,7320
	pltcl_proc_desc *prodesc;prodesc217,7406
	TupleDesc	ret_tupdesc;224,7648
	AttInMetadata *attinmeta;attinmeta225,7720
	ReturnSetInfo *rsi;rsi227,7796
	Tuplestorestate *tuple_store;tuple_store228,7857
	MemoryContext tuple_store_cxt;229,7922
	ResourceOwner tuple_store_owner;230,7996
} pltcl_call_state;231,8030
static char *pltcl_start_proc pltcl_start_proc237,8212
static char *pltclu_start_proc pltclu_start_proc238,8250
static bool pltcl_pm_init_done 239,8289
static Tcl_Interp *pltcl_hold_interp pltcl_hold_interp240,8329
static HTAB *pltcl_interp_htab pltcl_interp_htab241,8374
static HTAB *pltcl_proc_htab pltcl_proc_htab242,8413
static pltcl_call_state *pltcl_current_call_state pltcl_current_call_state245,8501
	const char *label;label252,8767
	int			sqlerrstate;253,8787
} TclExceptionNameMap;254,8807
static const TclExceptionNameMap exception_name_map[exception_name_map256,8831
pltcl_InitNotifier(347,13029
pltcl_FinalizeNotifier(355,13181
pltcl_SetTimer(360,13244
pltcl_AlertNotifier(365,13303
pltcl_CreateFileHandler(370,13363
pltcl_DeleteFileHandler(376,13471
pltcl_ServiceModeHook(381,13520
pltcl_WaitForEvent(386,13568
_PG_init(401,13877
pltcl_init_interp(486,16917
pltcl_fetch_interp(559,19828
call_pltcl_start_proc(589,20637
start_proc_error_callback(676,23499
pltcl_call_handler(696,24138
pltclu_call_handler(708,24339
pltcl_handler(719,24696
pltcl_func_handler(793,26934
pltcl_trigger_handler(1045,34795
pltcl_event_trigger_handler(1306,43837
throw_tcl_error(1357,45482
compile_pltcl_function(1386,46553
pltcl_elog(1748,59132
pltcl_construct_errorCode(1835,61309
pltcl_get_condition_name(1980,65490
pltcl_quote(1998,65985
pltcl_argisnull(2052,67495
pltcl_returnnull(2106,69250
pltcl_returnnext(2144,70441
pltcl_subtrans_begin(2267,73505
pltcl_subtrans_commit(2276,73718
pltcl_subtrans_abort(2285,73976
pltcl_SPI_execute(2314,74798
	enum options2328,75166
		OPT_ARRAY,2330,75183
		OPT_ARRAY, OPT_COUNT2330,75183
pltcl_process_SPI_result(2423,77254
pltcl_SPI_prepare(2534,79688
pltcl_SPI_execute_plan(2661,84003
	enum options2682,84527
		OPT_ARRAY,2684,84544
		OPT_ARRAY, OPT_COUNT,2684,84544
		OPT_ARRAY, OPT_COUNT, OPT_NULLS2684,84544
pltcl_subtransaction(2877,89909
pltcl_commit(2925,91142
pltcl_rollback(2965,91978
pltcl_set_tuple_values(3006,92911
pltcl_build_tuple_argument(3092,95441
pltcl_build_tuple_result(3168,97778
pltcl_init_tuple_store(3252,100204

/home/seinoyu/pgsql/master/postgresql/src/port/gettimeofday.c,278
static const unsigned __int64 epoch 34,1217
#define FILETIME_UNITS_PER_SEC	40,1390
#define FILETIME_UNITS_PER_USEC 41,1431
typedef VOID(WINAPI * PgGetSystemTimeFn)48,1647
static PgGetSystemTimeFn pg_get_system_time 54,1891
init_gettimeofday(62,2151
gettimeofday(104,3743

/home/seinoyu/pgsql/master/postgresql/src/port/qsort_arg.c,153
#define swapcode(70,3031
#define SWAPINIT(82,3310
swapfunc(86,3459
#define swap(94,3595
#define vecswap(102,3815
med3(105,3896
qsort_arg(113,4123

/home/seinoyu/pgsql/master/postgresql/src/port/pthread-win32.h,158
#define __PTHREAD_H5,55
typedef ULONG pthread_key_t;7,76
typedef CRITICAL_SECTION *pthread_mutex_t;pthread_mutex_t8,105
typedef int pthread_once_t;9,148

/home/seinoyu/pgsql/master/postgresql/src/port/pg_crc32c_sse42.c,29
pg_comp_crc32c_sse42(22,530

/home/seinoyu/pgsql/master/postgresql/src/port/erand48.c,309
#define RAND48_MULT	41,1531
#define RAND48_ADD	42,1580
#define RAND48_SEED_0	45,1701
#define RAND48_SEED_1	46,1732
#define RAND48_SEED_2	47,1763
static unsigned short _rand48_seed[_rand48_seed49,1795
_dorand48(63,2130
pg_erand48(88,2660
pg_lrand48(100,2945
pg_jrand48(112,3204
pg_srand48(131,3833

/home/seinoyu/pgsql/master/postgresql/src/port/inet_net_ntop.c,352
static const char rcsid[rcsid21,925
#define PGSQL_AF_INET	42,1434
#define PGSQL_AF_INET6	43,1470
#define NS_IN6ADDRSZ 47,1516
#define NS_INT16SZ 48,1540
#define SPRINTF(51,1582
#define SPRINTF(53,1628
pg_inet_net_ntop(77,2346
inet_net_ntop_ipv4(115,3505
decoct(156,4195
inet_net_ntop_ipv6(179,4562
		int			base,192,5082
					len;193,5096

/home/seinoyu/pgsql/master/postgresql/src/port/dirent.c,155
struct DIR25,515
	char	   *dirname;dirname27,528
	struct dirent ret;28,547
	HANDLE		handle;29,600
opendir(33,627
readdir(77,1551
closedir(113,2291

/home/seinoyu/pgsql/master/postgresql/src/port/win32error.c,98
	DWORD		winerr;22,446
	int			doserr;23,462
}			doserrors[doserrors24,477
_dosmaperr(171,2303

/home/seinoyu/pgsql/master/postgresql/src/port/strlcpy.c,17
strlcpy(45,1625

/home/seinoyu/pgsql/master/postgresql/src/port/tar.c,97
print_tar_number(22,711
read_tar_number(58,1544
tarChecksum(90,2000
tarCreateHeader(114,2598

/home/seinoyu/pgsql/master/postgresql/src/port/path.c,1064
#undef _WIN32_IE26,552
#define _WIN32_IE 28,576
#undef near30,613
#define near32,632
#define IS_PATH_VAR_SEP(42,744
#define IS_PATH_VAR_SEP(44,792
skip_drive(62,1243
#define skip_drive(78,1504
has_drive_prefix(87,1636
first_dir_separator(103,1875
first_path_var_separator(120,2208
last_dir_separator(138,2534
make_native_path(166,3318
cleanup_path(185,3674
join_path_components(218,4409
canonicalize_path(254,5291
path_contains_parent_reference(376,8210
path_is_relative_and_below_cwd(405,9015
path_is_prefix_of_path(438,10030
get_progname(453,10378
dir_strcmp(491,11293
make_relative_path(539,12829
make_absolute_path(608,14752
get_share_path(704,16333
get_etc_path(713,16490
get_include_path(722,16649
get_pkginclude_path(731,16815
get_includeserver_path(740,16990
get_lib_path(749,17161
get_pkglib_path(758,17315
get_locale_path(767,17475
get_doc_path(776,17632
get_html_path(785,17784
get_man_path(794,17937
get_home_path(807,18229
get_parent_directory(854,19634
trim_directory(868,19916
trim_trailing_separator(899,20522

/home/seinoyu/pgsql/master/postgresql/src/port/pg_bitutils.c,443
const uint8 pg_leftmost_one_pos[pg_leftmost_one_pos34,924
const uint8 pg_rightmost_one_pos[pg_rightmost_one_pos62,2184
const uint8 pg_number_of_ones[pg_number_of_ones87,3213
#define USE_POPCNT_ASM 115,4388
pg_popcount_available(142,5158
pg_popcount32_choose(164,5719
pg_popcount64_choose(181,5997
pg_popcount32_asm(202,6347
pg_popcount64_asm(215,6568
pg_popcount32_slow(231,6826
pg_popcount64_slow(253,7214
pg_popcount(282,7756

/home/seinoyu/pgsql/master/postgresql/src/port/pgmkdirp.c,20
pg_mkdir_p(57,2513

/home/seinoyu/pgsql/master/postgresql/src/port/dlopen.c,202
dlopen(25,523
dlsym(40,761
dlclose(50,934
dlerror(56,1004
static char last_dyn_error[last_dyn_error68,1144
set_dl_error(71,1190
dlerror(90,1583
dlclose(99,1676
dlsym(111,1818
dlopen(126,2022

/home/seinoyu/pgsql/master/postgresql/src/port/pgcheckdir.c,21
pg_check_dir(31,814

/home/seinoyu/pgsql/master/postgresql/src/port/inet_aton.c,19
inet_aton(56,2438

/home/seinoyu/pgsql/master/postgresql/src/port/fls.c,13
fls(55,2226

/home/seinoyu/pgsql/master/postgresql/src/port/sprompt.c,22
simple_prompt(37,992

/home/seinoyu/pgsql/master/postgresql/src/port/explicit_bzero.c,84
explicit_bzero(20,435
explicit_bzero(28,541
bzero2(42,871
explicit_bzero(50,993

/home/seinoyu/pgsql/master/postgresql/src/port/win32setlocale.c,452
#undef setlocale37,1483
struct locale_map39,1501
	const char *locale_name_start;locale_name_start48,1850
	const char *locale_name_end;locale_name_end49,1882
	const char *replacement;replacement51,1913
static const struct locale_map locale_map_argument[locale_map_argument57,2054
static const struct locale_map locale_map_result[locale_map_result92,3305
#define MAX_LOCALE_NAME_LEN	108,3897
map_locale(111,3951
pgwin32_setlocale(172,5567

/home/seinoyu/pgsql/master/postgresql/src/port/getaddrinfo.c,439
typedef int (__stdcall * getaddrinfo_ptr_t)43,1380
typedef void (__stdcall * freeaddrinfo_ptr_t)48,1560
typedef int (__stdcall * getnameinfo_ptr_t)50,1630
static getaddrinfo_ptr_t getaddrinfo_ptr 57,1907
static freeaddrinfo_ptr_t freeaddrinfo_ptr 58,1956
static getnameinfo_ptr_t getnameinfo_ptr 59,2007
haveNativeWindowsIPv6routines(63,2070
getaddrinfo(120,3511
freeaddrinfo(248,5941
gai_strerror(273,6312
getnameinfo(340,7632

/home/seinoyu/pgsql/master/postgresql/src/port/dirmod.c,618
#undef rename26,664
#undef unlink27,678
pgrename(48,963
pgunlink(99,2327
#define rename(122,2950
#define unlink(123,2995
	DWORD		ReparseTag;138,3429
	WORD		ReparseDataLength;139,3449
	WORD		Reserved;140,3475
	WORD		SubstituteNameOffset;142,3525
	WORD		SubstituteNameLength;143,3554
	WORD		PrintNameOffset;144,3583
	WORD		PrintNameLength;145,3607
	WCHAR		PathBuffer[PathBuffer146,3631
} REPARSE_JUNCTION_DATA_BUFFER;147,3674
#define REPARSE_JUNCTION_DATA_BUFFER_HEADER_SIZE 149,3707
pgsymlink(159,3960
pgreadlink(240,6290
pgwin32_is_junction(344,8466
#undef stat360,8824
pgwin32_safestat(368,9017

/home/seinoyu/pgsql/master/postgresql/src/port/pgsleep.c,19
pg_usleep(47,1639

/home/seinoyu/pgsql/master/postgresql/src/port/pread.c,17
pg_pread(27,586

/home/seinoyu/pgsql/master/postgresql/src/port/qsort.c,178
#define swapcode(70,3017
#define SWAPINIT(82,3296
swapfunc(86,3445
#define swap(94,3581
#define vecswap(102,3801
med3(105,3882
pg_qsort(113,4088
pg_qsort_strcmp(232,6242

/home/seinoyu/pgsql/master/postgresql/src/port/strerror.c,177
#undef strerror21,577
#undef strerror_r22,593
pg_strerror(35,882
pg_strerror_r(46,1091
gnuish_strerror_r(85,2320
get_errno_symbol(113,3005
win32_socket_strerror(287,6045

/home/seinoyu/pgsql/master/postgresql/src/port/srandom.c,16
srandom(22,436

/home/seinoyu/pgsql/master/postgresql/src/port/strtof.c,34
strtof(28,644
pg_strtof(75,2191

/home/seinoyu/pgsql/master/postgresql/src/port/kill.c,15
pgkill(22,457

/home/seinoyu/pgsql/master/postgresql/src/port/pg_config_paths.h,302
#define PGBINDIR 1,0
#define PGSHAREDIR 2,50
#define SYSCONFDIR 3,104
#define INCLUDEDIR 4,156
#define PKGINCLUDEDIR 5,212
#define INCLUDEDIRSERVER 6,271
#define LIBDIR 7,340
#define PKGLIBDIR 8,388
#define LOCALEDIR 9,439
#define DOCDIR 10,499
#define HTMLDIR 11,554
#define MANDIR 12,610

/home/seinoyu/pgsql/master/postgresql/src/port/getopt.c,174
static char sccsid[sccsid36,1686
int			opterr 49,2179
char	   *optarg;optarg52,2344
#define BADCH	56,2411
#define BADARG	57,2434
#define EMSG	58,2458
getopt(71,2857

/home/seinoyu/pgsql/master/postgresql/src/port/pgstrsignal.c,22
pg_strsignal(42,1336

/home/seinoyu/pgsql/master/postgresql/src/port/pg_crc32c_armv8.c,29
pg_comp_crc32c_armv8(22,534

/home/seinoyu/pgsql/master/postgresql/src/port/pqsignal.c,18
pqsignal(40,1269

/home/seinoyu/pgsql/master/postgresql/src/port/pg_crc32c_sse42_choose.c,65
pg_crc32c_sse42_available(34,859
pg_comp_crc32c_choose(54,1337

/home/seinoyu/pgsql/master/postgresql/src/port/snprintf.c,1290
#define PG_NL_ARGMAX 44,2071
#undef	vsnprintf103,4327
#undef	snprintf104,4344
#undef	vsprintf105,4360
#undef	sprintf106,4376
#undef	vfprintf107,4391
#undef	fprintf108,4407
#undef	vprintf109,4422
#undef	printf110,4437
	char	   *bufptr;bufptr127,5081
	char	   *bufstart;bufstart128,5135
	char	   *bufend;bufend129,5183
	FILE	   *stream;stream131,5312
	int			nchars;132,5375
	bool		failed;133,5433
} PrintfTarget;134,5488
	ATYPE_NONE 144,5809
	ATYPE_INT,145,5826
	ATYPE_LONG,146,5838
	ATYPE_LONGLONG,147,5851
	ATYPE_DOUBLE,148,5868
	ATYPE_CHARPTR149,5883
} PrintfArgType;150,5898
	int			i;154,5932
	long		l;155,5942
	long long	ll;156,5952
	double		d;157,5967
	char	   *cptr;cptr158,5979
} PrintfArgValue;159,5995
pg_vsnprintf(174,6328
pg_snprintf(202,7027
pg_vsprintf(214,7217
pg_sprintf(230,7612
pg_vfprintf(242,7779
pg_fprintf(264,8288
pg_vprintf(276,8461
pg_printf(282,8552
flushbuffer(298,8872
strchrnul(350,10823
dopr(376,11389
find_arguments(747,19343
fmtstr(969,24155
fmtptr(998,24706
fmtint(1012,24997
fmtchar(1099,26767
fmtfloat(1117,27075
pg_strfromd(1263,31087
dostr(1355,32910
dopr_outch(1392,33567
dopr_outchmulti(1408,33882
adjust_sign(1445,34517
compute_padlen(1459,34709
leading_pad(1473,34905
trailing_pad(1509,35479

/home/seinoyu/pgsql/master/postgresql/src/port/strnlen.c,16
strnlen(26,697

/home/seinoyu/pgsql/master/postgresql/src/port/random.c,15
random(22,433

/home/seinoyu/pgsql/master/postgresql/src/port/getrusage.c,79
getrusage(31,757
#define TICK_TO_SEC(101,2257
#define TICK_TO_USEC(102,2299

/home/seinoyu/pgsql/master/postgresql/src/port/getpeereid.c,19
getpeereid(35,658

/home/seinoyu/pgsql/master/postgresql/src/port/system.c,90
#undef system49,1506
#undef popen50,1520
pgwin32_system(53,1538
pgwin32_popen(86,2045

/home/seinoyu/pgsql/master/postgresql/src/port/win32env.c,79
pgwin32_putenv(20,549
	typedef int (_cdecl 24,618
pgwin32_unsetenv(114,2995

/home/seinoyu/pgsql/master/postgresql/src/port/thread.c,45
pqGetpwuid(68,2493
pqGethostbyname(90,3199

/home/seinoyu/pgsql/master/postgresql/src/port/strlcat.c,17
strlcat(33,1229

/home/seinoyu/pgsql/master/postgresql/src/port/chklocale.c,335
struct encoding_match39,929
	enum pg_enc pg_enc_code;41,953
	const char *system_enc_name;system_enc_name42,979
static const struct encoding_match encoding_match_list[encoding_match_list45,1013
win32_langinfo(211,5089
pg_codepage_to_encoding(294,7025
pg_get_encoding_from_locale(330,8083
pg_get_encoding_from_locale(452,10807

/home/seinoyu/pgsql/master/postgresql/src/port/pg_crc32c_sb8.c,191
static const uint32 pg_crc32c_table[pg_crc32c_table25,717
#define CRC8(29,818
#define CRC8(31,900
pg_comp_crc32c_sb8(35,986
static const uint32 pg_crc32c_table[pg_crc32c_table109,2705

/home/seinoyu/pgsql/master/postgresql/src/port/noblock.c,45
pg_set_noblock(25,553
pg_set_block(49,1043

/home/seinoyu/pgsql/master/postgresql/src/port/pg_crc32c_armv8_choose.c,154
static sigjmp_buf illegal_instruction_jump;33,852
illegal_instruction_handler(40,1054
pg_crc32c_armv8_available(46,1154
pg_comp_crc32c_choose(85,2155

/home/seinoyu/pgsql/master/postgresql/src/port/link.c,13
link(20,400

/home/seinoyu/pgsql/master/postgresql/src/port/quotes.c,36
escape_single_quotes_ascii(33,1004

/home/seinoyu/pgsql/master/postgresql/src/port/pwrite.c,18
pg_pwrite(27,590

/home/seinoyu/pgsql/master/postgresql/src/port/getopt_long.c,90
#define BADCH	41,1792
#define BADARG	42,1810
#define EMSG	43,1829
getopt_long(57,2253

/home/seinoyu/pgsql/master/postgresql/src/port/mkdtemp.c,236
#define _DIAGASSERT(21,650
static char sccsid[sccsid65,2559
#define GETTEMP	85,2983
#define GETTEMP	89,3067
GETTEMP(94,3120
static char sccsid[sccsid264,7132
#define GETTEMP	271,7347
#define GETTEMP	280,7529
mkdtemp(286,7579

/home/seinoyu/pgsql/master/postgresql/src/port/pgstrcasecmp.c,143
pg_strcasecmp(36,1176
pg_strncasecmp(69,1852
pg_toupper(105,2653
pg_tolower(122,3063
pg_ascii_toupper(135,3310
pg_ascii_tolower(146,3498

/home/seinoyu/pgsql/master/postgresql/src/port/open.c,81
openFlagsToCreateFileFlags(28,471
pgwin32_open(62,1109
pgwin32_fopen(189,5372

/home/seinoyu/pgsql/master/postgresql/src/port/win32security.c,82
pg_attribute_printf(26,538
pgwin32_is_admin(49,921
pgwin32_is_service(117,2837

/home/seinoyu/pgsql/master/postgresql/src/port/unsetenv.c,17
unsetenv(20,446

/home/seinoyu/pgsql/master/postgresql/src/port/pg_strong_random.c,130
static HCRYPTPROV hProvider 39,1034
random_from_file(47,1159
pg_strong_random(100,2300
#define NUM_RAND_POLL_RETRIES 117,2927

/home/seinoyu/pgsql/master/postgresql/src/fe_utils/archive.c,28
RestoreArchivedFile(39,991

/home/seinoyu/pgsql/master/postgresql/src/fe_utils/recovery_gen.c,85
GenerateRecoveryConfig(23,572
WriteRecoveryConfig(117,3096
escape_quotes(165,4144

/home/seinoyu/pgsql/master/postgresql/src/fe_utils/simple_list.c,278
simple_oid_list_append(26,682
simple_oid_list_member(45,1008
simple_string_list_append(63,1320
simple_string_list_member(87,1799
simple_oid_list_destroy(106,2091
simple_string_list_destroy(125,2334
simple_string_list_not_touched(144,2627
simple_ptr_list_append(162,2932

/home/seinoyu/pgsql/master/postgresql/src/fe_utils/conditional.c,462
conditional_stack_create(18,422
conditional_stack_destroy(30,594
conditional_stack_push(41,764
conditional_stack_pop(57,1118
conditional_stack_depth(72,1355
conditional_stack_peek(94,1647
conditional_stack_poke(106,1902
conditional_stack_empty(118,2134
conditional_active(128,2363
conditional_stack_set_query_len(139,2605
conditional_stack_get_query_len(150,2884
conditional_stack_set_paren_depth(161,3108
conditional_stack_get_paren_depth(172,3401

/home/seinoyu/pgsql/master/postgresql/src/fe_utils/print.c,3520
volatile sig_atomic_t cancel_pressed 43,1198
static bool always_ignore_sigpipe 45,1245
static char *decimal_point;decimal_point48,1366
static int	groupdigits;49,1394
static char *thousands_sep;thousands_sep50,1418
static char default_footer[default_footer52,1447
static printTableFooter default_footer_cell 53,1480
const printTextFormat pg_asciiformat 56,1587
const printTextFormat pg_asciiformat_old 77,1803
printTextFormat pg_utf8format;99,2067
typedef struct unicodeStyleRowFormat101,2099
	const char *horizontal;horizontal103,2138
	const char *vertical_and_right[vertical_and_right104,2163
	const char *vertical_and_left[vertical_and_left105,2199
} unicodeStyleRowFormat;106,2234
typedef struct unicodeStyleColumnFormat108,2260
	const char *vertical;vertical110,2302
	const char *vertical_and_horizontal[vertical_and_horizontal111,2325
	const char *up_and_horizontal[up_and_horizontal112,2366
	const char *down_and_horizontal[down_and_horizontal113,2401
} unicodeStyleColumnFormat;114,2438
typedef struct unicodeStyleBorderFormat116,2467
	const char *up_and_right;up_and_right118,2509
	const char *vertical;vertical119,2536
	const char *down_and_right;down_and_right120,2559
	const char *horizontal;horizontal121,2588
	const char *down_and_left;down_and_left122,2613
	const char *left_and_right;left_and_right123,2641
} unicodeStyleBorderFormat;124,2670
typedef struct unicodeStyleFormat126,2699
	unicodeStyleRowFormat row_style[row_style128,2735
	unicodeStyleColumnFormat column_style[column_style129,2772
	unicodeStyleBorderFormat border_style[border_style130,2815
	const char *header_nl_left;header_nl_left131,2858
	const char *header_nl_right;header_nl_right132,2887
	const char *nl_left;nl_left133,2917
	const char *nl_right;nl_right134,2939
	const char *wrap_left;wrap_left135,2962
	const char *wrap_right;wrap_right136,2986
	bool		wrap_right_border;137,3011
} unicodeStyleFormat;138,3037
static const unicodeStyleFormat unicode_style 140,3060
integer_digits(208,4628
additional_numeric_locale_len(219,4915
format_numeric_locale(244,5551
print_separator(309,7096
footers_with_default(328,7748
print_unaligned_text(352,8243
print_unaligned_vertical(443,10101
_print_horizontal_line(523,11750
print_aligned_text(565,12647
print_aligned_vertical_line(1155,28970
print_aligned_vertical(1211,30248
csv_escaped_print(1726,42338
csv_print_field(1741,42576
print_csv_text(1766,43434
print_csv_vertical(1806,44427
html_escaped_print(1838,45017
print_html_text(1879,45667
print_html_vertical(1968,47551
asciidoc_escaped_print(2054,49503
print_asciidoc_text(2072,49720
print_asciidoc_vertical(2182,51933
latex_escaped_print(2278,53882
print_latex_text(2340,55029
print_latex_longtable_text(2447,57124
#define LONGTABLE_WHITESPACE	2477,57977
print_latex_vertical(2603,61323
troff_ms_escaped_print(2696,63279
print_troff_ms_text(2713,63494
print_troff_ms_vertical(2805,65259
disable_sigpipe_trap(2925,67738
restore_sigpipe_trap(2948,68520
set_sigpipe_trap_state(2961,68744
PageOutput(2975,68969
ClosePager(3026,70161
printTableInit(3057,70998
printTableAddHeader(3094,72101
printTableAddCell(3134,73204
printTableAddFooter(3182,74593
printTableSetFooter(3207,75179
printTableCleanup(3225,75579
IsPagerNeeded(3274,76485
printTable(3314,77393
printQuery(3417,79880
column_type_alignment(3482,81293
setDecimalLocale(3509,81631
get_line_style(3545,82763
refresh_utf8format(3559,83066
strlen_max_width(3614,85439

/home/seinoyu/pgsql/master/postgresql/src/fe_utils/string_utils.c,540
int			quote_all_identifiers 26,717
defaultGetLocalPQExpBuffer(39,1144
fmtId(64,1649
fmtQualifiedId(145,3685
formatPGVersionNumber(177,4557
appendStringLiteral(215,5631
appendStringLiteralConn(293,7313
appendStringLiteralDQ(331,8505
appendByteaLiteral(374,9783
appendShellString(429,11402
appendShellStringNoError(441,11643
appendConnStrVal(545,14220
appendPsqlMetaConnect(590,15162
parsePGArray(657,16882
appendReloptionsArray(741,19225
processSQLNamePattern(827,21878
#define WHEREAND(840,22277
#undef WHEREAND1028,27665

/home/seinoyu/pgsql/master/postgresql/src/fe_utils/mbprint.c,247
typedef unsigned int pg_wchar;31,919
pg_get_utf8_id(34,962
#define PG_UTF8	43,1091
utf8_to_unicode(53,1331
utf_charcheck(82,2200
mb_utf_validate(136,3431
pg_wcswidth(177,4036
pg_wcssize(211,4774
pg_wcsformat(294,6481
mbvalidate(392,8564

/home/seinoyu/pgsql/master/postgresql/src/fe_utils/cancel.c,330
#define write_stderr(31,845
static PGcancel *volatile cancelConn 43,1125
volatile sig_atomic_t CancelRequested 52,1540
static CRITICAL_SECTION cancelConnLock;55,1601
SetCancelConn(70,1841
ResetCancelConn(100,2369
handle_sigint(146,3469
setup_cancel_handler(179,4075
consoleHandler(188,4233
setup_cancel_handler(225,4937

/home/seinoyu/pgsql/master/postgresql/src/timezone/pgtz.c,723
pg_tz	   *session_timezone session_timezone28,626
pg_tz	   *log_timezone log_timezone31,722
pg_TZDIR(43,973
pg_open_tzfile(76,1828
scan_directory_ci(151,3865
	char		tznameupper[tznameupper194,4963
	pg_tz		tz;195,5002
} pg_tz_cache;196,5014
static HTAB *timezone_cache timezone_cache198,5030
init_timezone_hashtable(202,5080
pg_tzset(236,6176
pg_tzset_offset(322,8521
pg_timezone_initialize(363,9681
#define MAX_TZDIR_DEPTH 385,10384
struct pg_tzenum387,10412
	int			baselen;389,10431
	int			depth;390,10447
	DIR		   *dirdesc[dirdesc391,10461
	char	   *dirname[dirname392,10497
	struct pg_tz tz;393,10533
pg_tzenumerate_start(399,10616
pg_tzenumerate_end(416,11032
pg_tzenumerate_next(428,11212

/home/seinoyu/pgsql/master/postgresql/src/timezone/strftime.c,696
struct lc_time_T48,1899
	const char *mon[mon50,1918
	const char *month[month51,1949
	const char *wday[wday52,1982
	const char *weekday[weekday53,2014
	const char *X_fmt;X_fmt54,2049
	const char *x_fmt;x_fmt55,2069
	const char *c_fmt;c_fmt56,2089
	const char *am;am57,2109
	const char *pm;pm58,2126
	const char *date_fmt;date_fmt59,2143
#define Locale	62,2170
static const struct lc_time_T C_time_locale 64,2203
enum warn109,3105
	IN_NONE,111,3117
	IN_NONE, IN_SOME,111,3117
	IN_NONE, IN_SOME, IN_THIS,111,3117
	IN_NONE, IN_SOME, IN_THIS, IN_ALL111,3117
pg_strftime(128,3598
_fmt(141,3845
_conv(506,12910
_add(515,13089
_yconv(531,13512
#define DIVISOR	537,13631

/home/seinoyu/pgsql/master/postgresql/src/timezone/private.h,1589
#define PRIVATE_H5,57
#define GRANDPARENTED	30,696
#define ENOTSUP 38,923
#define EOVERFLOW 41,971
#define is_digit(45,1080
#undef strtoimax48,1204
#define strtoimax 50,1241
#define strtoimax 52,1273
#define TYPE_BIT(60,1351
#define TYPE_SIGNED(61,1401
#define TWOS_COMPLEMENT(62,1445
#define MAXVAL(69,1675
#define MINVAL(72,1800
#define TIME_T_MIN 76,1949
#define TIME_T_MAX 77,2007
#define INT_STRLEN_MAXIMUM(85,2269
#define INITIALIZE(92,2409
#undef _94,2442
#define _(95,2451
#define YEARSPERREPEAT	99,2545
#define SECSPERMIN	101,2612
#define MINSPERHOUR 102,2634
#define HOURSPERDAY 103,2657
#define DAYSPERWEEK 104,2680
#define DAYSPERNYEAR	105,2702
#define DAYSPERLYEAR	106,2727
#define SECSPERHOUR 107,2752
#define SECSPERDAY	108,2799
#define MONSPERYEAR 109,2854
#define TM_SUNDAY	111,2878
#define TM_MONDAY	112,2898
#define TM_TUESDAY	113,2918
#define TM_WEDNESDAY	114,2939
#define TM_THURSDAY 115,2962
#define TM_FRIDAY	116,2984
#define TM_SATURDAY 117,3004
#define TM_JANUARY	119,3027
#define TM_FEBRUARY 120,3048
#define TM_MARCH	121,3070
#define TM_APRIL	122,3089
#define TM_MAY	123,3108
#define TM_JUNE	124,3126
#define TM_JULY	125,3145
#define TM_AUGUST	126,3164
#define TM_SEPTEMBER	127,3184
#define TM_OCTOBER	128,3207
#define TM_NOVEMBER 129,3228
#define TM_DECEMBER 130,3251
#define TM_YEAR_BASE	132,3275
#define EPOCH_YEAR	134,3302
#define EPOCH_WDAY	135,3326
#define isleap(137,3358
#define isleap_sum(151,3834
#define AVGSECSPERYEAR	158,3972
#define SECSPERREPEAT 159,4006
#define SECSPERREPEAT_BITS	161,4082

/home/seinoyu/pgsql/master/postgresql/src/timezone/localtime.c,1497
#define WILDABBR	48,1570
static const char wildabbr[wildabbr51,1631
static const char gmt[gmt53,1673
#define TZDEFRULESTRING 61,1921
enum r_type65,2027
	JULIAN_DAY,67,2041
	DAY_OF_YEAR,68,2080
	MONTH_NTH_DAY_OF_WEEK	69,2119
struct rule72,2187
	enum r_type r_type;74,2201
	int			r_day;75,2243
	int			r_week;76,2284
	int			r_mon;77,2327
	int32		r_time;78,2370
static struct pg_tm tm;102,3141
init_ttinfo(106,3247
detzcode(116,3453
detzcode64(142,4017
differ_by_repeat(168,4604
union input_buffer176,4843
	struct tzhead tzhead;179,4927
					+ 4 * 4 *183,5042
union local_storage187,5118
	struct file_analysis190,5213
		union input_buffer u;193,5265
		struct state st;196,5359
	}			u;197,5378
tzloadbody(209,5775
tzload(584,15255
typesequiv(600,15526
static const int mon_lengths[mon_lengths624,16065
static const int year_lengths[year_lengths629,16219
getzname(640,16492
getqzname(661,17057
getnum(678,17453
getsecs(708,18103
getoffset(749,19117
getrule(776,19704
transtime(837,20912
tzparse(934,23198
gmtload(1243,30113
localsub(1257,30486
pg_localtime(1342,32221
gmtsub(1355,32483
pg_gmtime(1387,33182
leaps_thru_end_of_nonneg(1398,33418
leaps_thru_end_of(1404,33501
timesub(1412,33652
increment_overflow(1537,36326
increment_overflow_time(1555,36786
leapcorr(1572,37195
pg_next_dst_boundary(1608,38376
pg_interpret_timezone_abbrev(1755,41932
pg_get_timezone_offset(1849,43934
pg_get_timezone_name(1873,44446
pg_tz_acceptable(1888,44756

/home/seinoyu/pgsql/master/postgresql/src/timezone/tzfile.h,608
#define TZFILE_H5,61
#define TZDEFAULT	27,500
#define TZDEFRULES	28,535
#define	TZ_MAGIC	37,682
struct tzhead39,707
	char		tzh_magic[tzh_magic41,723
	char		tzh_version[tzh_version42,759
	char		tzh_reserved[tzh_reserved43,818
	char		tzh_ttisutcnt[tzh_ttisutcnt44,872
	char		tzh_ttisstdcnt[tzh_ttisstdcnt45,937
	char		tzh_leapcnt[tzh_leapcnt46,1003
	char		tzh_timecnt[tzh_timecnt47,1061
	char		tzh_typecnt[tzh_typecnt48,1123
	char		tzh_charcnt[tzh_charcnt49,1185
#define TZ_MAX_TIMES	100,3209
#define TZ_MAX_TYPES	103,3306
#define TZ_MAX_CHARS	105,3382
#define TZ_MAX_LEAPS	108,3505

/home/seinoyu/pgsql/master/postgresql/src/timezone/pgtz.h,726
#define _PGTZ_H17,484
#define SMALLEST(23,543
#define BIGGEST(24,592
struct ttinfo26,641
	int32		tt_utoff;28,692
	bool		tt_isdst;29,738
	int			tt_desigidx;30,783
	bool		tt_ttisstd;31,833
	bool		tt_ttisut;32,882
struct lsinfo35,928
	pg_time_t	ls_trans;37,981
	int64		ls_corr;38,1025
struct state41,1073
	int			leapcnt;43,1088
	int			timecnt;44,1104
	int			typecnt;45,1120
	int			charcnt;46,1136
	bool		goback;47,1152
	bool		goahead;48,1167
	pg_time_t	ats[ats49,1183
	unsigned char types[types50,1213
	struct ttinfo ttis[ttis51,1249
							  (2 *  (2 53,1353
	struct lsinfo lsis[lsis54,1391
	int			defaulttype;61,1608
struct pg_tz65,1633
	char		TZname[TZname68,1714
	struct state state;69,1748

/home/seinoyu/pgsql/master/postgresql/src/timezone/zic.c,7807
#define	ZIC_VERSION_PRE_2013 22,358
#define	ZIC_VERSION	23,391
typedef int64 zic_t;25,416
#define ZIC_MIN 26,437
#define ZIC_MAX 27,466
#define ZIC_MAX_ABBR_LEN_WO_WARN	30,529
#define MKDIR_UMASK 35,647
#define MKDIR_UMASK 37,731
#define linkat(41,796
#define S_ISDIR(46,1025
static ptrdiff_t const PTRDIFF_MAX 51,1165
typedef int lineno_t;59,1464
struct rule61,1487
	const char *r_filename;r_filename63,1501
	lineno_t	r_linenum;64,1526
	const char *r_name;r_name65,1547
	zic_t		r_loyear;67,1569
	zic_t		r_hiyear;68,1612
	const char *r_yrtype;r_yrtype69,1655
	bool		r_lowasnum;70,1678
	bool		r_hiwasnum;71,1697
	int			r_month;73,1717
	int			r_dycode;75,1747
	int			r_dayofmonth;76,1781
	int			r_wday;77,1802
	zic_t		r_tod;79,1818
	bool		r_todisstd;80,1860
	bool		r_todisut;81,1910
	bool		r_isdst;82,1948
	zic_t		r_save;83,2001
	const char *r_abbrvar;r_abbrvar84,2051
	bool		r_todo;86,2113
	zic_t		r_temp;87,2167
#define DC_DOM	94,2252
#define DC_DOWGEQ	95,2295
#define DC_DOWLEQ	96,2349
struct zone98,2404
	const char *z_filename;z_filename100,2418
	lineno_t	z_linenum;101,2443
	const char *z_name;z_name103,2465
	zic_t		z_stdoff;104,2486
	char	   *z_rule;z_rule105,2504
	const char *z_format;z_format106,2522
	char		z_format_specifier;107,2545
	bool		z_isdst;109,2573
	zic_t		z_save;110,2589
	struct rule *z_rules;z_rules112,2606
	ptrdiff_t	z_nrules;113,2629
	struct rule z_untilrule;115,2651
	zic_t		z_untiltime;116,2677
static void memory_exhausted(121,2762
PERCENT_Z_LEN_BOUND 162,4564
WORK_AROUND_QTBUG_53071 172,4957
static int	charcnt;175,4998
static bool errors;176,5018
static bool warnings;177,5038
static const char *filename;filename178,5060
static int	leapcnt;179,5089
static bool leapseen;180,5109
static zic_t leapminyear;181,5131
static zic_t leapmaxyear;182,5157
static lineno_t linenum;183,5183
static int	max_abbrvar_len 184,5208
static int	max_format_len;185,5258
static zic_t max_year;186,5285
static zic_t min_year;187,5308
static bool noise;188,5331
static bool print_abbrevs;189,5350
static zic_t print_cutoff;190,5377
static const char *rfilename;rfilename191,5404
static lineno_t rlinenum;192,5434
static const char *progname;progname193,5460
static ptrdiff_t timecnt;194,5489
static ptrdiff_t timecnt_alloc;195,5515
static int	typecnt;196,5547
#define LC_RULE	202,5591
#define LC_ZONE	203,5610
#define LC_LINK	204,5629
#define LC_LEAP	205,5648
#define LC_EXPIRES	206,5667
#define ZF_NAME	212,5739
#define ZF_STDOFF	213,5758
#define ZF_RULE	214,5778
#define ZF_FORMAT	215,5797
#define ZF_TILYEAR	216,5817
#define ZF_TILMONTH	217,5838
#define ZF_TILDAY	218,5860
#define ZF_TILTIME	219,5880
#define ZONE_MINFIELDS	220,5901
#define ZONE_MAXFIELDS	221,5926
#define ZFC_STDOFF	227,6015
#define ZFC_RULE	228,6036
#define ZFC_FORMAT	229,6055
#define ZFC_TILYEAR	230,6076
#define ZFC_TILMONTH	231,6098
#define ZFC_TILDAY	232,6121
#define ZFC_TILTIME	233,6142
#define ZONEC_MINFIELDS	234,6164
#define ZONEC_MAXFIELDS	235,6190
#define RF_NAME	241,6266
#define RF_LOYEAR	242,6285
#define RF_HIYEAR	243,6305
#define RF_COMMAND	244,6325
#define RF_MONTH	245,6346
#define RF_DAY	246,6365
#define RF_TOD	247,6383
#define RF_SAVE	248,6401
#define RF_ABBRVAR	249,6420
#define RULE_FIELDS	250,6441
#define LF_FROM	256,6515
#define LF_TO	257,6534
#define LINK_FIELDS	258,6551
#define LP_YEAR	264,6624
#define LP_MONTH	265,6643
#define LP_DAY	266,6662
#define LP_TIME	267,6680
#define LP_CORR	268,6699
#define LP_ROLL	269,6718
#define LEAP_FIELDS	270,6737
#define EXPIRES_FIELDS	273,6839
#define YR_MINIMUM	279,6891
#define YR_MAXIMUM	280,6912
#define YR_ONLY	281,6933
static struct rule *rules;rules283,6953
static ptrdiff_t nrules;284,6980
static ptrdiff_t nrules_alloc;285,7028
static struct zone *zones;zones287,7060
static ptrdiff_t nzones;288,7087
static ptrdiff_t nzones_alloc;289,7135
struct link291,7167
	const char *l_filename;l_filename293,7181
	lineno_t	l_linenum;294,7206
	const char *l_from;l_from295,7227
	const char *l_to;l_to296,7248
static struct link *links;links299,7271
static ptrdiff_t nlinks;300,7298
static ptrdiff_t nlinks_alloc;301,7323
struct lookup303,7355
	const char *l_word;l_word305,7371
	const int	l_value;306,7392
static struct lookup const zi_line_codes[zi_line_codes312,7509
static struct lookup const leap_line_codes[leap_line_codes318,7630
static struct lookup const mon_names[mon_names324,7740
static struct lookup const wday_names[wday_names340,8090
static struct lookup const lasts[lasts351,8333
static struct lookup const begin_years[begin_years362,8606
static struct lookup const end_years[end_years368,8718
static struct lookup const leap_types[leap_types375,8848
static const int len_months[len_months381,8951
static const int len_years[len_years386,9104
static struct attype390,9170
	zic_t		at;392,9193
	bool		dontmerge;393,9205
	unsigned char type;394,9223
}		   *attypes;attypes395,9244
static zic_t utoffs[utoffs396,9260
static char isdsts[isdsts397,9295
static unsigned char desigidx[desigidx398,9329
static bool ttisstds[ttisstds399,9374
static bool ttisuts[ttisuts400,9410
static char chars[chars401,9445
static zic_t trans[trans402,9478
static zic_t corr[corr403,9512
static char roll[roll404,9545
memory_exhausted(411,9620
size_product(418,9760
memcheck(426,9926
emalloc(434,10033
erealloc(440,10105
ecpyalloc(446,10195
growalloc(452,10272
eats(473,10777
eat(482,10937
verror(488,11018
error(504,11423
warning(515,11566
close_file(527,11747
usage(543,12098
change_directory(562,12743
#define TIME_T_BITS_IN_FILE 582,13098
static zic_t const min_time 585,13198
static zic_t const max_time 586,13264
static zic_t lo_time 590,13461
static zic_t hi_time 591,13520
static zic_t leapexpires 594,13655
static zic_t comment_leapexpires 597,13766
timerange_option(602,13902
static const char *psxrules;psxrules632,14622
static const char *lcltime;lcltime633,14651
static const char *directory;directory634,14679
static const char *leapsec;leapsec635,14709
static const char *tzdefault;tzdefault636,14737
static const char *yitcommand;yitcommand637,14767
static int	bloat;642,14984
want_bloat(645,15015
#define ZIC_BLOAT_DEFAULT 651,15083
main(655,15127
componentcheck(864,19525
	component_len_max 869,19625
namecheck(908,20557
relname(956,21682
hardlinkerr(1001,22816
dolink(1009,22976
itsdir(1108,25495
itssymlink(1133,26037
rcomp(1153,26254
associate(1160,26407
infile(1245,28228
gethms(1367,30860
getsave(1445,32459
inrule(1473,32870
inzone(1520,33861
inzcont(1558,34743
inzsub(1569,34982
getleapdatetime(1668,37493
inleap(1757,39100
inexpires(1789,39790
inlink(1800,40059
rulesub(1825,40571
convert(2001,44156
convert64(2012,44361
puttzcode(2023,44568
puttzcodepass(2032,44697
atcomp(2046,44882
struct timerange2054,45065
	int			defaulttype;2056,45084
	ptrdiff_t	base,2057,45104
				count;2058,45121
	int			leapbase,2059,45132
				leapcount;2060,45149
limitrange(2064,45192
writezone(2091,45710
#define DO(2447,54885
#undef DO2466,55480
abbroffset(2595,58408
doabbr(2639,59091
updateminmax(2682,59957
stringoffset(2691,60071
stringrule(2725,60715
rule_cmp(2806,62441
stringzone(2820,62745
outzone(2957,65702
addtt(3359,75983
addtype(3369,76219
leapadd(3414,77168
adjleap(3436,77664
shellquote(3478,78477
yearistype(3492,78661
is_space(3527,79420
is_alpha(3545,79646
lowerit(3610,80480
ciequal(3673,81289
itsabbr(3682,81438
ciprefix(3699,81778
byword(3710,81954
getfields(3776,83302
time_overflow(3816,83964
oadd(3823,84051
tadd(3831,84183
rpytime(3860,84618
#define LDAYSPERWEEK	3924,85756
newabbr(3969,86659
mkdirs(4007,87736
link(4065,89157

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/pgtypes_numeric.h,726
#define PGTYPES_NUMERIC2,24
#define NUMERIC_POS	6,71
#define NUMERIC_NEG	7,103
#define NUMERIC_NAN	8,135
#define NUMERIC_NULL	9,167
#define NUMERIC_MAX_PRECISION	10,200
#define NUMERIC_MAX_DISPLAY_SCALE	11,237
#define NUMERIC_MIN_DISPLAY_SCALE	12,294
#define NUMERIC_MIN_SIG_DIGITS	13,331
#define DECSIZE 15,368
typedef unsigned char NumericDigit;17,388
	int			ndigits;20,441
	int			weight;21,505
	int			rscale;22,550
	int			dscale;23,586
	int			sign;24,623
	NumericDigit *buf;buf25,685
	NumericDigit *digits;digits26,749
} numeric;27,794
	int			ndigits;31,823
	int			weight;32,887
	int			rscale;33,932
	int			dscale;34,968
	int			sign;35,1005
	NumericDigit digits[digits36,1067
} decimal;37,1119

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/pgtypes_interval.h,196
#define PGTYPES_INTERVAL4,79
typedef long int int64;13,208
typedef long long int int64;17,295
#define HAVE_INT64_TIMESTAMP24,453
	int64		time;29,523
	long		month;30,588
}			interval;31,653

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/pgtypes_date.h,55
#define PGTYPES_DATETIME4,75
typedef long date;9,154

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/decimal.h,59
#define _ECPG_DECIMAL_H4,69
typedef decimal dec_t;10,189

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/ecpg_config.h,134
#define HAVE_LONG_INT_64 6,230
#define HAVE_LONG_LONG_INT 9,320
#define PG_USE_STDBOOL 15,503
#define ENABLE_THREAD_SAFETY 19,625

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/ecpglib.h,156
#define _ECPGLIB_H8,114
typedef unsigned char bool;32,649
#define true	36,698
#define false	40,744
#define		SQLCODE	72,1795
#define		SQLSTATE	73,1827

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/ecpgtype.h,1736
#define _ECPGTYPE_H34,962
enum ECPGttype41,1023
	ECPGt_char 43,1040
	ECPGt_char = 1, ECPGt_unsigned_char,43,1040
	ECPGt_char = 1, ECPGt_unsigned_char, ECPGt_short,43,1040
	ECPGt_char = 1, ECPGt_unsigned_char, ECPGt_short, ECPGt_unsigned_short,43,1040
	ECPGt_int,44,1113
	ECPGt_int, ECPGt_unsigned_int,44,1113
	ECPGt_int, ECPGt_unsigned_int, ECPGt_long,44,1113
	ECPGt_int, ECPGt_unsigned_int, ECPGt_long, ECPGt_unsigned_long,44,1113
	ECPGt_long_long,45,1178
	ECPGt_long_long, ECPGt_unsigned_long_long,45,1178
	ECPGt_bool,46,1222
	ECPGt_float,47,1235
	ECPGt_float, ECPGt_double,47,1235
	ECPGt_varchar,48,1263
	ECPGt_varchar, ECPGt_varchar2,48,1263
	ECPGt_numeric,49,1295
	ECPGt_decimal,51,1392
	ECPGt_date,53,1486
	ECPGt_timestamp,54,1499
	ECPGt_interval,55,1517
	ECPGt_array,56,1534
	ECPGt_struct,57,1548
	ECPGt_union,58,1563
	ECPGt_descriptor,59,1577
	ECPGt_char_variable,60,1634
	ECPGt_const,61,1656
	ECPGt_EOIT,62,1710
	ECPGt_EORT,63,1754
	ECPGt_NO_INDICATOR,64,1798
	ECPGt_string,65,1840
	ECPGt_sqlda,66,1886
	ECPGt_bytea67,1929
enum ECPGdtype71,1970
	ECPGd_count 73,1987
	ECPGd_data,74,2005
	ECPGd_di_code,75,2018
	ECPGd_di_precision,76,2034
	ECPGd_indicator,77,2055
	ECPGd_key_member,78,2073
	ECPGd_length,79,2092
	ECPGd_name,80,2107
	ECPGd_nullable,81,2120
	ECPGd_octet,82,2137
	ECPGd_precision,83,2151
	ECPGd_ret_length,84,2169
	ECPGd_ret_octet,85,2188
	ECPGd_scale,86,2206
	ECPGd_type,87,2220
	ECPGd_EODT,88,2233
	ECPGd_cardinality89,2281
#define IS_SIMPLE_TYPE(92,2304
enum ECPG_statement_type95,2497
	ECPGst_normal,97,2524
	ECPGst_execute,98,2540
	ECPGst_exec_immediate,99,2557
	ECPGst_prepnormal,100,2581
	ECPGst_prepare,101,2601
	ECPGst_exec_with_exprlist102,2618

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/pgtypes_error.h,511
#define PGTYPES_NUM_OVERFLOW	3,51
#define PGTYPES_NUM_BAD_NUMERIC	4,85
#define PGTYPES_NUM_DIVIDE_ZERO	5,122
#define PGTYPES_NUM_UNDERFLOW	6,159
#define PGTYPES_DATE_BAD_DATE	8,195
#define PGTYPES_DATE_ERR_EARGS	9,230
#define PGTYPES_DATE_ERR_ENOSHORTDATE	10,266
#define PGTYPES_DATE_ERR_ENOTDMY	11,308
#define PGTYPES_DATE_BAD_DAY	12,345
#define PGTYPES_DATE_BAD_MONTH	13,379
#define PGTYPES_TS_BAD_TIMESTAMP	15,416
#define PGTYPES_TS_ERR_EINFTIME	16,453
#define PGTYPES_INTVL_BAD_INTERVAL	18,491

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/sqltypes.h,1165
#define ECPG_SQLTYPES_H2,24
#define CCHARTYPE	6,70
#define CSHORTTYPE	7,99
#define CINTTYPE	8,130
#define CLONGTYPE	9,157
#define CFLOATTYPE	10,186
#define CDOUBLETYPE 11,217
#define CDECIMALTYPE	12,250
#define CFIXCHARTYPE	13,285
#define CSTRINGTYPE 14,310
#define CDATETYPE	15,341
#define CMONEYTYPE	16,370
#define CDTIMETYPE	17,393
#define CLOCATORTYPE	18,428
#define CVCHARTYPE	19,453
#define CINVTYPE	20,486
#define CFILETYPE	21,507
#define CINT8TYPE	22,529
#define CCOLLTYPE	23,563
#define CLVCHARTYPE	24,586
#define CFIXBINTYPE	25,611
#define CVARBINTYPE	26,636
#define CBOOLTYPE	27,661
#define CROWTYPE	28,691
#define CLVCHARPTRTYPE	29,713
#define CTYPEMAX	30,740
#define SQLCHAR	35,812
#define SQLSMINT	36,840
#define SQLINT	37,869
#define SQLFLOAT	38,895
#define SQLSMFLOAT	39,925
#define SQLDECIMAL	40,956
#define SQLSERIAL	41,989
#define SQLDATE	42,1017
#define SQLDTIME	43,1045
#define SQLTEXT	44,1078
#define SQLVCHAR	45,1106
#define SQLINTERVAL	46,1134
#define SQLNCHAR	47,1170
#define SQLNVCHAR	48,1198
#define SQLINT8	50,1256
#define SQLSERIAL8	51,1289
#define SQLINT8	53,1330
#define SQLSERIAL8	54,1358

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/sql3types.h,597
#define _ECPG_SQL3TYPES_H2,26
	SQL3_CHARACTER 10,165
	SQL3_NUMERIC,11,186
	SQL3_DECIMAL,12,201
	SQL3_INTEGER,13,216
	SQL3_SMALLINT,14,231
	SQL3_FLOAT,15,247
	SQL3_REAL,16,260
	SQL3_DOUBLE_PRECISION,17,272
	SQL3_DATE_TIME_TIMESTAMP,18,296
	SQL3_INTERVAL,19,323
	SQL3_CHARACTER_VARYING 20,351
	SQL3_ENUMERATED,21,381
	SQL3_BIT,22,399
	SQL3_BIT_VARYING,23,410
	SQL3_BOOLEAN,24,429
	SQL3_abstract25,444
	SQL3_DDT_DATE 33,586
	SQL3_DDT_TIME,34,606
	SQL3_DDT_TIMESTAMP,35,622
	SQL3_DDT_TIME_WITH_TIME_ZONE,36,643
	SQL3_DDT_TIMESTAMP_WITH_TIME_ZONE,37,674
	SQL3_DDT_ILLEGAL	39,711

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/datetime.h,98
#define _ECPG_DATETIME_H4,71
typedef timestamp dtime_t;10,201
typedef interval intrvl_t;11,228

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/pgtypes.h,23
#define PGTYPES_H4,63

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/ecpgerrno.h,1539
#define _ECPG_ERRNO_H4,69
#define ECPG_NO_ERROR	9,188
#define ECPG_NOT_FOUND	10,213
#define ECPG_OUT_OF_MEMORY	15,337
#define ECPG_UNSUPPORTED	18,435
#define ECPG_TOO_MANY_ARGUMENTS	19,466
#define ECPG_TOO_FEW_ARGUMENTS	20,504
#define ECPG_TOO_MANY_MATCHES	21,541
#define ECPG_INT_FORMAT	22,577
#define ECPG_UINT_FORMAT	23,608
#define ECPG_FLOAT_FORMAT	24,639
#define ECPG_NUMERIC_FORMAT	25,671
#define ECPG_INTERVAL_FORMAT	26,705
#define ECPG_DATE_FORMAT	27,740
#define ECPG_TIMESTAMP_FORMAT	28,771
#define ECPG_CONVERT_BOOL	29,807
#define ECPG_EMPTY	30,839
#define ECPG_MISSING_INDICATOR	31,865
#define ECPG_NO_ARRAY	32,902
#define ECPG_DATA_NOT_ARRAY	33,931
#define ECPG_ARRAY_INSERT	34,965
#define ECPG_NO_CONN	36,998
#define ECPG_NOT_CONN	37,1026
#define ECPG_INVALID_STMT	39,1056
#define ECPG_UNKNOWN_DESCRIPTOR	42,1115
#define ECPG_INVALID_DESCRIPTOR_INDEX	43,1153
#define ECPG_UNKNOWN_DESCRIPTOR_ITEM	44,1196
#define ECPG_VAR_NOT_NUMERIC	45,1238
#define ECPG_VAR_NOT_CHAR	46,1273
#define ECPG_PGSQL	49,1366
#define ECPG_TRANS	50,1392
#define ECPG_CONNECT	51,1418
#define ECPG_DUPLICATE_KEY	52,1446
#define ECPG_SUBSELECT_NOT_ONE	53,1479
#define ECPG_INFORMIX_DUPLICATE_KEY 57,1654
#define ECPG_INFORMIX_SUBSELECT_NOT_ONE 58,1695
#define ECPG_WARNING_UNRECOGNIZED	61,1781
#define ECPG_WARNING_QUERY_IGNORED	68,1996
#define ECPG_WARNING_UNKNOWN_PORTAL 70,2097
#define ECPG_WARNING_IN_TRANSACTION 72,2199
#define ECPG_WARNING_NO_TRANSACTION 75,2358
#define ECPG_WARNING_PORTAL_EXISTS	77,2466

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/pgtypes_timestamp.h,97
#define PGTYPES_TIMESTAMP4,81
typedef int64 timestamp;10,208
typedef int64 TimestampTz;11,233

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/sqlca.h,440
#define POSTGRES_SQLCA_H2,25
#define PGDLLIMPORT 6,114
#define PGDLLIMPORT8,163
#define SQLERRMC_LEN	12,245
struct sqlca_t19,311
	char		sqlcaid[sqlcaid21,328
	long		sqlabc;22,347
	long		sqlcode;23,362
		int			sqlerrml;26,389
		char		sqlerrmc[sqlerrmc27,407
	}			sqlerrm;28,439
	char		sqlerrp[sqlerrp29,453
	long		sqlerrd[sqlerrd30,472
	char		sqlwarn[sqlwarn39,735
	char		sqlstate[sqlstate53,1113
#define sqlca 59,1206

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/ecpg_informix.h,639
#define _ECPG_INFORMIX_H6,159
#define SQLNOTFOUND 14,323
#define ECPG_INFORMIX_NUM_OVERFLOW	16,348
#define ECPG_INFORMIX_NUM_UNDERFLOW 17,389
#define ECPG_INFORMIX_DIVIDE_ZERO	18,431
#define ECPG_INFORMIX_BAD_YEAR	19,471
#define ECPG_INFORMIX_BAD_MONTH	20,509
#define ECPG_INFORMIX_BAD_DAY	21,548
#define ECPG_INFORMIX_ENOSHORTDATE	22,585
#define ECPG_INFORMIX_DATE_CONVERT	23,626
#define ECPG_INFORMIX_OUT_OF_MEMORY 24,667
#define ECPG_INFORMIX_ENOTDMY	25,709
#define ECPG_INFORMIX_BAD_NUMERIC	26,746
#define ECPG_INFORMIX_BAD_EXPONENT	27,786
#define ECPG_INFORMIX_BAD_DATE	28,827
#define ECPG_INFORMIX_EXTRA_CHARS	29,865

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/sqlda.h,203
#define ECPG_SQLDA_H2,21
typedef struct sqlvar_compat sqlvar_t;7,94
typedef struct sqlda_compat sqlda_t;8,133
typedef struct sqlvar_struct sqlvar_t;13,204
typedef struct sqlda_struct sqlda_t;14,243

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/sqlda-native.h,522
#define ECPG_SQLDA_NATIVE_H6,82
#define NAMEDATALEN 16,420
struct sqlname18,444
	short		length;20,461
	char		data[data21,477
struct sqlvar_struct24,507
	short		sqltype;26,530
	short		sqllen;27,547
	char	   *sqldata;sqldata28,563
	short	   *sqlind;sqlind29,582
	struct sqlname sqlname;30,601
struct sqlda_struct33,630
	char		sqldaid[sqldaid35,652
	long		sqldabc;36,671
	short		sqln;37,687
	short		sqld;38,701
	struct sqlda_struct *desc_next;desc_next39,715
	struct sqlvar_struct sqlvar[sqlvar40,748

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/ecpg-pthread-win32.h,506
#define _ECPG_PTHREAD_WIN32_H6,157
typedef struct pthread_mutex_t15,260
	HANDLE		handle;17,293
	LONG		initlock;18,310
} pthread_mutex_t;19,327
typedef DWORD pthread_key_t;21,347
typedef bool pthread_once_t;22,376
#define PTHREAD_MUTEX_INITIALIZER	24,406
#define PTHREAD_ONCE_INIT	25,452
#define pthread_mutex_lock(30,624
#define pthread_mutex_unlock(37,801
#define pthread_getspecific(40,871
#define pthread_setspecific(43,927
#define pthread_key_create(47,1049
#define pthread_once(50,1156

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/include/sqlda-compat.h,909
#define ECPG_SQLDA_COMPAT_H6,82
struct sqlvar_compat8,111
	short		sqltype;10,134
	int			sqllen;11,175
	char	   *sqldata;sqldata12,217
	short	   *sqlind;sqlind13,262
	char	   *sqlname;sqlname14,312
	char	   *sqlformat;sqlformat15,355
	short		sqlitype;16,408
	short		sqlilen;17,453
	char	   *sqlidata;sqlidata18,499
	int			sqlxid;19,546
	char	   *sqltypename;sqltypename20,589
	short		sqltypelen;21,639
	short		sqlownerlen;22,695
	short		sqlsourcetype;23,745
	char	   *sqlownername;sqlownername24,812
	int			sqlsourceid;25,857
	char	   *sqlilongdata;sqlilongdata32,1088
	int			sqlflags;33,1144
	void	   *sqlreserved;sqlreserved34,1191
struct sqlda_compat37,1249
	short		sqld;39,1271
	struct sqlvar_compat *sqlvar;sqlvar40,1285
	char		desc_name[desc_name41,1316
	short		desc_occ;42,1363
	struct sqlda_compat *desc_next;desc_next43,1413
	void	   *reserved;reserved44,1481

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/pgtypeslib/pgtypeslib_extern.h,751
#define _ECPG_PGTYPESLIB_EXTERN_H4,92
#define PGTYPES_TYPE_NOTHING	10,285
#define PGTYPES_TYPE_STRING_MALLOCED	11,318
#define PGTYPES_TYPE_STRING_CONSTANT	12,358
#define PGTYPES_TYPE_CHAR	13,398
#define PGTYPES_TYPE_DOUBLE_NF	14,428
#define PGTYPES_TYPE_INT64	15,488
#define PGTYPES_TYPE_UINT	16,519
#define PGTYPES_TYPE_UINT_2_LZ	17,549
#define PGTYPES_TYPE_UINT_2_LS	18,622
#define PGTYPES_TYPE_UINT_3_LZ	20,710
#define PGTYPES_TYPE_UINT_4_LZ	21,745
#define PGTYPES_TYPE_UINT_LONG	22,781
#define PGTYPES_FMT_NUM_MAX_DIGITS	24,818
union un_fmt_comb26,858
	char	   *str_val;str_val28,878
	unsigned int uint_val;29,897
	char		char_val;30,921
	unsigned long int luint_val;31,938
	double		double_val;32,968
	int64		int64_val;33,989

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/pgtypeslib/interval.c,538
AdjustFractSeconds(23,454
AdjustFractDays(41,796
ParseISO8601Number(56,1139
ISO8601IntegerWidth(81,1836
ClearPgTm(94,2129
DecodeISO8601Interval(112,2447
DecodeInterval(326,7377
AddVerboseIntPart(684,15977
AddPostgresIntPart(704,16444
AddISO8601IntPart(727,17000
AppendSeconds(737,17219
EncodeInterval(763,17699
interval2tm(945,22892
tm2interval(976,23521
PGTYPESinterval_new(991,24016
PGTYPESinterval_free(1001,24196
PGTYPESinterval_from_asc(1007,24265
PGTYPESinterval_to_asc(1066,25389
PGTYPESinterval_copy(1086,25742

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/pgtypeslib/numeric.c,992
#define Max(13,221
#define Min(14,266
#define init_var(16,312
#define digitbuf_alloc(18,364
#define digitbuf_free(19,432
alloc_var(33,681
PGTYPESnumeric_new(46,919
PGTYPESdecimal_new(63,1135
set_var_from_str(82,1434
get_str_from_var(230,3828
PGTYPESnumeric_from_asc(325,5345
PGTYPESnumeric_to_asc(347,5707
zero_var(378,6261
PGTYPESnumeric_free(389,6493
PGTYPESdecimal_free(396,6575
cmp_abs(411,6847
add_abs(469,7734
sub_abs(557,9614
PGTYPESnumeric_add(641,11397
PGTYPESnumeric_sub(769,13998
PGTYPESnumeric_mul(900,16664
select_div_scale(991,18535
PGTYPESnumeric_div(1057,20134
PGTYPESnumeric_cmp(1286,24965
PGTYPESnumeric_from_int(1315,25724
PGTYPESnumeric_from_long(1324,25905
PGTYPESnumeric_copy(1394,27201
PGTYPESnumeric_from_double(1417,27563
numericvar_to_double(1438,27936
PGTYPESnumeric_to_double(1489,28792
PGTYPESnumeric_to_int(1500,28944
PGTYPESnumeric_to_long(1519,29192
PGTYPESnumeric_to_decimal(1548,29630
PGTYPESnumeric_from_decimal(1571,30007

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/pgtypeslib/dt.h,4657
#define DT_H4,56
#define MAXTZLEN	10,121
typedef int32 fsec_t;12,145
#define USE_POSTGRES_DATES	14,168
#define USE_ISO_DATES	15,200
#define USE_SQL_DATES	16,228
#define USE_GERMAN_DATES	17,256
#define INTSTYLE_POSTGRES	19,287
#define INTSTYLE_POSTGRES_VERBOSE	20,319
#define INTSTYLE_SQL_STANDARD	21,357
#define INTSTYLE_ISO_8601	22,392
#define INTERVAL_FULL_RANGE 24,425
#define INTERVAL_MASK(25,462
#define MAX_INTERVAL_PRECISION 26,498
#define DTERR_BAD_FORMAT	28,532
#define DTERR_FIELD_OVERFLOW	29,563
#define DTERR_MD_FIELD_OVERFLOW 30,597
#define DTERR_INTERVAL_OVERFLOW 31,670
#define DTERR_TZDISP_OVERFLOW	32,707
#define DAGO	35,744
#define DCURRENT	36,765
#define EPOCH	37,793
#define INVALID	38,817
#define EARLY	39,845
#define LATE	40,873
#define NOW	41,899
#define TODAY	42,920
#define TOMORROW	43,944
#define YESTERDAY	44,973
#define ZULU	45,1004
#define DMICROSEC	47,1027
#define DMILLISEC	48,1056
#define DSECOND	49,1085
#define DMINUTE	50,1112
#define DHOUR	51,1139
#define DDAY	52,1162
#define DWEEK	53,1183
#define DMONTH	54,1206
#define DQUARTER	55,1231
#define DYEAR	56,1259
#define DDECADE	57,1282
#define DCENTURY	58,1309
#define DMILLENNIUM	59,1337
#define DA_D	60,1371
#define DB_C	61,1391
#define DTIMEZONE	62,1411
#define AM	71,1566
#define PM	72,1580
#define HR24	73,1594
#define AD	75,1610
#define BC	76,1624
#define RESERV	92,2132
#define MONTH	93,2149
#define YEAR	94,2165
#define DAY	95,2180
#define JULIAN	96,2195
#define TZ	97,2212
#define DTZ	98,2270
#define DYNTZ	99,2328
#define IGNORE_DTF	100,2391
#define AMPM	101,2412
#define HOUR	102,2427
#define MINUTE	103,2443
#define SECOND	104,2461
#define MILLISECOND 105,2479
#define MICROSECOND 106,2502
#define DOY	107,2525
#define DOW	108,2541
#define UNITS	109,2557
#define ADBC	110,2574
#define AGO	112,2630
#define ABS_BEFORE	113,2646
#define ABS_AFTER	114,2669
#define ISODATE 116,2733
#define ISOTIME 117,2752
#define DTZMOD	119,2832
#define UNKNOWN_FIELD	121,2930
#define DTK_NUMBER	139,3591
#define DTK_STRING	140,3613
#define DTK_DATE	142,3636
#define DTK_TIME	143,3656
#define DTK_TZ	144,3676
#define DTK_AGO	145,3695
#define DTK_SPECIAL	147,3716
#define DTK_EARLY	148,3739
#define DTK_LATE	149,3760
#define DTK_EPOCH	150,3781
#define DTK_NOW	151,3803
#define DTK_YESTERDAY	152,3824
#define DTK_TODAY	153,3849
#define DTK_TOMORROW	154,3871
#define DTK_ZULU	155,3895
#define DTK_DELTA	157,3917
#define DTK_SECOND	158,3939
#define DTK_MINUTE	159,3962
#define DTK_HOUR	160,3985
#define DTK_DAY	161,4006
#define DTK_WEEK	162,4027
#define DTK_MONTH	163,4048
#define DTK_QUARTER	164,4070
#define DTK_YEAR	165,4094
#define DTK_DECADE	166,4115
#define DTK_CENTURY	167,4138
#define DTK_MILLENNIUM	168,4162
#define DTK_MILLISEC	169,4188
#define DTK_MICROSEC	170,4212
#define DTK_JULIAN	171,4236
#define DTK_DOW	173,4260
#define DTK_DOY	174,4281
#define DTK_TZ_HOUR	175,4302
#define DTK_TZ_MINUTE	176,4326
#define DTK_ISOYEAR	177,4351
#define DTK_ISODOW	178,4375
#define DTK_M(185,4514
#define DTK_ALL_SECS_M	186,4546
#define DTK_DATE_M	187,4630
#define DTK_TIME_M	188,4692
#define MAXDATELEN	196,5073
#define MAXDATEFIELDS	198,5154
#define TOKMAXLEN	200,5230
	char		token[token205,5319
	char		type;206,5376
	int32		value;207,5424
} datetkn;208,5471
#define FMODULO(217,5626
#define TMODULO(228,5970
#define DAYS_PER_YEAR	235,6113
#define MONTHS_PER_YEAR 236,6183
#define DAYS_PER_MONTH	244,6501
#define HOURS_PER_DAY	245,6568
#define SECS_PER_YEAR	252,6829
#define SECS_PER_DAY	253,6904
#define SECS_PER_HOUR	254,6931
#define SECS_PER_MINUTE 255,6958
#define MINS_PER_HOUR	256,6985
#define USECS_PER_DAY	258,7011
#define USECS_PER_HOUR	259,7057
#define USECS_PER_MINUTE 260,7103
#define USECS_PER_SEC	261,7149
#define isleap(267,7255
#define JULIAN_MINYEAR 273,7407
#define JULIAN_MINMONTH 274,7438
#define JULIAN_MINDAY 275,7467
#define JULIAN_MAXYEAR 276,7494
#define JULIAN_MAXMONTH 277,7527
#define JULIAN_MAXDAY 278,7555
#define IS_VALID_JULIAN(280,7582
#define MIN_TIMESTAMP	286,7791
#define END_TIMESTAMP	287,7845
#define IS_VALID_TIMESTAMP(289,7900
#define UTIME_MINYEAR 291,7978
#define UTIME_MINMONTH 292,8007
#define UTIME_MINDAY 293,8035
#define UTIME_MAXYEAR 294,8061
#define UTIME_MAXMONTH 295,8090
#define UTIME_MAXDAY 296,8118
#define IS_VALID_UTIME(298,8145
#define DT_NOBEGIN	305,8466
#define DT_NOEND	306,8524
#define TIMESTAMP_NOBEGIN(308,8576
#define TIMESTAMP_NOEND(309,8638
#define TIMESTAMP_IS_NOBEGIN(310,8698
#define TIMESTAMP_IS_NOEND(311,8750
#define TIMESTAMP_NOT_FINITE(312,8798

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/pgtypeslib/dt_common.c,1174
const int	day_tab[day_tab14,238
typedef long AbsoluteTime;18,376
static const datetkn datetktbl[datetktbl20,404
static const datetkn deltatktbl[deltatktbl421,14203
static const unsigned int szdatetktbl 486,17392
static const unsigned int szdeltatktbl 487,17453
static const datetkn *datecache[datecache489,17517
static const datetkn *deltacache[deltacache491,17575
char	   *months[months493,17634
char	   *days[days495,17747
char	   *pgtypes_date_weekdays_short[pgtypes_date_weekdays_short497,17852
char	   *pgtypes_date_months[pgtypes_date_months499,17951
datebsearch(502,18138
DecodeUnits(536,18887
date2j(581,20088
j2date(606,20395
DecodeSpecial(635,21130
EncodeDateOnly(669,21721
TrimTrailingZeros(722,23156
EncodeDateTime(753,24109
GetEpochTime(949,29249
abstime2tm(972,29603
GetCurrentDateTime(1058,31497
dt2time(1066,31593
DecodeNumberField(1087,32108
DecodeNumber(1197,34292
DecodeDate(1306,36946
DecodeTime(1435,39258
DecodeTimezone(1500,40591
DecodePosixTimezone(1545,41447
ParseDateTime(1598,42796
DecodeDateTime(1781,47576
find_end_token(2353,60133
pgtypes_defmt_scan(2458,63143
PGTYPEStimestamp_defmt_scan(2520,64465

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/pgtypeslib/datetime.c,785
PGTYPESdate_new(15,241
PGTYPESdate_free(25,406
PGTYPESdate_from_timestamp(31,453
PGTYPESdate_from_asc(47,683
PGTYPESdate_to_asc(101,1659
PGTYPESdate_julmdy(115,1970
PGTYPESdate_mdyjul(128,2136
PGTYPESdate_dayofweek(138,2329
PGTYPESdate_today(148,2530
#define PGTYPES_DATE_NUM_MAX_DIGITS	157,2693
#define PGTYPES_FMTDATE_DAY_DIGITS_LZ	160,2787
#define PGTYPES_FMTDATE_DOW_LITERAL_SHORT	161,2860
#define PGTYPES_FMTDATE_MONTH_DIGITS_LZ	162,2904
#define PGTYPES_FMTDATE_MONTH_LITERAL_SHORT 163,2947
#define PGTYPES_FMTDATE_YEAR_DIGITS_SHORT	164,2993
#define PGTYPES_FMTDATE_YEAR_DIGITS_LONG	165,3037
PGTYPESdate_fmt_asc(168,3085
		char	   *format;format172,3174
		int			component;173,3193
#define PGTYPES_DATE_MONTH_MAXLENGTH	328,7097
PGTYPESdate_defmt_asc(330,7172

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/pgtypeslib/timestamp.c,457
time2t(20,330
dt2local(26,539
tm2timestamp(40,875
SetEpochTimestamp(71,1801
timestamp2tm(97,2426
EncodeSpecialTimestamp(195,4745
PGTYPEStimestamp_from_asc(206,4959
PGTYPEStimestamp_to_asc(272,6194
PGTYPEStimestamp_current(294,6710
dttofmtasc_replace(304,6860
PGTYPEStimestamp_fmt_asc(782,17948
PGTYPEStimestamp_sub(797,18301
PGTYPEStimestamp_defmt_asc(810,18540
PGTYPEStimestamp_add_interval(862,19368
PGTYPEStimestamp_sub_interval(921,20458

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/pgtypeslib/common.c,100
pgtypes_alloc(10,168
pgtypes_strdup(20,291
pgtypes_fmt_replace(30,413
PGTYPESchar_free(145,3135

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/variable.c,550
static struct variable *allvariables allvariables7,101
new_variable(10,165
find_struct_member(25,477
find_struct(127,3677
find_simple(178,5137
find_variable(194,5402
remove_typedefs(261,7013
remove_variables(295,7558
struct arguments *argsinsert argsinsert365,8956
struct arguments *argsresult argsresult366,8993
reset_variables(369,9036
add_variable_to_head(379,9251
add_variable_to_tail(391,9552
remove_variable_from_list(409,9902
dump_variables(438,10406
check_indicator(467,11039
get_typedef(500,11716
adjust_array(512,11949

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/descriptor.c,519
static struct assignment *assignments;assignments18,339
push_assignment(21,384
drop_assignments(33,676
ECPGnumeric_lvalue(46,867
static struct descriptor *descriptors;descriptors73,1379
add_descriptor(76,1424
drop_descriptor(99,1871
lookup_descriptor(129,2483
output_get_descr_header(151,2918
output_get_descr(170,3412
output_set_descr_header(203,4290
descriptor_item_name(222,4803
output_set_descr(264,5665
#define MAX_DESCRIPTOR_NAMELEN 324,7215
descriptor_variable(326,7268
sqlda_variable(340,7737

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/c_keywords.c,145
#define PG_KEYWORD(18,477
static const uint16 ScanCKeywordTokens[ScanCKeywordTokens20,519
#undef PG_KEYWORD24,590
ScanCKeywordLookup(36,882

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/parser.c,286
static bool have_lookahead;28,759
static int	lookahead_token;29,819
static YYSTYPE lookahead_yylval;30,873
static YYLTYPE lookahead_yylloc;31,939
static char *lookahead_yytext;lookahead_yytext32,1005
filtered_base_yylex(56,2013
check_uescapechar(206,5278
ecpg_isspace(222,5562

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/keywords.c,118
#define PG_KEYWORD(32,1069
const uint16 SQLScanKeywordTokens[SQLScanKeywordTokens34,1121
#undef PG_KEYWORD38,1192

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/type.c,458
#define indicator_set 7,97
static struct ECPGstruct_member struct_no_indicator 9,177
mm_alloc(13,310
mm_strdup(25,477
ECPGstruct_member_dup(37,674
ECPGmake_struct_member(77,1850
ECPGmake_simple_type(96,2262
ECPGmake_array_type(111,2618
ECPGmake_struct_type(121,2800
get_type(133,3138
ECPGdump_a_type(241,5979
ECPGdump_a_simple(411,12329
ECPGdump_a_struct(581,17155
ECPGfree_struct_member(641,19011
ECPGfree_type(655,19191
get_dtype(693,20097

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/output.c,411
output_line_number(10,161
output_simple_statement(19,280
struct when when_error,32,506
			when_nf,33,530
			when_warn;34,542
print_action(37,569
whenever_action(66,1115
hashline_number(94,1695
static char *ecpg_statement_type_name[ecpg_statement_type_name126,2331
output_statement(136,2517
output_prepare_statement(173,3556
output_deallocate_prepare_statement(188,3939
output_escaped_str(209,4416

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/ecpg_kwlist.h,19
PG_KEYWORD(27,861

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/c_kwlist_d.h,310
#define C_KWLIST_D_H20,583
static const char ScanCKeywords_kw_string[ScanCKeywords_kw_string24,635
static const uint16 ScanCKeywords_kw_offsets[ScanCKeywords_kw_offsets52,976
#define SCANCKEYWORDS_NUM_KEYWORDS 81,1168
ScanCKeywords_hash_func(84,1218
static const ScanKeywordList ScanCKeywords 110,1958

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/ecpg.c,430
int			ret_value 14,274
bool		autocommit 15,295
char	   *output_filename;output_filename23,482
enum COMPAT_MODE compat 25,509
struct _include_path *include_paths include_paths27,555
struct cursor *cur cur28,599
struct typedefs *types types29,626
struct _defines *defines defines30,657
help(33,703
add_include_path(66,2337
add_preprocessor_define(85,2638
#define ECPG_GETOPT_LONG_REGRESSION	115,3215
main(117,3258

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/ecpg_keywords.c,154
#define PG_KEYWORD(22,533
static const uint16 ECPGScanKeywordTokens[ECPGScanKeywordTokens24,575
#undef PG_KEYWORD28,652
ScanECPGKeywordLookup(39,888

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/c_kwlist.h,19
PG_KEYWORD(27,852

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/ecpg_kwlist_d.h,337
#define ECPG_KWLIST_D_H20,589
static const char ScanECPGKeywords_kw_string[ScanECPGKeywords_kw_string24,644
static const uint16 ScanECPGKeywords_kw_offsets[ScanECPGKeywords_kw_offsets67,1276
#define SCANECPGKEYWORDS_NUM_KEYWORDS 111,1569
ScanECPGKeywords_hash_func(114,1622
static const ScanKeywordList ScanECPGKeywords 144,2621

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/type.h,3191
#define _ECPG_PREPROC_TYPE_H5,74
struct ECPGstruct_member10,144
	char	   *name;name12,171
	struct ECPGtype *type;type13,187
	struct ECPGstruct_member *next;next14,211
struct ECPGtype17,248
	enum ECPGttype type;19,266
	char	   *type_name;type_name20,288
	char	   *size;size22,376
	char	   *struct_sizeof;struct_sizeof24,494
		struct ECPGtype *element;element28,595
		struct ECPGstruct_member *members;members30,686
	}			u;31,761
	int			counter;32,769
struct ECPGtemp_type62,2062
	struct ECPGtype *type;type64,2085
	const char *name;name65,2109
enum WHEN_TYPE71,2230
	W_NOTHING,73,2247
	W_CONTINUE,74,2259
	W_BREAK,75,2272
	W_SQLPRINT,76,2282
	W_GOTO,77,2295
	W_DO,78,2304
	W_STOP79,2311
struct when82,2323
	enum WHEN_TYPE code;84,2337
	char	   *command;command85,2359
	char	   *str;str86,2378
struct index89,2397
	char	   *index1;index191,2412
	char	   *index2;index292,2430
	char	   *str;str93,2448
struct su_symbol96,2467
	char	   *su;su98,2486
	char	   *symbol;symbol99,2500
struct prep102,2522
	char	   *name;name104,2536
	char	   *stmt;stmt105,2552
	char	   *type;type106,2568
struct exec109,2588
	char	   *name;name111,2602
	char	   *type;type112,2618
struct this_type115,2638
	enum ECPGttype type_enum;117,2657
	char	   *type_str;type_str118,2684
	char	   *type_dimension;type_dimension119,2704
	char	   *type_index;type_index120,2730
	char	   *type_sizeof;type_sizeof121,2752
struct _include_path124,2779
	char	   *path;path126,2802
	struct _include_path *next;next127,2818
struct cursor130,2851
	char	   *name;name132,2867
	char	   *function;function133,2883
	char	   *command;command134,2903
	char	   *connection;connection135,2922
	bool		opened;136,2944
	struct arguments *argsinsert;argsinsert137,2959
	struct arguments *argsinsert_oos;argsinsert_oos138,2990
	struct arguments *argsresult;argsresult139,3025
	struct arguments *argsresult_oos;argsresult_oos140,3056
	struct cursor *next;next141,3091
struct typedefs144,3117
	char	   *name;name146,3135
	struct this_type *type;type147,3151
	struct ECPGstruct_member *struct_member_list;struct_member_list148,3176
	int			brace_level;149,3223
	struct typedefs *next;next150,3243
struct _defines153,3271
	char	   *olddef;olddef155,3289
	char	   *newdef;newdef156,3307
	int			pertinent;157,3325
	void	   *used;used158,3343
	struct _defines *next;next159,3359
struct variable163,3448
	char	   *name;name165,3466
	struct ECPGtype *type;type166,3482
	int			brace_level;167,3506
	struct variable *next;next168,3526
struct arguments171,3554
	struct variable *variable;variable173,3573
	struct variable *indicator;indicator174,3601
	struct arguments *next;next175,3630
struct descriptor178,3659
	char	   *name;name180,3679
	char	   *connection;connection181,3695
	struct descriptor *next;next182,3717
struct assignment185,3747
	char	   *variable;variable187,3767
	enum ECPGdtype value;188,3787
	struct assignment *next;next189,3810
enum errortype192,3840
	ET_WARNING,194,3857
	ET_WARNING, ET_ERROR194,3857
struct fetch_desc197,3883
	char	   *str;str199,3903
	char	   *name;name200,3918

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/preproc_extern.h,712
#define _ECPG_PREPROC_EXTERN_H4,83
#define STRUCT_DEPTH 15,223
#define EMPTY 16,248
extern void mmerror(77,1867
#define ILLEGAL_OPTION	109,3556
#define NO_INCLUDE_FILE	110,3582
#define PARSE_ERROR	111,3609
#define INDICATOR_NOT_ARRAY 112,3633
#define OUT_OF_MEMORY	113,3663
#define INDICATOR_NOT_STRUCT	114,3688
#define INDICATOR_NOT_SIMPLE	115,3719
enum COMPAT_MODE117,3751
	ECPG_COMPAT_PGSQL 119,3770
	ECPG_COMPAT_PGSQL = 0, ECPG_COMPAT_INFORMIX,119,3770
	ECPG_COMPAT_PGSQL = 0, ECPG_COMPAT_INFORMIX, ECPG_COMPAT_INFORMIX_SE,119,3770
	ECPG_COMPAT_PGSQL = 0, ECPG_COMPAT_INFORMIX, ECPG_COMPAT_INFORMIX_SE, ECPG_COMPAT_ORACLE119,3770
#define INFORMIX_MODE	123,3896
#define ORACLE_MODE 124,3988

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/ecpglib/prepare.c,921
#define POSTGRES_ECPG_INTERNAL3,45
#define STMTID_SIZE 14,236
#define stmtCacheNBuckets	23,544
#define stmtCacheEntPerBucket	24,607
#define stmtCacheArraySize 26,640
	int			lineno;30,733
	char		stmtID[stmtID31,748
	char	   *ecpgQuery;ecpgQuery32,776
	long		execs;33,797
	const char *connection;connection34,835
} stmtCacheEntry;35,896
static int	nextStmtID 37,915
static stmtCacheEntry *stmtCacheEntries stmtCacheEntries38,942
isvarchar(44,1163
ecpg_register_prepared_stmt(59,1346
replace_variables(104,2559
prepare_common(159,3814
ECPGprepare(217,5402
ecpg_find_prepared_statement(239,6045
deallocate_one(260,6433
ECPGdeallocate(315,7783
ecpg_deallocate_all_conn(337,8357
ECPGdeallocate_all(350,8615
ecpg_prepared(357,8796
ECPGprepared_statement(368,9093
HashStmt(379,9387
SearchStmtCache(415,10362
ecpg_freeStmtCacheEntry(451,11105
AddStmtToCache(491,12012
ecpg_auto_prepare(553,13751

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/ecpglib/descriptor.c,879
#define POSTGRES_ECPG_INTERNAL6,84
static pthread_key_t descriptor_key;23,499
static pthread_once_t descriptor_once 24,536
descriptor_destructor(29,673
descriptor_key_init(35,756
get_descriptors(41,875
set_descriptors(48,1035
static struct descriptor *all_descriptors all_descriptors53,1132
#define get_descriptors(55,1183
#define set_descriptors(56,1228
ecpg_result_by_descriptor(61,1393
ecpg_dynamic_type_DDT(71,1584
ECPGget_desc_header(91,1945
get_int_item(115,2485
set_int_item(158,3530
get_char_item(201,4536
#define RETURN_IF_NO_DATA	233,5313
ECPGget_desc(241,5492
#undef RETURN_IF_NO_DATA572,13980
ECPGset_desc_header(575,14011
set_desc_attr(586,14228
ECPGset_desc(607,14688
descriptor_free(730,17382
ECPGdeallocate_desc(750,17713
descriptor_deallocate_all(784,18469
ECPGallocate_desc(797,18671
ecpg_find_desc(837,19564
ECPGdescribe(852,19887

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/ecpglib/connect.c,623
#define POSTGRES_ECPG_INTERNAL3,45
static pthread_mutex_t connections_mutex 14,276
static pthread_key_t actual_connection_key;15,346
static pthread_once_t actual_connection_key_once 16,390
static struct connection *actual_connection actual_connection18,467
static struct connection *all_connections all_connections19,519
ecpg_actual_connection_init(23,610
ecpg_pthreads_init(29,705
ecpg_get_connection_nr(36,842
ecpg_get_connection(74,1719
ecpg_finish(113,2633
ECPGsetcommit(165,3964
ECPGsetconn(202,5000
ECPGnoticeReceiver(219,5331
ECPGconnect(271,6996
ECPGdisconnect(684,16557
ECPGget_PGconn(734,17430

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/ecpglib/execute.c,769
#define POSTGRES_ECPG_INTERNAL16,439
quote_postgres(40,950
free_variable(83,1900
free_statement(96,2061
next_insert(114,2388
ecpg_type_infocache_push(151,3238
ecpg_is_type_an_array(167,3688
#define not_an_array_in_ecpg 180,4125
ecpg_store_result(306,10944
sprintf_double_value(459,15448
sprintf_float_value(475,15777
convert_bytea_to_string(491,16106
ecpg_store_input(509,16535
print_param_value(1079,30513
ecpg_free_params(1109,31116
insert_tobeinserted(1130,31606
store_input_from_desc(1162,32258
ecpg_build_params(1216,33629
ecpg_autostart_transaction(1585,43559
ecpg_execute(1606,44086
ecpg_process_output(1675,46154
ecpg_do_prologue(1949,53917
ecpg_do_epilogue(2221,61030
ecpg_do(2253,61818
ECPGdo(2287,62607
ECPGdo_descriptor(2302,62996

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/ecpglib/sqlda.c,450
#define POSTGRES_ECPG_INTERNAL9,215
ecpg_sqlda_align_add_size(33,736
sqlda_compat_empty_size(45,996
sqlda_common_total_size(65,1488
sqlda_compat_total_size(157,4451
sqlda_native_empty_size(171,4713
sqlda_native_total_size(186,5098
ecpg_build_compat_sqlda(205,5510
static int16 value_is_null 251,6723
static int16 value_is_not_null 252,6756
ecpg_set_compat_sqlda(255,6798
ecpg_build_native_sqlda(412,12228
ecpg_set_native_sqlda(444,13074

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/ecpglib/misc.c,1023
#define POSTGRES_ECPG_INTERNAL3,42
#define LONG_LONG_MIN 23,470
#define LONG_LONG_MIN 25,508
bool		ecpg_internal_regression_mode 29,606
static struct sqlca_t sqlca_init 31,652
static pthread_key_t sqlca_key;59,961
static pthread_once_t sqlca_key_once 60,993
static struct sqlca_t sqlca 62,1057
static pthread_mutex_t debug_mutex 91,1368
static pthread_mutex_t debug_init_mutex 92,1432
static int	simple_debug 94,1508
static FILE *debugstream debugstream95,1537
ecpg_init_sqlca(98,1576
ecpg_init(104,1696
ecpg_sqlca_key_destructor(128,2225
ecpg_sqlca_key_init(134,2344
ECPGget_sqlca(141,2459
ECPGstatus(164,2853
ECPGtransactionStatus(182,3238
ECPGtrans(198,3512
ECPGdebug(242,4935
ecpg_log(266,5314
ECPGset_noind_null(319,6432
_check(378,7817
ECPGis_noind_null(388,7970
win32_pthread_mutex(458,9491
static pthread_mutex_t win32_pthread_once_lock 470,9794
win32_pthread_once(473,9876
ecpg_gettext(492,10206
struct var_list *ivlist ivlist523,10854
ECPGset_var(526,10892
ECPGget_var(581,12094

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/ecpglib/error.c,134
#define POSTGRES_ECPG_INTERNAL3,43
ecpg_raise(13,219
ecpg_raise_backend(219,7896
ecpg_check_PQresult(282,9771
sqlprint(335,11166

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/ecpglib/typename.c,115
#define POSTGRES_ECPG_INTERNAL3,46
ecpg_type_name(17,332
ecpg_dynamic_type(73,1465
sqlda_dynamic_type(107,2249

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/ecpglib/memory.c,637
#define POSTGRES_ECPG_INTERNAL3,44
ecpg_free(13,233
ecpg_alloc(19,278
ecpg_realloc(33,496
ecpg_strdup(47,729
struct auto_mem65,1036
	void	   *pointer;pointer67,1054
	struct auto_mem *next;next68,1073
static pthread_key_t auto_mem_key;72,1129
static pthread_once_t auto_mem_once 73,1164
auto_mem_destructor(76,1234
auto_mem_key_init(83,1351
get_auto_allocs(89,1462
set_auto_allocs(96,1614
static struct auto_mem *auto_allocs auto_allocs101,1701
#define get_auto_allocs(103,1746
#define set_auto_allocs(104,1787
ecpg_auto_alloc(108,1867
ecpg_add_mem(124,2080
ECPGfree_auto_mem(138,2329
ecpg_clear_auto_mem(158,2621

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/ecpglib/data.c,389
#define POSTGRES_ECPG_INTERNAL3,42
array_delimiter(20,434
array_boundary(33,718
garbage_left(46,1001
static const uint32 nan[nan74,1713
#define NAN 76,1769
get_float8_infinity(80,1827
get_float8_nan(90,1968
check_special_value(101,2197
ecpg_hex_enc_len(128,2712
ecpg_hex_dec_len(134,2781
get_hex(140,2860
hex_decode(161,3557
ecpg_hex_encode(191,3959
ecpg_get_data(206,4228

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/ecpglib/ecpglib_extern.h,4525
#define _ECPG_ECPGLIB_EXTERN_H4,83
enum COMPAT_MODE20,356
	ECPG_COMPAT_PGSQL 22,375
	ECPG_COMPAT_PGSQL = 0, ECPG_COMPAT_INFORMIX,22,375
	ECPG_COMPAT_PGSQL = 0, ECPG_COMPAT_INFORMIX, ECPG_COMPAT_INFORMIX_SE,22,375
	ECPG_COMPAT_PGSQL = 0, ECPG_COMPAT_INFORMIX, ECPG_COMPAT_INFORMIX_SE, ECPG_COMPAT_ORACLE22,375
#define INFORMIX_MODE(27,513
#define ORACLE_MODE(28,602
enum ARRAY_TYPE30,654
	ECPG_ARRAY_ERROR,32,672
	ECPG_ARRAY_ERROR, ECPG_ARRAY_NOT_SET,32,672
	ECPG_ARRAY_ERROR, ECPG_ARRAY_NOT_SET, ECPG_ARRAY_ARRAY,32,672
	ECPG_ARRAY_ERROR, ECPG_ARRAY_NOT_SET, ECPG_ARRAY_ARRAY, ECPG_ARRAY_VECTOR,32,672
	ECPG_ARRAY_ERROR, ECPG_ARRAY_NOT_SET, ECPG_ARRAY_ARRAY, ECPG_ARRAY_VECTOR, ECPG_ARRAY_NONE32,672
#define ECPG_IS_ARRAY(35,768
struct ECPGgeneric_varchar38,878
	int			len;40,907
	char		arr[arr41,919
struct ECPGgeneric_bytea45,986
	int			len;47,1013
	char		arr[arr48,1025
struct ECPGtype_information_cache55,1098
	struct ECPGtype_information_cache *next;next57,1134
	int			oid;58,1176
	enum ARRAY_TYPE isarray;59,1188
struct statement63,1257
	int			lineno;65,1276
	char	   *command;command66,1291
	char	   *name;name67,1310
	struct connection *connection;connection68,1326
	enum COMPAT_MODE compat;69,1358
	bool		force_indicator;70,1384
	enum ECPG_statement_type statement_type;71,1408
	bool		questionmarks;72,1450
	struct variable *inlist;inlist73,1472
	struct variable *outlist;outlist74,1498
	locale_t	clocale;76,1547
	locale_t	oldlocale;77,1566
	char	   *oldlocale;oldlocale79,1593
	int			oldthreadlocale;81,1646
	int			nparams;84,1684
	char	  **paramvalues;paramvalues85,1700
	int		   *paramlengths;paramlengths86,1723
	int		   *paramformats;paramformats87,1747
	PGresult   *results;results88,1771
struct prepared_statement92,1859
	char	   *name;name94,1887
	bool		prepared;95,1903
	struct statement *stmt;stmt96,1920
	struct prepared_statement *next;next97,1945
struct connection101,2020
	char	   *name;name103,2040
	PGconn	   *connection;connection104,2056
	bool		autocommit;105,2080
	struct ECPGtype_information_cache *cache_head;cache_head106,2099
	struct prepared_statement *prep_stmts;prep_stmts107,2147
	struct connection *next;next108,2187
struct descriptor112,2254
	char	   *name;name114,2274
	PGresult   *result;result115,2290
	struct descriptor *next;next116,2311
	int			count;117,2337
	struct descriptor_item *items;items118,2351
struct descriptor_item121,2387
	int			num;123,2412
	char	   *data;data124,2424
	int			indicator;125,2440
	int			length;126,2458
	int			precision;127,2473
	int			scale;128,2491
	int			type;129,2505
	bool		is_binary;130,2518
	int			data_len;131,2536
	struct descriptor_item *next;next132,2553
struct variable135,2588
	enum ECPGttype type;137,2606
	void	   *value;value138,2628
	void	   *pointer;pointer139,2645
	long		varcharsize;140,2664
	long		arrsize;141,2684
	long		offset;142,2700
	enum ECPGttype ind_type;143,2715
	void	   *ind_value;ind_value144,2741
	void	   *ind_pointer;ind_pointer145,2762
	long		ind_varcharsize;146,2785
	long		ind_arrsize;147,2809
	long		ind_offset;148,2829
	struct variable *next;next149,2848
struct var_list152,2876
	int			number;154,2894
	void	   *pointer;pointer155,2909
	struct var_list *next;next156,2928
void		ecpg_log(209,5158
#define ecpg_gettext(225,6028
#define ECPG_SQLSTATE_NO_DATA	231,6197
#define ECPG_SQLSTATE_USING_CLAUSE_DOES_NOT_MATCH_PARAMETERS	232,6238
#define ECPG_SQLSTATE_USING_CLAUSE_DOES_NOT_MATCH_TARGETS	233,6307
#define ECPG_SQLSTATE_RESTRICTED_DATA_TYPE_ATTRIBUTE_VIOLATION	234,6374
#define ECPG_SQLSTATE_INVALID_DESCRIPTOR_INDEX	235,6445
#define ECPG_SQLSTATE_SQLCLIENT_UNABLE_TO_ESTABLISH_SQLCONNECTION	236,6501
#define ECPG_SQLSTATE_CONNECTION_DOES_NOT_EXIST	237,6575
#define ECPG_SQLSTATE_TRANSACTION_RESOLUTION_UNKNOWN	238,6632
#define ECPG_SQLSTATE_CARDINALITY_VIOLATION 239,6693
#define ECPG_SQLSTATE_NULL_VALUE_NO_INDICATOR_PARAMETER 240,6745
#define ECPG_SQLSTATE_ACTIVE_SQL_TRANSACTION	241,6809
#define ECPG_SQLSTATE_NO_ACTIVE_SQL_TRANSACTION	242,6863
#define ECPG_SQLSTATE_INVALID_SQL_STATEMENT_NAME	243,6920
#define ECPG_SQLSTATE_INVALID_SQL_DESCRIPTOR_NAME	244,6977
#define ECPG_SQLSTATE_INVALID_CURSOR_NAME	245,7035
#define ECPG_SQLSTATE_SYNTAX_ERROR	246,7085
#define ECPG_SQLSTATE_DATATYPE_MISMATCH	247,7130
#define ECPG_SQLSTATE_DUPLICATE_CURSOR	248,7179
#define ECPG_SQLSTATE_ECPG_INTERNAL_ERROR	251,7281
#define ECPG_SQLSTATE_ECPG_OUT_OF_MEMORY	252,7331

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/preproc/struct.h,297
struct mytype1,0
	int			id;3,16
	char		t[t4,27
	double		d1;5,41
	double		d2;6,69
	char		c[c7,82
typedef struct mytype MYTYPE;9,99
struct mynulltype11,130
	int			id;13,150
	int			t;14,161
	int			d1;15,171
	int			d2;16,182
	int			c;17,193
typedef struct mynulltype MYNULLTYPE;19,206

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/preproc/strings.h,110
char	   *s1,s11,0
		   *s2,s22,13
		   *s3,s33,23
		   *s4,s44,33
		   *s5,s55,43
		   *s6;s66,53

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/printf_hack.h,20
print_double(6,150

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/regression.h,212
exec		sql define REGRESSDB1 ecpg1_regression;1,0
exec		sql define REGRESSDB2 ecpg2_regression;2,46
exec		sql define REGRESSUSER1 regress_ecpg_user1;4,93
exec		sql define REGRESSUSER2 regress_ecpg_user2;5,143

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/pg_regress_ecpg.c,108
#define LINEBUFSIZE 23,729
ecpg_filter(26,766
ecpg_start_test(82,1902
ecpg_init(172,4381
main(178,4464

/home/seinoyu/pgsql/master/postgresql/bootscanner.c,8798
#define  YY_INT_ALIGNED 5,
#define yy_create_buffer 9,
#define yy_delete_buffer 10,
#define yy_scan_buffer 11,
#define yy_scan_string 12,
#define yy_scan_bytes 13,
#define yy_init_buffer 14,
#define yy_flush_buffer 15,
#define yy_load_buffer_state 16,
#define yy_switch_to_buffer 17,
#define yypush_buffer_state 18,
#define yypop_buffer_state 19,
#define yyensure_buffer_stack 20,
#define yy_flex_debug 21,
#define yyin 22,
#define yyleng 23,
#define yylex 24,
#define yylineno 25,
#define yyout 26,
#define yyrestart 27,
#define yytext 28,
#define yywrap 29,
#define yyalloc 30,
#define yyrealloc 31,
#define yyfree 32,
#define FLEX_SCANNER34,
#define YY_FLEX_MAJOR_VERSION 35,
#define YY_FLEX_MINOR_VERSION 36,
#define YY_FLEX_SUBMINOR_VERSION 37,
#define FLEX_BETA39,
#define boot_yy_create_buffer_ALREADY_DEFINED43,
#define yy_create_buffer 45,
#define boot_yy_delete_buffer_ALREADY_DEFINED49,
#define yy_delete_buffer 51,
#define boot_yy_scan_buffer_ALREADY_DEFINED55,
#define yy_scan_buffer 57,
#define boot_yy_scan_string_ALREADY_DEFINED61,
#define yy_scan_string 63,
#define boot_yy_scan_bytes_ALREADY_DEFINED67,
#define yy_scan_bytes 69,
#define boot_yy_init_buffer_ALREADY_DEFINED73,
#define yy_init_buffer 75,
#define boot_yy_flush_buffer_ALREADY_DEFINED79,
#define yy_flush_buffer 81,
#define boot_yy_load_buffer_state_ALREADY_DEFINED85,
#define yy_load_buffer_state 87,
#define boot_yy_switch_to_buffer_ALREADY_DEFINED91,
#define yy_switch_to_buffer 93,
#define boot_yypush_buffer_state_ALREADY_DEFINED97,
#define yypush_buffer_state 99,
#define boot_yypop_buffer_state_ALREADY_DEFINED103,
#define yypop_buffer_state 105,
#define boot_yyensure_buffer_stack_ALREADY_DEFINED109,
#define yyensure_buffer_stack 111,
#define boot_yylex_ALREADY_DEFINED115,
#define yylex 117,
#define boot_yyrestart_ALREADY_DEFINED121,
#define yyrestart 123,
#define boot_yylex_init_ALREADY_DEFINED127,
#define yylex_init 129,
#define boot_yylex_init_extra_ALREADY_DEFINED133,
#define yylex_init_extra 135,
#define boot_yylex_destroy_ALREADY_DEFINED139,
#define yylex_destroy 141,
#define boot_yyget_debug_ALREADY_DEFINED145,
#define yyget_debug 147,
#define boot_yyset_debug_ALREADY_DEFINED151,
#define yyset_debug 153,
#define boot_yyget_extra_ALREADY_DEFINED157,
#define yyget_extra 159,
#define boot_yyset_extra_ALREADY_DEFINED163,
#define yyset_extra 165,
#define boot_yyget_in_ALREADY_DEFINED169,
#define yyget_in 171,
#define boot_yyset_in_ALREADY_DEFINED175,
#define yyset_in 177,
#define boot_yyget_out_ALREADY_DEFINED181,
#define yyget_out 183,
#define boot_yyset_out_ALREADY_DEFINED187,
#define yyset_out 189,
#define boot_yyget_leng_ALREADY_DEFINED193,
#define yyget_leng 195,
#define boot_yyget_text_ALREADY_DEFINED199,
#define yyget_text 201,
#define boot_yyget_lineno_ALREADY_DEFINED205,
#define yyget_lineno 207,
#define boot_yyset_lineno_ALREADY_DEFINED211,
#define yyset_lineno 213,
#define boot_yywrap_ALREADY_DEFINED217,
#define yywrap 219,
#define boot_yyalloc_ALREADY_DEFINED223,
#define yyalloc 225,
#define boot_yyrealloc_ALREADY_DEFINED229,
#define yyrealloc 231,
#define boot_yyfree_ALREADY_DEFINED235,
#define yyfree 237,
#define boot_yytext_ALREADY_DEFINED241,
#define yytext 243,
#define boot_yyleng_ALREADY_DEFINED247,
#define yyleng 249,
#define boot_yyin_ALREADY_DEFINED253,
#define yyin 255,
#define boot_yyout_ALREADY_DEFINED259,
#define yyout 261,
#define boot_yy_flex_debug_ALREADY_DEFINED265,
#define yy_flex_debug 267,
#define boot_yylineno_ALREADY_DEFINED271,
#define yylineno 273,
#define FLEXINT_H289,
#define __STDC_LIMIT_MACROS 299,
typedef int8_t flex_int8_t;303,
typedef uint8_t flex_uint8_t;304,
typedef int16_t flex_int16_t;305,
typedef uint16_t flex_uint16_t;306,
typedef int32_t flex_int32_t;307,
typedef uint32_t flex_uint32_t;308,
typedef signed char flex_int8_t;310,
typedef short int flex_int16_t;311,
typedef int flex_int32_t;312,
typedef unsigned char flex_uint8_t;313,
typedef unsigned short int flex_uint16_t;314,
typedef unsigned int flex_uint32_t;315,
#define INT8_MIN 319,
#define INT16_MIN 322,
#define INT32_MIN 325,
#define INT8_MAX 328,
#define INT16_MAX 331,
#define INT32_MAX 334,
#define UINT8_MAX 337,
#define UINT16_MAX 340,
#define UINT32_MAX 343,
#define SIZE_MAX 347,
#define yyconst 357,
#define yynoreturn 360,
#define yynoreturn362,
#define YY_NULL 366,
#define YY_SC_TO_UI(371,
#define BEGIN 377,
#define YY_START 382,
#define YYSTATE 383,
#define YY_STATE_EOF(385,
#define YY_NEW_FILE 387,
#define YY_END_OF_BUFFER_CHAR 388,
#define YY_BUF_SIZE 397,
#define YY_BUF_SIZE 399,
#define YY_STATE_BUF_SIZE 405,
#define YY_TYPEDEF_YY_BUFFER_STATE408,
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE409,
#define YY_TYPEDEF_YY_SIZE_T413,
typedef size_t yy_size_t;414,
#define EOB_ACT_CONTINUE_SCAN 421,
#define EOB_ACT_END_OF_FILE 422,
#define EOB_ACT_LAST_MATCH 423,
    #define YY_LESS_LINENO(425,
    #define YY_LINENO_REWIND_TO(426,
#define yyless(429,
#define unput(441,
#define YY_STRUCT_YY_BUFFER_STATE444,
struct yy_buffer_state445,
	FILE *yy_input_file;yy_input_file447,
	char *yy_ch_buf;yy_ch_buf449,
	char *yy_buf_pos;yy_buf_pos450,
	int yy_buf_size;455,
	int yy_n_chars;460,
	int yy_is_our_buffer;466,
	int yy_is_interactive;473,
	int yy_at_bol;479,
    int yy_bs_lineno;481,
    int yy_bs_column;482,
	int yy_fill_buffer;487,
	int yy_buffer_status;489,
#define YY_BUFFER_NEW 491,
#define YY_BUFFER_NORMAL 492,
#define YY_BUFFER_EOF_PENDING 503,
static size_t yy_buffer_stack_top 509,
static size_t yy_buffer_stack_max 510,
static YY_BUFFER_STATE * yy_buffer_stack 511,
#define YY_CURRENT_BUFFER 519,
#define YY_CURRENT_BUFFER_LVALUE 525,
static char yy_hold_char;528,
static int yy_n_chars;529,
int yyleng;530,
static char *yy_c_buf_p yy_c_buf_p533,
static int yy_init 534,
static int yy_start 535,
static int yy_did_buffer_switch_on_eof;540,
#define YY_FLUSH_BUFFER 553,
#define yy_new_buffer 563,
#define yy_set_interactive(564,
#define yy_set_bol(573,
#define YY_AT_BOL(582,
#define boot_yywrap(586,
#define YY_SKIP_YYWRAP587,
typedef flex_uint8_t YY_CHAR;588,
FILE *yyin yyin590,
typedef int yy_state_type;592,
int yylineno 595,
#undef yytext_ptr599,
#define yytext_ptr 601,
#define YY_DO_BEFORE_ACTION 611,
#define YY_NUM_RULES 617,
#define YY_END_OF_BUFFER 618,
struct yy_trans_info621,
	flex_int32_t yy_verify;623,
	flex_int32_t yy_nxt;624,
static const flex_int16_t yy_accept[yy_accept626,
static const YY_CHAR yy_ec[yy_ec644,
static const YY_CHAR yy_meta[yy_meta676,
static const flex_int16_t yy_base[yy_base685,
static const flex_int16_t yy_def[yy_def703,
static const flex_int16_t yy_nxt[yy_nxt721,
static const flex_int16_t yy_chk[yy_chk747,
static yy_state_type yy_last_accepting_state;773,
static char *yy_last_accepting_cpos;yy_last_accepting_cpos774,
int yy_flex_debug 777,
#define REJECT 782,
#define yymore(783,
#define YY_MORE_ADJ 784,
#define YY_RESTORE_YY_MORE_OFFSET785,
char *yytext;yytext786,
#define YY_NO_INPUT 844,
#define INITIAL 858,
#define YY_EXTRA_TYPE 869,
#define YY_READ_BUF_SIZE 940,
#define YY_READ_BUF_SIZE 942,
#define ECHO 951,
#define YY_INPUT(958,
#define yyterminate(995,
#define YY_START_STACK_INCR 1000,
#define YY_FATAL_ERROR(1005,
#define YY_DECL_IS_OURS 1014,
#define YY_DECL 1018,
#define YY_USER_ACTION1025,
#define YY_BREAK 1030,
#define YY_RULE_SETUP 1033,
static int yy_get_next_buffer 1441,
    static yy_state_type yy_get_previous_state 1579,
    static yy_state_type yy_try_NUL_trans 1612,
    static int yyinput 1641,
    void yyrestart 1720,
    void yy_switch_to_buffer 1737,
static void yy_load_buffer_state 1768,
    YY_BUFFER_STATE yy_create_buffer 1782,
    void yy_delete_buffer 1810,
    static void yy_init_buffer 1829,
    void yy_flush_buffer 1857,
void yypush_buffer_state 1886,
void yypop_buffer_state 1916,
static void yyensure_buffer_stack 1935,
YY_BUFFER_STATE yy_scan_buffer 1984,
YY_BUFFER_STATE yy_scan_string 2021,
YY_BUFFER_STATE yy_scan_bytes 2034,
#define YY_EXIT_FAILURE 2065,
static void yynoreturn yy_fatal_error 2068,
#undef yyless2076,
#define yyless(2077,
int yyget_lineno 2096,
FILE *yyget_in yyget_in2105,
FILE *yyget_out yyget_out2113,
int yyget_leng 2121,
char *yyget_text yyget_text2130,
void yyset_lineno 2139,
void yyset_in 2151,
void yyset_out 2156,
int yyget_debug 2161,
void yyset_debug 2166,
static int yy_init_globals 2171,
int yylex_destroy 2200,
static void yy_flex_strncpy 2226,
static int yy_flex_strlen 2236,
void *yyalloc yyalloc2246,
void *yyrealloc yyrealloc2251,
void yyfree 2264,
#define YYTABLES_NAME 2269,

/home/seinoyu/pgsql/master/postgresql/bootscanner.l,87
#undef fprintf44,
#define fprintf(45,
fprintf_to_ereport(48,
static int	yyline 54,
yyerror(143,

/home/seinoyu/pgsql/master/postgresql/src/backend/bootstrap/bootparse.y,1174
#define YYMALLOC 63,1799
#define YYFREE 64,1823
static MemoryContext per_line_ctx 66,1847
do_start(69,1902
do_end(82,2263
static int num_columns_read 96,2555
%name-prefix=prefix101,2603
TopLevel:TopLevel133,3317
Boot_Queries:Boot_Queries138,3353
Boot_Query 143,3415
Boot_OpenStmt:Boot_OpenStmt154,3617
Boot_CloseStmt:Boot_CloseStmt163,3724
Boot_CreateStmt:Boot_CreateStmt172,3830
Boot_InsertStmt:Boot_InsertStmt268,6312
Boot_DeclareIndexStmt:Boot_DeclareIndexStmt287,6755
Boot_DeclareUniqueIndexStmt:Boot_DeclareUniqueIndexStmt339,8177
Boot_DeclareToastStmt:Boot_DeclareToastStmt391,9618
Boot_BuildIndsStmt:Boot_BuildIndsStmt403,9844
boot_index_params:boot_index_params413,9955
boot_index_param:boot_index_param418,10100
optbootstrap:optbootstrap433,10435
optsharedrelation:optsharedrelation438,10499
optrowtypeoid:optrowtypeoid443,10576
boot_column_list:boot_column_list448,10664
boot_column_def:boot_column_def453,10750
boot_column_nullness:boot_column_nullness462,10951
oidspec:oidspec468,11122
boot_column_val_list:boot_column_val_list472,11177
boot_column_val:boot_column_val478,11315
boot_ident:boot_ident485,11453

/home/seinoyu/pgsql/master/postgresql/src/backend/bootstrap/bootparse.c,334
#define YYBISON 48,2185
#define YYBISON_VERSION 51,2226
#define YYSKELETON_NAME 54,2281
#define YYPURE 57,2336
#define YYPUSH 60,2375
#define YYPULL 63,2414
#define yyparse 67,2484
#define yylex 68,2521
#define yyerror 69,2556
#define yydebug 70,2593
#define yynerrs 71,2630
#define yylval 72,2667
#define yychar 73,2703

/home/seinoyu/pgsql/master/postgresql/bootparse.y,279
#define YYMALLOC 63,
#define YYFREE 64,
static MemoryContext per_line_ctx 66,
do_start(69,
do_end(82,
static int num_columns_read 96,
	List		*list;list105,
	IndexElem	*ielem;ielem106,
	char		*str;str107,
	const char	*kw;kw108,
	int			ival;109,
	Oid			oidval;110,

/home/seinoyu/pgsql/master/postgresql/bootparse.c,833
#   define YY_CAST(179,
#   define YY_REINTERPRET_CAST(180,
#   define YY_CAST(182,
#   define YY_REINTERPRET_CAST(183,
#    define YY_NULLPTR 189,
#    define YY_NULLPTR 191,
#   define YY_NULLPTR 194,
# undef YYERROR_VERBOSE200,
# define YYERROR_VERBOSE 201,
# define YYERROR_VERBOSE 203,
# define YYDEBUG 209,
# define YYTOKENTYPE217,
  enum yytokentype218,
    ID 220,
    COMMA 221,
    EQUALS 222,
    LPAREN 223,
    RPAREN 224,
    NULLVAL 225,
    OPEN 226,
    XCLOSE 227,
    XCREATE 228,
    INSERT_TUPLE 229,
    XDECLARE 230,
    INDEX 231,
    ON 232,
    USING 233,
    XBUILD 234,
    INDICES 235,
    UNIQUE 236,
    XTOAST 237,
    OBJ_ID 238,
    XBOOTSTRAP 239,
    XSHARED_RELATION 240,
    XROWTYPE_OID 241,
    XFORCE 242,
    XNOT 243,
    XNULL 244,
union YYSTYPE250,
typedef union YYSTYPE YYSTYPE;264,
# define YYSTYPE_IS_TRIVIAL 265,
# define YYSTYPE_IS_DECLARED 266,
# undef short279,
#  define YY_STDINT_H290,
typedef __INT_LEAST8_TYPE__ yytype_int8;300,
typedef int_least8_t yytype_int8;302,
typedef signed char yytype_int8;304,
typedef __INT_LEAST16_TYPE__ yytype_int16;308,
typedef int_least16_t yytype_int16;310,
typedef short yytype_int16;312,
typedef __UINT_LEAST8_TYPE__ yytype_uint8;316,
typedef uint_least8_t yytype_uint8;319,
typedef unsigned char yytype_uint8;321,
typedef short yytype_uint8;323,
typedef __UINT_LEAST16_TYPE__ yytype_uint16;327,
typedef uint_least16_t yytype_uint16;330,
typedef unsigned short yytype_uint16;332,
typedef int yytype_uint16;334,
#  define YYPTRDIFF_T 339,
#  define YYPTRDIFF_MAXIMUM 340,
#  define YYPTRDIFF_T 345,
#  define YYPTRDIFF_MAXIMUM 346,
#  define YYPTRDIFF_T 348,
#  define YYPTRDIFF_MAXIMUM 349,
#  define YYSIZE_T 355,
#  define YYSIZE_T 357,
#  define YYSIZE_T 360,
#  define YYSIZE_T 362,
#define YYSIZE_MAXIMUM 366,
#define YYSIZEOF(372,
typedef yytype_int8 yy_state_t;375,
typedef int yy_state_fast_t;378,
#   define YY_(384,
#  define YY_(388,
#  define YY_ATTRIBUTE_PURE 394,
#  define YY_ATTRIBUTE_PURE396,
#  define YY_ATTRIBUTE_UNUSED 402,
#  define YY_ATTRIBUTE_UNUSED404,
# define YYUSE(410,
# define YYUSE(412,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN 417,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END 421,
# define YY_INITIAL_VALUE(424,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN427,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END428,
# define YY_INITIAL_VALUE(431,
# define YY_IGNORE_USELESS_CAST_BEGIN 435,
# define YY_IGNORE_USELESS_CAST_END 438,
# define YY_IGNORE_USELESS_CAST_BEGIN442,
# define YY_IGNORE_USELESS_CAST_END443,
#define YY_ASSERT(447,
#    define YYSTACK_ALLOC 456,
#    define YYSTACK_ALLOC 460,
#    define alloca 463,
#    define YYSTACK_ALLOC 465,
#      define EXIT_SUCCESS 470,
#  define YYSTACK_FREE(479,
#   define YYSTACK_ALLOC_MAXIMUM 485,
#  define YYSTACK_ALLOC 488,
#  define YYSTACK_FREE 489,
#   define YYSTACK_ALLOC_MAXIMUM 491,
#    define EXIT_SUCCESS 498,
#   define YYMALLOC 502,
#   define YYFREE 508,
union yyalloc522,
  yy_state_t yyss_alloc;524,
  YYSTYPE yyvs_alloc;525,
# define YYSTACK_GAP_MAXIMUM 529,
# define YYSTACK_BYTES(533,
# define YYCOPY_NEEDED 537,
# define YYSTACK_RELOCATE(544,
#   define YYCOPY(562,
#   define YYCOPY(565,
#define YYFINAL 578,
#define YYLAST 580,
#define YYNTOKENS 583,
#define YYNNTS 585,
#define YYNRULES 587,
#define YYNSTATES 589,
#define YYUNDEFTOK 591,
#define YYMAXUTOK 592,
#define YYTRANSLATE(597,
static const yytype_int8 yytranslate[yytranslate602,
static const yytype_int16 yyrline[yyrline637,
static const char *const yytname[yytname652,
static const yytype_int16 yytoknum[yytoknum672,
#define YYPACT_NINF 680,
#define yypact_value_is_default(682,
#define YYTABLE_NINF 685,
#define yytable_value_is_error(687,
static const yytype_int16 yypact[yypact692,
static const yytype_int8 yydefact[yydefact710,
static const yytype_int8 yypgoto[yypgoto726,
static const yytype_int8 yydefgoto[yydefgoto734,
static const yytype_int8 yytable[yytable744,
static const yytype_int8 yycheck[yycheck765,
static const yytype_int8 yystos[yystos788,
static const yytype_int8 yyr1[yyr1804,
static const yytype_int8 yyr2[yyr2816,
#define yyerrok 828,
#define yyclearin 829,
#define YYEMPTY 830,
#define YYEOF 831,
#define YYACCEPT 833,
#define YYABORT 834,
#define YYERROR 835,
#define YYRECOVERING(838,
#define YYBACKUP(840,
#define YYTERROR 858,
#define YYERRCODE 859,
#  define YYFPRINTF 868,
# define YYDPRINTF(871,
# define YY_LOCATION_PRINT(879,
# define YY_SYMBOL_PRINT(883,
yy_symbol_value_print 900,
yy_symbol_print 921,
yy_stack_print 936,
# define YY_STACK_PRINT(947,
yy_reduce_print 959,
# define YY_REDUCE_PRINT(978,
int yydebug;986,
# define YYDPRINTF(988,
# define YY_SYMBOL_PRINT(989,
# define YY_STACK_PRINT(990,
# define YY_REDUCE_PRINT(991,
# define YYINITDEPTH 997,
# define YYMAXDEPTH 1008,
#   define yystrlen(1016,
yystrlen 1020,
#   define yystpcpy 1032,
yystpcpy 1037,
yytnamerr 1059,
yysyntax_error 1110,
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM 1113,
# define YYCASE_(1189,
# undef YYCASE_1200,
yydestruct 1249,
int yychar;1265,
YYSTYPE yylval;1268,
int yynerrs;1270,
yyparse 1278,
#define YYPOPSTACK(1318,
# undef YYSTACK_RELOCATE1400,
# define YYSYNTAX_ERROR 2080,
# undef YYSYNTAX_ERROR2109,

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/repl_gram.c,334
#define YYBISON 48,2185
#define YYBISON_VERSION 51,2226
#define YYSKELETON_NAME 54,2281
#define YYPURE 57,2336
#define YYPUSH 60,2375
#define YYPULL 63,2414
#define yyparse 67,2484
#define yylex 68,2528
#define yyerror 69,2570
#define yydebug 70,2614
#define yynerrs 71,2658
#define yylval 72,2702
#define yychar 73,2745

/home/seinoyu/pgsql/master/postgresql/repl_gram.y,312
Node *replication_parse_result;replication_parse_result26,
#define YYMALLOC 39,
#define YYFREE 40,
		char					*str;str48,
		bool					boolval;49,
		uint32					uintval;50,
		XLogRecPtr				recptr;52,
		Node					*node;node53,
		List					*list;list54,
		DefElem					*defelt;defelt55,
make_sqlcmd(422,

/home/seinoyu/pgsql/master/postgresql/repl_gram.c,1122
#   define YY_CAST(123,
#   define YY_REINTERPRET_CAST(124,
#   define YY_CAST(126,
#   define YY_REINTERPRET_CAST(127,
#    define YY_NULLPTR 133,
#    define YY_NULLPTR 135,
#   define YY_NULLPTR 138,
# undef YYERROR_VERBOSE144,
# define YYERROR_VERBOSE 145,
# define YYERROR_VERBOSE 147,
# define YYDEBUG 153,
# define YYTOKENTYPE161,
  enum yytokentype162,
    SCONST 164,
    IDENT 165,
    UCONST 166,
    RECPTR 167,
    T_WORD 168,
    K_BASE_BACKUP 169,
    K_IDENTIFY_SYSTEM 170,
    K_SHOW 171,
    K_START_REPLICATION 172,
    K_CREATE_REPLICATION_SLOT 173,
    K_DROP_REPLICATION_SLOT 174,
    K_TIMELINE_HISTORY 175,
    K_LABEL 176,
    K_PROGRESS 177,
    K_FAST 178,
    K_WAIT 179,
    K_NOWAIT 180,
    K_MAX_RATE 181,
    K_WAL 182,
    K_TABLESPACE_MAP 183,
    K_NOVERIFY_CHECKSUMS 184,
    K_TIMELINE 185,
    K_PHYSICAL 186,
    K_LOGICAL 187,
    K_SLOT 188,
    K_RESERVE_WAL 189,
    K_TEMPORARY 190,
    K_EXPORT_SNAPSHOT 191,
    K_NOEXPORT_SNAPSHOT 192,
    K_USE_SNAPSHOT 193,
    K_MANIFEST 194,
    K_MANIFEST_CHECKSUMS 195,
union YYSTYPE201,
typedef union YYSTYPE YYSTYPE;217,
# define YYSTYPE_IS_TRIVIAL 218,
# define YYSTYPE_IS_DECLARED 219,
# undef short232,
#  define YY_STDINT_H243,
typedef __INT_LEAST8_TYPE__ yytype_int8;253,
typedef int_least8_t yytype_int8;255,
typedef signed char yytype_int8;257,
typedef __INT_LEAST16_TYPE__ yytype_int16;261,
typedef int_least16_t yytype_int16;263,
typedef short yytype_int16;265,
typedef __UINT_LEAST8_TYPE__ yytype_uint8;269,
typedef uint_least8_t yytype_uint8;272,
typedef unsigned char yytype_uint8;274,
typedef short yytype_uint8;276,
typedef __UINT_LEAST16_TYPE__ yytype_uint16;280,
typedef uint_least16_t yytype_uint16;283,
typedef unsigned short yytype_uint16;285,
typedef int yytype_uint16;287,
#  define YYPTRDIFF_T 292,
#  define YYPTRDIFF_MAXIMUM 293,
#  define YYPTRDIFF_T 298,
#  define YYPTRDIFF_MAXIMUM 299,
#  define YYPTRDIFF_T 301,
#  define YYPTRDIFF_MAXIMUM 302,
#  define YYSIZE_T 308,
#  define YYSIZE_T 310,
#  define YYSIZE_T 313,
#  define YYSIZE_T 315,
#define YYSIZE_MAXIMUM 319,
#define YYSIZEOF(325,
typedef yytype_int8 yy_state_t;328,
typedef int yy_state_fast_t;331,
#   define YY_(337,
#  define YY_(341,
#  define YY_ATTRIBUTE_PURE 347,
#  define YY_ATTRIBUTE_PURE349,
#  define YY_ATTRIBUTE_UNUSED 355,
#  define YY_ATTRIBUTE_UNUSED357,
# define YYUSE(363,
# define YYUSE(365,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN 370,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END 374,
# define YY_INITIAL_VALUE(377,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN380,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END381,
# define YY_INITIAL_VALUE(384,
# define YY_IGNORE_USELESS_CAST_BEGIN 388,
# define YY_IGNORE_USELESS_CAST_END 391,
# define YY_IGNORE_USELESS_CAST_BEGIN395,
# define YY_IGNORE_USELESS_CAST_END396,
#define YY_ASSERT(400,
#    define YYSTACK_ALLOC 409,
#    define YYSTACK_ALLOC 413,
#    define alloca 416,
#    define YYSTACK_ALLOC 418,
#      define EXIT_SUCCESS 423,
#  define YYSTACK_FREE(432,
#   define YYSTACK_ALLOC_MAXIMUM 438,
#  define YYSTACK_ALLOC 441,
#  define YYSTACK_FREE 442,
#   define YYSTACK_ALLOC_MAXIMUM 444,
#    define EXIT_SUCCESS 451,
#   define YYMALLOC 455,
#   define YYFREE 461,
union yyalloc475,
  yy_state_t yyss_alloc;477,
  YYSTYPE yyvs_alloc;478,
# define YYSTACK_GAP_MAXIMUM 482,
# define YYSTACK_BYTES(486,
# define YYCOPY_NEEDED 490,
# define YYSTACK_RELOCATE(497,
#   define YYCOPY(515,
#   define YYCOPY(518,
#define YYFINAL 531,
#define YYLAST 533,
#define YYNTOKENS 536,
#define YYNNTS 538,
#define YYNRULES 540,
#define YYNSTATES 542,
#define YYUNDEFTOK 544,
#define YYMAXUTOK 545,
#define YYTRANSLATE(550,
static const yytype_int8 yytranslate[yytranslate555,
static const yytype_int16 yyrline[yyrline590,
static const char *const yytname[yytname604,
static const yytype_int16 yytoknum[yytoknum628,
#define YYPACT_NINF 637,
#define yypact_value_is_default(639,
#define YYTABLE_NINF 642,
#define yytable_value_is_error(644,
static const yytype_int8 yypact[yypact649,
static const yytype_int8 yydefact[yydefact664,
static const yytype_int8 yypgoto[yypgoto677,
static const yytype_int8 yydefgoto[yydefgoto685,
static const yytype_int8 yytable[yytable695,
static const yytype_int8 yycheck[yycheck705,
static const yytype_int8 yystos[yystos717,
static const yytype_int8 yyr1[yyr1730,
static const yytype_int8 yyr2[yyr2741,
#define yyerrok 752,
#define yyclearin 753,
#define YYEMPTY 754,
#define YYEOF 755,
#define YYACCEPT 757,
#define YYABORT 758,
#define YYERROR 759,
#define YYRECOVERING(762,
#define YYBACKUP(764,
#define YYTERROR 782,
#define YYERRCODE 783,
#  define YYFPRINTF 792,
# define YYDPRINTF(795,
# define YY_LOCATION_PRINT(803,
# define YY_SYMBOL_PRINT(807,
yy_symbol_value_print 824,
yy_symbol_print 845,
yy_stack_print 860,
# define YY_STACK_PRINT(871,
yy_reduce_print 883,
# define YY_REDUCE_PRINT(902,
int yydebug;910,
# define YYDPRINTF(912,
# define YY_SYMBOL_PRINT(913,
# define YY_STACK_PRINT(914,
# define YY_REDUCE_PRINT(915,
# define YYINITDEPTH 921,
# define YYMAXDEPTH 932,
#   define yystrlen(940,
yystrlen 944,
#   define yystpcpy 956,
yystpcpy 961,
yytnamerr 983,
yysyntax_error 1034,
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM 1037,
# define YYCASE_(1113,
# undef YYCASE_1124,
yydestruct 1173,
int yychar;1189,
YYSTYPE yylval;1192,
int yynerrs;1194,
yyparse 1202,
#define YYPOPSTACK(1242,
# undef YYSTACK_RELOCATE1324,
# define YYSYNTAX_ERROR 1890,
# undef YYSYNTAX_ERROR1919,

/home/seinoyu/pgsql/master/postgresql/syncrep_scanner.c,8928
#define  YY_INT_ALIGNED 5,
#define yy_create_buffer 9,
#define yy_delete_buffer 10,
#define yy_scan_buffer 11,
#define yy_scan_string 12,
#define yy_scan_bytes 13,
#define yy_init_buffer 14,
#define yy_flush_buffer 15,
#define yy_load_buffer_state 16,
#define yy_switch_to_buffer 17,
#define yypush_buffer_state 18,
#define yypop_buffer_state 19,
#define yyensure_buffer_stack 20,
#define yy_flex_debug 21,
#define yyin 22,
#define yyleng 23,
#define yylex 24,
#define yylineno 25,
#define yyout 26,
#define yyrestart 27,
#define yytext 28,
#define yywrap 29,
#define yyalloc 30,
#define yyrealloc 31,
#define yyfree 32,
#define FLEX_SCANNER34,
#define YY_FLEX_MAJOR_VERSION 35,
#define YY_FLEX_MINOR_VERSION 36,
#define YY_FLEX_SUBMINOR_VERSION 37,
#define FLEX_BETA39,
#define syncrep_yy_create_buffer_ALREADY_DEFINED43,
#define yy_create_buffer 45,
#define syncrep_yy_delete_buffer_ALREADY_DEFINED49,
#define yy_delete_buffer 51,
#define syncrep_yy_scan_buffer_ALREADY_DEFINED55,
#define yy_scan_buffer 57,
#define syncrep_yy_scan_string_ALREADY_DEFINED61,
#define yy_scan_string 63,
#define syncrep_yy_scan_bytes_ALREADY_DEFINED67,
#define yy_scan_bytes 69,
#define syncrep_yy_init_buffer_ALREADY_DEFINED73,
#define yy_init_buffer 75,
#define syncrep_yy_flush_buffer_ALREADY_DEFINED79,
#define yy_flush_buffer 81,
#define syncrep_yy_load_buffer_state_ALREADY_DEFINED85,
#define yy_load_buffer_state 87,
#define syncrep_yy_switch_to_buffer_ALREADY_DEFINED91,
#define yy_switch_to_buffer 93,
#define syncrep_yypush_buffer_state_ALREADY_DEFINED97,
#define yypush_buffer_state 99,
#define syncrep_yypop_buffer_state_ALREADY_DEFINED103,
#define yypop_buffer_state 105,
#define syncrep_yyensure_buffer_stack_ALREADY_DEFINED109,
#define yyensure_buffer_stack 111,
#define syncrep_yylex_ALREADY_DEFINED115,
#define yylex 117,
#define syncrep_yyrestart_ALREADY_DEFINED121,
#define yyrestart 123,
#define syncrep_yylex_init_ALREADY_DEFINED127,
#define yylex_init 129,
#define syncrep_yylex_init_extra_ALREADY_DEFINED133,
#define yylex_init_extra 135,
#define syncrep_yylex_destroy_ALREADY_DEFINED139,
#define yylex_destroy 141,
#define syncrep_yyget_debug_ALREADY_DEFINED145,
#define yyget_debug 147,
#define syncrep_yyset_debug_ALREADY_DEFINED151,
#define yyset_debug 153,
#define syncrep_yyget_extra_ALREADY_DEFINED157,
#define yyget_extra 159,
#define syncrep_yyset_extra_ALREADY_DEFINED163,
#define yyset_extra 165,
#define syncrep_yyget_in_ALREADY_DEFINED169,
#define yyget_in 171,
#define syncrep_yyset_in_ALREADY_DEFINED175,
#define yyset_in 177,
#define syncrep_yyget_out_ALREADY_DEFINED181,
#define yyget_out 183,
#define syncrep_yyset_out_ALREADY_DEFINED187,
#define yyset_out 189,
#define syncrep_yyget_leng_ALREADY_DEFINED193,
#define yyget_leng 195,
#define syncrep_yyget_text_ALREADY_DEFINED199,
#define yyget_text 201,
#define syncrep_yyget_lineno_ALREADY_DEFINED205,
#define yyget_lineno 207,
#define syncrep_yyset_lineno_ALREADY_DEFINED211,
#define yyset_lineno 213,
#define syncrep_yywrap_ALREADY_DEFINED217,
#define yywrap 219,
#define syncrep_yyalloc_ALREADY_DEFINED223,
#define yyalloc 225,
#define syncrep_yyrealloc_ALREADY_DEFINED229,
#define yyrealloc 231,
#define syncrep_yyfree_ALREADY_DEFINED235,
#define yyfree 237,
#define syncrep_yytext_ALREADY_DEFINED241,
#define yytext 243,
#define syncrep_yyleng_ALREADY_DEFINED247,
#define yyleng 249,
#define syncrep_yyin_ALREADY_DEFINED253,
#define yyin 255,
#define syncrep_yyout_ALREADY_DEFINED259,
#define yyout 261,
#define syncrep_yy_flex_debug_ALREADY_DEFINED265,
#define yy_flex_debug 267,
#define syncrep_yylineno_ALREADY_DEFINED271,
#define yylineno 273,
#define FLEXINT_H289,
#define __STDC_LIMIT_MACROS 299,
typedef int8_t flex_int8_t;303,
typedef uint8_t flex_uint8_t;304,
typedef int16_t flex_int16_t;305,
typedef uint16_t flex_uint16_t;306,
typedef int32_t flex_int32_t;307,
typedef uint32_t flex_uint32_t;308,
typedef signed char flex_int8_t;310,
typedef short int flex_int16_t;311,
typedef int flex_int32_t;312,
typedef unsigned char flex_uint8_t;313,
typedef unsigned short int flex_uint16_t;314,
typedef unsigned int flex_uint32_t;315,
#define INT8_MIN 319,
#define INT16_MIN 322,
#define INT32_MIN 325,
#define INT8_MAX 328,
#define INT16_MAX 331,
#define INT32_MAX 334,
#define UINT8_MAX 337,
#define UINT16_MAX 340,
#define UINT32_MAX 343,
#define SIZE_MAX 347,
#define yyconst 357,
#define yynoreturn 360,
#define yynoreturn362,
#define YY_NULL 366,
#define YY_SC_TO_UI(371,
#define BEGIN 377,
#define YY_START 382,
#define YYSTATE 383,
#define YY_STATE_EOF(385,
#define YY_NEW_FILE 387,
#define YY_END_OF_BUFFER_CHAR 388,
#define YY_BUF_SIZE 397,
#define YY_BUF_SIZE 399,
#define YY_STATE_BUF_SIZE 405,
#define YY_TYPEDEF_YY_BUFFER_STATE408,
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE409,
#define YY_TYPEDEF_YY_SIZE_T413,
typedef size_t yy_size_t;414,
#define EOB_ACT_CONTINUE_SCAN 421,
#define EOB_ACT_END_OF_FILE 422,
#define EOB_ACT_LAST_MATCH 423,
    #define YY_LESS_LINENO(425,
    #define YY_LINENO_REWIND_TO(426,
#define yyless(429,
#define unput(441,
#define YY_STRUCT_YY_BUFFER_STATE444,
struct yy_buffer_state445,
	FILE *yy_input_file;yy_input_file447,
	char *yy_ch_buf;yy_ch_buf449,
	char *yy_buf_pos;yy_buf_pos450,
	int yy_buf_size;455,
	int yy_n_chars;460,
	int yy_is_our_buffer;466,
	int yy_is_interactive;473,
	int yy_at_bol;479,
    int yy_bs_lineno;481,
    int yy_bs_column;482,
	int yy_fill_buffer;487,
	int yy_buffer_status;489,
#define YY_BUFFER_NEW 491,
#define YY_BUFFER_NORMAL 492,
#define YY_BUFFER_EOF_PENDING 503,
static size_t yy_buffer_stack_top 509,
static size_t yy_buffer_stack_max 510,
static YY_BUFFER_STATE * yy_buffer_stack 511,
#define YY_CURRENT_BUFFER 519,
#define YY_CURRENT_BUFFER_LVALUE 525,
static char yy_hold_char;528,
static int yy_n_chars;529,
int yyleng;530,
static char *yy_c_buf_p yy_c_buf_p533,
static int yy_init 534,
static int yy_start 535,
static int yy_did_buffer_switch_on_eof;540,
#define YY_FLUSH_BUFFER 553,
#define yy_new_buffer 563,
#define yy_set_interactive(564,
#define yy_set_bol(573,
#define YY_AT_BOL(582,
#define syncrep_yywrap(586,
#define YY_SKIP_YYWRAP587,
typedef flex_uint8_t YY_CHAR;588,
FILE *yyin yyin590,
typedef int yy_state_type;592,
int yylineno 595,
#undef yytext_ptr599,
#define yytext_ptr 601,
#define YY_DO_BEFORE_ACTION 611,
#define YY_NUM_RULES 617,
#define YY_END_OF_BUFFER 618,
struct yy_trans_info621,
	flex_int32_t yy_verify;623,
	flex_int32_t yy_nxt;624,
static const flex_int16_t yy_accept[yy_accept626,
static const YY_CHAR yy_ec[yy_ec634,
static const YY_CHAR yy_meta[yy_meta666,
static const flex_int16_t yy_base[yy_base672,
static const flex_int16_t yy_def[yy_def680,
static const flex_int16_t yy_nxt[yy_nxt688,
static const flex_int16_t yy_chk[yy_chk699,
static yy_state_type yy_last_accepting_state;710,
static char *yy_last_accepting_cpos;yy_last_accepting_cpos711,
int yy_flex_debug 714,
#define REJECT 719,
#define yymore(720,
#define YY_MORE_ADJ 721,
#define YY_RESTORE_YY_MORE_OFFSET722,
char *yytext;yytext723,
#define YY_NO_INPUT 762,
#define INITIAL 769,
#define xd 770,
#define YY_EXTRA_TYPE 781,
#define YY_READ_BUF_SIZE 852,
#define YY_READ_BUF_SIZE 854,
#define ECHO 863,
#define YY_INPUT(870,
#define yyterminate(907,
#define YY_START_STACK_INCR 912,
#define YY_FATAL_ERROR(917,
#define YY_DECL_IS_OURS 926,
#define YY_DECL 930,
#define YY_USER_ACTION937,
#define YY_BREAK 942,
#define YY_RULE_SETUP 945,
static int yy_get_next_buffer 1286,
    static yy_state_type yy_get_previous_state 1424,
    static yy_state_type yy_try_NUL_trans 1456,
    static int yyinput 1485,
    void yyrestart 1562,
    void yy_switch_to_buffer 1579,
static void yy_load_buffer_state 1610,
    YY_BUFFER_STATE yy_create_buffer 1624,
    void yy_delete_buffer 1652,
    static void yy_init_buffer 1671,
    void yy_flush_buffer 1699,
void yypush_buffer_state 1728,
void yypop_buffer_state 1758,
static void yyensure_buffer_stack 1777,
YY_BUFFER_STATE yy_scan_buffer 1826,
YY_BUFFER_STATE yy_scan_string 1863,
YY_BUFFER_STATE yy_scan_bytes 1876,
#define YY_EXIT_FAILURE 1907,
static void yynoreturn yy_fatal_error 1910,
#undef yyless1918,
#define yyless(1919,
int yyget_lineno 1938,
FILE *yyget_in yyget_in1947,
FILE *yyget_out yyget_out1955,
int yyget_leng 1963,
char *yyget_text yyget_text1972,
void yyset_lineno 1981,
void yyset_in 1993,
void yyset_out 1998,
int yyget_debug 2003,
void yyset_debug 2008,
static int yy_init_globals 2013,
int yylex_destroy 2042,
static void yy_flex_strncpy 2068,
static int yy_flex_strlen 2078,
void *yyalloc yyalloc2088,
void *yyrealloc yyrealloc2093,
void yyfree 2106,
#define YYTABLES_NAME 2111,

/home/seinoyu/pgsql/master/postgresql/syncrep_scanner.l,139
#undef fprintf21,
#define fprintf(22,
fprintf_to_ereport(25,
static YY_BUFFER_STATE scanbufhandle;31,
static StringInfoData xdbuf;33,
syncrep_yyerror(121,
syncrep_scanner_init(135,
syncrep_scanner_finish(159,

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/repl_gram.y,1161
Node *replication_parse_result;replication_parse_result26,670
#define YYMALLOC 39,1142
#define YYFREE 40,1166
%name-prefix=prefix45,1204
firstcmd:firstcmd110,2608
opt_semicolon:opt_semicolon116,2694
command:command120,2738
identify_system:identify_system135,2970
show:show145,3097
var_name:var_name153,3231
base_backup:base_backup163,3498
base_backup_opt_list:base_backup_opt_list172,3666
base_backup_opt:base_backup_opt179,3799
create_replication_slot:create_replication_slot232,4921
create_slot_opt_list:create_slot_opt_list258,5751
create_slot_opt:create_slot_opt265,5884
drop_replication_slot:drop_replication_slot289,6407
start_replication:start_replication311,6909
start_logical_replication:start_logical_replication326,7286
timeline_history:timeline_history341,7644
opt_physical:opt_physical358,7957
opt_temporary:opt_temporary363,8008
opt_slot:opt_slot368,8101
opt_timeline:opt_timeline375,8186
plugin_options:plugin_options388,8411
plugin_opt_list:plugin_opt_list393,8509
plugin_opt_elem:plugin_opt_elem404,8668
plugin_opt_arg:plugin_opt_arg411,8761
sql_cmd:sql_cmd416,8868
make_sqlcmd(422,8949

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/syncrep_gram.y,376
SyncRepConfigData *syncrep_parse_result;syncrep_parse_result20,564
char	   *syncrep_parse_error_msg;syncrep_parse_error_msg21,605
#define YYMALLOC 34,1157
#define YYFREE 35,1181
%name-prefix=prefix40,1219
result:result58,1462
standby_config:standby_config62,1525
standby_list:standby_list69,1898
standby_name:standby_name74,2022
create_syncrep_config(81,2121

/home/seinoyu/pgsql/master/postgresql/repl_scanner.c,9118
#define  YY_INT_ALIGNED 5,
#define yy_create_buffer 9,
#define yy_delete_buffer 10,
#define yy_scan_buffer 11,
#define yy_scan_string 12,
#define yy_scan_bytes 13,
#define yy_init_buffer 14,
#define yy_flush_buffer 15,
#define yy_load_buffer_state 16,
#define yy_switch_to_buffer 17,
#define yypush_buffer_state 18,
#define yypop_buffer_state 19,
#define yyensure_buffer_stack 20,
#define yy_flex_debug 21,
#define yyin 22,
#define yyleng 23,
#define yylex 24,
#define yylineno 25,
#define yyout 26,
#define yyrestart 27,
#define yytext 28,
#define yywrap 29,
#define yyalloc 30,
#define yyrealloc 31,
#define yyfree 32,
#define FLEX_SCANNER34,
#define YY_FLEX_MAJOR_VERSION 35,
#define YY_FLEX_MINOR_VERSION 36,
#define YY_FLEX_SUBMINOR_VERSION 37,
#define FLEX_BETA39,
#define replication_yy_create_buffer_ALREADY_DEFINED43,
#define yy_create_buffer 45,
#define replication_yy_delete_buffer_ALREADY_DEFINED49,
#define yy_delete_buffer 51,
#define replication_yy_scan_buffer_ALREADY_DEFINED55,
#define yy_scan_buffer 57,
#define replication_yy_scan_string_ALREADY_DEFINED61,
#define yy_scan_string 63,
#define replication_yy_scan_bytes_ALREADY_DEFINED67,
#define yy_scan_bytes 69,
#define replication_yy_init_buffer_ALREADY_DEFINED73,
#define yy_init_buffer 75,
#define replication_yy_flush_buffer_ALREADY_DEFINED79,
#define yy_flush_buffer 81,
#define replication_yy_load_buffer_state_ALREADY_DEFINED85,
#define yy_load_buffer_state 87,
#define replication_yy_switch_to_buffer_ALREADY_DEFINED91,
#define yy_switch_to_buffer 93,
#define replication_yypush_buffer_state_ALREADY_DEFINED97,
#define yypush_buffer_state 99,
#define replication_yypop_buffer_state_ALREADY_DEFINED103,
#define yypop_buffer_state 105,
#define replication_yyensure_buffer_stack_ALREADY_DEFINED109,
#define yyensure_buffer_stack 111,
#define replication_yylex_ALREADY_DEFINED115,
#define yylex 117,
#define replication_yyrestart_ALREADY_DEFINED121,
#define yyrestart 123,
#define replication_yylex_init_ALREADY_DEFINED127,
#define yylex_init 129,
#define replication_yylex_init_extra_ALREADY_DEFINED133,
#define yylex_init_extra 135,
#define replication_yylex_destroy_ALREADY_DEFINED139,
#define yylex_destroy 141,
#define replication_yyget_debug_ALREADY_DEFINED145,
#define yyget_debug 147,
#define replication_yyset_debug_ALREADY_DEFINED151,
#define yyset_debug 153,
#define replication_yyget_extra_ALREADY_DEFINED157,
#define yyget_extra 159,
#define replication_yyset_extra_ALREADY_DEFINED163,
#define yyset_extra 165,
#define replication_yyget_in_ALREADY_DEFINED169,
#define yyget_in 171,
#define replication_yyset_in_ALREADY_DEFINED175,
#define yyset_in 177,
#define replication_yyget_out_ALREADY_DEFINED181,
#define yyget_out 183,
#define replication_yyset_out_ALREADY_DEFINED187,
#define yyset_out 189,
#define replication_yyget_leng_ALREADY_DEFINED193,
#define yyget_leng 195,
#define replication_yyget_text_ALREADY_DEFINED199,
#define yyget_text 201,
#define replication_yyget_lineno_ALREADY_DEFINED205,
#define yyget_lineno 207,
#define replication_yyset_lineno_ALREADY_DEFINED211,
#define yyset_lineno 213,
#define replication_yywrap_ALREADY_DEFINED217,
#define yywrap 219,
#define replication_yyalloc_ALREADY_DEFINED223,
#define yyalloc 225,
#define replication_yyrealloc_ALREADY_DEFINED229,
#define yyrealloc 231,
#define replication_yyfree_ALREADY_DEFINED235,
#define yyfree 237,
#define replication_yytext_ALREADY_DEFINED241,
#define yytext 243,
#define replication_yyleng_ALREADY_DEFINED247,
#define yyleng 249,
#define replication_yyin_ALREADY_DEFINED253,
#define yyin 255,
#define replication_yyout_ALREADY_DEFINED259,
#define yyout 261,
#define replication_yy_flex_debug_ALREADY_DEFINED265,
#define yy_flex_debug 267,
#define replication_yylineno_ALREADY_DEFINED271,
#define yylineno 273,
#define FLEXINT_H289,
#define __STDC_LIMIT_MACROS 299,
typedef int8_t flex_int8_t;303,
typedef uint8_t flex_uint8_t;304,
typedef int16_t flex_int16_t;305,
typedef uint16_t flex_uint16_t;306,
typedef int32_t flex_int32_t;307,
typedef uint32_t flex_uint32_t;308,
typedef signed char flex_int8_t;310,
typedef short int flex_int16_t;311,
typedef int flex_int32_t;312,
typedef unsigned char flex_uint8_t;313,
typedef unsigned short int flex_uint16_t;314,
typedef unsigned int flex_uint32_t;315,
#define INT8_MIN 319,
#define INT16_MIN 322,
#define INT32_MIN 325,
#define INT8_MAX 328,
#define INT16_MAX 331,
#define INT32_MAX 334,
#define UINT8_MAX 337,
#define UINT16_MAX 340,
#define UINT32_MAX 343,
#define SIZE_MAX 347,
#define yyconst 357,
#define yynoreturn 360,
#define yynoreturn362,
#define YY_NULL 366,
#define YY_SC_TO_UI(371,
#define BEGIN 377,
#define YY_START 382,
#define YYSTATE 383,
#define YY_STATE_EOF(385,
#define YY_NEW_FILE 387,
#define YY_END_OF_BUFFER_CHAR 388,
#define YY_BUF_SIZE 397,
#define YY_BUF_SIZE 399,
#define YY_STATE_BUF_SIZE 405,
#define YY_TYPEDEF_YY_BUFFER_STATE408,
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE409,
#define YY_TYPEDEF_YY_SIZE_T413,
typedef size_t yy_size_t;414,
#define EOB_ACT_CONTINUE_SCAN 421,
#define EOB_ACT_END_OF_FILE 422,
#define EOB_ACT_LAST_MATCH 423,
    #define YY_LESS_LINENO(425,
    #define YY_LINENO_REWIND_TO(426,
#define yyless(429,
#define unput(441,
#define YY_STRUCT_YY_BUFFER_STATE444,
struct yy_buffer_state445,
	FILE *yy_input_file;yy_input_file447,
	char *yy_ch_buf;yy_ch_buf449,
	char *yy_buf_pos;yy_buf_pos450,
	int yy_buf_size;455,
	int yy_n_chars;460,
	int yy_is_our_buffer;466,
	int yy_is_interactive;473,
	int yy_at_bol;479,
    int yy_bs_lineno;481,
    int yy_bs_column;482,
	int yy_fill_buffer;487,
	int yy_buffer_status;489,
#define YY_BUFFER_NEW 491,
#define YY_BUFFER_NORMAL 492,
#define YY_BUFFER_EOF_PENDING 503,
static size_t yy_buffer_stack_top 509,
static size_t yy_buffer_stack_max 510,
static YY_BUFFER_STATE * yy_buffer_stack 511,
#define YY_CURRENT_BUFFER 519,
#define YY_CURRENT_BUFFER_LVALUE 525,
static char yy_hold_char;528,
static int yy_n_chars;529,
int yyleng;530,
static char *yy_c_buf_p yy_c_buf_p533,
static int yy_init 534,
static int yy_start 535,
static int yy_did_buffer_switch_on_eof;540,
#define YY_FLUSH_BUFFER 553,
#define yy_new_buffer 563,
#define yy_set_interactive(564,
#define yy_set_bol(573,
#define YY_AT_BOL(582,
#define replication_yywrap(586,
#define YY_SKIP_YYWRAP587,
typedef flex_uint8_t YY_CHAR;588,
FILE *yyin yyin590,
typedef int yy_state_type;592,
int yylineno 595,
#undef yytext_ptr599,
#define yytext_ptr 601,
#define YY_DO_BEFORE_ACTION 611,
#define YY_NUM_RULES 617,
#define YY_END_OF_BUFFER 618,
struct yy_trans_info621,
	flex_int32_t yy_verify;623,
	flex_int32_t yy_nxt;624,
static const flex_int16_t yy_accept[yy_accept626,
static const YY_CHAR yy_ec[yy_ec663,
static const YY_CHAR yy_meta[yy_meta695,
static const flex_int16_t yy_base[yy_base703,
static const flex_int16_t yy_def[yy_def741,
static const flex_int16_t yy_nxt[yy_nxt779,
static const flex_int16_t yy_chk[yy_chk854,
static yy_state_type yy_last_accepting_state;929,
static char *yy_last_accepting_cpos;yy_last_accepting_cpos930,
int yy_flex_debug 933,
#define REJECT 938,
#define yymore(939,
#define YY_MORE_ADJ 940,
#define YY_RESTORE_YY_MORE_OFFSET941,
char *yytext;yytext942,
#define YY_NO_INPUT 987,
#define INITIAL 997,
#define xq 998,
#define xd 999,
#define YY_EXTRA_TYPE 1010,
#define YY_READ_BUF_SIZE 1081,
#define YY_READ_BUF_SIZE 1083,
#define ECHO 1092,
#define YY_INPUT(1099,
#define yyterminate(1136,
#define YY_START_STACK_INCR 1141,
#define YY_FATAL_ERROR(1146,
#define YY_DECL_IS_OURS 1155,
#define YY_DECL 1159,
#define YY_USER_ACTION1166,
#define YY_BREAK 1171,
#define YY_RULE_SETUP 1174,
static int yy_get_next_buffer 1694,
    static yy_state_type yy_get_previous_state 1832,
    static yy_state_type yy_try_NUL_trans 1864,
    static int yyinput 1893,
    void yyrestart 1970,
    void yy_switch_to_buffer 1987,
static void yy_load_buffer_state 2018,
    YY_BUFFER_STATE yy_create_buffer 2032,
    void yy_delete_buffer 2060,
    static void yy_init_buffer 2079,
    void yy_flush_buffer 2107,
void yypush_buffer_state 2136,
void yypop_buffer_state 2166,
static void yyensure_buffer_stack 2185,
YY_BUFFER_STATE yy_scan_buffer 2234,
YY_BUFFER_STATE yy_scan_string 2271,
YY_BUFFER_STATE yy_scan_bytes 2284,
#define YY_EXIT_FAILURE 2315,
static void yynoreturn yy_fatal_error 2318,
#undef yyless2326,
#define yyless(2327,
int yyget_lineno 2346,
FILE *yyget_in yyget_in2355,
FILE *yyget_out yyget_out2363,
int yyget_leng 2371,
char *yyget_text yyget_text2380,
void yyset_lineno 2389,
void yyset_in 2401,
void yyset_out 2406,
int yyget_debug 2411,
void yyset_debug 2416,
static int yy_init_globals 2421,
int yylex_destroy 2450,
static void yy_flex_strncpy 2476,
static int yy_flex_strlen 2486,
void *yyalloc yyalloc2496,
void *yyrealloc yyrealloc2501,
void yyfree 2514,
#define YYTABLES_NAME 2519,

/home/seinoyu/pgsql/master/postgresql/repl_scanner.l,140
#undef fprintf22,
#define fprintf(23,
fprintf_to_ereport(26,
static YY_BUFFER_STATE scanbufhandle;32,
static StringInfoData litbuf;34,
startlit(197,
litbufdup(203,
addlit(209,
addlitchar(215,
yyerror(221,
replication_scanner_init(230,
replication_scanner_finish(251,

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/syncrep_gram.c,334
#define YYBISON 48,2185
#define YYBISON_VERSION 51,2226
#define YYSKELETON_NAME 54,2281
#define YYPURE 57,2336
#define YYPUSH 60,2375
#define YYPULL 63,2414
#define yyparse 67,2484
#define yylex 68,2524
#define yyerror 69,2562
#define yydebug 70,2602
#define yynerrs 71,2642
#define yylval 72,2682
#define yychar 73,2721

/home/seinoyu/pgsql/master/postgresql/syncrep_gram.y,284
SyncRepConfigData *syncrep_parse_result;syncrep_parse_result20,
char	   *syncrep_parse_error_msg;syncrep_parse_error_msg21,
#define YYMALLOC 34,
#define YYFREE 35,
	char	   *str;str44,
	List	   *list;list45,
	SyncRepConfigData *config;config46,
create_syncrep_config(81,

/home/seinoyu/pgsql/master/postgresql/syncrep_gram.c,467
#   define YY_CAST(118,
#   define YY_REINTERPRET_CAST(119,
#   define YY_CAST(121,
#   define YY_REINTERPRET_CAST(122,
#    define YY_NULLPTR 128,
#    define YY_NULLPTR 130,
#   define YY_NULLPTR 133,
# undef YYERROR_VERBOSE139,
# define YYERROR_VERBOSE 140,
# define YYERROR_VERBOSE 142,
# define YYDEBUG 148,
# define YYTOKENTYPE156,
  enum yytokentype157,
    NAME 159,
    NUM 160,
    JUNK 161,
    ANY 162,
    FIRST 163,
union YYSTYPE169,
typedef union YYSTYPE YYSTYPE;180,
# define YYSTYPE_IS_TRIVIAL 181,
# define YYSTYPE_IS_DECLARED 182,
# undef short195,
#  define YY_STDINT_H206,
typedef __INT_LEAST8_TYPE__ yytype_int8;216,
typedef int_least8_t yytype_int8;218,
typedef signed char yytype_int8;220,
typedef __INT_LEAST16_TYPE__ yytype_int16;224,
typedef int_least16_t yytype_int16;226,
typedef short yytype_int16;228,
typedef __UINT_LEAST8_TYPE__ yytype_uint8;232,
typedef uint_least8_t yytype_uint8;235,
typedef unsigned char yytype_uint8;237,
typedef short yytype_uint8;239,
typedef __UINT_LEAST16_TYPE__ yytype_uint16;243,
typedef uint_least16_t yytype_uint16;246,
typedef unsigned short yytype_uint16;248,
typedef int yytype_uint16;250,
#  define YYPTRDIFF_T 255,
#  define YYPTRDIFF_MAXIMUM 256,
#  define YYPTRDIFF_T 261,
#  define YYPTRDIFF_MAXIMUM 262,
#  define YYPTRDIFF_T 264,
#  define YYPTRDIFF_MAXIMUM 265,
#  define YYSIZE_T 271,
#  define YYSIZE_T 273,
#  define YYSIZE_T 276,
#  define YYSIZE_T 278,
#define YYSIZE_MAXIMUM 282,
#define YYSIZEOF(288,
typedef yytype_int8 yy_state_t;291,
typedef int yy_state_fast_t;294,
#   define YY_(300,
#  define YY_(304,
#  define YY_ATTRIBUTE_PURE 310,
#  define YY_ATTRIBUTE_PURE312,
#  define YY_ATTRIBUTE_UNUSED 318,
#  define YY_ATTRIBUTE_UNUSED320,
# define YYUSE(326,
# define YYUSE(328,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN 333,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END 337,
# define YY_INITIAL_VALUE(340,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN343,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END344,
# define YY_INITIAL_VALUE(347,
# define YY_IGNORE_USELESS_CAST_BEGIN 351,
# define YY_IGNORE_USELESS_CAST_END 354,
# define YY_IGNORE_USELESS_CAST_BEGIN358,
# define YY_IGNORE_USELESS_CAST_END359,
#define YY_ASSERT(363,
#    define YYSTACK_ALLOC 372,
#    define YYSTACK_ALLOC 376,
#    define alloca 379,
#    define YYSTACK_ALLOC 381,
#      define EXIT_SUCCESS 386,
#  define YYSTACK_FREE(395,
#   define YYSTACK_ALLOC_MAXIMUM 401,
#  define YYSTACK_ALLOC 404,
#  define YYSTACK_FREE 405,
#   define YYSTACK_ALLOC_MAXIMUM 407,
#    define EXIT_SUCCESS 414,
#   define YYMALLOC 418,
#   define YYFREE 424,
union yyalloc438,
  yy_state_t yyss_alloc;440,
  YYSTYPE yyvs_alloc;441,
# define YYSTACK_GAP_MAXIMUM 445,
# define YYSTACK_BYTES(449,
# define YYCOPY_NEEDED 453,
# define YYSTACK_RELOCATE(460,
#   define YYCOPY(478,
#   define YYCOPY(481,
#define YYFINAL 494,
#define YYLAST 496,
#define YYNTOKENS 499,
#define YYNNTS 501,
#define YYNRULES 503,
#define YYNSTATES 505,
#define YYUNDEFTOK 507,
#define YYMAXUTOK 508,
#define YYTRANSLATE(513,
static const yytype_int8 yytranslate[yytranslate518,
static const yytype_int8 yyrline[yyrline551,
static const char *const yytname[yytname561,
static const yytype_int16 yytoknum[yytoknum572,
#define YYPACT_NINF 579,
#define yypact_value_is_default(581,
#define YYTABLE_NINF 584,
#define yytable_value_is_error(586,
static const yytype_int8 yypact[yypact591,
static const yytype_int8 yydefact[yydefact601,
static const yytype_int8 yypgoto[yypgoto609,
static const yytype_int8 yydefgoto[yydefgoto615,
static const yytype_int8 yytable[yytable623,
static const yytype_int8 yycheck[yycheck630,
static const yytype_int8 yystos[yystos639,
static const yytype_int8 yyr1[yyr1647,
static const yytype_int8 yyr2[yyr2654,
#define yyerrok 661,
#define yyclearin 662,
#define YYEMPTY 663,
#define YYEOF 664,
#define YYACCEPT 666,
#define YYABORT 667,
#define YYERROR 668,
#define YYRECOVERING(671,
#define YYBACKUP(673,
#define YYTERROR 691,
#define YYERRCODE 692,
#  define YYFPRINTF 701,
# define YYDPRINTF(704,
# define YY_LOCATION_PRINT(712,
# define YY_SYMBOL_PRINT(716,
yy_symbol_value_print 733,
yy_symbol_print 754,
yy_stack_print 769,
# define YY_STACK_PRINT(780,
yy_reduce_print 792,
# define YY_REDUCE_PRINT(811,
int yydebug;819,
# define YYDPRINTF(821,
# define YY_SYMBOL_PRINT(822,
# define YY_STACK_PRINT(823,
# define YY_REDUCE_PRINT(824,
# define YYINITDEPTH 830,
# define YYMAXDEPTH 841,
#   define yystrlen(849,
yystrlen 853,
#   define yystpcpy 865,
yystpcpy 870,
yytnamerr 892,
yysyntax_error 943,
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM 946,
# define YYCASE_(1022,
# undef YYCASE_1033,
yydestruct 1082,
int yychar;1098,
YYSTYPE yylval;1101,
int yynerrs;1103,
yyparse 1111,
#define YYPOPSTACK(1151,
# undef YYSTACK_RELOCATE1233,
# define YYSYNTAX_ERROR 1459,
# undef YYSYNTAX_ERROR1488,

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/jsonpath_gram.c,286
#define YYBISON 48,2185
#define YYBISON_VERSION 51,2226
#define YYSKELETON_NAME 54,2281
#define YYPURE 57,2336
#define YYPUSH 60,2375
#define YYPULL 63,2414
#define yyparse 67,2484
#define yylex 68,2525
#define yyerror 69,2564
#define yydebug 70,2605
#define yynerrs 71,2646

/home/seinoyu/pgsql/master/postgresql/jsonpath_gram.y,664
typedef struct JsonPathString28,
	char	   *val;val30,
	int			len;31,
	int			total;32,
}			JsonPathString;33,
#define YYMALLOC 68,
#define YYFREE 69,
	JsonPathString		str;81,
	List			   *elems;elems82,
	List			   *indexs;indexs83,
	JsonPathParseItem  *value;value84,
	JsonPathParseResult *result;result85,
	JsonPathItemType	optype;86,
	bool				boolean;87,
	int					integer;88,
makeItemType(314,
makeItemString(327,
makeItemVariable(346,
makeItemKey(358,
makeItemNumeric(369,
makeItemBool(384,
makeItemBinary(394,
makeItemUnary(405,
makeItemList(429,
makeIndexArray(456,
makeAny(482,
makeItemLikeRegex(493,
jspConvertRegexFlags(550,

/home/seinoyu/pgsql/master/postgresql/jsonpath_gram.c,1088
#   define YY_CAST(150,
#   define YY_REINTERPRET_CAST(151,
#   define YY_CAST(153,
#   define YY_REINTERPRET_CAST(154,
#    define YY_NULLPTR 160,
#    define YY_NULLPTR 162,
#   define YY_NULLPTR 165,
# undef YYERROR_VERBOSE171,
# define YYERROR_VERBOSE 172,
# define YYERROR_VERBOSE 174,
# define YYDEBUG 180,
# define YYTOKENTYPE188,
  enum yytokentype189,
    TO_P 191,
    NULL_P 192,
    TRUE_P 193,
    FALSE_P 194,
    IS_P 195,
    UNKNOWN_P 196,
    EXISTS_P 197,
    IDENT_P 198,
    STRING_P 199,
    NUMERIC_P 200,
    INT_P 201,
    VARIABLE_P 202,
    OR_P 203,
    AND_P 204,
    NOT_P 205,
    LESS_P 206,
    LESSEQUAL_P 207,
    EQUAL_P 208,
    NOTEQUAL_P 209,
    GREATEREQUAL_P 210,
    GREATER_P 211,
    ANY_P 212,
    STRICT_P 213,
    LAX_P 214,
    LAST_P 215,
    STARTS_P 216,
    WITH_P 217,
    LIKE_REGEX_P 218,
    FLAG_P 219,
    ABS_P 220,
    SIZE_P 221,
    TYPE_P 222,
    FLOOR_P 223,
    DOUBLE_P 224,
    CEILING_P 225,
    KEYVALUE_P 226,
    DATETIME_P 227,
    UMINUS 228,
union YYSTYPE234,
typedef union YYSTYPE YYSTYPE;250,
# define YYSTYPE_IS_TRIVIAL 251,
# define YYSTYPE_IS_DECLARED 252,
# undef short264,
#  define YY_STDINT_H275,
typedef __INT_LEAST8_TYPE__ yytype_int8;285,
typedef int_least8_t yytype_int8;287,
typedef signed char yytype_int8;289,
typedef __INT_LEAST16_TYPE__ yytype_int16;293,
typedef int_least16_t yytype_int16;295,
typedef short yytype_int16;297,
typedef __UINT_LEAST8_TYPE__ yytype_uint8;301,
typedef uint_least8_t yytype_uint8;304,
typedef unsigned char yytype_uint8;306,
typedef short yytype_uint8;308,
typedef __UINT_LEAST16_TYPE__ yytype_uint16;312,
typedef uint_least16_t yytype_uint16;315,
typedef unsigned short yytype_uint16;317,
typedef int yytype_uint16;319,
#  define YYPTRDIFF_T 324,
#  define YYPTRDIFF_MAXIMUM 325,
#  define YYPTRDIFF_T 330,
#  define YYPTRDIFF_MAXIMUM 331,
#  define YYPTRDIFF_T 333,
#  define YYPTRDIFF_MAXIMUM 334,
#  define YYSIZE_T 340,
#  define YYSIZE_T 342,
#  define YYSIZE_T 345,
#  define YYSIZE_T 347,
#define YYSIZE_MAXIMUM 351,
#define YYSIZEOF(357,
typedef yytype_uint8 yy_state_t;360,
typedef int yy_state_fast_t;363,
#   define YY_(369,
#  define YY_(373,
#  define YY_ATTRIBUTE_PURE 379,
#  define YY_ATTRIBUTE_PURE381,
#  define YY_ATTRIBUTE_UNUSED 387,
#  define YY_ATTRIBUTE_UNUSED389,
# define YYUSE(395,
# define YYUSE(397,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN 402,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END 406,
# define YY_INITIAL_VALUE(409,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN412,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END413,
# define YY_INITIAL_VALUE(416,
# define YY_IGNORE_USELESS_CAST_BEGIN 420,
# define YY_IGNORE_USELESS_CAST_END 423,
# define YY_IGNORE_USELESS_CAST_BEGIN427,
# define YY_IGNORE_USELESS_CAST_END428,
#define YY_ASSERT(432,
#    define YYSTACK_ALLOC 441,
#    define YYSTACK_ALLOC 445,
#    define alloca 448,
#    define YYSTACK_ALLOC 450,
#      define EXIT_SUCCESS 455,
#  define YYSTACK_FREE(464,
#   define YYSTACK_ALLOC_MAXIMUM 470,
#  define YYSTACK_ALLOC 473,
#  define YYSTACK_FREE 474,
#   define YYSTACK_ALLOC_MAXIMUM 476,
#    define EXIT_SUCCESS 483,
#   define YYMALLOC 487,
#   define YYFREE 493,
union yyalloc507,
  yy_state_t yyss_alloc;509,
  YYSTYPE yyvs_alloc;510,
# define YYSTACK_GAP_MAXIMUM 514,
# define YYSTACK_BYTES(518,
# define YYCOPY_NEEDED 522,
# define YYSTACK_RELOCATE(529,
#   define YYCOPY(547,
#   define YYCOPY(550,
#define YYFINAL 563,
#define YYLAST 565,
#define YYNTOKENS 568,
#define YYNNTS 570,
#define YYNRULES 572,
#define YYNSTATES 574,
#define YYUNDEFTOK 576,
#define YYMAXUTOK 577,
#define YYTRANSLATE(582,
static const yytype_int8 yytranslate[yytranslate587,
static const yytype_int16 yyrline[yyrline623,
static const char *const yytname[yytname642,
static const yytype_int16 yytoknum[yytoknum664,
#define YYPACT_NINF 675,
#define yypact_value_is_default(677,
#define YYTABLE_NINF 680,
#define yytable_value_is_error(682,
static const yytype_int16 yypact[yypact687,
static const yytype_int8 yydefact[yydefact709,
static const yytype_int8 yypgoto[yypgoto729,
static const yytype_int16 yydefgoto[yydefgoto737,
static const yytype_int16 yytable[yytable747,
static const yytype_int16 yycheck[yycheck775,
static const yytype_int8 yystos[yystos805,
static const yytype_int8 yyr1[yyr1825,
static const yytype_int8 yyr2[yyr2841,
#define yyerrok 857,
#define yyclearin 858,
#define YYEMPTY 859,
#define YYEOF 860,
#define YYACCEPT 862,
#define YYABORT 863,
#define YYERROR 864,
#define YYRECOVERING(867,
#define YYBACKUP(869,
#define YYTERROR 887,
#define YYERRCODE 888,
#  define YYFPRINTF 897,
# define YYDPRINTF(900,
# define YY_LOCATION_PRINT(908,
# define YY_SYMBOL_PRINT(912,
yy_symbol_value_print 929,
yy_symbol_print 951,
yy_stack_print 966,
# define YY_STACK_PRINT(977,
yy_reduce_print 989,
# define YY_REDUCE_PRINT(1008,
int yydebug;1016,
# define YYDPRINTF(1018,
# define YY_SYMBOL_PRINT(1019,
# define YY_STACK_PRINT(1020,
# define YY_REDUCE_PRINT(1021,
# define YYINITDEPTH 1027,
# define YYMAXDEPTH 1038,
#   define yystrlen(1046,
yystrlen 1050,
#   define yystpcpy 1062,
yystpcpy 1067,
yytnamerr 1089,
yysyntax_error 1140,
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM 1143,
# define YYCASE_(1219,
# undef YYCASE_1230,
yydestruct 1279,
yyparse 1300,
#define YYPOPSTACK(1353,
# undef YYSTACK_RELOCATE1435,
# define YYSYNTAX_ERROR 2085,
# undef YYSYNTAX_ERROR2114,

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/jsonpath_gram.y,1547
typedef struct JsonPathString28,703
	char	   *val;val30,735
	int			len;31,750
	int			total;32,762
}			JsonPathString;33,776
#define YYMALLOC 68,2334
#define YYFREE 69,2358
%name-prefix=prefix76,2434
	JsonPathString		str;81,2530
	List			   *elems;elems82,2552
	List			   *indexs;indexs83,2603
	JsonPathParseItem  *value;value84,2646
	JsonPathParseResult *result;result85,2674
	JsonPathItemType	optype;86,2704
	bool				boolean;87,2730
	int					integer;88,2748
result:result129,3706
expr_or_predicate:expr_or_predicate138,3916
mode:mode143,3995
scalar_value:scalar_value149,4100
comp_op:comp_op159,4445
delimited_predicate:delimited_predicate168,4697
predicate:predicate173,4823
starts_with_initial:starts_with_initial188,5501
path_primary:path_primary193,5621
accessor_expr:accessor_expr200,5810
expr:expr207,6048
index_elem:index_elem219,6576
index_list:index_list224,6721
array_accessor:array_accessor229,6835
any_level:any_level234,6962
any_path:any_path239,7050
accessor_op:accessor_op246,7233
datetime_template:datetime_template257,7610
opt_datetime_template:opt_datetime_template261,7678
key:key266,7774
key_name:key_name270,7825
method:method297,8104
makeItemType(314,8490
makeItemString(327,8676
makeItemVariable(346,8937
makeItemKey(358,9136
makeItemNumeric(369,9279
makeItemBool(384,9593
makeItemBinary(394,9734
makeItemUnary(405,9961
makeItemList(429,10442
makeIndexArray(456,10917
makeAny(482,11476
makeItemLikeRegex(493,11726
jspConvertRegexFlags(550,13264

/home/seinoyu/pgsql/master/postgresql/jsonpath_scan.c,8865
#define  YY_INT_ALIGNED 5,
#define yy_create_buffer 9,
#define yy_delete_buffer 10,
#define yy_scan_buffer 11,
#define yy_scan_string 12,
#define yy_scan_bytes 13,
#define yy_init_buffer 14,
#define yy_flush_buffer 15,
#define yy_load_buffer_state 16,
#define yy_switch_to_buffer 17,
#define yypush_buffer_state 18,
#define yypop_buffer_state 19,
#define yyensure_buffer_stack 20,
#define yy_flex_debug 21,
#define yyin 22,
#define yyleng 23,
#define yylex 24,
#define yylineno 25,
#define yyout 26,
#define yyrestart 27,
#define yytext 28,
#define yywrap 29,
#define yyalloc 30,
#define yyrealloc 31,
#define yyfree 32,
#define FLEX_SCANNER34,
#define YY_FLEX_MAJOR_VERSION 35,
#define YY_FLEX_MINOR_VERSION 36,
#define YY_FLEX_SUBMINOR_VERSION 37,
#define FLEX_BETA39,
#define jsonpath_yy_create_buffer_ALREADY_DEFINED43,
#define yy_create_buffer 45,
#define jsonpath_yy_delete_buffer_ALREADY_DEFINED49,
#define yy_delete_buffer 51,
#define jsonpath_yy_scan_buffer_ALREADY_DEFINED55,
#define yy_scan_buffer 57,
#define jsonpath_yy_scan_string_ALREADY_DEFINED61,
#define yy_scan_string 63,
#define jsonpath_yy_scan_bytes_ALREADY_DEFINED67,
#define yy_scan_bytes 69,
#define jsonpath_yy_init_buffer_ALREADY_DEFINED73,
#define yy_init_buffer 75,
#define jsonpath_yy_flush_buffer_ALREADY_DEFINED79,
#define yy_flush_buffer 81,
#define jsonpath_yy_load_buffer_state_ALREADY_DEFINED85,
#define yy_load_buffer_state 87,
#define jsonpath_yy_switch_to_buffer_ALREADY_DEFINED91,
#define yy_switch_to_buffer 93,
#define jsonpath_yypush_buffer_state_ALREADY_DEFINED97,
#define yypush_buffer_state 99,
#define jsonpath_yypop_buffer_state_ALREADY_DEFINED103,
#define yypop_buffer_state 105,
#define jsonpath_yyensure_buffer_stack_ALREADY_DEFINED109,
#define yyensure_buffer_stack 111,
#define jsonpath_yylex_ALREADY_DEFINED115,
#define yylex 117,
#define jsonpath_yyrestart_ALREADY_DEFINED121,
#define yyrestart 123,
#define jsonpath_yylex_init_ALREADY_DEFINED127,
#define yylex_init 129,
#define jsonpath_yylex_init_extra_ALREADY_DEFINED133,
#define yylex_init_extra 135,
#define jsonpath_yylex_destroy_ALREADY_DEFINED139,
#define yylex_destroy 141,
#define jsonpath_yyget_debug_ALREADY_DEFINED145,
#define yyget_debug 147,
#define jsonpath_yyset_debug_ALREADY_DEFINED151,
#define yyset_debug 153,
#define jsonpath_yyget_extra_ALREADY_DEFINED157,
#define yyget_extra 159,
#define jsonpath_yyset_extra_ALREADY_DEFINED163,
#define yyset_extra 165,
#define jsonpath_yyget_in_ALREADY_DEFINED169,
#define yyget_in 171,
#define jsonpath_yyset_in_ALREADY_DEFINED175,
#define yyset_in 177,
#define jsonpath_yyget_out_ALREADY_DEFINED181,
#define yyget_out 183,
#define jsonpath_yyset_out_ALREADY_DEFINED187,
#define yyset_out 189,
#define jsonpath_yyget_leng_ALREADY_DEFINED193,
#define yyget_leng 195,
#define jsonpath_yyget_text_ALREADY_DEFINED199,
#define yyget_text 201,
#define jsonpath_yyget_lineno_ALREADY_DEFINED205,
#define yyget_lineno 207,
#define jsonpath_yyset_lineno_ALREADY_DEFINED211,
#define yyset_lineno 213,
#define jsonpath_yywrap_ALREADY_DEFINED217,
#define yywrap 219,
#define jsonpath_yyget_lval_ALREADY_DEFINED223,
#define yyget_lval 225,
#define jsonpath_yyset_lval_ALREADY_DEFINED229,
#define yyset_lval 231,
#define jsonpath_yyalloc_ALREADY_DEFINED235,
#define yyalloc 237,
#define jsonpath_yyrealloc_ALREADY_DEFINED241,
#define yyrealloc 243,
#define jsonpath_yyfree_ALREADY_DEFINED247,
#define yyfree 249,
#define jsonpath_yytext_ALREADY_DEFINED253,
#define yytext 255,
#define jsonpath_yyleng_ALREADY_DEFINED259,
#define yyleng 261,
#define jsonpath_yyin_ALREADY_DEFINED265,
#define yyin 267,
#define jsonpath_yyout_ALREADY_DEFINED271,
#define yyout 273,
#define jsonpath_yy_flex_debug_ALREADY_DEFINED277,
#define yy_flex_debug 279,
#define jsonpath_yylineno_ALREADY_DEFINED283,
#define yylineno 285,
#define FLEXINT_H301,
#define __STDC_LIMIT_MACROS 311,
typedef int8_t flex_int8_t;315,
typedef uint8_t flex_uint8_t;316,
typedef int16_t flex_int16_t;317,
typedef uint16_t flex_uint16_t;318,
typedef int32_t flex_int32_t;319,
typedef uint32_t flex_uint32_t;320,
typedef signed char flex_int8_t;322,
typedef short int flex_int16_t;323,
typedef int flex_int32_t;324,
typedef unsigned char flex_uint8_t;325,
typedef unsigned short int flex_uint16_t;326,
typedef unsigned int flex_uint32_t;327,
#define INT8_MIN 331,
#define INT16_MIN 334,
#define INT32_MIN 337,
#define INT8_MAX 340,
#define INT16_MAX 343,
#define INT32_MAX 346,
#define UINT8_MAX 349,
#define UINT16_MAX 352,
#define UINT32_MAX 355,
#define SIZE_MAX 359,
#define yyconst 369,
#define yynoreturn 372,
#define yynoreturn374,
#define YY_NULL 378,
#define YY_SC_TO_UI(383,
#define BEGIN 389,
#define YY_START 394,
#define YYSTATE 395,
#define YY_STATE_EOF(397,
#define YY_NEW_FILE 399,
#define YY_END_OF_BUFFER_CHAR 400,
#define YY_BUF_SIZE 409,
#define YY_BUF_SIZE 411,
#define YY_STATE_BUF_SIZE 417,
#define YY_TYPEDEF_YY_BUFFER_STATE420,
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE421,
#define YY_TYPEDEF_YY_SIZE_T425,
typedef size_t yy_size_t;426,
#define EOB_ACT_CONTINUE_SCAN 433,
#define EOB_ACT_END_OF_FILE 434,
#define EOB_ACT_LAST_MATCH 435,
    #define YY_LESS_LINENO(437,
    #define YY_LINENO_REWIND_TO(438,
#define yyless(441,
#define unput(453,
#define YY_STRUCT_YY_BUFFER_STATE456,
struct yy_buffer_state457,
	FILE *yy_input_file;yy_input_file459,
	char *yy_ch_buf;yy_ch_buf461,
	char *yy_buf_pos;yy_buf_pos462,
	int yy_buf_size;467,
	int yy_n_chars;472,
	int yy_is_our_buffer;478,
	int yy_is_interactive;485,
	int yy_at_bol;491,
    int yy_bs_lineno;493,
    int yy_bs_column;494,
	int yy_fill_buffer;499,
	int yy_buffer_status;501,
#define YY_BUFFER_NEW 503,
#define YY_BUFFER_NORMAL 504,
#define YY_BUFFER_EOF_PENDING 515,
static size_t yy_buffer_stack_top 521,
static size_t yy_buffer_stack_max 522,
static YY_BUFFER_STATE * yy_buffer_stack 523,
#define YY_CURRENT_BUFFER 531,
#define YY_CURRENT_BUFFER_LVALUE 537,
static char yy_hold_char;540,
static int yy_n_chars;541,
int yyleng;542,
static char *yy_c_buf_p yy_c_buf_p545,
static int yy_init 546,
static int yy_start 547,
static int yy_did_buffer_switch_on_eof;552,
#define YY_FLUSH_BUFFER 565,
#define yy_new_buffer 575,
#define yy_set_interactive(576,
#define yy_set_bol(585,
#define YY_AT_BOL(594,
#define jsonpath_yywrap(598,
#define YY_SKIP_YYWRAP599,
typedef flex_uint8_t YY_CHAR;600,
FILE *yyin yyin602,
typedef const struct yy_trans_info *yy_state_type;yy_state_type604,
int yylineno 607,
#undef yytext_ptr611,
#define yytext_ptr 613,
#define YY_DO_BEFORE_ACTION 623,
#define YY_NUM_RULES 629,
#define YY_END_OF_BUFFER 630,
struct yy_trans_info631,
	flex_int16_t yy_verify;633,
	flex_int16_t yy_nxt;634,
static const struct yy_trans_info yy_transition[yy_transition636,
static const struct yy_trans_info *yy_start_state_list[yy_start_state_list2373,
int yy_flex_debug 2390,
#define REJECT 2395,
#define yymore(2396,
#define YY_MORE_ADJ 2397,
#define YY_RESTORE_YY_MORE_OFFSET2398,
char *yytext;yytext2399,
#define YY_NO_INPUT 2449,
#define INITIAL 2463,
#define xq 2464,
#define xnq 2465,
#define xvq 2466,
#define xc 2467,
#define YY_EXTRA_TYPE 2478,
#define YY_READ_BUF_SIZE 2553,
#define YY_READ_BUF_SIZE 2555,
#define ECHO 2564,
#define YY_INPUT(2571,
#define yyterminate(2608,
#define YY_START_STACK_INCR 2613,
#define YY_FATAL_ERROR(2618,
#define YY_DECL_IS_OURS 2627,
#define YY_DECL 2632,
#define YY_USER_ACTION2640,
#define YY_BREAK 2645,
#define YY_RULE_SETUP 2648,
static int yy_get_next_buffer 3203,
    static yy_state_type yy_get_previous_state 3341,
    static yy_state_type yy_try_NUL_trans 3361,
    static int yyinput 3381,
    void yyrestart 3458,
    void yy_switch_to_buffer 3475,
static void yy_load_buffer_state 3506,
    YY_BUFFER_STATE yy_create_buffer 3520,
    void yy_delete_buffer 3548,
    static void yy_init_buffer 3567,
    void yy_flush_buffer 3595,
void yypush_buffer_state 3624,
void yypop_buffer_state 3654,
static void yyensure_buffer_stack 3673,
YY_BUFFER_STATE yy_scan_buffer 3722,
YY_BUFFER_STATE yy_scan_string 3759,
YY_BUFFER_STATE yy_scan_bytes 3772,
#define YY_EXIT_FAILURE 3803,
static void yynoreturn yy_fatal_error 3806,
#undef yyless3814,
#define yyless(3815,
int yyget_lineno 3834,
FILE *yyget_in yyget_in3843,
FILE *yyget_out yyget_out3851,
int yyget_leng 3859,
char *yyget_text yyget_text3868,
void yyset_lineno 3877,
void yyset_in 3889,
void yyset_out 3894,
int yyget_debug 3899,
void yyset_debug 3904,
static int yy_init_globals 3909,
int yylex_destroy 3938,
static void yy_flex_strncpy 3964,
static int yy_flex_strlen 3974,
#define YYTABLES_NAME 3984,

/home/seinoyu/pgsql/master/postgresql/jsonpath_scan.l,205
static JsonPathString scanstring;23,
static YY_BUFFER_STATE scanbufhandle;26,
static char *scanbuf;scanbuf27,
static int	scanbuflen;28,
#undef fprintf37,
#define fprintf(38,
fprintf_to_ereport(41,
jsonpath_yyerror(279,
typedef struct JsonPathKeyword298,
	int16		len;300,
	bool		lowercase;301,
	int			val;302,
	const char *keyword;keyword303,
} JsonPathKeyword;304,
static const JsonPathKeyword keywords[keywords310,
checkKeyword(337,
jsonpath_scanner_init(382,
jsonpath_scanner_finish(410,
resizeString(421,
addstring(442,
addchar(451,
parsejsonpath(461,
hexval(477,
addUnicodeChar(491,
addUnicode(512,
parseUnicode(553,
parseHexChar(590,
jsonpath_yyalloc(604,
jsonpath_yyrealloc(610,
jsonpath_yyfree(619,

/home/seinoyu/pgsql/master/postgresql/guc-file.c,8751
#define  YY_INT_ALIGNED 5,
#define yy_create_buffer 9,
#define yy_delete_buffer 10,
#define yy_scan_buffer 11,
#define yy_scan_string 12,
#define yy_scan_bytes 13,
#define yy_init_buffer 14,
#define yy_flush_buffer 15,
#define yy_load_buffer_state 16,
#define yy_switch_to_buffer 17,
#define yypush_buffer_state 18,
#define yypop_buffer_state 19,
#define yyensure_buffer_stack 20,
#define yy_flex_debug 21,
#define yyin 22,
#define yyleng 23,
#define yylex 24,
#define yylineno 25,
#define yyout 26,
#define yyrestart 27,
#define yytext 28,
#define yywrap 29,
#define yyalloc 30,
#define yyrealloc 31,
#define yyfree 32,
#define FLEX_SCANNER34,
#define YY_FLEX_MAJOR_VERSION 35,
#define YY_FLEX_MINOR_VERSION 36,
#define YY_FLEX_SUBMINOR_VERSION 37,
#define FLEX_BETA39,
#define GUC_yy_create_buffer_ALREADY_DEFINED43,
#define yy_create_buffer 45,
#define GUC_yy_delete_buffer_ALREADY_DEFINED49,
#define yy_delete_buffer 51,
#define GUC_yy_scan_buffer_ALREADY_DEFINED55,
#define yy_scan_buffer 57,
#define GUC_yy_scan_string_ALREADY_DEFINED61,
#define yy_scan_string 63,
#define GUC_yy_scan_bytes_ALREADY_DEFINED67,
#define yy_scan_bytes 69,
#define GUC_yy_init_buffer_ALREADY_DEFINED73,
#define yy_init_buffer 75,
#define GUC_yy_flush_buffer_ALREADY_DEFINED79,
#define yy_flush_buffer 81,
#define GUC_yy_load_buffer_state_ALREADY_DEFINED85,
#define yy_load_buffer_state 87,
#define GUC_yy_switch_to_buffer_ALREADY_DEFINED91,
#define yy_switch_to_buffer 93,
#define GUC_yypush_buffer_state_ALREADY_DEFINED97,
#define yypush_buffer_state 99,
#define GUC_yypop_buffer_state_ALREADY_DEFINED103,
#define yypop_buffer_state 105,
#define GUC_yyensure_buffer_stack_ALREADY_DEFINED109,
#define yyensure_buffer_stack 111,
#define GUC_yylex_ALREADY_DEFINED115,
#define yylex 117,
#define GUC_yyrestart_ALREADY_DEFINED121,
#define yyrestart 123,
#define GUC_yylex_init_ALREADY_DEFINED127,
#define yylex_init 129,
#define GUC_yylex_init_extra_ALREADY_DEFINED133,
#define yylex_init_extra 135,
#define GUC_yylex_destroy_ALREADY_DEFINED139,
#define yylex_destroy 141,
#define GUC_yyget_debug_ALREADY_DEFINED145,
#define yyget_debug 147,
#define GUC_yyset_debug_ALREADY_DEFINED151,
#define yyset_debug 153,
#define GUC_yyget_extra_ALREADY_DEFINED157,
#define yyget_extra 159,
#define GUC_yyset_extra_ALREADY_DEFINED163,
#define yyset_extra 165,
#define GUC_yyget_in_ALREADY_DEFINED169,
#define yyget_in 171,
#define GUC_yyset_in_ALREADY_DEFINED175,
#define yyset_in 177,
#define GUC_yyget_out_ALREADY_DEFINED181,
#define yyget_out 183,
#define GUC_yyset_out_ALREADY_DEFINED187,
#define yyset_out 189,
#define GUC_yyget_leng_ALREADY_DEFINED193,
#define yyget_leng 195,
#define GUC_yyget_text_ALREADY_DEFINED199,
#define yyget_text 201,
#define GUC_yyget_lineno_ALREADY_DEFINED205,
#define yyget_lineno 207,
#define GUC_yyset_lineno_ALREADY_DEFINED211,
#define yyset_lineno 213,
#define GUC_yywrap_ALREADY_DEFINED217,
#define yywrap 219,
#define GUC_yyalloc_ALREADY_DEFINED223,
#define yyalloc 225,
#define GUC_yyrealloc_ALREADY_DEFINED229,
#define yyrealloc 231,
#define GUC_yyfree_ALREADY_DEFINED235,
#define yyfree 237,
#define GUC_yytext_ALREADY_DEFINED241,
#define yytext 243,
#define GUC_yyleng_ALREADY_DEFINED247,
#define yyleng 249,
#define GUC_yyin_ALREADY_DEFINED253,
#define yyin 255,
#define GUC_yyout_ALREADY_DEFINED259,
#define yyout 261,
#define GUC_yy_flex_debug_ALREADY_DEFINED265,
#define yy_flex_debug 267,
#define GUC_yylineno_ALREADY_DEFINED271,
#define yylineno 273,
#define FLEXINT_H289,
#define __STDC_LIMIT_MACROS 299,
typedef int8_t flex_int8_t;303,
typedef uint8_t flex_uint8_t;304,
typedef int16_t flex_int16_t;305,
typedef uint16_t flex_uint16_t;306,
typedef int32_t flex_int32_t;307,
typedef uint32_t flex_uint32_t;308,
typedef signed char flex_int8_t;310,
typedef short int flex_int16_t;311,
typedef int flex_int32_t;312,
typedef unsigned char flex_uint8_t;313,
typedef unsigned short int flex_uint16_t;314,
typedef unsigned int flex_uint32_t;315,
#define INT8_MIN 319,
#define INT16_MIN 322,
#define INT32_MIN 325,
#define INT8_MAX 328,
#define INT16_MAX 331,
#define INT32_MAX 334,
#define UINT8_MAX 337,
#define UINT16_MAX 340,
#define UINT32_MAX 343,
#define SIZE_MAX 347,
#define yyconst 357,
#define yynoreturn 360,
#define yynoreturn362,
#define YY_NULL 366,
#define YY_SC_TO_UI(371,
#define BEGIN 377,
#define YY_START 382,
#define YYSTATE 383,
#define YY_STATE_EOF(385,
#define YY_NEW_FILE 387,
#define YY_END_OF_BUFFER_CHAR 388,
#define YY_BUF_SIZE 397,
#define YY_BUF_SIZE 399,
#define YY_STATE_BUF_SIZE 405,
#define YY_TYPEDEF_YY_BUFFER_STATE408,
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE409,
#define YY_TYPEDEF_YY_SIZE_T413,
typedef size_t yy_size_t;414,
#define EOB_ACT_CONTINUE_SCAN 421,
#define EOB_ACT_END_OF_FILE 422,
#define EOB_ACT_LAST_MATCH 423,
    #define YY_LESS_LINENO(425,
    #define YY_LINENO_REWIND_TO(426,
#define yyless(429,
#define unput(441,
#define YY_STRUCT_YY_BUFFER_STATE444,
struct yy_buffer_state445,
	FILE *yy_input_file;yy_input_file447,
	char *yy_ch_buf;yy_ch_buf449,
	char *yy_buf_pos;yy_buf_pos450,
	int yy_buf_size;455,
	int yy_n_chars;460,
	int yy_is_our_buffer;466,
	int yy_is_interactive;473,
	int yy_at_bol;479,
    int yy_bs_lineno;481,
    int yy_bs_column;482,
	int yy_fill_buffer;487,
	int yy_buffer_status;489,
#define YY_BUFFER_NEW 491,
#define YY_BUFFER_NORMAL 492,
#define YY_BUFFER_EOF_PENDING 503,
static size_t yy_buffer_stack_top 509,
static size_t yy_buffer_stack_max 510,
static YY_BUFFER_STATE * yy_buffer_stack 511,
#define YY_CURRENT_BUFFER 519,
#define YY_CURRENT_BUFFER_LVALUE 525,
static char yy_hold_char;528,
static int yy_n_chars;529,
int yyleng;530,
static char *yy_c_buf_p yy_c_buf_p533,
static int yy_init 534,
static int yy_start 535,
static int yy_did_buffer_switch_on_eof;540,
#define YY_FLUSH_BUFFER 553,
#define yy_new_buffer 563,
#define yy_set_interactive(564,
#define yy_set_bol(573,
#define YY_AT_BOL(582,
#define GUC_yywrap(586,
#define YY_SKIP_YYWRAP587,
typedef flex_uint8_t YY_CHAR;588,
FILE *yyin yyin590,
typedef int yy_state_type;592,
int yylineno 595,
#undef yytext_ptr599,
#define yytext_ptr 601,
#define YY_DO_BEFORE_ACTION 611,
#define YY_NUM_RULES 617,
#define YY_END_OF_BUFFER 618,
struct yy_trans_info621,
	flex_int32_t yy_verify;623,
	flex_int32_t yy_nxt;624,
static const flex_int16_t yy_accept[yy_accept626,
static const YY_CHAR yy_ec[yy_ec634,
static const YY_CHAR yy_meta[yy_meta666,
static const flex_int16_t yy_base[yy_base672,
static const flex_int16_t yy_def[yy_def681,
static const flex_int16_t yy_nxt[yy_nxt690,
static const flex_int16_t yy_chk[yy_chk712,
static yy_state_type yy_last_accepting_state;734,
static char *yy_last_accepting_cpos;yy_last_accepting_cpos735,
int yy_flex_debug 738,
#define REJECT 743,
#define yymore(744,
#define YY_MORE_ADJ 745,
#define YY_RESTORE_YY_MORE_OFFSET746,
char *yytext;yytext747,
#define YY_NO_INPUT 810,
#define INITIAL 813,
#define YY_EXTRA_TYPE 824,
#define YY_READ_BUF_SIZE 895,
#define YY_READ_BUF_SIZE 897,
#define ECHO 906,
#define YY_INPUT(913,
#define yyterminate(950,
#define YY_START_STACK_INCR 955,
#define YY_FATAL_ERROR(960,
#define YY_DECL_IS_OURS 969,
#define YY_DECL 973,
#define YY_USER_ACTION980,
#define YY_BREAK 985,
#define YY_RULE_SETUP 988,
static int yy_get_next_buffer 1285,
    static yy_state_type yy_get_previous_state 1423,
    static yy_state_type yy_try_NUL_trans 1455,
    static int yyinput 1484,
    void yyrestart 1561,
    void yy_switch_to_buffer 1578,
static void yy_load_buffer_state 1609,
    YY_BUFFER_STATE yy_create_buffer 1623,
    void yy_delete_buffer 1651,
    static void yy_init_buffer 1670,
    void yy_flush_buffer 1698,
void yypush_buffer_state 1727,
void yypop_buffer_state 1757,
static void yyensure_buffer_stack 1776,
YY_BUFFER_STATE yy_scan_buffer 1825,
YY_BUFFER_STATE yy_scan_string 1862,
YY_BUFFER_STATE yy_scan_bytes 1875,
#define YY_EXIT_FAILURE 1906,
static void yynoreturn yy_fatal_error 1909,
#undef yyless1917,
#define yyless(1918,
int yyget_lineno 1937,
FILE *yyget_in yyget_in1946,
FILE *yyget_out yyget_out1954,
int yyget_leng 1962,
char *yyget_text yyget_text1971,
void yyset_lineno 1980,
void yyset_in 1992,
void yyset_out 1997,
int yyget_debug 2002,
void yyset_debug 2007,
static int yy_init_globals 2012,
int yylex_destroy 2041,
static void yy_flex_strncpy 2067,
static int yy_flex_strlen 2077,
void *yyalloc yyalloc2087,
void *yyrealloc yyrealloc2092,
void yyfree 2105,
#define YYTABLES_NAME 2110,

/home/seinoyu/pgsql/master/postgresql/guc-file.l,371
#undef fprintf29,
#define fprintf(30,
	GUC_ID 34,
	GUC_STRING 35,
	GUC_INTEGER 36,
	GUC_REAL 37,
	GUC_EQUALS 38,
	GUC_UNQUOTED_STRING 39,
	GUC_QUALIFIED_ID 40,
	GUC_EOL 41,
	GUC_ERROR 42,
static unsigned int ConfigFileLineno;45,
static const char *GUC_flex_fatal_errmsg;GUC_flex_fatal_errmsg46,
static sigjmp_buf *GUC_flex_fatal_jmp;GUC_flex_fatal_jmp47,
ProcessConfigFile(123,
ProcessConfigFileInternal(171,
AbsoluteConfigLocation(520,
ParseConfigFile(560,
record_config_file_error(663,
GUC_flex_fatal(696,
ParseConfigFp(734,
ParseConfigDirectory(958,
FreeConfigVariables(1102,
FreeConfigVariable(1120,
GUC_scanstr(1144,

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/gram.h,10487
# define YY_BASE_YY_GRAM_H_INCLUDED38,1697
# define YYDEBUG 41,1770
# define YYTOKENTYPE49,1880
  enum yytokentype50,1901
    IDENT 52,1924
    UIDENT 53,1941
    FCONST 54,1959
    SCONST 55,1977
    USCONST 56,1995
    BCONST 57,2014
    XCONST 58,2032
    Op 59,2050
    ICONST 60,2064
    PARAM 61,2082
    TYPECAST 62,2099
    DOT_DOT 63,2119
    COLON_EQUALS 64,2138
    EQUALS_GREATER 65,2162
    LESS_EQUALS 66,2188
    GREATER_EQUALS 67,2211
    NOT_EQUALS 68,2237
    ABORT_P 69,2259
    ABSOLUTE_P 70,2278
    ACCESS 71,2300
    ACTION 72,2318
    ADD_P 73,2336
    ADMIN 74,2353
    AFTER 75,2370
    AGGREGATE 76,2387
    ALL 77,2408
    ALSO 78,2423
    ALTER 79,2439
    ALWAYS 80,2456
    ANALYSE 81,2474
    ANALYZE 82,2493
    AND 83,2512
    ANY 84,2527
    ARRAY 85,2542
    AS 86,2559
    ASC 87,2573
    ASSERTION 88,2588
    ASSIGNMENT 89,2609
    ASYMMETRIC 90,2631
    AT 91,2653
    ATTACH 92,2667
    ATTRIBUTE 93,2685
    AUTHORIZATION 94,2706
    BACKWARD 95,2731
    BEFORE 96,2751
    BEGIN_P 97,2769
    BETWEEN 98,2788
    BIGINT 99,2807
    BINARY 100,2825
    BIT 101,2843
    BOOLEAN_P 102,2858
    BOTH 103,2879
    BY 104,2895
    CACHE 105,2909
    CALL 106,2926
    CALLED 107,2942
    CASCADE 108,2960
    CASCADED 109,2979
    CASE 110,2999
    CAST 111,3015
    CATALOG_P 112,3031
    CHAIN 113,3052
    CHAR_P 114,3069
    CHARACTER 115,3087
    CHARACTERISTICS 116,3108
    CHECK 117,3135
    CHECKPOINT 118,3152
    CLASS 119,3174
    CLOSE 120,3191
    CLUSTER 121,3208
    COALESCE 122,3227
    COLLATE 123,3247
    COLLATION 124,3266
    COLUMN 125,3287
    COLUMNS 126,3305
    COMMENT 127,3324
    COMMENTS 128,3343
    COMMIT 129,3363
    COMMITTED 130,3381
    CONCURRENTLY 131,3402
    CONFIGURATION 132,3426
    CONFLICT 133,3451
    CONNECTION 134,3471
    CONSTRAINT 135,3493
    CONSTRAINTS 136,3515
    CONTENT_P 137,3538
    CONTINUE_P 138,3559
    CONVERSION_P 139,3581
    COPY 140,3605
    COST 141,3621
    CREATE 142,3637
    CROSS 143,3655
    CSV 144,3672
    CUBE 145,3687
    CURRENT_P 146,3703
    CURRENT_CATALOG 147,3724
    CURRENT_DATE 148,3751
    CURRENT_ROLE 149,3775
    CURRENT_SCHEMA 150,3799
    CURRENT_TIME 151,3825
    CURRENT_TIMESTAMP 152,3849
    CURRENT_USER 153,3878
    CURSOR 154,3902
    CYCLE 155,3920
    DATA_P 156,3937
    DATABASE 157,3955
    DAY_P 158,3975
    DEALLOCATE 159,3992
    DEC 160,4014
    DECIMAL_P 161,4029
    DECLARE 162,4050
    DEFAULT 163,4069
    DEFAULTS 164,4088
    DEFERRABLE 165,4108
    DEFERRED 166,4130
    DEFINER 167,4150
    DELETE_P 168,4169
    DELIMITER 169,4189
    DELIMITERS 170,4210
    DEPENDS 171,4232
    DESC 172,4251
    DETACH 173,4267
    DICTIONARY 174,4285
    DISABLE_P 175,4307
    DISCARD 176,4328
    DISTINCT 177,4347
    DO 178,4367
    DOCUMENT_P 179,4381
    DOMAIN_P 180,4403
    DOUBLE_P 181,4423
    DROP 182,4443
    EACH 183,4459
    ELSE 184,4475
    ENABLE_P 185,4491
    ENCODING 186,4511
    ENCRYPTED 187,4531
    END_P 188,4552
    ENUM_P 189,4569
    ESCAPE 190,4587
    EVENT 191,4605
    EXCEPT 192,4622
    EXCLUDE 193,4640
    EXCLUDING 194,4659
    EXCLUSIVE 195,4680
    EXECUTE 196,4701
    EXISTS 197,4720
    EXPLAIN 198,4738
    EXPRESSION 199,4757
    EXTENSION 200,4779
    EXTERNAL 201,4800
    EXTRACT 202,4820
    FALSE_P 203,4839
    FAMILY 204,4858
    FETCH 205,4876
    FILTER 206,4893
    FIRST_P 207,4911
    FLOAT_P 208,4930
    FOLLOWING 209,4949
    FOR 210,4970
    FORCE 211,4985
    FOREIGN 212,5002
    FORWARD 213,5021
    FREEZE 214,5040
    FROM 215,5058
    FULL 216,5074
    FUNCTION 217,5090
    FUNCTIONS 218,5110
    GENERATED 219,5131
    GLOBAL 220,5152
    GRANT 221,5170
    GRANTED 222,5187
    GREATEST 223,5206
    GROUP_P 224,5226
    GROUPING 225,5245
    GROUPS 226,5265
    HANDLER 227,5283
    HAVING 228,5302
    HEADER_P 229,5320
    HOLD 230,5340
    HOUR_P 231,5356
    IDENTITY_P 232,5374
    IF_P 233,5396
    ILIKE 234,5412
    IMMEDIATE 235,5429
    IMMUTABLE 236,5450
    IMPLICIT_P 237,5471
    IMPORT_P 238,5493
    IN_P 239,5513
    INCLUDE 240,5529
    INCLUDING 241,5548
    INCREMENT 242,5569
    INDEX 243,5590
    INDEXES 244,5607
    INHERIT 245,5626
    INHERITS 246,5645
    INITIALLY 247,5665
    INLINE_P 248,5686
    INNER_P 249,5706
    INOUT 250,5725
    INPUT_P 251,5742
    INSENSITIVE 252,5761
    INSERT 253,5784
    INSTEAD 254,5802
    INT_P 255,5821
    INTEGER 256,5838
    INTERSECT 257,5857
    INTERVAL 258,5878
    INTO 259,5898
    INVOKER 260,5914
    IS 261,5933
    ISNULL 262,5947
    ISOLATION 263,5965
    JOIN 264,5986
    KEY 265,6002
    LABEL 266,6017
    LANGUAGE 267,6034
    LARGE_P 268,6054
    LAST_P 269,6073
    LATERAL_P 270,6091
    LEADING 271,6112
    LEAKPROOF 272,6131
    LEAST 273,6152
    LEFT 274,6169
    LEVEL 275,6185
    LIKE 276,6202
    LIMIT 277,6218
    LISTEN 278,6235
    LOAD 279,6253
    LOCAL 280,6269
    LOCALTIME 281,6286
    LOCALTIMESTAMP 282,6307
    LOCATION 283,6333
    LOCK_P 284,6353
    LOCKED 285,6371
    LOGGED 286,6389
    MAPPING 287,6407
    MATCH 288,6426
    MATERIALIZED 289,6443
    MAXVALUE 290,6467
    METHOD 291,6487
    MINUTE_P 292,6505
    MINVALUE 293,6525
    MODE 294,6545
    MONTH_P 295,6561
    MOVE 296,6580
    NAME_P 297,6596
    NAMES 298,6614
    NATIONAL 299,6631
    NATURAL 300,6651
    NCHAR 301,6670
    NEW 302,6687
    NEXT 303,6702
    NFC 304,6718
    NFD 305,6733
    NFKC 306,6748
    NFKD 307,6764
    NO 308,6780
    NONE 309,6794
    NORMALIZE 310,6810
    NORMALIZED 311,6831
    NOT 312,6853
    NOTHING 313,6868
    NOTIFY 314,6887
    NOTNULL 315,6905
    NOWAIT 316,6924
    NULL_P 317,6942
    NULLIF 318,6960
    NULLS_P 319,6978
    NUMERIC 320,6997
    OBJECT_P 321,7016
    OF 322,7036
    OFF 323,7050
    OFFSET 324,7065
    OIDS 325,7083
    OLD 326,7099
    ON 327,7114
    ONLY 328,7128
    OPERATOR 329,7144
    OPTION 330,7164
    OPTIONS 331,7182
    OR 332,7201
    ORDER 333,7215
    ORDINALITY 334,7232
    OTHERS 335,7254
    OUT_P 336,7272
    OUTER_P 337,7289
    OVER 338,7308
    OVERLAPS 339,7324
    OVERLAY 340,7344
    OVERRIDING 341,7363
    OWNED 342,7385
    OWNER 343,7402
    PARALLEL 344,7419
    PARSER 345,7439
    PARTIAL 346,7457
    PARTITION 347,7476
    PASSING 348,7497
    PASSWORD 349,7516
    PLACING 350,7536
    PLANS 351,7555
    POLICY 352,7572
    POSITION 353,7590
    PRECEDING 354,7610
    PRECISION 355,7631
    PRESERVE 356,7652
    PREPARE 357,7672
    PREPARED 358,7691
    PRIMARY 359,7711
    PRIOR 360,7730
    PRIVILEGES 361,7747
    PROCEDURAL 362,7769
    PROCEDURE 363,7791
    PROCEDURES 364,7812
    PROGRAM 365,7834
    PUBLICATION 366,7853
    QUOTE 367,7876
    RANGE 368,7893
    READ 369,7910
    REAL 370,7926
    REASSIGN 371,7942
    RECHECK 372,7962
    RECURSIVE 373,7981
    REF 374,8002
    REFERENCES 375,8017
    REFERENCING 376,8039
    REFRESH 377,8062
    REINDEX 378,8081
    RELATIVE_P 379,8100
    RELEASE 380,8122
    RENAME 381,8141
    REPEATABLE 382,8159
    REPLACE 383,8181
    REPLICA 384,8200
    RESET 385,8219
    RESTART 386,8236
    RESTRICT 387,8255
    RETURNING 388,8275
    RETURNS 389,8296
    REVOKE 390,8315
    RIGHT 391,8333
    ROLE 392,8350
    ROLLBACK 393,8366
    ROLLUP 394,8386
    ROUTINE 395,8404
    ROUTINES 396,8423
    ROW 397,8443
    ROWS 398,8458
    RULE 399,8474
    SAVEPOINT 400,8490
    SCHEMA 401,8511
    SCHEMAS 402,8529
    SCROLL 403,8548
    SEARCH 404,8566
    SECOND_P 405,8584
    SECURITY 406,8604
    SELECT 407,8624
    SEQUENCE 408,8642
    SEQUENCES 409,8662
    SERIALIZABLE 410,8683
    SERVER 411,8707
    SESSION 412,8725
    SESSION_USER 413,8744
    SET 414,8768
    SETS 415,8783
    SETOF 416,8799
    SHARE 417,8816
    SHOW 418,8833
    SIMILAR 419,8849
    SIMPLE 420,8868
    SKIP 421,8886
    SMALLINT 422,8902
    SNAPSHOT 423,8922
    SOME 424,8942
    SQL_P 425,8958
    STABLE 426,8975
    STANDALONE_P 427,8993
    START 428,9017
    STATEMENT 429,9034
    STATISTICS 430,9055
    STDIN 431,9077
    STDOUT 432,9094
    STORAGE 433,9112
    STORED 434,9131
    STRICT_P 435,9149
    STRIP_P 436,9169
    SUBSCRIPTION 437,9188
    SUBSTRING 438,9212
    SUPPORT 439,9233
    SYMMETRIC 440,9252
    SYSID 441,9273
    SYSTEM_P 442,9290
    TABLE 443,9310
    TABLES 444,9327
    TABLESAMPLE 445,9345
    TABLESPACE 446,9368
    TEMP 447,9390
    TEMPLATE 448,9406
    TEMPORARY 449,9426
    TEXT_P 450,9447
    THEN 451,9465
    TIES 452,9481
    TIME 453,9497
    TIMESTAMP 454,9513
    TO 455,9534
    TRAILING 456,9548
    TRANSACTION 457,9568
    TRANSFORM 458,9591
    TREAT 459,9612
    TRIGGER 460,9629
    TRIM 461,9648
    TRUE_P 462,9664
    TRUNCATE 463,9682
    TRUSTED 464,9702
    TYPE_P 465,9721
    TYPES_P 466,9739
    UESCAPE 467,9758
    UNBOUNDED 468,9777
    UNCOMMITTED 469,9798
    UNENCRYPTED 470,9821
    UNION 471,9844
    UNIQUE 472,9861
    UNKNOWN 473,9879
    UNLISTEN 474,9898
    UNLOGGED 475,9918
    UNTIL 476,9938
    UPDATE 477,9955
    USER 478,9973
    USING 479,9989
    VACUUM 480,10006
    VALID 481,10024
    VALIDATE 482,10041
    VALIDATOR 483,10061
    VALUE_P 484,10082
    VALUES 485,10101
    VARCHAR 486,10119
    VARIADIC 487,10138
    VARYING 488,10158
    VERBOSE 489,10177
    VERSION_P 490,10196
    VIEW 491,10217
    VIEWS 492,10233
    VOLATILE 493,10250
    WHEN 494,10270
    WHERE 495,10286
    WHITESPACE_P 496,10303
    WINDOW 497,10327
    WITH 498,10345
    WITHIN 499,10361
    WITHOUT 500,10379
    WORK 501,10398
    WRAPPER 502,10414
    WRITE 503,10433
    XML_P 504,10450
    XMLATTRIBUTES 505,10467
    XMLCONCAT 506,10492
    XMLELEMENT 507,10513
    XMLEXISTS 508,10535
    XMLFOREST 509,10556
    XMLNAMESPACES 510,10577
    XMLPARSE 511,10602
    XMLPI 512,10622
    XMLROOT 513,10639
    XMLSERIALIZE 514,10658
    XMLTABLE 515,10682
    YEAR_P 516,10702
    YES_P 517,10720
    ZONE 518,10737
    NOT_LA 519,10753
    NULLS_LA 520,10771
    WITH_LA 521,10791
    POSTFIXOP 522,10810
    UMINUS 523,10831
union YYSTYPE529,10935

/home/seinoyu/pgsql/master/postgresql/gram.y,1395
	core_YYSTYPE		core_yystype;212,
	int					ival;214,
	char				*str;str215,
	const char			*keyword;keyword216,
	char				chr;218,
	bool				boolean;219,
	JoinType			jtype;220,
	DropBehavior		dbehavior;221,
	OnCommitAction		oncommit;222,
	List				*list;list223,
	Node				*node;node224,
	Value				*value;value225,
	ObjectType			objtype;226,
	TypeName			*typnam;typnam227,
	FunctionParameter   *fun_param;fun_param228,
	FunctionParameterMode fun_param_mode;229,
	ObjectWithArgs		*objwithargs;objwithargs230,
	DefElem				*defelt;defelt231,
	SortBy				*sortby;sortby232,
	WindowDef			*windef;windef233,
	JoinExpr			*jexpr;jexpr234,
	IndexElem			*ielem;ielem235,
	Alias				*alias;alias236,
	RangeVar			*range;range237,
	IntoClause			*into;into238,
	WithClause			*with;with239,
	InferClause			*infer;infer240,
	OnConflictClause	*onconflict;onconflict241,
	A_Indices			*aind;aind242,
	ResTarget			*target;target243,
	struct PrivTarget	*privtarget;privtarget244,
	AccessPriv			*accesspriv;accesspriv245,
	struct ImportQual	*importqual;importqual246,
	InsertStmt			*istmt;istmt247,
	VariableSetStmt		*vsetstmt;vsetstmt248,
	PartitionElem		*partelem;partelem249,
	PartitionSpec		*partspec;partspec250,
	PartitionBoundSpec	*partboundspec;partboundspec251,
	RoleSpec			*rolespec;rolespec252,
	struct SelectLimit	*selectlimit;selectlimit253,

/home/seinoyu/pgsql/master/postgresql/gram.h,325
typedef union YYSTYPE YYSTYPE;579,
# define YYSTYPE_IS_TRIVIAL 580,
# define YYSTYPE_IS_DECLARED 581,
typedef struct YYLTYPE YYLTYPE;586,
struct YYLTYPE587,
  int first_line;589,
  int first_column;590,
  int last_line;591,
  int last_column;592,
# define YYLTYPE_IS_DECLARED 594,
# define YYLTYPE_IS_TRIVIAL 595,

/home/seinoyu/pgsql/master/postgresql/scan.c,9107
#define  YY_INT_ALIGNED 46,
#define FLEX_SCANNER50,
#define YY_FLEX_MAJOR_VERSION 51,
#define YY_FLEX_MINOR_VERSION 52,
#define YY_FLEX_SUBMINOR_VERSION 53,
#define FLEX_BETA55,
#define core_yy_create_buffer_ALREADY_DEFINED59,
#define yy_create_buffer 61,
#define core_yy_delete_buffer_ALREADY_DEFINED65,
#define yy_delete_buffer 67,
#define core_yy_scan_buffer_ALREADY_DEFINED71,
#define yy_scan_buffer 73,
#define core_yy_scan_string_ALREADY_DEFINED77,
#define yy_scan_string 79,
#define core_yy_scan_bytes_ALREADY_DEFINED83,
#define yy_scan_bytes 85,
#define core_yy_init_buffer_ALREADY_DEFINED89,
#define yy_init_buffer 91,
#define core_yy_flush_buffer_ALREADY_DEFINED95,
#define yy_flush_buffer 97,
#define core_yy_load_buffer_state_ALREADY_DEFINED101,
#define yy_load_buffer_state 103,
#define core_yy_switch_to_buffer_ALREADY_DEFINED107,
#define yy_switch_to_buffer 109,
#define core_yypush_buffer_state_ALREADY_DEFINED113,
#define yypush_buffer_state 115,
#define core_yypop_buffer_state_ALREADY_DEFINED119,
#define yypop_buffer_state 121,
#define core_yyensure_buffer_stack_ALREADY_DEFINED125,
#define yyensure_buffer_stack 127,
#define core_yylex_ALREADY_DEFINED131,
#define yylex 133,
#define core_yyrestart_ALREADY_DEFINED137,
#define yyrestart 139,
#define core_yylex_init_ALREADY_DEFINED143,
#define yylex_init 145,
#define core_yylex_init_extra_ALREADY_DEFINED149,
#define yylex_init_extra 151,
#define core_yylex_destroy_ALREADY_DEFINED155,
#define yylex_destroy 157,
#define core_yyget_debug_ALREADY_DEFINED161,
#define yyget_debug 163,
#define core_yyset_debug_ALREADY_DEFINED167,
#define yyset_debug 169,
#define core_yyget_extra_ALREADY_DEFINED173,
#define yyget_extra 175,
#define core_yyset_extra_ALREADY_DEFINED179,
#define yyset_extra 181,
#define core_yyget_in_ALREADY_DEFINED185,
#define yyget_in 187,
#define core_yyset_in_ALREADY_DEFINED191,
#define yyset_in 193,
#define core_yyget_out_ALREADY_DEFINED197,
#define yyget_out 199,
#define core_yyset_out_ALREADY_DEFINED203,
#define yyset_out 205,
#define core_yyget_leng_ALREADY_DEFINED209,
#define yyget_leng 211,
#define core_yyget_text_ALREADY_DEFINED215,
#define yyget_text 217,
#define core_yyget_lineno_ALREADY_DEFINED221,
#define yyget_lineno 223,
#define core_yyset_lineno_ALREADY_DEFINED227,
#define yyset_lineno 229,
#define core_yyget_column_ALREADY_DEFINED233,
#define yyget_column 235,
#define core_yyset_column_ALREADY_DEFINED239,
#define yyset_column 241,
#define core_yywrap_ALREADY_DEFINED245,
#define yywrap 247,
#define core_yyget_lval_ALREADY_DEFINED251,
#define yyget_lval 253,
#define core_yyset_lval_ALREADY_DEFINED257,
#define yyset_lval 259,
#define core_yyget_lloc_ALREADY_DEFINED263,
#define yyget_lloc 265,
#define core_yyset_lloc_ALREADY_DEFINED269,
#define yyset_lloc 271,
#define core_yyalloc_ALREADY_DEFINED275,
#define yyalloc 277,
#define core_yyrealloc_ALREADY_DEFINED281,
#define yyrealloc 283,
#define core_yyfree_ALREADY_DEFINED287,
#define yyfree 289,
#define FLEXINT_H305,
#define __STDC_LIMIT_MACROS 315,
typedef int8_t flex_int8_t;319,
typedef uint8_t flex_uint8_t;320,
typedef int16_t flex_int16_t;321,
typedef uint16_t flex_uint16_t;322,
typedef int32_t flex_int32_t;323,
typedef uint32_t flex_uint32_t;324,
typedef signed char flex_int8_t;326,
typedef short int flex_int16_t;327,
typedef int flex_int32_t;328,
typedef unsigned char flex_uint8_t;329,
typedef unsigned short int flex_uint16_t;330,
typedef unsigned int flex_uint32_t;331,
#define INT8_MIN 335,
#define INT16_MIN 338,
#define INT32_MIN 341,
#define INT8_MAX 344,
#define INT16_MAX 347,
#define INT32_MAX 350,
#define UINT8_MAX 353,
#define UINT16_MAX 356,
#define UINT32_MAX 359,
#define SIZE_MAX 363,
#define yyconst 373,
#define yynoreturn 376,
#define yynoreturn378,
#define YY_NULL 382,
#define YY_SC_TO_UI(387,
#define YY_TYPEDEF_YY_SCANNER_T391,
typedef void* yyscan_t;392,
#define yyin 397,
#define yyout 398,
#define yyextra 399,
#define yyleng 400,
#define yytext 401,
#define yylineno 402,
#define yycolumn 403,
#define yy_flex_debug 404,
#define BEGIN 410,
#define YY_START 415,
#define YYSTATE 416,
#define YY_STATE_EOF(418,
#define YY_NEW_FILE 420,
#define YY_END_OF_BUFFER_CHAR 421,
#define YY_BUF_SIZE 430,
#define YY_BUF_SIZE 432,
#define YY_STATE_BUF_SIZE 438,
#define YY_TYPEDEF_YY_BUFFER_STATE441,
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE442,
#define YY_TYPEDEF_YY_SIZE_T446,
typedef size_t yy_size_t;447,
#define EOB_ACT_CONTINUE_SCAN 450,
#define EOB_ACT_END_OF_FILE 451,
#define EOB_ACT_LAST_MATCH 452,
    #define YY_LESS_LINENO(454,
    #define YY_LINENO_REWIND_TO(455,
#define yyless(458,
#define unput(470,
#define YY_STRUCT_YY_BUFFER_STATE473,
struct yy_buffer_state474,
	FILE *yy_input_file;yy_input_file476,
	char *yy_ch_buf;yy_ch_buf478,
	char *yy_buf_pos;yy_buf_pos479,
	int yy_buf_size;484,
	int yy_n_chars;489,
	int yy_is_our_buffer;495,
	int yy_is_interactive;502,
	int yy_at_bol;508,
    int yy_bs_lineno;510,
    int yy_bs_column;511,
	int yy_fill_buffer;516,
	int yy_buffer_status;518,
#define YY_BUFFER_NEW 520,
#define YY_BUFFER_NORMAL 521,
#define YY_BUFFER_EOF_PENDING 532,
#define YY_CURRENT_BUFFER 543,
#define YY_CURRENT_BUFFER_LVALUE 549,
#define YY_FLUSH_BUFFER 562,
#define yy_new_buffer 572,
#define yy_set_interactive(573,
#define yy_set_bol(582,
#define YY_AT_BOL(591,
#define core_yywrap(595,
#define YY_SKIP_YYWRAP596,
typedef flex_uint8_t YY_CHAR;597,
typedef const struct yy_trans_info *yy_state_type;yy_state_type599,
#define yytext_ptr 601,
#define YY_DO_BEFORE_ACTION 611,
#define YY_NUM_RULES 617,
#define YY_END_OF_BUFFER 618,
struct yy_trans_info619,
	flex_int16_t yy_verify;621,
	flex_int16_t yy_nxt;622,
static const struct yy_trans_info yy_transition[yy_transition624,
static const struct yy_trans_info *yy_start_state_list[yy_start_state_list5080,
#define REJECT 5113,
#define yymore(5114,
#define YY_MORE_ADJ 5115,
#define YY_RESTORE_YY_MORE_OFFSET5116,
#define YY_NO_INPUT 5220,
#define INITIAL 5369,
#define xb 5370,
#define xc 5371,
#define xd 5372,
#define xh 5373,
#define xq 5374,
#define xqs 5375,
#define xe 5376,
#define xdolq 5377,
#define xui 5378,
#define xus 5379,
#define xeu 5380,
#define YY_EXTRA_TYPE 5391,
struct yyguts_t5395,
    YY_EXTRA_TYPE yyextra_r;5399,
    FILE *yyin_r,yyin_r5402,
    FILE *yyin_r, *yyout_r;yyout_r5402,
    size_t yy_buffer_stack_top;5403,
    size_t yy_buffer_stack_max;5404,
    YY_BUFFER_STATE * yy_buffer_stack;5405,
    char yy_hold_char;5406,
    int yy_n_chars;5407,
    int yyleng_r;5408,
    char *yy_c_buf_p;yy_c_buf_p5409,
    int yy_init;5410,
    int yy_start;5411,
    int yy_did_buffer_switch_on_eof;5412,
    int yy_start_stack_ptr;5413,
    int yy_start_stack_depth;5414,
    int *yy_start_stack;yy_start_stack5415,
    yy_state_type yy_last_accepting_state;5416,
    char* yy_last_accepting_cpos;5417,
    int yylineno_r;5419,
    int yy_flex_debug_r;5420,
    char *yytext_r;yytext_r5422,
    int yy_more_flag;5423,
    int yy_more_len;5424,
    YYSTYPE * yylval_r;5426,
    YYLTYPE * yylloc_r;5428,
    #    define yylval 5436,
    #    define yylloc 5438,
#define YY_READ_BUF_SIZE 5522,
#define YY_READ_BUF_SIZE 5524,
#define ECHO 5533,
#define YY_INPUT(5540,
#define yyterminate(5577,
#define YY_START_STACK_INCR 5582,
#define YY_FATAL_ERROR(5587,
#define YY_DECL_IS_OURS 5596,
#define YY_DECL 5601,
#define YY_USER_ACTION5609,
#define YY_BREAK 5614,
#define YY_RULE_SETUP 5617,
static int yy_get_next_buffer 6722,
    static yy_state_type yy_get_previous_state 6861,
    static yy_state_type yy_try_NUL_trans 6882,
    static int yyinput 6904,
    void yyrestart 6982,
    void yy_switch_to_buffer 7000,
static void yy_load_buffer_state 7032,
    YY_BUFFER_STATE yy_create_buffer 7047,
    void yy_delete_buffer 7075,
    static void yy_init_buffer 7095,
    void yy_flush_buffer 7124,
void yypush_buffer_state 7154,
void yypop_buffer_state 7185,
static void yyensure_buffer_stack 7205,
YY_BUFFER_STATE yy_scan_buffer 7255,
YY_BUFFER_STATE yy_scan_string 7292,
YY_BUFFER_STATE yy_scan_bytes 7305,
#define YY_EXIT_FAILURE 7336,
static void yynoreturn yy_fatal_error 7339,
#undef yyless7349,
#define yyless(7350,
YY_EXTRA_TYPE yyget_extra 7369,
int yyget_lineno 7378,
int yyget_column 7391,
FILE *yyget_in yyget_in7404,
FILE *yyget_out yyget_out7413,
int yyget_leng 7422,
char *yyget_text yyget_text7432,
void yyset_extra 7442,
void yyset_lineno 7452,
void yyset_column 7467,
void yyset_in 7484,
void yyset_out 7490,
int yyget_debug 7496,
void yyset_debug 7502,
YYSTYPE * yyget_lval 7510,
void yyset_lval 7516,
YYLTYPE *yyget_lloc yyget_lloc7522,
void yyset_lloc 7528,
int yylex_init(7540,
int yylex_init_extra(7567,
static int yy_init_globals 7594,
int yylex_destroy 7628,
static void yy_flex_strncpy 7662,
static int yy_flex_strlen 7674,
#define YYTABLES_NAME 7684,

/home/seinoyu/pgsql/master/postgresql/scan.l,493
#undef fprintf50,
#define fprintf(51,
fprintf_to_ereport(54,
int			backslash_quote 65,
bool		escape_string_warning 66,
bool		standard_conforming_strings 67,
#define PG_KEYWORD(76,
const uint16 ScanKeywordTokens[ScanKeywordTokens78,
#undef PG_KEYWORD82,
#define YYSTYPE 87,
#define YY_EXTRA_TYPE 93,
#define SET_YYLLOC(102,
#define ADVANCE_YYLLOC(107,
#define PUSH_YYLLOC(118,
#define POP_YYLLOC(119,
#define startlit(121,
#define yyerror(129,
#define lexer_errposition(131,
#undef yyextra1057,
#define yyextra 1058,
#undef yylloc1061,
#define yylloc	1062,
#undef yyleng1063,
#define yyleng	1064,
scanner_errposition(1080,
scb_error_callback(1101,
setup_scanner_errposition_callback(1126,
cancel_scanner_errposition_callback(1143,
scanner_yyerror(1162,
scanner_init(1189,
scanner_finish(1231,
addlit(1251,
addlitchar(1270,
litbufdup(1289,
process_integer_literal(1305,
addunicode(1323,
unescape_single_char(1342,
check_string_escape_warning(1366,
check_escape_warning(1393,
core_yyalloc(1410,
core_yyrealloc(1416,
core_yyfree(1425,

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/gram.y,33288
#define YYLLOC_DEFAULT(74,2345
#define YYMALLOC 112,4008
#define YYFREE 113,4032
typedef struct PrivTarget116,4123
	GrantTargetType targtype;118,4151
	ObjectType	objtype;119,4178
	List	   *objs;objs120,4199
} PrivTarget;121,4215
typedef struct ImportQual124,4301
	ImportForeignSchemaType type;126,4329
	List	   *table_names;table_names127,4360
} ImportQual;128,4383
typedef struct SelectLimit131,4465
	Node *limitOffset;limitOffset133,4494
	Node *limitCount;limitCount134,4514
	LimitOption limitOption;135,4533
} SelectLimit;136,4559
#define CAS_NOT_DEFERRABLE	139,4647
#define CAS_DEFERRABLE	140,4681
#define CAS_INITIALLY_IMMEDIATE	141,4712
#define CAS_INITIALLY_DEFERRED	142,4750
#define CAS_NOT_VALID	143,4787
#define CAS_NO_INHERIT	144,4817
#define parser_yyerror(147,4850
#define parser_errposition(148,4911
%name-prefix=prefix204,7749
	core_YYSTYPE		core_yystype;212,7872
	int					ival;214,7946
	char				*str;str215,7961
	const char			*keyword;keyword216,7976
	char				chr;218,8001
	bool				boolean;219,8015
	JoinType			jtype;220,8033
	DropBehavior		dbehavior;221,8052
	OnCommitAction		oncommit;222,8078
	List				*list;list223,8105
	Node				*node;node224,8121
	Value				*value;value225,8137
	ObjectType			objtype;226,8155
	TypeName			*typnam;typnam227,8178
	FunctionParameter   *fun_param;fun_param228,8199
	FunctionParameterMode fun_param_mode;229,8232
	ObjectWithArgs		*objwithargs;objwithargs230,8271
	DefElem				*defelt;defelt231,8302
	SortBy				*sortby;sortby232,8323
	WindowDef			*windef;windef233,8343
	JoinExpr			*jexpr;jexpr234,8365
	IndexElem			*ielem;ielem235,8385
	Alias				*alias;alias236,8406
	RangeVar			*range;range237,8424
	IntoClause			*into;into238,8444
	WithClause			*with;with239,8465
	InferClause			*infer;infer240,8486
	OnConflictClause	*onconflict;onconflict241,8509
	A_Indices			*aind;aind242,8540
	ResTarget			*target;target243,8560
	struct PrivTarget	*privtarget;privtarget244,8582
	AccessPriv			*accesspriv;accesspriv245,8614
	struct ImportQual	*importqual;importqual246,8641
	InsertStmt			*istmt;istmt247,8673
	VariableSetStmt		*vsetstmt;vsetstmt248,8695
	PartitionElem		*partelem;partelem249,8724
	PartitionSpec		*partspec;partspec250,8751
	PartitionBoundSpec	*partboundspec;partboundspec251,8778
	RoleSpec			*rolespec;rolespec252,8814
	struct SelectLimit	*selectlimit;selectlimit253,8837
stmtblock:stmtblock802,30696
stmtmulti:stmtmulti818,31346
stmt 839,31730
CallStmt:CallStmt973,34527
CreateRoleStmt:CreateRoleStmt987,34880
opt_with:opt_with999,35105
OptRoleList:OptRoleList1009,35364
AlterOptRoleList:AlterOptRoleList1014,35480
AlterOptRoleElem:AlterOptRoleElem1019,35604
CreateOptRoleElem:CreateOptRoleElem1111,38836
CreateUserStmt:CreateUserStmt1143,39643
AlterRoleStmt:AlterRoleStmt1161,40066
opt_in_database:opt_in_database1180,40542
AlterRoleSetStmt:AlterRoleSetStmt1185,40638
DropRoleStmt:DropRoleStmt1230,41905
CreateGroupStmt:CreateGroupStmt1282,43105
AlterGroupStmt:AlterGroupStmt1300,43529
add_drop:add_drop1312,43810
CreateSchemaStmt:CreateSchemaStmt1323,44073
OptSchemaName:OptSchemaName1376,45701
OptSchemaEltList:OptSchemaEltList1381,45789
schema_stmt:schema_stmt1396,46110
VariableSetStmt:VariableSetStmt1415,46523
set_rest:set_rest1436,46880
generic_set:generic_set1456,47344
set_rest_more:set_rest_more1489,48014
var_name:var_name1579,50487
var_list:var_list1584,50592
var_value:var_value1588,50706
iso_level:iso_level1594,50832
opt_boolean_or_string:opt_boolean_or_string1600,51054
zone_value:zone_value1620,51748
opt_encoding:opt_encoding1656,52691
NonReservedWord_or_Sconst:NonReservedWord_or_Sconst1662,52813
VariableResetStmt:VariableResetStmt1667,52915
reset_rest:reset_rest1671,52986
generic_reset:generic_reset1696,53533
SetResetClause:SetResetClause1713,53860
FunctionSetResetClause:FunctionSetResetClause1719,54028
VariableShowStmt:VariableShowStmt1725,54154
ConstraintsSetStmt:ConstraintsSetStmt1759,54892
constraints_set_list:constraints_set_list1769,55120
constraints_set_mode:constraints_set_mode1774,55219
CheckPointStmt:CheckPointStmt1783,55350
DiscardStmt:DiscardStmt1798,55682
AlterTableStmt:AlterTableStmt1841,56729
alter_table_cmds:alter_table_cmds2045,62426
partition_cmd:partition_cmd2050,62567
index_partition_cmd:index_partition_cmd2079,63297
alter_table_cmd:alter_table_cmd2095,63661
alter_column_default:alter_column_default2607,78670
opt_drop_behavior:opt_drop_behavior2612,78770
opt_collate_clause:opt_collate_clause2618,78933
alter_using:alter_using2630,79162
replica_identity:replica_identity2635,79247
reloptions:reloptions2666,79981
opt_reloptions:opt_reloptions2670,80041
reloption_list:reloption_list2674,80134
reloption_elem:reloption_elem2680,80334
alter_identity_column_option_list:alter_identity_column_option_list2700,80737
alter_identity_column_option:alter_identity_column_option2707,80936
PartitionBoundSpec:PartitionBoundSpec2733,81595
hash_partbound_elem:hash_partbound_elem2826,83953
hash_partbound:hash_partbound2833,84069
AlterCompositeTypeStmt:AlterCompositeTypeStmt2851,84481
alter_type_cmds:alter_type_cmds2864,84792
alter_type_cmd:alter_type_cmd2869,84929
ClosePortalStmt:ClosePortalStmt2925,86661
CopyStmt:CopyStmt2965,87856
copy_from:copy_from3021,89420
opt_program:opt_program3026,89499
copy_file_name:copy_file_name3036,89805
copy_options:copy_options3042,89925
copy_opt_list:copy_opt_list3047,90056
copy_opt_item:copy_opt_item3052,90173
opt_binary:opt_binary3109,91507
copy_delimiter:copy_delimiter3117,91650
opt_using:opt_using3125,91815
copy_generic_opt_list:copy_generic_opt_list3131,91905
copy_generic_opt_elem:copy_generic_opt_elem3142,92088
copy_generic_opt_arg:copy_generic_opt_arg3149,92196
copy_generic_opt_arg_list:copy_generic_opt_arg_list3157,92476
copy_generic_opt_arg_list_item:copy_generic_opt_arg_list_item3169,92765
CreateStmt:CreateStmt3181,93067
OptTemp:OptTemp3312,97316
OptTableElementList:OptTableElementList3334,98000
OptTypedTableElementList:OptTypedTableElementList3339,98098
TableElementList:TableElementList3344,98211
TypedTableElementList:TypedTableElementList3355,98366
TableElement:TableElement3366,98541
TypedTableElement:TypedTableElement3372,98668
columnDef:columnDef3377,98765
columnOptions:columnOptions3398,99295
ColQualList:ColQualList3436,100252
ColConstraint:ColConstraint3441,100364
ColConstraintElem:ColConstraintElem3481,101597
generated_when:generated_when3588,104442
ConstraintAttr:ConstraintAttr3608,105385
TableLikeClause:TableLikeClause3640,106055
TableLikeOptionList:TableLikeOptionList3650,106251
TableLikeOption:TableLikeOption3656,106451
TableConstraint:TableConstraint3673,107127
ConstraintElem:ConstraintElem3684,107347
opt_no_inherit:opt_no_inherit3800,110828
opt_column_list:opt_column_list3804,110922
columnList:columnList3809,111020
columnElem:columnElem3814,111143
opt_c_include:opt_c_include3820,111213
key_match:key_match3824,111313
ExclusionConstraintList:ExclusionConstraintList3846,111708
ExclusionConstraintElem:ExclusionConstraintElem3852,111890
ExclusionWhereClause:ExclusionWhereClause3863,112146
key_actions:key_actions3874,112510
key_update:key_update3887,112905
key_delete:key_delete3890,112957
key_action:key_action3893,113011
OptInherit:OptInherit3901,113294
OptPartitionSpec:OptPartitionSpec3906,113440
PartitionSpec:PartitionSpec3910,113522
part_params:part_params3922,113728
part_elem:part_elem3926,113845
table_access_method_clause:table_access_method_clause3961,114531
OptWith:OptWith3967,114667
OnCommitOption:OnCommitOption3973,114784
OptTableSpace:OptTableSpace3979,115016
OptConsTableSpace:OptConsTableSpace3983,115108
ExistingIndex:ExistingIndex3987,115212
CreateStatsStmt:CreateStatsStmt4004,115890
AlterStatsStmt:AlterStatsStmt4040,116816
CreateAsStmt:CreateAsStmt4069,117602
create_as_target:create_as_target4098,118497
opt_with_data:opt_with_data4114,118898
CreateMatViewStmt:CreateMatViewStmt4128,119265
create_mv_target:create_mv_target4157,120196
OptNoLog:OptNoLog4172,120628
RefreshMatViewStmt:RefreshMatViewStmt4184,120970
CreateSeqStmt:CreateSeqStmt4204,121475
AlterSeqStmt:AlterSeqStmt4227,122060
OptSeqOptList:OptSeqOptList4247,122487
OptParenthesizedSeqOptList:OptParenthesizedSeqOptList4251,122573
SeqOptList:SeqOptList4255,122675
SeqOptElem:SeqOptElem4259,122792
opt_by:opt_by4318,124056
NumericOnly:NumericOnly4322,124100
NumericOnly_list:NumericOnly_list4333,124330
CreatePLangStmt:CreatePLangStmt4345,124739
opt_trusted:opt_trusted4375,125642
handler_name:handler_name4384,125937
opt_inline_handler:opt_inline_handler4389,126061
validator_clause:validator_clause4394,126164
opt_validator:opt_validator4399,126268
opt_procedural:opt_procedural4404,126362
CreateTableSpaceStmt:CreateTableSpaceStmt4416,126685
OptTableSpaceOwner:OptTableSpaceOwner4427,126976
DropTableSpaceStmt:DropTableSpaceStmt4441,127412
CreateExtensionStmt:CreateExtensionStmt4465,128078
create_extension_opt_list:create_extension_opt_list4483,128579
create_extension_opt_item:create_extension_opt_item4490,128731
AlterExtensionStmt:AlterExtensionStmt4518,129490
alter_extension_opt_list:alter_extension_opt_list4527,129705
alter_extension_opt_item:alter_extension_opt_item4534,129854
AlterExtensionContentsStmt:AlterExtensionContentsStmt4547,130212
CreateFdwStmt:CreateFdwStmt4674,134197
fdw_option:fdw_option4684,134445
fdw_options:fdw_options4691,134751
opt_fdw_options:opt_fdw_options4696,134870
AlterFdwStmt:AlterFdwStmt4708,135184
create_generic_options:create_generic_options4727,135696
generic_option_list:generic_option_list4732,135816
alter_generic_options:alter_generic_options4744,136055
alter_generic_option_list:alter_generic_option_list4748,136142
alter_generic_option_elem:alter_generic_option_elem4759,136341
generic_option_elem:generic_option_elem4780,136709
generic_option_name:generic_option_name4787,136824
generic_option_arg:generic_option_arg4792,136954
CreateForeignServerStmt:CreateForeignServerStmt4803,137265
opt_type:opt_type4829,138045
foreign_server_version:foreign_server_version4835,138126
opt_foreign_server_version:opt_foreign_server_version4840,138226
AlterForeignServerStmt:AlterForeignServerStmt4852,138552
CreateForeignTableStmt:CreateForeignTableStmt4885,139502
ImportForeignSchemaStmt:ImportForeignSchemaStmt4979,142614
import_qualification_type:import_qualification_type4994,143016
import_qualification:import_qualification4999,143150
CreateUserMappingStmt:CreateUserMappingStmt5023,143771
auth_ident:auth_ident5044,144398
DropUserMappingStmt:DropUserMappingStmt5057,144864
AlterUserMappingStmt:AlterUserMappingStmt5082,145569
CreatePolicyStmt:CreatePolicyStmt5105,146310
AlterPolicyStmt:AlterPolicyStmt5122,146761
RowSecurityOptionalExpr:RowSecurityOptionalExpr5136,147102
RowSecurityOptionalWithCheck:RowSecurityOptionalWithCheck5141,147203
RowSecurityDefaultToRole:RowSecurityDefaultToRole5146,147317
RowSecurityOptionalToRole:RowSecurityOptionalToRole5151,147454
RowSecurityDefaultPermissive:RowSecurityDefaultPermissive5156,147551
RowSecurityDefaultForCmd:RowSecurityDefaultForCmd5174,148022
row_security_cmd:row_security_cmd5179,148125
CreateAmStmt:CreateAmStmt5194,148542
am_type:am_type5204,148773
CreateTrigStmt:CreateTrigStmt5216,149061
TriggerActionTime:TriggerActionTime5263,150491
TriggerEvents:TriggerEvents5269,150661
TriggerOneEvent:TriggerOneEvent5293,151449
TriggerReferencing:TriggerReferencing5306,151868
TriggerTransitions:TriggerTransitions5311,151978
TriggerTransition:TriggerTransition5316,152122
TransitionOldOrNew:TransitionOldOrNew5327,152365
TransitionRowOrTable:TransitionRowOrTable5332,152454
TransitionRelName:TransitionRelName5345,152907
TriggerForSpec:TriggerForSpec5349,152961
TriggerForOptEach:TriggerForOptEach5364,153189
TriggerForType:TriggerForType5369,153257
TriggerWhen:TriggerWhen5374,153347
FUNCTION_or_PROCEDURE:FUNCTION_or_PROCEDURE5379,153443
TriggerFuncArgs:TriggerFuncArgs5384,153497
TriggerFuncArg:TriggerFuncArg5390,153670
OptConstrFromTable:OptConstrFromTable5400,153889
ConstraintAttributeSpec:ConstraintAttributeSpec5405,153992
ConstraintAttributeElem:ConstraintAttributeElem5434,155111
CreateEventTrigStmt:CreateEventTrigStmt5452,155688
event_trigger_when_list:event_trigger_when_list5476,156314
event_trigger_when_item:event_trigger_when_item5483,156485
event_trigger_value_list:event_trigger_value_list5488,156607
AlterEventTrigStmt:AlterEventTrigStmt5495,156770
enable_trigger:enable_trigger5505,156978
CreateAssertionStmt:CreateAssertionStmt5519,157413
DefineStmt:DefineStmt5538,157889
definition:definition5692,161973
def_list:def_list5695,162025
def_elem:def_elem5699,162138
def_arg:def_arg5710,162360
old_aggr_definition:old_aggr_definition5718,162669
old_aggr_list:old_aggr_list5721,162732
old_aggr_elem:old_aggr_elem5730,163036
opt_enum_val_list:opt_enum_val_list5736,163130
enum_val_list:enum_val_list5741,163224
AlterEnumStmt:AlterEnumStmt5753,163561
opt_if_not_exists:opt_if_not_exists5800,164798
CreateOpClassStmt:CreateOpClassStmt5816,165262
opclass_item_list:opclass_item_list5831,165635
opclass_item:opclass_item5836,165772
opt_default:opt_default5885,167091
opt_opfamily:opt_opfamily5889,167173
opclass_purpose:opclass_purpose5893,167258
opt_recheck:opt_recheck5898,167385
CreateOpFamilyStmt:CreateOpFamilyStmt5916,167830
AlterOpFamilyStmt:AlterOpFamilyStmt5926,168042
opclass_drop_list:opclass_drop_list5947,168570
opclass_drop:opclass_drop5952,168707
DropOpClassStmt:DropOpClassStmt5972,169161
DropOpFamilyStmt:DropOpFamilyStmt5995,169810
DropOwnedStmt:DropOwnedStmt6027,170771
ReassignOwnedStmt:ReassignOwnedStmt6037,170961
DropStmt:DropStmt6056,171434
object_type_any_name:object_type_any_name6179,174779
object_type_name:object_type_name6201,175573
drop_type_name:drop_type_name6209,175824
object_type_name_on_any_name:object_type_name_on_any_name6221,176299
any_name_list:any_name_list6227,176461
any_name:any_name6232,176585
attrs:attrs6236,176704
type_name_list:type_name_list6242,176841
TruncateStmt:TruncateStmt6254,177189
opt_restart_seqs:opt_restart_seqs6265,177438
CommentStmt:CommentStmt6277,177778
comment_text:comment_text6429,182237
SecLabelStmt:SecLabelStmt6444,182660
opt_provider:opt_provider6547,185398
security_label:security_label6551,185497
FetchStmt:FetchStmt6562,185764
fetch_args:fetch_args6576,186007
from_in:from_in6706,189161
opt_from_in:opt_from_in6710,189212
GrantStmt:GrantStmt6721,189472
RevokeStmt:RevokeStmt6736,189838
privileges:privileges6777,191083
privilege_list:privilege_list6799,191514
privilege:privilege6803,191638
privilege_target:privilege_target6837,192325
grantee_list:grantee_list7001,196666
grantee:grantee7006,196788
opt_grant_grant_option:opt_grant_grant_option7012,196875
GrantRoleStmt:GrantRoleStmt7023,197173
RevokeRoleStmt:RevokeRoleStmt7036,197476
opt_grant_admin_option:opt_grant_admin_option7059,198087
opt_granted_by:opt_granted_by7063,198191
AlterDefaultPrivilegesStmt:AlterDefaultPrivilegesStmt7073,198492
DefACLOptionList:DefACLOptionList7083,198747
DefACLOption:DefACLOption7088,198868
DefACLAction:DefACLAction7107,199287
defacl_privilege_target:defacl_privilege_target7151,200420
IndexStmt:IndexStmt7169,201002
opt_unique:opt_unique7231,202920
opt_concurrently:opt_concurrently7236,203008
opt_index_name:opt_index_name7241,203106
access_method_clause:access_method_clause7246,203193
index_params:index_params7251,203305
index_elem_options:index_elem_options7256,203428
index_elem:index_elem7288,204245
opt_include:opt_include7305,204509
index_including_params:index_including_params7309,204620
opt_collate:opt_collate7313,204760
opt_class:opt_class7317,204849
opt_asc_desc:opt_asc_desc7321,204930
opt_nulls_order:opt_nulls_order7326,205063
CreateFunctionStmt:CreateFunctionStmt7343,205616
opt_or_replace:opt_or_replace7395,207127
func_args:func_args7400,207222
func_args_list:func_args_list7404,207312
function_with_argtypes_list:function_with_argtypes_list7409,207438
function_with_argtypes:function_with_argtypes7415,207626
func_args_with_defaults:func_args_with_defaults7456,208688
func_args_with_defaults_list:func_args_with_defaults_list7461,208805
func_arg:func_arg7477,209423
arg_class:arg_class7526,210496
param_name:param_name7536,210816
func_return:func_return7539,210852
func_type:func_type7555,211237
func_arg_with_default:func_arg_with_default7571,211643
aggr_arg:aggr_arg7589,211924
aggr_args:aggr_args7630,213811
aggr_args_list:aggr_args_list7649,214246
aggregate_with_argtypes:aggregate_with_argtypes7654,214372
aggregate_with_argtypes_list:aggregate_with_argtypes_list7664,214566
createfunc_opt_list:createfunc_opt_list7670,214758
common_func_opt_item:common_func_opt_item7679,215025
createfunc_opt_item:createfunc_opt_item7751,216753
func_as:func_as7774,217204
transform_type_list:transform_type_list7781,217356
opt_definition:opt_definition7786,217505
table_func_column:table_func_column7791,217600
table_func_column_list:table_func_column_list7802,217825
AlterFunctionStmt:AlterFunctionStmt7821,218387
alterfunc_opt_list:alterfunc_opt_list7848,219135
opt_restrict:opt_restrict7855,219372
RemoveFuncStmt:RemoveFuncStmt7873,219951
RemoveAggrStmt:RemoveAggrStmt7936,221659
RemoveOperStmt:RemoveOperStmt7959,222247
oper_argtypes:oper_argtypes7982,222829
any_operator:any_operator7999,223338
operator_with_argtypes_list:operator_with_argtypes_list8006,223478
operator_with_argtypes:operator_with_argtypes8012,223666
DoStmt:DoStmt8031,224166
dostmt_opt_list:dostmt_opt_list8039,224285
dostmt_opt_item:dostmt_opt_item8044,224419
CreateCastStmt:CreateCastStmt8061,224829
cast_context:cast_context8096,225757
DropCastStmt:DropCastStmt8102,225927
opt_if_exists:opt_if_exists8114,226249
CreateTransformStmt:CreateTransformStmt8125,226543
transform_element_list:transform_element_list8137,226879
DropTransformStmt:DropTransformStmt8156,227391
ReindexStmt:ReindexStmt8175,227941
reindex_target_type:reindex_target_type8217,229014
reindex_target_multitable:reindex_target_multitable8221,229129
reindex_option_list:reindex_option_list8226,229306
reindex_option_elem:reindex_option_elem8230,229441
AlterTblSpcStmt:AlterTblSpcStmt8240,229693
RenameStmt:RenameStmt8267,230382
opt_column:opt_column8800,245040
opt_set_data:opt_set_data8804,245123
AlterObjectDependsStmt:AlterObjectDependsStmt8814,245417
opt_no:opt_no8872,247256
AlterObjectSchemaStmt:AlterObjectSchemaStmt8882,247526
AlterOperatorStmt:AlterOperatorStmt9134,255146
operator_def_list:operator_def_list9144,255376
operator_def_elem:operator_def_elem9148,255524
operator_def_arg:operator_def_arg9155,255769
AlterTypeStmt:AlterTypeStmt9171,256293
AlterOwnerStmt:AlterOwnerStmt9187,256698
CreatePublicationStmt:CreatePublicationStmt9388,262611
opt_publication_for_tables:opt_publication_for_tables9407,263034
publication_for_tables:publication_for_tables9412,263148
AlterPublicationStmt:AlterPublicationStmt9436,263692
CreateSubscriptionStmt:CreateSubscriptionStmt9476,264795
publication_name_list:publication_name_list9489,265118
publication_name_item:publication_name_item9500,265301
AlterSubscriptionStmt:AlterSubscriptionStmt9509,265562
DropSubscriptionStmt:DropSubscriptionStmt9575,267437
RuleStmt:RuleStmt9599,268101
RuleActionList:RuleActionList9615,268460
RuleActionMulti:RuleActionMulti9622,268677
RuleActionStmt:RuleActionStmt9637,268931
RuleActionStmtOrEmpty:RuleActionStmtOrEmpty9645,269030
event:event9650,269131
opt_instead:opt_instead9656,269303
NotifyStmt:NotifyStmt9671,269697
notify_payload:notify_payload9680,269868
ListenStmt:ListenStmt9685,269958
UnlistenStmt:UnlistenStmt9693,270092
TransactionStmt:TransactionStmt9718,270621
opt_transaction:opt_transaction9823,273337
transaction_mode_item:transaction_mode_item9828,273424
transaction_mode_list:transaction_mode_list9847,274089
transaction_mode_list_or_empty:transaction_mode_list_or_empty9856,274336
opt_transaction_chain:opt_transaction_chain9862,274434
ViewStmt:ViewStmt9877,274864
opt_check_option:opt_check_option9941,276892
LoadStmt:LoadStmt9955,277336
CreatedbStmt:CreatedbStmt9970,277648
createdb_opt_list:createdb_opt_list9980,277841
createdb_opt_items:createdb_opt_items9985,277942
createdb_opt_item:createdb_opt_item9990,278086
createdb_opt_name:createdb_opt_name10016,279035
opt_equal:opt_equal10030,279511
AlterDatabaseStmt:AlterDatabaseStmt10041,279754
AlterDatabaseSetStmt:AlterDatabaseSetStmt10066,280394
DropdbStmt:DropdbStmt10084,280886
drop_option_list:drop_option_list10118,281676
drop_option:drop_option10133,282009
AlterCollationStmt:AlterCollationStmt10146,282276
AlterSystemStmt:AlterSystemStmt10162,282708
CreateDomainStmt:CreateDomainStmt10184,283210
AlterDomainStmt:AlterDomainStmt10196,283506
opt_as:opt_as10264,285455
AlterTSDictionaryStmt:AlterTSDictionaryStmt10275,285733
AlterTSConfigurationStmt:AlterTSConfigurationStmt10285,285958
any_with:any_with10351,288187
CreateConversionStmt:CreateConversionStmt10365,288548
ClusterStmt:ClusterStmt10388,289216
cluster_index_specification:cluster_index_specification10422,289999
VacuumStmt:VacuumStmt10436,290301
AnalyzeStmt:AnalyzeStmt10466,291149
vac_analyze_option_list:vac_analyze_option_list10487,291693
analyze_keyword:analyze_keyword10498,291884
vac_analyze_option_elem:vac_analyze_option_elem10503,291962
vac_analyze_option_name:vac_analyze_option_name10510,292089
vac_analyze_option_arg:vac_analyze_option_arg10515,292203
opt_analyze:opt_analyze10521,292375
opt_verbose:opt_verbose10526,292471
opt_full:opt_full10531,292561
opt_freeze:opt_freeze10535,292642
opt_name_list:opt_name_list10539,292727
vacuum_relation:vacuum_relation10544,292822
vacuum_relation_list:vacuum_relation_list10551,292947
opt_vacuum_relation_list:opt_vacuum_relation_list10558,293100
ExplainStmt:ExplainStmt10572,293458
ExplainableStmt:ExplainableStmt10606,294318
explain_option_list:explain_option_list10618,294542
explain_option_elem:explain_option_elem10629,294717
explain_option_name:explain_option_name10636,294832
explain_option_arg:explain_option_arg10641,294934
PrepareStmt:PrepareStmt10654,295321
prep_type_clause:prep_type_clause10664,295528
PreparableStmt:PreparableStmt10668,295619
ExecuteStmt:ExecuteStmt10682,296004
execute_param_clause:execute_param_clause10725,297297
DeallocateStmt:DeallocateStmt10736,297614
InsertStmt:InsertStmt10769,298372
insert_target:insert_target10787,298926
insert_rest:insert_rest10799,299082
override_kind:override_kind10834,299805
insert_column_list:insert_column_list10839,299914
insert_column_item:insert_column_item10846,300069
opt_on_conflict:opt_on_conflict10857,300284
opt_conf_expr:opt_conf_expr10883,300840
returning_clause:returning_clause10907,301262
DeleteStmt:DeleteStmt10920,301560
using_clause:using_clause10933,301892
LockStmt:LockStmt10946,302180
opt_lock:opt_lock10957,302388
lock_type:lock_type10961,302489
opt_nowait:opt_nowait10971,302900
opt_nowait_or_skip:opt_nowait_or_skip10975,302981
UpdateStmt:UpdateStmt10989,303338
set_clause_list:set_clause_list11006,303715
set_clause:set_clause11011,303835
set_target:set_target11040,304425
set_target_list:set_target_list11051,304665
DeclareCursorStmt:DeclareCursorStmt11063,304996
cursor_name:cursor_name11074,305323
cursor_options:cursor_options11077,305364
opt_hold:opt_hold11084,305672
SelectStmt:SelectStmt11134,308179
select_with_parens:select_with_parens11138,308266
select_no_parens:select_no_parens11154,308814
select_clause:select_clause11213,310188
simple_select:simple_select11241,311360
with_clause:with_clause11315,313324
cte_list:cte_list11339,313736
common_table_expr:common_table_expr11344,313863
opt_materialized:opt_materialized11356,314154
opt_with_clause:opt_with_clause11362,314338
into_clause:into_clause11367,314430
OptTempTableName:OptTempTableName11387,314866
opt_table:opt_table11441,316142
all_or_distinct:all_or_distinct11445,316200
distinct_clause:distinct_clause11454,316473
opt_all_clause:opt_all_clause11459,316590
opt_sort_clause:opt_sort_clause11464,316676
sort_clause:sort_clause11469,316768
sortby_list:sortby_list11473,316827
sortby:sortby11478,316945
select_limit:select_limit11499,317390
opt_select_limit:opt_select_limit11524,317831
limit_clause:limit_clause11529,317925
offset_clause:offset_clause11588,319878
select_limit_value:select_limit_value11596,320036
select_offset_value:select_offset_value11605,320198
select_fetch_first_value:select_fetch_first_value11625,321157
I_or_F_const:I_or_F_const11633,321363
row_or_rows:row_or_rows11639,321499
first_or_next:first_or_next11643,321571
group_clause:group_clause11668,322644
group_by_list:group_by_list11673,322743
group_by_item:group_by_item11678,322874
empty_grouping_set:empty_grouping_set11686,323083
rollup_clause:rollup_clause11699,323386
cube_clause:cube_clause11706,323511
grouping_sets_clause:grouping_sets_clause11713,323630
having_clause:having_clause11720,323771
for_locking_clause:for_locking_clause11725,323864
opt_for_locking_clause:opt_for_locking_clause11730,323967
for_locking_items:for_locking_items11735,324073
for_locking_item:for_locking_item11740,324213
for_locking_strength:for_locking_strength11751,324452
locked_rels_list:locked_rels_list11758,324674
values_clause:values_clause11769,324975
from_clause:from_clause11793,325646
from_list:from_list11798,325737
table_ref:table_ref11806,325918
joined_table:joined_table11936,330031
alias_clause:alias_clause12005,331807
opt_alias_clause:opt_alias_clause12030,332214
func_alias_clause:func_alias_clause12038,332464
join_type:join_type12065,332967
join_outer:join_outer12072,333189
join_qual:join_qual12085,333559
relation_expr:relation_expr12090,333661
relation_expr_list:relation_expr_list12122,334218
relation_expr_opt_alias:relation_expr_opt_alias12137,334839
tablesample_clause:tablesample_clause12160,335257
opt_repeatable_clause:opt_repeatable_clause12173,335571
func_table:func_table12190,336312
rowsfrom_item:rowsfrom_item12212,336945
rowsfrom_list:rowsfrom_list12216,337036
opt_col_def_list:opt_col_def_list12221,337166
opt_ordinality:opt_ordinality12225,337270
where_clause:where_clause12230,337368
where_or_current_clause:where_or_current_clause12236,337495
OptTableFuncElementList:OptTableFuncElementList12250,337818
TableFuncElementList:TableFuncElementList12255,337923
TableFuncElement:TableFuncElement12266,338094
xmltable:xmltable12289,338598
xmltable_column_list:xmltable_column_list12313,339212
xmltable_column_el:xmltable_column_el12317,339362
xmltable_column_option_list:xmltable_column_option_list12402,341690
xmltable_column_option_el:xmltable_column_option_el12409,341871
xml_namespace_list:xml_namespace_list12420,342197
xml_namespace_el:xml_namespace_el12427,342346
Typename:Typename12456,343079
opt_array_bounds:opt_array_bounds12492,343863
SimpleTypename:SimpleTypename12501,344076
ConstTypename:ConstTypename12531,345132
GenericType:GenericType12545,345628
opt_type_modifiers:opt_type_modifiers12560,345945
Numeric:Numeric12567,346074
opt_float:opt_float12627,347131
Bit:Bit12658,347940
ConstBit:ConstBit12670,348184
BitWithLength:BitWithLength12681,348311
BitWithoutLength:BitWithoutLength12693,348521
Character:Character12715,348914
ConstCharacter:ConstCharacter12725,349031
CharacterWithLength:CharacterWithLength12742,349461
CharacterWithoutLength:CharacterWithoutLength12750,349632
character:character12760,349884
opt_varying:opt_varying12774,350306
ConstDatetime:ConstDatetime12782,350426
ConstInterval:ConstInterval12819,351226
opt_timezone:opt_timezone12827,351332
opt_interval:opt_interval12833,351474
interval_second:interval_second12892,353071
a_expr:a_expr12933,354581
b_expr:b_expr13371,368444
c_expr:c_expr13446,371259
func_application:func_application13594,375535
func_expr:func_expr13663,377776
func_expr_windowless:func_expr_windowless13708,379291
func_expr_common_subexpr:func_expr_common_subexpr13716,379469
xml_root_version:xml_root_version13940,385757
opt_xml_root_standalone:opt_xml_root_standalone13946,385873
xml_attributes:xml_attributes13956,386211
xml_attribute_list:xml_attribute_list13959,386286
xml_attribute_el:xml_attribute_el13963,386428
document_or_content:document_or_content13981,386770
xml_whitespace_option:xml_whitespace_option13985,386891
xmlexists_argument:xmlexists_argument13991,387106
xml_passing_mech:xml_passing_mech14010,387381
within_group_clause:within_group_clause14019,387470
filter_clause:filter_clause14024,387584
window_clause:window_clause14033,387718
window_definition_list:window_definition_list14038,387822
window_definition:window_definition14044,387991
over_clause:over_clause14053,388116
window_specification:window_specification14072,388516
opt_existing_window_name:opt_existing_window_name14099,389570
opt_partition_clause:opt_partition_clause14103,389668
opt_frame_clause:opt_frame_clause14111,389896
frame_extent:frame_extent14143,390688
frame_bound:frame_bound14204,393024
opt_window_exclusion_clause:opt_window_exclusion_clause14247,394045
row:row14266,394639
explicit_row:explicit_row14271,394788
implicit_row:implicit_row14275,394882
sub_type:sub_type14278,394957
all_Op:all_Op14283,395086
MathOp:MathOp14287,395157
qual_Op:qual_Op14301,395561
qual_all_Op:qual_all_Op14307,395673
subquery_Op:subquery_Op14314,395796
expr_list:expr_list14337,396584
func_arg_list:func_arg_list14348,396750
func_arg_expr:func_arg_expr14358,396899
type_list:type_list14382,397435
array_expr:array_expr14386,397549
array_expr_list:array_expr_list14400,397765
extract_list:extract_list14405,397893
extract_arg:extract_arg14416,398134
unicode_normal_form:unicode_normal_form14427,398439
overlay_list:overlay_list14435,398626
position_list:position_list14449,399058
substr_list:substr_list14475,399676
trim_list:trim_list14522,400863
in_expr:in_expr14527,401004
case_expr:case_expr14544,401392
when_clause_list:when_clause_list14556,401686
when_clause:when_clause14562,401854
case_default:case_default14573,402052
case_arg:case_arg14578,402143
columnref:columnref14582,402223
indirection_el:indirection_el14592,402389
opt_slice_bound:opt_slice_bound14619,402894
indirection:indirection14624,402984
opt_indirection:opt_indirection14629,403111
opt_asymmetric:opt_asymmetric14634,403230
opt_target_list:opt_target_list14645,403470
target_list:target_list14649,403559
target_el:target_el14654,403682
qualified_name_list:qualified_name_list14707,405007
qualified_name:qualified_name14719,405529
name_list:name_list14751,406302
name:name14758,406433
attr_name:attr_name14760,406469
file_name:file_name14762,406511
func_name:func_name14772,407005
AexprConst:AexprConst14785,407218
Iconst:Iconst14880,409503
Sconst:Sconst14881,409541
SignedIconst:SignedIconst14883,409580
RoleId:RoleId14889,409726
RoleSpec:RoleSpec14922,410593
role_list:role_list14959,411438
ColId:ColId14978,412107
type_function_name:type_function_name14985,412324
NonReservedWord:NonReservedWord14992,412552
ColLabel:ColLabel15001,412859
unreserved_keyword:unreserved_keyword15024,413688
col_name_keyword:col_name_keyword15336,418067
type_func_name_keyword:type_func_name_keyword15400,419233
reserved_keyword:reserved_keyword15432,419800
base_yyerror(15520,420969
makeRawStmt(15526,421085
updateRawStmtEnd(15538,421379
makeColumnRef(15553,421771
makeTypeCast(15605,423255
makeStringConst(15615,423452
makeStringConstCast(15627,423639
makeIntConst(15635,423806
makeFloatConst(15647,423990
makeBitStringConst(15659,424175
makeNullAConst(15671,424368
makeAConst(15682,424518
makeBoolAConst(15709,424939
makeRoleSpec(15724,425249
check_qualified_name(15740,425625
check_func_name(15757,426003
check_indirection(15775,426383
extractArgTypes(15797,426931
extractAggrArgTypes(15816,427331
makeOrderedSetArgs(15828,427711
insertSelectOptions(15868,429095
makeSetOp(15933,431114
SystemFuncName(15948,431427
SystemTypeName(15960,431716
doNegate(15980,432539
doNegateFloat(16005,432990
makeAndExpr(16019,433238
makeOrExpr(16042,433845
makeNotExpr(16065,434447
makeAArrayExpr(16071,434573
makeSQLValueFunction(16081,434749
makeXmlExpr(16093,435035
mergeTableFuncParameters(16118,435705
TableFuncTypeName(16141,436352
makeRangeVarFromAnyName(16165,436840
SplitColQualList(16203,437763
processCASbits(16244,438736
makeRecursiveViewSelect(16327,440798
parser_init(16374,441935

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/gram.c,286
#define YYBISON 48,2185
#define YYBISON_VERSION 51,2226
#define YYSKELETON_NAME 54,2281
#define YYPURE 57,2336
#define YYPUSH 60,2375
#define YYPULL 63,2414
#define yyparse 67,2484
#define yylex 68,2521
#define yyerror 69,2556
#define yydebug 70,2593
#define yynerrs 71,2630

/home/seinoyu/pgsql/master/postgresql/gram.y,3067
#define YYLLOC_DEFAULT(74,
#define YYMALLOC 112,
#define YYFREE 113,
typedef struct PrivTarget116,
	GrantTargetType targtype;118,
	ObjectType	objtype;119,
	List	   *objs;objs120,
} PrivTarget;121,
typedef struct ImportQual124,
	ImportForeignSchemaType type;126,
	List	   *table_names;table_names127,
} ImportQual;128,
typedef struct SelectLimit131,
	Node *limitOffset;limitOffset133,
	Node *limitCount;limitCount134,
	LimitOption limitOption;135,
} SelectLimit;136,
#define CAS_NOT_DEFERRABLE	139,
#define CAS_DEFERRABLE	140,
#define CAS_INITIALLY_IMMEDIATE	141,
#define CAS_INITIALLY_DEFERRED	142,
#define CAS_NOT_VALID	143,
#define CAS_NO_INHERIT	144,
#define parser_yyerror(147,
#define parser_errposition(148,
	core_YYSTYPE		core_yystype;212,
	int					ival;214,
	char				*str;str215,
	const char			*keyword;keyword216,
	char				chr;218,
	bool				boolean;219,
	JoinType			jtype;220,
	DropBehavior		dbehavior;221,
	OnCommitAction		oncommit;222,
	List				*list;list223,
	Node				*node;node224,
	Value				*value;value225,
	ObjectType			objtype;226,
	TypeName			*typnam;typnam227,
	FunctionParameter   *fun_param;fun_param228,
	FunctionParameterMode fun_param_mode;229,
	ObjectWithArgs		*objwithargs;objwithargs230,
	DefElem				*defelt;defelt231,
	SortBy				*sortby;sortby232,
	WindowDef			*windef;windef233,
	JoinExpr			*jexpr;jexpr234,
	IndexElem			*ielem;ielem235,
	Alias				*alias;alias236,
	RangeVar			*range;range237,
	IntoClause			*into;into238,
	WithClause			*with;with239,
	InferClause			*infer;infer240,
	OnConflictClause	*onconflict;onconflict241,
	A_Indices			*aind;aind242,
	ResTarget			*target;target243,
	struct PrivTarget	*privtarget;privtarget244,
	AccessPriv			*accesspriv;accesspriv245,
	struct ImportQual	*importqual;importqual246,
	InsertStmt			*istmt;istmt247,
	VariableSetStmt		*vsetstmt;vsetstmt248,
	PartitionElem		*partelem;partelem249,
	PartitionSpec		*partspec;partspec250,
	PartitionBoundSpec	*partboundspec;partboundspec251,
	RoleSpec			*rolespec;rolespec252,
	struct SelectLimit	*selectlimit;selectlimit253,
base_yyerror(15520,
makeRawStmt(15526,
updateRawStmtEnd(15538,
makeColumnRef(15553,
makeTypeCast(15605,
makeStringConst(15615,
makeStringConstCast(15627,
makeIntConst(15635,
makeFloatConst(15647,
makeBitStringConst(15659,
makeNullAConst(15671,
makeAConst(15682,
makeBoolAConst(15709,
makeRoleSpec(15724,
check_qualified_name(15740,
check_func_name(15757,
check_indirection(15775,
extractArgTypes(15797,
extractAggrArgTypes(15816,
makeOrderedSetArgs(15828,
insertSelectOptions(15868,
makeSetOp(15933,
SystemFuncName(15948,
SystemTypeName(15960,
doNegate(15980,
doNegateFloat(16005,
makeAndExpr(16019,
makeOrExpr(16042,
makeNotExpr(16065,
makeAArrayExpr(16071,
makeSQLValueFunction(16081,
makeXmlExpr(16093,
mergeTableFuncParameters(16118,
TableFuncTypeName(16141,
makeRangeVarFromAnyName(16165,
SplitColQualList(16203,
processCASbits(16244,
makeRecursiveViewSelect(16327,
parser_init(16374,

/home/seinoyu/pgsql/master/postgresql/gram.c,8887
#   define YY_CAST(279,
#   define YY_REINTERPRET_CAST(280,
#   define YY_CAST(282,
#   define YY_REINTERPRET_CAST(283,
#    define YY_NULLPTR 289,
#    define YY_NULLPTR 291,
#   define YY_NULLPTR 294,
# undef YYERROR_VERBOSE300,
# define YYERROR_VERBOSE 301,
# define YYERROR_VERBOSE 303,
# define YY_BASE_YY_GRAM_H_INCLUDED309,
# define YYDEBUG 312,
# define YYTOKENTYPE320,
  enum yytokentype321,
    IDENT 323,
    UIDENT 324,
    FCONST 325,
    SCONST 326,
    USCONST 327,
    BCONST 328,
    XCONST 329,
    Op 330,
    ICONST 331,
    PARAM 332,
    TYPECAST 333,
    DOT_DOT 334,
    COLON_EQUALS 335,
    EQUALS_GREATER 336,
    LESS_EQUALS 337,
    GREATER_EQUALS 338,
    NOT_EQUALS 339,
    ABORT_P 340,
    ABSOLUTE_P 341,
    ACCESS 342,
    ACTION 343,
    ADD_P 344,
    ADMIN 345,
    AFTER 346,
    AGGREGATE 347,
    ALL 348,
    ALSO 349,
    ALTER 350,
    ALWAYS 351,
    ANALYSE 352,
    ANALYZE 353,
    AND 354,
    ANY 355,
    ARRAY 356,
    AS 357,
    ASC 358,
    ASSERTION 359,
    ASSIGNMENT 360,
    ASYMMETRIC 361,
    AT 362,
    ATTACH 363,
    ATTRIBUTE 364,
    AUTHORIZATION 365,
    BACKWARD 366,
    BEFORE 367,
    BEGIN_P 368,
    BETWEEN 369,
    BIGINT 370,
    BINARY 371,
    BIT 372,
    BOOLEAN_P 373,
    BOTH 374,
    BY 375,
    CACHE 376,
    CALL 377,
    CALLED 378,
    CASCADE 379,
    CASCADED 380,
    CASE 381,
    CAST 382,
    CATALOG_P 383,
    CHAIN 384,
    CHAR_P 385,
    CHARACTER 386,
    CHARACTERISTICS 387,
    CHECK 388,
    CHECKPOINT 389,
    CLASS 390,
    CLOSE 391,
    CLUSTER 392,
    COALESCE 393,
    COLLATE 394,
    COLLATION 395,
    COLUMN 396,
    COLUMNS 397,
    COMMENT 398,
    COMMENTS 399,
    COMMIT 400,
    COMMITTED 401,
    CONCURRENTLY 402,
    CONFIGURATION 403,
    CONFLICT 404,
    CONNECTION 405,
    CONSTRAINT 406,
    CONSTRAINTS 407,
    CONTENT_P 408,
    CONTINUE_P 409,
    CONVERSION_P 410,
    COPY 411,
    COST 412,
    CREATE 413,
    CROSS 414,
    CSV 415,
    CUBE 416,
    CURRENT_P 417,
    CURRENT_CATALOG 418,
    CURRENT_DATE 419,
    CURRENT_ROLE 420,
    CURRENT_SCHEMA 421,
    CURRENT_TIME 422,
    CURRENT_TIMESTAMP 423,
    CURRENT_USER 424,
    CURSOR 425,
    CYCLE 426,
    DATA_P 427,
    DATABASE 428,
    DAY_P 429,
    DEALLOCATE 430,
    DEC 431,
    DECIMAL_P 432,
    DECLARE 433,
    DEFAULT 434,
    DEFAULTS 435,
    DEFERRABLE 436,
    DEFERRED 437,
    DEFINER 438,
    DELETE_P 439,
    DELIMITER 440,
    DELIMITERS 441,
    DEPENDS 442,
    DESC 443,
    DETACH 444,
    DICTIONARY 445,
    DISABLE_P 446,
    DISCARD 447,
    DISTINCT 448,
    DO 449,
    DOCUMENT_P 450,
    DOMAIN_P 451,
    DOUBLE_P 452,
    DROP 453,
    EACH 454,
    ELSE 455,
    ENABLE_P 456,
    ENCODING 457,
    ENCRYPTED 458,
    END_P 459,
    ENUM_P 460,
    ESCAPE 461,
    EVENT 462,
    EXCEPT 463,
    EXCLUDE 464,
    EXCLUDING 465,
    EXCLUSIVE 466,
    EXECUTE 467,
    EXISTS 468,
    EXPLAIN 469,
    EXPRESSION 470,
    EXTENSION 471,
    EXTERNAL 472,
    EXTRACT 473,
    FALSE_P 474,
    FAMILY 475,
    FETCH 476,
    FILTER 477,
    FIRST_P 478,
    FLOAT_P 479,
    FOLLOWING 480,
    FOR 481,
    FORCE 482,
    FOREIGN 483,
    FORWARD 484,
    FREEZE 485,
    FROM 486,
    FULL 487,
    FUNCTION 488,
    FUNCTIONS 489,
    GENERATED 490,
    GLOBAL 491,
    GRANT 492,
    GRANTED 493,
    GREATEST 494,
    GROUP_P 495,
    GROUPING 496,
    GROUPS 497,
    HANDLER 498,
    HAVING 499,
    HEADER_P 500,
    HOLD 501,
    HOUR_P 502,
    IDENTITY_P 503,
    IF_P 504,
    ILIKE 505,
    IMMEDIATE 506,
    IMMUTABLE 507,
    IMPLICIT_P 508,
    IMPORT_P 509,
    IN_P 510,
    INCLUDE 511,
    INCLUDING 512,
    INCREMENT 513,
    INDEX 514,
    INDEXES 515,
    INHERIT 516,
    INHERITS 517,
    INITIALLY 518,
    INLINE_P 519,
    INNER_P 520,
    INOUT 521,
    INPUT_P 522,
    INSENSITIVE 523,
    INSERT 524,
    INSTEAD 525,
    INT_P 526,
    INTEGER 527,
    INTERSECT 528,
    INTERVAL 529,
    INTO 530,
    INVOKER 531,
    IS 532,
    ISNULL 533,
    ISOLATION 534,
    JOIN 535,
    KEY 536,
    LABEL 537,
    LANGUAGE 538,
    LARGE_P 539,
    LAST_P 540,
    LATERAL_P 541,
    LEADING 542,
    LEAKPROOF 543,
    LEAST 544,
    LEFT 545,
    LEVEL 546,
    LIKE 547,
    LIMIT 548,
    LISTEN 549,
    LOAD 550,
    LOCAL 551,
    LOCALTIME 552,
    LOCALTIMESTAMP 553,
    LOCATION 554,
    LOCK_P 555,
    LOCKED 556,
    LOGGED 557,
    MAPPING 558,
    MATCH 559,
    MATERIALIZED 560,
    MAXVALUE 561,
    METHOD 562,
    MINUTE_P 563,
    MINVALUE 564,
    MODE 565,
    MONTH_P 566,
    MOVE 567,
    NAME_P 568,
    NAMES 569,
    NATIONAL 570,
    NATURAL 571,
    NCHAR 572,
    NEW 573,
    NEXT 574,
    NFC 575,
    NFD 576,
    NFKC 577,
    NFKD 578,
    NO 579,
    NONE 580,
    NORMALIZE 581,
    NORMALIZED 582,
    NOT 583,
    NOTHING 584,
    NOTIFY 585,
    NOTNULL 586,
    NOWAIT 587,
    NULL_P 588,
    NULLIF 589,
    NULLS_P 590,
    NUMERIC 591,
    OBJECT_P 592,
    OF 593,
    OFF 594,
    OFFSET 595,
    OIDS 596,
    OLD 597,
    ON 598,
    ONLY 599,
    OPERATOR 600,
    OPTION 601,
    OPTIONS 602,
    OR 603,
    ORDER 604,
    ORDINALITY 605,
    OTHERS 606,
    OUT_P 607,
    OUTER_P 608,
    OVER 609,
    OVERLAPS 610,
    OVERLAY 611,
    OVERRIDING 612,
    OWNED 613,
    OWNER 614,
    PARALLEL 615,
    PARSER 616,
    PARTIAL 617,
    PARTITION 618,
    PASSING 619,
    PASSWORD 620,
    PLACING 621,
    PLANS 622,
    POLICY 623,
    POSITION 624,
    PRECEDING 625,
    PRECISION 626,
    PRESERVE 627,
    PREPARE 628,
    PREPARED 629,
    PRIMARY 630,
    PRIOR 631,
    PRIVILEGES 632,
    PROCEDURAL 633,
    PROCEDURE 634,
    PROCEDURES 635,
    PROGRAM 636,
    PUBLICATION 637,
    QUOTE 638,
    RANGE 639,
    READ 640,
    REAL 641,
    REASSIGN 642,
    RECHECK 643,
    RECURSIVE 644,
    REF 645,
    REFERENCES 646,
    REFERENCING 647,
    REFRESH 648,
    REINDEX 649,
    RELATIVE_P 650,
    RELEASE 651,
    RENAME 652,
    REPEATABLE 653,
    REPLACE 654,
    REPLICA 655,
    RESET 656,
    RESTART 657,
    RESTRICT 658,
    RETURNING 659,
    RETURNS 660,
    REVOKE 661,
    RIGHT 662,
    ROLE 663,
    ROLLBACK 664,
    ROLLUP 665,
    ROUTINE 666,
    ROUTINES 667,
    ROW 668,
    ROWS 669,
    RULE 670,
    SAVEPOINT 671,
    SCHEMA 672,
    SCHEMAS 673,
    SCROLL 674,
    SEARCH 675,
    SECOND_P 676,
    SECURITY 677,
    SELECT 678,
    SEQUENCE 679,
    SEQUENCES 680,
    SERIALIZABLE 681,
    SERVER 682,
    SESSION 683,
    SESSION_USER 684,
    SET 685,
    SETS 686,
    SETOF 687,
    SHARE 688,
    SHOW 689,
    SIMILAR 690,
    SIMPLE 691,
    SKIP 692,
    SMALLINT 693,
    SNAPSHOT 694,
    SOME 695,
    SQL_P 696,
    STABLE 697,
    STANDALONE_P 698,
    START 699,
    STATEMENT 700,
    STATISTICS 701,
    STDIN 702,
    STDOUT 703,
    STORAGE 704,
    STORED 705,
    STRICT_P 706,
    STRIP_P 707,
    SUBSCRIPTION 708,
    SUBSTRING 709,
    SUPPORT 710,
    SYMMETRIC 711,
    SYSID 712,
    SYSTEM_P 713,
    TABLE 714,
    TABLES 715,
    TABLESAMPLE 716,
    TABLESPACE 717,
    TEMP 718,
    TEMPLATE 719,
    TEMPORARY 720,
    TEXT_P 721,
    THEN 722,
    TIES 723,
    TIME 724,
    TIMESTAMP 725,
    TO 726,
    TRAILING 727,
    TRANSACTION 728,
    TRANSFORM 729,
    TREAT 730,
    TRIGGER 731,
    TRIM 732,
    TRUE_P 733,
    TRUNCATE 734,
    TRUSTED 735,
    TYPE_P 736,
    TYPES_P 737,
    UESCAPE 738,
    UNBOUNDED 739,
    UNCOMMITTED 740,
    UNENCRYPTED 741,
    UNION 742,
    UNIQUE 743,
    UNKNOWN 744,
    UNLISTEN 745,
    UNLOGGED 746,
    UNTIL 747,
    UPDATE 748,
    USER 749,
    USING 750,
    VACUUM 751,
    VALID 752,
    VALIDATE 753,
    VALIDATOR 754,
    VALUE_P 755,
    VALUES 756,
    VARCHAR 757,
    VARIADIC 758,
    VARYING 759,
    VERBOSE 760,
    VERSION_P 761,
    VIEW 762,
    VIEWS 763,
    VOLATILE 764,
    WHEN 765,
    WHERE 766,
    WHITESPACE_P 767,
    WINDOW 768,
    WITH 769,
    WITHIN 770,
    WITHOUT 771,
    WORK 772,
    WRAPPER 773,
    WRITE 774,
    XML_P 775,
    XMLATTRIBUTES 776,
    XMLCONCAT 777,
    XMLELEMENT 778,
    XMLEXISTS 779,
    XMLFOREST 780,
    XMLNAMESPACES 781,
    XMLPARSE 782,
    XMLPI 783,
    XMLROOT 784,
    XMLSERIALIZE 785,
    XMLTABLE 786,
    YEAR_P 787,
    YES_P 788,
    ZONE 789,
    NOT_LA 790,
    NULLS_LA 791,
    WITH_LA 792,
    POSTFIXOP 793,
    UMINUS 794,
union YYSTYPE800,
typedef union YYSTYPE YYSTYPE;850,
# define YYSTYPE_IS_TRIVIAL 851,
# define YYSTYPE_IS_DECLARED 852,
typedef struct YYLTYPE YYLTYPE;857,
struct YYLTYPE858,
  int first_line;860,
  int first_column;861,
  int last_line;862,
  int last_column;863,
# define YYLTYPE_IS_DECLARED 865,
# define YYLTYPE_IS_TRIVIAL 866,
# undef short878,
#  define YY_STDINT_H889,
typedef __INT_LEAST8_TYPE__ yytype_int8;899,
typedef int_least8_t yytype_int8;901,
typedef signed char yytype_int8;903,
typedef __INT_LEAST16_TYPE__ yytype_int16;907,
typedef int_least16_t yytype_int16;909,
typedef short yytype_int16;911,
typedef __UINT_LEAST8_TYPE__ yytype_uint8;915,
typedef uint_least8_t yytype_uint8;918,
typedef unsigned char yytype_uint8;920,
typedef short yytype_uint8;922,
typedef __UINT_LEAST16_TYPE__ yytype_uint16;926,
typedef uint_least16_t yytype_uint16;929,
typedef unsigned short yytype_uint16;931,
typedef int yytype_uint16;933,
#  define YYPTRDIFF_T 938,
#  define YYPTRDIFF_MAXIMUM 939,
#  define YYPTRDIFF_T 944,
#  define YYPTRDIFF_MAXIMUM 945,
#  define YYPTRDIFF_T 947,
#  define YYPTRDIFF_MAXIMUM 948,
#  define YYSIZE_T 954,
#  define YYSIZE_T 956,
#  define YYSIZE_T 959,
#  define YYSIZE_T 961,
#define YYSIZE_MAXIMUM 965,
#define YYSIZEOF(971,
typedef yytype_int16 yy_state_t;974,
typedef int yy_state_fast_t;977,
#   define YY_(983,
#  define YY_(987,
#  define YY_ATTRIBUTE_PURE 993,
#  define YY_ATTRIBUTE_PURE995,
#  define YY_ATTRIBUTE_UNUSED 1001,
#  define YY_ATTRIBUTE_UNUSED1003,
# define YYUSE(1009,
# define YYUSE(1011,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN 1016,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END 1020,
# define YY_INITIAL_VALUE(1023,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN1026,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END1027,
# define YY_INITIAL_VALUE(1030,
# define YY_IGNORE_USELESS_CAST_BEGIN 1034,
# define YY_IGNORE_USELESS_CAST_END 1037,
# define YY_IGNORE_USELESS_CAST_BEGIN1041,
# define YY_IGNORE_USELESS_CAST_END1042,
#define YY_ASSERT(1046,
#    define YYSTACK_ALLOC 1055,
#    define YYSTACK_ALLOC 1059,
#    define alloca 1062,
#    define YYSTACK_ALLOC 1064,
#      define EXIT_SUCCESS 1069,
#  define YYSTACK_FREE(1078,
#   define YYSTACK_ALLOC_MAXIMUM 1084,
#  define YYSTACK_ALLOC 1087,
#  define YYSTACK_FREE 1088,
#   define YYSTACK_ALLOC_MAXIMUM 1090,
#    define EXIT_SUCCESS 1097,
#   define YYMALLOC 1101,
#   define YYFREE 1107,
union yyalloc1122,
  yy_state_t yyss_alloc;1124,
  YYSTYPE yyvs_alloc;1125,
  YYLTYPE yyls_alloc;1126,
# define YYSTACK_GAP_MAXIMUM 1130,
# define YYSTACK_BYTES(1134,
# define YYCOPY_NEEDED 1139,
# define YYSTACK_RELOCATE(1146,
#   define YYCOPY(1164,
#   define YYCOPY(1167,
#define YYFINAL 1180,
#define YYLAST 1182,
#define YYNTOKENS 1185,
#define YYNNTS 1187,
#define YYNRULES 1189,
#define YYNSTATES 1191,
#define YYUNDEFTOK 1193,
#define YYMAXUTOK 1194,
#define YYTRANSLATE(1199,
static const yytype_int16 yytranslate[yytranslate1204,
static const yytype_int16 yyrline[yyrline1283,
static const char *const yytname[yytname1562,
static const yytype_int16 yytoknum[yytoknum1842,
#define YYPACT_NINF 1897,
#define yypact_value_is_default(1899,
#define YYTABLE_NINF 1902,
#define yytable_value_is_error(1904,
static const int yypact[yypact1909,
static const yytype_int16 yydefact[yydefact2463,
static const yytype_int16 yypgoto[yypgoto3015,
static const yytype_int16 yydefgoto[yydefgoto3087,
static const yytype_int16 yytable[yytable3161,
static const yytype_int16 yycheck[yycheck13423,
static const yytype_int16 yystos[yystos23687,
static const yytype_int16 yyr1[yyr124239,
static const yytype_int8 yyr2[yyr224515,
#define yyerrok 24791,
#define yyclearin 24792,
#define YYEMPTY 24793,
#define YYEOF 24794,
#define YYACCEPT 24796,
#define YYABORT 24797,
#define YYERROR 24798,
#define YYRECOVERING(24801,
#define YYBACKUP(24803,
#define YYTERROR 24821,
#define YYERRCODE 24822,
# define YYLLOC_DEFAULT(24830,
#define YYRHSLOC(24849,
#  define YYFPRINTF 24857,
# define YYDPRINTF(24860,
yy_location_print_ 24878,
#  define YY_LOCATION_PRINT(24902,
#  define YY_LOCATION_PRINT(24906,
# define YY_SYMBOL_PRINT(24911,
yy_symbol_value_print 24928,
yy_symbol_print 24951,
yy_stack_print 24968,
# define YY_STACK_PRINT(24979,
yy_reduce_print 24991,
# define YY_REDUCE_PRINT(25010,
int yydebug;25018,
# define YYDPRINTF(25020,
# define YY_SYMBOL_PRINT(25021,
# define YY_STACK_PRINT(25022,
# define YY_REDUCE_PRINT(25023,
# define YYINITDEPTH 25029,
# define YYMAXDEPTH 25040,
#   define yystrlen(25048,
yystrlen 25052,
#   define yystpcpy 25064,
yystpcpy 25069,
yytnamerr 25091,
yysyntax_error 25142,
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM 25145,
# define YYCASE_(25221,
# undef YYCASE_25232,
yydestruct 25281,
yyparse 25303,
#define YYPOPSTACK(25374,
# undef YYSTACK_RELOCATE25462,
# define YYSYNTAX_ERROR 45346,
# undef YYSYNTAX_ERROR45375,

/home/seinoyu/pgsql/master/postgresql/src/pl/plpgsql/src/pl_gram.y,3681
#define YYLLOC_DEFAULT(31,776
#define YYMALLOC 47,1317
#define YYFREE 48,1341
	int			location;53,1383
	int			leaderlen;54,1400
} sql_error_callback_arg;55,1418
#define parser_errposition(57,1445
%name-prefix=prefix117,4035
			char *name;name134,4331
			int  lineno;135,4346
			char *name;name139,4393
			int  lineno;140,4408
			PLpgSQL_datum   *scalar;scalar141,4424
			PLpgSQL_datum   *row;row142,4452
			char *label;label146,4512
			int  n_initvars;147,4528
			int  *initvarnos;initvarnos148,4548
			List *stmts;stmts152,4600
			char *end_label;end_label153,4616
			int   end_label_location;154,4636
pl_function	363,10594
comp_options	369,10717
comp_option	373,10770
option_value 400,11564
opt_semi	409,11679
pl_block	413,11708
decl_sect	436,12291
decl_start	460,12973
decl_stmts	472,13275
decl_stmt	476,13333
decl_statement	494,13810
opt_scrollable 589,16607
decl_cursor_query 603,16785
decl_cursor_args 609,16856
decl_cursor_arglist 644,17711
decl_cursor_arg 654,17885
decl_is_for	662,18056
decl_aliasitem	665,18125
decl_varname	723,19679
decl_const	781,21606
decl_datatype	787,21685
decl_collate	798,21873
decl_notnull	816,22266
decl_defval	822,22348
decl_defkey	830,22468
assign_operator	839,22728
proc_sect	843,22776
proc_stmt	855,22992
stmt_perform	907,23916
stmt_call	921,24274
stmt_assign	952,25067
stmt_getdiag	967,25467
getdiag_area_opt 1029,27561
getdiag_list 1043,27714
getdiag_list_item 1053,27878
getdiag_item 1065,28109
getdiag_target	1110,29845
assign_var	1134,30450
stmt_if	1156,30974
stmt_elsifs	1173,31439
stmt_else	1190,31764
stmt_case	1200,31866
opt_expr_until_when	1206,32011
case_when_list	1221,32298
case_when	1231,32446
opt_case_else	1242,32693
stmt_loop	1261,33105
stmt_while	1279,33578
stmt_for	1298,34096
for_control	1334,35216
for_variable	1596,43579
stmt_foreach_a	1643,44675
foreach_slice	1681,45707
stmt_exit	1691,45808
exit_type	1744,47501
stmt_return	1754,47608
stmt_raise	1780,48121
stmt_assert	1925,52098
loop_body	1949,52642
stmt_execsql	1967,53372
stmt_dynexecute 1997,54023
stmt_open	2061,55781
stmt_fetch	2139,57699
stmt_move	2169,58531
opt_fetch_direction	2181,58800
stmt_close	2187,58878
stmt_null	2201,59234
stmt_commit	2208,59350
stmt_rollback	2222,59711
opt_transaction_chain:opt_transaction_chain2236,60081
stmt_set	2242,60220
cursor_variable	2270,60888
exception_sect	2304,61963
proc_exceptions	2348,63209
proc_exception	2358,63375
proc_conditions	2371,63653
proc_condition	2386,63933
expr_until_semi 2422,64857
expr_until_rightbracket 2426,64927
expr_until_then 2430,65005
expr_until_loop 2434,65081
opt_block_label	2438,65157
opt_loop_label	2450,65387
opt_label	2462,65614
opt_exitcond	2473,65777
any_identifier	2482,65955
unreserved_keyword	2498,66221
tok_is_keyword(2592,67840
word_is_not_variable(2619,68547
cword_is_not_variable(2630,68788
current_token_is_not_variable(2645,69200
read_sql_expression(2657,69520
read_sql_expression2(2665,69779
read_sql_stmt(2674,70076
read_sql_construct(2696,71004
read_datatype(2804,73573
make_execsql_stmt(2940,76392
read_fetch_direction(3062,80357
complete_direction(3188,83505
make_return_stmt(3220,84084
make_return_next_stmt(3302,86406
make_return_query_stmt(3365,88162
NameOfDatum(3413,89260
check_assignable(3422,89425
read_into_target(3460,90507
read_into_scalar_list(3520,92136
make_scalar_list1(3599,94283
check_sql_expr(3647,96119
plpgsql_sql_error_callback(3673,96786
parse_datatype(3712,98031
check_labels(3745,98956
read_cursor_args(3776,99985
read_raise_options(3947,104503
check_raise_parameters(4011,106288
make_case(4045,106972

/home/seinoyu/pgsql/master/postgresql/src/pl/plpgsql/src/pl_gram.c,358
#define YYBISON 48,2185
#define YYBISON_VERSION 51,2226
#define YYSKELETON_NAME 54,2281
#define YYPURE 57,2336
#define YYPUSH 60,2375
#define YYPULL 63,2414
#define yyparse 67,2484
#define yylex 68,2524
#define yyerror 69,2562
#define yydebug 70,2602
#define yynerrs 71,2642
#define yylval 72,2682
#define yychar 73,2721
#define yylloc 74,2760

/home/seinoyu/pgsql/master/postgresql/pl_gram.y,2122
#define YYLLOC_DEFAULT(31,
#define YYMALLOC 47,
#define YYFREE 48,
	int			location;53,
	int			leaderlen;54,
} sql_error_callback_arg;55,
#define parser_errposition(57,
		core_YYSTYPE			core_yystype;121,
		int						ival;123,
		char					*str;str124,
		const char				*keyword;keyword125,
		PLword					word;127,
		PLcword					cword;128,
		PLwdatum				wdatum;129,
		bool					boolean;130,
		Oid						oid;131,
			char *name;name134,
			int  lineno;135,
		}						varname;136,
			char *name;name139,
			int  lineno;140,
			PLpgSQL_datum   *scalar;scalar141,
			PLpgSQL_datum   *row;row142,
		}						forvariable;143,
			char *label;label146,
			int  n_initvars;147,
			int  *initvarnos;initvarnos148,
		}						declhdr;149,
			List *stmts;stmts152,
			char *end_label;end_label153,
			int   end_label_location;154,
		}						loop_body;155,
		List					*list;list156,
		PLpgSQL_type			*dtype;dtype157,
		PLpgSQL_datum			*datum;datum158,
		PLpgSQL_var				*var;var159,
		PLpgSQL_expr			*expr;expr160,
		PLpgSQL_stmt			*stmt;stmt161,
		PLpgSQL_condition		*condition;condition162,
		PLpgSQL_exception		*exception;exception163,
		PLpgSQL_exception_block	*exception_block;exception_block164,
		PLpgSQL_nsitem			*nsitem;nsitem165,
		PLpgSQL_diag_item		*diagitem;diagitem166,
		PLpgSQL_stmt_fetch		*fetch;fetch167,
		PLpgSQL_case_when		*casewhen;casewhen168,
tok_is_keyword(2592,
word_is_not_variable(2619,
cword_is_not_variable(2630,
current_token_is_not_variable(2645,
read_sql_expression(2657,
read_sql_expression2(2665,
read_sql_stmt(2674,
read_sql_construct(2696,
read_datatype(2804,
make_execsql_stmt(2940,
read_fetch_direction(3062,
complete_direction(3188,
make_return_stmt(3220,
make_return_next_stmt(3302,
make_return_query_stmt(3365,
NameOfDatum(3413,
check_assignable(3422,
read_into_target(3460,
read_into_scalar_list(3520,
make_scalar_list1(3599,
check_sql_expr(3647,
plpgsql_sql_error_callback(3673,
parse_datatype(3712,
check_labels(3745,
read_cursor_args(3776,
read_raise_options(3947,
check_raise_parameters(4011,
make_case(4045,

/home/seinoyu/pgsql/master/postgresql/pl_gram.c,2932
#   define YY_CAST(196,
#   define YY_REINTERPRET_CAST(197,
#   define YY_CAST(199,
#   define YY_REINTERPRET_CAST(200,
#    define YY_NULLPTR 206,
#    define YY_NULLPTR 208,
#   define YY_NULLPTR 211,
# undef YYERROR_VERBOSE217,
# define YYERROR_VERBOSE 218,
# define YYERROR_VERBOSE 220,
# define YY_PLPGSQL_YY_PL_GRAM_H_INCLUDED226,
# define YYDEBUG 229,
# define YYTOKENTYPE237,
  enum yytokentype238,
    IDENT 240,
    UIDENT 241,
    FCONST 242,
    SCONST 243,
    USCONST 244,
    BCONST 245,
    XCONST 246,
    Op 247,
    ICONST 248,
    PARAM 249,
    TYPECAST 250,
    DOT_DOT 251,
    COLON_EQUALS 252,
    EQUALS_GREATER 253,
    LESS_EQUALS 254,
    GREATER_EQUALS 255,
    NOT_EQUALS 256,
    T_WORD 257,
    T_CWORD 258,
    T_DATUM 259,
    LESS_LESS 260,
    GREATER_GREATER 261,
    K_ABSOLUTE 262,
    K_ALIAS 263,
    K_ALL 264,
    K_AND 265,
    K_ARRAY 266,
    K_ASSERT 267,
    K_BACKWARD 268,
    K_BEGIN 269,
    K_BY 270,
    K_CALL 271,
    K_CASE 272,
    K_CHAIN 273,
    K_CLOSE 274,
    K_COLLATE 275,
    K_COLUMN 276,
    K_COLUMN_NAME 277,
    K_COMMIT 278,
    K_CONSTANT 279,
    K_CONSTRAINT 280,
    K_CONSTRAINT_NAME 281,
    K_CONTINUE 282,
    K_CURRENT 283,
    K_CURSOR 284,
    K_DATATYPE 285,
    K_DEBUG 286,
    K_DECLARE 287,
    K_DEFAULT 288,
    K_DETAIL 289,
    K_DIAGNOSTICS 290,
    K_DO 291,
    K_DUMP 292,
    K_ELSE 293,
    K_ELSIF 294,
    K_END 295,
    K_ERRCODE 296,
    K_ERROR 297,
    K_EXCEPTION 298,
    K_EXECUTE 299,
    K_EXIT 300,
    K_FETCH 301,
    K_FIRST 302,
    K_FOR 303,
    K_FOREACH 304,
    K_FORWARD 305,
    K_FROM 306,
    K_GET 307,
    K_HINT 308,
    K_IF 309,
    K_IMPORT 310,
    K_IN 311,
    K_INFO 312,
    K_INSERT 313,
    K_INTO 314,
    K_IS 315,
    K_LAST 316,
    K_LOG 317,
    K_LOOP 318,
    K_MESSAGE 319,
    K_MESSAGE_TEXT 320,
    K_MOVE 321,
    K_NEXT 322,
    K_NO 323,
    K_NOT 324,
    K_NOTICE 325,
    K_NULL 326,
    K_OPEN 327,
    K_OPTION 328,
    K_OR 329,
    K_PERFORM 330,
    K_PG_CONTEXT 331,
    K_PG_DATATYPE_NAME 332,
    K_PG_EXCEPTION_CONTEXT 333,
    K_PG_EXCEPTION_DETAIL 334,
    K_PG_EXCEPTION_HINT 335,
    K_PRINT_STRICT_PARAMS 336,
    K_PRIOR 337,
    K_QUERY 338,
    K_RAISE 339,
    K_RELATIVE 340,
    K_RESET 341,
    K_RETURN 342,
    K_RETURNED_SQLSTATE 343,
    K_REVERSE 344,
    K_ROLLBACK 345,
    K_ROW_COUNT 346,
    K_ROWTYPE 347,
    K_SCHEMA 348,
    K_SCHEMA_NAME 349,
    K_SCROLL 350,
    K_SET 351,
    K_SLICE 352,
    K_SQLSTATE 353,
    K_STACKED 354,
    K_STRICT 355,
    K_TABLE 356,
    K_TABLE_NAME 357,
    K_THEN 358,
    K_TO 359,
    K_TYPE 360,
    K_USE_COLUMN 361,
    K_USE_VARIABLE 362,
    K_USING 363,
    K_VARIABLE_CONFLICT 364,
    K_WARNING 365,
    K_WHEN 366,
    K_WHILE 367,
union YYSTYPE373,
typedef union YYSTYPE YYSTYPE;429,
# define YYSTYPE_IS_TRIVIAL 430,
# define YYSTYPE_IS_DECLARED 431,
typedef struct YYLTYPE YYLTYPE;436,
struct YYLTYPE437,
  int first_line;439,
  int first_column;440,
  int last_line;441,
  int last_column;442,
# define YYLTYPE_IS_DECLARED 444,
# define YYLTYPE_IS_TRIVIAL 445,
# undef short458,
#  define YY_STDINT_H469,
typedef __INT_LEAST8_TYPE__ yytype_int8;479,
typedef int_least8_t yytype_int8;481,
typedef signed char yytype_int8;483,
typedef __INT_LEAST16_TYPE__ yytype_int16;487,
typedef int_least16_t yytype_int16;489,
typedef short yytype_int16;491,
typedef __UINT_LEAST8_TYPE__ yytype_uint8;495,
typedef uint_least8_t yytype_uint8;498,
typedef unsigned char yytype_uint8;500,
typedef short yytype_uint8;502,
typedef __UINT_LEAST16_TYPE__ yytype_uint16;506,
typedef uint_least16_t yytype_uint16;509,
typedef unsigned short yytype_uint16;511,
typedef int yytype_uint16;513,
#  define YYPTRDIFF_T 518,
#  define YYPTRDIFF_MAXIMUM 519,
#  define YYPTRDIFF_T 524,
#  define YYPTRDIFF_MAXIMUM 525,
#  define YYPTRDIFF_T 527,
#  define YYPTRDIFF_MAXIMUM 528,
#  define YYSIZE_T 534,
#  define YYSIZE_T 536,
#  define YYSIZE_T 539,
#  define YYSIZE_T 541,
#define YYSIZE_MAXIMUM 545,
#define YYSIZEOF(551,
typedef yytype_int16 yy_state_t;554,
typedef int yy_state_fast_t;557,
#   define YY_(563,
#  define YY_(567,
#  define YY_ATTRIBUTE_PURE 573,
#  define YY_ATTRIBUTE_PURE575,
#  define YY_ATTRIBUTE_UNUSED 581,
#  define YY_ATTRIBUTE_UNUSED583,
# define YYUSE(589,
# define YYUSE(591,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN 596,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END 600,
# define YY_INITIAL_VALUE(603,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN606,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END607,
# define YY_INITIAL_VALUE(610,
# define YY_IGNORE_USELESS_CAST_BEGIN 614,
# define YY_IGNORE_USELESS_CAST_END 617,
# define YY_IGNORE_USELESS_CAST_BEGIN621,
# define YY_IGNORE_USELESS_CAST_END622,
#define YY_ASSERT(626,
#    define YYSTACK_ALLOC 635,
#    define YYSTACK_ALLOC 639,
#    define alloca 642,
#    define YYSTACK_ALLOC 644,
#      define EXIT_SUCCESS 649,
#  define YYSTACK_FREE(658,
#   define YYSTACK_ALLOC_MAXIMUM 664,
#  define YYSTACK_ALLOC 667,
#  define YYSTACK_FREE 668,
#   define YYSTACK_ALLOC_MAXIMUM 670,
#    define EXIT_SUCCESS 677,
#   define YYMALLOC 681,
#   define YYFREE 687,
union yyalloc702,
  yy_state_t yyss_alloc;704,
  YYSTYPE yyvs_alloc;705,
  YYLTYPE yyls_alloc;706,
# define YYSTACK_GAP_MAXIMUM 710,
# define YYSTACK_BYTES(714,
# define YYCOPY_NEEDED 719,
# define YYSTACK_RELOCATE(726,
#   define YYCOPY(744,
#   define YYCOPY(747,
#define YYFINAL 760,
#define YYLAST 762,
#define YYNTOKENS 765,
#define YYNNTS 767,
#define YYNRULES 769,
#define YYNSTATES 771,
#define YYUNDEFTOK 773,
#define YYMAXUTOK 774,
#define YYTRANSLATE(779,
static const yytype_uint8 yytranslate[yytranslate784,
static const yytype_int16 yyrline[yyrline829,
static const char *const yytname[yytname863,
static const yytype_int16 yytoknum[yytoknum918,
#define YYPACT_NINF 937,
#define yypact_value_is_default(939,
#define YYTABLE_NINF 942,
#define yytable_value_is_error(944,
static const yytype_int16 yypact[yypact949,
static const yytype_int16 yydefact[yydefact991,
static const yytype_int16 yypgoto[yypgoto1031,
static const yytype_int16 yydefgoto[yydefgoto1045,
static const yytype_int16 yytable[yytable1061,
static const yytype_int16 yycheck[yycheck1212,
static const yytype_uint8 yystos[yystos1365,
static const yytype_uint8 yyr1[yyr11405,
static const yytype_int8 yyr2[yyr21436,
#define yyerrok 1467,
#define yyclearin 1468,
#define YYEMPTY 1469,
#define YYEOF 1470,
#define YYACCEPT 1472,
#define YYABORT 1473,
#define YYERROR 1474,
#define YYRECOVERING(1477,
#define YYBACKUP(1479,
#define YYTERROR 1497,
#define YYERRCODE 1498,
# define YYLLOC_DEFAULT(1506,
#define YYRHSLOC(1525,
#  define YYFPRINTF 1533,
# define YYDPRINTF(1536,
yy_location_print_ 1554,
#  define YY_LOCATION_PRINT(1578,
#  define YY_LOCATION_PRINT(1582,
# define YY_SYMBOL_PRINT(1587,
yy_symbol_value_print 1604,
yy_symbol_print 1626,
yy_stack_print 1643,
# define YY_STACK_PRINT(1654,
yy_reduce_print 1666,
# define YY_REDUCE_PRINT(1685,
int yydebug;1693,
# define YYDPRINTF(1695,
# define YY_SYMBOL_PRINT(1696,
# define YY_STACK_PRINT(1697,
# define YY_REDUCE_PRINT(1698,
# define YYINITDEPTH 1704,
# define YYMAXDEPTH 1715,
#   define yystrlen(1723,
yystrlen 1727,
#   define yystpcpy 1739,
yystpcpy 1744,
yytnamerr 1766,
yysyntax_error 1817,
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM 1820,
# define YYCASE_(1896,
# undef YYCASE_1907,
yydestruct 1956,
int yychar;1973,
YYSTYPE yylval;1976,
YYLTYPE yylloc1978,
int yynerrs;1984,
yyparse 1992,
#define YYPOPSTACK(2042,
# undef YYSTACK_RELOCATE2130,
# define YYSYNTAX_ERROR 4869,
# undef YYSYNTAX_ERROR4898,

/home/seinoyu/pgsql/master/postgresql/src/pl/plpgsql/src/pl_gram.h,3111
# define YY_PLPGSQL_YY_PL_GRAM_H_INCLUDED38,1703
# define YYDEBUG 41,1782
# define YYTOKENTYPE49,1895
  enum yytokentype50,1916
    IDENT 52,1939
    UIDENT 53,1956
    FCONST 54,1974
    SCONST 55,1992
    USCONST 56,2010
    BCONST 57,2029
    XCONST 58,2047
    Op 59,2065
    ICONST 60,2079
    PARAM 61,2097
    TYPECAST 62,2114
    DOT_DOT 63,2134
    COLON_EQUALS 64,2153
    EQUALS_GREATER 65,2177
    LESS_EQUALS 66,2203
    GREATER_EQUALS 67,2226
    NOT_EQUALS 68,2252
    T_WORD 69,2274
    T_CWORD 70,2292
    T_DATUM 71,2311
    LESS_LESS 72,2330
    GREATER_GREATER 73,2351
    K_ABSOLUTE 74,2378
    K_ALIAS 75,2400
    K_ALL 76,2419
    K_AND 77,2436
    K_ARRAY 78,2453
    K_ASSERT 79,2472
    K_BACKWARD 80,2492
    K_BEGIN 81,2514
    K_BY 82,2533
    K_CALL 83,2549
    K_CASE 84,2567
    K_CHAIN 85,2585
    K_CLOSE 86,2604
    K_COLLATE 87,2623
    K_COLUMN 88,2644
    K_COLUMN_NAME 89,2664
    K_COMMIT 90,2689
    K_CONSTANT 91,2709
    K_CONSTRAINT 92,2731
    K_CONSTRAINT_NAME 93,2755
    K_CONTINUE 94,2784
    K_CURRENT 95,2806
    K_CURSOR 96,2827
    K_DATATYPE 97,2847
    K_DEBUG 98,2869
    K_DECLARE 99,2888
    K_DEFAULT 100,2909
    K_DETAIL 101,2930
    K_DIAGNOSTICS 102,2950
    K_DO 103,2975
    K_DUMP 104,2991
    K_ELSE 105,3009
    K_ELSIF 106,3027
    K_END 107,3046
    K_ERRCODE 108,3063
    K_ERROR 109,3084
    K_EXCEPTION 110,3103
    K_EXECUTE 111,3126
    K_EXIT 112,3147
    K_FETCH 113,3165
    K_FIRST 114,3184
    K_FOR 115,3203
    K_FOREACH 116,3220
    K_FORWARD 117,3241
    K_FROM 118,3262
    K_GET 119,3280
    K_HINT 120,3297
    K_IF 121,3315
    K_IMPORT 122,3331
    K_IN 123,3351
    K_INFO 124,3367
    K_INSERT 125,3385
    K_INTO 126,3405
    K_IS 127,3423
    K_LAST 128,3439
    K_LOG 129,3457
    K_LOOP 130,3474
    K_MESSAGE 131,3492
    K_MESSAGE_TEXT 132,3513
    K_MOVE 133,3539
    K_NEXT 134,3557
    K_NO 135,3575
    K_NOT 136,3591
    K_NOTICE 137,3608
    K_NULL 138,3628
    K_OPEN 139,3646
    K_OPTION 140,3664
    K_OR 141,3684
    K_PERFORM 142,3700
    K_PG_CONTEXT 143,3721
    K_PG_DATATYPE_NAME 144,3745
    K_PG_EXCEPTION_CONTEXT 145,3775
    K_PG_EXCEPTION_DETAIL 146,3809
    K_PG_EXCEPTION_HINT 147,3842
    K_PRINT_STRICT_PARAMS 148,3873
    K_PRIOR 149,3906
    K_QUERY 150,3925
    K_RAISE 151,3944
    K_RELATIVE 152,3963
    K_RESET 153,3985
    K_RETURN 154,4004
    K_RETURNED_SQLSTATE 155,4024
    K_REVERSE 156,4055
    K_ROLLBACK 157,4076
    K_ROW_COUNT 158,4098
    K_ROWTYPE 159,4121
    K_SCHEMA 160,4142
    K_SCHEMA_NAME 161,4162
    K_SCROLL 162,4187
    K_SET 163,4207
    K_SLICE 164,4224
    K_SQLSTATE 165,4243
    K_STACKED 166,4265
    K_STRICT 167,4286
    K_TABLE 168,4306
    K_TABLE_NAME 169,4325
    K_THEN 170,4349
    K_TO 171,4367
    K_TYPE 172,4383
    K_USE_COLUMN 173,4401
    K_USE_VARIABLE 174,4425
    K_USING 175,4451
    K_VARIABLE_CONFLICT 176,4470
    K_WARNING 177,4501
    K_WHEN 178,4522
    K_WHILE 179,4540
union YYSTYPE185,4645

/home/seinoyu/pgsql/master/postgresql/pl_gram.y,1230
		core_YYSTYPE			core_yystype;121,
		int						ival;123,
		char					*str;str124,
		const char				*keyword;keyword125,
		PLword					word;127,
		PLcword					cword;128,
		PLwdatum				wdatum;129,
		bool					boolean;130,
		Oid						oid;131,
			char *name;name134,
			int  lineno;135,
		}						varname;136,
			char *name;name139,
			int  lineno;140,
			PLpgSQL_datum   *scalar;scalar141,
			PLpgSQL_datum   *row;row142,
		}						forvariable;143,
			char *label;label146,
			int  n_initvars;147,
			int  *initvarnos;initvarnos148,
		}						declhdr;149,
			List *stmts;stmts152,
			char *end_label;end_label153,
			int   end_label_location;154,
		}						loop_body;155,
		List					*list;list156,
		PLpgSQL_type			*dtype;dtype157,
		PLpgSQL_datum			*datum;datum158,
		PLpgSQL_var				*var;var159,
		PLpgSQL_expr			*expr;expr160,
		PLpgSQL_stmt			*stmt;stmt161,
		PLpgSQL_condition		*condition;condition162,
		PLpgSQL_exception		*exception;exception163,
		PLpgSQL_exception_block	*exception_block;exception_block164,
		PLpgSQL_nsitem			*nsitem;nsitem165,
		PLpgSQL_diag_item		*diagitem;diagitem166,
		PLpgSQL_stmt_fetch		*fetch;fetch167,
		PLpgSQL_case_when		*casewhen;casewhen168,

/home/seinoyu/pgsql/master/postgresql/pl_gram.h,325
typedef union YYSTYPE YYSTYPE;241,
# define YYSTYPE_IS_TRIVIAL 242,
# define YYSTYPE_IS_DECLARED 243,
typedef struct YYLTYPE YYLTYPE;248,
struct YYLTYPE249,
  int first_line;251,
  int first_column;252,
  int last_line;253,
  int last_column;254,
# define YYLTYPE_IS_DECLARED 256,
# define YYLTYPE_IS_TRIVIAL 257,

/home/seinoyu/pgsql/master/postgresql/psqlscan.c,8864
#define  YY_INT_ALIGNED 44,
#define FLEX_SCANNER48,
#define YY_FLEX_MAJOR_VERSION 49,
#define YY_FLEX_MINOR_VERSION 50,
#define YY_FLEX_SUBMINOR_VERSION 51,
#define FLEX_BETA53,
#define psql_yy_create_buffer_ALREADY_DEFINED57,
#define yy_create_buffer 59,
#define psql_yy_delete_buffer_ALREADY_DEFINED63,
#define yy_delete_buffer 65,
#define psql_yy_scan_buffer_ALREADY_DEFINED69,
#define yy_scan_buffer 71,
#define psql_yy_scan_string_ALREADY_DEFINED75,
#define yy_scan_string 77,
#define psql_yy_scan_bytes_ALREADY_DEFINED81,
#define yy_scan_bytes 83,
#define psql_yy_init_buffer_ALREADY_DEFINED87,
#define yy_init_buffer 89,
#define psql_yy_flush_buffer_ALREADY_DEFINED93,
#define yy_flush_buffer 95,
#define psql_yy_load_buffer_state_ALREADY_DEFINED99,
#define yy_load_buffer_state 101,
#define psql_yy_switch_to_buffer_ALREADY_DEFINED105,
#define yy_switch_to_buffer 107,
#define psql_yypush_buffer_state_ALREADY_DEFINED111,
#define yypush_buffer_state 113,
#define psql_yypop_buffer_state_ALREADY_DEFINED117,
#define yypop_buffer_state 119,
#define psql_yyensure_buffer_stack_ALREADY_DEFINED123,
#define yyensure_buffer_stack 125,
#define psql_yylex_ALREADY_DEFINED129,
#define yylex 131,
#define psql_yyrestart_ALREADY_DEFINED135,
#define yyrestart 137,
#define psql_yylex_init_ALREADY_DEFINED141,
#define yylex_init 143,
#define psql_yylex_init_extra_ALREADY_DEFINED147,
#define yylex_init_extra 149,
#define psql_yylex_destroy_ALREADY_DEFINED153,
#define yylex_destroy 155,
#define psql_yyget_debug_ALREADY_DEFINED159,
#define yyget_debug 161,
#define psql_yyset_debug_ALREADY_DEFINED165,
#define yyset_debug 167,
#define psql_yyget_extra_ALREADY_DEFINED171,
#define yyget_extra 173,
#define psql_yyset_extra_ALREADY_DEFINED177,
#define yyset_extra 179,
#define psql_yyget_in_ALREADY_DEFINED183,
#define yyget_in 185,
#define psql_yyset_in_ALREADY_DEFINED189,
#define yyset_in 191,
#define psql_yyget_out_ALREADY_DEFINED195,
#define yyget_out 197,
#define psql_yyset_out_ALREADY_DEFINED201,
#define yyset_out 203,
#define psql_yyget_leng_ALREADY_DEFINED207,
#define yyget_leng 209,
#define psql_yyget_text_ALREADY_DEFINED213,
#define yyget_text 215,
#define psql_yyget_lineno_ALREADY_DEFINED219,
#define yyget_lineno 221,
#define psql_yyset_lineno_ALREADY_DEFINED225,
#define yyset_lineno 227,
#define psql_yyget_column_ALREADY_DEFINED231,
#define yyget_column 233,
#define psql_yyset_column_ALREADY_DEFINED237,
#define yyset_column 239,
#define psql_yywrap_ALREADY_DEFINED243,
#define yywrap 245,
#define psql_yyget_lval_ALREADY_DEFINED249,
#define yyget_lval 251,
#define psql_yyset_lval_ALREADY_DEFINED255,
#define yyset_lval 257,
#define psql_yyalloc_ALREADY_DEFINED261,
#define yyalloc 263,
#define psql_yyrealloc_ALREADY_DEFINED267,
#define yyrealloc 269,
#define psql_yyfree_ALREADY_DEFINED273,
#define yyfree 275,
#define FLEXINT_H291,
#define __STDC_LIMIT_MACROS 301,
typedef int8_t flex_int8_t;305,
typedef uint8_t flex_uint8_t;306,
typedef int16_t flex_int16_t;307,
typedef uint16_t flex_uint16_t;308,
typedef int32_t flex_int32_t;309,
typedef uint32_t flex_uint32_t;310,
typedef signed char flex_int8_t;312,
typedef short int flex_int16_t;313,
typedef int flex_int32_t;314,
typedef unsigned char flex_uint8_t;315,
typedef unsigned short int flex_uint16_t;316,
typedef unsigned int flex_uint32_t;317,
#define INT8_MIN 321,
#define INT16_MIN 324,
#define INT32_MIN 327,
#define INT8_MAX 330,
#define INT16_MAX 333,
#define INT32_MAX 336,
#define UINT8_MAX 339,
#define UINT16_MAX 342,
#define UINT32_MAX 345,
#define SIZE_MAX 349,
#define yyconst 359,
#define yynoreturn 362,
#define yynoreturn364,
#define YY_NULL 368,
#define YY_SC_TO_UI(373,
#define YY_TYPEDEF_YY_SCANNER_T377,
typedef void* yyscan_t;378,
#define yyin 383,
#define yyout 384,
#define yyextra 385,
#define yyleng 386,
#define yytext 387,
#define yylineno 388,
#define yycolumn 389,
#define yy_flex_debug 390,
#define BEGIN 396,
#define YY_START 401,
#define YYSTATE 402,
#define YY_STATE_EOF(404,
#define YY_NEW_FILE 406,
#define YY_END_OF_BUFFER_CHAR 407,
#define YY_BUF_SIZE 416,
#define YY_BUF_SIZE 418,
#define YY_STATE_BUF_SIZE 424,
#define YY_TYPEDEF_YY_BUFFER_STATE427,
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE428,
#define YY_TYPEDEF_YY_SIZE_T432,
typedef size_t yy_size_t;433,
#define EOB_ACT_CONTINUE_SCAN 436,
#define EOB_ACT_END_OF_FILE 437,
#define EOB_ACT_LAST_MATCH 438,
    #define YY_LESS_LINENO(440,
    #define YY_LINENO_REWIND_TO(441,
#define yyless(444,
#define unput(456,
#define YY_STRUCT_YY_BUFFER_STATE459,
struct yy_buffer_state460,
	FILE *yy_input_file;yy_input_file462,
	char *yy_ch_buf;yy_ch_buf464,
	char *yy_buf_pos;yy_buf_pos465,
	int yy_buf_size;470,
	int yy_n_chars;475,
	int yy_is_our_buffer;481,
	int yy_is_interactive;488,
	int yy_at_bol;494,
    int yy_bs_lineno;496,
    int yy_bs_column;497,
	int yy_fill_buffer;502,
	int yy_buffer_status;504,
#define YY_BUFFER_NEW 506,
#define YY_BUFFER_NORMAL 507,
#define YY_BUFFER_EOF_PENDING 518,
#define YY_CURRENT_BUFFER 529,
#define YY_CURRENT_BUFFER_LVALUE 535,
#define YY_FLUSH_BUFFER 548,
#define yy_new_buffer 558,
#define yy_set_interactive(559,
#define yy_set_bol(568,
#define YY_AT_BOL(577,
#define psql_yywrap(581,
#define YY_SKIP_YYWRAP582,
typedef flex_uint8_t YY_CHAR;583,
typedef int yy_state_type;585,
#define yytext_ptr 587,
static const flex_int16_t yy_nxt[yy_nxt589,
#define YY_DO_BEFORE_ACTION 1903,
#define YY_NUM_RULES 1909,
#define YY_END_OF_BUFFER 1910,
struct yy_trans_info1913,
	flex_int32_t yy_verify;1915,
	flex_int32_t yy_nxt;1916,
static const flex_int16_t yy_accept[yy_accept1918,
static const YY_CHAR yy_ec[yy_ec1941,
#define REJECT 1976,
#define yymore(1977,
#define YY_MORE_ADJ 1978,
#define YY_RESTORE_YY_MORE_OFFSET1979,
#define YY_NO_INPUT 2019,
#define INITIAL 2178,
#define xb 2179,
#define xc 2180,
#define xd 2181,
#define xh 2182,
#define xq 2183,
#define xqs 2184,
#define xe 2185,
#define xdolq 2186,
#define xui 2187,
#define xus 2188,
#define YY_EXTRA_TYPE 2199,
struct yyguts_t2203,
    YY_EXTRA_TYPE yyextra_r;2207,
    FILE *yyin_r,yyin_r2210,
    FILE *yyin_r, *yyout_r;yyout_r2210,
    size_t yy_buffer_stack_top;2211,
    size_t yy_buffer_stack_max;2212,
    YY_BUFFER_STATE * yy_buffer_stack;2213,
    char yy_hold_char;2214,
    int yy_n_chars;2215,
    int yyleng_r;2216,
    char *yy_c_buf_p;yy_c_buf_p2217,
    int yy_init;2218,
    int yy_start;2219,
    int yy_did_buffer_switch_on_eof;2220,
    int yy_start_stack_ptr;2221,
    int yy_start_stack_depth;2222,
    int *yy_start_stack;yy_start_stack2223,
    yy_state_type yy_last_accepting_state;2224,
    char* yy_last_accepting_cpos;2225,
    int yylineno_r;2227,
    int yy_flex_debug_r;2228,
    char *yytext_r;yytext_r2230,
    int yy_more_flag;2231,
    int yy_more_len;2232,
    YYSTYPE * yylval_r;2234,
    #    define yylval 2242,
#define YY_READ_BUF_SIZE 2322,
#define YY_READ_BUF_SIZE 2324,
#define ECHO 2333,
#define YY_INPUT(2340,
#define yyterminate(2377,
#define YY_START_STACK_INCR 2382,
#define YY_FATAL_ERROR(2387,
#define YY_DECL_IS_OURS 2396,
#define YY_DECL 2401,
#define YY_USER_ACTION2409,
#define YY_BREAK 2414,
#define YY_RULE_SETUP 2417,
static int yy_get_next_buffer 3431,
    static yy_state_type yy_get_previous_state 3570,
    static yy_state_type yy_try_NUL_trans 3591,
    static int yyinput 3609,
    void yyrestart 3687,
    void yy_switch_to_buffer 3705,
static void yy_load_buffer_state 3737,
    YY_BUFFER_STATE yy_create_buffer 3752,
    void yy_delete_buffer 3780,
    static void yy_init_buffer 3800,
    void yy_flush_buffer 3829,
void yypush_buffer_state 3859,
void yypop_buffer_state 3890,
static void yyensure_buffer_stack 3910,
YY_BUFFER_STATE yy_scan_buffer 3960,
YY_BUFFER_STATE yy_scan_string 3997,
YY_BUFFER_STATE yy_scan_bytes 4010,
#define YY_EXIT_FAILURE 4041,
static void yynoreturn yy_fatal_error 4044,
#undef yyless4054,
#define yyless(4055,
YY_EXTRA_TYPE yyget_extra 4074,
int yyget_lineno 4083,
int yyget_column 4096,
FILE *yyget_in yyget_in4109,
FILE *yyget_out yyget_out4118,
int yyget_leng 4127,
char *yyget_text yyget_text4137,
void yyset_extra 4147,
void yyset_lineno 4157,
void yyset_column 4172,
void yyset_in 4189,
void yyset_out 4195,
int yyget_debug 4201,
void yyset_debug 4207,
YYSTYPE * yyget_lval 4215,
void yyset_lval 4221,
int yylex_init(4233,
int yylex_init_extra(4260,
static int yy_init_globals 4287,
int yylex_destroy 4321,
static void yy_flex_strncpy 4355,
static int yy_flex_strlen 4367,
void *yyalloc yyalloc4377,
void *yyrealloc yyrealloc4384,
void yyfree 4399,
#define YYTABLES_NAME 4406,

/home/seinoyu/pgsql/master/postgresql/psqlscan.l,149
typedef int YYSTYPE;53,
#define YY_EXTRA_TYPE 59,
#define LEXRES_EOL	63,
#define LEXRES_SEMI	64,
#define LEXRES_BACKSLASH	65,
#define ECHO 68,
psql_scan_create(905,
psql_scan_destroy(926,
psql_scan_set_passthrough(945,
psql_scan_setup(963,
psql_scan(1021,
psql_scan_finish(1139,
psql_scan_reset(1166,
psql_scan_reselect_sql_lexer(1192,
psql_scan_in_quote(1205,
psqlscan_push_new_buffer(1217,
psqlscan_pop_buffer_stack(1256,
psqlscan_select_top_buffer(1274,
psqlscan_var_is_current_source(1297,
psqlscan_prepare_buffer(1319,
psqlscan_emit(1360,
psqlscan_extract_substring(1392,
psqlscan_escape_variable(1428,
psqlscan_test_variable(1457,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/preproc.c,358
#define YYBISON 48,2185
#define YYBISON_VERSION 51,2226
#define YYSKELETON_NAME 54,2281
#define YYPURE 57,2336
#define YYPUSH 60,2375
#define YYPULL 63,2414
#define yyparse 67,2484
#define yylex 68,2521
#define yyerror 69,2556
#define yydebug 70,2593
#define yynerrs 71,2630
#define yylval 72,2667
#define yychar 73,2703
#define yylloc 74,2739

/home/seinoyu/pgsql/master/postgresql/preproc.y,2006
#define YYLLOC_DEFAULT(13,
#define base_yylex 25,
#define bison_gettext_dummy 31,
int struct_level 36,
int braces_open;37,
char *current_function;current_function38,
int ecpg_internal_var 39,
char	*connection connection40,
char	*input_filename input_filename41,
static int	FoundInto 43,
static int	initializer 44,
static int	pacounter 45,
static struct this_type actual_type[actual_type47,
static char *actual_startline[actual_startline48,
static int	varchar_counter 49,
static int	bytea_counter 50,
struct ECPGstruct_member *struct_member_list[struct_member_list53,
static char *ECPGstruct_sizeof ECPGstruct_sizeof56,
static char *forward_name forward_name59,
struct ECPGtype ecpg_no_indicator 61,
struct variable no_indicator 62,
static struct ECPGtype ecpg_query 64,
static void vmmerror(66,
mmerror(104,
mmfatal(114,
cat2_str(137,
cat_str(151,
make2_str(171,
make3_str(183,
make_name(198,
create_questionmarks(204,
adjust_outofscope_cursor_vars(242,
#define SAMEFUNC(493,
add_additional_variables(498,
add_typedef(532,
	double	dval;587,
	char	*str;str588,
	int		ival;589,
	struct	when		action;590,
	struct	index		index;591,
	int		tagname;592,
	struct	this_type	type;593,
	enum	ECPGttype	type_enum;594,
	enum	ECPGdtype	dtype_enum;595,
	struct	fetch_desc	descriptor;596,
	struct  su_symbol	struct_union;597,
	struct	prep		prep;598,
	struct	exec		exec;599,
  case 37616,
  case 42043,
  case 42053,
  case 42063,
  case 42073,
  case 42083,
  case 42093,
  case 42103,
  case 42113,
  case 47331,
  case 47663,
  case 48827,
  case 56053,
  case 56102,
  case 56119,
  case 56136,
  case 56729,
  case 57119,
  case 57182,
  case 57222,
  case 57489,
  case 57676,
  case 57753,
  case 57764,
  case 57780,
  case 57790,
  case 57801,
  case 57867,
  case 57919,
  case 57939,
  case 57952,
  case 57965,
  case 58111,
  case 58146,
  case 58964,
  case 59004,
void base_yyerror(16828,
void parser_init(16835,

/home/seinoyu/pgsql/master/postgresql/preproc.c,60904
#   define YY_CAST(658,
#   define YY_REINTERPRET_CAST(659,
#   define YY_CAST(661,
#   define YY_REINTERPRET_CAST(662,
#    define YY_NULLPTR 668,
#    define YY_NULLPTR 670,
#   define YY_NULLPTR 673,
# undef YYERROR_VERBOSE679,
# define YYERROR_VERBOSE 680,
# define YYERROR_VERBOSE 682,
# define YY_BASE_YY_PREPROC_H_INCLUDED688,
# define YYDEBUG 691,
# define YYTOKENTYPE699,
  enum yytokentype700,
    SQL_ALLOCATE 702,
    SQL_AUTOCOMMIT 703,
    SQL_BOOL 704,
    SQL_BREAK 705,
    SQL_CARDINALITY 706,
    SQL_CONNECT 707,
    SQL_COUNT 708,
    SQL_DATETIME_INTERVAL_CODE 709,
    SQL_DATETIME_INTERVAL_PRECISION 710,
    SQL_DESCRIBE 711,
    SQL_DESCRIPTOR 712,
    SQL_DISCONNECT 713,
    SQL_FOUND 714,
    SQL_FREE 715,
    SQL_GET 716,
    SQL_GO 717,
    SQL_GOTO 718,
    SQL_IDENTIFIED 719,
    SQL_INDICATOR 720,
    SQL_KEY_MEMBER 721,
    SQL_LENGTH 722,
    SQL_LONG 723,
    SQL_NULLABLE 724,
    SQL_OCTET_LENGTH 725,
    SQL_OPEN 726,
    SQL_OUTPUT 727,
    SQL_REFERENCE 728,
    SQL_RETURNED_LENGTH 729,
    SQL_RETURNED_OCTET_LENGTH 730,
    SQL_SCALE 731,
    SQL_SECTION 732,
    SQL_SHORT 733,
    SQL_SIGNED 734,
    SQL_SQLERROR 735,
    SQL_SQLPRINT 736,
    SQL_SQLWARNING 737,
    SQL_START 738,
    SQL_STOP 739,
    SQL_STRUCT 740,
    SQL_UNSIGNED 741,
    SQL_VAR 742,
    SQL_WHENEVER 743,
    S_ADD 744,
    S_AND 745,
    S_ANYTHING 746,
    S_AUTO 747,
    S_CONST 748,
    S_DEC 749,
    S_DIV 750,
    S_DOTPOINT 751,
    S_EQUAL 752,
    S_EXTERN 753,
    S_INC 754,
    S_LSHIFT 755,
    S_MEMPOINT 756,
    S_MEMBER 757,
    S_MOD 758,
    S_MUL 759,
    S_NEQUAL 760,
    S_OR 761,
    S_REGISTER 762,
    S_RSHIFT 763,
    S_STATIC 764,
    S_SUB 765,
    S_VOLATILE 766,
    S_TYPEDEF 767,
    CSTRING 768,
    CVARIABLE 769,
    CPP_LINE 770,
    IP 771,
    IDENT 772,
    UIDENT 773,
    FCONST 774,
    SCONST 775,
    USCONST 776,
    BCONST 777,
    XCONST 778,
    Op 779,
    ICONST 780,
    PARAM 781,
    TYPECAST 782,
    DOT_DOT 783,
    COLON_EQUALS 784,
    EQUALS_GREATER 785,
    LESS_EQUALS 786,
    GREATER_EQUALS 787,
    NOT_EQUALS 788,
    ABORT_P 789,
    ABSOLUTE_P 790,
    ACCESS 791,
    ACTION 792,
    ADD_P 793,
    ADMIN 794,
    AFTER 795,
    AGGREGATE 796,
    ALL 797,
    ALSO 798,
    ALTER 799,
    ALWAYS 800,
    ANALYSE 801,
    ANALYZE 802,
    AND 803,
    ANY 804,
    ARRAY 805,
    AS 806,
    ASC 807,
    ASSERTION 808,
    ASSIGNMENT 809,
    ASYMMETRIC 810,
    AT 811,
    ATTACH 812,
    ATTRIBUTE 813,
    AUTHORIZATION 814,
    BACKWARD 815,
    BEFORE 816,
    BEGIN_P 817,
    BETWEEN 818,
    BIGINT 819,
    BINARY 820,
    BIT 821,
    BOOLEAN_P 822,
    BOTH 823,
    BY 824,
    CACHE 825,
    CALL 826,
    CALLED 827,
    CASCADE 828,
    CASCADED 829,
    CASE 830,
    CAST 831,
    CATALOG_P 832,
    CHAIN 833,
    CHAR_P 834,
    CHARACTER 835,
    CHARACTERISTICS 836,
    CHECK 837,
    CHECKPOINT 838,
    CLASS 839,
    CLOSE 840,
    CLUSTER 841,
    COALESCE 842,
    COLLATE 843,
    COLLATION 844,
    COLUMN 845,
    COLUMNS 846,
    COMMENT 847,
    COMMENTS 848,
    COMMIT 849,
    COMMITTED 850,
    CONCURRENTLY 851,
    CONFIGURATION 852,
    CONFLICT 853,
    CONNECTION 854,
    CONSTRAINT 855,
    CONSTRAINTS 856,
    CONTENT_P 857,
    CONTINUE_P 858,
    CONVERSION_P 859,
    COPY 860,
    COST 861,
    CREATE 862,
    CROSS 863,
    CSV 864,
    CUBE 865,
    CURRENT_P 866,
    CURRENT_CATALOG 867,
    CURRENT_DATE 868,
    CURRENT_ROLE 869,
    CURRENT_SCHEMA 870,
    CURRENT_TIME 871,
    CURRENT_TIMESTAMP 872,
    CURRENT_USER 873,
    CURSOR 874,
    CYCLE 875,
    DATA_P 876,
    DATABASE 877,
    DAY_P 878,
    DEALLOCATE 879,
    DEC 880,
    DECIMAL_P 881,
    DECLARE 882,
    DEFAULT 883,
    DEFAULTS 884,
    DEFERRABLE 885,
    DEFERRED 886,
    DEFINER 887,
    DELETE_P 888,
    DELIMITER 889,
    DELIMITERS 890,
    DEPENDS 891,
    DESC 892,
    DETACH 893,
    DICTIONARY 894,
    DISABLE_P 895,
    DISCARD 896,
    DISTINCT 897,
    DO 898,
    DOCUMENT_P 899,
    DOMAIN_P 900,
    DOUBLE_P 901,
    DROP 902,
    EACH 903,
    ELSE 904,
    ENABLE_P 905,
    ENCODING 906,
    ENCRYPTED 907,
    END_P 908,
    ENUM_P 909,
    ESCAPE 910,
    EVENT 911,
    EXCEPT 912,
    EXCLUDE 913,
    EXCLUDING 914,
    EXCLUSIVE 915,
    EXECUTE 916,
    EXISTS 917,
    EXPLAIN 918,
    EXPRESSION 919,
    EXTENSION 920,
    EXTERNAL 921,
    EXTRACT 922,
    FALSE_P 923,
    FAMILY 924,
    FETCH 925,
    FILTER 926,
    FIRST_P 927,
    FLOAT_P 928,
    FOLLOWING 929,
    FOR 930,
    FORCE 931,
    FOREIGN 932,
    FORWARD 933,
    FREEZE 934,
    FROM 935,
    FULL 936,
    FUNCTION 937,
    FUNCTIONS 938,
    GENERATED 939,
    GLOBAL 940,
    GRANT 941,
    GRANTED 942,
    GREATEST 943,
    GROUP_P 944,
    GROUPING 945,
    GROUPS 946,
    HANDLER 947,
    HAVING 948,
    HEADER_P 949,
    HOLD 950,
    HOUR_P 951,
    IDENTITY_P 952,
    IF_P 953,
    ILIKE 954,
    IMMEDIATE 955,
    IMMUTABLE 956,
    IMPLICIT_P 957,
    IMPORT_P 958,
    IN_P 959,
    INCLUDE 960,
    INCLUDING 961,
    INCREMENT 962,
    INDEX 963,
    INDEXES 964,
    INHERIT 965,
    INHERITS 966,
    INITIALLY 967,
    INLINE_P 968,
    INNER_P 969,
    INOUT 970,
    INPUT_P 971,
    INSENSITIVE 972,
    INSERT 973,
    INSTEAD 974,
    INT_P 975,
    INTEGER 976,
    INTERSECT 977,
    INTERVAL 978,
    INTO 979,
    INVOKER 980,
    IS 981,
    ISNULL 982,
    ISOLATION 983,
    JOIN 984,
    KEY 985,
    LABEL 986,
    LANGUAGE 987,
    LARGE_P 988,
    LAST_P 989,
    LATERAL_P 990,
    LEADING 991,
    LEAKPROOF 992,
    LEAST 993,
    LEFT 994,
    LEVEL 995,
    LIKE 996,
    LIMIT 997,
    LISTEN 998,
    LOAD 999,
    LOCAL 1000,
    LOCALTIME 1001,
    LOCALTIMESTAMP 1002,
    LOCATION 1003,
    LOCK_P 1004,
    LOCKED 1005,
    LOGGED 1006,
    MAPPING 1007,
    MATCH 1008,
    MATERIALIZED 1009,
    MAXVALUE 1010,
    METHOD 1011,
    MINUTE_P 1012,
    MINVALUE 1013,
    MODE 1014,
    MONTH_P 1015,
    MOVE 1016,
    NAME_P 1017,
    NAMES 1018,
    NATIONAL 1019,
    NATURAL 1020,
    NCHAR 1021,
    NEW 1022,
    NEXT 1023,
    NFC 1024,
    NFD 1025,
    NFKC 1026,
    NFKD 1027,
    NO 1028,
    NONE 1029,
    NORMALIZE 1030,
    NORMALIZED 1031,
    NOT 1032,
    NOTHING 1033,
    NOTIFY 1034,
    NOTNULL 1035,
    NOWAIT 1036,
    NULL_P 1037,
    NULLIF 1038,
    NULLS_P 1039,
    NUMERIC 1040,
    OBJECT_P 1041,
    OF 1042,
    OFF 1043,
    OFFSET 1044,
    OIDS 1045,
    OLD 1046,
    ON 1047,
    ONLY 1048,
    OPERATOR 1049,
    OPTION 1050,
    OPTIONS 1051,
    OR 1052,
    ORDER 1053,
    ORDINALITY 1054,
    OTHERS 1055,
    OUT_P 1056,
    OUTER_P 1057,
    OVER 1058,
    OVERLAPS 1059,
    OVERLAY 1060,
    OVERRIDING 1061,
    OWNED 1062,
    OWNER 1063,
    PARALLEL 1064,
    PARSER 1065,
    PARTIAL 1066,
    PARTITION 1067,
    PASSING 1068,
    PASSWORD 1069,
    PLACING 1070,
    PLANS 1071,
    POLICY 1072,
    POSITION 1073,
    PRECEDING 1074,
    PRECISION 1075,
    PRESERVE 1076,
    PREPARE 1077,
    PREPARED 1078,
    PRIMARY 1079,
    PRIOR 1080,
    PRIVILEGES 1081,
    PROCEDURAL 1082,
    PROCEDURE 1083,
    PROCEDURES 1084,
    PROGRAM 1085,
    PUBLICATION 1086,
    QUOTE 1087,
    RANGE 1088,
    READ 1089,
    REAL 1090,
    REASSIGN 1091,
    RECHECK 1092,
    RECURSIVE 1093,
    REF 1094,
    REFERENCES 1095,
    REFERENCING 1096,
    REFRESH 1097,
    REINDEX 1098,
    RELATIVE_P 1099,
    RELEASE 1100,
    RENAME 1101,
    REPEATABLE 1102,
    REPLACE 1103,
    REPLICA 1104,
    RESET 1105,
    RESTART 1106,
    RESTRICT 1107,
    RETURNING 1108,
    RETURNS 1109,
    REVOKE 1110,
    RIGHT 1111,
    ROLE 1112,
    ROLLBACK 1113,
    ROLLUP 1114,
    ROUTINE 1115,
    ROUTINES 1116,
    ROW 1117,
    ROWS 1118,
    RULE 1119,
    SAVEPOINT 1120,
    SCHEMA 1121,
    SCHEMAS 1122,
    SCROLL 1123,
    SEARCH 1124,
    SECOND_P 1125,
    SECURITY 1126,
    SELECT 1127,
    SEQUENCE 1128,
    SEQUENCES 1129,
    SERIALIZABLE 1130,
    SERVER 1131,
    SESSION 1132,
    SESSION_USER 1133,
    SET 1134,
    SETS 1135,
    SETOF 1136,
    SHARE 1137,
    SHOW 1138,
    SIMILAR 1139,
    SIMPLE 1140,
    SKIP 1141,
    SMALLINT 1142,
    SNAPSHOT 1143,
    SOME 1144,
    SQL_P 1145,
    STABLE 1146,
    STANDALONE_P 1147,
    START 1148,
    STATEMENT 1149,
    STATISTICS 1150,
    STDIN 1151,
    STDOUT 1152,
    STORAGE 1153,
    STORED 1154,
    STRICT_P 1155,
    STRIP_P 1156,
    SUBSCRIPTION 1157,
    SUBSTRING 1158,
    SUPPORT 1159,
    SYMMETRIC 1160,
    SYSID 1161,
    SYSTEM_P 1162,
    TABLE 1163,
    TABLES 1164,
    TABLESAMPLE 1165,
    TABLESPACE 1166,
    TEMP 1167,
    TEMPLATE 1168,
    TEMPORARY 1169,
    TEXT_P 1170,
    THEN 1171,
    TIES 1172,
    TIME 1173,
    TIMESTAMP 1174,
    TO 1175,
    TRAILING 1176,
    TRANSACTION 1177,
    TRANSFORM 1178,
    TREAT 1179,
    TRIGGER 1180,
    TRIM 1181,
    TRUE_P 1182,
    TRUNCATE 1183,
    TRUSTED 1184,
    TYPE_P 1185,
    TYPES_P 1186,
    UESCAPE 1187,
    UNBOUNDED 1188,
    UNCOMMITTED 1189,
    UNENCRYPTED 1190,
    UNION 1191,
    UNIQUE 1192,
    UNKNOWN 1193,
    UNLISTEN 1194,
    UNLOGGED 1195,
    UNTIL 1196,
    UPDATE 1197,
    USER 1198,
    USING 1199,
    VACUUM 1200,
    VALID 1201,
    VALIDATE 1202,
    VALIDATOR 1203,
    VALUE_P 1204,
    VALUES 1205,
    VARCHAR 1206,
    VARIADIC 1207,
    VARYING 1208,
    VERBOSE 1209,
    VERSION_P 1210,
    VIEW 1211,
    VIEWS 1212,
    VOLATILE 1213,
    WHEN 1214,
    WHERE 1215,
    WHITESPACE_P 1216,
    WINDOW 1217,
    WITH 1218,
    WITHIN 1219,
    WITHOUT 1220,
    WORK 1221,
    WRAPPER 1222,
    WRITE 1223,
    XML_P 1224,
    XMLATTRIBUTES 1225,
    XMLCONCAT 1226,
    XMLELEMENT 1227,
    XMLEXISTS 1228,
    XMLFOREST 1229,
    XMLNAMESPACES 1230,
    XMLPARSE 1231,
    XMLPI 1232,
    XMLROOT 1233,
    XMLSERIALIZE 1234,
    XMLTABLE 1235,
    YEAR_P 1236,
    YES_P 1237,
    ZONE 1238,
    NOT_LA 1239,
    NULLS_LA 1240,
    WITH_LA 1241,
    POSTFIXOP 1242,
    UMINUS 1243,
union YYSTYPE1249,
    break;37623,
    break;37631,
    break;37643,
    break;37651,
    break;37659,
    break;37667,
    break;37675,
    break;37682,
    break;37690,
    break;37698,
    break;37706,
    break;37714,
    break;37722,
    break;37730,
    break;37737,
    break;37745,
    break;37753,
    break;37761,
    break;37769,
    break;37777,
    break;37785,
    break;37793,
    break;37801,
    break;37809,
    break;37817,
    break;37825,
    break;37833,
    break;37841,
    break;37849,
    break;37856,
    break;37864,
    break;37871,
    break;37879,
    break;37886,
    break;37894,
    break;37902,
    break;37910,
    break;37918,
    break;37926,
    break;37934,
    break;37942,
    break;37949,
    break;37957,
    break;37965,
    break;37973,
    break;37981,
    break;37989,
    break;37997,
    break;38005,
    break;38013,
    break;38021,
    break;38029,
    break;38037,
    break;38045,
    break;38053,
    break;38061,
    break;38069,
    break;38077,
    break;38084,
    break;38092,
    break;38099,
    break;38107,
    break;38114,
    break;38122,
    break;38130,
    break;38138,
    break;38146,
    break;38154,
    break;38162,
    break;38170,
    break;38178,
    break;38186,
    break;38194,
    break;38202,
    break;38210,
    break;38218,
    break;38225,
    break;38233,
    break;38241,
    break;38249,
    break;38257,
    break;38265,
    break;38273,
    break;38281,
    break;38289,
    break;38297,
    break;38305,
    break;38313,
    break;38321,
    break;38329,
    break;38337,
    break;38345,
    break;38353,
    break;38361,
    break;38369,
    break;38377,
    break;38385,
    break;38393,
    break;38401,
    break;38408,
    break;38416,
    break;38424,
    break;38432,
    break;38440,
    break;38448,
    break;38456,
    break;38464,
    break;38472,
    break;38480,
    break;38488,
    break;38496,
    break;38504,
    break;38512,
    break;38520,
    break;38528,
    break;38536,
    break;38544,
    break;38552,
    break;38560,
    break;38567,
    break;38575,
    break;38582,
    break;38590,
    break;38598,
    break;38606,
    break;38614,
    break;38621,
    break;38629,
    break;38638,
    break;38646,
    break;38653,
    break;38661,
    break;38669,
    break;38677,
    break;38685,
    break;38693,
    break;38700,
    break;38708,
    break;38716,
    break;38724,
    break;38732,
    break;38739,
    break;38747,
    break;38755,
    break;38763,
    break;38771,
    break;38779,
    break;38787,
    break;38795,
    break;38803,
    break;38810,
    break;38818,
    break;38825,
    break;38833,
    break;38841,
    break;38849,
    break;38857,
    break;38865,
    break;38873,
    break;38881,
    break;38888,
    break;38896,
    break;38904,
    break;38911,
    break;38919,
    break;38927,
    break;38935,
    break;38942,
    break;38950,
    break;38957,
    break;38965,
    break;38972,
    break;38980,
    break;38988,
    break;38996,
    break;39004,
    break;39012,
    break;39020,
    break;39028,
    break;39036,
    break;39043,
    break;39051,
    break;39059,
    break;39067,
    break;39075,
    break;39082,
    break;39090,
    break;39098,
    break;39106,
    break;39114,
    break;39122,
    break;39130,
    break;39137,
    break;39145,
    break;39152,
    break;39160,
    break;39168,
    break;39176,
    break;39184,
    break;39192,
    break;39200,
    break;39208,
    break;39216,
    break;39224,
    break;39232,
    break;39240,
    break;39248,
    break;39256,
    break;39264,
    break;39272,
    break;39280,
    break;39288,
    break;39295,
    break;39303,
    break;39311,
    break;39319,
    break;39327,
    break;39335,
    break;39343,
    break;39351,
    break;39359,
    break;39367,
    break;39374,
    break;39382,
    break;39390,
    break;39398,
    break;39405,
    break;39413,
    break;39421,
    break;39429,
    break;39436,
    break;39444,
    break;39451,
    break;39459,
    break;39467,
    break;39474,
    break;39482,
    break;39490,
    break;39498,
    break;39506,
    break;39514,
    break;39521,
    break;39529,
    break;39537,
    break;39546,
    break;39554,
    break;39562,
    break;39570,
    break;39577,
    break;39585,
    break;39593,
    break;39601,
    break;39609,
    break;39617,
    break;39625,
    break;39633,
    break;39641,
    break;39649,
    break;39657,
    break;39665,
    break;39673,
    break;39681,
    break;39689,
    break;39697,
    break;39705,
    break;39713,
    break;39721,
    break;39729,
    break;39737,
    break;39745,
    break;39753,
    break;39760,
    break;39768,
    break;39776,
    break;39784,
    break;39791,
    break;39799,
    break;39807,
    break;39815,
    break;39823,
    break;39831,
    break;39839,
    break;39847,
    break;39855,
    break;39863,
    break;39871,
    break;39879,
    break;39887,
    break;39895,
    break;39903,
    break;39911,
    break;39918,
    break;39926,
    break;39934,
    break;39942,
    break;39949,
    break;39957,
    break;39965,
    break;39973,
    break;39981,
    break;39989,
    break;39997,
    break;40005,
    break;40013,
    break;40021,
    break;40029,
    break;40037,
    break;40044,
    break;40052,
    break;40060,
    break;40068,
    break;40076,
    break;40084,
    break;40092,
    break;40100,
    break;40108,
    break;40116,
    break;40124,
    break;40131,
    break;40139,
    break;40146,
    break;40154,
    break;40161,
    break;40169,
    break;40176,
    break;40184,
    break;40191,
    break;40199,
    break;40206,
    break;40214,
    break;40222,
    break;40230,
    break;40238,
    break;40246,
    break;40254,
    break;40262,
    break;40270,
    break;40278,
    break;40286,
    break;40294,
    break;40302,
    break;40310,
    break;40318,
    break;40326,
    break;40334,
    break;40342,
    break;40350,
    break;40358,
    break;40366,
    break;40374,
    break;40381,
    break;40389,
    break;40397,
    break;40405,
    break;40413,
    break;40421,
    break;40429,
    break;40437,
    break;40445,
    break;40453,
    break;40460,
    break;40468,
    break;40475,
    break;40483,
    break;40491,
    break;40499,
    break;40506,
    break;40514,
    break;40522,
    break;40530,
    break;40538,
    break;40545,
    break;40553,
    break;40561,
    break;40569,
    break;40577,
    break;40585,
    break;40592,
    break;40599,
    break;40607,
    break;40615,
    break;40623,
    break;40631,
    break;40639,
    break;40647,
    break;40655,
    break;40663,
    break;40671,
    break;40679,
    break;40687,
    break;40695,
    break;40703,
    break;40711,
    break;40719,
    break;40727,
    break;40735,
    break;40743,
    break;40751,
    break;40760,
    break;40768,
    break;40776,
    break;40784,
    break;40792,
    break;40800,
    break;40808,
    break;40816,
    break;40824,
    break;40832,
    break;40840,
    break;40848,
    break;40856,
    break;40864,
    break;40872,
    break;40880,
    break;40888,
    break;40896,
    break;40904,
    break;40912,
    break;40920,
    break;40928,
    break;40936,
    break;40944,
    break;40952,
    break;40960,
    break;40968,
    break;40976,
    break;40984,
    break;40992,
    break;41000,
    break;41008,
    break;41016,
    break;41023,
    break;41031,
    break;41039,
    break;41047,
    break;41055,
    break;41063,
    break;41071,
    break;41079,
    break;41086,
    break;41094,
    break;41102,
    break;41110,
    break;41118,
    break;41126,
    break;41134,
    break;41142,
    break;41150,
    break;41158,
    break;41165,
    break;41173,
    break;41180,
    break;41188,
    break;41196,
    break;41203,
    break;41212,
    break;41219,
    break;41227,
    break;41235,
    break;41243,
    break;41251,
    break;41259,
    break;41267,
    break;41275,
    break;41283,
    break;41291,
    break;41299,
    break;41307,
    break;41315,
    break;41323,
    break;41331,
    break;41339,
    break;41347,
    break;41355,
    break;41363,
    break;41371,
    break;41379,
    break;41387,
    break;41395,
    break;41403,
    break;41411,
    break;41419,
    break;41427,
    break;41435,
    break;41443,
    break;41451,
    break;41459,
    break;41467,
    break;41475,
    break;41483,
    break;41491,
    break;41499,
    break;41507,
    break;41515,
    break;41523,
    break;41531,
    break;41539,
    break;41547,
    break;41555,
    break;41563,
    break;41571,
    break;41579,
    break;41587,
    break;41595,
    break;41603,
    break;41611,
    break;41619,
    break;41627,
    break;41635,
    break;41643,
    break;41651,
    break;41659,
    break;41667,
    break;41675,
    break;41683,
    break;41691,
    break;41699,
    break;41707,
    break;41715,
    break;41723,
    break;41731,
    break;41739,
    break;41746,
    break;41754,
    break;41762,
    break;41770,
    break;41778,
    break;41786,
    break;41794,
    break;41802,
    break;41810,
    break;41818,
    break;41826,
    break;41834,
    break;41842,
    break;41850,
    break;41858,
    break;41866,
    break;41874,
    break;41882,
    break;41890,
    break;41898,
    break;41906,
    break;41914,
    break;41922,
    break;41930,
    break;41938,
    break;41946,
    break;41954,
    break;41962,
    break;41970,
    break;41978,
    break;41986,
    break;41994,
    break;42001,
    break;42009,
    break;42017,
    break;42025,
    break;42033,
    break;42041,
    break;42051,
    break;42061,
    break;42071,
    break;42081,
    break;42091,
    break;42101,
    break;42111,
    break;42121,
    break;42136,
    break;42151,
    break;42166,
    break;42181,
    break;42196,
    break;42211,
    break;42231,
    break;42251,
    break;42271,
    break;42286,
    break;42306,
    break;42321,
    break;42341,
    break;42356,
    break;42364,
    break;42372,
    break;42380,
    break;42387,
    break;42395,
    break;42403,
    break;42411,
    break;42419,
    break;42427,
    break;42435,
    break;42443,
    break;42451,
    break;42459,
    break;42467,
    break;42475,
    break;42483,
    break;42491,
    break;42499,
    break;42507,
    break;42515,
    break;42523,
    break;42531,
    break;42539,
    break;42547,
    break;42555,
    break;42563,
    break;42571,
    break;42579,
    break;42587,
    break;42595,
    break;42603,
    break;42611,
    break;42619,
    break;42627,
    break;42635,
    break;42643,
    break;42651,
    break;42659,
    break;42667,
    break;42675,
    break;42683,
    break;42691,
    break;42699,
    break;42706,
    break;42714,
    break;42722,
    break;42730,
    break;42738,
    break;42745,
    break;42753,
    break;42760,
    break;42768,
    break;42776,
    break;42783,
    break;42791,
    break;42799,
    break;42807,
    break;42815,
    break;42823,
    break;42831,
    break;42839,
    break;42847,
    break;42855,
    break;42863,
    break;42871,
    break;42879,
    break;42887,
    break;42895,
    break;42903,
    break;42910,
    break;42918,
    break;42925,
    break;42933,
    break;42940,
    break;42948,
    break;42955,
    break;42963,
    break;42971,
    break;42979,
    break;42987,
    break;42995,
    break;43003,
    break;43011,
    break;43019,
    break;43026,
    break;43034,
    break;43042,
    break;43050,
    break;43057,
    break;43065,
    break;43072,
    break;43080,
    break;43088,
    break;43095,
    break;43103,
    break;43111,
    break;43118,
    break;43126,
    break;43134,
    break;43142,
    break;43150,
    break;43158,
    break;43165,
    break;43173,
    break;43181,
    break;43189,
    break;43197,
    break;43205,
    break;43213,
    break;43221,
    break;43229,
    break;43237,
    break;43245,
    break;43253,
    break;43261,
    break;43269,
    break;43277,
    break;43285,
    break;43293,
    break;43301,
    break;43309,
    break;43317,
    break;43325,
    break;43333,
    break;43341,
    break;43349,
    break;43357,
    break;43365,
    break;43373,
    break;43381,
    break;43389,
    break;43397,
    break;43405,
    break;43413,
    break;43421,
    break;43430,
    break;43438,
    break;43446,
    break;43454,
    break;43462,
    break;43470,
    break;43478,
    break;43486,
    break;43494,
    break;43502,
    break;43510,
    break;43518,
    break;43526,
    break;43534,
    break;43542,
    break;43550,
    break;43558,
    break;43566,
    break;43574,
    break;43582,
    break;43590,
    break;43598,
    break;43606,
    break;43614,
    break;43622,
    break;43630,
    break;43638,
    break;43646,
    break;43654,
    break;43662,
    break;43670,
    break;43678,
    break;43686,
    break;43694,
    break;43702,
    break;43710,
    break;43718,
    break;43726,
    break;43734,
    break;43741,
    break;43749,
    break;43757,
    break;43765,
    break;43773,
    break;43781,
    break;43789,
    break;43797,
    break;43805,
    break;43813,
    break;43820,
    break;43828,
    break;43836,
    break;43844,
    break;43852,
    break;43860,
    break;43868,
    break;43876,
    break;43884,
    break;43892,
    break;43900,
    break;43908,
    break;43916,
    break;43924,
    break;43932,
    break;43940,
    break;43948,
    break;43956,
    break;43964,
    break;43972,
    break;43980,
    break;43988,
    break;43996,
    break;44004,
    break;44012,
    break;44020,
    break;44028,
    break;44036,
    break;44044,
    break;44052,
    break;44059,
    break;44067,
    break;44075,
    break;44082,
    break;44090,
    break;44098,
    break;44106,
    break;44114,
    break;44122,
    break;44130,
    break;44138,
    break;44146,
    break;44154,
    break;44162,
    break;44170,
    break;44178,
    break;44186,
    break;44194,
    break;44202,
    break;44210,
    break;44218,
    break;44226,
    break;44234,
    break;44242,
    break;44250,
    break;44258,
    break;44266,
    break;44274,
    break;44282,
    break;44290,
    break;44298,
    break;44306,
    break;44314,
    break;44322,
    break;44330,
    break;44338,
    break;44346,
    break;44354,
    break;44362,
    break;44370,
    break;44378,
    break;44386,
    break;44394,
    break;44402,
    break;44410,
    break;44418,
    break;44426,
    break;44434,
    break;44442,
    break;44450,
    break;44458,
    break;44466,
    break;44474,
    break;44482,
    break;44490,
    break;44498,
    break;44506,
    break;44514,
    break;44522,
    break;44530,
    break;44538,
    break;44546,
    break;44554,
    break;44562,
    break;44570,
    break;44578,
    break;44586,
    break;44594,
    break;44602,
    break;44610,
    break;44618,
    break;44626,
    break;44634,
    break;44642,
    break;44650,
    break;44658,
    break;44666,
    break;44674,
    break;44682,
    break;44690,
    break;44697,
    break;44705,
    break;44712,
    break;44720,
    break;44728,
    break;44736,
    break;44744,
    break;44752,
    break;44760,
    break;44768,
    break;44775,
    break;44783,
    break;44791,
    break;44799,
    break;44807,
    break;44815,
    break;44823,
    break;44831,
    break;44839,
    break;44847,
    break;44855,
    break;44863,
    break;44871,
    break;44879,
    break;44887,
    break;44895,
    break;44903,
    break;44911,
    break;44919,
    break;44927,
    break;44935,
    break;44943,
    break;44951,
    break;44959,
    break;44967,
    break;44975,
    break;44983,
    break;44991,
    break;44999,
    break;45007,
    break;45015,
    break;45023,
    break;45031,
    break;45039,
    break;45047,
    break;45055,
    break;45063,
    break;45071,
    break;45079,
    break;45087,
    break;45095,
    break;45103,
    break;45111,
    break;45119,
    break;45127,
    break;45135,
    break;45143,
    break;45151,
    break;45159,
    break;45167,
    break;45175,
    break;45183,
    break;45191,
    break;45199,
    break;45207,
    break;45215,
    break;45223,
    break;45231,
    break;45239,
    break;45247,
    break;45255,
    break;45263,
    break;45271,
    break;45279,
    break;45287,
    break;45294,
    break;45302,
    break;45310,
    break;45318,
    break;45326,
    break;45334,
    break;45342,
    break;45350,
    break;45358,
    break;45366,
    break;45374,
    break;45382,
    break;45390,
    break;45398,
    break;45406,
    break;45414,
    break;45422,
    break;45430,
    break;45438,
    break;45446,
    break;45454,
    break;45462,
    break;45470,
    break;45478,
    break;45486,
    break;45494,
    break;45502,
    break;45510,
    break;45518,
    break;45526,
    break;45534,
    break;45541,
    break;45549,
    break;45557,
    break;45565,
    break;45573,
    break;45581,
    break;45589,
    break;45596,
    break;45604,
    break;45612,
    break;45619,
    break;45627,
    break;45635,
    break;45643,
    break;45651,
    break;45659,
    break;45667,
    break;45675,
    break;45683,
    break;45691,
    break;45699,
    break;45707,
    break;45715,
    break;45723,
    break;45731,
    break;45739,
    break;45747,
    break;45755,
    break;45763,
    break;45771,
    break;45778,
    break;45786,
    break;45794,
    break;45802,
    break;45810,
    break;45818,
    break;45826,
    break;45834,
    break;45842,
    break;45850,
    break;45857,
    break;45865,
    break;45873,
    break;45880,
    break;45888,
    break;45896,
    break;45905,
    break;45914,
    break;45922,
    break;45930,
    break;45938,
    break;45945,
    break;45953,
    break;45961,
    break;45969,
    break;45976,
    break;45984,
    break;45992,
    break;46000,
    break;46008,
    break;46016,
    break;46024,
    break;46032,
    break;46040,
    break;46048,
    break;46056,
    break;46064,
    break;46072,
    break;46080,
    break;46087,
    break;46095,
    break;46103,
    break;46111,
    break;46119,
    break;46127,
    break;46135,
    break;46143,
    break;46151,
    break;46159,
    break;46167,
    break;46175,
    break;46183,
    break;46191,
    break;46199,
    break;46207,
    break;46215,
    break;46223,
    break;46231,
    break;46239,
    break;46247,
    break;46255,
    break;46263,
    break;46271,
    break;46278,
    break;46286,
    break;46294,
    break;46302,
    break;46310,
    break;46318,
    break;46326,
    break;46334,
    break;46342,
    break;46350,
    break;46358,
    break;46366,
    break;46374,
    break;46382,
    break;46390,
    break;46397,
    break;46405,
    break;46413,
    break;46421,
    break;46429,
    break;46437,
    break;46445,
    break;46453,
    break;46461,
    break;46469,
    break;46477,
    break;46485,
    break;46493,
    break;46501,
    break;46508,
    break;46516,
    break;46523,
    break;46531,
    break;46538,
    break;46546,
    break;46553,
    break;46561,
    break;46568,
    break;46576,
    break;46583,
    break;46591,
    break;46599,
    break;46607,
    break;46615,
    break;46622,
    break;46630,
    break;46638,
    break;46646,
    break;46654,
    break;46662,
    break;46670,
    break;46678,
    break;46686,
    break;46694,
    break;46702,
    break;46710,
    break;46718,
    break;46726,
    break;46734,
    break;46742,
    break;46750,
    break;46758,
    break;46766,
    break;46774,
    break;46782,
    break;46789,
    break;46799,
    break;46809,
    break;46817,
    break;46824,
    break;46832,
    break;46840,
    break;46848,
    break;46856,
    break;46865,
    break;46873,
    break;46881,
    break;46889,
    break;46896,
    break;46904,
    break;46912,
    break;46920,
    break;46928,
    break;46936,
    break;46944,
    break;46952,
    break;46960,
    break;46968,
    break;46976,
    break;46984,
    break;46992,
    break;47000,
    break;47008,
    break;47016,
    break;47023,
    break;47031,
    break;47039,
    break;47046,
    break;47054,
    break;47061,
    break;47069,
    break;47077,
    break;47084,
    break;47092,
    break;47100,
    break;47107,
    break;47115,
    break;47123,
    break;47131,
    break;47139,
    break;47147,
    break;47155,
    break;47163,
    break;47171,
    break;47179,
    break;47186,
    break;47194,
    break;47202,
    break;47209,
    break;47217,
    break;47225,
    break;47233,
    break;47241,
    break;47249,
    break;47257,
    break;47265,
    break;47273,
    break;47321,
    break;47329,
    break;47341,
    break;47348,
    break;47356,
    break;47364,
    break;47372,
    break;47380,
    break;47391,
    break;47399,
    break;47407,
    break;47415,
    break;47423,
    break;47431,
    break;47439,
    break;47447,
    break;47455,
    break;47463,
    break;47471,
    break;47479,
    break;47487,
    break;47495,
    break;47503,
    break;47511,
    break;47519,
    break;47527,
    break;47535,
    break;47543,
    break;47551,
    break;47559,
    break;47567,
    break;47575,
    break;47583,
    break;47591,
    break;47599,
    break;47607,
    break;47615,
    break;47623,
    break;47631,
    break;47639,
    break;47646,
    break;47654,
    break;47661,
    break;47670,
    break;47676,
    break;47683,
    break;47691,
    break;47699,
    break;47707,
    break;47715,
    break;47723,
    break;47731,
    break;47739,
    break;47747,
    break;47755,
    break;47763,
    break;47770,
    break;47778,
    break;47786,
    break;47793,
    break;47801,
    break;47809,
    break;47817,
    break;47824,
    break;47832,
    break;47839,
    break;47847,
    break;47855,
    break;47863,
    break;47871,
    break;47879,
    break;47887,
    break;47895,
    break;47903,
    break;47911,
    break;47919,
    break;47926,
    break;47934,
    break;47943,
    break;47951,
    break;47959,
    break;47967,
    break;47975,
    break;47983,
    break;47991,
    break;47999,
    break;48007,
    break;48015,
    break;48023,
    break;48031,
    break;48039,
    break;48047,
    break;48055,
    break;48063,
    break;48071,
    break;48079,
    break;48087,
    break;48095,
    break;48102,
    break;48110,
    break;48118,
    break;48126,
    break;48134,
    break;48142,
    break;48150,
    break;48158,
    break;48166,
    break;48174,
    break;48182,
    break;48190,
    break;48198,
    break;48205,
    break;48213,
    break;48221,
    break;48229,
    break;48236,
    break;48244,
    break;48252,
    break;48260,
    break;48268,
    break;48276,
    break;48284,
    break;48292,
    break;48300,
    break;48307,
    break;48315,
    break;48323,
    break;48331,
    break;48338,
    break;48346,
    break;48354,
    break;48362,
    break;48370,
    break;48378,
    break;48386,
    break;48394,
    break;48402,
    break;48413,
    break;48424,
    break;48432,
    break;48440,
    break;48448,
    break;48456,
    break;48464,
    break;48472,
    break;48480,
    break;48488,
    break;48496,
    break;48504,
    break;48512,
    break;48520,
    break;48528,
    break;48535,
    break;48543,
    break;48551,
    break;48559,
    break;48567,
    break;48574,
    break;48582,
    break;48590,
    break;48598,
    break;48606,
    break;48614,
    break;48621,
    break;48629,
    break;48637,
    break;48645,
    break;48653,
    break;48661,
    break;48669,
    break;48677,
    break;48685,
    break;48693,
    break;48701,
    break;48709,
    break;48717,
    break;48725,
    break;48732,
    break;48740,
    break;48748,
    break;48756,
    break;48764,
    break;48772,
    break;48780,
    break;48787,
    break;48795,
    break;48802,
    break;48810,
    break;48817,
    break;48825,
    break;48834,
    break;48841,
    break;48849,
    break;48856,
    break;48864,
    break;48872,
    break;48880,
    break;48888,
    break;48896,
    break;48904,
    break;48912,
    break;48920,
    break;48928,
    break;48936,
    break;48944,
    break;48952,
    break;48960,
    break;48968,
    break;48976,
    break;48984,
    break;48992,
    break;49000,
    break;49008,
    break;49016,
    break;49022,
    break;49028,
    break;49036,
    break;49044,
    break;49052,
    break;49060,
    break;49074,
    break;49088,
    break;49098,
    break;49106,
    break;49114,
    break;49122,
    break;49130,
    break;49138,
    break;49146,
    break;49154,
    break;49162,
    break;49170,
    break;49178,
    break;49186,
    break;49194,
    break;49202,
    break;49210,
    break;49217,
    break;49225,
    break;49233,
    break;49241,
    break;49249,
    break;49257,
    break;49265,
    break;49273,
    break;49281,
    break;49289,
    break;49297,
    break;49305,
    break;49313,
    break;49320,
    break;49328,
    break;49336,
    break;49344,
    break;49352,
    break;49360,
    break;49368,
    break;49376,
    break;49384,
    break;49392,
    break;49400,
    break;49408,
    break;49416,
    break;49424,
    break;49432,
    break;49440,
    break;49448,
    break;49456,
    break;49464,
    break;49472,
    break;49479,
    break;49487,
    break;49495,
    break;49503,
    break;49511,
    break;49519,
    break;49527,
    break;49535,
    break;49542,
    break;49550,
    break;49558,
    break;49566,
    break;49574,
    break;49582,
    break;49590,
    break;49598,
    break;49606,
    break;49614,
    break;49622,
    break;49630,
    break;49638,
    break;49646,
    break;49653,
    break;49661,
    break;49669,
    break;49677,
    break;49685,
    break;49693,
    break;49701,
    break;49709,
    break;49717,
    break;49725,
    break;49733,
    break;49741,
    break;49749,
    break;49757,
    break;49765,
    break;49773,
    break;49781,
    break;49789,
    break;49797,
    break;49805,
    break;49813,
    break;49821,
    break;49829,
    break;49837,
    break;49845,
    break;49853,
    break;49861,
    break;49869,
    break;49877,
    break;49885,
    break;49893,
    break;49901,
    break;49909,
    break;49917,
    break;49925,
    break;49933,
    break;49941,
    break;49949,
    break;49957,
    break;49965,
    break;49973,
    break;49981,
    break;49989,
    break;49997,
    break;50005,
    break;50013,
    break;50021,
    break;50029,
    break;50037,
    break;50045,
    break;50053,
    break;50061,
    break;50069,
    break;50077,
    break;50085,
    break;50093,
    break;50101,
    break;50109,
    break;50117,
    break;50125,
    break;50133,
    break;50141,
    break;50149,
    break;50158,
    break;50166,
    break;50174,
    break;50182,
    break;50190,
    break;50198,
    break;50206,
    break;50214,
    break;50222,
    break;50230,
    break;50238,
    break;50246,
    break;50254,
    break;50262,
    break;50270,
    break;50278,
    break;50286,
    break;50294,
    break;50302,
    break;50310,
    break;50318,
    break;50326,
    break;50334,
    break;50342,
    break;50350,
    break;50358,
    break;50366,
    break;50374,
    break;50382,
    break;50390,
    break;50398,
    break;50406,
    break;50414,
    break;50422,
    break;50430,
    break;50438,
    break;50446,
    break;50454,
    break;50462,
    break;50470,
    break;50478,
    break;50486,
    break;50494,
    break;50502,
    break;50510,
    break;50518,
    break;50526,
    break;50534,
    break;50542,
    break;50550,
    break;50558,
    break;50566,
    break;50574,
    break;50582,
    break;50590,
    break;50598,
    break;50606,
    break;50614,
    break;50622,
    break;50630,
    break;50638,
    break;50646,
    break;50654,
    break;50662,
    break;50670,
    break;50678,
    break;50686,
    break;50694,
    break;50702,
    break;50710,
    break;50718,
    break;50726,
    break;50734,
    break;50742,
    break;50750,
    break;50758,
    break;50766,
    break;50774,
    break;50782,
    break;50790,
    break;50798,
    break;50806,
    break;50814,
    break;50822,
    break;50830,
    break;50838,
    break;50846,
    break;50854,
    break;50862,
    break;50870,
    break;50878,
    break;50886,
    break;50894,
    break;50902,
    break;50910,
    break;50918,
    break;50926,
    break;50934,
    break;50942,
    break;50950,
    break;50958,
    break;50966,
    break;50974,
    break;50982,
    break;50990,
    break;50998,
    break;51006,
    break;51013,
    break;51021,
    break;51029,
    break;51037,
    break;51045,
    break;51053,
    break;51061,
    break;51069,
    break;51077,
    break;51085,
    break;51092,
    break;51100,
    break;51108,
    break;51116,
    break;51124,
    break;51132,
    break;51140,
    break;51148,
    break;51155,
    break;51163,
    break;51170,
    break;51178,
    break;51185,
    break;51193,
    break;51201,
    break;51209,
    break;51217,
    break;51225,
    break;51232,
    break;51240,
    break;51248,
    break;51255,
    break;51263,
    break;51270,
    break;51278,
    break;51286,
    break;51294,
    break;51301,
    break;51309,
    break;51317,
    break;51325,
    break;51333,
    break;51341,
    break;51349,
    break;51357,
    break;51365,
    break;51373,
    break;51381,
    break;51389,
    break;51396,
    break;51404,
    break;51412,
    break;51420,
    break;51428,
    break;51436,
    break;51444,
    break;51452,
    break;51460,
    break;51468,
    break;51476,
    break;51484,
    break;51492,
    break;51500,
    break;51508,
    break;51516,
    break;51524,
    break;51532,
    break;51540,
    break;51548,
    break;51556,
    break;51564,
    break;51572,
    break;51580,
    break;51588,
    break;51596,
    break;51604,
    break;51612,
    break;51620,
    break;51628,
    break;51636,
    break;51644,
    break;51652,
    break;51660,
    break;51668,
    break;51676,
    break;51684,
    break;51692,
    break;51700,
    break;51708,
    break;51716,
    break;51724,
    break;51732,
    break;51740,
    break;51748,
    break;51756,
    break;51764,
    break;51772,
    break;51780,
    break;51787,
    break;51795,
    break;51803,
    break;51811,
    break;51819,
    break;51827,
    break;51835,
    break;51843,
    break;51851,
    break;51859,
    break;51867,
    break;51875,
    break;51883,
    break;51891,
    break;51899,
    break;51907,
    break;51914,
    break;51922,
    break;51930,
    break;51938,
    break;51946,
    break;51954,
    break;51962,
    break;51969,
    break;51977,
    break;51985,
    break;51993,
    break;52001,
    break;52009,
    break;52017,
    break;52025,
    break;52033,
    break;52041,
    break;52049,
    break;52056,
    break;52064,
    break;52071,
    break;52079,
    break;52087,
    break;52095,
    break;52103,
    break;52111,
    break;52119,
    break;52127,
    break;52134,
    break;52142,
    break;52150,
    break;52157,
    break;52165,
    break;52173,
    break;52180,
    break;52188,
    break;52195,
    break;52203,
    break;52211,
    break;52219,
    break;52227,
    break;52235,
    break;52243,
    break;52251,
    break;52259,
    break;52267,
    break;52275,
    break;52283,
    break;52291,
    break;52299,
    break;52307,
    break;52315,
    break;52323,
    break;52331,
    break;52339,
    break;52347,
    break;52355,
    break;52363,
    break;52371,
    break;52379,
    break;52387,
    break;52395,
    break;52403,
    break;52411,
    break;52419,
    break;52427,
    break;52435,
    break;52441,
    break;52447,
    break;52453,
    break;52461,
    break;52467,
    break;52475,
    break;52483,
    break;52491,
    break;52499,
    break;52507,
    break;52515,
    break;52523,
    break;52531,
    break;52539,
    break;52547,
    break;52555,
    break;52563,
    break;52571,
    break;52579,
    break;52587,
    break;52595,
    break;52603,
    break;52611,
    break;52619,
    break;52627,
    break;52635,
    break;52643,
    break;52651,
    break;52659,
    break;52667,
    break;52675,
    break;52683,
    break;52691,
    break;52699,
    break;52707,
    break;52715,
    break;52723,
    break;52731,
    break;52739,
    break;52747,
    break;52755,
    break;52763,
    break;52771,
    break;52779,
    break;52787,
    break;52795,
    break;52803,
    break;52811,
    break;52819,
    break;52827,
    break;52835,
    break;52843,
    break;52851,
    break;52859,
    break;52867,
    break;52875,
    break;52883,
    break;52891,
    break;52899,
    break;52907,
    break;52915,
    break;52923,
    break;52931,
    break;52939,
    break;52947,
    break;52955,
    break;52963,
    break;52971,
    break;52979,
    break;52987,
    break;52995,
    break;53003,
    break;53011,
    break;53019,
    break;53027,
    break;53035,
    break;53043,
    break;53051,
    break;53059,
    break;53067,
    break;53075,
    break;53083,
    break;53091,
    break;53099,
    break;53107,
    break;53115,
    break;53123,
    break;53131,
    break;53139,
    break;53147,
    break;53155,
    break;53163,
    break;53171,
    break;53179,
    break;53187,
    break;53195,
    break;53203,
    break;53211,
    break;53219,
    break;53227,
    break;53235,
    break;53243,
    break;53251,
    break;53259,
    break;53267,
    break;53275,
    break;53283,
    break;53291,
    break;53299,
    break;53307,
    break;53315,
    break;53323,
    break;53331,
    break;53339,
    break;53347,
    break;53355,
    break;53363,
    break;53371,
    break;53379,
    break;53387,
    break;53395,
    break;53403,
    break;53411,
    break;53419,
    break;53427,
    break;53435,
    break;53443,
    break;53451,
    break;53459,
    break;53467,
    break;53475,
    break;53483,
    break;53491,
    break;53499,
    break;53507,
    break;53515,
    break;53523,
    break;53531,
    break;53539,
    break;53547,
    break;53555,
    break;53563,
    break;53571,
    break;53579,
    break;53587,
    break;53595,
    break;53603,
    break;53611,
    break;53619,
    break;53627,
    break;53635,
    break;53643,
    break;53651,
    break;53659,
    break;53667,
    break;53675,
    break;53683,
    break;53691,
    break;53699,
    break;53707,
    break;53715,
    break;53723,
    break;53731,
    break;53739,
    break;53747,
    break;53755,
    break;53763,
    break;53771,
    break;53779,
    break;53787,
    break;53795,
    break;53803,
    break;53811,
    break;53819,
    break;53827,
    break;53835,
    break;53843,
    break;53851,
    break;53859,
    break;53867,
    break;53875,
    break;53883,
    break;53891,
    break;53899,
    break;53907,
    break;53915,
    break;53923,
    break;53931,
    break;53939,
    break;53947,
    break;53955,
    break;53963,
    break;53971,
    break;53979,
    break;53987,
    break;53995,
    break;54003,
    break;54011,
    break;54019,
    break;54027,
    break;54035,
    break;54043,
    break;54051,
    break;54059,
    break;54067,
    break;54075,
    break;54083,
    break;54091,
    break;54099,
    break;54107,
    break;54115,
    break;54123,
    break;54131,
    break;54139,
    break;54147,
    break;54155,
    break;54163,
    break;54171,
    break;54179,
    break;54187,
    break;54195,
    break;54203,
    break;54211,
    break;54219,
    break;54227,
    break;54235,
    break;54243,
    break;54251,
    break;54259,
    break;54267,
    break;54275,
    break;54283,
    break;54291,
    break;54299,
    break;54307,
    break;54315,
    break;54323,
    break;54331,
    break;54339,
    break;54347,
    break;54355,
    break;54363,
    break;54371,
    break;54379,
    break;54387,
    break;54395,
    break;54403,
    break;54411,
    break;54419,
    break;54427,
    break;54435,
    break;54443,
    break;54451,
    break;54459,
    break;54467,
    break;54475,
    break;54483,
    break;54491,
    break;54499,
    break;54507,
    break;54515,
    break;54523,
    break;54531,
    break;54539,
    break;54547,
    break;54555,
    break;54563,
    break;54571,
    break;54579,
    break;54587,
    break;54595,
    break;54603,
    break;54611,
    break;54619,
    break;54627,
    break;54635,
    break;54643,
    break;54651,
    break;54659,
    break;54667,
    break;54675,
    break;54683,
    break;54691,
    break;54699,
    break;54707,
    break;54715,
    break;54723,
    break;54731,
    break;54739,
    break;54747,
    break;54755,
    break;54763,
    break;54771,
    break;54779,
    break;54787,
    break;54795,
    break;54803,
    break;54811,
    break;54819,
    break;54827,
    break;54835,
    break;54843,
    break;54851,
    break;54859,
    break;54867,
    break;54875,
    break;54883,
    break;54891,
    break;54899,
    break;54907,
    break;54915,
    break;54923,
    break;54931,
    break;54939,
    break;54947,
    break;54955,
    break;54963,
    break;54971,
    break;54979,
    break;54987,
    break;54995,
    break;55003,
    break;55011,
    break;55019,
    break;55027,
    break;55035,
    break;55043,
    break;55051,
    break;55059,
    break;55067,
    break;55075,
    break;55083,
    break;55091,
    break;55099,
    break;55107,
    break;55115,
    break;55123,
    break;55131,
    break;55139,
    break;55147,
    break;55155,
    break;55163,
    break;55171,
    break;55179,
    break;55187,
    break;55195,
    break;55203,
    break;55211,
    break;55219,
    break;55227,
    break;55235,
    break;55243,
    break;55251,
    break;55259,
    break;55267,
    break;55275,
    break;55283,
    break;55291,
    break;55299,
    break;55307,
    break;55315,
    break;55323,
    break;55331,
    break;55339,
    break;55347,
    break;55355,
    break;55363,
    break;55371,
    break;55379,
    break;55387,
    break;55395,
    break;55403,
    break;55411,
    break;55419,
    break;55427,
    break;55435,
    break;55443,
    break;55451,
    break;55459,
    break;55467,
    break;55475,
    break;55483,
    break;55491,
    break;55499,
    break;55507,
    break;55515,
    break;55523,
    break;55531,
    break;55539,
    break;55547,
    break;55555,
    break;55563,
    break;55571,
    break;55579,
    break;55587,
    break;55595,
    break;55603,
    break;55611,
    break;55619,
    break;55627,
    break;55635,
    break;55643,
    break;55651,
    break;55659,
    break;55667,
    break;55675,
    break;55683,
    break;55691,
    break;55699,
    break;55707,
    break;55715,
    break;55723,
    break;55731,
    break;55739,
    break;55747,
    break;55755,
    break;55763,
    break;55771,
    break;55779,
    break;55787,
    break;55795,
    break;55803,
    break;55811,
    break;55819,
    break;55827,
    break;55835,
    break;55843,
    break;55851,
    break;55859,
    break;55867,
    break;55875,
    break;55883,
    break;55891,
    break;55899,
    break;55907,
    break;55915,
    break;55923,
    break;55931,
    break;55939,
    break;55947,
    break;55955,
    break;55963,
    break;55971,
    break;55979,
    break;55987,
    break;55995,
    break;56003,
    break;56011,
    break;56019,
    break;56027,
    break;56035,
    break;56043,
    break;56051,
    break;56057,
    break;56067,
    break;56073,
    break;56079,
    break;56085,
    break;56100,
    break;56106,
    break;56117,
    break;56123,
    break;56134,
    break;56148,
    break;56154,
    break;56160,
    break;56166,
    break;56172,
    break;56188,
    break;56208,
    break;56216,
    break;56229,
    break;56235,
    break;56241,
    break;56255,
    break;56266,
    break;56272,
    break;56278,
    break;56284,
    break;56290,
    break;56296,
    break;56302,
    break;56308,
    break;56314,
    break;56320,
    break;56326,
    break;56332,
    break;56338,
    break;56344,
    break;56350,
    break;56356,
    break;56367,
    break;56378,
    break;56396,
    break;56432,
    break;56446,
    break;56452,
    break;56460,
    break;56474,
    break;56480,
    break;56486,
    break;56492,
    break;56498,
    break;56516,
    break;56522,
    break;56581,
    break;56591,
    break;56597,
    break;56603,
    break;56609,
    break;56615,
    break;56621,
    break;56627,
    break;56633,
    break;56639,
    break;56645,
    break;56651,
    break;56657,
    break;56667,
    break;56673,
    break;56679,
    break;56685,
    break;56691,
    break;56697,
    break;56703,
    break;56709,
    break;56715,
    break;56721,
    break;56727,
    break;56737,
    break;56749,
    break;56763,
    break;56771,
    break;56785,
    break;56793,
    break;56801,
    break;56807,
    break;56813,
    break;56819,
    break;56825,
    break;56831,
    break;56837,
    break;56843,
    break;56849,
    break;56855,
    break;56861,
    break;56867,
    break;56879,
    break;56900,
    break;56912,
    break;56939,
    break;57057,
    break;57093,
    break;57099,
    break;57105,
    break;57111,
    break;57117,
    break;57128,
    break;57174,
    break;57180,
    break;57190,
    break;57201,
    break;57211,
    break;57220,
    break;57229,
    break;57237,
    break;57243,
    break;57249,
    break;57255,
    break;57261,
    break;57267,
    break;57273,
    break;57279,
    break;57285,
    break;57291,
    break;57297,
    break;57303,
    break;57309,
    break;57315,
    break;57321,
    break;57327,
    break;57333,
    break;57339,
    break;57345,
    break;57351,
    break;57357,
    break;57363,
    break;57369,
    break;57380,
    break;57481,
    break;57487,
    break;57496,
    break;57502,
    break;57508,
    break;57514,
    break;57523,
    break;57529,
    break;57535,
    break;57541,
    break;57547,
    break;57553,
    break;57559,
    break;57565,
    break;57571,
    break;57577,
    break;57583,
    break;57589,
    break;57595,
    break;57605,
    break;57611,
    break;57617,
    break;57623,
    break;57629,
    break;57638,
    break;57647,
    break;57656,
    break;57665,
    break;57674,
    break;57685,
    break;57691,
    break;57697,
    break;57703,
    break;57709,
    break;57715,
    break;57721,
    break;57727,
    break;57733,
    break;57739,
    break;57745,
    break;57751,
    break;57762,
    break;57778,
    break;57788,
    break;57799,
    break;57809,
    break;57815,
    break;57821,
    break;57830,
    break;57839,
    break;57845,
    break;57851,
    break;57857,
    break;57865,
    break;57877,
    break;57885,
    break;57891,
    break;57897,
    break;57903,
    break;57909,
    break;57917,
    break;57929,
    break;57937,
    break;57950,
    break;57963,
    break;57977,
    break;57983,
    break;57989,
    break;57995,
    break;58001,
    break;58007,
    break;58013,
    break;58019,
    break;58025,
    break;58031,
    break;58037,
    break;58043,
    break;58049,
    break;58055,
    break;58061,
    break;58067,
    break;58073,
    break;58079,
    break;58085,
    break;58091,
    break;58097,
    break;58103,
    break;58109,
    break;58119,
    break;58132,
    break;58138,
    break;58144,
    break;58154,
    break;58217,
    break;58227,
    break;58237,
    break;58247,
    break;58257,
    break;58267,
    break;58277,
    break;58287,
    break;58297,
    break;58307,
    break;58317,
    break;58327,
    break;58337,
    break;58347,
    break;58353,
    break;58359,
    break;58365,
    break;58371,
    break;58377,
    break;58383,
    break;58389,
    break;58395,
    break;58401,
    break;58407,
    break;58413,
    break;58419,
    break;58425,
    break;58431,
    break;58437,
    break;58443,
    break;58449,
    break;58455,
    break;58461,
    break;58467,
    break;58473,
    break;58479,
    break;58485,
    break;58491,
    break;58497,
    break;58503,
    break;58509,
    break;58515,
    break;58521,
    break;58527,
    break;58533,
    break;58539,
    break;58545,
    break;58551,
    break;58557,
    break;58563,
    break;58569,
    break;58575,
    break;58581,
    break;58587,
    break;58593,
    break;58599,
    break;58605,
    break;58611,
    break;58617,
    break;58623,
    break;58629,
    break;58635,
    break;58641,
    break;58647,
    break;58653,
    break;58659,
    break;58665,
    break;58671,
    break;58677,
    break;58683,
    break;58689,
    break;58695,
    break;58701,
    break;58707,
    break;58713,
    break;58719,
    break;58725,
    break;58731,
    break;58737,
    break;58743,
    break;58749,
    break;58755,
    break;58761,
    break;58767,
    break;58773,
    break;58779,
    break;58785,
    break;58791,
    break;58797,
    break;58803,
    break;58809,
    break;58815,
    break;58821,
    break;58827,
    break;58833,
    break;58839,
    break;58845,
    break;58851,
    break;58857,
    break;58863,
    break;58869,
    break;58875,
    break;58881,
    break;58887,
    break;58893,
    break;58899,
    break;58905,
    break;58911,
    break;58917,
    break;58926,
    break;58932,
    break;58938,
    break;58944,
    break;58950,
    break;58962,
    break;58975,
    break;58984,
    break;58990,
    break;58996,
    break;59002,
    break;59037,
    break;59043,
    break;59049,
    break;59055,
    break;59061,
    break;59067,
    break;59073,
    break;59079,
    break;59085,
    break;59091,
    break;59097,
    break;59103,
    break;59109,
    break;59115,
    break;59121,
    break;59127,
    break;59133,
    break;59139,
    break;59145,
    break;59151,
    break;59157,
    break;59163,
    break;59169,
    break;59175,
    break;59181,
    break;59187,
    break;59193,
    break;59199,
    break;59205,
    break;59211,
    break;59217,
    break;59223,
    break;59229,
    break;59235,
    break;59241,
    break;59247,
    break;59253,
    break;59259,
    break;59265,
    break;59271,
    break;59277,
    break;59283,
    break;59289,
    break;59295,
    break;59301,
    break;59307,
    break;59313,
    break;59319,
    break;59325,
    break;59331,
    break;59337,
    break;59343,
    break;59349,
    break;59355,
    break;59361,
    break;59367,
    break;59373,
    break;59379,
    break;59385,
    break;59391,
    break;59397,
    break;59403,
    break;59409,
    break;59415,
    break;59421,
    break;59427,
    break;59433,
    break;59439,
    break;59445,
    break;59451,
    break;59457,
    break;59463,
    break;59469,
    break;59475,
    break;59481,
    break;59487,
    break;59493,
    break;59499,
    break;59505,
    break;59511,
    break;59517,
    break;59523,
    break;59529,
    break;59535,
    break;59541,
    break;59547,
    break;59553,
    break;59559,
    break;59565,
    break;59571,
    break;59577,
    break;59583,
    break;59589,
    break;59599,
    break;59605,
    break;59611,
    break;59617,
    break;59623,
    break;59629,
    break;59635,
    break;59641,
    break;59647,
    break;59653,
    break;59666,
    break;59672,
    break;59678,
      default: break;59683,
  yylen 59699,
  *++yyvsp yyvsp59702,
  *++yylsp yylsp59703,
    const int yylhs 59709,
    const int yyi 59710,
    yystate 59711,
  goto yynewstate;59716,
  yytoken 59725,
# define YYSYNTAX_ERROR 59734,
# undef YYSYNTAX_ERROR59763,
  yyerror_range[yyerror_range59767,
  goto yyerrlab1;59790,
  yylen 59805,
  yystate 59807,
  goto yyerrlab1;59808,
  yyerrstatus 59815,
      yyn 59819,
      yyerror_range[yyerror_range59835,
      yystate 59839,
  *++yyvsp yyvsp59844,
  yyerror_range[yyerror_range59847,
  *++yylsp yylsp59851,
  yystate 59856,
  goto yynewstate;59857,
  yyresult 59864,
  goto yyreturn;59865,
  yyresult 59872,
  goto yyreturn;59873,
  yyresult 59882,
typedef union YYSTYPE YYSTYPE;1270,
# define YYSTYPE_IS_TRIVIAL 1271,
# define YYSTYPE_IS_DECLARED 1272,
typedef struct YYLTYPE YYLTYPE;1277,
struct YYLTYPE1278,
  int first_line;1280,
  int first_column;1281,
  int last_line;1282,
  int last_column;1283,
# define YYLTYPE_IS_DECLARED 1285,
# define YYLTYPE_IS_TRIVIAL 1286,
# undef short1299,
#  define YY_STDINT_H1310,
typedef __INT_LEAST8_TYPE__ yytype_int8;1320,
typedef int_least8_t yytype_int8;1322,
typedef signed char yytype_int8;1324,
typedef __INT_LEAST16_TYPE__ yytype_int16;1328,
typedef int_least16_t yytype_int16;1330,
typedef short yytype_int16;1332,
typedef __UINT_LEAST8_TYPE__ yytype_uint8;1336,
typedef uint_least8_t yytype_uint8;1339,
typedef unsigned char yytype_uint8;1341,
typedef short yytype_uint8;1343,
typedef __UINT_LEAST16_TYPE__ yytype_uint16;1347,
typedef uint_least16_t yytype_uint16;1350,
typedef unsigned short yytype_uint16;1352,
typedef int yytype_uint16;1354,
#  define YYPTRDIFF_T 1359,
#  define YYPTRDIFF_MAXIMUM 1360,
#  define YYPTRDIFF_T 1365,
#  define YYPTRDIFF_MAXIMUM 1366,
#  define YYPTRDIFF_T 1368,
#  define YYPTRDIFF_MAXIMUM 1369,
#  define YYSIZE_T 1375,
#  define YYSIZE_T 1377,
#  define YYSIZE_T 1380,
#  define YYSIZE_T 1382,
#define YYSIZE_MAXIMUM 1386,
#define YYSIZEOF(1392,
typedef yytype_int16 yy_state_t;1395,
typedef int yy_state_fast_t;1398,
#   define YY_(1404,
#  define YY_(1408,
#  define YY_ATTRIBUTE_PURE 1414,
#  define YY_ATTRIBUTE_PURE1416,
#  define YY_ATTRIBUTE_UNUSED 1422,
#  define YY_ATTRIBUTE_UNUSED1424,
# define YYUSE(1430,
# define YYUSE(1432,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN 1437,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END 1441,
# define YY_INITIAL_VALUE(1444,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN1447,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END1448,
# define YY_INITIAL_VALUE(1451,
# define YY_IGNORE_USELESS_CAST_BEGIN 1455,
# define YY_IGNORE_USELESS_CAST_END 1458,
# define YY_IGNORE_USELESS_CAST_BEGIN1462,
# define YY_IGNORE_USELESS_CAST_END1463,
#define YY_ASSERT(1467,
#    define YYSTACK_ALLOC 1476,
#    define YYSTACK_ALLOC 1480,
#    define alloca 1483,
#    define YYSTACK_ALLOC 1485,
#      define EXIT_SUCCESS 1490,
#  define YYSTACK_FREE(1499,
#   define YYSTACK_ALLOC_MAXIMUM 1505,
#  define YYSTACK_ALLOC 1508,
#  define YYSTACK_FREE 1509,
#   define YYSTACK_ALLOC_MAXIMUM 1511,
#    define EXIT_SUCCESS 1518,
#   define YYMALLOC 1522,
#   define YYFREE 1528,
union yyalloc1543,
  yy_state_t yyss_alloc;1545,
  YYSTYPE yyvs_alloc;1546,
  YYLTYPE yyls_alloc;1547,
# define YYSTACK_GAP_MAXIMUM 1551,
# define YYSTACK_BYTES(1555,
# define YYCOPY_NEEDED 1560,
# define YYSTACK_RELOCATE(1567,
#   define YYCOPY(1585,
#   define YYCOPY(1588,
#define YYFINAL 1601,
#define YYLAST 1603,
#define YYNTOKENS 1606,
#define YYNNTS 1608,
#define YYNRULES 1610,
#define YYNSTATES 1612,
#define YYUNDEFTOK 1614,
#define YYMAXUTOK 1615,
#define YYTRANSLATE(1620,
static const yytype_int16 yytranslate[yytranslate1625,
static const yytype_int16 yyrline[yyrline1711,
static const char *const yytname[yytname2037,
static const yytype_int16 yytoknum[yytoknum2366,
#define YYPACT_NINF 2428,
#define yypact_value_is_default(2430,
#define YYTABLE_NINF 2433,
#define yytable_value_is_error(2435,
static const int yypact[yypact2440,
static const yytype_int16 yydefact[yydefact3059,
static const yytype_int16 yypgoto[yypgoto3676,
static const yytype_int16 yydefgoto[yydefgoto3762,
static const yytype_int16 yytable[yytable3850,
static const yytype_int16 yycheck[yycheck18165,
static const yytype_int16 yystos[yystos32482,
static const yytype_int16 yyr1[yyr133099,
static const yytype_int8 yyr2[yyr233422,
#define yyerrok 33745,
#define yyclearin 33746,
#define YYEMPTY 33747,
#define YYEOF 33748,
#define YYACCEPT 33750,
#define YYABORT 33751,
#define YYERROR 33752,
#define YYRECOVERING(33755,
#define YYBACKUP(33757,
#define YYTERROR 33775,
#define YYERRCODE 33776,
# define YYLLOC_DEFAULT(33784,
#define YYRHSLOC(33803,
#  define YYFPRINTF 33811,
# define YYDPRINTF(33814,
yy_location_print_ 33832,
#  define YY_LOCATION_PRINT(33856,
#  define YY_LOCATION_PRINT(33860,
# define YY_SYMBOL_PRINT(33865,
yy_symbol_value_print 33882,
yy_symbol_print 33904,
yy_stack_print 33921,
# define YY_STACK_PRINT(33932,
yy_reduce_print 33944,
# define YY_REDUCE_PRINT(33963,
int yydebug;33971,
# define YYDPRINTF(33973,
# define YY_SYMBOL_PRINT(33974,
# define YY_STACK_PRINT(33975,
# define YY_REDUCE_PRINT(33976,
# define YYINITDEPTH 33982,
# define YYMAXDEPTH 33993,
#   define yystrlen(34001,
yystrlen 34005,
#   define yystpcpy 34017,
yystpcpy 34022,
yytnamerr 34044,
yysyntax_error 34095,
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM 34098,
# define YYCASE_(34174,
# undef YYCASE_34185,
yydestruct 34234,
int yychar;34251,
YYSTYPE yylval;34254,
YYLTYPE yylloc34256,
int yynerrs;34262,
yyparse 34270,
#define YYPOPSTACK(34320,
# undef YYSTACK_RELOCATE34408,
    break;35566,
    break;35574,
    break;35582,
    break;35590,
    break;35597,
    break;35605,
    break;35612,
    break;35620,
    break;35627,
    break;35635,
    break;35643,
    break;35651,
    break;35660,
    break;35668,
    break;35676,
    break;35684,
    break;35692,
    break;35700,
    break;35708,
    break;35716,
    break;35724,
    break;35732,
    break;35740,
    break;35748,
    break;35756,
    break;35764,
    break;35772,
    break;35779,
    break;35787,
    break;35795,
    break;35803,
    break;35811,
    break;35819,
    break;35827,
    break;35835,
    break;35843,
    break;35851,
    break;35859,
    break;35867,
    break;35875,
    break;35883,
    break;35891,
    break;35899,
    break;35907,
    break;35915,
    break;35924,
    break;35933,
    break;35941,
    break;35948,
    break;35956,
    break;35963,
    break;35971,
    break;35979,
    break;35987,
    break;35995,
    break;36003,
    break;36011,
    break;36019,
    break;36027,
    break;36035,
    break;36043,
    break;36051,
    break;36059,
    break;36067,
    break;36075,
    break;36083,
    break;36091,
    break;36099,
    break;36107,
    break;36115,
    break;36124,
    break;36132,
    break;36140,
    break;36148,
    break;36156,
    break;36164,
    break;36172,
    break;36180,
    break;36188,
    break;36196,
    break;36204,
    break;36212,
    break;36220,
    break;36234,
    break;36242,
    break;36250,
    break;36258,
    break;36266,
    break;36274,
    break;36282,
    break;36290,
    break;36298,
    break;36306,
    break;36314,
    break;36322,
    break;36330,
    break;36338,
    break;36346,
    break;36354,
    break;36362,
    break;36370,
    break;36377,
    break;36385,
    break;36393,
    break;36401,
    break;36409,
    break;36417,
    break;36425,
    break;36433,
    break;36441,
    break;36449,
    break;36457,
    break;36465,
    break;36473,
    break;36481,
    break;36489,
    break;36497,
    break;36505,
    break;36513,
    break;36522,
    break;36530,
    break;36538,
    break;36546,
    break;36554,
    break;36562,
    break;36570,
    break;36578,
    break;36586,
    break;36594,
    break;36602,
    break;36610,
    break;36618,
    break;36626,
    break;36634,
    break;36642,
    break;36650,
    break;36658,
    break;36666,
    break;36674,
    break;36682,
    break;36690,
    break;36698,
    break;36706,
    break;36714,
    break;36722,
    break;36730,
    break;36738,
    break;36746,
    break;36754,
    break;36762,
    break;36770,
    break;36778,
    break;36786,
    break;36794,
    break;36802,
    break;36810,
    break;36818,
    break;36826,
    break;36834,
    break;36842,
    break;36850,
    break;36858,
    break;36866,
    break;36874,
    break;36882,
    break;36890,
    break;36898,
    break;36906,
    break;36914,
    break;36922,
    break;36930,
    break;36938,
    break;36946,
    break;36954,
    break;36962,
    break;36970,
    break;36978,
    break;36986,
    break;36994,
    break;37002,
    break;37010,
    break;37018,
    break;37026,
    break;37034,
    break;37042,
    break;37050,
    break;37058,
    break;37066,
    break;37074,
    break;37082,
    break;37090,
    break;37098,
    break;37106,
    break;37114,
    break;37122,
    break;37130,
    break;37138,
    break;37146,
    break;37154,
    break;37162,
    break;37170,
    break;37178,
    break;37186,
    break;37194,
    break;37202,
    break;37210,
    break;37218,
    break;37226,
    break;37234,
    break;37242,
    break;37250,
    break;37258,
    break;37266,
    break;37274,
    break;37282,
    break;37290,
    break;37298,
    break;37306,
    break;37314,
    break;37321,
    break;37329,
    break;37336,
    break;37344,
    break;37351,
    break;37359,
    break;37367,
    break;37375,
    break;37383,
    break;37391,
    break;37399,
    break;37406,
    break;37414,
    break;37422,
    break;37430,
    break;37438,
    break;37446,
    break;37454,
    break;37462,
    break;37470,
    break;37478,
    break;37486,
    break;37494,
    break;37502,
    break;37510,
    break;37518,
    break;37526,
    break;37534,
    break;37542,
    break;37550,
    break;37558,
    break;37566,
    break;37574,
    break;37582,
    break;37590,
    break;37598,
    break;37606,
    break;37614,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/preproc.y,7193
#define YYLLOC_DEFAULT(13,252
#define base_yylex 25,542
#define bison_gettext_dummy 31,673
int struct_level 36,777
int braces_open;37,799
char *current_function;current_function38,842
int ecpg_internal_var 39,866
char	*connection connection40,893
char	*input_filename input_filename41,918
static int	FoundInto 43,948
static int	initializer 44,974
static int	pacounter 45,1002
static struct this_type actual_type[actual_type47,1131
static char *actual_startline[actual_startline48,1182
static int	varchar_counter 49,1227
static int	bytea_counter 50,1259
struct ECPGstruct_member *struct_member_list[struct_member_list53,1363
static char *ECPGstruct_sizeof ECPGstruct_sizeof56,1494
static char *forward_name forward_name59,1600
struct ECPGtype ecpg_no_indicator 61,1635
struct variable no_indicator 62,1722
static struct ECPGtype ecpg_query 64,1801
static void vmmerror(66,1890
mmerror(104,2579
mmfatal(114,2748
cat2_str(137,3190
cat_str(151,3472
make2_str(171,3767
make3_str(183,3981
make_name(198,4277
create_questionmarks(204,4344
adjust_outofscope_cursor_vars(242,5386
#define SAMEFUNC(493,14855
add_additional_variables(498,15010
add_typedef(532,15974
%name-prefix=prefix583,17788
prog:prog1611,45687
statements:statements14953,265445
statement:statement14957,265499
CreateAsStmt:CreateAsStmt14982,266155
at:at14998,266793
ECPGConnect:ECPGConnect15013,267117
connection_target:connection_target15024,267567
opt_database_name:opt_database_name15067,269234
db_prefix:db_prefix15071,269311
server:server15083,269680
opt_server:opt_server15092,269881
server_name:server_name15096,269952
opt_port:opt_port15101,270098
opt_connection_name:opt_connection_name15105,270195
opt_user:opt_user15109,270299
ora_user:ora_user15113,270392
user_name:user_name15123,270708
char_variable:char_variable15153,271353
opt_options:opt_options15187,272112
connect_options:connect_options15200,272410
opt_opt_value:opt_opt_value15216,272780
prepared_name:prepared_name15226,273006
ECPGCursorStmt:ECPGCursorStmt15247,273495
ECPGExecuteImmediateStmt:ECPGExecuteImmediateStmt15304,275556
ECPGVarDeclaration:ECPGVarDeclaration15313,275790
single_vt_declaration:single_vt_declaration15315,275834
precision:precision15319,275927
opt_scale:opt_scale15321,275965
ecpg_interval:ecpg_interval15325,276042
ECPGDeclaration:ECPGDeclaration15335,276386
sql_startdeclare:sql_startdeclare15345,276643
sql_enddeclare:sql_enddeclare15347,276708
var_type_declarations:var_type_declarations15349,276769
vt_declarations:vt_declarations15353,276860
variable_declarations:variable_declarations15359,277075
type_declaration:type_declaration15363,277201
var_declaration:var_declaration15378,277660
opt_bit_field:opt_bit_field15413,278750
storage_declaration:storage_declaration15417,278851
storage_clause 15423,279005
storage_modifier 15429,279200
var_type:var_type15433,279309
enum_type:enum_type15637,285092
enum_definition:enum_definition15645,285324
struct_union_type_with_symbol:struct_union_type_with_symbol15648,285418
struct_union_type:struct_union_type15699,287276
s_struct_union_symbol:s_struct_union_symbol15715,287770
s_struct_union:s_struct_union15728,288073
simple_type:simple_type15739,288288
unsigned_type:unsigned_type15743,288375
signed_type:signed_type15754,288944
opt_signed:opt_signed15766,289374
variable_list:variable_list15770,289418
variable:variable15781,289715
opt_initializer:opt_initializer15880,293679
opt_pointer:opt_pointer15889,293811
ECPGDeclare:ECPGDeclare15897,294021
ECPGDisconnect:ECPGDisconnect15906,294281
dis_name:dis_name15909,294339
connection_object:connection_object15915,294533
execstring:execstring15920,294705
ECPGFree:ECPGFree15930,294910
ECPGOpen:ECPGOpen15937,295074
opt_ecpg_using:opt_ecpg_using15945,295233
ecpg_using:ecpg_using15949,295309
using_descriptor:using_descriptor15953,295394
into_descriptor:into_descriptor15965,295696
into_sqlda:into_sqlda15977,295995
using_list:using_list15984,296118
UsingValue:UsingValue15986,296171
UsingConst:UsingConst15997,296454
ECPGDescribe:ECPGDescribe16011,296930
opt_output:opt_output16051,298363
ECPGAllocateDescr:ECPGAllocateDescr16064,298653
ECPGDeallocateDescr:ECPGDeallocateDescr16075,298817
ECPGGetDescriptorHeader:ECPGGetDescriptorHeader16086,298989
ECPGGetDescHeaderItems:ECPGGetDescHeaderItems16090,299105
ECPGGetDescHeaderItem:ECPGGetDescHeaderItem16094,299209
ECPGSetDescriptorHeader:ECPGSetDescriptorHeader16099,299301
ECPGSetDescHeaderItems:ECPGSetDescHeaderItems16103,299412
ECPGSetDescHeaderItem:ECPGSetDescHeaderItem16107,299516
IntConstVar:IntConstVar16113,299613
desc_header_item:desc_header_item16127,299863
ECPGGetDescriptor:ECPGGetDescriptor16134,299955
ECPGGetDescItems:ECPGGetDescItems16138,300097
ECPGGetDescItem:ECPGGetDescItem16142,300177
ECPGSetDescriptor:ECPGSetDescriptor16145,300256
ECPGSetDescItems:ECPGSetDescItems16149,300394
ECPGSetDescItem:ECPGSetDescItem16153,300474
AllConstVar:AllConstVar16159,300564
descriptor_item:descriptor_item16205,301603
ECPGSetAutocommit:ECPGSetAutocommit16226,302424
on_off:on_off16230,302540
ECPGSetConnection:ECPGSetConnection16238,302720
ECPGTypedef:ECPGTypedef16246,302943
opt_reference:opt_reference16263,303610
ECPGVar:ECPGVar16270,303771
ECPGWhenever:ECPGWhenever16341,306084
action 16361,306755
ECPGKeywords:ECPGKeywords16426,308387
ECPGKeywords_vanames:ECPGKeywords_vanames16430,308475
ECPGKeywords_rest:ECPGKeywords_rest16454,309713
ECPGTypeName:ECPGTypeName16463,310106
symbol:symbol16472,310454
ECPGColId:ECPGColId16475,310493
ColId:ColId16495,311130
type_function_name:type_function_name16506,311479
ColLabel:ColLabel16517,311817
ECPGColLabel:ECPGColLabel16530,312276
ECPGColLabelCommon:ECPGColLabelCommon16537,312490
ECPGCKeywords:ECPGCKeywords16543,312656
all_unreserved_keyword:all_unreserved_keyword16566,313567
ECPGunreserved_interval:ECPGunreserved_interval16571,313725
into_list 16580,314027
ecpgstart:ecpgstart16583,314092
c_args:c_args16589,314167
coutputvariable:coutputvariable16593,314232
civarind:civarind16600,314445
char_civar:char_civar16610,314744
civar:civar16621,315000
indicator:indicator16628,315143
cvariable:cvariable16633,315395
ecpg_param:ecpg_param16666,316045
ecpg_bconst:ecpg_bconst16668,316089
ecpg_fconst:ecpg_fconst16670,316135
ecpg_sconst:ecpg_sconst16672,316181
ecpg_xconst:ecpg_xconst16674,316218
ecpg_ident:ecpg_ident16676,316264
quoted_ident_stringvar:quoted_ident_stringvar16680,316371
c_stuff_item:c_stuff_item16690,316562
c_stuff:c_stuff16696,316727
c_list:c_list16701,316824
c_term:c_term16705,316927
c_thing:c_thing16709,317040
c_anything:c_anything16716,317215
DeallocateStmt:DeallocateStmt16774,319491
Iresult:Iresult16780,319814
execute_rest:execute_rest16796,320723
ecpg_into:ecpg_into16802,320887
opt_ecpg_into:opt_ecpg_into16806,320966
ecpg_fetch_into:ecpg_fetch_into16810,321040
opt_ecpg_fetch_into:opt_ecpg_fetch_into16822,321280
void base_yyerror(16828,321370
void parser_init(16835,321592

/home/seinoyu/pgsql/master/postgresql/pgc.c,9341
#define  YY_INT_ALIGNED 33,
#define yy_create_buffer 37,
#define yy_delete_buffer 38,
#define yy_scan_buffer 39,
#define yy_scan_string 40,
#define yy_scan_bytes 41,
#define yy_init_buffer 42,
#define yy_flush_buffer 43,
#define yy_load_buffer_state 44,
#define yy_switch_to_buffer 45,
#define yypush_buffer_state 46,
#define yypop_buffer_state 47,
#define yyensure_buffer_stack 48,
#define yy_flex_debug 49,
#define yyin 50,
#define yyleng 51,
#define yylex 52,
#define yylineno 53,
#define yyout 54,
#define yyrestart 55,
#define yytext 56,
#define yywrap 57,
#define yyalloc 58,
#define yyrealloc 59,
#define yyfree 60,
#define FLEX_SCANNER62,
#define YY_FLEX_MAJOR_VERSION 63,
#define YY_FLEX_MINOR_VERSION 64,
#define YY_FLEX_SUBMINOR_VERSION 65,
#define FLEX_BETA67,
#define base_yy_create_buffer_ALREADY_DEFINED71,
#define yy_create_buffer 73,
#define base_yy_delete_buffer_ALREADY_DEFINED77,
#define yy_delete_buffer 79,
#define base_yy_scan_buffer_ALREADY_DEFINED83,
#define yy_scan_buffer 85,
#define base_yy_scan_string_ALREADY_DEFINED89,
#define yy_scan_string 91,
#define base_yy_scan_bytes_ALREADY_DEFINED95,
#define yy_scan_bytes 97,
#define base_yy_init_buffer_ALREADY_DEFINED101,
#define yy_init_buffer 103,
#define base_yy_flush_buffer_ALREADY_DEFINED107,
#define yy_flush_buffer 109,
#define base_yy_load_buffer_state_ALREADY_DEFINED113,
#define yy_load_buffer_state 115,
#define base_yy_switch_to_buffer_ALREADY_DEFINED119,
#define yy_switch_to_buffer 121,
#define base_yypush_buffer_state_ALREADY_DEFINED125,
#define yypush_buffer_state 127,
#define base_yypop_buffer_state_ALREADY_DEFINED131,
#define yypop_buffer_state 133,
#define base_yyensure_buffer_stack_ALREADY_DEFINED137,
#define yyensure_buffer_stack 139,
#define base_yylex_ALREADY_DEFINED143,
#define yylex 145,
#define base_yyrestart_ALREADY_DEFINED149,
#define yyrestart 151,
#define base_yylex_init_ALREADY_DEFINED155,
#define yylex_init 157,
#define base_yylex_init_extra_ALREADY_DEFINED161,
#define yylex_init_extra 163,
#define base_yylex_destroy_ALREADY_DEFINED167,
#define yylex_destroy 169,
#define base_yyget_debug_ALREADY_DEFINED173,
#define yyget_debug 175,
#define base_yyset_debug_ALREADY_DEFINED179,
#define yyset_debug 181,
#define base_yyget_extra_ALREADY_DEFINED185,
#define yyget_extra 187,
#define base_yyset_extra_ALREADY_DEFINED191,
#define yyset_extra 193,
#define base_yyget_in_ALREADY_DEFINED197,
#define yyget_in 199,
#define base_yyset_in_ALREADY_DEFINED203,
#define yyset_in 205,
#define base_yyget_out_ALREADY_DEFINED209,
#define yyget_out 211,
#define base_yyset_out_ALREADY_DEFINED215,
#define yyset_out 217,
#define base_yyget_leng_ALREADY_DEFINED221,
#define yyget_leng 223,
#define base_yyget_text_ALREADY_DEFINED227,
#define yyget_text 229,
#define base_yyget_lineno_ALREADY_DEFINED233,
#define yyget_lineno 235,
#define base_yyset_lineno_ALREADY_DEFINED239,
#define yyset_lineno 241,
#define base_yywrap_ALREADY_DEFINED245,
#define yywrap 247,
#define base_yyalloc_ALREADY_DEFINED251,
#define yyalloc 253,
#define base_yyrealloc_ALREADY_DEFINED257,
#define yyrealloc 259,
#define base_yyfree_ALREADY_DEFINED263,
#define yyfree 265,
#define base_yytext_ALREADY_DEFINED269,
#define yytext 271,
#define base_yyleng_ALREADY_DEFINED275,
#define yyleng 277,
#define base_yyin_ALREADY_DEFINED281,
#define yyin 283,
#define base_yyout_ALREADY_DEFINED287,
#define yyout 289,
#define base_yy_flex_debug_ALREADY_DEFINED293,
#define yy_flex_debug 295,
#define base_yylineno_ALREADY_DEFINED299,
#define yylineno 301,
#define FLEXINT_H317,
#define __STDC_LIMIT_MACROS 327,
typedef int8_t flex_int8_t;331,
typedef uint8_t flex_uint8_t;332,
typedef int16_t flex_int16_t;333,
typedef uint16_t flex_uint16_t;334,
typedef int32_t flex_int32_t;335,
typedef uint32_t flex_uint32_t;336,
typedef signed char flex_int8_t;338,
typedef short int flex_int16_t;339,
typedef int flex_int32_t;340,
typedef unsigned char flex_uint8_t;341,
typedef unsigned short int flex_uint16_t;342,
typedef unsigned int flex_uint32_t;343,
#define INT8_MIN 347,
#define INT16_MIN 350,
#define INT32_MIN 353,
#define INT8_MAX 356,
#define INT16_MAX 359,
#define INT32_MAX 362,
#define UINT8_MAX 365,
#define UINT16_MAX 368,
#define UINT32_MAX 371,
#define SIZE_MAX 375,
#define yyconst 385,
#define yynoreturn 388,
#define yynoreturn390,
#define YY_NULL 394,
#define YY_SC_TO_UI(399,
#define BEGIN 405,
#define YY_START 410,
#define YYSTATE 411,
#define YY_STATE_EOF(413,
#define YY_NEW_FILE 415,
#define YY_END_OF_BUFFER_CHAR 416,
#define YY_BUF_SIZE 425,
#define YY_BUF_SIZE 427,
#define YY_STATE_BUF_SIZE 433,
#define YY_TYPEDEF_YY_BUFFER_STATE436,
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE437,
#define YY_TYPEDEF_YY_SIZE_T441,
typedef size_t yy_size_t;442,
#define EOB_ACT_CONTINUE_SCAN 449,
#define EOB_ACT_END_OF_FILE 450,
#define EOB_ACT_LAST_MATCH 451,
    #define  YY_LESS_LINENO(460,
    #define YY_LINENO_REWIND_TO(467,
#define yyless(476,
#define unput(488,
#define YY_STRUCT_YY_BUFFER_STATE491,
struct yy_buffer_state492,
	FILE *yy_input_file;yy_input_file494,
	char *yy_ch_buf;yy_ch_buf496,
	char *yy_buf_pos;yy_buf_pos497,
	int yy_buf_size;502,
	int yy_n_chars;507,
	int yy_is_our_buffer;513,
	int yy_is_interactive;520,
	int yy_at_bol;526,
    int yy_bs_lineno;528,
    int yy_bs_column;529,
	int yy_fill_buffer;534,
	int yy_buffer_status;536,
#define YY_BUFFER_NEW 538,
#define YY_BUFFER_NORMAL 539,
#define YY_BUFFER_EOF_PENDING 550,
static size_t yy_buffer_stack_top 556,
static size_t yy_buffer_stack_max 557,
static YY_BUFFER_STATE * yy_buffer_stack 558,
#define YY_CURRENT_BUFFER 566,
#define YY_CURRENT_BUFFER_LVALUE 572,
static char yy_hold_char;575,
static int yy_n_chars;576,
int yyleng;577,
static char *yy_c_buf_p yy_c_buf_p580,
static int yy_init 581,
static int yy_start 582,
static int yy_did_buffer_switch_on_eof;587,
#define YY_FLUSH_BUFFER 600,
#define yy_new_buffer 610,
#define yy_set_interactive(611,
#define yy_set_bol(620,
#define YY_AT_BOL(629,
#define base_yywrap(633,
#define YY_SKIP_YYWRAP634,
typedef flex_uint8_t YY_CHAR;635,
FILE *yyin yyin637,
typedef int yy_state_type;639,
int yylineno 642,
#undef yytext_ptr646,
#define yytext_ptr 648,
#define YY_DO_BEFORE_ACTION 658,
#define YY_NUM_RULES 664,
#define YY_END_OF_BUFFER 665,
struct yy_trans_info668,
	flex_int32_t yy_verify;670,
	flex_int32_t yy_nxt;671,
static const flex_int16_t yy_accept[yy_accept673,
static const YY_CHAR yy_ec[yy_ec739,
static const YY_CHAR yy_meta[yy_meta771,
static const flex_int16_t yy_base[yy_base781,
static const flex_int16_t yy_def[yy_def854,
static const flex_int16_t yy_nxt[yy_nxt927,
static const flex_int16_t yy_chk[yy_chk1221,
static const flex_int32_t yy_rule_can_match_eol[yy_rule_can_match_eol1516,
static yy_state_type yy_last_accepting_state;1527,
static char *yy_last_accepting_cpos;yy_last_accepting_cpos1528,
int yy_flex_debug 1531,
#define REJECT 1536,
#define yymore(1537,
#define YY_MORE_ADJ 1538,
#define YY_RESTORE_YY_MORE_OFFSET1539,
char *yytext;yytext1540,
#define YY_NO_INPUT 1603,
#define INITIAL 1764,
#define xb 1765,
#define xc 1766,
#define xd 1767,
#define xdc 1768,
#define xh 1769,
#define xn 1770,
#define xq 1771,
#define xqs 1772,
#define xe 1773,
#define xqc 1774,
#define xdolq 1775,
#define xui 1776,
#define xus 1777,
#define xcond 1778,
#define xskip 1779,
#define C 1780,
#define SQL 1781,
#define incl 1782,
#define def 1783,
#define def_ident 1784,
#define undef 1785,
#define YY_EXTRA_TYPE 1796,
#define YY_READ_BUF_SIZE 1869,
#define YY_READ_BUF_SIZE 1871,
#define ECHO 1880,
#define YY_INPUT(1887,
#define yyterminate(1924,
#define YY_START_STACK_INCR 1929,
#define YY_FATAL_ERROR(1934,
#define YY_DECL_IS_OURS 1943,
#define YY_DECL 1947,
#define YY_USER_ACTION1954,
#define YY_BREAK 1959,
#define YY_RULE_SETUP 1962,
static int yy_get_next_buffer 3821,
    static yy_state_type yy_get_previous_state 3959,
    static yy_state_type yy_try_NUL_trans 3991,
    static void yyunput 4016,
    static int yyinput 4061,
    void yyrestart 4143,
    void yy_switch_to_buffer 4160,
static void yy_load_buffer_state 4191,
    YY_BUFFER_STATE yy_create_buffer 4205,
    void yy_delete_buffer 4233,
    static void yy_init_buffer 4252,
    void yy_flush_buffer 4280,
void yypush_buffer_state 4309,
void yypop_buffer_state 4339,
static void yyensure_buffer_stack 4358,
YY_BUFFER_STATE yy_scan_buffer 4407,
YY_BUFFER_STATE yy_scan_string 4444,
YY_BUFFER_STATE yy_scan_bytes 4457,
#define YY_EXIT_FAILURE 4488,
static void yynoreturn yy_fatal_error 4491,
#undef yyless4499,
#define yyless(4500,
int yyget_lineno 4519,
FILE *yyget_in yyget_in4528,
FILE *yyget_out yyget_out4536,
int yyget_leng 4544,
char *yyget_text yyget_text4553,
void yyset_lineno 4562,
void yyset_in 4574,
void yyset_out 4579,
int yyget_debug 4584,
void yyset_debug 4589,
static int yy_init_globals 4594,
int yylex_destroy 4626,
static void yy_flex_strncpy 4652,
static int yy_flex_strlen 4662,
void *yyalloc yyalloc4672,
void *yyrealloc yyrealloc4677,
void yyfree 4690,
#define YYTABLES_NAME 4695,

/home/seinoyu/pgsql/master/postgresql/pgc.l,758
static int		xcdepth 38,
static char	   *dolqstart dolqstart39,
static char	   *literalbuf literalbuf47,
static int		literallen;48,
static int		literalalloc;49,
static int		parenths_open;52,
static bool		include_next;55,
#define startlit(57,
char *token_start;token_start66,
static int state_before_str_start;69,
static int state_before_str_stop;70,
struct _yy_buffer72,
	YY_BUFFER_STATE		buffer;74,
	long				lineno;75,
	char			   *filename;filename76,
	struct _yy_buffer  *next;next77,
} *yy_buffer yy_buffer78,
static char *old;old80,
#define MAX_NESTED_IF 82,
static short preproc_tos;83,
static short ifcond;84,
static struct _if_value85,
	short condition;87,
	short else_branch;88,
} stacked_if_value[stacked_if_value89,
lex_init(1440,
addlit(1464,
addlitchar(1481,
process_integer_literal(1500,
parse_include(1518,
ecpg_isspace(1620,
static bool isdefine(1631,
static bool isinformixdefine(1659,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/preproc.h,12329
# define YY_BASE_YY_PREPROC_H_INCLUDED38,1700
# define YYDEBUG 41,1776
# define YYTOKENTYPE49,1886
  enum yytokentype50,1907
    SQL_ALLOCATE 52,1930
    SQL_AUTOCOMMIT 53,1954
    SQL_BOOL 54,1980
    SQL_BREAK 55,2000
    SQL_CARDINALITY 56,2021
    SQL_CONNECT 57,2048
    SQL_COUNT 58,2071
    SQL_DATETIME_INTERVAL_CODE 59,2092
    SQL_DATETIME_INTERVAL_PRECISION 60,2130
    SQL_DESCRIBE 61,2173
    SQL_DESCRIPTOR 62,2197
    SQL_DISCONNECT 63,2223
    SQL_FOUND 64,2249
    SQL_FREE 65,2270
    SQL_GET 66,2290
    SQL_GO 67,2309
    SQL_GOTO 68,2327
    SQL_IDENTIFIED 69,2347
    SQL_INDICATOR 70,2373
    SQL_KEY_MEMBER 71,2398
    SQL_LENGTH 72,2424
    SQL_LONG 73,2446
    SQL_NULLABLE 74,2466
    SQL_OCTET_LENGTH 75,2490
    SQL_OPEN 76,2518
    SQL_OUTPUT 77,2538
    SQL_REFERENCE 78,2560
    SQL_RETURNED_LENGTH 79,2585
    SQL_RETURNED_OCTET_LENGTH 80,2616
    SQL_SCALE 81,2653
    SQL_SECTION 82,2674
    SQL_SHORT 83,2697
    SQL_SIGNED 84,2718
    SQL_SQLERROR 85,2740
    SQL_SQLPRINT 86,2764
    SQL_SQLWARNING 87,2788
    SQL_START 88,2814
    SQL_STOP 89,2835
    SQL_STRUCT 90,2855
    SQL_UNSIGNED 91,2877
    SQL_VAR 92,2901
    SQL_WHENEVER 93,2920
    S_ADD 94,2944
    S_AND 95,2961
    S_ANYTHING 96,2978
    S_AUTO 97,3000
    S_CONST 98,3018
    S_DEC 99,3037
    S_DIV 100,3054
    S_DOTPOINT 101,3071
    S_EQUAL 102,3093
    S_EXTERN 103,3112
    S_INC 104,3132
    S_LSHIFT 105,3149
    S_MEMPOINT 106,3169
    S_MEMBER 107,3191
    S_MOD 108,3211
    S_MUL 109,3228
    S_NEQUAL 110,3245
    S_OR 111,3265
    S_REGISTER 112,3281
    S_RSHIFT 113,3303
    S_STATIC 114,3323
    S_SUB 115,3343
    S_VOLATILE 116,3360
    S_TYPEDEF 117,3382
    CSTRING 118,3403
    CVARIABLE 119,3422
    CPP_LINE 120,3443
    IP 121,3463
    IDENT 122,3477
    UIDENT 123,3494
    FCONST 124,3512
    SCONST 125,3530
    USCONST 126,3548
    BCONST 127,3567
    XCONST 128,3585
    Op 129,3603
    ICONST 130,3617
    PARAM 131,3635
    TYPECAST 132,3652
    DOT_DOT 133,3672
    COLON_EQUALS 134,3691
    EQUALS_GREATER 135,3715
    LESS_EQUALS 136,3741
    GREATER_EQUALS 137,3764
    NOT_EQUALS 138,3790
    ABORT_P 139,3812
    ABSOLUTE_P 140,3831
    ACCESS 141,3853
    ACTION 142,3871
    ADD_P 143,3889
    ADMIN 144,3906
    AFTER 145,3923
    AGGREGATE 146,3940
    ALL 147,3961
    ALSO 148,3976
    ALTER 149,3992
    ALWAYS 150,4009
    ANALYSE 151,4027
    ANALYZE 152,4046
    AND 153,4065
    ANY 154,4080
    ARRAY 155,4095
    AS 156,4112
    ASC 157,4126
    ASSERTION 158,4141
    ASSIGNMENT 159,4162
    ASYMMETRIC 160,4184
    AT 161,4206
    ATTACH 162,4220
    ATTRIBUTE 163,4238
    AUTHORIZATION 164,4259
    BACKWARD 165,4284
    BEFORE 166,4304
    BEGIN_P 167,4322
    BETWEEN 168,4341
    BIGINT 169,4360
    BINARY 170,4378
    BIT 171,4396
    BOOLEAN_P 172,4411
    BOTH 173,4432
    BY 174,4448
    CACHE 175,4462
    CALL 176,4479
    CALLED 177,4495
    CASCADE 178,4513
    CASCADED 179,4532
    CASE 180,4552
    CAST 181,4568
    CATALOG_P 182,4584
    CHAIN 183,4605
    CHAR_P 184,4622
    CHARACTER 185,4640
    CHARACTERISTICS 186,4661
    CHECK 187,4688
    CHECKPOINT 188,4705
    CLASS 189,4727
    CLOSE 190,4744
    CLUSTER 191,4761
    COALESCE 192,4780
    COLLATE 193,4800
    COLLATION 194,4819
    COLUMN 195,4840
    COLUMNS 196,4858
    COMMENT 197,4877
    COMMENTS 198,4896
    COMMIT 199,4916
    COMMITTED 200,4934
    CONCURRENTLY 201,4955
    CONFIGURATION 202,4979
    CONFLICT 203,5004
    CONNECTION 204,5024
    CONSTRAINT 205,5046
    CONSTRAINTS 206,5068
    CONTENT_P 207,5091
    CONTINUE_P 208,5112
    CONVERSION_P 209,5134
    COPY 210,5158
    COST 211,5174
    CREATE 212,5190
    CROSS 213,5208
    CSV 214,5225
    CUBE 215,5240
    CURRENT_P 216,5256
    CURRENT_CATALOG 217,5277
    CURRENT_DATE 218,5304
    CURRENT_ROLE 219,5328
    CURRENT_SCHEMA 220,5352
    CURRENT_TIME 221,5378
    CURRENT_TIMESTAMP 222,5402
    CURRENT_USER 223,5431
    CURSOR 224,5455
    CYCLE 225,5473
    DATA_P 226,5490
    DATABASE 227,5508
    DAY_P 228,5528
    DEALLOCATE 229,5545
    DEC 230,5567
    DECIMAL_P 231,5582
    DECLARE 232,5603
    DEFAULT 233,5622
    DEFAULTS 234,5641
    DEFERRABLE 235,5661
    DEFERRED 236,5683
    DEFINER 237,5703
    DELETE_P 238,5722
    DELIMITER 239,5742
    DELIMITERS 240,5763
    DEPENDS 241,5785
    DESC 242,5804
    DETACH 243,5820
    DICTIONARY 244,5838
    DISABLE_P 245,5860
    DISCARD 246,5881
    DISTINCT 247,5900
    DO 248,5920
    DOCUMENT_P 249,5934
    DOMAIN_P 250,5956
    DOUBLE_P 251,5976
    DROP 252,5996
    EACH 253,6012
    ELSE 254,6028
    ENABLE_P 255,6044
    ENCODING 256,6064
    ENCRYPTED 257,6084
    END_P 258,6105
    ENUM_P 259,6122
    ESCAPE 260,6140
    EVENT 261,6158
    EXCEPT 262,6175
    EXCLUDE 263,6193
    EXCLUDING 264,6212
    EXCLUSIVE 265,6233
    EXECUTE 266,6254
    EXISTS 267,6273
    EXPLAIN 268,6291
    EXPRESSION 269,6310
    EXTENSION 270,6332
    EXTERNAL 271,6353
    EXTRACT 272,6373
    FALSE_P 273,6392
    FAMILY 274,6411
    FETCH 275,6429
    FILTER 276,6446
    FIRST_P 277,6464
    FLOAT_P 278,6483
    FOLLOWING 279,6502
    FOR 280,6523
    FORCE 281,6538
    FOREIGN 282,6555
    FORWARD 283,6574
    FREEZE 284,6593
    FROM 285,6611
    FULL 286,6627
    FUNCTION 287,6643
    FUNCTIONS 288,6663
    GENERATED 289,6684
    GLOBAL 290,6705
    GRANT 291,6723
    GRANTED 292,6740
    GREATEST 293,6759
    GROUP_P 294,6779
    GROUPING 295,6798
    GROUPS 296,6818
    HANDLER 297,6836
    HAVING 298,6855
    HEADER_P 299,6873
    HOLD 300,6893
    HOUR_P 301,6909
    IDENTITY_P 302,6927
    IF_P 303,6949
    ILIKE 304,6965
    IMMEDIATE 305,6982
    IMMUTABLE 306,7003
    IMPLICIT_P 307,7024
    IMPORT_P 308,7046
    IN_P 309,7066
    INCLUDE 310,7082
    INCLUDING 311,7101
    INCREMENT 312,7122
    INDEX 313,7143
    INDEXES 314,7160
    INHERIT 315,7179
    INHERITS 316,7198
    INITIALLY 317,7218
    INLINE_P 318,7239
    INNER_P 319,7259
    INOUT 320,7278
    INPUT_P 321,7295
    INSENSITIVE 322,7314
    INSERT 323,7337
    INSTEAD 324,7355
    INT_P 325,7374
    INTEGER 326,7391
    INTERSECT 327,7410
    INTERVAL 328,7431
    INTO 329,7451
    INVOKER 330,7467
    IS 331,7486
    ISNULL 332,7500
    ISOLATION 333,7518
    JOIN 334,7539
    KEY 335,7555
    LABEL 336,7570
    LANGUAGE 337,7587
    LARGE_P 338,7607
    LAST_P 339,7626
    LATERAL_P 340,7644
    LEADING 341,7665
    LEAKPROOF 342,7684
    LEAST 343,7705
    LEFT 344,7722
    LEVEL 345,7738
    LIKE 346,7755
    LIMIT 347,7771
    LISTEN 348,7788
    LOAD 349,7806
    LOCAL 350,7822
    LOCALTIME 351,7839
    LOCALTIMESTAMP 352,7860
    LOCATION 353,7886
    LOCK_P 354,7906
    LOCKED 355,7924
    LOGGED 356,7942
    MAPPING 357,7960
    MATCH 358,7979
    MATERIALIZED 359,7996
    MAXVALUE 360,8020
    METHOD 361,8040
    MINUTE_P 362,8058
    MINVALUE 363,8078
    MODE 364,8098
    MONTH_P 365,8114
    MOVE 366,8133
    NAME_P 367,8149
    NAMES 368,8167
    NATIONAL 369,8184
    NATURAL 370,8204
    NCHAR 371,8223
    NEW 372,8240
    NEXT 373,8255
    NFC 374,8271
    NFD 375,8286
    NFKC 376,8301
    NFKD 377,8317
    NO 378,8333
    NONE 379,8347
    NORMALIZE 380,8363
    NORMALIZED 381,8384
    NOT 382,8406
    NOTHING 383,8421
    NOTIFY 384,8440
    NOTNULL 385,8458
    NOWAIT 386,8477
    NULL_P 387,8495
    NULLIF 388,8513
    NULLS_P 389,8531
    NUMERIC 390,8550
    OBJECT_P 391,8569
    OF 392,8589
    OFF 393,8603
    OFFSET 394,8618
    OIDS 395,8636
    OLD 396,8652
    ON 397,8667
    ONLY 398,8681
    OPERATOR 399,8697
    OPTION 400,8717
    OPTIONS 401,8735
    OR 402,8754
    ORDER 403,8768
    ORDINALITY 404,8785
    OTHERS 405,8807
    OUT_P 406,8825
    OUTER_P 407,8842
    OVER 408,8861
    OVERLAPS 409,8877
    OVERLAY 410,8897
    OVERRIDING 411,8916
    OWNED 412,8938
    OWNER 413,8955
    PARALLEL 414,8972
    PARSER 415,8992
    PARTIAL 416,9010
    PARTITION 417,9029
    PASSING 418,9050
    PASSWORD 419,9069
    PLACING 420,9089
    PLANS 421,9108
    POLICY 422,9125
    POSITION 423,9143
    PRECEDING 424,9163
    PRECISION 425,9184
    PRESERVE 426,9205
    PREPARE 427,9225
    PREPARED 428,9244
    PRIMARY 429,9264
    PRIOR 430,9283
    PRIVILEGES 431,9300
    PROCEDURAL 432,9322
    PROCEDURE 433,9344
    PROCEDURES 434,9365
    PROGRAM 435,9387
    PUBLICATION 436,9406
    QUOTE 437,9429
    RANGE 438,9446
    READ 439,9463
    REAL 440,9479
    REASSIGN 441,9495
    RECHECK 442,9515
    RECURSIVE 443,9534
    REF 444,9555
    REFERENCES 445,9570
    REFERENCING 446,9592
    REFRESH 447,9615
    REINDEX 448,9634
    RELATIVE_P 449,9653
    RELEASE 450,9675
    RENAME 451,9694
    REPEATABLE 452,9712
    REPLACE 453,9734
    REPLICA 454,9753
    RESET 455,9772
    RESTART 456,9789
    RESTRICT 457,9808
    RETURNING 458,9828
    RETURNS 459,9849
    REVOKE 460,9868
    RIGHT 461,9886
    ROLE 462,9903
    ROLLBACK 463,9919
    ROLLUP 464,9939
    ROUTINE 465,9957
    ROUTINES 466,9976
    ROW 467,9996
    ROWS 468,10011
    RULE 469,10027
    SAVEPOINT 470,10043
    SCHEMA 471,10064
    SCHEMAS 472,10082
    SCROLL 473,10101
    SEARCH 474,10119
    SECOND_P 475,10137
    SECURITY 476,10157
    SELECT 477,10177
    SEQUENCE 478,10195
    SEQUENCES 479,10215
    SERIALIZABLE 480,10236
    SERVER 481,10260
    SESSION 482,10278
    SESSION_USER 483,10297
    SET 484,10321
    SETS 485,10336
    SETOF 486,10352
    SHARE 487,10369
    SHOW 488,10386
    SIMILAR 489,10402
    SIMPLE 490,10421
    SKIP 491,10439
    SMALLINT 492,10455
    SNAPSHOT 493,10475
    SOME 494,10495
    SQL_P 495,10511
    STABLE 496,10528
    STANDALONE_P 497,10546
    START 498,10570
    STATEMENT 499,10587
    STATISTICS 500,10608
    STDIN 501,10630
    STDOUT 502,10647
    STORAGE 503,10665
    STORED 504,10684
    STRICT_P 505,10702
    STRIP_P 506,10722
    SUBSCRIPTION 507,10741
    SUBSTRING 508,10765
    SUPPORT 509,10786
    SYMMETRIC 510,10805
    SYSID 511,10826
    SYSTEM_P 512,10843
    TABLE 513,10863
    TABLES 514,10880
    TABLESAMPLE 515,10898
    TABLESPACE 516,10921
    TEMP 517,10943
    TEMPLATE 518,10959
    TEMPORARY 519,10979
    TEXT_P 520,11000
    THEN 521,11018
    TIES 522,11034
    TIME 523,11050
    TIMESTAMP 524,11066
    TO 525,11087
    TRAILING 526,11101
    TRANSACTION 527,11121
    TRANSFORM 528,11144
    TREAT 529,11165
    TRIGGER 530,11182
    TRIM 531,11201
    TRUE_P 532,11217
    TRUNCATE 533,11235
    TRUSTED 534,11255
    TYPE_P 535,11274
    TYPES_P 536,11292
    UESCAPE 537,11311
    UNBOUNDED 538,11330
    UNCOMMITTED 539,11351
    UNENCRYPTED 540,11374
    UNION 541,11397
    UNIQUE 542,11414
    UNKNOWN 543,11432
    UNLISTEN 544,11451
    UNLOGGED 545,11471
    UNTIL 546,11491
    UPDATE 547,11508
    USER 548,11526
    USING 549,11542
    VACUUM 550,11559
    VALID 551,11577
    VALIDATE 552,11594
    VALIDATOR 553,11614
    VALUE_P 554,11635
    VALUES 555,11654
    VARCHAR 556,11672
    VARIADIC 557,11691
    VARYING 558,11711
    VERBOSE 559,11730
    VERSION_P 560,11749
    VIEW 561,11770
    VIEWS 562,11786
    VOLATILE 563,11803
    WHEN 564,11823
    WHERE 565,11839
    WHITESPACE_P 566,11856
    WINDOW 567,11880
    WITH 568,11898
    WITHIN 569,11914
    WITHOUT 570,11932
    WORK 571,11951
    WRAPPER 572,11967
    WRITE 573,11986
    XML_P 574,12003
    XMLATTRIBUTES 575,12020
    XMLCONCAT 576,12045
    XMLELEMENT 577,12066
    XMLEXISTS 578,12088
    XMLFOREST 579,12109
    XMLNAMESPACES 580,12130
    XMLPARSE 581,12155
    XMLPI 582,12175
    XMLROOT 583,12192
    XMLSERIALIZE 584,12211
    XMLTABLE 585,12235
    YEAR_P 586,12255
    YES_P 587,12273
    ZONE 588,12290
    NOT_LA 589,12306
    NULLS_LA 590,12324
    WITH_LA 591,12344
    POSTFIXOP 592,12363
    UMINUS 593,12384
union YYSTYPE599,12488

/home/seinoyu/pgsql/master/postgresql/preproc.y,349
	double	dval;587,
	char	*str;str588,
	int		ival;589,
	struct	when		action;590,
	struct	index		index;591,
	int		tagname;592,
	struct	this_type	type;593,
	enum	ECPGttype	type_enum;594,
	enum	ECPGdtype	dtype_enum;595,
	struct	fetch_desc	descriptor;596,
	struct  su_symbol	struct_union;597,
	struct	prep		prep;598,
	struct	exec		exec;599,

/home/seinoyu/pgsql/master/postgresql/preproc.h,325
typedef union YYSTYPE YYSTYPE;620,
# define YYSTYPE_IS_TRIVIAL 621,
# define YYSTYPE_IS_DECLARED 622,
typedef struct YYLTYPE YYLTYPE;627,
struct YYLTYPE628,
  int first_line;630,
  int first_column;631,
  int last_line;632,
  int last_column;633,
# define YYLTYPE_IS_DECLARED 635,
# define YYLTYPE_IS_TRIVIAL 636,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/compat_informix-rfmtdate.c,25
#define ECPGdebug(9,267

/home/seinoyu/pgsql/master/postgresql/rfmtdate.pgc,92
date_test_strdate(16,
date_test_defmt(41,
date_test_fmt(66,
main(82,
check_return(154,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/thread-thread_implicit.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/thread_implicit.pgc,97
main(11,
int nthreads 28,
int iterations 29,
int main(31,
void *test_thread(test_thread99,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-binary.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/binary.pgc,94
struct TBempl 14,
 long idnum 9,
 char name 10,
 short accs 11,
 char byte 12,
main 19,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/pgtypeslib-nan_test.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/nan_test.pgc,10
main(11,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/pgtypeslib-num_test2.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/printf_hack.h,17
print_double(6,

/home/seinoyu/pgsql/master/postgresql/num_test2.pgc,49
char* nums[nums12,
main(27,
check_errno(214,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-describe.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/sqlda.h,190
#define ECPG_SQLDA_H2,
typedef struct sqlvar_compat sqlvar_t;7,
typedef struct sqlda_compat sqlda_t;8,
typedef struct sqlvar_struct sqlvar_t;13,
typedef struct sqlda_struct sqlda_t;14,

/home/seinoyu/pgsql/master/postgresql/describe.pgc,118
sqlda_t	*sqlda1,sqlda19,
sqlda_t	*sqlda1, *sqlda2,sqlda29,
sqlda_t	*sqlda1, *sqlda2, *sqlda3;sqlda39,
main 12,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-indicators.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/sqlca.h,391
#define POSTGRES_SQLCA_H2,
#define PGDLLIMPORT 6,
#define PGDLLIMPORT8,
#define SQLERRMC_LEN	12,
struct sqlca_t19,
	char		sqlcaid[sqlcaid21,
	long		sqlabc;22,
	long		sqlcode;23,
		int			sqlerrml;26,
		char		sqlerrmc[sqlerrmc27,
	}			sqlerrm;28,
	char		sqlerrp[sqlerrp29,
	long		sqlerrd[sqlerrd30,
	char		sqlwarn[sqlwarn39,
	char		sqlstate[sqlstate53,
#define sqlca 59,

/home/seinoyu/pgsql/master/postgresql/indicators.pgc,13
int main(6,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/connect-test3.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/test3.pgc,10
main(13,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/compat_informix-rnull.c,25
#define ECPGdebug(9,267

/home/seinoyu/pgsql/master/postgresql/rnull.pgc,28
test_null(8,
int main(13,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-func.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/func.pgc,13
int main(7,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/preproc-whenever.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/whenever.pgc,82
static void print(7,
static void print2(13,
static void warn(19,
int main(24,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-insupd.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/insupd.pgc,13
int main(7,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/connect-test4.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/test4.pgc,9
main(9,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-execute.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/execute.pgc,10
main(11,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/thread-thread.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/thread.pgc,97
main(11,
int nthreads 28,
int iterations 29,
int main(31,
void *test_thread(test_thread99,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-createtableas.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/createtableas.pgc,10
main(11,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/preproc-cursor.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/cursor.pgc,320
typedef char* c;9,
typedef union { int integer;12,
typedef union { int integer; short smallint;12,
typedef union { int integer; short smallint; } ind;12,
#define BUFFERSIZ 14,
#define CURNAME 17,
main 20,
  struct varchar_1 27,
  struct varchar_1  { int len;27,
  struct varchar_1  { int len; char arr[arr27,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-define.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/sqlca.h,391
#define POSTGRES_SQLCA_H2,
#define PGDLLIMPORT 6,
#define PGDLLIMPORT8,
#define SQLERRMC_LEN	12,
struct sqlca_t19,
	char		sqlcaid[sqlcaid21,
	long		sqlabc;22,
	long		sqlcode;23,
		int			sqlerrml;26,
		char		sqlerrmc[sqlerrmc27,
	}			sqlerrm;28,
	char		sqlerrp[sqlerrp29,
	long		sqlerrd[sqlerrd30,
	char		sqlwarn[sqlwarn39,
	char		sqlstate[sqlstate53,
#define sqlca 59,

/home/seinoyu/pgsql/master/postgresql/define.pgc,13
int main(7,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/compat_informix-test_informix2.c,25
#define ECPGdebug(9,267

/home/seinoyu/pgsql/master/postgresql/sqlca.h,391
#define POSTGRES_SQLCA_H2,
#define PGDLLIMPORT 6,
#define PGDLLIMPORT8,
#define SQLERRMC_LEN	12,
struct sqlca_t19,
	char		sqlcaid[sqlcaid21,
	long		sqlabc;22,
	long		sqlcode;23,
		int			sqlerrml;26,
		char		sqlerrmc[sqlerrmc27,
	}			sqlerrm;28,
	char		sqlerrp[sqlerrp29,
	long		sqlerrd[sqlerrd30,
	char		sqlwarn[sqlwarn39,
	char		sqlstate[sqlstate53,
#define sqlca 59,

/home/seinoyu/pgsql/master/postgresql/test_informix2.pgc,41
static void sql_check(10,
int main(44,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-dyntest.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/sql3types.h,529
#define _ECPG_SQL3TYPES_H2,
	SQL3_CHARACTER 10,
	SQL3_NUMERIC,11,
	SQL3_DECIMAL,12,
	SQL3_INTEGER,13,
	SQL3_SMALLINT,14,
	SQL3_FLOAT,15,
	SQL3_REAL,16,
	SQL3_DOUBLE_PRECISION,17,
	SQL3_DATE_TIME_TIMESTAMP,18,
	SQL3_INTERVAL,19,
	SQL3_CHARACTER_VARYING 20,
	SQL3_ENUMERATED,21,
	SQL3_BIT,22,
	SQL3_BIT_VARYING,23,
	SQL3_BOOLEAN,24,
	SQL3_abstract25,
	SQL3_DDT_DATE 33,
	SQL3_DDT_TIME,34,
	SQL3_DDT_TIMESTAMP,35,
	SQL3_DDT_TIME_WITH_TIME_ZONE,36,
	SQL3_DDT_TIMESTAMP_WITH_TIME_ZONE,37,
	SQL3_DDT_ILLEGAL	39,

/home/seinoyu/pgsql/master/postgresql/sqlca.h,391
#define POSTGRES_SQLCA_H2,
#define PGDLLIMPORT 6,
#define PGDLLIMPORT8,
#define SQLERRMC_LEN	12,
struct sqlca_t19,
	char		sqlcaid[sqlcaid21,
	long		sqlabc;22,
	long		sqlcode;23,
		int			sqlerrml;26,
		char		sqlerrmc[sqlerrmc27,
	}			sqlerrm;28,
	char		sqlerrp[sqlerrp29,
	long		sqlerrd[sqlerrd30,
	char		sqlwarn[sqlwarn39,
	char		sqlstate[sqlstate53,
#define sqlca 59,

/home/seinoyu/pgsql/master/postgresql/dyntest.pgc,21
error 12,
main 19,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-code100.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/sqlca.h,391
#define POSTGRES_SQLCA_H2,
#define PGDLLIMPORT 6,
#define PGDLLIMPORT8,
#define SQLERRMC_LEN	12,
struct sqlca_t19,
	char		sqlcaid[sqlcaid21,
	long		sqlabc;22,
	long		sqlcode;23,
		int			sqlerrml;26,
		char		sqlerrmc[sqlerrmc27,
	}			sqlerrm;28,
	char		sqlerrp[sqlerrp29,
	long		sqlerrd[sqlerrd30,
	char		sqlwarn[sqlwarn39,
	char		sqlstate[sqlstate53,
#define sqlca 59,

/home/seinoyu/pgsql/master/postgresql/code100.pgc,13
int main(7,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/thread-descriptor.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/descriptor.pgc,121
#define WIN32_LEAN_AND_MEAN3,
#define THREADS	13,
#define REPEATS	14,
static unsigned __stdcall fn(21,
int main 37,

/home/seinoyu/pgsql/master/postgresql/sqlca.h,391
#define POSTGRES_SQLCA_H2,
#define PGDLLIMPORT 6,
#define PGDLLIMPORT8,
#define SQLERRMC_LEN	12,
struct sqlca_t19,
	char		sqlcaid[sqlcaid21,
	long		sqlabc;22,
	long		sqlcode;23,
		int			sqlerrml;26,
		char		sqlerrmc[sqlerrmc27,
	}			sqlerrm;28,
	char		sqlerrp[sqlerrp29,
	long		sqlerrd[sqlerrd30,
	char		sqlwarn[sqlwarn39,
	char		sqlstate[sqlstate53,
#define sqlca 59,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/preproc-variable.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/variable.pgc,949
typedef char* c;9,
typedef union { int integer;12,
typedef union { int integer; short smallint;12,
typedef union { int integer; short smallint; } ind;12,
#define BUFFERSIZ 14,
main 21,
	struct birthinfo 23,
 long born 23,
 short age 23,
 struct personal_struct 27,
  struct varchar_1 25,
  struct varchar_1  { int len;25,
  struct varchar_1  { int len; char arr[arr25,
  struct varchar_1  { int len; char arr[ BUFFERSIZ ]; }  name 25,
 struct birthinfo birth 26,
 struct personal_indicator 30,
 int ind_name 28,
 struct birthinfo ind_birth 29,
 struct t1 32,
  struct varchar_2 32,
  struct varchar_2  { int len;32,
  struct varchar_2  { int len; char arr[arr32,
  struct varchar_2  { int len; char arr[ BUFFERSIZ ]; }  name 32,
 } ; struct t2 33,
  struct varchar_3 32,
  struct varchar_3  { int len;32,
  struct varchar_3  { int len; char arr[arr32,
  struct varchar_3  { int len; char arr[ BUFFERSIZ ]; }  name 32,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/compat_informix-charfuncs.c,25
#define ECPGdebug(9,267

/home/seinoyu/pgsql/master/postgresql/charfuncs.pgc,13
int main(5,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/compat_informix-sqlda.c,25
#define ECPGdebug(9,267

/home/seinoyu/pgsql/master/postgresql/sqlda.h,190
#define ECPG_SQLDA_H2,
typedef struct sqlvar_compat sqlvar_t;7,
typedef struct sqlda_compat sqlda_t;8,
typedef struct sqlvar_struct sqlvar_t;13,
typedef struct sqlda_struct sqlda_t;14,

/home/seinoyu/pgsql/master/postgresql/sqltypes.h,1025
#define ECPG_SQLTYPES_H2,
#define CCHARTYPE	6,
#define CSHORTTYPE	7,
#define CINTTYPE	8,
#define CLONGTYPE	9,
#define CFLOATTYPE	10,
#define CDOUBLETYPE 11,
#define CDECIMALTYPE	12,
#define CFIXCHARTYPE	13,
#define CSTRINGTYPE 14,
#define CDATETYPE	15,
#define CMONEYTYPE	16,
#define CDTIMETYPE	17,
#define CLOCATORTYPE	18,
#define CVCHARTYPE	19,
#define CINVTYPE	20,
#define CFILETYPE	21,
#define CINT8TYPE	22,
#define CCOLLTYPE	23,
#define CLVCHARTYPE	24,
#define CFIXBINTYPE	25,
#define CVARBINTYPE	26,
#define CBOOLTYPE	27,
#define CROWTYPE	28,
#define CLVCHARPTRTYPE	29,
#define CTYPEMAX	30,
#define SQLCHAR	35,
#define SQLSMINT	36,
#define SQLINT	37,
#define SQLFLOAT	38,
#define SQLSMFLOAT	39,
#define SQLDECIMAL	40,
#define SQLSERIAL	41,
#define SQLDATE	42,
#define SQLDTIME	43,
#define SQLTEXT	44,
#define SQLVCHAR	45,
#define SQLINTERVAL	46,
#define SQLNCHAR	47,
#define SQLNVCHAR	48,
#define SQLINT8	50,
#define SQLSERIAL8	51,
#define SQLINT8	53,
#define SQLSERIAL8	54,

/home/seinoyu/pgsql/master/postgresql/sqlda.pgc,108
sqlda_t	*inp_sqlda,inp_sqlda13,
sqlda_t	*inp_sqlda, *outp_sqlda;outp_sqlda13,
dump_sqlda(16,
main 54,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/preproc-define.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/define.pgc,75
typedef int intarray[intarray14,
main(17,
	   typedef char  string 21,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-parser.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/parser.pgc,13
int main(8,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-fetch.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/fetch.pgc,13
int main(7,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/compat_informix-dec_test.c,25
#define ECPGdebug(9,267

/home/seinoyu/pgsql/master/postgresql/printf_hack.h,17
print_double(6,

/home/seinoyu/pgsql/master/postgresql/dec_test.pgc,70
char* decs[decs20,
#define BUFSIZE 34,
main(37,
check_errno(208,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/compat_informix-test_informix.c,25
#define ECPGdebug(9,267

/home/seinoyu/pgsql/master/postgresql/test_informix.pgc,65
static void dosqlprint(8,
int main(12,
static void openit(92,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/preproc-init.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/sqlca.h,391
#define POSTGRES_SQLCA_H2,
#define PGDLLIMPORT 6,
#define PGDLLIMPORT8,
#define SQLERRMC_LEN	12,
struct sqlca_t19,
	char		sqlcaid[sqlcaid21,
	long		sqlabc;22,
	long		sqlcode;23,
		int			sqlerrml;26,
		char		sqlerrmc[sqlerrmc27,
	}			sqlerrm;28,
	char		sqlerrp[sqlerrp29,
	long		sqlerrd[sqlerrd30,
	char		sqlwarn[sqlwarn39,
	char		sqlstate[sqlstate53,
#define sqlca 59,

/home/seinoyu/pgsql/master/postgresql/init.pgc,243
enum e 3,
enum e { ENUM0,3,
enum e { ENUM0, ENUM1 3,
struct sa 4,
struct sa { int member;4,
static int fa(6,
fb(13,
fc(20,
static int fd(26,
static int fe(32,
static void sqlnotice(38,
#define YES 47,
namespace N50,
int main(56,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-array.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/sqlca.h,391
#define POSTGRES_SQLCA_H2,
#define PGDLLIMPORT 6,
#define PGDLLIMPORT8,
#define SQLERRMC_LEN	12,
struct sqlca_t19,
	char		sqlcaid[sqlcaid21,
	long		sqlabc;22,
	long		sqlcode;23,
		int			sqlerrml;26,
		char		sqlerrmc[sqlerrmc27,
	}			sqlerrm;28,
	char		sqlerrp[sqlerrp29,
	long		sqlerrd[sqlerrd30,
	char		sqlwarn[sqlwarn39,
	char		sqlstate[sqlstate53,
#define sqlca 59,

/home/seinoyu/pgsql/master/postgresql/array.pgc,10
main 16,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/compat_informix-describe.c,25
#define ECPGdebug(9,267

/home/seinoyu/pgsql/master/postgresql/sqlda.h,190
#define ECPG_SQLDA_H2,
typedef struct sqlvar_compat sqlvar_t;7,
typedef struct sqlda_compat sqlda_t;8,
typedef struct sqlvar_struct sqlvar_t;13,
typedef struct sqlda_struct sqlda_t;14,

/home/seinoyu/pgsql/master/postgresql/describe.pgc,118
sqlda_t	*sqlda1,sqlda19,
sqlda_t	*sqlda1, *sqlda2,sqlda29,
sqlda_t	*sqlda1, *sqlda2, *sqlda3;sqlda39,
main 12,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-copystdout.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/sqlca.h,391
#define POSTGRES_SQLCA_H2,
#define PGDLLIMPORT 6,
#define PGDLLIMPORT8,
#define SQLERRMC_LEN	12,
struct sqlca_t19,
	char		sqlcaid[sqlcaid21,
	long		sqlabc;22,
	long		sqlcode;23,
		int			sqlerrml;26,
		char		sqlerrmc[sqlerrmc27,
	}			sqlerrm;28,
	char		sqlerrp[sqlerrp29,
	long		sqlerrd[sqlerrd30,
	char		sqlwarn[sqlwarn39,
	char		sqlstate[sqlstate53,
#define sqlca 59,

/home/seinoyu/pgsql/master/postgresql/copystdout.pgc,9
main 9,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-show.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/show.pgc,13
int main(7,

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/pgc.c,0

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/preproc/pgc.l,0

/home/seinoyu/pgsql/master/postgresql/src/fe_utils/psqlscan.l,0

/home/seinoyu/pgsql/master/postgresql/src/fe_utils/psqlscan.c,0

/home/seinoyu/pgsql/master/postgresql/src/pl/plpgsql/src/plerrcodes.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_catalan.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_basque.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_german.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_2_hungarian.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_french.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_swedish.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_spanish.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_lithuanian.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_irish.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_porter.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_hungarian.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_portuguese.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_danish.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_danish.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_finnish.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_norwegian.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_dutch.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_basque.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_2_romanian.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_porter.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_arabic.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_indonesian.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_swedish.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_romanian.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_tamil.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_nepali.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_dutch.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_german.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_spanish.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_italian.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_irish.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_hindi.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_finnish.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_norwegian.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_english.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_indonesian.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_KOI8_R_russian.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_italian.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_greek.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_russian.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_english.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_portuguese.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_ISO_8859_1_french.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_catalan.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/snowball/libstemmer/stem_UTF_8_turkish.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32_msvc/utime.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32_msvc/sys/time.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32_msvc/sys/file.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32_msvc/sys/param.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32_msvc/unistd.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/netbsd.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/openbsd.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32/arpa/inet.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32/netdb.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32/dlfcn.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32/sys/wait.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32/pwd.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32/netinet/in.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/win32/grp.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/hpux.h,0

/home/seinoyu/pgsql/master/postgresql/src/include/port/freebsd.h,0

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/scan.c,0

/home/seinoyu/pgsql/master/postgresql/src/backend/parser/scan.l,0

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/misc/guc-file.c,0

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/misc/guc-file.l,0

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/jsonpath_scan.c,0

/home/seinoyu/pgsql/master/postgresql/src/backend/utils/adt/jsonpath_scan.l,0

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/repl_scanner.c,0

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/syncrep_scanner.l,0

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/syncrep_scanner.c,0

/home/seinoyu/pgsql/master/postgresql/src/backend/replication/repl_scanner.l,0

/home/seinoyu/pgsql/master/postgresql/src/backend/bootstrap/bootscanner.l,0

/home/seinoyu/pgsql/master/postgresql/src/backend/bootstrap/bootscanner.c,0

/home/seinoyu/pgsql/master/postgresql/src/backend/storage/page/checksum.c,0

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/compatlib/informix.c,1204
#define POSTGRES_ECPG_INTERNAL3,48
static struct sqlca_t sqlca_init 21,462
deccall2(48,753
deccall3(86,1460
decadd(151,2876
deccmp(167,3203
deccopy(173,3300
deccvasc(179,3387
deccvdbl(227,4248
deccvint(249,4671
deccvlong(271,5082
decdiv(293,5500
decmul(318,5909
decsub(340,6236
dectoasc(362,6563
dectodbl(413,7411
dectoint(434,7773
dectolong(458,8202
rdatestr(483,8667
rstrdate(504,8984
rtoday(510,9072
rjulmdy(516,9121
rdefmtdate(528,9314
rfmtdate(554,9918
rmdyjul(567,10138
rdayofweek(579,10309
dtcurrent(587,10402
dtcvasc(593,10468
dtcvfmtasc(619,10910
dtsub(625,11038
dttoasc(631,11146
dttofmtasc(641,11297
intoasc(647,11437
	long		val;664,11638
	int			maxdigits;665,11650
	int			digits;666,11668
	int			remaining;667,11683
	char		sign;668,11701
	char	   *val_string;val_string669,11714
}			value;670,11736
initValue(677,11846
getRightMostDot(725,12734
rfmtlong(743,12969
rupshift(937,16685
byleng(945,16821
ldchar(952,16927
rgetmsg(961,17055
rtypalign(970,17261
rtypmsize(978,17409
rtypwidth(986,17552
ECPG_informix_set_var(994,17707
ECPG_informix_get_var(1000,17819
ECPG_informix_reset_sqlca(1006,17892
rsetnull(1017,18078
risnull(1024,18154

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-print.c,262
PQprint(68,1897
		struct winsize103,2741
			int			ws_row;105,2762
			int			ws_col;106,2779
do_field(333,8602
do_header(447,10855
output_row(533,12569
PQdisplayTuples(578,13583
#define DEFAULT_FIELD_SEP 586,13828
PQprintTuples(676,15504
fill(761,17123

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-lobj.c,570
#define LO_BUFSIZE	42,906
lo_open(57,1285
lo_close(99,1953
lo_truncate(137,2579
lo_truncate64(205,4165
lo_read(258,5157
lo_write(312,6270
lo_lseek(365,7375
lo_lseek64(409,8117
lo_creat(465,9214
lo_create(504,9936
lo_tell(548,10783
lo_tell64(584,11356
lo_unlink(628,12105
lo_import(668,12767
lo_import_with_oid(683,13087
lo_import_internal(689,13222
lo_export(784,15331
lo_initialize(876,17613
lo_hton64(1061,22414
		pg_int64	i64;1065,22453
		uint32		i32[i321066,22469
lo_ntoh64(1086,22842
		pg_int64	i64;1090,22880
		uint32		i32[i321091,22896

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-misc.c,733
PQlibVersion(66,1726
pqGetc(80,2030
pqPutc(98,2315
pqGets_internal(118,2730
pqGets(149,3349
pqGets_append(155,3438
pqPuts(165,3608
pqGetnchar(181,3889
pqSkipnchar(210,4573
pqPutnchar(232,4991
pqGetInt(253,5357
pqPutInt(293,6240
pqCheckOutBufferSpace(330,7063
pqCheckInBufferSpace(394,8553
pqPutMsgStart(505,11769
pqPutMsgBytes(550,12780
pqPutMsgEnd(573,13525
pqReadData(615,14622
pqSendSome(825,21049
pqFlush(1002,26230
pqWait(1025,26773
pqWaitTimed(1038,27089
pqReadReady(1062,27576
pqWriteReady(1072,27783
pqSocketCheck(1086,28164
pqSocketPoll(1136,29425
PQmblen(1221,31089
PQdsplen(1231,31278
PQenv2encoding(1240,31436
libpq_binddomain(1259,31714
libpq_gettext(1288,32260
libpq_ngettext(1295,32375

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-protocol3.c,711
#define VALID_LONG_MESSAGE_TYPE(38,864
pqParseInput3(63,1873
handleSyncLoss(446,12924
getRowDescriptions(468,13879
getParamDescriptions(646,18862
getAnotherTuple(743,21595
pqGetErrorNotice3(871,25123
pqBuildErrorMessage3(985,28385
reportErrorPosition(1156,33367
#define DISPLAY_SIZE	1158,33448
#define MIN_RIGHT_CUT	1159,33514
getParameterStatus(1384,38972
getNotify(1413,39707
getCopyStart(1469,41080
getReadyForQuery(1525,42260
getCopyDataMessage(1557,42865
pqGetCopyData3(1662,45591
pqGetline3(1722,46989
pqGetlineAsync3(1774,47942
pqEndcopy3(1829,49536
pqFunctionCall3(1923,52064
pqBuildStartupPacket3(2124,57126
build_startup_packet(2147,57861
#define ADD_STARTUP_OPTION(2165,58294

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-secure-openssl.c,1587
static bool pq_init_ssl_lib 82,2011
static bool pq_init_crypto_lib 83,2047
static bool ssl_lib_initialized 85,2087
static long ssl_open_connections 88,2157
static pthread_mutex_t ssl_config_mutex 91,2210
static pthread_mutex_t ssl_config_mutex 93,2285
static long win32_ssl_create_mutex 94,2333
static PQsslKeyPassHook_OpenSSL_type PQsslKeyPassHook 98,2421
pgtls_init_library(106,2742
pgtls_open_client(123,3071
pgtls_read(145,3540
pgtls_read_pending(268,7230
pgtls_write(274,7312
pgtls_get_peer_certificate_hash(376,10038
verify_cb(466,12421
openssl_verify_peer_name_matches_certificate_name(478,12635
pgtls_verify_peer_name_matches_certificate_guts(512,13574
pq_threadidcallback(599,15752
static pthread_mutex_t *pq_lockarray;pq_lockarray609,16013
pq_lockingcallback(612,16064
pgtls_init(638,16727
destroy_ssl_system(736,19228
initialize_SSL(777,20361
open_client_SSL(1265,34775
pgtls_close(1391,38352
static char ssl_nomem[ssl_nomem1447,39601
#define SSL_ERR_LEN 1449,39674
SSLerrmessage(1452,39713
SSLerrfree(1476,40213
PQgetssl(1490,40502
PQsslStruct(1498,40583
PQsslAttributeNames(1508,40762
PQsslAttribute(1523,40951
#define BIO_get_data(1567,42235
#define BIO_set_data(1568,42272
static BIO_METHOD *my_bio_methods;my_bio_methods1571,42330
my_sock_read(1574,42377
my_sock_write(1604,42873
my_BIO_s_socket(1634,43388
my_SSL_set_fd(1680,44811
PQdefaultSSLKeyPassHook_OpenSSL(1713,45458
PQgetSSLKeyPassHook_OpenSSL(1731,45833
PQsetSSLKeyPassHook_OpenSSL(1737,45903
PQssl_passwd_cb(1748,46122
ssl_protocol_version_to_openssl(1769,46785

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/libpq-fe.h,3384
#define LIBPQ_FE_H16,504
#define PG_COPYRES_ATTRS	34,740
#define PG_COPYRES_TUPLES	35,773
#define PG_COPYRES_EVENTS	36,838
#define PG_COPYRES_NOTICEHOOKS	37,872
	CONNECTION_OK,49,1163
	CONNECTION_BAD,50,1179
	CONNECTION_STARTED,57,1372
	CONNECTION_MADE,58,1437
	CONNECTION_AWAITING_RESPONSE,59,1499
	CONNECTION_AUTH_OK,61,1599
	CONNECTION_SETENV,63,1693
	CONNECTION_SSL_STARTUP,64,1746
	CONNECTION_NEEDED,65,1795
	CONNECTION_CHECK_WRITABLE,66,1856
	CONNECTION_CONSUME,68,1947
	CONNECTION_GSS_STARTUP,70,2034
	CONNECTION_CHECK_TARGET	71,2086
} ConnStatusType;72,2162
	PGRES_POLLING_FAILED 76,2196
	PGRES_POLLING_READING,77,2223
	PGRES_POLLING_WRITING,78,2288
	PGRES_POLLING_OK,79,2354
	PGRES_POLLING_ACTIVE	80,2373
} PostgresPollingStatusType;82,2465
	PGRES_EMPTY_QUERY 86,2510
	PGRES_COMMAND_OK,87,2573
	PGRES_TUPLES_OK,90,2704
	PGRES_COPY_OUT,93,2862
	PGRES_COPY_IN,94,2923
	PGRES_BAD_RESPONSE,95,2982
	PGRES_NONFATAL_ERROR,97,3073
	PGRES_FATAL_ERROR,98,3129
	PGRES_COPY_BOTH,99,3170
	PGRES_SINGLE_TUPLE	100,3234
} ExecStatusType;101,3297
	PQTRANS_IDLE,105,3331
	PQTRANS_ACTIVE,106,3371
	PQTRANS_INTRANS,107,3417
	PQTRANS_INERROR,108,3474
	PQTRANS_UNKNOWN	109,3532
} PGTransactionStatusType;110,3582
	PQERRORS_TERSE,114,3625
	PQERRORS_DEFAULT,115,3678
	PQERRORS_VERBOSE,116,3723
	PQERRORS_SQLSTATE	117,3771
} PGVerbosity;118,3836
	PQSHOW_CONTEXT_NEVER,122,3867
	PQSHOW_CONTEXT_ERRORS,123,3922
	PQSHOW_CONTEXT_ALWAYS	124,3992
} PGContextVisibility;125,4048
	PQPING_OK,134,4216
	PQPING_REJECT,135,4270
	PQPING_NO_RESPONSE,136,4337
	PQPING_NO_ATTEMPT	137,4397
} PGPing;138,4462
typedef struct pg_conn PGconn;143,4606
typedef struct pg_result PGresult;150,4930
typedef struct pg_cancel PGcancel;156,5151
typedef struct pgNotify164,5490
	char	   *relname;relname166,5516
	int			be_pid;167,5570
	char	   *extra;extra168,5632
	struct pgNotify *next;next170,5751
} PGnotify;171,5792
typedef void (*PQnoticeReceiver)PQnoticeReceiver174,5856
typedef void (*PQnoticeProcessor)PQnoticeProcessor175,5923
typedef char pqbool;178,6026
typedef struct _PQprintOpt180,6048
	pqbool		header;182,6077
	pqbool		align;183,6144
	pqbool		standard;184,6190
	pqbool		html3;185,6238
	pqbool		expanded;186,6281
	pqbool		pager;187,6321
	char	   *fieldSep;fieldSep188,6376
	char	   *tableOpt;tableOpt189,6419
	char	   *caption;caption190,6473
	char	  **fieldName;fieldName191,6514
} PQprintOpt;193,6602
typedef struct _PQconninfoOption204,6998
	char	   *keyword;keyword206,7033
	char	   *envvar;envvar207,7087
	char	   *compiled;compiled208,7148
	char	   *val;val209,7210
	char	   *label;label210,7267
	char	   *dispchar;dispchar211,7326
	int			dispsize;216,7571
} PQconninfoOption;217,7631
	int			len;225,7761
	int			isint;226,7773
		int		   *ptr;ptr229,7797
		int			integer;230,7857
	}			u;231,7874
} PQArgBlock;232,7882
typedef struct pgresAttDesc238,8017
	char	   *name;name240,8047
	Oid			tableid;241,8083
	int			columnid;242,8129
	int			format;243,8177
	Oid			typid;244,8236
	int			typlen;245,8266
	int			atttypmod;246,8299
} PGresAttDesc;247,8352
#define PQsetdb(272,9183
typedef void (*pgthreadlock_t)pgthreadlock_t384,13542
#define PQfreeNotify(518,18812
#define PQnoPasswordSupplied	522,18972
typedef int (*PQsslKeyPassHook_OpenSSL_type)PQsslKeyPassHook_OpenSSL_type623,22968

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-exec.c,3118
char	   *const pgresStatus[pgresStatus32,729
static int	static_client_encoding 49,1113
static bool static_std_strings 50,1163
#define PGRESULT_DATA_BLOCKSIZE	128,5027
#define PGRESULT_ALIGN_BOUNDARY	129,5065
#define PGRESULT_BLOCK_OVERHEAD	130,5135
#define PGRESULT_SEP_ALLOC_THRESHOLD	131,5220
PQmakeEmptyPGresult(141,5541
PQsetResultAttrs(229,7683
PQcopyResult(294,9553
dupEvents(387,11496
PQsetvalue(431,12508
PQresultAlloc(518,14442
pqResultAlloc(534,14886
PQresultMemorySize(634,17382
pqResultStrdup(646,17570
pqSetResultError(660,17822
pqCatenateResultError(675,18093
PQclear(694,18486
pqClearAsyncResult(749,19586
pqSaveErrorResult(772,20489
pqSaveWriteError(798,21226
pqPrepareAsyncResult(826,22148
pqInternalNotice(871,23439
pqAddTuple(926,24999
pqSaveMessageField(993,26989
pqSaveParameterStatus(1014,27462
pqRowProcessor(1132,30573
PQsendQuery(1234,33040
PQsendQueryParams(1285,34210
PQsendPrepare(1330,35222
PQsendQueryPrepared(1427,37464
PQsendQueryStart(1467,38365
PQsendQueryGuts(1508,39342
PQsetSingleRowMode(1677,43092
PQconsumeInput(1704,43619
parseInput(1740,44525
PQisBusy(1754,44738
PQgetResult(1778,45224
getCopyResult(1901,48270
PQexec(1939,49563
PQexecParams(1953,49821
PQprepare(1983,50650
PQexecPrepared(2000,51059
PQexecStart(2021,51561
PQexecFinish(2095,53523
PQdescribePrepared(2156,55302
PQdescribePortal(2175,55825
PQsendDescribePrepared(2192,56202
PQsendDescribePortal(2205,56495
PQsendDescribe(2220,56836
PQnotifies(2289,58568
PQputCopyData(2317,59164
PQputCopyEnd(2384,61144
PQgetCopyData(2473,63183
PQgetline(2515,64602
PQgetlineAsync(2565,66331
PQputline(2585,66842
PQputnbytes(2595,67044
PQendcopy(2618,67672
PQfn(2652,68662
PQresultStatus(2692,69490
PQresStatus(2700,69604
PQresultErrorMessage(2708,69809
PQresultVerboseErrorMessage(2716,69924
PQresultErrorField(2754,71093
PQntuples(2769,71360
PQnfields(2777,71443
PQbinaryTuples(2785,71534
check_field_number(2798,71740
check_tuple_field_number(2813,72102
check_param_number(2836,72672
PQfname(2855,73085
PQfnumber(2877,73728
PQftable(2974,75554
PQftablecol(2985,75761
PQfformat(2996,75954
PQftype(3007,76143
PQfsize(3018,76347
PQfmod(3029,76534
PQcmdStatus(3040,76726
PQoidStatus(3053,76920
PQoidValue(3081,77464
PQcmdTuples(3110,78080
PQgetvalue(3163,79218
PQgetlength(3174,79482
PQgetisnull(3188,79804
PQnparams(3202,80140
PQparamtype(3213,80309
PQsetnonblocking(3231,80825
PQisnonblocking(3264,81624
PQisthreadsafe(3271,81728
PQflush(3283,81900
PQfreemem(3296,82143
#undef PQfreeNotify3309,82464
PQfreeNotify(3313,82528
PQescapeStringInternal(3335,83207
PQescapeStringConn(3410,84843
PQescapeString(3428,85188
PQescapeInternal(3443,85696
PQescapeLiteral(3564,88678
PQescapeIdentifier(3570,88798
static const char hextbl[hextbl3576,88950
static const int8 hexlookup[hexlookup3578,89000
get_hex(3590,89570
PQescapeByteaInternal(3617,90273
PQescapeByteaConn(3714,91850
PQescapeBytea(3726,92139
#define ISFIRSTOCTDIGIT(3734,92358
#define ISOCTDIGIT(3735,92415
#define OCTVAL(3736,92467
PQunescapeBytea(3751,93048

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-secure-common.c,140
wildcard_certificate_match(43,1365
pq_verify_peer_name_matches_certificate_name(85,2515
pq_verify_peer_name_matches_certificate(153,3969

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/legacy-pqsignal.c,18
pqsignal(36,1170

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/pthread-win32.c,160
pthread_self(18,402
pthread_setspecific(24,461
pthread_getspecific(29,523
pthread_mutex_init(35,585
pthread_mutex_lock(45,775
pthread_mutex_unlock(54,886

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/pqexpbuffer.h,384
#define PQEXPBUFFER_H26,1051
typedef struct PQExpBufferData44,1900
	char	   *data;data46,1933
	size_t		len;47,1949
	size_t		maxlen;48,1963
} PQExpBufferData;49,1980
typedef PQExpBufferData *PQExpBuffer;PQExpBuffer51,2000
#define PQExpBufferBroken(59,2239
#define PQExpBufferDataBroken(67,2520
#define INITIAL_EXPBUFFER_SIZE	76,2794
extern void printfPQExpBuffer(149,5195

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/win32.h,244
#define __win32_h_included5,66
#define close(12,164
#define read(13,191
#define write(14,224
#undef EAGAIN	16,260
#undef EINTR17,309
#define EINTR 18,322
#define EWOULDBLOCK 20,365
#define ECONNRESET 23,426
#define EINPROGRESS 26,486

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-connect.c,4977
#undef _WIN32_IE38,892
#define _WIN32_IE 40,916
#undef near42,953
#define near44,972
#define LDAP_DEPRECATED 71,1463
typedef struct timeval LDAP_TIMEVAL;73,1507
#define PGPASSFILE 80,1683
#define PGPASSFILE 82,1718
#define ERRCODE_APPNAME_UNKNOWN 91,2010
#define ERRCODE_INVALID_PASSWORD 94,2104
#define ERRCODE_CANNOT_CONNECT_NOW 96,2160
#define PG_TCP_KEEPALIVE_IDLE 104,2455
#define PG_TCP_KEEPALIVE_IDLE_STR 105,2498
#define PG_TCP_KEEPALIVE_IDLE 108,2660
#define PG_TCP_KEEPALIVE_IDLE_STR 109,2714
#define PG_TCP_KEEPALIVE_IDLE 113,2954
#define PG_TCP_KEEPALIVE_IDLE_STR 114,2998
#define DefaultHost	121,3162
#define DefaultTty	122,3195
#define DefaultOption	123,3218
#define DefaultAuthtype	124,3243
#define DefaultChannelBinding	126,3288
#define DefaultChannelBinding	128,3333
#define DefaultTargetSessionAttrs	130,3380
#define DefaultSSLMode 132,3435
#define DefaultSSLMode	134,3473
#define DefaultGSSMode 138,3561
#define DefaultGSSMode 140,3599
typedef struct _internalPQconninfoOption171,4865
	char	   *keyword;keyword173,4908
	char	   *envvar;envvar174,4962
	char	   *compiled;compiled175,5023
	char	   *val;val176,5085
	char	   *label;label177,5141
	char	   *dispchar;dispchar178,5200
	int			dispsize;183,5445
	off_t		connofs;190,5661
} internalPQconninfoOption;191,5728
static const internalPQconninfoOption PQconninfoOptions[PQconninfoOptions193,5757
static const PQEnvironmentOption EnvironmentOptions[EnvironmentOptions362,11233
static const char uri_designator[uri_designator381,11565
static const char short_uri_designator[short_uri_designator382,11619
pgthreadlock_t pg_g_threadlock 442,14709
pqDropConnection(458,15252
pqDropServerData(553,17510
PQconnectdbParams(646,20189
PQpingParams(665,20579
PQconnectdb(702,21685
PQping(718,21962
PQconnectStartParams(749,22966
PQconnectStart(828,24848
fillPGconn(872,25607
connectOptions1(914,26625
count_comma_separated_elems(951,27309
parse_comma_separated_list(975,27777
connectOptions2(1012,28452
PQconndefaults(1444,40234
PQsetdbLogin(1482,41170
connectNoDelay(1611,43701
getHostaddr(1638,44285
connectFailureMessage(1670,45012
useKeepalives(1744,47518
parse_int_param(1763,47958
setKeepalivesIdle(1809,48913
setKeepalivesInterval(1843,49585
setKeepalivesCount(1878,50324
setKeepalivesWin32(1914,51095
setTCPUserTimeout(1964,52125
connectDBStart(2003,52905
connectDBComplete(2077,54999
saveErrorMessage(2196,57827
restoreErrorMessage(2218,58481
PQconnectPoll(2259,60005
internal_ping(3801,103412
makeEmptyPGconn(3866,105790
freePGconn(3954,108278
release_conn_addrinfo(4093,111623
sendTerminateConn(4108,111903
closePGconn(4135,112590
PQfinish(4170,113542
PQreset(4184,113751
PQresetStart(4225,114611
PQresetPoll(4244,114869
PQgetCancel(4291,116104
PQfreeCancel(4314,116498
internal_cancel(4342,117645
		uint32		packetlen;4351,117870
		CancelRequestPacket cp;4352,117891
PQcancel(4446,120474
PQrequestCancel(4471,121233
pqPacketSend(4515,122350
#define LDAP_URL	4539,122814
#define LDAP_DEF_PORT	4540,122841
#define PGLDAP_TIMEOUT 4541,122867
#define ld_is_sp_tab(4543,122893
#define ld_is_nl_cr(4544,122945
ldapServiceLookup(4567,123666
#define MAXBUFSIZE 5014,133644
parseServiceInfo(5027,134141
parseServiceFile(5096,135909
PQconninfoParse(5274,139787
conninfo_init(5296,140354
parse_connection_string(5336,141482
uri_prefix_length(5356,142081
recognized_connection_string(5379,142698
conninfo_parse(5390,142954
conninfo_array_parse(5568,146632
conninfo_add_defaults(5732,150613
conninfo_uri_parse(5837,153294
conninfo_uri_parse_options(5890,154636
conninfo_uri_parse_params(6134,160291
conninfo_uri_decode(6265,163423
get_hexdigit(6333,164799
conninfo_getval(6354,165293
conninfo_storeval(6380,166159
conninfo_find(6445,167620
PQconninfo(6463,167950
PQconninfoFree(6504,168762
PQdb(6522,169082
PQuser(6530,169168
PQpass(6538,169256
PQhost(6555,169615
PQhostaddr(6578,170152
PQport(6591,170348
PQtty(6603,170504
PQoptions(6611,170590
PQstatus(6619,170692
PQtransactionStatus(6627,170809
PQparameterStatus(6637,171029
PQprotocolVersion(6652,171340
PQserverVersion(6662,171503
PQerrorMessage(6672,171648
PQsocket(6690,172332
PQbackendPID(6698,172455
PQconnectionNeedsPassword(6706,172576
PQconnectionUsedPassword(6721,172818
PQclientEncoding(6732,172965
PQsetClientEncoding(6740,173100
PQsetErrorVerbosity(6786,174249
PQsetErrorContextVisibility(6798,174456
PQtrace(6810,174689
PQuntrace(6819,174815
PQsetNoticeReceiver(6831,174965
PQsetNoticeProcessor(6848,175259
defaultNoticeReceiver(6871,175803
defaultNoticeProcessor(6886,176297
pwdfMatchesString(6898,176602
passwordFromFile(6935,177236
#define LINELEN 6942,177428
#undef LINELEN7081,180472
pgpassfileWarning(7090,180624
sslVerifyProtocolVersion(7114,181380
sslVerifyProtocolRange(7140,182086
pqGetHomeDirectory(7193,183666
default_threadlock(7222,184311
PQregisterThreadLock(7257,185120

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/test/uri-regress.c,13
main(21,547

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-protocol2.c,345
pqSetenvPoll(47,1144
pqParseInput2(405,9832
getRowDescriptions(652,17011
getAnotherTuple(783,20561
pqGetErrorNotice2(956,24902
checkXactStatus(1087,28869
getNotify(1115,29843
pqGetCopyData2(1162,31141
pqGetline2(1236,32626
pqGetlineAsync2(1287,33488
pqEndcopy2(1345,35135
pqFunctionCall2(1430,37393
pqBuildStartupPacket2(1589,41299

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-gssapi-common.c,112
pg_GSS_error_int(25,633
pg_GSS_error(45,1089
pg_GSS_have_cred_cache(61,1527
pg_GSS_load_servicename(82,1928

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-gssapi-common.h,34
#define FE_GSSAPI_COMMON_H14,377

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-secure.c,1136
#define SIGPIPE_MASKED(65,1428
struct sigpipe_info69,1532
	sigset_t	oldsigmask;71,1554
	bool		sigpipe_pending;72,1576
	bool		got_epipe;73,1600
#define DECLARE_SIGPIPE_INFO(76,1622
#define DISABLE_SIGPIPE(78,1687
#define REMEMBER_EPIPE(89,1945
#define RESTORE_SIGPIPE(95,2052
#define DECLARE_SIGPIPE_INFO(103,2286
#define DISABLE_SIGPIPE(105,2348
#define REMEMBER_EPIPE(111,2495
#define RESTORE_SIGPIPE(113,2533
#define DECLARE_SIGPIPE_INFO(121,2722
#define DISABLE_SIGPIPE(122,2759
#define REMEMBER_EPIPE(123,2809
#define RESTORE_SIGPIPE(124,2846
PQsslInUse(133,3102
PQinitSSL(145,3284
PQinitOpenSSL(157,3492
pqsecure_initialize(168,3644
pqsecure_open_client(183,3839
pqsecure_close(197,4033
pqsecure_read(213,4395
pqsecure_raw_read(239,4714
pqsecure_write(296,6098
pqsecure_raw_write(322,6427
PQgetssl(409,8361
PQsslStruct(415,8410
PQsslAttribute(421,8493
PQsslAttributeNames(427,8589
PQgetSSLKeyPassHook_OpenSSL(435,8720
PQsetSSLKeyPassHook_OpenSSL(441,8778
PQdefaultSSLKeyPassHook_OpenSSL(447,8860
PQgetgssctx(457,9081
PQgssEncInUse(463,9130
pq_block_sigpipe(478,9368
pq_reset_sigpipe(528,10917

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-secure-gssapi.c,592
#define GSS_REQUIRED_FLAGS 26,617
#define PQ_GSS_SEND_BUFFER_SIZE 53,1880
#define PQ_GSS_RECV_BUFFER_SIZE 54,1918
#define PqGSSSendBuffer 61,2126
#define PqGSSSendLength 62,2173
#define PqGSSSendNext 63,2220
#define PqGSSSendConsumed 64,2263
#define PqGSSRecvBuffer 65,2314
#define PqGSSRecvLength 66,2361
#define PqGSSResultBuffer 67,2408
#define PqGSSResultLength 68,2459
#define PqGSSResultNext 69,2510
#define PqGSSMaxPktSize 70,2557
pg_GSS_write(86,3159
pg_GSS_read(265,8625
gss_read(436,13922
pqsecure_open_gss(480,14982
PQgetgssctx(716,21604
PQgssEncInUse(728,21741

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-auth.c,501
pg_GSS_continue(57,1274
pg_GSS_startup(150,3411
pg_SSPI_error(190,4205
pg_SSPI_continue(209,4732
pg_SSPI_startup(340,8164
pg_SASL_init(413,10031
pg_SASL_continue(621,16021
pg_local_sendauth(691,17783
		struct cmsghdr hdr;700,17929
		unsigned char buf[buf701,17951
pg_password_sendauth(743,19042
check_expected_areq(813,20773
pg_fe_sendauth(863,22338
pg_fe_getauthname(1073,28075
PQencryptPassword(1147,30042
PQencryptPasswordConn(1189,31539
#define MAX_ALGORITHM_NAME_LEN 1192,31645

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-secure-common.h,34
#define FE_SECURE_COMMON_H17,483

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/libpq-events.c,181
PQregisterEventProc(40,1299
PQsetInstanceData(98,2627
PQinstanceData(121,2962
PQresultSetInstanceData(142,3313
PQresultInstanceData(165,3666
PQfireResultCreateEvents(185,4056

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/libpq-int.h,9725
#define LIBPQ_INT_H21,765
#define SECURITY_WIN3255,1345
#undef SECURITY_WIN3260,1460
	void	   *value;value68,1585
	int			length;69,1602
} gss_buffer_desc;70,1617
#define USE_SSL_ENGINE79,1771
#define CMDSTATUS_LEN 86,1881
typedef union pgresult_data PGresult_data;101,2550
union pgresult_data103,2594
	PGresult_data *next;next105,2616
	char		space[space106,2673
typedef struct pgresParamDesc110,2796
	Oid			typid;112,2828
} PGresParamDesc;113,2858
#define NULL_LEN	133,3674
typedef struct pgresAttValue135,3733
	int			len;137,3764
	char	   *value;value138,3813
} PGresAttValue;139,3879
typedef struct pgMessageField142,3942
	struct pgMessageField *next;next144,3974
	char		code;145,4020
	char		contents[contents146,4052
} PGMessageField;147,4120
	PQnoticeReceiver noticeRec;152,4196
	void	   *noticeRecArg;noticeRecArg153,4255
	PQnoticeProcessor noticeProc;154,4279
	void	   *noticeProcArg;noticeProcArg155,4341
} PGNoticeHooks;156,4366
typedef struct PGEvent158,4384
	PGEventProc proc;160,4409
	char	   *name;name161,4467
	void	   *passThrough;passThrough162,4520
	void	   *data;data163,4587
	bool		resultInitialized;164,4642
} PGEvent;165,4707
struct pg_result167,4719
	int			ntups;169,4738
	int			numAttributes;170,4752
	PGresAttDesc *attDescs;attDescs171,4774
	PGresAttValue **tuples;tuples172,4799
	int			tupArrSize;174,4893
	int			numParameters;175,4950
	PGresParamDesc *paramDescs;paramDescs176,4972
	ExecStatusType resultStatus;177,5001
	char		cmdStatus[cmdStatus178,5031
	int			binary;179,5096
	PGNoticeHooks noticeHooks;186,5323
	PGEvent    *events;events187,5351
	int			nEvents;188,5372
	int			client_encoding;189,5388
	char	   *errMsg;errMsg196,5641
	PGMessageField *errFields;errFields197,5702
	char	   *errQuery;errQuery198,5763
	char		null_field[null_field201,5903
	PGresult_data *curBlock;curBlock208,6134
	int			curOffset;209,6196
	int			spaceLeft;210,6257
	size_t		memorySize;212,6323
	PGASYNC_IDLE,218,6489
	PGASYNC_BUSY,219,6539
	PGASYNC_READY,220,6581
	PGASYNC_COPY_IN,221,6635
	PGASYNC_COPY_OUT,222,6695
	PGASYNC_COPY_BOTH	223,6757
} PGAsyncStatusType;224,6822
	PGQUERY_SIMPLE,229,6927
	PGQUERY_EXTENDED,230,6984
	PGQUERY_PREPARE,231,7049
	PGQUERY_DESCRIBE	232,7098
} PGQueryClass;233,7153
	SETENV_STATE_CLIENT_ENCODING_SEND,240,7314
	SETENV_STATE_CLIENT_ENCODING_WAIT,241,7392
	SETENV_STATE_OPTION_SEND,242,7469
	SETENV_STATE_OPTION_WAIT,243,7538
	SETENV_STATE_QUERY1_SEND,244,7606
	SETENV_STATE_QUERY1_WAIT,245,7668
	SETENV_STATE_QUERY2_SEND,246,7731
	SETENV_STATE_QUERY2_WAIT,247,7793
	SETENV_STATE_IDLE248,7856
} PGSetenvStatusType;249,7875
typedef struct PQEnvironmentOption252,7947
	const char *envName,envName254,7984
			   *pgName;pgName255,8045
} PQEnvironmentOption;256,8103
typedef struct pgParameterStatus259,8175
	struct pgParameterStatus *next;next261,8210
	char	   *name;name262,8259
	char	   *value;value263,8298
} pgParameterStatus;265,8412
typedef struct pgLobjfuncs268,8514
	Oid			fn_lo_open;270,8543
	Oid			fn_lo_close;271,8602
	Oid			fn_lo_creat;272,8662
	Oid			fn_lo_create;273,8722
	Oid			fn_lo_unlink;274,8783
	Oid			fn_lo_lseek;275,8844
	Oid			fn_lo_lseek64;276,8904
	Oid			fn_lo_tell;277,8967
	Oid			fn_lo_tell64;278,9026
	Oid			fn_lo_truncate;279,9087
	Oid			fn_lo_truncate64;280,9152
	Oid			fn_lo_read;281,9213
	Oid			fn_lo_write;282,9271
} PGlobjfuncs;283,9330
typedef struct pgDataValue290,9610
	int			len;292,9639
	const char *value;value293,9695
} PGdataValue;294,9760
typedef enum pg_conn_host_type297,9829
	CHT_HOST_NAME,299,9862
	CHT_HOST_ADDRESS,300,9878
	CHT_UNIX_SOCKET301,9897
} pg_conn_host_type;302,9914
typedef struct pg_conn_host309,10159
	pg_conn_host_type type;311,10189
	char	   *host;host312,10242
	char	   *hostaddr;hostaddr313,10291
	char	   *port;port314,10342
	char	   *password;password315,10396
} pg_conn_host;318,10548
struct pg_conn324,10661
	char	   *pghost;pghost327,10720
	char	   *pghostaddr;pghostaddr331,10944
	char	   *pgport;pgport335,11142
	char	   *pgtty;pgtty337,11254
	char	   *connect_timeout;connect_timeout339,11358
	char	   *pgtcp_user_timeout;pgtcp_user_timeout340,11427
	char	   *client_encoding_initial;client_encoding_initial341,11497
	char	   *pgoptions;pgoptions342,11554
	char	   *appname;appname343,11616
	char	   *fbappname;fbappname344,11659
	char	   *dbName;dbName345,11713
	char	   *replication;replication346,11753
	char	   *pguser;pguser347,11818
	char	   *pgpass;pgpass348,11883
	char	   *pgpassfile;pgpassfile349,11901
	char	   *channel_binding;channel_binding350,11968
	char	   *keepalives;keepalives352,12059
	char	   *keepalives_idle;keepalives_idle353,12108
	char	   *keepalives_interval;keepalives_interval354,12169
	char	   *keepalives_count;keepalives_count356,12258
	char	   *sslmode;sslmode358,12348
	char	   *sslcompression;sslcompression359,12414
	char	   *sslkey;sslkey360,12471
	char	   *sslcert;sslcert361,12517
	char	   *sslpassword;sslpassword362,12571
	char	   *sslrootcert;sslrootcert363,12625
	char	   *sslcrl;sslcrl364,12680
	char	   *requirepeer;requirepeer365,12743
	char	   *gssencmode;gssencmode366,12816
	char	   *krbsrvname;krbsrvname367,12879
	char	   *gsslib;gsslib368,12930
	char	   *ssl_min_protocol_version;ssl_min_protocol_version370,13012
	char	   *ssl_max_protocol_version;ssl_max_protocol_version371,13083
	char	   *target_session_attrs;target_session_attrs374,13225
	FILE	   *Pfdebug;Pfdebug377,13302
	PGNoticeHooks noticeHooks;380,13379
	PGEvent    *events;events383,13462
	int			nEvents;384,13522
	int			eventArraySize;385,13569
	ConnStatusType status;388,13645
	PGAsyncStatusType asyncStatus;389,13669
	PGTransactionStatusType xactStatus;390,13701
	PGQueryClass queryclass;391,13768
	char	   *last_query;last_query392,13794
	char		last_sqlstate[last_sqlstate393,13860
	bool		options_valid;394,13914
	bool		nonblocking;395,13975
	bool		singleRowMode;397,14072
	char		copy_is_binary;398,14140
	int			copy_already_done;399,14200
	PGnotify   *notifyHead;notifyHead400,14269
	PGnotify   *notifyTail;notifyTail401,14330
	int			nconnhost;404,14447
	int			whichhost;405,14504
	pg_conn_host *connhost;connhost406,14570
	char	   *connip;connip407,14632
	pgsocket	sock;410,14724
	SockAddr	laddr;412,14806
	SockAddr	raddr;413,14845
	ProtocolVersion pversion;414,14885
	int			sversion;415,14948
	bool		auth_req_received;416,15009
	bool		password_needed;417,15079
	bool		sigpipe_so;418,15144
	bool		sigpipe_flag;419,15211
	bool		write_failed;420,15276
	char	   *write_err_msg;write_err_msg421,15340
	bool		try_next_addr;424,15468
	bool		try_next_host;425,15534
	struct addrinfo *addrlist;addrlist426,15598
	struct addrinfo *addr_cur;addr_cur427,15671
	int			addrlist_family;428,15735
	PGSetenvStatusType setenv_state;429,15801
	const PQEnvironmentOption *next_eo;next_eo430,15863
	bool		send_appname;431,15900
	int			be_pid;434,15986
	int			be_key;435,16047
	pgParameterStatus *pstatus;pstatus436,16108
	int			client_encoding;437,16164
	bool		std_strings;438,16206
	PGVerbosity verbosity;439,16260
	PGContextVisibility show_context;440,16322
	PGlobjfuncs *lobjfuncs;lobjfuncs441,16393
	char	   *inBuffer;inBuffer444,16535
	int			inBufSize;445,16589
	int			inStart;446,16639
	int			inCursor;447,16704
	int			inEnd;448,16761
	char	   *outBuffer;outBuffer451,16873
	int			outBufSize;452,16928
	int			outCount;453,16979
	int			outMsgStart;456,17090
	int			outMsgEnd;458,17192
	PGdataValue *rowBuf;rowBuf461,17286
	int			rowBufLen;462,17356
	PGresult   *result;result465,17471
	PGresult   *next_result;next_result466,17525
	void	   *sasl_state;sasl_state469,17642
	bool		ssl_in_use;472,17687
	bool		allow_ssl_try;475,17722
	bool		wait_ssl_try;476,17781
	SSL		   *ssl;ssl479,17901
	X509	   *peer;peer480,17959
	ENGINE	   *engine;engine482,18025
	void	   *engine;engine484,18078
	gss_ctx_id_t gctx;491,18262
	gss_name_t	gtarg_nam;492,18302
	bool		try_gss;495,18390
	bool		gssenc;496,18438
	gss_cred_id_t gcred;497,18486
	char	   *gss_SendBuffer;gss_SendBuffer500,18604
	int			gss_SendLength;501,18670
	int			gss_SendNext;502,18739
	int			gss_SendConsumed;504,18823
	char	   *gss_RecvBuffer;gss_RecvBuffer506,18944
	int			gss_RecvLength;507,19001
	char	   *gss_ResultBuffer;gss_ResultBuffer508,19070
	int			gss_ResultLength;509,19141
	int			gss_ResultNext;511,19226
	uint32		gss_MaxPktSize;513,19314
	CredHandle *sspicred;sspicred518,19454
	CtxtHandle *sspictx;sspictx519,19508
	char	   *sspitarget;sspitarget520,19550
	int			usesspi;521,19596
	PQExpBufferData errorMessage;526,19723
	PQExpBufferData workBuffer;529,19833
struct pg_cancel536,20055
	SockAddr	raddr;538,20074
	int			be_pid;539,20114
	int			be_key;540,20175
#define USER_CERT_FILE	553,20429
#define USER_KEY_FILE	554,20482
#define ROOT_CERT_FILE	555,20534
#define ROOT_CRL_FILE	556,20581
#define USER_CERT_FILE	559,20703
#define USER_KEY_FILE	560,20744
#define ROOT_CERT_FILE	561,20784
#define ROOT_CRL_FILE	562,20819
#define PGTHREAD_ERROR(586,21522
#define pglock_thread(593,21622
#define pgunlock_thread(594,21669
#define pglock_thread(596,21724
#define pgunlock_thread(597,21760
extern void pqInternalNotice(609,22240
#define HAVE_PGTLS_GET_PEER_CERTIFICATE_HASH759,27827
#define pqIsnonblocking(799,28977
#define libpq_gettext(805,29273
#define libpq_ngettext(806,29302
#define SOCK_ERRNO 814,29487
#define SOCK_STRERROR 815,29526
#define SOCK_ERRNO_SET(816,29565
#define SOCK_ERRNO 818,29616
#define SOCK_STRERROR 819,29641
#define SOCK_ERRNO_SET(820,29674

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/pqexpbuffer.c,494
static const char oom_buffer[oom_buffer38,1185
static const char *oom_buffer_ptr oom_buffer_ptr41,1275
static bool appendPQExpBufferVA(43,1324
createPQExpBuffer(74,2110
initPQExpBuffer(92,2410
destroyPQExpBuffer(116,2881
termPQExpBuffer(131,3121
resetPQExpBuffer(148,3503
enlargePQExpBuffer(174,3998
printfPQExpBuffer(237,5681
appendPQExpBuffer(267,6358
appendPQExpBufferVA(296,7088
appendPQExpBufferStr(369,8961
appendPQExpBufferChar(380,9200
appendBinaryPQExpBuffer(399,9562

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/libpq-events.h,688
#define LIBPQ_EVENTS_H17,560
	PGEVT_REGISTER,29,687
	PGEVT_CONNRESET,30,704
	PGEVT_CONNDESTROY,31,722
	PGEVT_RESULTCREATE,32,742
	PGEVT_RESULTCOPY,33,763
	PGEVT_RESULTDESTROY34,782
} PGEventId;35,803
	PGconn	   *conn;conn39,834
} PGEventRegister;40,852
	PGconn	   *conn;conn44,889
} PGEventConnReset;45,907
	PGconn	   *conn;conn49,945
} PGEventConnDestroy;50,963
	PGconn	   *conn;conn54,1003
	PGresult   *result;result55,1021
} PGEventResultCreate;56,1042
	const PGresult *src;src60,1083
	PGresult   *dest;dest61,1105
} PGEventResultCopy;62,1124
	PGresult   *result;result66,1163
} PGEventResultDestroy;67,1184
typedef int (*PGEventProc)PGEventProc69,1209

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/win32.c,519
#define VC_EXTRALEAN25,605
#define NOGDI27,646
#define NOCRYPT29,667
extern char *libpq_gettext(libpq_gettext37,831
#define libpq_gettext(39,911
static struct WSErrorEntry43,949
	DWORD		error;45,978
	const char *description;description46,993
}			WSErrors[WSErrors47,1019
LookupWSErrorMessage(218,3780
struct MessageDLL234,3991
	const char *dll_name;dll_name236,4011
	void	   *handle;handle237,4034
	int			loaded;238,4052
}			dlls[dlls239,4080
#define DLLS_SIZE 268,4361
winsock_strerror(281,4807

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-auth.h,25
#define FE_AUTH_H15,434

/home/seinoyu/pgsql/master/postgresql/src/interfaces/libpq/fe-auth-scram.c,1244
	FE_SCRAM_INIT,29,709
	FE_SCRAM_NONCE_SENT,30,725
	FE_SCRAM_PROOF_SENT,31,747
	FE_SCRAM_FINISHED32,769
} fe_scram_state_enum;33,788
	fe_scram_state_enum state;37,829
	PGconn	   *conn;conn40,896
	char	   *password;password41,914
	char	   *sasl_mechanism;sasl_mechanism42,934
	uint8		SaltedPassword[SaltedPassword45,987
	char	   *client_nonce;client_nonce46,1026
	char	   *client_first_message_bare;client_first_message_bare47,1050
	char	   *client_final_message_without_proof;client_final_message_without_proof48,1087
	char	   *server_first_message;server_first_message51,1182
	char	   *salt;salt52,1214
	int			saltlen;53,1230
	int			iterations;54,1246
	char	   *nonce;nonce55,1265
	char	   *server_final_message;server_final_message58,1331
	char		ServerSignature[ServerSignature59,1363
} fe_scram_state;60,1402
pg_fe_scram_init(75,1955
pg_fe_scram_channel_bound(131,3168
pg_fe_scram_free(155,3621
pg_fe_scram_exchange(191,4430
read_attr_value(288,6626
build_client_first_message(330,7343
build_client_final_message(439,10042
read_server_first_message(587,14018
read_server_final_message(680,16471
calculate_client_proof(751,18450
verify_server_signature(794,19782
pg_fe_scram_build_secret(827,20708

/home/seinoyu/pgsql/master/postgresql/src/common/wait_error.c,94
wait_result_to_str(32,799
wait_result_is_signal(92,2393
wait_result_is_any_signal(111,3033

/home/seinoyu/pgsql/master/postgresql/src/common/base64.c,185
static const char _base64[_base6427,482
static const int8 b64lookup[b64lookup30,581
pg_b64_encode(49,1326
pg_b64_decode(116,2554
pg_b64_enc_len(224,4433
pg_b64_dec_len(239,4804

/home/seinoyu/pgsql/master/postgresql/src/common/kwlookup.c,27
ScanKeywordLookup(38,1238

/home/seinoyu/pgsql/master/postgresql/src/common/archive.c,29
BuildRestoreCommand(39,1105

/home/seinoyu/pgsql/master/postgresql/src/common/checksum_helper.c,145
pg_checksum_parse_type(28,681
pg_checksum_type_name(56,1467
pg_checksum_init(82,1938
pg_checksum_update(113,2617
pg_checksum_final(146,3557

/home/seinoyu/pgsql/master/postgresql/src/common/username.c,53
get_user_name(31,684
get_user_name_or_exit(74,1552

/home/seinoyu/pgsql/master/postgresql/src/common/d2s_intrinsics.h,264
#define RYU_D2S_INTRINSICS_H35,1217
umul128(42,1325
shiftright128(48,1451
umul128(65,2107
shiftright128(100,3048
umulh(120,3656
div5(151,4497
div10(157,4600
div100(163,4704
div1e8(169,4814
div5(177,4959
div10(183,5021
div100(189,5085
div1e8(195,5151

/home/seinoyu/pgsql/master/postgresql/src/common/hashfn.c,286
#define UINT32_ALIGN_MASK 45,1655
#define rot(48,1774
#define mix(82,3342
#define final(116,4763
hash_bytes(146,5801
hash_bytes_extended(372,10877
hash_bytes_uint32(610,16272
hash_bytes_uint32_extended(631,16613
string_hash(660,17087
tag_hash(677,17517
uint32_hash(688,17760

/home/seinoyu/pgsql/master/postgresql/src/common/rmtree.c,46
#define pg_log_warning(24,507
rmtree(42,984

/home/seinoyu/pgsql/master/postgresql/src/common/sha2.c,1576
#define PG_SHA256_SHORT_BLOCK_LENGTH	78,2805
#define PG_SHA384_SHORT_BLOCK_LENGTH	79,2871
#define PG_SHA512_SHORT_BLOCK_LENGTH	80,2938
#define REVERSE32(84,3103
#define REVERSE64(89,3257
#define ADDINC128(104,3729
#define R(121,4304
#define S32(123,4378
#define S64(125,4489
#define Ch(128,4618
#define Maj(129,4667
#define Sigma0_256(132,4782
#define Sigma1_256(133,4849
#define sigma0_256(134,4916
#define sigma1_256(135,4983
#define Sigma0_512(138,5116
#define Sigma1_512(139,5183
#define sigma0_512(140,5250
#define sigma1_512(141,5317
static const uint32 K256[K256154,5914
static const uint32 sha224_initial_hash_value[sha224_initial_hash_value174,6902
static const uint32 sha256_initial_hash_value[sha256_initial_hash_value186,7118
static const uint64 K512[K512198,7347
static const uint64 sha384_initial_hash_value[sha384_initial_hash_value242,9302
static const uint64 sha512_initial_hash_value[sha512_initial_hash_value254,9589
pg_sha256_init(268,9916
#define ROUND256_0_TO_15(281,10214
#define ROUND256(291,10575
SHA256_Transform(304,10977
SHA256_Transform(375,12589
pg_sha256_update(465,14313
SHA256_Last(518,15614
pg_sha256_final(566,16842
pg_sha512_init(594,17409
#define ROUND512_0_TO_15(607,17733
#define ROUND512(620,18209
SHA512_Transform(633,18612
SHA512_Transform(701,20184
pg_sha512_update(791,22014
SHA512_Last(844,23354
pg_sha512_final(894,24757
pg_sha384_init(923,25362
pg_sha384_update(933,25623
pg_sha384_final(939,25762
pg_sha224_init(967,26384
pg_sha224_update(977,26619
pg_sha224_final(983,26758

/home/seinoyu/pgsql/master/postgresql/src/common/psprintf.c,68
#define MaxAllocSize	28,606
psprintf(46,1217
pvsnprintf(106,3104

/home/seinoyu/pgsql/master/postgresql/src/common/d2s.c,767
#define HAS_64_BIT_INTRINSICS57,1743
#define DOUBLE_MANTISSA_BITS 65,1887
#define DOUBLE_EXPONENT_BITS 66,1919
#define DOUBLE_BIAS 67,1951
#define DOUBLE_POW5_INV_BITCOUNT 69,1977
#define DOUBLE_POW5_BITCOUNT 70,2014
pow5Factor(74,2070
multipleOfPowerOf5(95,2370
multipleOfPowerOf2(106,2622
mulShift(162,4977
mulShiftAll(171,5207
mulShift(182,5515
mulShiftAll(208,5929
mulShiftAll(220,6289
decimalLength(264,7404
typedef struct floating_decimal_64339,8432
	uint64		mantissa;341,8469
	int32		exponent;342,8488
} floating_decimal_64;343,8506
d2d(346,8564
to_chars_df(631,15182
to_chars(787,18998
d2d_small_int(962,23222
double_to_shortest_decimal_bufn(1015,24804
double_to_shortest_decimal_buf(1053,26038
double_to_shortest_decimal(1070,26473

/home/seinoyu/pgsql/master/postgresql/src/common/controldata_utils.c,54
get_controlfile(51,1118
update_controlfile(156,3962

/home/seinoyu/pgsql/master/postgresql/src/common/relpath.c,150
const char *const forkNames[forkNames33,894
forkname_to_number(50,1329
forkname_chars(81,2252
GetDatabasePath(110,2750
GetRelationPath(141,3570

/home/seinoyu/pgsql/master/postgresql/src/common/keywords.c,116
#define PG_KEYWORD(27,582
const uint8 ScanKeywordCategories[ScanKeywordCategories29,637
#undef PG_KEYWORD33,733

/home/seinoyu/pgsql/master/postgresql/src/common/restricted_token.c,200
char	   *restrict_env;restrict_env29,670
typedef BOOL (WINAPI * __CreateRestrictedToken)31,694
#define DISABLE_MAX_PRIVILEGE	35,954
CreateRestrictedProcess(47,1242
get_restricted_token(154,3958

/home/seinoyu/pgsql/master/postgresql/src/common/file_perm.c,166
int			pg_dir_create_mode 18,500
int			pg_file_create_mode 19,546
int			pg_mode_mask 25,761
SetDataDirectoryCreatePerm(34,1087
GetDataDirectoryCreatePerm(65,1938

/home/seinoyu/pgsql/master/postgresql/src/common/sha2_openssl.c,297
pg_sha256_init(30,667
pg_sha256_update(36,746
pg_sha256_final(42,871
pg_sha512_init(49,1008
pg_sha512_update(55,1087
pg_sha512_final(61,1212
pg_sha384_init(68,1349
pg_sha384_update(74,1428
pg_sha384_final(80,1553
pg_sha224_init(87,1690
pg_sha224_update(93,1769
pg_sha224_final(99,1894

/home/seinoyu/pgsql/master/postgresql/src/common/kwlist_d.h,300
#define KWLIST_D_H20,579
static const char ScanKeywords_kw_string[ScanKeywords_kw_string24,629
static const uint16 ScanKeywords_kw_offsets[ScanKeywords_kw_offsets476,6336
#define SCANKEYWORDS_NUM_KEYWORDS 929,9395
ScanKeywords_hash_func(932,9445
const ScanKeywordList ScanKeywords 1064,17191

/home/seinoyu/pgsql/master/postgresql/src/common/wchar.c,2074
pg_ascii2wchar_with_len(48,1652
pg_ascii_mblen(63,1851
pg_ascii_dsplen(69,1917
pg_euc2wchar_with_len(83,2071
pg_euc_mblen(122,2755
pg_euc_dsplen(138,2958
pg_eucjp2wchar_with_len(157,3189
pg_eucjp_mblen(163,3325
pg_eucjp_dsplen(169,3405
pg_euckr2wchar_with_len(188,3638
pg_euckr_mblen(194,3774
pg_euckr_dsplen(200,3854
pg_euccn2wchar_with_len(210,3956
pg_euccn_mblen(249,4608
pg_euccn_dsplen(261,4742
pg_euctw2wchar_with_len(277,4914
pg_euctw_mblen(317,5591
pg_euctw_dsplen(333,5789
pg_wchar2euc_with_len(355,6192
pg_johab_mblen(401,6818
pg_johab_dsplen(407,6898
pg_utf2wchar_with_len(419,7171
unicode_to_utf8(483,8353
pg_wchar2utf_with_len(518,9103
pg_utf_mblen(549,9859
struct mbinterval584,10551
	unsigned short first;586,10571
	unsigned short last;587,10594
mbbisearch(592,10692
ucs_wcwidth(645,12112
utf8_to_unicode(686,13343
pg_utf_dsplen(708,13917
pg_mule2wchar_with_len(720,14176
pg_wchar2mule_with_len(773,15080
pg_mule_mblen(839,16119
pg_mule_dsplen(857,16371
pg_latin12wchar_with_len(885,16848
pg_wchar2single_with_len(907,17258
pg_latin1_mblen(922,17458
pg_latin1_dsplen(928,17525
pg_sjis_mblen(937,17625
pg_sjis_dsplen(951,17868
pg_big5_mblen(968,18141
pg_big5_dsplen(980,18315
pg_gbk_mblen(995,18518
pg_gbk_dsplen(1007,18691
pg_uhc_mblen(1022,18893
pg_uhc_dsplen(1034,19066
pg_gb18030_mblen(1061,19881
pg_gb18030_dsplen(1075,20092
pg_ascii_verifier(1104,20936
#define IS_EUC_RANGE_VALID(1109,21003
pg_eucjp_verifier(1112,21074
pg_euckr_verifier(1167,21859
#define pg_euccn_verifier	1196,22248
pg_euctw_verifier(1199,22304
pg_johab_verifier(1249,23053
pg_mule_verifier(1273,23350
pg_latin1_verifier(1294,23600
pg_sjis_verifier(1300,23679
pg_big5_verifier(1323,24011
pg_gbk_verifier(1343,24226
pg_uhc_verifier(1363,24439
pg_gb18030_verifier(1383,24652
pg_utf8_verifier(1414,25281
pg_utf8_islegal(1442,26151
const pg_wchar_tbl pg_wchar_table[pg_wchar_table1505,27354
pg_encoding_mblen(1554,32482
pg_encoding_dsplen(1565,32782
pg_encoding_verifymb(1578,33199
pg_encoding_max_length(1589,33515

/home/seinoyu/pgsql/master/postgresql/src/common/d2s_full_table.h,177
#define RYU_D2S_FULL_TABLE_H36,1218
static const uint64 DOUBLE_POW5_INV_SPLIT[DOUBLE_POW5_INV_SPLIT43,1440
static const uint64 DOUBLE_POW5_SPLIT[DOUBLE_POW5_SPLIT192,21922

/home/seinoyu/pgsql/master/postgresql/src/common/jsonapi.c,942
#define check_stack_depth(30,636
#define json_log_and_abort(31,664
#define json_log_and_abort(34,757
	JSON_PARSE_VALUE,44,1043
	JSON_PARSE_STRING,45,1088
	JSON_PARSE_ARRAY_START,46,1154
	JSON_PARSE_ARRAY_NEXT,47,1218
	JSON_PARSE_OBJECT_START,48,1289
	JSON_PARSE_OBJECT_LABEL,49,1353
	JSON_PARSE_OBJECT_NEXT,50,1417
	JSON_PARSE_OBJECT_COMMA,51,1488
	JSON_PARSE_END	52,1557
} JsonParseContext;53,1624
JsonSemAction nullSemAction 67,2457
lex_peek(81,2693
lex_expect(93,2938
#define JSON_ALPHANUMERIC_CHAR(102,3173
IsValidJsonNumber(115,3490
makeJsonLexContextCstringLen(155,4398
pg_parse_json(179,5143
json_count_array_elements(219,6009
parse_scalar(273,7411
parse_object_field(317,8495
parse_object(370,9855
parse_array_element(434,11416
parse_array(471,12188
json_lex(526,13535
json_lex_string(678,17518
json_lex_number(914,23927
report_parse_error(1014,25886
json_errdetail(1056,27137
extract_token(1124,29801

/home/seinoyu/pgsql/master/postgresql/src/common/unicode_norm.c,602
#define ALLOC(28,684
#define FREE(29,717
#define ALLOC(31,754
#define FREE(32,787
#define SBASE	36,881
#define LBASE	37,917
#define VBASE	38,953
#define TBASE	39,989
#define LCOUNT	40,1025
#define VCOUNT	41,1044
#define TCOUNT	42,1063
#define NCOUNT	43,1082
#define SCOUNT	44,1114
conv_compare(48,1228
get_code_entry(62,1548
get_code_decomposition(79,1978
get_decomposed_size(104,2529
recompose_code(163,3958
decompose_code(231,5757
unicode_normalize(312,7698
get_canonical_class(458,11580
qc_compare(469,11744
qc_is_allowed(483,12038
unicode_is_normalized_quickcheck(518,12723

/home/seinoyu/pgsql/master/postgresql/src/common/exec.c,313
#define log_error(41,1224
#define log_error(44,1323
#define getcwd(49,1436
validate_exec(67,1949
find_my_exec(128,3562
resolve_symlinks(231,6061
find_other_exec(323,8270
pipe_read_line(359,9033
pclose_check(396,9647
set_pglocale_pgservice(434,10462
AddUserToTokenDacl(515,13019
GetTokenUser(657,16650

/home/seinoyu/pgsql/master/postgresql/src/common/scram-common.c,259
#define HMAC_IPAD 26,722
#define HMAC_OPAD 27,745
scram_HMAC_init(35,853
scram_HMAC_update(75,1735
scram_HMAC_final(85,1949
scram_SaltedPassword(104,2396
scram_H(147,3590
scram_ClientKey(160,3796
scram_ServerKey(173,4071
scram_build_secret(192,4620

/home/seinoyu/pgsql/master/postgresql/src/common/md5.c,286
createPaddedCopyWithLength(39,894
#define F(90,1988
#define G(91,2036
#define H(92,2084
#define I(93,2121
#define ROT_LEFT(94,2161
doTheRounds(97,2234
calculateDigestFromBuffer(188,6991
bytesToHex(248,7929
pg_md5_hash(293,8999
pg_md5_binary(305,9189
pg_md5_encrypt(323,9666

/home/seinoyu/pgsql/master/postgresql/src/common/string.c,89
pg_str_endswith(31,582
strtoint(50,928
pg_clean_ascii(82,2097
pg_strip_crlf(105,2585

/home/seinoyu/pgsql/master/postgresql/src/common/link-canary.c,36
pg_link_canary_is_frontend(29,1152

/home/seinoyu/pgsql/master/postgresql/src/common/stringinfo.c,350
#define MaxAllocSize	28,828
makeStringInfo(41,1030
initStringInfo(59,1303
resetStringInfo(75,1613
appendStringInfo(91,1977
appendStringInfoVA(133,3218
appendStringInfoString(176,4266
appendStringInfoChar(188,4497
appendStringInfoSpaces(206,4840
appendBinaryStringInfo(227,5274
appendBinaryStringInfoNT(253,5938
enlargeStringInfo(283,6952

/home/seinoyu/pgsql/master/postgresql/src/common/unicode/norm_test.c,82
print_wchar_str(23,524
#define BUF_DIGITS 25,561
pg_wcscmp(44,788
main(60,969

/home/seinoyu/pgsql/master/postgresql/src/common/protocol_openssl.c,78
SSL_CTX_set_min_proto_version(41,1070
SSL_CTX_set_max_proto_version(80,1804

/home/seinoyu/pgsql/master/postgresql/src/common/f2s.c,820
#define FLOAT_MANTISSA_BITS 45,1339
#define FLOAT_EXPONENT_BITS 46,1370
#define FLOAT_BIAS 47,1400
#define FLOAT_POW5_INV_BITCOUNT 53,1546
static const uint64 FLOAT_POW5_INV_SPLIT[FLOAT_POW5_INV_SPLIT54,1581
#define FLOAT_POW5_BITCOUNT 64,2663
static const uint64 FLOAT_POW5_SPLIT[FLOAT_POW5_SPLIT65,2694
pow5Factor(81,4373
multipleOfPowerOf5(102,4656
multipleOfPowerOf2(109,4817
mulShift(120,5112
mulPow5InvDivPow2(162,6181
mulPow5divPow2(168,6321
decimalLength(174,6454
typedef struct floating_decimal_32215,6969
	uint32		mantissa;217,7006
	int32		exponent;218,7025
} floating_decimal_32;219,7043
f2d(222,7101
to_chars_f(440,12046
to_chars(563,14898
f2d_small_int(689,17958
float_to_shortest_decimal_bufn(742,19508
float_to_shortest_decimal_buf(780,20708
float_to_shortest_decimal(797,21139

/home/seinoyu/pgsql/master/postgresql/src/common/config_info.c,23
get_configdata(33,712

/home/seinoyu/pgsql/master/postgresql/src/common/encnames.c,710
typedef struct pg_encname33,840
	const char *name;name35,868
	pg_enc		encoding;36,887
} pg_encname;37,906
static const pg_encname pg_encname_tbl[pg_encname_tbl39,921
#define DEF_ENC2NAME(304,6723
#define DEF_ENC2NAME(306,6787
const pg_enc2name pg_enc2name_tbl[pg_enc2name_tbl309,6863
const pg_enc2gettext pg_enc2gettext_tbl[pg_enc2gettext_tbl361,8301
static const char *const pg_enc2icu_tbl[pg_enc2icu_tbl415,9617
is_encoding_supported_by_icu(459,10867
get_encoding_name_for_icu(470,11094
pg_valid_client_encoding(486,11429
pg_valid_server_encoding(500,11612
pg_valid_server_encoding_id(514,11795
clean_encoding_name(525,12032
pg_char_to_encoding(550,12423
pg_encoding_to_char(588,13162

/home/seinoyu/pgsql/master/postgresql/src/common/pg_lzcompress.c,1010
#define PGLZ_MAX_HISTORY_LISTS	195,7596
#define PGLZ_HISTORY_SIZE	196,7657
#define PGLZ_MAX_MATCH	197,7689
typedef struct PGLZ_HistEntry210,8016
	struct PGLZ_HistEntry *next;next212,8048
	struct PGLZ_HistEntry *prev;prev213,8113
	int			hindex;214,8143
	const char *pos;pos215,8186
} PGLZ_HistEntry;216,8230
static const PGLZ_Strategy strategy_default_data 223,8318
const PGLZ_Strategy *const PGLZ_strategy_default 236,8824
static const PGLZ_Strategy strategy_always_data 239,8901
const PGLZ_Strategy *const PGLZ_strategy_always 248,9233
static int16 hist_start[hist_start255,9388
static PGLZ_HistEntry hist_entries[hist_entries256,9437
#define INVALID_ENTRY	262,9634
#define INVALID_ENTRY_PTR	263,9660
#define pglz_hist_idx(277,10099
#define pglz_hist_add(296,10661
#define pglz_out_ctrl(336,12193
#define pglz_out_literal(355,12638
#define pglz_out_tag(371,13056
pglz_find_match(399,13939
pglz_compress(509,16158
pglz_decompress(689,20762
pglz_maximum_compressed_size(821,24683

/home/seinoyu/pgsql/master/postgresql/src/common/logging.c,725
enum pg_log_level __pg_log_level;21,465
static const char *progname;progname23,500
static int	log_flags;24,529
static const char *sgr_error sgr_error29,654
static const char *sgr_warning sgr_warning30,691
static const char *sgr_locus sgr_locus31,730
#define SGR_ERROR_DEFAULT 33,768
#define SGR_WARNING_DEFAULT 34,802
#define SGR_LOCUS_DEFAULT 35,838
#define ANSI_ESCAPE_FMT 37,870
#define ANSI_ESCAPE_RESET 38,905
#define ENABLE_VIRTUAL_TERMINAL_PROCESSING 43,999
enable_vt_processing(52,1257
pg_logging_init(81,1852
pg_logging_config(155,3286
pg_logging_set_level(161,3353
pg_logging_set_pre_callback(167,3442
pg_logging_set_locus_callback(173,3523
pg_log_generic(179,3641
pg_log_generic_v(189,3807

/home/seinoyu/pgsql/master/postgresql/src/common/file_utils.c,284
#define PG_FLUSH_DATA_WORKS 33,807
#define PG_FLUSH_DATA_WORKS 35,902
#define MINIMUM_VERSION_FOR_PG_WAL	41,1000
fsync_pgdata(61,1684
fsync_dir_recurse(125,3468
walkdir(153,4358
pre_sync_fname(219,5837
fsync_fname(260,6863
fsync_parent_path(316,8245
durable_rename(343,8864

/home/seinoyu/pgsql/master/postgresql/src/common/ryu_common.h,231
#define RYU_COMMON_H35,1204
#define STRICTLY_SHORTEST 46,1611
#define RYU_32_BIT_PLATFORM49,1662
pow5bits(54,1765
log10Pow2(70,2152
log10Pow5(83,2429
copy_special_str(95,2671
float_to_bits(116,3009
double_to_bits(125,3133

/home/seinoyu/pgsql/master/postgresql/src/common/fe_memutils.c,283
pg_malloc_internal(23,570
pg_malloc(47,963
pg_malloc0(53,1035
pg_malloc_extended(59,1122
pg_realloc(65,1218
pg_strdup(85,1539
pg_free(105,1819
palloc(116,2002
palloc0(122,2069
palloc_extended(128,2151
pfree(134,2240
pstrdup(140,2292
pnstrdup(146,2351
repalloc(173,2737

/home/seinoyu/pgsql/master/postgresql/src/common/ip.c,140
pg_getaddrinfo_all(57,1271
pg_freeaddrinfo_all(88,2235
pg_getnameinfo_all(122,3055
getaddrinfo_unix(165,3967
getnameinfo_unix(231,5227

/home/seinoyu/pgsql/master/postgresql/src/common/pgfnames.c,74
#define pg_log_warning(24,523
pgfnames(37,814
pgfnames_cleanup(86,1779

/home/seinoyu/pgsql/master/postgresql/src/common/saslprep.c,866
#define MAX_PASSWORD_LENGTH	36,1008
#define STRDUP(43,1179
#define ALLOC(44,1208
#define FREE(45,1241
#define STRDUP(47,1278
#define ALLOC(48,1306
#define FREE(49,1339
static const pg_wchar non_ascii_space_ranges[non_ascii_space_ranges72,2089
static const pg_wchar commonly_mapped_to_nothing_ranges[commonly_mapped_to_nothing_ranges87,2347
static const pg_wchar prohibited_output_ranges[prohibited_output_ranges122,3419
static const pg_wchar unassigned_codepoint_ranges[unassigned_codepoint_ranges163,4727
static const pg_wchar RandALCat_codepoint_ranges[RandALCat_codepoint_ranges564,11673
static const pg_wchar LCat_codepoint_ranges[LCat_codepoint_ranges603,12362
#define IS_CODE_IN_TABLE(971,18711
codepoint_range_cmp(974,18802
is_code_in_table(988,19131
pg_utf8_string_len(1008,19558
pg_is_ascii_string(1032,19895
pg_saslprep(1065,20867

/home/seinoyu/pgsql/master/postgresql/src/common/digit_table.h,80
#define RYU_DIGIT_TABLE_H2,26
static const char DIGIT_TABLE[DIGIT_TABLE8,200

/home/seinoyu/pgsql/master/postgresql/src/test/locale/test-ctype.c,73
#undef LONG_FLAG30,667
flag(33,692
describe_char(43,793
main(60,1262

/home/seinoyu/pgsql/master/postgresql/src/test/examples/testlibpq.c,33
exit_nicely(14,204
main(21,266

/home/seinoyu/pgsql/master/postgresql/src/test/examples/testlo64.c,160
#define BUFSIZE	26,617
importFile(34,749
pickout(78,1580
overwrite(113,2378
my_truncate(151,3138
exportFile(172,3584
exit_nicely(215,4390
main(222,4452

/home/seinoyu/pgsql/master/postgresql/src/test/examples/testlibpq2.c,34
exit_nicely(44,986
main(51,1048

/home/seinoyu/pgsql/master/postgresql/src/test/examples/testlibpq4.c,60
exit_nicely(15,221
check_prepare_conn(25,352
main(50,969

/home/seinoyu/pgsql/master/postgresql/src/test/examples/testlo.c,138
#define BUFSIZE	26,595
importFile(34,727
pickout(78,1558
overwrite(108,2164
exportFile(150,2925
exit_nicely(193,3731
main(200,3793

/home/seinoyu/pgsql/master/postgresql/src/test/examples/testlibpq3.c,65
exit_nicely(48,1027
show_binary_results(60,1285
main(115,2684

/home/seinoyu/pgsql/master/postgresql/src/test/thread/thread_test.c,917
#undef strerror27,963
#define MAXHOSTNAMELEN 46,1272
main(58,1552
#define		TEMP_FILENAME_1 69,1850
#define		TEMP_FILENAME_2 70,1891
static pthread_mutex_t init_mutex 75,1996
static volatile int thread1_done 77,2060
static volatile int thread2_done 78,2098
static volatile int errno1_set 80,2137
static volatile int errno2_set 81,2173
static char *strerror_p1;strerror_p184,2234
static char *strerror_p2;strerror_p285,2260
static int	strerror_threadsafe 86,2286
static struct passwd *passwd_p1;passwd_p190,2379
static struct passwd *passwd_p2;passwd_p291,2412
static int	getpwuid_threadsafe 92,2445
static struct hostent *hostent_p1;hostent_p196,2554
static struct hostent *hostent_p2;hostent_p297,2589
static char myhostname[myhostname98,2624
static int	gethostbyname_threadsafe 99,2664
static int	platform_is_threadsafe 102,2713
main(105,2757
func_call_1(262,6254
func_call_2(381,8961

/home/seinoyu/pgsql/master/postgresql/src/test/regress/pg_regress.h,332
#define PID_TYPE 14,419
#define INVALID_PID 15,442
#define PID_TYPE 17,473
#define INVALID_PID 18,497
typedef struct _stringlist22,575
	char	   *str;str24,604
	struct _stringlist *next;next25,619
} _stringlist;26,646
typedef PID_TYPE(*test_function)test_function28,662
typedef void (*init_function)init_function32,789

/home/seinoyu/pgsql/master/postgresql/src/test/regress/regress.c,1211
#define EXPECT_TRUE(44,1178
#define EXPECT_EQ_U32(52,1356
#define EXPECT_EQ_U64(62,1677
#define LDELIM	72,2013
#define RDELIM	73,2034
#define DELIM	74,2055
PG_MODULE_MAGIC;78,2149
interpt_pp(85,2286
regress_lseg_construct(126,3304
overpaid(137,3502
	Point		center;156,3927
	double		radius;157,3943
} WIDGET;158,3960
#define NARGS	163,4037
widget_in(166,4060
widget_out(195,4684
pt_in_widget(207,4942
reverse_name(223,5329
trigger_return_old(244,5729
#define TTDUMMY_INFINITY	257,6015
static SPIPlanPtr splan 259,6048
static bool ttoff 260,6080
ttdummy(265,6145
set_ttdummy(454,11624
int44in(492,12249
int44out(516,12684
make_tuple_indirect(532,13002
regress_putenv(630,15703
wait_pid(652,16212
test_atomic_flag(672,16548
test_atomic_uint32(688,16993
test_atomic_uint64(752,19339
test_spinlock(805,21024
		struct test_lock_struct814,21260
			char		data_before[data_before816,21290
			slock_t		lock;817,21315
			char		data_after[data_after818,21333
test_atomic_spin_nest(916,24143
#define NUM_TEST_ATOMICS 919,24188
#undef NUM_TEST_ATOMICS949,25123
test_atomic_ops(953,25192
test_fdw_handler(974,25552
test_support_func(982,25710
test_opclass_options_func(1055,27548

/home/seinoyu/pgsql/master/postgresql/src/test/regress/pg_regress_main.c,59
psql_start_test(28,847
psql_init(113,3030
main(120,3161

/home/seinoyu/pgsql/master/postgresql/src/test/regress/pg_regress.c,3311
typedef struct _resultmap42,1188
	char	   *test;test44,1216
	char	   *type;type45,1232
	char	   *resultfile;resultfile46,1248
	struct _resultmap *next;next47,1270
} _resultmap;48,1296
char	   *host_platform host_platform53,1352
static char *shellprog shellprog56,1437
const char *basic_diff_opts basic_diff_opts65,1723
const char *pretty_diff_opts pretty_diff_opts66,1757
const char *basic_diff_opts basic_diff_opts68,1801
const char *pretty_diff_opts pretty_diff_opts69,1837
_stringlist *dblist dblist73,1927
bool		debug 74,1955
char	   *inputdir inputdir75,1976
char	   *outputdir outputdir76,2001
char	   *bindir bindir77,2027
char	   *launcher launcher78,2055
static _stringlist *loadextension loadextension79,2081
static int	max_connections 80,2123
static int	max_concurrent_tests 81,2155
static char *encoding encoding82,2192
static _stringlist *schedulelist schedulelist83,2222
static _stringlist *extra_tests extra_tests84,2263
static char *temp_instance temp_instance85,2303
static _stringlist *temp_configs temp_configs86,2338
static bool nolocale 87,2379
static bool use_existing 88,2409
static char *hostname hostname89,2443
static int	port 90,2473
static bool port_specified_by_user 91,2495
static char *dlpath dlpath92,2539
static char *user user93,2572
static _stringlist *extraroles extraroles94,2598
static char *config_auth_datadir config_auth_datadir95,2637
static const char *progname;progname98,2704
static char *logfilename;logfilename99,2733
static FILE *logfile;logfile100,2759
static char *difffilename;difffilename101,2781
static const char *sockdir;sockdir102,2808
static const char *temp_sockdir;temp_sockdir104,2861
static char sockself[sockself105,2894
static char socklock[socklock106,2927
static _resultmap *resultmap resultmap109,2968
static PID_TYPE postmaster_pid 111,3006
static bool postmaster_running 112,3052
static int	success_count 114,3093
static int	fail_count 115,3123
static int	fail_ignore_count 116,3150
static void header(121,3278
add_stringlist_item(155,4038
free_stringlist(176,4462
split_to_stringlist(191,4761
header(208,5071
status(225,5385
status_end(246,5646
stop_postmaster(258,5797
remove_temp(298,6972
signal_remove_temp(310,7165
make_temp_sockdir(331,7879
string_matches_pattern(377,9367
replace_string(442,10741
convert_sourcefiles_in(464,11350
convert_sourcefiles(583,14613
load_resultmap(603,15464
get_expectfile(685,17327
doputenv(714,17898
initialize_environment(726,18087
fmtHba(899,22520
current_windows_user(925,22949
config_sspi_auth(984,24607
#define CW(1040,26048
psql_command(1106,28036
spawn_process(1152,29120
file_size(1219,30550
file_line_count(1240,30868
file_exists(1262,31193
directory_exists(1273,31324
make_directory(1286,31516
get_alternative_expectfile(1300,31808
run_diff(1334,32381
results_differ(1367,33146
wait_for_tests(1517,36708
log_child_failure(1589,38168
run_schedule(1613,38779
#define MAX_PARALLEL_TESTS 1615,38837
run_single_test(1864,44746
open_result_files(1929,46189
drop_database_if_exists(1969,47296
create_database(1976,47474
drop_role_if_exists(2012,48761
create_role(2019,48933
help(2031,49304
regression_main(2080,52410
#define ULONGPID(2511,63967
#define ULONGPID(2513,64034

/home/seinoyu/pgsql/master/postgresql/src/test/isolation/isolation_main.c,230
char		saved_argv0[saved_argv017,471
char		isolation_exec[isolation_exec18,501
bool		looked_up_isolation_exec 19,534
#define PG_ISOLATION_VERSIONSTR 21,575
isolation_start_test(28,785
isolation_init(120,3149
main(146,4042

/home/seinoyu/pgsql/master/postgresql/src/test/isolation/isolationtester.h,849
#define ISOLATIONTESTER_H15,457
typedef struct Session Session;17,484
typedef struct Step Step;18,516
struct Session20,543
	char	   *name;name22,560
	char	   *setupsql;setupsql23,576
	char	   *teardownsql;teardownsql24,596
	Step	  **steps;steps25,619
	int			nsteps;26,636
struct Step29,655
	int			session;31,669
	bool		used;32,685
	char	   *name;name33,698
	char	   *sql;sql34,714
	char	   *errormsg;errormsg35,729
	int			nsteps;40,770
	char	  **stepnames;stepnames41,785
} Permutation;42,806
	char	  **setupsqls;setupsqls46,839
	int			nsetupsqls;47,860
	char	   *teardownsql;teardownsql48,879
	Session   **sessions;sessions49,902
	int			nsessions;50,925
	Permutation **permutations;permutations51,943
	int			npermutations;52,972
	Step	  **allsteps;allsteps53,994
	int			nallsteps;54,1014
} TestSpec;55,1032

/home/seinoyu/pgsql/master/postgresql/src/test/isolation/isolationtester.c,774
#define PREP_WAITING 21,362
static PGconn **conns conns28,632
static int *backend_pids backend_pids29,662
static const char **backend_pid_strs backend_pid_strs30,695
static int	nconns 31,740
static int64 max_step_wait 34,828
#define STEP_NONBLOCK	44,1211
#define STEP_RETRY	45,1285
disconnect_atexit(56,1748
main(66,1861
static int *piles;piles241,6836
run_testspec(248,6967
run_all_permutations(273,7461
run_all_permutations_recurse(303,8314
run_named_permutations(333,8958
step_qsort_cmp(371,9731
step_bsearch_cmp(380,9903
report_error_message(392,10151
report_multiple_error_messages(409,10614
run_permutation(451,11418
try_complete_step(685,17777
printResultSet(914,23860
isotesterNoticeProcessor(937,24332
blackholeNoticeProcessor(944,24490

/home/seinoyu/pgsql/master/postgresql/src/test/modules/test_ginpostinglist/test_ginpostinglist.c,80
PG_MODULE_MAGIC;20,522
test_itemptr_pair(41,1361
test_ginpostinglist(88,2841

/home/seinoyu/pgsql/master/postgresql/src/test/modules/test_rls_hooks/test_rls_hooks.c,305
PG_MODULE_MAGIC;30,749
static row_security_policy_hook_type prev_row_security_policy_hook_permissive 33,809
static row_security_policy_hook_type prev_row_security_policy_hook_restrictive 34,895
_PG_init(41,1053
_PG_fini(54,1451
test_rls_hooks_permissive(64,1691
test_rls_hooks_restrictive(129,3650

/home/seinoyu/pgsql/master/postgresql/src/test/modules/test_rls_hooks/test_rls_hooks.h,32
#define TEST_RLS_HOOKS_H15,381

/home/seinoyu/pgsql/master/postgresql/src/test/modules/dummy_seclabel/dummy_seclabel.c,101
PG_MODULE_MAGIC;20,507
dummy_object_relabel(28,635
_PG_init(50,1191
dummy_seclabel_dummy(60,1422

/home/seinoyu/pgsql/master/postgresql/src/test/modules/test_bloomfilter/test_bloomfilter.c,227
PG_MODULE_MAGIC;19,471
#define MAX_ELEMENT_BYTES	22,550
#define FPOSITIVE_THRESHOLD	24,630
populate_with_dummy_strings(31,751
nfalsepos_for_missing_strings(51,1271
create_and_test_bloom(71,1677
test_bloomfilter(113,3051

/home/seinoyu/pgsql/master/postgresql/src/test/modules/test_ddl_deparse/test_ddl_deparse.c,110
PG_MODULE_MAGIC;18,513
get_command_type(29,793
get_command_tag(70,1617
get_altertable_subcmdtypes(85,1939

/home/seinoyu/pgsql/master/postgresql/src/test/modules/test_integerset/test_integerset.c,481
static const bool intset_test_stats 35,1110
PG_MODULE_MAGIC;37,1156
	char	   *test_name;test_name47,1327
	char	   *pattern_str;pattern_str48,1390
	uint64		spacing;49,1433
	uint64		num_values;50,1491
} test_spec;51,1554
static const test_spec test_specs[test_specs53,1568
test_integerset(106,2834
test_pattern(134,3572
test_single_value(321,8770
test_single_value_and_filler(377,10554
check_with_filler(470,13401
test_empty(488,13777
test_huge_distances(519,14684

/home/seinoyu/pgsql/master/postgresql/src/test/modules/test_rbtree/test_rbtree.c,415
PG_MODULE_MAGIC;20,462
typedef struct IntRBTreeNode26,546
	RBTNode		rbtnode;28,577
	int			key;29,596
} IntRBTreeNode;30,608
irbt_cmp(38,761
irbt_combine(51,1082
irbt_alloc(63,1432
irbt_free(70,1539
create_int_rbtree(79,1672
GetPermutation(93,1911
rbt_populate(126,2773
testleftright(163,3672
testrightleft(203,4725
testfind(242,5757
testleftmost(285,6856
testdelete(307,7441
test_rb_tree(401,9633

/home/seinoyu/pgsql/master/postgresql/src/test/modules/test_parser/test_parser.c,312
PG_MODULE_MAGIC;17,401
	char	   *buffer;buffer26,477
	int			len;27,517
	int			pos;28,566
} ParserState;29,609
	int			lexid;33,642
	char	   *alias;alias34,656
	char	   *descr;descr35,673
} LexDescr;36,690
testprs_start(47,878
testprs_getlexeme(59,1107
testprs_end(99,1901
testprs_lextype(108,2033

/home/seinoyu/pgsql/master/postgresql/src/test/modules/test_shm_mq/test.c,102
PG_MODULE_MAGIC;22,470
test_shm_mq(41,1073
test_shm_mq_pipelined(130,3832
verify_message(251,7168

/home/seinoyu/pgsql/master/postgresql/src/test/modules/test_shm_mq/worker.c,102
test_shm_mq_main(47,1623
attach_to_queues(155,5379
copy_messages(177,6086
handle_sigterm(206,6702

/home/seinoyu/pgsql/master/postgresql/src/test/modules/test_shm_mq/test_shm_mq.h,248
#define TEST_SHM_MQ_H15,388
#define		PG_TEST_SHM_MQ_MAGIC	22,559
	slock_t		mutex;31,825
	int			workers_total;32,842
	int			workers_attached;33,864
	int			workers_ready;34,889
} test_shm_mq_header;35,911
extern void test_shm_mq_main(43,1192

/home/seinoyu/pgsql/master/postgresql/src/test/modules/test_shm_mq/setup.c,303
	int			nworkers;28,682
	BackgroundWorkerHandle *handle[handle29,699
} worker_state;30,755
test_shm_mq_setup(48,1391
setup_dynamic_shared_memory(89,2679
setup_background_workers(172,4975
cleanup_background_workers(243,7645
wait_for_workers_to_become_ready(255,7903
check_worker_status(299,8884

/home/seinoyu/pgsql/master/postgresql/src/test/modules/worker_spi/worker_spi.c,338
PG_MODULE_MAGIC;44,1524
void		worker_spi_main(49,1605
typedef struct worktable61,1935
	const char *schema;schema63,1962
	const char *name;name64,1983
} worktable;65,2002
worker_spi_sigterm(73,2152
worker_spi_sighup(89,2429
initialize_worker_spi(104,2670
worker_spi_main(163,4201
_PG_init(308,8307
worker_spi_launch(379,9963

/home/seinoyu/pgsql/master/postgresql/src/test/modules/dummy_index_am/dummy_index_am.c,923
PG_MODULE_MAGIC;24,650
relopt_parse_elt di_relopt_tab[di_relopt_tab29,728
relopt_kind di_relopt_kind;32,811
typedef enum DummyAmEnum34,840
	DUMMY_AM_ENUM_ONE,36,867
	DUMMY_AM_ENUM_TWO37,887
}			DummyAmEnum;38,906
typedef struct DummyIndexOptions41,950
	int32		vl_len_;43,985
	int			option_int;44,1049
	double		option_real;45,1068
	bool		option_bool;46,1090
	DummyAmEnum option_enum;47,1110
	int			option_string_val_offset;48,1136
	int			option_string_null_offset;49,1169
}			DummyIndexOptions;50,1203
relopt_enum_elt_def dummyAmEnumValues[dummyAmEnumValues52,1227
validate_string_option(66,1510
create_reloptions_table(78,1768
dibuild(141,4006
dibuildempty(159,4411
diinsert(168,4552
dibulkdelete(181,4858
divacuumcleanup(195,5184
dicostestimate(205,5383
dioptions(225,5933
divalidate(237,6201
dibeginscan(247,6357
direscan(260,6585
diendscan(270,6752
dihandler(280,6922
_PG_init(329,8456

/home/seinoyu/pgsql/master/postgresql/src/test/modules/ssl_passphrase_callback/ssl_passphrase_func.c,155
PG_MODULE_MAGIC;21,520
static char *ssl_passphrase ssl_passphrase26,583
_PG_init(38,861
_PG_fini(56,1249
set_rot13(62,1304
rot13_passphrase(73,1621

/home/seinoyu/pgsql/master/postgresql/src/test/modules/test_predtest/test_predtest.c,46
PG_MODULE_MAGIC;24,605
test_predtest(32,717

/home/seinoyu/pgsql/master/postgresql/src/tutorial/complex.c,426
PG_MODULE_MAGIC;15,516
typedef struct Complex17,534
	double		x;19,559
	double		y;20,571
}			Complex;21,583
complex_in(31,824
complex_out(53,1284
complex_recv(71,1739
complex_send(85,2037
complex_add(105,2584
#define Mag(129,3508
complex_abs_cmp_internal(132,3567
complex_abs_lt(148,3784
complex_abs_le(159,4022
complex_abs_eq(170,4261
complex_abs_ge(181,4500
complex_abs_gt(192,4739
complex_abs_cmp(203,4978

/home/seinoyu/pgsql/master/postgresql/src/tutorial/funcs.c,142
PG_MODULE_MAGIC;16,629
add_one(24,701
add_one_float8(36,872
makepoint(47,1079
copytext(64,1414
concat_text(90,2145
c_overpaid(110,2719

/home/seinoyu/pgsql/master/postgresql/src/bin/pgevent/pgevent.c,159
HANDLE		g_module 18,390
char		event_source[event_source25,618
DllInstall(38,966
DllRegisterServer(65,1776
DllUnregisterServer(127,3436
DllMain(152,4007

/home/seinoyu/pgsql/master/postgresql/src/bin/pgevent/pgmsgevent.h,37
#define PGWIN32_EVENTLOG_MSG	46,943

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_rewind/copy_fetch.c,135
traverse_datadir(33,807
recurse_dir(45,1082
rewind_copy_file_range(156,4125
copy_executeFileMap(205,5238
execute_pagemap(248,6028

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_rewind/datapagemap.h,229
#define DATAPAGEMAP_H10,268
struct datapagemap15,352
	char	   *bitmap;bitmap17,373
	int			bitmapsize;18,391
typedef struct datapagemap datapagemap_t;21,414
typedef struct datapagemap_iterator datapagemap_iterator_t;22,456

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_rewind/fetch.c,71
fetchSourceFileList(28,796
executeFileMap(40,1027
fetchFile(54,1330

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_rewind/filemap.c,653
filemap_t  *filemap filemap23,538
struct exclude_list_item39,1190
	const char *name;name41,1217
	bool		match_prefix;42,1236
static const char *excludeDirContents[excludeDirContents54,1670
static const struct exclude_list_item excludeFiles[excludeFiles96,2781
filemap_create(135,3999
process_source_file(157,4472
process_target_file(348,9648
process_block_change(439,11923
check_file_excluded(514,13606
filemap_list_to_array(573,15009
filemap_finalize(597,15504
action_to_str(607,15690
calculate_totals(633,16136
print_filemap(675,16876
isRelDataFile(706,17602
datasegpath(789,19449
path_cmp(806,19728
final_filemap_cmp(825,20502

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_rewind/pg_rewind.h,52
#define PG_REWIND_H12,348
#define pg_fatal(41,952

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_rewind/parsexlog.c,466
#define PG_RMGR(30,783
static const char *RmgrNames[RmgrNames33,864
static int	xlogreadfd 39,1000
static XLogSegNo xlogreadsegno 40,1028
static char xlogfpath[xlogfpath41,1065
typedef struct XLogPageReadPrivate43,1100
	const char *restoreCommand;restoreCommand45,1137
	int			tliIndex;46,1166
} XLogPageReadPrivate;47,1183
extractPageMap(59,1611
readOneRecord(110,2839
findLastCheckpoint(154,3877
SimpleXLogPageRead(240,6293
extractPageInfo(354,9270

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_rewind/filemap.h,933
#define FILEMAP_H9,257
	FILE_ACTION_CREATE,25,697
	FILE_ACTION_COPY,26,766
	FILE_ACTION_COPY_TAIL,27,832
	FILE_ACTION_NONE,28,901
	FILE_ACTION_TRUNCATE,30,1011
	FILE_ACTION_REMOVE	31,1080
} file_action_t;32,1148
	FILE_TYPE_REGULAR,36,1181
	FILE_TYPE_DIRECTORY,37,1201
	FILE_TYPE_SYMLINK38,1223
} file_type_t;39,1242
typedef struct file_entry_t41,1258
	char	   *path;path43,1288
	file_type_t type;44,1304
	file_action_t action;46,1324
	size_t		oldsize;49,1374
	size_t		newsize;50,1392
	bool		isrelfile;51,1410
	datapagemap_t pagemap;53,1464
	char	   *link_target;link_target56,1510
	struct file_entry_t *next;next58,1534
} file_entry_t;59,1562
typedef struct filemap_t61,1579
	file_entry_t *first;first67,1717
	file_entry_t *last;last68,1739
	int			nlist;69,1760
	file_entry_t **array;array78,2163
	int			narray;79,2186
	uint64		total_size;85,2387
	uint64		fetch_size;86,2408
} filemap_t;87,2429

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_rewind/libpq_fetch.c,347
PGconn	   *conn conn26,609
#define CHUNKSIZE 35,914
libpqConnect(43,1163
run_simple_query(103,3145
run_simple_command(130,3714
libpqGetCurrentXlogInsertLocation(147,4025
libpqProcessFileList(170,4449
receiveFileChunks(260,7164
libpqGetFile(369,10125
fetch_file_range(412,11282
libpq_executeFileMap(441,11951
execute_pagemap(525,13892

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_rewind/timeline.c,36
rewind_parseTimeLineHistory(29,857

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_rewind/fetch.h,95
#define FETCH_H16,548
typedef void (*process_file_callback_t)process_file_callback_t41,1213

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_rewind/pg_rewind.c,1041
static ControlFileData ControlFile_target;48,1424
static ControlFileData ControlFile_source;49,1467
const char *progname;progname51,1511
int			WalSegSz;52,1533
char	   *datadir_target datadir_target55,1578
char	   *datadir_source datadir_source56,1610
char	   *connstr_source connstr_source57,1642
char	   *restore_command restore_command58,1674
static bool debug 60,1708
bool		showprogress 61,1735
bool		dry_run 62,1763
bool		do_sync 63,1786
bool		restore_wal 64,1808
TimeLineHistoryEntry *targetHistory;targetHistory67,1857
int			targetNentries;68,1894
uint64		fetch_size;71,1941
uint64		fetch_done;72,1961
usage(76,1995
main(102,3557
sanityChecks(471,13595
progress_report(526,15626
MinXLogRecPtr(580,17203
getTimelineHistory(595,17500
findCommonAncestorTimeline(672,19603
createBackupLabel(720,20958
checkControlFile(763,22177
digestControlFile(781,22589
syncTargetDirectory(812,23760
getRestoreCommand(827,24050
ensureCleanShutdown(890,25616
#define MAXCMDLEN 893,25669
disconnect_atexit(945,27082

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_rewind/file_ops.h,26
#define FILE_OPS_H11,307

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_rewind/file_ops.c,390
static int	dstfd 29,814
static char dstpath[dstpath30,837
open_target_file(42,1218
close_target_file(70,1777
write_target_range(83,1946
remove_target(125,2702
create_target(146,3051
remove_target_file(172,3630
truncate_target_file(191,3959
create_target_dir(214,4445
remove_target_dir(228,4732
create_target_symlink(242,4999
remove_target_symlink(256,5303
slurpFile(284,6164

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_rewind/datapagemap.c,205
struct datapagemap_iterator18,438
	datapagemap_t *map;map20,468
	BlockNumber nextblkno;21,489
datapagemap_add(32,591
datapagemap_iterate(75,1641
datapagemap_next(87,1829
datapagemap_print(117,2321

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_test_fsync/pg_test_fsync.c,922
#define FSYNC_FILENAME	23,389
#define XLOG_BLCKSZ_K	25,435
#define LABEL_FORMAT	27,479
#define NA_FORMAT	28,517
#define OPS_FORMAT	30,598
#define USECS_SEC	31,668
#define START_TIMER 35,778
#define START_TIMER 43,984
#define STOP_TIMER	56,1260
static const char *progname;progname63,1373
static int	secs_per_test 65,1403
static int	needs_unlink 66,1433
static char full_buf[full_buf67,1462
		   *buf,buf68,1507
		   *filename filename69,1518
static struct timeval start_t,70,1551
			stop_t;71,1582
static bool alarm_triggered 72,1593
#define die(96,2272
main(100,2352
handle_args(141,3053
prepare_buf(208,4553
test_open(220,4768
test_sync(242,5245
test_open_syncs(403,9043
test_open_sync(420,9580
test_file_descriptor_sync(455,10290
test_non_sync(524,12176
signal_cleanup(549,12674
pg_fsync_writethrough(562,12905
print_elapse(579,13166
process_alarm(591,13522
process_alarm(597,13600

/home/seinoyu/pgsql/master/postgresql/src/bin/pgbench/pgbench.c,9824
#define FD_SETSIZE 31,1281
#define POLL_USING_PPOLL49,1739
#define POLL_USING_SELECT54,1854
#define M_PI 70,2177
#define ERRCODE_UNDEFINED_TABLE 73,2221
#define FNV_PRIME	78,2291
#define FNV_OFFSET_BASIS	79,2338
#define MM2_MUL	80,2395
#define MM2_MUL_TIMES_8	81,2446
#define MM2_ROT	82,2503
#define SOCKET_WAIT_METHOD 89,2603
typedef struct socket_set91,2639
	int			maxfds;93,2667
	int			curfds;94,2726
	struct pollfd pollfds[pollfds95,2773
} socket_set;96,2820
#define SOCKET_WAIT_METHOD 101,2897
typedef struct socket_set103,2934
	int			maxfd;105,2962
	fd_set		fds;106,3016
} socket_set;107,3030
typedef struct win32_pthread *pthread_t;pthread_t117,3188
typedef int pthread_attr_t;118,3229
#define pthread_t 127,3591
#define DEFAULT_INIT_STEPS 134,3731
#define ALL_INIT_STEPS 135,3791
#define LOG_STEP_SECONDS	137,3850
#define DEFAULT_NXACTS	138,3912
#define MIN_GAUSSIAN_PARAM	140,3961
#define MIN_ZIPFIAN_PARAM	142,4028
#define MAX_ZIPFIAN_PARAM	143,4097
int			nxacts 145,4168
int			duration 146,4228
int64		end_time 147,4275
int			scale 153,4449
int			fillfactor 159,4594
bool		unlogged_tables 164,4650
double		sample_rate 169,4757
double		throttle_delay 175,4944
int64		latency_limit 183,5254
char	   *tablespace tablespace188,5312
char	   *index_tablespace index_tablespace189,5340
static int	partitions 195,5474
	PART_NONE,200,5568
	PART_RANGE,201,5606
	PART_HASH	202,5648
} partition_method_t;203,5687
static partition_method_t partition_method 205,5710
static const char *PARTITION_METHOD[PARTITION_METHOD206,5766
int64		random_seed 209,5892
#define nbranches	215,6028
#define ntellers	217,6121
#define naccounts	218,6141
#define SCALE_32BIT_THRESHOLD 227,6425
bool		use_log;229,6462
bool		use_quiet;230,6521
int			agg_interval;231,6572
bool		per_script_stats 233,6660
int			progress 234,6734
bool		progress_timestamp 235,6803
int			nclients 236,6874
int			nthreads 237,6919
bool		is_connect;238,6964
bool		report_per_command;239,7032
int			main_pid;240,7093
char	   *pghost pghost242,7155
char	   *pgport pgport243,7177
char	   *login login244,7199
char	   *dbName;dbName245,7222
char	   *logfile_prefix logfile_prefix246,7239
const char *progname;progname247,7271
#define WSEP 249,7294
volatile bool timer_exceeded 251,7338
	char	   *name;name265,7763
	char	   *svalue;svalue266,7803
	PgBenchValue value;267,7864
} Variable;268,7917
#define MAX_SCRIPTS	270,7930
#define SHELL_COMMAND_SIZE	271,7996
typedef struct SimpleStats279,8245
	int64		count;281,8274
	double		min;282,8330
	double		max;283,8369
	double		sum;284,8408
	double		sum2;285,8444
} SimpleStats;286,8489
typedef struct StatsData292,8629
	time_t		start_time;294,8656
	int64		cnt;295,8720
	int64		skipped;296,8783
	SimpleStats latency;298,8882
	SimpleStats lag;299,8904
} StatsData;300,8922
typedef struct RandomState305,8975
	unsigned short xseed[xseed307,9004
} RandomState;308,9030
static RandomState base_random_sequence;311,9108
	CSTATE_CHOOSE_SCRIPT,324,9482
	CSTATE_START_TX,336,10009
	CSTATE_PREPARE_THROTTLE,345,10337
	CSTATE_THROTTLE,346,10363
	CSTATE_START_COMMAND,371,11459
	CSTATE_WAIT_RESULT,372,11482
	CSTATE_SLEEP,373,11503
	CSTATE_END_COMMAND,374,11518
	CSTATE_SKIP_COMMAND,375,11539
	CSTATE_END_TX,385,11859
	CSTATE_ABORTED,391,12024
	CSTATE_FINISHED392,12041
} ConnectionStateEnum;393,12058
	PGconn	   *con;con400,12127
	int			id;401,12176
	ConnectionStateEnum state;402,12207
	ConditionalStack cstack;403,12272
	RandomState cs_func_rs;409,12475
	int			use_file;411,12501
	int			command;412,12561
	Variable   *variables;variables415,12634
	int			nvariables;416,12695
	bool		vars_sorted;417,12741
	int64		txn_scheduled;420,12845
	int64		sleep_until;421,12917
	instr_time	txn_begin;422,12984
	instr_time	stmt_begin;423,13052
	bool		prepared[prepared425,13123
	int64		cnt;428,13229
	int			ecnt;429,13283
} CState;430,13316
	int			tid;437,13367
	pthread_t	thread;438,13397
	CState	   *state;state439,13438
	int			nstate;440,13481
	RandomState ts_choose_rs;447,13721
	RandomState ts_throttle_rs;448,13790
	RandomState ts_sample_rs;449,13865
	int64		throttle_trigger;451,13929
	FILE	   *logfile;logfile452,13991
	instr_time	start_time;455,14074
	instr_time	conn_time;456,14123
	StatsData	stats;457,14146
	int64		latency_late;458,14164
} TState;459,14223
#define INVALID_THREAD	461,14234
#define SQL_COMMAND	466,14309
#define META_COMMAND	467,14332
#define MAX_ARGS	473,14475
typedef enum MetaCommand475,14498
	META_NONE,477,14525
	META_SET,478,14572
	META_SETSHELL,479,14598
	META_SHELL,480,14633
	META_SLEEP,481,14663
	META_GSET,482,14693
	META_ASET,483,14721
	META_IF,484,14749
	META_ELIF,485,14773
	META_ELSE,486,14801
	META_ENDIF	487,14829
} MetaCommand;488,14858
typedef enum QueryMode490,14874
	QUERY_SIMPLE,492,14899
	QUERY_EXTENDED,493,14936
	QUERY_PREPARED,494,14977
	NUM_QUERYMODE495,15043
} QueryMode;496,15058
static QueryMode querymode 498,15072
static const char *QUERYMODE[QUERYMODE499,15115
typedef struct Command521,16139
	PQExpBufferData lines;523,16164
	char	   *first_line;first_line524,16188
	int			type;525,16210
	MetaCommand meta;526,16223
	int			argc;527,16242
	char	   *argv[argv528,16255
	char	   *varprefix;varprefix529,16281
	PgBenchExpr *expr;expr530,16302
	SimpleStats stats;531,16322
} Command;532,16342
typedef struct ParsedScript534,16354
	const char *desc;desc536,16384
	int			weight;537,16445
	Command   **commands;commands538,16485
	StatsData	stats;539,16549
} ParsedScript;540,16602
static ParsedScript sql_script[sql_script542,16619
static int	num_scripts;543,16687
static int64 total_weight 544,16752
typedef struct BuiltinScript547,16811
	const char *name;name549,16842
	const char *desc;desc550,16896
	const char *script;script551,16941
} BuiltinScript;552,16992
static const BuiltinScript builtin_script[builtin_script554,17010
static const PsqlScanCallbacks pgbench_callbacks 619,19737
usage(625,19863
is_an_int(694,24116
strtoint64(731,24922
strtodouble(802,26383
initRandomState(831,26937
getrand(850,27654
getExponentialRand(870,28365
getGaussianRand(894,29077
getPoissonRand(954,31025
computeIterativeZipfian(976,31625
getZipfianRand(1006,32234
getHashFnv1a(1020,32545
getHashMurmur2(1045,32967
initSimpleStats(1068,33368
addToSimpleStats(1077,33513
mergeSimpleStats(1092,33781
initStats(1108,34159
accumStats(1121,34412
executeStatement(1142,34810
tryExecuteStatement(1158,35156
doConnect(1173,35484
#define PARAMS_ARRAY_SIZE	1186,35704
compareVariableNames(1241,36942
lookupVariable(1249,37159
getVariable(1276,37795
makeVariableValue(1309,38809
valid_variable_name(1382,40628
lookupCreateVariable(1409,41175
putVariable(1454,42214
putVariableValue(1477,42717
putVariableInt(1497,43130
parseVariable(1514,43604
replaceVariable(1537,44022
assignVariables(1557,44429
getQueryParams(1593,44863
valueTypeName(1602,45059
coerceToBool(1624,45530
valueTruth(1644,46003
coerceToInt(1665,46394
coerceToDouble(1693,46961
setNullValue(1714,47340
setBoolValue(1722,47457
setIntValue(1730,47592
setDoubleValue(1738,47721
isLazyFunc(1745,47829
evalLazyFunc(1752,47994
#define MAX_FARGS 1862,49972
evalStandardFunc(1869,50101
evalFunc(2411,61442
evaluateExpr(2427,61888
getMetaCommand(2471,62752
runShellCommand(2507,63640
#define MAX_PREPARE_NAME	2607,66003
preparedStatementName(2609,66044
commandFailed(2615,66159
chooseScript(2623,66418
sendCommand(2642,66710
readCommandResponse(2725,68714
evaluateSleep(2844,71751
advanceConnectionState(2879,72339
executeMetaCommand(3311,84340
doLog(3471,88618
processXactStats(3552,90721
disconnect_all(3598,91854
initDropTables(3610,92028
createPartitions(3632,92581
initCreateTables(3700,94348
	struct ddlinfo3713,95023
		const char *table;table3715,95042
		const char *smcols;smcols3716,95081
		const char *bigcols;bigcols3717,95149
		int			declare_fillfactor;3718,95217
append_fillfactor(3798,97315
initTruncateTables(3808,97548
initGenerateDataClientSide(3821,97829
initGenerateDataServerSide(3965,101670
initVacuum(4006,102760
initCreatePKeys(4019,103124
initCreateFKeys(4054,104006
checkInitSteps(4080,105072
runInitSteps(4103,105581
GetTableInfo(4195,107337
parseQuery(4308,110685
syntax_error(4369,111991
skip_sql_comments(4405,112863
create_sql_command(4440,113557
free_command(4466,114318
postprocess_sql_command(4488,114898
process_backslash_command(4522,115645
ConditionError(4705,120771
CheckConditional(4716,121032
ParseScript(4766,122452
#define COMMANDS_ALLOC_NUM 4776,122653
read_file_contents(4903,126044
process_file(4936,126716
process_builtin(4968,127295
listAvailableScripts(4975,127446
findBuiltin(4987,127793
parseScriptWeight(5023,128634
addScript(5066,129511
printProgressReport(5093,130082
printSimpleStats(5180,132466
printResults(5194,132816
set_random_seed(5331,137130
main(5381,138331
threadRun(6227,160781
finishCon(6515,167800
handle_sig_alarm(6531,168003
setalarm(6537,168074
win32_timer_callback(6546,168202
setalarm(6552,168309
alloc_socket_set(6610,170232
free_socket_set(6622,170452
clear_socket_set(6628,170515
add_socket_to_set(6634,170582
wait_on_socket_set(6644,170805
socket_has_input(6661,171124
alloc_socket_set(6683,171818
free_socket_set(6689,171918
clear_socket_set(6695,171981
add_socket_to_set(6702,172068
wait_on_socket_set(6719,172439
socket_has_input(6736,172762
typedef struct win32_pthread6748,172959
	HANDLE		handle;6750,172990
	void	   *(*routine)routine6751,173007
	void	   *arg;arg6752,173038
	void	   *result;result6753,173053
} win32_pthread;6754,173071
win32_pthread_run(6757,173115
pthread_create(6767,173253
pthread_join(6793,173745

/home/seinoyu/pgsql/master/postgresql/src/bin/pgbench/pgbench.h,2088
#define PGBENCH_H12,342
#define yyscan_t 23,764
	PGBT_NO_VALUE,36,1011
	PGBT_NULL,37,1027
	PGBT_INT,38,1039
	PGBT_DOUBLE,39,1050
	PGBT_BOOLEAN40,1064
} PgBenchValueType;42,1106
	PgBenchValueType type;46,1144
		int64		ival;49,1178
		double		dval;50,1193
		bool		bval;51,1209
	}			u;53,1252
} PgBenchValue;54,1260
typedef enum PgBenchExprType57,1309
	ENODE_CONSTANT,59,1340
	ENODE_VARIABLE,60,1357
	ENODE_FUNCTION61,1374
} PgBenchExprType;62,1390
typedef enum PgBenchFunction65,1457
	PGBENCH_ADD,67,1488
	PGBENCH_SUB,68,1502
	PGBENCH_MUL,69,1516
	PGBENCH_DIV,70,1530
	PGBENCH_MOD,71,1544
	PGBENCH_DEBUG,72,1558
	PGBENCH_ABS,73,1574
	PGBENCH_LEAST,74,1588
	PGBENCH_GREATEST,75,1604
	PGBENCH_INT,76,1623
	PGBENCH_DOUBLE,77,1637
	PGBENCH_PI,78,1654
	PGBENCH_SQRT,79,1667
	PGBENCH_LN,80,1682
	PGBENCH_EXP,81,1695
	PGBENCH_RANDOM,82,1709
	PGBENCH_RANDOM_GAUSSIAN,83,1726
	PGBENCH_RANDOM_EXPONENTIAL,84,1752
	PGBENCH_RANDOM_ZIPFIAN,85,1781
	PGBENCH_POW,86,1806
	PGBENCH_AND,87,1820
	PGBENCH_OR,88,1834
	PGBENCH_NOT,89,1847
	PGBENCH_BITAND,90,1861
	PGBENCH_BITOR,91,1878
	PGBENCH_BITXOR,92,1894
	PGBENCH_LSHIFT,93,1911
	PGBENCH_RSHIFT,94,1928
	PGBENCH_EQ,95,1945
	PGBENCH_NE,96,1958
	PGBENCH_LE,97,1971
	PGBENCH_LT,98,1984
	PGBENCH_IS,99,1997
	PGBENCH_CASE,100,2010
	PGBENCH_HASH_FNV1A,101,2025
	PGBENCH_HASH_MURMUR2102,2046
} PgBenchFunction;103,2068
typedef struct PgBenchExpr PgBenchExpr;105,2088
typedef struct PgBenchExprLink PgBenchExprLink;106,2128
typedef struct PgBenchExprList PgBenchExprList;107,2176
struct PgBenchExpr109,2225
	PgBenchExprType etype;111,2246
		PgBenchValue constant;114,2280
			char	   *varname;varname117,2318
		}			variable;118,2339
			PgBenchFunction function;121,2368
			PgBenchExprLink *args;args122,2397
		}			function;123,2423
	}			u;124,2439
struct PgBenchExprLink128,2482
	PgBenchExpr *expr;expr130,2507
	PgBenchExprLink *next;next131,2527
struct PgBenchExprList134,2555
	PgBenchExprLink *head;head136,2580
	PgBenchExprLink *tail;tail137,2604
extern void expr_yyerror(144,2782

/home/seinoyu/pgsql/master/postgresql/src/bin/scripts/scripts_parallel.h,156
#define SCRIPTS_PARALLEL_H13,357
typedef struct ParallelSlot18,409
	PGconn	   *connection;connection20,439
	bool		isFree;21,485
} ParallelSlot;22,532

/home/seinoyu/pgsql/master/postgresql/src/bin/scripts/createuser.c,28
main(23,549
help(344,8029

/home/seinoyu/pgsql/master/postgresql/src/bin/scripts/scripts_parallel.c,197
#define FD_SETSIZE 16,428
init_slot(34,822
select_loop(48,1154
ParallelSlotsGetIdle(106,2368
ParallelSlotsSetup(208,4659
ParallelSlotsTerminate(253,5759
ParallelSlotsWaitCompletion(275,6128

/home/seinoyu/pgsql/master/postgresql/src/bin/scripts/createdb.c,28
main(23,512
help(256,5699

/home/seinoyu/pgsql/master/postgresql/src/bin/scripts/pg_isready.c,102
#define DEFAULT_CONNECT_TIMEOUT 16,400
main(22,485
#define PARAMS_ARRAY_SIZE	38,822
help(221,4861

/home/seinoyu/pgsql/master/postgresql/src/bin/scripts/dropdb.c,28
main(23,508
help(161,3688

/home/seinoyu/pgsql/master/postgresql/src/bin/scripts/dropuser.c,28
main(23,512
help(160,3474

/home/seinoyu/pgsql/master/postgresql/src/bin/scripts/common.h,147
#define COMMON_H10,179
enum trivalue17,351
	TRI_DEFAULT,19,367
	TRI_NO,20,381
	TRI_YES21,390
typedef void (*help_handler)help_handler24,403

/home/seinoyu/pgsql/master/postgresql/src/bin/scripts/clusterdb.c,91
main(33,983
cluster_one_database(190,4431
cluster_all_databases(231,5458
help(272,6526

/home/seinoyu/pgsql/master/postgresql/src/bin/scripts/common.c,459
#define ERRCODE_UNDEFINED_TABLE 26,612
handle_help_version_opts(33,742
connectDatabase(64,1609
connectMaintenanceDatabase(153,3616
disconnectDatabase(179,4474
executeQuery(203,4854
executeCommand(228,5269
executeMaintenanceCommand(255,5784
consumeQueryResult(281,6299
processQueryResult(302,6744
splitTableColumnsSpec(333,7507
appendQualifiedRelation(368,8445
#define PG_YESLETTER 430,10238
#define PG_NOLETTER 432,10317
yesno_prompt(435,10361

/home/seinoyu/pgsql/master/postgresql/src/bin/scripts/vacuumdb.c,624
typedef struct vacuumingOptions27,669
	bool		analyze_only;29,703
	bool		verbose;30,724
	bool		and_analyze;31,740
	bool		full;32,760
	bool		freeze;33,773
	bool		disable_page_skipping;34,788
	bool		skip_locked;35,818
	int			min_xid_age;36,838
	int			min_mxid_age;37,858
	int			parallel_workers;38,879
	bool		do_index_cleanup;40,986
	bool		do_truncate;41,1011
} vacuumingOptions;42,1031
#define ANALYZE_NO_STAGE	70,2003
#define ANALYZE_NUM_STAGES	71,2031
main(75,2066
vacuum_one_database(392,9652
vacuum_all_databases(746,19995
prepare_vacuum_command(824,22185
run_vacuum_command(950,25142
help(972,25602

/home/seinoyu/pgsql/master/postgresql/src/bin/scripts/reindexdb.c,334
typedef enum ReindexType23,551
	REINDEX_DATABASE,25,578
	REINDEX_INDEX,26,597
	REINDEX_SCHEMA,27,613
	REINDEX_SYSTEM,28,630
	REINDEX_TABLE29,647
} ReindexType;30,662
main(56,1666
reindex_one_database(316,8143
run_reindex_command(485,12233
get_parallel_object_list(597,14866
reindex_all_databases(708,17486
help(750,18655

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_config/pg_config.c,272
static const char *progname;progname30,946
	const char *switchname;switchname39,1099
	const char *configname;configname40,1124
} InfoItem;41,1149
static const InfoItem info_items[info_items43,1162
help(72,1897
advice(110,4426
show_item(116,4532
main(130,4778

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_checksums/pg_checksums.c,914
static int64 files 34,804
static int64 blocks 35,828
static int64 badblocks 36,853
static ControlFileData *ControlFile;ControlFile37,881
static char *only_filenode only_filenode39,919
static bool do_sync 40,954
static bool verbose 41,982
static bool showprogress 42,1011
	PG_MODE_CHECK,46,1061
	PG_MODE_DISABLE,47,1077
	PG_MODE_ENABLE48,1095
} PgChecksumMode;49,1111
#define PG_TEMP_FILES_DIR 58,1316
#define PG_TEMP_FILE_PREFIX 59,1354
static PgChecksumMode mode 61,1395
static const char *progname;progname63,1440
int64		total_size 68,1509
int64		current_size 69,1532
static pg_time_t last_progress_report 70,1557
usage(73,1613
struct exclude_list_item101,3093
	const char *name;name103,3120
	bool		match_prefix;104,3139
static const struct exclude_list_item skip[skip112,3301
progress_report(128,3650
skipfile(170,4823
scan_file(188,5145
scan_directory(296,7716
main(441,11314

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_waldump/rmgrdesc.h,200
#define RMGRDESC_H9,123
typedef struct RmgrDescData14,203
	const char *rm_name;rm_name16,233
	void		(*rm_desc)rm_desc17,255
	const char *(*rm_identify)rm_identify18,316
} RmgrDescData;19,358

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_waldump/rmgrdesc.c,103
#define FRONTEND 8,103
#define PG_RMGR(35,838
const RmgrDescData RmgrDescTable[RmgrDescTable38,937

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_waldump/compat.c,83
#define FRONTEND 18,542
timestamptz_to_time_t(27,672
timestamptz_to_str(49,1387

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_waldump/pg_waldump.c,1438
#define FRONTEND 12,327
static const char *progname;progname28,664
static int	WalSegSz;30,694
typedef struct XLogDumpPrivate32,716
	TimeLineID	timeline;34,749
	XLogRecPtr	startptr;35,771
	XLogRecPtr	endptr;36,793
	bool		endptr_reached;37,813
} XLogDumpPrivate;38,836
typedef struct XLogDumpConfig40,856
	bool		quiet;43,911
	bool		bkp_details;44,925
	int			stop_after_records;45,945
	int			already_displayed_records;46,972
	bool		follow;47,1006
	bool		stats;48,1021
	bool		stats_per_record;49,1035
	int			filter_by_rmgr;52,1083
	TransactionId filter_by_xid;53,1106
	bool		filter_by_xid_enabled;54,1136
} XLogDumpConfig;55,1166
typedef struct Stats57,1185
	uint64		count;59,1208
	uint64		rec_len;60,1224
	uint64		fpi_len;61,1242
} Stats;62,1260
#define MAX_XLINFO_TYPES 64,1270
typedef struct XLogDumpStats66,1299
	uint64		count;68,1330
	Stats		rmgr_stats[rmgr_stats69,1346
	Stats		record_stats[record_stats70,1378
} XLogDumpStats;71,1430
#define fatal_error(73,1448
print_rmgr_list(76,1549
verify_directory(91,1833
split_path(108,2182
open_file_in_directory(135,2620
search_directory(157,3228
identify_target_directory(238,5081
WALDumpOpenSegment(284,6114
WALDumpCloseSegment(326,7123
WALDumpReadPage(335,7322
XLogDumpRecordLen(383,8505
XLogDumpCountRecord(412,9283
XLogDumpDisplayRecord(450,10184
XLogDumpStatsRow(562,13294
XLogDumpDisplayStats(603,14285
usage(718,17545
main(748,19377

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/check.c,903
fix_path_separator(40,1355
output_check_banner(61,1581
check_and_dump_old_cluster(79,1925
check_new_cluster(158,4284
report_clusters_compatible(186,4739
issue_warnings_and_set_wal_level(203,5065
output_completion_banner(226,5806
check_cluster_versions(257,6906
check_cluster_compatibility(299,8389
check_locale_and_encoding(325,9225
equivalent_locale(352,10380
check_new_cluster_is_empty(395,11392
check_databases_are_compatible(422,12135
create_script_for_cluster_analyze(453,12813
create_script_for_old_cluster_deletion(543,15928
check_is_install_user(671,19862
check_proper_datallowconn(722,21251
check_for_prepared_transactions(783,22755
check_for_isn_and_int8_passing_mismatch(818,23555
check_for_tables_with_oids(904,25849
check_for_reg_data_type_usage(989,28038
check_for_jsonb_9_4_usage(1095,31183
check_for_pg_role_prefix(1185,33730
get_canonical_locale_name(1220,34500

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/file.c,171
cloneFile(38,679
copyFile(78,1920
#define COPY_BUF_SIZE 96,2562
linkFile(147,3761
rewriteVisibilityMap(173,4859
check_file_clone(317,9298
check_hard_link(359,10581

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/dump.c,26
generate_old_dump(16,226

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/version.c,287
new_9_0_populate_pg_largeobject_metadata(22,412
check_for_data_type_usage(109,2884
old_9_3_check_for_line_data_type_usage(235,7059
old_9_6_check_for_unknown_data_type_usage(272,8529
old_9_6_invalidate_hash_indexes(299,9363
old_11_check_for_sql_identifier_data_type_usage(414,12787

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/pg_upgrade.c,378
ClusterInfo old_cluster,59,1902
			new_cluster;60,1927
OSInfo		os_info;61,1943
char	   *output_files[output_files63,1961
main(76,2141
setup(202,5275
prepare_new_cluster(266,7201
prepare_new_globals(296,8234
create_new_objects(317,8707
remove_new_subdir(421,11758
copy_subdir_files(438,12149
copy_xact_xlog_xid(463,12798
set_frozenxids(581,17522
cleanup(679,20545

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/tablespace.c,96
init_tablespaces(19,318
get_tablespace_paths(40,873
set_tablespace_directory_suffix(106,2906

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/option.c,193
#define FIX_DEFAULT_READ_ONLY 27,541
UserOpts	user_opts;30,614
parseCommandLine(39,736
usage(286,7500
check_required_directory(359,11330
adjust_data_dir(404,12658
get_sock_dir(469,14564

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/server.c,251
connectToServer(27,554
get_db_conn(55,1099
cluster_conn_opts(90,2109
executeQueryOrDie(120,2762
get_major_server_version(157,3622
stop_postmaster_atexit(189,4342
start_postmaster(196,4406
stop_postmaster(330,9220
check_pghost_envvar(357,9853

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/exec.c,281
get_bin_version(32,596
exec_prog(80,1830
#define MAXCMDLEN 86,1990
pid_lock_file_exists(219,5686
verify_directories(250,6304
win32_check_directory_write_permissions(275,6931
check_single_dir(299,7442
check_data_dir(328,8280
check_bin_dir(366,9377
validate_exec(418,10873

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/util.c,267
LogOpts		log_opts;17,239
static void pg_log_v(19,259
end_progress_output(43,729
prep_status(69,1375
pg_log_v(87,1768
pg_log(147,3248
pg_fatal(158,3384
check_ok(171,3555
quote_identifier(187,3857
get_user_info(211,4123
str2uint(240,4506
pg_putenv(253,4694

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/controldata.c,87
get_control_data(34,1055
check_control_data(619,17943
disable_old_cluster(676,20437

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/relfilenode.c,127
transfer_all_new_tablespaces(29,648
transfer_all_new_dbs(86,2232
transfer_single_new_db(137,3572
transfer_relfile(189,5057

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/info.c,308
gen_db_file_maps(39,1101
create_rel_filename_map(165,4723
report_unmatched_relation(222,6325
print_maps(283,8029
get_db_and_rel_infos(309,8631
get_db_infos(338,9208
get_rel_infos(407,11357
free_db_and_rel_infos(591,17641
free_rel_infos(607,17918
print_db_infos(625,18304
print_rel_infos(639,18571

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/function.c,96
library_name_compare(28,792
get_loadable_libraries(53,1398
check_loadable_libraries(180,5329

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/parallel.c,791
static int	parallel_jobs;19,260
HANDLE	   *thread_handles;thread_handles27,520
	char	   *log_file;log_file31,565
	char	   *opt_log_file;opt_log_file32,585
	char	   *cmd;cmd33,609
} exec_thread_arg;34,624
	DbInfoArr  *old_db_arr;old_db_arr38,661
	DbInfoArr  *new_db_arr;new_db_arr39,686
	char	   *old_pgdata;old_pgdata40,711
	char	   *new_pgdata;new_pgdata41,733
	char	   *old_tablespace;old_tablespace42,755
} transfer_thread_arg;43,781
exec_thread_arg **exec_thread_args;exec_thread_args45,805
transfer_thread_arg **transfer_thread_args;transfer_thread_args46,841
void	  **cur_thread_args;cur_thread_args49,967
parallel_exec_prog(62,1293
win32_exec_prog(156,3704
parallel_transfer_all_new_dbs(175,4076
win32_transfer_all_new_dbs(269,6663
reap_child(284,6951

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_upgrade/pg_upgrade.h,4683
#define DEF_PGUPORT	16,290
#define MAX_STRING	18,319
#define QUERY_ALLOC	19,345
#define MESSAGE_WIDTH	21,373
#define GET_MAJOR_VERSION(23,400
#define GLOBALS_DUMP_FILE	26,513
#define DB_DUMP_FILE_MASK	27,569
#define DB_DUMP_LOG_FILE_MASK	29,624
#define SERVER_LOG_FILE	30,679
#define UTILITY_LOG_FILE	31,728
#define INTERNAL_LOG_FILE	32,778
#define SERVER_START_LOG_FILE	53,1661
#define SERVER_STOP_LOG_FILE	54,1707
#define SERVER_START_LOG_FILE	56,1758
#define SERVER_STOP_LOG_FILE	62,1977
#define pg_mv_file	67,2046
#define PATH_SEPARATOR	68,2074
#define PATH_QUOTE	69,2102
#define RM_CMD	70,2126
#define RMDIR_CMD	71,2152
#define SCRIPT_PREFIX	72,2181
#define SCRIPT_EXT	73,2209
#define ECHO_QUOTE	74,2235
#define ECHO_BLANK	75,2258
#define pg_mv_file	77,2286
#define PATH_SEPARATOR	78,2316
#define PATH_QUOTE	79,2345
#define RM_CMD	80,2368
#define RMDIR_CMD	81,2395
#define SCRIPT_PREFIX	82,2428
#define SCRIPT_EXT	83,2454
#define EXE_EXT	84,2481
#define ECHO_QUOTE	85,2507
#define ECHO_BLANK	86,2529
#define BINARY_UPGRADE_SERVER_FLAG_CAT_VER 94,2651
#define VISIBILITY_MAP_CRASHSAFE_CAT_VER 100,2833
#define VISIBILITY_MAP_FROZEN_BIT_CAT_VER 105,2957
#define MULTIXACT_FORMATCHANGE_CAT_VER 113,3319
#define LARGE_OBJECT_SIZE_PG_CONTROL_VER 119,3479
#define JSONB_FORMAT_CHANGE_CAT_VER 124,3574
	char	   *nspname;nspname133,3768
	char	   *relname;relname134,3809
	Oid			reloid;135,3849
	Oid			relfilenode;136,3885
	Oid			indtable;137,3930
	Oid			toastheap;138,3989
	char	   *tablespace;tablespace139,4056
	bool		nsp_alloc;140,4125
	bool		tblsp_alloc;141,4175
} RelInfo;142,4229
	RelInfo    *rels;rels146,4258
	int			nrels;147,4277
} RelInfoArr;148,4291
	const char *old_tablespace;old_tablespace155,4388
	const char *new_tablespace;new_tablespace156,4417
	const char *old_tablespace_suffix;old_tablespace_suffix157,4446
	const char *new_tablespace_suffix;new_tablespace_suffix158,4482
	Oid			old_db_oid;159,4518
	Oid			new_db_oid;160,4537
	Oid			old_relfilenode;166,4712
	Oid			new_relfilenode;167,4736
	char	   *nspname;nspname169,4822
	char	   *relname;relname170,4859
} FileNameMap;171,4878
	Oid			db_oid;178,4961
	char	   *db_name;db_name179,5004
	char		db_tablespace[db_tablespace180,5044
	char	   *db_collate;db_collate182,5130
	char	   *db_ctype;db_ctype183,5152
	int			db_encoding;184,5172
	RelInfoArr	rel_arr;185,5192
} DbInfo;186,5247
	DbInfo	   *dbs;dbs190,5275
	int			ndbs;191,5318
} DbInfoArr;192,5358
	uint32		ctrl_ver;201,5597
	uint32		cat_ver;202,5616
	char		nextxlogfile[nextxlogfile203,5634
	uint32		chkpnt_nxtxid;204,5659
	uint32		chkpnt_nxtepoch;205,5683
	uint32		chkpnt_nxtoid;206,5709
	uint32		chkpnt_nxtmulti;207,5733
	uint32		chkpnt_nxtmxoff;208,5759
	uint32		chkpnt_oldstMulti;209,5785
	uint32		align;210,5813
	uint32		blocksz;211,5829
	uint32		largesz;212,5847
	uint32		walsz;213,5865
	uint32		walseg;214,5881
	uint32		ident;215,5898
	uint32		index;216,5914
	uint32		toast;217,5930
	uint32		large_object;218,5946
	bool		date_is_int;219,5969
	bool		float8_pass_by_value;220,5989
	bool		data_checksum_version;221,6018
} ControlData;222,6048
	TRANSFER_MODE_CLONE,229,6126
	TRANSFER_MODE_COPY,230,6148
	TRANSFER_MODE_LINK231,6169
} transferMode;232,6189
	PG_VERBOSE,239,6266
	PG_STATUS,240,6279
	PG_REPORT,241,6291
	PG_WARNING,242,6303
	PG_FATAL243,6316
} eLogType;244,6326
typedef long pgpid_t;247,6340
	ControlData controldata;257,6436
	DbInfoArr	dbarr;258,6491
	char	   *pgdata;pgdata259,6531
	char	   *pgconfig;pgconfig260,6598
	char	   *bindir;bindir262,6681
	char	   *pgopts;pgopts263,6751
	char	   *sockdir;sockdir265,6834
	unsigned short port;266,6901
	uint32		major_version;267,6970
	char		major_version_str[major_version_str268,7022
	uint32		bin_version;269,7087
	const char *tablespace_suffix;tablespace_suffix270,7144
} ClusterInfo;271,7206
	FILE	   *internal;internal279,7257
	bool		verbose;280,7302
	bool		retain;281,7356
} LogOpts;282,7407
	bool		check;290,7455
	transferMode transfer_mode;292,7536
	int			jobs;293,7596
	char	   *socketdir;socketdir294,7652
} UserOpts;295,7714
	char	   *name;name299,7744
	int			dbnum;300,7760
} LibraryInfo;301,7774
	const char *progname;progname308,7824
	char	   *user;user309,7889
	bool		user_specified;310,7935
	char	  **old_tablespaces;old_tablespaces311,7995
	int			num_old_tablespaces;312,8040
	LibraryInfo *libraries;libraries313,8068
	int			num_libraries;314,8119
	ClusterInfo *running_cluster;running_cluster315,8141
} OSInfo;316,8172
#define EXEC_PSQL_ARGS 358,9164
bool		exec_prog(360,9259
#define fopen_priv(380,10058

/home/seinoyu/pgsql/master/postgresql/src/bin/initdb/findtimezone.c,825
static char tzdirpath[tzdirpath27,667
pg_TZDIR(37,870
pg_open_tzfile(65,1865
pg_load_tz(91,2474
#define T_DAY	152,4523
#define T_WEEK	153,4559
#define T_MONTH 154,4598
#define MAX_TEST_TIMES 156,4640
struct tztry158,4689
	int			n_test_times;160,4704
	time_t		test_times[test_times161,4725
get_timezone_offset(175,5076
build_time_t(190,5385
compare_tm(206,5648
score_timezone(233,6470
perfect_timezone_match(319,8814
identify_system_timezone(330,9101
check_system_link_file(543,16106
zone_name_pref(614,18104
scan_available_timezones(656,19476
	const char *stdname;stdname730,21121
	const char *dstname;dstname731,21184
	const char *pgtzname;pgtzname732,21247
}			win32_tzmap[win32_tzmap733,21310
identify_system_timezone(1509,39691
validate_zone(1672,43816
select_default_timezone(1701,44523

/home/seinoyu/pgsql/master/postgresql/src/bin/initdb/initdb.c,4710
static const char *const auth_methods_host[auth_methods_host81,2951
static const char *const auth_methods_local[auth_methods_local103,3288
static char *share_path share_path120,3584
static char *pg_data pg_data123,3660
static char *encoding encoding124,3689
static char *locale locale125,3719
static char *lc_collate lc_collate126,3747
static char *lc_ctype lc_ctype127,3779
static char *lc_monetary lc_monetary128,3809
static char *lc_numeric lc_numeric129,3842
static char *lc_time lc_time130,3874
static char *lc_messages lc_messages131,3903
static const char *default_text_search_config default_text_search_config132,3936
static char *username username133,3990
static bool pwprompt 134,4020
static char *pwfilename pwfilename135,4050
static char *superuser_password superuser_password136,4082
static const char *authmethodhost authmethodhost137,4122
static const char *authmethodlocal authmethodlocal138,4164
static bool debug 139,4207
static bool noclean 140,4234
static bool do_sync 141,4263
static bool sync_only 142,4291
static bool show_setting 143,4322
static bool data_checksums 144,4356
static char *xlog_dir xlog_dir145,4392
static char *str_wal_segment_size_mb str_wal_segment_size_mb146,4422
static int	wal_segment_size_mb;147,4467
static const char *progname;progname151,4521
static int	encodingid;152,4550
static char *bki_file;bki_file153,4573
static char *hba_file;hba_file154,4596
static char *ident_file;ident_file155,4619
static char *conf_file;conf_file156,4644
static char *dictionary_file;dictionary_file157,4668
static char *info_schema_file;info_schema_file158,4698
static char *features_file;features_file159,4729
static char *system_views_file;system_views_file160,4757
static bool success 161,4789
static bool made_new_pgdata 162,4818
static bool found_existing_pgdata 163,4855
static bool made_new_xlogdir 164,4898
static bool found_existing_xlogdir 165,4936
static char infoversion[infoversion166,4980
static bool caught_signal 167,5010
static bool output_failed 168,5045
static int	output_errno 169,5080
static char *pgdata_native;pgdata_native170,5109
static int	n_connections 173,5153
static int	n_buffers 174,5184
static const char *dynamic_shared_memory_type dynamic_shared_memory_type175,5211
static const char *default_timezone default_timezone176,5265
#define AUTHTRUST_WARNING 181,5364
static bool authwarning 186,5658
static const char *boot_options boot_options198,6090
static const char *backend_options backend_options199,6130
static const char *const subdirs[subdirs201,6237
static char bin_path[bin_path228,6688
static char backend_exec[backend_exec229,6721
#define PG_CMD_DECL	287,8870
#define PG_CMD_OPEN 289,8925
#define PG_CMD_CLOSE 296,9081
#define PG_CMD_PUTS(302,9211
#define PG_CMD_PRINTF(308,9359
escape_quotes(319,9661
escape_quotes_bki(341,10268
replace_token(385,11105
filter_lines_with_token(441,12187
readfile(468,12646
writefile(529,13917
popen_check(559,14469
cleanup_directories_atexit(577,14833
get_id(630,16112
encodingid_to_string(651,16506
get_encoding_id(663,16684
struct tsearch_config_match681,17131
	const char *tsconfname;tsconfname683,17161
	const char *langname;langname684,17186
static const struct tsearch_config_match tsearch_config_languages[tsearch_config_languages687,17213
find_matching_ts_config(748,18592
set_input(794,19669
check_input(803,19826
write_version_file(840,20784
set_null_conf(869,21431
choose_dsm_implementation(901,22436
test_config_settings(942,23164
#define MIN_BUFS_FOR_CONNS(948,23336
pretty_wal_size(1056,26064
setup_config(1073,26363
bootstrap_template1(1373,35578
setup_auth(1458,37575
get_su_pwd(1482,38141
setup_depend(1545,39436
setup_sysviews(1638,42750
setup_description(1660,43069
setup_collation(1681,43841
setup_dictionary(1700,44688
setup_privileges(1737,45682
set_info_version(1888,50303
setup_schema(1915,50927
load_plpgsql(1948,51628
vacuum_db(1957,51761
make_template0(1967,51950
make_postgres(2005,52937
trapsig(2040,54201
check_ok(2051,54417
my_strftime(2076,54832
locale_date_order(2085,55004
check_locale_name(2148,56493
check_locale_encoding(2212,58109
setlocales(2248,59107
usage(2299,60301
check_authmethod_unspecified(2342,63072
check_authmethod_valid(2352,63222
check_need_password(2372,63715
setup_pgdata(2389,64228
setup_bin_paths(2428,65185
setup_locale_encoding(2473,66279
setup_data_file_paths(2557,68603
setup_text_search(2597,69656
setup_signals(2632,70526
create_data_directory(2661,71046
create_xlog_or_symlink(2727,72521
warn_on_mount_point(2833,74818
initialize_data_directory(2849,75273
main(2961,77464

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_controldata/pg_controldata.c,93
#define FRONTEND 17,418
usage(33,726
dbState(50,1418
wal_level_str(73,1932
main(89,2180

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/crosstabview.c,802
typedef struct _pivot_field21,439
	char	   *name;name28,687
	char	   *sort_value;sort_value36,992
	int			rank;45,1342
} pivot_field;46,1355
typedef struct _avl_node49,1394
	pivot_field field;52,1442
	int			height;58,1561
	struct _avl_node *children[children65,1740
} avl_node;66,1772
typedef struct _avl_tree72,1891
	int			count;74,1918
	avl_node   *root;root75,1962
	avl_node   *end;end76,2006
} avl_tree;77,2069
PrintResultsInCrosstab(103,3040
printCrosstab(285,7454
avlInit(437,11445
avlFree(447,11708
avlUpdateHeight(471,12283
avlRotate(480,12533
avlBalance(494,12811
avlAdjustBalance(505,13060
avlInsertNode(528,13655
avlMergeValue(559,14319
avlCollectFields(576,14785
rankSort(587,15079
indexOfColumn(635,16219
pivotFieldCompare(694,17562
rankCompare(710,17888

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/describe.h,25
#define DESCRIBE_H9,169

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/stringutils.h,28
#define STRINGUTILS_H9,175

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/large_obj.h,26
#define LARGE_OBJ_H9,171

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/tab-complete.h,29
#define TAB_COMPLETE_H9,177

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/command.c,3112
typedef enum EditableObjectType49,1054
	EditableFunction,51,1088
	EditableView52,1107
} EditableObjectType;53,1121
HandleSlashCmds(204,9551
exec_command(277,11423
exec_command_a(430,18228
exec_command_C(449,18680
exec_command_connect(482,19582
exec_command_cd(535,20705
exec_command_conninfo(593,21906
exec_command_copy(640,23300
exec_command_copyright(662,23724
exec_command_crosstabview(674,23966
exec_command_d(698,24432
exec_command_edit(956,30514
exec_command_ef_ev(1033,32141
exec_command_echo(1155,35211
exec_command_encoding(1200,36073
exec_command_errverbose(1238,36975
exec_command_f(1268,37511
exec_command_g(1296,38331
process_command_g_options(1349,39628
exec_command_gdesc(1424,41357
exec_command_gexec(1441,41656
exec_command_gset(1458,41962
exec_command_help(1487,42552
exec_command_html(1518,43165
exec_command_include(1537,43583
exec_command_if(1578,44704
exec_command_elif(1624,46109
exec_command_else(1700,48268
exec_command_endif(1765,49894
exec_command_list(1805,50782
exec_command_lo(1834,51340
exec_command_out(1910,52672
exec_command_print(1933,53123
exec_command_password(1959,53808
exec_command_prompt(2027,55187
exec_command_pset(2101,56495
exec_command_quit(2155,57708
exec_command_reset(2169,57962
exec_command_s(2187,58330
exec_command_set(2214,58913
exec_command_setenv(2267,59955
exec_command_sf_sv(2324,61254
exec_command_t(2429,63798
exec_command_T(2451,64254
exec_command_timing(2473,64720
exec_command_unset(2505,65329
exec_command_write(2535,65906
exec_command_watch(2624,67634
exec_command_x(2663,68512
exec_command_z(2685,68972
exec_command_shell_escape(2708,69413
exec_command_slash_command_help(2730,69851
read_connect_arg(2762,70585
gather_boolean_expression(2802,71745
is_true_boolean_expression(2832,72531
ignore_boolean_expression(2849,73012
ignore_slash_options(2865,73528
ignore_slash_filepipe(2882,73986
ignore_slash_whole_line(2899,74439
is_branching_command(2912,74689
save_query_text_state(2928,75091
discard_query_text(2948,75812
copy_previous_query(2971,76467
prompt_for_password(2983,76807
param_is_newly_set(3001,77188
has_hostaddr(3014,77458
do_connect(3045,78299
#define PARAMS_ARRAY_SIZE	3179,82017
connection_warnings(3338,86715
printSSLInfo(3392,88083
printGSSInfo(3420,88848
checkWin32Codepage(3436,89132
SyncVariables(3461,89657
UnsyncVariables(3502,90929
editFile(3521,91418
do_edit(3589,93179
process_file(3754,96496
_align2string(3821,97861
set_unicode_line_style(3864,98595
_unicode_linestyle2string(3877,98940
do_pset(3907,99659
printPsetInfo(4233,107245
savePsetInfo(4420,112173
restorePsetInfo(4456,113255
pset_bool_string(4487,114180
pset_quoted_string(4494,114255
pset_value_string(4532,114894
#define DEFAULT_SHELL 4593,117497
#define DEFAULT_SHELL 4599,117650
do_shell(4603,117702
do_watch(4647,118524
echo_hidden_command(4753,121293
lookup_object_oid(4785,122160
get_create_object_cmd(4845,123716
strip_lineno_from_objdesc(5018,129105
count_lines_in_buf(5076,130687
print_with_linenumbers(5103,131191
minimal_error_message(5144,132132

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/tab-complete.c,8356
#define rl_filename_completion_function 60,1815
#define rl_completion_matches 64,1927
#define USE_FILENAME_QUOTING_FUNCTIONS 73,2244
#define WORD_BREAKS	77,2321
PQExpBuffer tab_completion_query_buf 84,2583
typedef struct VersionedQuery98,3296
	int			min_server_version;100,3328
	const char *query;query101,3355
} VersionedQuery;102,3375
typedef struct SchemaQuery114,3878
	int			min_server_version;121,4139
	const char *catname;catname127,4311
	const char *selcondition;selcondition136,4659
	const char *viscondition;viscondition142,4837
	const char *namespace;namespace148,4970
	const char *result;result154,5151
	const char *qualresult;qualresult160,5311
} SchemaQuery;161,5336
static int	completion_max_records;167,5464
static char completion_last_char;174,5686
static const char *completion_charp;completion_charp175,5750
static const char *const *completion_charpp;completion_charpp176,5810
static const char *completion_info_charp;completion_info_charp177,5887
static const char *completion_info_charp2;completion_info_charp2178,5959
static const VersionedQuery *completion_vquery;completion_vquery179,6031
static const SchemaQuery *completion_squery;completion_squery180,6110
static bool completion_case_sensitive;181,6183
static bool completion_force_quote;182,6257
#define COMPLETE_WITH_QUERY(197,7006
#define COMPLETE_WITH_VERSIONED_QUERY(203,7155
#define COMPLETE_WITH_SCHEMA_QUERY(209,7325
#define COMPLETE_WITH_VERSIONED_SCHEMA_QUERY(216,7528
#define COMPLETE_WITH_CONST(227,7884
#define COMPLETE_WITH_LIST_INT(234,8072
#define COMPLETE_WITH_LIST(241,8265
#define COMPLETE_WITH_LIST_CS(242,8334
#define COMPLETE_WITH(244,8406
#define COMPLETE_WITH_CS(250,8544
#define COMPLETE_WITH_ATTR(256,8688
#define COMPLETE_WITH_ENUM_VALUE(281,9506
#define COMPLETE_WITH_FUNCTION_ARG(306,10297
static const SchemaQuery Query_for_list_of_aggregates[Query_for_list_of_aggregates335,11167
static const SchemaQuery Query_for_list_of_datatypes 353,11707
static const SchemaQuery Query_for_list_of_composite_datatypes 366,12247
static const SchemaQuery Query_for_list_of_domains 378,12755
static const SchemaQuery Query_for_list_of_functions[Query_for_list_of_functions387,13100
static const SchemaQuery Query_for_list_of_procedures[Query_for_list_of_procedures404,13608
static const SchemaQuery Query_for_list_of_routines 419,13994
static const SchemaQuery Query_for_list_of_sequences 426,14231
static const SchemaQuery Query_for_list_of_foreign_tables 434,14537
static const SchemaQuery Query_for_list_of_tables 442,14853
static const SchemaQuery Query_for_list_of_partitioned_tables 452,15203
static const SchemaQuery Query_for_list_of_views 460,15527
static const SchemaQuery Query_for_list_of_matviews 468,15825
static const SchemaQuery Query_for_list_of_indexes 476,16129
static const SchemaQuery Query_for_list_of_partitioned_indexes 486,16477
static const SchemaQuery Query_for_list_of_relations 496,16817
static const SchemaQuery Query_for_list_of_partitioned_relations 504,17081
static const SchemaQuery Query_for_list_of_operator_families 513,17454
static const SchemaQuery Query_for_list_of_updatables 521,17756
static const SchemaQuery Query_for_list_of_selectables 534,18219
#define Query_for_list_of_grantables 549,18801
static const SchemaQuery Query_for_list_of_analyzables 552,18904
static const SchemaQuery Query_for_list_of_indexables 565,19379
static const SchemaQuery Query_for_list_of_vacuumables 577,19803
#define Query_for_list_of_clusterables 588,20229
static const SchemaQuery Query_for_list_of_constraints_with_schema 590,20299
static const SchemaQuery Query_for_list_of_statistics 598,20601
#define Query_for_list_of_attributes 620,21510
#define Query_for_list_of_attribute_numbers 631,21942
#define Query_for_list_of_attributes_with_schema 642,22348
#define Query_for_list_of_enum_values 655,22901
#define Query_for_list_of_enum_values_with_schema 664,23282
#define Query_for_list_of_template_databases 675,23784
#define Query_for_list_of_databases 681,24051
#define Query_for_list_of_tablespaces 685,24223
#define Query_for_list_of_encodings 689,24399
#define Query_for_list_of_languages 694,24628
#define Query_for_list_of_schemas 700,24839
#define Query_for_list_of_alter_system_set_vars 704,25010
#define Query_for_list_of_set_vars 711,25256
#define Query_for_list_of_show_vars 723,25673
#define Query_for_list_of_roles 730,25920
#define Query_for_list_of_grant_roles 735,26094
#define Query_for_index_of_table 744,26452
#define Query_for_constraint_of_table 753,26893
#define Query_for_all_table_constraints 760,27208
#define Query_for_constraint_of_type 766,27434
#define Query_for_list_of_tables_for_constraint 774,27818
#define Query_for_rule_of_table 783,28190
#define Query_for_list_of_tables_for_rule 791,28569
#define Query_for_trigger_of_table 800,28933
#define Query_for_list_of_tables_for_trigger 809,29343
#define Query_for_list_of_ts_configurations 817,29631
#define Query_for_list_of_ts_dictionaries 821,29812
#define Query_for_list_of_ts_parsers 825,29991
#define Query_for_list_of_ts_templates 829,30165
#define Query_for_list_of_fdws 833,30345
#define Query_for_list_of_servers 838,30533
#define Query_for_list_of_user_mappings 843,30718
#define Query_for_list_of_access_methods 848,30908
#define Query_for_list_of_index_access_methods 853,31086
#define Query_for_list_of_table_access_methods 859,31316
#define Query_for_list_of_arguments 866,31622
#define Query_for_list_of_arguments_with_schema 875,32014
#define Query_for_list_of_extensions 885,32443
#define Query_for_list_of_available_extensions 890,32626
#define Query_for_list_of_available_extension_versions 896,32930
#define Query_for_list_of_available_extension_versions_with_TO 903,33249
#define Query_for_list_of_prepared_statements 909,33509
#define Query_for_list_of_event_triggers 914,33705
#define Query_for_list_of_tablesample_methods 919,33896
#define Query_for_list_of_policies 926,34232
#define Query_for_list_of_tables_for_policy 931,34410
#define Query_for_enum 939,34698
#define Query_for_partition_of_table 949,35092
static const VersionedQuery Query_for_list_of_publications[Query_for_list_of_publications964,35715
static const VersionedQuery Query_for_list_of_subscriptions[Query_for_list_of_subscriptions973,35958
	const char *name;name991,36482
	const char *query;query992,36501
	const VersionedQuery *vquery;vquery993,36551
	const SchemaQuery *squery;squery994,36613
	const bits32 flags;995,36669
} pgsql_thing_t;996,36726
#define THING_NO_CREATE	998,36744
#define THING_NO_DROP	999,36816
#define THING_NO_ALTER	1000,36884
#define THING_NO_SHOW	1001,36954
static const pgsql_thing_t words_after_create[words_after_create1003,37029
static const char *const table_storage_parameters[table_storage_parameters1069,40845
initialize_readline(1151,43966
#define MatchAny 1209,45882
#define MatchAnyExcept(1210,45905
word_matches(1213,45965
#define cimatch(1219,46067
TailMatchesImpl(1282,47561
MatchesImpl(1315,48163
HeadMatchesImpl(1348,48769
ends_with(1380,49312
psql_completion(1396,49774
#define prev_wd 1417,50470
#define prev2_wd 1418,50508
#define prev3_wd 1419,50546
#define prev4_wd 1420,50584
#define prev5_wd 1421,50622
#define prev6_wd 1422,50660
#define prev7_wd 1423,50698
#define prev8_wd 1424,50736
#define prev9_wd 1425,50774
#define TailMatches(1428,50877
#define TailMatchesCS(1433,51077
#define Matches(1438,51287
#define MatchesCS(1443,51485
#define HeadMatches(1448,51679
#define HeadMatchesCS(1453,51879
create_or_drop_command_generator(3975,153876
create_command_generator(4004,154596
drop_command_generator(4013,154826
alter_command_generator(4022,155054
complete_from_query(4033,155312
complete_from_versioned_query(4040,155502
complete_from_schema_query(4055,155886
complete_from_versioned_schema_query(4063,156104
_complete_from_query(4118,157970
complete_from_list(4308,163783
complete_from_const(4388,166030
append_variable_names(4413,166536
complete_from_variables(4436,167264
complete_from_files(4481,168528
pg_strdup_keyword_case(4583,171455
escape_string(4615,172131
exec_query(4634,172506
get_previous_words(4669,173378
get_guctype(4796,176611
quote_file_name(4832,177535
dequote_file_name(4893,179270

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/large_obj.c,196
static void print_lo_result(16,300
start_lo_xact(56,1147
finish_lo_xact(98,1964
fail_lo_xact(121,2324
do_lo_export(142,2630
do_lo_import(176,3286
do_lo_unlink(239,4615
do_lo_list(274,5215

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/stringutils.c,66
strtokx(52,1810
strip_quotes(240,5837
quote_if_needed(292,7128

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/copy.c,388
struct copy_options53,1469
	char	   *before_tofrom;before_tofrom55,1491
	char	   *after_tofrom;after_tofrom56,1549
	char	   *file;file57,1614
	bool		program;58,1658
	bool		psql_inout;59,1711
	bool		from;60,1766
free_copy_options(65,1828
xstrcat(78,2066
parse_slash_copy(89,2227
do_copy(268,6563
handleCopyOut(436,10235
#define COPYBUFSIZ 510,12218
handleCopyIn(513,12248

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/prompt.h,23
#define PROMPT_H9,165

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/settings.h,2784
#define SETTINGS_H9,169
#define DEFAULT_CSV_FIELD_SEP 14,241
#define DEFAULT_FIELD_SEP 15,275
#define DEFAULT_RECORD_SEP 16,305
#define DEFAULT_EDITOR	19,380
#define DEFAULT_EDITOR	22,474
#define DEFAULT_EDITOR_LINENUMBER_ARG 23,502
#define DEFAULT_PROMPT1 26,552
#define DEFAULT_PROMPT2 27,588
#define DEFAULT_PROMPT3 28,624
	PSQL_ECHO_NONE,37,779
	PSQL_ECHO_QUERIES,38,796
	PSQL_ECHO_ERRORS,39,816
	PSQL_ECHO_ALL40,835
} PSQL_ECHO;41,850
	PSQL_ECHO_HIDDEN_OFF,45,879
	PSQL_ECHO_HIDDEN_ON,46,902
	PSQL_ECHO_HIDDEN_NOEXEC47,924
} PSQL_ECHO_HIDDEN;48,949
	PSQL_ERROR_ROLLBACK_OFF,52,985
	PSQL_ERROR_ROLLBACK_INTERACTIVE,53,1011
	PSQL_ERROR_ROLLBACK_ON54,1045
} PSQL_ERROR_ROLLBACK;55,1069
	PSQL_COMP_CASE_PRESERVE_UPPER,59,1108
	PSQL_COMP_CASE_PRESERVE_LOWER,60,1140
	PSQL_COMP_CASE_UPPER,61,1172
	PSQL_COMP_CASE_LOWER62,1195
} PSQL_COMP_CASE;63,1217
	hctl_none 67,1251
	hctl_ignorespace 68,1267
	hctl_ignoredups 69,1290
	hctl_ignoreboth 70,1312
} HistControl;71,1366
enum trivalue73,1382
	TRI_DEFAULT,75,1398
	TRI_NO,76,1412
	TRI_YES77,1421
typedef struct _psqlSettings80,1434
	PGconn	   *db;db82,1465
	int			encoding;83,1512
	FILE	   *queryFout;queryFout84,1552
	bool		queryFoutPipe;85,1612
	FILE	   *copyStream;copyStream87,1669
	PGresult   *last_error_result;last_error_result89,1738
	printQueryOpt popt;91,1810
	char	   *gfname;gfname93,1873
	printQueryOpt *gsavepopt;gsavepopt94,1936
	char	   *gset_prefix;gset_prefix96,2011
	bool		gdesc_flag;97,2075
	bool		gexec_flag;98,2144
	bool		crosstab_flag;99,2212
	char	   *ctv_args[ctv_args100,2277
	bool		notty;102,2331
	enum trivalue getPassword;104,2420
	FILE	   *cur_cmd_source;cur_cmd_source105,2498
	bool		cur_cmd_interactive;107,2586
	int			sversion;108,2614
	const char *progname;progname109,2661
	char	   *inputfile;inputfile110,2716
	uint64		lineno;111,2783
	uint64		stmt_lineno;112,2833
	bool		timing;114,2903
	FILE	   *logfile;logfile116,2956
	VariableSpace vars;118,3007
	bool		autocommit;125,3231
	bool		on_error_stop;126,3250
	bool		quiet;127,3272
	bool		singleline;128,3286
	bool		singlestep;129,3305
	bool		hide_tableam;130,3324
	int			fetch_count;131,3345
	int			histsize;132,3365
	int			ignoreeof;133,3382
	PSQL_ECHO	echo;134,3400
	PSQL_ECHO_HIDDEN echo_hidden;135,3417
	PSQL_ERROR_ROLLBACK on_error_rollback;136,3448
	PSQL_COMP_CASE comp_case;137,3488
	HistControl histcontrol;138,3515
	const char *prompt1;prompt1139,3541
	const char *prompt2;prompt2140,3563
	const char *prompt3;prompt3141,3585
	PGVerbosity verbosity;142,3607
	PGContextVisibility show_context;143,3668
} PsqlSettings;144,3739
#define EXIT_SUCCESS 150,3805
#define EXIT_FAILURE 154,3857
#define EXIT_BADCONN 157,3888
#define EXIT_USER 159,3912

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/help.h,21
#define HELP_H9,161

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/common.h,23
#define COMMON_H9,165

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/sql_help.c,6647
#define N_(9,167
sql_help_ABORT(15,268
sql_help_ALTER_AGGREGATE(22,402
sql_help_ALTER_COLLATION(57,1321
sql_help_ALTER_CONVERSION(75,1766
sql_help_ALTER_DATABASE(90,2139
sql_help_ALTER_DEFAULT_PRIVILEGES(134,3286
sql_help_ALTER_DOMAIN(214,6124
sql_help_ALTER_EVENT_TRIGGER(256,7247
sql_help_ALTER_EXTENSION(272,7682
sql_help_ALTER_FOREIGN_DATA_WRAPPER(382,10684
sql_help_ALTER_FOREIGN_TABLE(403,11320
sql_help_ALTER_FUNCTION(488,14138
sql_help_ALTER_GROUP(551,16040
sql_help_ALTER_INDEX(575,16602
sql_help_ALTER_LANGUAGE(610,17650
sql_help_ALTER_LARGE_OBJECT(622,17960
sql_help_ALTER_MATERIALIZED_VIEW(631,18178
sql_help_ALTER_OPERATOR(689,19975
sql_help_ALTER_OPERATOR_CLASS(718,20774
sql_help_ALTER_OPERATOR_FAMILY(741,21337
sql_help_ALTER_POLICY(796,22839
sql_help_ALTER_PROCEDURE(816,23344
sql_help_ALTER_PUBLICATION(870,24896
sql_help_ALTER_ROLE(895,25647
sql_help_ALTER_ROUTINE(950,27312
sql_help_ALTER_RULE(1010,29071
sql_help_ALTER_SCHEMA(1020,29257
sql_help_ALTER_SEQUENCE(1032,29531
sql_help_ALTER_SERVER(1065,30506
sql_help_ALTER_STATISTICS(1083,30977
sql_help_ALTER_SUBSCRIPTION(1101,31441
sql_help_ALTER_SYSTEM(1133,32417
sql_help_ALTER_TABLE(1147,32754
sql_help_ALTER_TABLESPACE(1384,40936
sql_help_ALTER_TEXT_SEARCH_CONFIGURATION(1403,41448
sql_help_ALTER_TEXT_SEARCH_DICTIONARY(1443,42759
sql_help_ALTER_TEXT_SEARCH_PARSER(1464,43331
sql_help_ALTER_TEXT_SEARCH_TEMPLATE(1476,43610
sql_help_ALTER_TRIGGER(1488,43895
sql_help_ALTER_TYPE(1502,44222
sql_help_ALTER_USER(1550,45681
sql_help_ALTER_USER_MAPPING(1605,47346
sql_help_ALTER_VIEW(1618,47698
sql_help_ANALYZE(1651,48737
sql_help_BEGIN(1677,49341
sql_help_CALL(1692,49758
sql_help_CHECKPOINT(1701,49908
sql_help_CLOSE(1708,50008
sql_help_CLUSTER(1716,50129
sql_help_COMMENT(1726,50326
sql_help_COMMIT(1860,53964
sql_help_COMMIT_PREPARED(1867,54100
sql_help_COPY(1875,54241
sql_help_CREATE_ACCESS_METHOD(1927,55618
sql_help_CREATE_AGGREGATE(1939,55870
sql_help_CREATE_CAST(2054,59487
sql_help_CREATE_COLLATION(2079,60144
sql_help_CREATE_CONVERSION(2103,60754
sql_help_CREATE_DATABASE(2115,61020
sql_help_CREATE_DOMAIN(2143,61828
sql_help_CREATE_EVENT_TRIGGER(2166,62347
sql_help_CREATE_EXTENSION(2180,62703
sql_help_CREATE_FOREIGN_DATA_WRAPPER(2193,63023
sql_help_CREATE_FOREIGN_TABLE(2208,63417
sql_help_CREATE_FUNCTION(2274,65187
sql_help_CREATE_GROUP(2317,66511
sql_help_CREATE_INDEX(2355,67562
sql_help_CREATE_LANGUAGE(2381,68361
sql_help_CREATE_MATERIALIZED_VIEW(2395,68760
sql_help_CREATE_OPERATOR(2415,69274
sql_help_CREATE_OPERATOR_CLASS(2436,69814
sql_help_CREATE_OPERATOR_FAMILY(2463,70568
sql_help_CREATE_POLICY(2472,70748
sql_help_CREATE_PROCEDURE(2489,71251
sql_help_CREATE_PUBLICATION(2517,72040
sql_help_CREATE_ROLE(2531,72391
sql_help_CREATE_RULE(2569,73440
sql_help_CREATE_SCHEMA(2590,73949
sql_help_CREATE_SEQUENCE(2616,74685
sql_help_CREATE_SERVER(2637,75283
sql_help_CREATE_STATISTICS(2652,75667
sql_help_CREATE_SUBSCRIPTION(2667,76025
sql_help_CREATE_TABLE(2682,76400
sql_help_CREATE_TABLE_AS(2860,82411
sql_help_CREATE_TABLESPACE(2881,83042
sql_help_CREATE_TEXT_SEARCH_CONFIGURATION(2896,83420
sql_help_CREATE_TEXT_SEARCH_DICTIONARY(2909,83706
sql_help_CREATE_TEXT_SEARCH_PARSER(2923,84006
sql_help_CREATE_TEXT_SEARCH_TEMPLATE(2942,84467
sql_help_CREATE_TRANSFORM(2955,84751
sql_help_CREATE_TRIGGER(2971,85198
sql_help_CREATE_TYPE(3002,86151
sql_help_CREATE_USER(3075,88147
sql_help_CREATE_USER_MAPPING(3113,89196
sql_help_CREATE_VIEW(3126,89535
sql_help_DEALLOCATE(3141,89958
sql_help_DECLARE(3149,90101
sql_help_DELETE(3159,90337
sql_help_DISCARD(3178,90849
sql_help_DO(3185,90990
sql_help_DROP_ACCESS_METHOD(3194,91134
sql_help_DROP_AGGREGATE(3202,91308
sql_help_DROP_CAST(3227,91925
sql_help_DROP_COLLATION(3236,92121
sql_help_DROP_CONVERSION(3244,92287
sql_help_DROP_DATABASE(3252,92455
sql_help_DROP_DOMAIN(3266,92737
sql_help_DROP_EVENT_TRIGGER(3274,92905
sql_help_DROP_EXTENSION(3282,93079
sql_help_DROP_FOREIGN_DATA_WRAPPER(3290,93253
sql_help_DROP_FOREIGN_TABLE(3298,93449
sql_help_DROP_FUNCTION(3306,93631
sql_help_DROP_GROUP(3318,93918
sql_help_DROP_INDEX(3326,94061
sql_help_DROP_LANGUAGE(3334,94244
sql_help_DROP_MATERIALIZED_VIEW(3342,94423
sql_help_DROP_OPERATOR(3350,94613
sql_help_DROP_OPERATOR_CLASS(3360,94866
sql_help_DROP_OPERATOR_FAMILY(3369,95077
sql_help_DROP_OWNED(3378,95290
sql_help_DROP_POLICY(3386,95479
sql_help_DROP_PROCEDURE(3395,95669
sql_help_DROP_PUBLICATION(3407,95958
sql_help_DROP_ROLE(3415,96136
sql_help_DROP_ROUTINE(3423,96277
sql_help_DROP_RULE(3435,96562
sql_help_DROP_SCHEMA(3444,96748
sql_help_DROP_SEQUENCE(3452,96916
sql_help_DROP_SERVER(3460,97088
sql_help_DROP_STATISTICS(3468,97256
sql_help_DROP_SUBSCRIPTION(3476,97409
sql_help_DROP_TABLE(3484,97581
sql_help_DROP_TABLESPACE(3492,97747
sql_help_DROP_TEXT_SEARCH_CONFIGURATION(3500,97892
sql_help_DROP_TEXT_SEARCH_DICTIONARY(3508,98090
sql_help_DROP_TEXT_SEARCH_PARSER(3516,98282
sql_help_DROP_TEXT_SEARCH_TEMPLATE(3524,98466
sql_help_DROP_TRANSFORM(3532,98654
sql_help_DROP_TRIGGER(3541,98864
sql_help_DROP_TYPE(3550,99056
sql_help_DROP_USER(3558,99220
sql_help_DROP_USER_MAPPING(3566,99361
sql_help_DROP_VIEW(3575,99589
sql_help_END(3583,99753
sql_help_EXECUTE(3590,99883
sql_help_EXPLAIN(3599,100040
sql_help_FETCH(3631,100800
sql_help_GRANT(3663,101476
sql_help_IMPORT_FOREIGN_SCHEMA(3776,105422
sql_help_INSERT(3793,105845
sql_help_LISTEN(3844,107419
sql_help_LOAD(3852,107535
sql_help_LOCK(3860,107650
sql_help_MOVE(3875,108074
sql_help_NOTIFY(3907,108748
sql_help_PREPARE(3916,108894
sql_help_PREPARE_TRANSACTION(3926,109080
sql_help_REASSIGN_OWNED(3934,109229
sql_help_REFRESH_MATERIALIZED_VIEW(3944,109495
sql_help_REINDEX(3953,109699
sql_help_RELEASE_SAVEPOINT(3967,110019
sql_help_RESET(3975,110168
sql_help_REVOKE(3984,110319
sql_help_ROLLBACK(4124,115022
sql_help_ROLLBACK_PREPARED(4131,115162
sql_help_ROLLBACK_TO_SAVEPOINT(4139,115307
sql_help_SAVEPOINT(4147,115487
sql_help_SECURITY_LABEL(4155,115616
sql_help_SELECT(4235,117712
sql_help_SELECT_INTO(4352,121499
sql_help_SET(4391,122785
sql_help_SET_CONSTRAINTS(4403,123096
sql_help_SET_ROLE(4411,123270
sql_help_SET_SESSION_AUTHORIZATION(4421,123479
sql_help_SET_TRANSACTION(4431,123759
sql_help_SHOW(4450,124328
sql_help_START_TRANSACTION(4459,124457
sql_help_TABLE(4474,124875
sql_help_TRUNCATE(4591,128661
sql_help_UNLISTEN(4600,128891
sql_help_UPDATE(4608,129019
sql_help_VACUUM(4637,129868
sql_help_VALUES(4677,130872
sql_help_WITH(4694,131335
const struct _helpStruct QL_HELP[QL_HELP4811,135109

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/help.c,158
#define ON(45,810
usage(48,859
slashUsage(160,6335
helpVariables(340,17238
helpSQL(523,25558
#define VALUE_OR_NULL(525,25613
print_copyright(670,28986

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/prompt.c,53
get_prompt(65,2088
#define MAX_PROMPT_SIZE 67,2149

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/sql_help.h,288
#define SQL_HELP_H10,186
struct _helpStruct14,232
	const char	   *cmd;cmd16,253
	const char	   *help;help17,298
	const char	   *docbook_id;docbook_id18,355
	void (*syntaxfunc)syntaxfunc19,425
	int				nl_count;20,516
#define QL_HELP_COUNT	25,629
#define QL_MAX_CMD_LEN	26,683

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/startup.c,2106
PsqlSettings pset;31,550
#define SYSPSQLRC	34,584
#define PSQLRC	35,611
#define SYSPSQLRC	37,643
#define PSQLRC	38,670
enum _actions45,809
	ACT_SINGLE_QUERY,47,825
	ACT_SINGLE_SLASH,48,844
	ACT_FILE49,863
typedef struct SimpleActionListCell52,877
	struct SimpleActionListCell *next;next54,915
	enum _actions action;55,951
	char	   *val;val56,974
} SimpleActionListCell;57,989
typedef struct SimpleActionList59,1014
	SimpleActionListCell *head;head61,1048
	SimpleActionListCell *tail;tail62,1077
} SimpleActionList;63,1106
struct adhoc_opts65,1127
	char	   *dbname;dbname67,1147
	char	   *host;host68,1165
	char	   *port;port69,1181
	char	   *username;username70,1197
	char	   *logfilename;logfilename71,1217
	bool		no_readline;72,1240
	bool		no_psqlrc;73,1260
	bool		single_txn;74,1278
	bool		list_dbs;75,1297
	SimpleActionList actions;76,1314
#define NOPAGER	88,1716
log_pre_callback(91,1748
log_locus_callback(98,1863
main(118,2080
#define PARAMS_ARRAY_SIZE	243,5927
parse_psql_options(459,10839
simple_action_list_append(727,17501
process_psqlrc(753,17962
process_psqlrc_file(790,18733
#define R_OK 796,18863
showVersion(821,19460
bool_substitute_hook(840,19966
autocommit_hook(857,20257
on_error_stop_hook(863,20377
quiet_hook(869,20506
singleline_hook(875,20611
singlestep_hook(881,20731
fetch_count_substitute_hook(887,20853
fetch_count_hook(895,20976
histfile_hook(901,21098
histsize_substitute_hook(911,21316
histsize_hook(919,21438
ignoreeof_substitute_hook(925,21553
ignoreeof_hook(946,22252
echo_substitute_hook(952,22370
echo_hook(960,22489
echo_hidden_hook(980,23014
on_error_rollback_hook(1001,23481
comp_keyword_case_substitute_hook(1022,23998
comp_keyword_case_hook(1030,24140
histcontrol_substitute_hook(1051,24794
histcontrol_hook(1059,24920
prompt1_hook(1080,25519
prompt2_hook(1087,25621
prompt3_hook(1094,25723
verbosity_substitute_hook(1101,25827
verbosity_hook(1109,25954
show_context_substitute_hook(1132,26591
show_context_hook(1140,26720
hide_tableam_hook(1161,27295
EstablishVariableSpace(1167,27421

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/mainloop.c,68
const PsqlScanCallbacks psqlscan_callbacks 20,398
MainLoop(33,661

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/input.h,51
#define INPUT_H9,163
#define USE_READLINE 18,402

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/crosstabview.h,71
#define CROSSTABVIEW_H10,178
#define CROSSTABVIEW_MAX_COLUMNS 24,805

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/variables.h,436
#define VARIABLES_H14,460
typedef bool (*VariableAssignHook)VariableAssignHook31,1296
typedef char *(*VariableSubstituteHook)VariableSubstituteHook54,2553
struct _variable62,2817
	char	   *name;name64,2836
	char	   *value;value65,2852
	VariableSubstituteHook substitute_hook;66,2869
	VariableAssignHook assign_hook;67,2910
	struct _variable *next;next68,2943
typedef struct _variable *VariableSpace;VariableSpace72,3025

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/common.c,1001
openQueryOutputFile(50,1270
setQFout(85,1866
psql_get_variable(129,3074
NoticeProcessor(220,5205
volatile bool sigint_interrupt_enabled 245,6064
sigjmp_buf	sigint_interrupt_jmp;247,6113
psql_cancel_callback(250,6159
psql_setup_cancel_handler(266,6468
ConnectionUp(277,6644
CheckConnection(295,7113
AcceptResult(352,8170
SetResultVariables(409,9361
ClearOrSaveResult(451,10617
PrintTiming(477,11107
PSQLexec(536,12609
PSQLexecWatch(591,13616
PrintNotifications(681,15353
PrintQueryTuples(708,16127
StoreQueryTuple(758,17027
ExecQueryTuples(815,18062
ProcessResult(899,20450
PrintQueryStatus(1072,24364
PrintQueryResults(1104,25110
SendQuery(1179,26849
DescribeQuery(1457,33549
ExecQueryUsingCursor(1573,36379
skip_white_space(1831,42353
command_no_begin(1895,43932
is_select_command(2110,49689
is_superuser(2150,50489
standard_strings(2173,50872
session_username(2197,51311
expand_tilde(2218,51605
uri_prefix_length(2276,52726
recognized_connection_string(2303,53547

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/variables.c,285
valid_variable_name(22,502
CreateVariableSpace(51,1146
GetVariable(71,1507
ParseVariableBool(107,2357
ParseVariableNum(156,3794
PrintVariables(186,4404
SetVariable(211,4921
SetVariableHooks(315,7976
SetVariableBool(367,9119
DeleteVariable(379,9373
PsqlVarEnumError(391,9693

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/mainloop.h,25
#define MAINLOOP_H9,169

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/describe.c,1962
describeAggregates(63,1988
describeAccessMethods(149,4735
describeTablespaces(219,6388
describeFunctions(315,8745
describeTypes(667,19754
describeOperators(783,23129
listAllDbs(860,25704
permissionsList(930,27863
listDefaultACLs(1090,33575
objectDescription(1175,35878
describeTableDetails(1367,42577
describeOneTableDetails(1445,44328
		int16		checks;1478,45119
		char		relkind;1479,45136
		bool		hasindex;1480,45153
		bool		hasrules;1481,45171
		bool		hastriggers;1482,45189
		bool		rowsecurity;1483,45210
		bool		forcerowsecurity;1484,45231
		bool		hasoids;1485,45257
		bool		ispartition;1486,45274
		Oid			tablespace;1487,45295
		char	   *reloptions;reloptions1488,45315
		char	   *reloftype;reloftype1489,45338
		char		relpersistence;1490,45360
		char		relreplident;1491,45384
		char	   *relam;relam1492,45406
add_tablespace_footer(3347,104886
describeRoles(3413,106659
add_role_attribute(3572,111098
listDbRoleSettings(3584,111271
listTables(3668,113626
listPartitionedTables(3869,120336
listLanguages(4073,126789
listDomains(4148,128732
listConversions(4234,131249
listEventTriggers(4310,133383
listCasts(4376,135219
listCollations(4494,138871
listSchemas(4593,141873
listTSParsers(4650,143173
listTSParsersVerbose(4708,144556
describeOneTSParser(4778,145894
listTSDictionaries(4897,149260
listTSTemplates(4968,151089
listTSConfigs(5039,152953
listTSConfigsVerbose(5094,154308
describeOneTSConfig(5173,156044
listForeignDataWrappers(5245,157950
listForeignServers(5328,160234
listUserMappings(5410,162436
listForeignTables(5471,163962
listExtensions(5549,166137
listExtensionContents(5606,167549
listOneExtensionContents(5678,168847
listPublications(5719,169859
describePublications(5794,171789
describeSubscriptions(5960,176034
printACLColumn(6043,178284
listOperatorClasses(6062,178773
listOperatorFamilies(6151,181774
listOpFamilyOperators(6230,184238
listOpFamilyFunctions(6317,187009

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/psqlscanslash.h,163
#define PSQLSCANSLASH_H9,179
enum slash_option_type15,306
	OT_NORMAL,17,331
	OT_SQLID,18,365
	OT_SQLIDHACK,19,410
	OT_FILEPIPE,20,469
	OT_WHOLE_LINE	21,516

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/copy.h,21
#define COPY_H9,161

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/command.h,242
#define COMMAND_H9,167
typedef enum _backslashResult15,280
	PSQL_CMD_UNKNOWN 17,312
	PSQL_CMD_SEND,18,379
	PSQL_CMD_SKIP_LINE,19,429
	PSQL_CMD_TERMINATE,20,478
	PSQL_CMD_NEWEDIT,21,520
	PSQL_CMD_ERROR	22,587
} backslashResult;24,683

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/input.c,563
#define PSQLHISTORY 23,384
#define PSQLHISTORY 25,426
static bool useReadline;31,611
static bool useHistory;32,636
static char *psql_history;psql_history34,661
static int	history_lines_added;36,689
#define NL_IN_HISTORY	47,1012
gets_interactive(67,1485
pg_append_history(114,2668
pg_send_history(136,3224
gets_fromFile(188,4437
#define BEGIN_ITERATE_HISTORY(279,7050
#define END_ITERATE_HISTORY(292,7382
encode_history(301,7531
decode_history(321,7880
initializeInput(346,8388
saveHistory(408,9539
printHistory(489,11939
finishInput(535,12728

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_archivecleanup/pg_archivecleanup.c,413
const char *progname;progname22,409
bool		dryrun 25,459
char	   *additional_ext additional_ext26,527
char	   *archiveLocation;archiveLocation28,601
char	   *restartWALFileName;restartWALFileName29,660
char		exclusiveCleanupFileName[exclusiveCleanupFileName30,738
Initialize(55,1635
TrimExtension(73,1982
CleanupPriorWALFiles(89,2262
SetWALFileNameForCleanup(178,4937
usage(252,6736
main(278,7969

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_verifybackup/parse_manifest.c,1965
	JM_EXPECT_TOPLEVEL_START,24,574
	JM_EXPECT_TOPLEVEL_END,25,601
	JM_EXPECT_TOPLEVEL_FIELD,26,626
	JM_EXPECT_VERSION_VALUE,27,653
	JM_EXPECT_FILES_START,28,679
	JM_EXPECT_FILES_NEXT,29,703
	JM_EXPECT_THIS_FILE_FIELD,30,726
	JM_EXPECT_THIS_FILE_VALUE,31,754
	JM_EXPECT_WAL_RANGES_START,32,782
	JM_EXPECT_WAL_RANGES_NEXT,33,811
	JM_EXPECT_THIS_WAL_RANGE_FIELD,34,839
	JM_EXPECT_THIS_WAL_RANGE_VALUE,35,872
	JM_EXPECT_MANIFEST_CHECKSUM_VALUE,36,905
	JM_EXPECT_EOF37,941
} JsonManifestSemanticState;38,956
	JMFF_PATH,45,1070
	JMFF_ENCODED_PATH,46,1082
	JMFF_SIZE,47,1102
	JMFF_LAST_MODIFIED,48,1114
	JMFF_CHECKSUM_ALGORITHM,49,1135
	JMFF_CHECKSUM50,1161
} JsonManifestFileField;51,1176
	JMWRF_TIMELINE,58,1286
	JMWRF_START_LSN,59,1303
	JMWRF_END_LSN60,1321
} JsonManifestWALRangeField;61,1336
	JsonManifestParseContext *context;context68,1461
	JsonManifestSemanticState state;69,1497
	JsonManifestFileField file_field;72,1603
	char	   *pathname;pathname73,1638
	char	   *encoded_pathname;encoded_pathname74,1658
	char	   *size;size75,1686
	char	   *algorithm;algorithm76,1702
	pg_checksum_type checksum_algorithm;77,1723
	char	   *checksum;checksum78,1761
	JsonManifestWALRangeField wal_range_field;81,1858
	char	   *timeline;timeline82,1902
	char	   *start_lsn;start_lsn83,1922
	char	   *end_lsn;end_lsn84,1943
	bool		saw_version_field;87,1997
	char	   *manifest_checksum;manifest_checksum88,2023
} JsonManifestParseState;89,2052
json_parse_manifest(119,3333
json_manifest_object_start(166,4844
json_manifest_object_end(205,5933
json_manifest_array_start(237,6732
json_manifest_array_end(262,7272
json_manifest_object_field_start(283,7690
json_manifest_scalar(388,11026
json_manifest_finalize_file(460,12762
json_manifest_finalize_wal_range(562,15942
verify_manifest_checksum(619,17569
json_manifest_parse_failure(681,19771
hexdecode_char(692,20078
hexdecode_string(710,20423
parse_xlogrecptr(731,20790

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_verifybackup/pg_verifybackup.c,1963
#define ESTIMATED_BYTES_PER_MANIFEST_LINE	38,1269
#define READ_CHUNK_SIZE	43,1384
typedef struct manifest_file49,1513
	uint32		status;51,1544
	char	   *pathname;pathname52,1581
	size_t		size;53,1601
	pg_checksum_type checksum_type;54,1616
	int			checksum_length;55,1649
	uint8	   *checksum_payload;checksum_payload56,1673
	bool		matched;57,1702
	bool		bad;58,1718
} manifest_file;59,1730
#define SH_PREFIX	66,1913
#define SH_ELEMENT_TYPE	67,1947
#define SH_KEY_TYPE	68,1985
#define	SH_KEY	69,2013
#define SH_HASH_KEY(70,2039
#define SH_EQUAL(71,2093
#define	SH_SCOPE	72,2141
#define SH_RAW_ALLOCATOR	73,2173
#define SH_DECLARE74,2209
#define SH_DEFINE75,2228
typedef struct manifest_wal_range82,2376
	TimeLineID	tli;84,2412
	XLogRecPtr	start_lsn;85,2429
	XLogRecPtr	end_lsn;86,2452
	struct manifest_wal_range *next;next87,2473
	struct manifest_wal_range *prev;prev88,2507
} manifest_wal_range;89,2541
typedef struct parser_context94,2647
	manifest_files_hash *ht;ht96,2679
	manifest_wal_range *first_wal_range;first_wal_range97,2705
	manifest_wal_range *last_wal_range;last_wal_range98,2743
} parser_context;99,2780
typedef struct verifier_context104,2882
	manifest_files_hash *ht;ht106,2916
	char	   *backup_directory;backup_directory107,2942
	SimpleStringList ignore_list;108,2970
	bool		exit_on_error;109,3001
	bool		saw_any_error;110,3023
} verifier_context;111,3045
static void report_manifest_error(126,3627
parse_manifest_file(372,11065
report_manifest_error(446,13274
record_manifest_details_for_file(461,13553
record_manifest_details_for_wal_range(490,14378
verify_backup_directory(523,15365
verify_backup_file(588,16963
report_extra_backup_files(659,18793
verify_backup_checksums(678,19407
verify_file_checksum(708,20126
parse_required_wal(787,22328
report_backup_error(818,23294
report_fatal_error(835,23603
should_ignore_relpath(854,24035
hash_string_pointer(877,24461
usage(888,24633

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_verifybackup/parse_manifest.h,610
#define PARSE_MANIFEST_H15,448
typedef struct JsonManifestParseContext JsonManifestParseContext;22,598
typedef void (*json_manifest_perfile_callback)json_manifest_perfile_callback24,665
typedef void (*json_manifest_perwalrange_callback)json_manifest_perwalrange_callback28,885
typedef void (*json_manifest_error_callback)json_manifest_error_callback31,1050
struct JsonManifestParseContext35,1213
	void	   *private_data;private_data37,1247
	json_manifest_perfile_callback perfile_cb;38,1271
	json_manifest_perwalrange_callback perwalrange_cb;39,1315
	json_manifest_error_callback error_cb;40,1367

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_backup_tar.h,243
#define  LF_OLDNORMAL 29,1127
#define  LF_NORMAL	30,1195
#define  LF_LINK	31,1244
#define  LF_SYMLINK 32,1305
#define  LF_CHR	33,1352
#define  LF_BLK	34,1405
#define  LF_DIR	35,1454
#define  LF_FIFO	36,1494
#define  LF_CONTIG	37,1542

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_backup_custom.c,920
	CompressorState *cs;cs71,2397
	int			hasSeek;72,2419
	pgoff_t		lastFilePos;74,2512
} lclContext;75,2583
	int			dataState;79,2615
	pgoff_t		dataPos;80,2633
} lclTocEntry;81,2700
InitArchiveFmt_Custom(106,3474
_ArchiveEntry(203,5747
_WriteExtraToc(226,6245
_ReadExtraToc(242,6613
_PrintExtraToc(269,7198
_StartData(289,7719
_WriteData(314,8441
_EndData(331,8822
_StartBlobs(350,9311
_StartBlob(371,9820
_EndBlob(389,10165
_EndBlobs(404,10444
_PrintTocData(414,10620
_PrintData(567,14663
_LoadBlobs(573,14770
_skipBlobs(598,15245
_skipData(616,15552
_WriteByte(665,16414
_ReadByte(684,16735
_WriteBuf(702,17009
_ReadBuf(716,17283
_CloseArchive(738,17872
_ReopenArchive(782,19115
_PrepParallelRestore(827,20468
_Clone(879,21810
_DeClone(906,22593
_WorkerJobRestoreCustom(918,22851
_getFilePos(937,23396
_readBlockHeader(957,23815
_CustomWriteFunc(989,24563
_CustomReadFunc(1004,24899

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_dump.c,6457
	const char *descr;descr68,2244
	Oid			classoid;69,2294
	Oid			objoid;70,2345
	int			objsubid;71,2379
} CommentItem;72,2430
	const char *provider;provider76,2463
	const char *label;label77,2531
	Oid			classoid;78,2588
	Oid			objoid;79,2639
	int			objsubid;80,2673
} SecLabelItem;81,2724
typedef enum OidOptions83,2741
	zeroIsError 85,2767
	zeroAsStar 86,2785
	zeroAsNone 87,2802
} OidOptions;88,2818
static bool dosync 91,2852
static const char *username_subquery;username_subquery94,2996
static Oid	g_last_builtin_oid;100,3143
static int	strict_names 103,3282
static SimpleStringList schema_include_patterns 111,3493
static SimpleOidList schema_include_oids 112,3557
static SimpleStringList schema_exclude_patterns 113,3614
static SimpleOidList schema_exclude_oids 114,3678
static SimpleStringList table_include_patterns 116,3736
static SimpleOidList table_include_oids 117,3799
static SimpleStringList table_exclude_patterns 118,3855
static SimpleOidList table_exclude_oids 119,3918
static SimpleStringList tabledata_exclude_patterns 120,3974
static SimpleOidList tabledata_exclude_oids 121,4041
static SimpleStringList foreign_servers_include_patterns 122,4101
static SimpleOidList foreign_servers_include_oids 123,4174
static const CatalogId nilCatalogId 125,4241
static bool have_extra_float_digits 128,4343
static int	extra_float_digits;129,4388
#define DUMP_DEFAULT_ROWS_PER_INSERT 135,4525
#define fmtQualifiedDumpable(140,4647
main(296,12911
help(983,33207
setup_connection(1066,39038
setupDumpWorker(1238,44323
get_synchronized_snapshot(1253,44744
parseArchiveFormat(1267,45033
expand_schema_name_patterns(1305,46165
expand_foreign_server_name_patterns(1353,47376
expand_table_name_patterns(1399,48603
checkExtensionMembership(1470,50861
selectDumpableNamespace(1518,52305
selectDumpableTable(1587,54910
selectDumpableType(1626,56393
selectDumpableDefaultACL(1671,57754
selectDumpableCast(1693,58505
selectDumpableProcLang(1718,59310
selectDumpableAccessMethod(1751,60368
selectDumpableExtension(1778,61379
selectDumpablePublicationTable(1801,62183
selectDumpableObject(1817,62654
dumpTableData_copy(1839,63312
dumpTableData_insert(1999,68467
getRootTableInfo(2223,74282
dumpTableData(2247,74751
refreshMatViewData(2336,77388
getTableData(2371,78369
makeTableDataInfo(2390,78864
buildMatViewRefreshDependencies(2458,80933
getTableDataFKConstraints(2573,84464
guessConstraintInheritance(2626,86121
dumpDatabase(2689,87367
dumpDatabaseConfig(3124,102006
dumpEncoding(3195,103750
dumpStdStrings(3220,104377
dumpSearchPath(3244,104982
getBlobs(3307,106920
dumpBlob(3444,111153
dumpBlobs(3494,112673
getPolicies(3573,114356
dumpPolicy(3728,119255
getPublications(3848,122715
dumpPublication(3953,125964
getPublicationTables(4046,128082
dumpPublicationTable(4139,130469
is_superuser(4176,131431
getSubscriptions(4194,131727
dumpSubscription(4307,135003
append_depends_on_extension(4397,137486
binary_upgrade_set_type_oids_by_type_oid(4443,138662
binary_upgrade_set_type_oids_by_rel_oid(4512,140822
binary_upgrade_set_pg_class_oids(4539,141573
binary_upgrade_extension_member(4622,144605
getNamespaces(4669,146015
findNamespace(4797,150001
getExtensions(4815,150401
getTypes(4899,152755
getOperators(5149,161542
getCollations(5232,163819
getConversions(5312,165839
getAccessMethods(5385,167781
getOpclasses(5459,169695
getOpfamilies(5534,171713
getAggregates(5618,173893
getFuncs(5812,180432
getTables(6047,188589
getOwnedSeqs(6880,221817
getInherits(6943,223759
getIndexes(6992,224831
getExtendedStatistics(7347,237960
getConstraints(7425,240279
getDomainConstraints(7557,244169
getRules(7648,246799
getTriggers(7761,250135
getEventTriggers(7955,256388
getProcLangs(8046,258957
getCasts(8224,264743
get_language_name(8314,267355
getTransforms(8337,267912
getTableAttrs(8434,270736
shouldPrintColumn(8833,284875
getTSParsers(8851,285307
getTSDictionaries(8942,287904
getTSTemplates(9026,290274
getTSConfigurations(9102,292363
getForeignDataWrappers(9179,294432
getForeignServers(9345,299885
getDefaultACLs(9495,304700
dumpComment(9646,309784
dumpTableComment(9726,311832
findComments(9825,314533
collectComments(9909,316302
dumpDumpableObject(9962,317700
dumpNamespace(10128,322261
dumpExtension(10189,323982
dumpType(10317,328076
dumpEnumType(10348,328961
dumpRangeType(10476,332740
dumpUndefinedType(10607,337107
dumpBaseType(10672,339137
dumpDomain(10955,349521
dumpCompositeType(11129,354905
dumpCompositeTypeColComments(11339,361606
dumpShellType(11454,364356
dumpProcLang(11500,365766
format_function_arguments(11633,369986
format_function_arguments_old(11658,370706
format_function_signature(11728,372377
dumpFunc(11760,373012
dumpCast(12267,387432
dumpTransform(12375,390376
dumpOpr(12505,394120
convertRegProcReference(12724,400177
getFormattedOperatorName(12765,401313
convertTSFunction(12795,402103
dumpAccessMethod(12817,402506
dumpOpclass(12885,404195
dumpOpfamily(13257,416113
dumpCollation(13520,424439
dumpConversion(13671,428603
format_aggregate_signature(13767,431620
dumpAgg(13805,432425
dumpTSParser(14169,443935
dumpTSDictionary(14233,445931
dumpTSTemplate(14313,448350
dumpTSConfig(14371,450089
dumpForeignDataWrapper(14491,453701
dumpForeignServer(14563,455719
dumpUserMappings(14663,458572
dumpDefaultACL(14757,461210
dumpACL(14859,464749
dumpSecLabel(14958,468196
dumpTableSecLabel(15035,470148
findSecLabels(15118,472408
collectSecLabels(15205,474165
dumpTable(15259,475588
createViewAsClause(15399,479916
createDummyViewAsClause(15448,481372
dumpTableSchema(15488,482273
dumpAttrDef(16231,505466
getAttrName(16292,507273
dumpIndex(16321,507977
dumpIndexAttach(16458,511936
dumpStatisticsExt(16488,512774
dumpConstraint(16566,514982
dumpTableConstraintComment(16843,523483
findLastBuiltinOid_V71(16875,524379
dumpSequence(16893,524796
dumpSequenceData(17160,532935
dumpTrigger(17213,534468
dumpEventTrigger(17427,540214
dumpRule(17512,542438
getExtensionMembership(17682,547207
processExtensionTables(17787,550241
getDependencies(17944,554628
createBoundaryObjects(18104,559710
addBoundaryDependencies(18128,560271
BuildArchiveDependencies(18241,563934
findDumpableDependencies(18289,565209
getFormattedTypeName(18345,566695
fmtCopyColumnList(18381,567504
nonemptyReloptions(18415,568226
appendReloptionsArrayAH(18427,568541

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_backup.h,4618
#define PG_BACKUP_H24,592
typedef enum trivalue30,671
	TRI_DEFAULT,32,695
	TRI_NO,33,709
	TRI_YES34,718
} trivalue;35,727
typedef enum _archiveFormat37,740
	archUnknown 39,770
	archCustom 40,788
	archTar 41,805
	archNull 42,819
	archDirectory 43,834
} ArchiveFormat;44,853
typedef enum _archiveMode46,871
	archModeAppend,48,899
	archModeWrite,49,916
	archModeRead50,932
} ArchiveMode;51,946
typedef enum _teSection53,962
	SECTION_NONE 55,988
	SECTION_PRE_DATA,56,1052
	SECTION_DATA,57,1113
	SECTION_POST_DATA	58,1170
} teSection;59,1230
typedef struct _restoreOptions61,1244
	int			createDB;63,1277
	int			noOwner;64,1339
	int			noTablespace;65,1403
	int			disable_triggers;66,1470
	int			use_setsessauth;68,1555
	char	   *superuser;superuser70,1656
	char	   *use_role;use_role71,1713
	int			dropSchema;72,1763
	int			disable_dollar_quoting;73,1782
	int			dump_inserts;74,1813
	int			column_inserts;75,1876
	int			if_exists;76,1899
	int			no_comments;77,1917
	int			no_publications;78,1957
	int			no_security_labels;79,2012
	int			no_subscriptions;80,2073
	int			strict_names;81,2130
	const char *filename;filename83,2152
	int			dataOnly;84,2175
	int			schemaOnly;85,2192
	int			dumpSections;86,2211
	int			verbose;87,2232
	int			aclsSkip;88,2248
	const char *lockWaitTimeout;lockWaitTimeout89,2265
	int			include_everything;90,2295
	int			tocSummary;92,2323
	char	   *tocFile;tocFile93,2342
	int			format;94,2361
	char	   *formatName;formatName95,2376
	int			selTypes;97,2399
	int			selIndex;98,2416
	int			selFunction;99,2433
	int			selTrigger;100,2453
	int			selTable;101,2472
	SimpleStringList indexNames;102,2489
	SimpleStringList functionNames;103,2519
	SimpleStringList schemaNames;104,2552
	SimpleStringList schemaExcludeNames;105,2583
	SimpleStringList triggerNames;106,2621
	SimpleStringList tableNames;107,2653
	int			useDB;109,2684
	char	   *dbname;dbname110,2698
	char	   *pgport;pgport111,2749
	char	   *pghost;pghost112,2767
	char	   *username;username113,2785
	int			noDataForFailedTables;114,2805
	trivalue	promptPassword;115,2835
	int			exit_on_error;116,2861
	int			compression;117,2883
	int			suppressDumpWarnings;118,2903
	bool		single_txn;120,2996
	bool	   *idWanted;idWanted122,3016
	int			enable_row_security;123,3080
	int			sequence_data;124,3108
	int			binary_upgrade;125,3180
} RestoreOptions;126,3203
typedef struct _dumpOptions128,3222
	const char *dbname;dbname130,3252
	const char *pghost;pghost131,3306
	const char *pgport;pgport132,3327
	const char *username;username133,3348
	int			binary_upgrade;135,3372
	bool		schemaOnly;138,3436
	bool		dataOnly;139,3455
	int			dumpSections;140,3472
	bool		aclsSkip;141,3526
	const char *lockWaitTimeout;lockWaitTimeout142,3543
	int			dump_inserts;143,3573
	int			disable_dollar_quoting;146,3688
	int			column_inserts;147,3719
	int			if_exists;148,3742
	int			no_comments;149,3760
	int			no_security_labels;150,3780
	int			no_publications;151,3807
	int			no_subscriptions;152,3831
	int			no_synchronized_snapshots;153,3856
	int			no_unlogged_table_data;154,3890
	int			serializable_deferrable;155,3921
	int			disable_triggers;156,3953
	int			outputNoTablespaces;157,3978
	int			use_setsessauth;158,4006
	int			enable_row_security;159,4030
	int			load_via_partition_root;160,4058
	bool		include_everything;163,4164
	int			outputClean;165,4192
	int			outputCreateDB;166,4212
	bool		outputBlobs;167,4235
	bool		dontOutputBlobs;168,4255
	int			outputNoOwner;169,4279
	char	   *outputSuperuser;outputSuperuser170,4301
	int			sequence_data;172,4329
	int			do_nothing;173,4401
} DumpOptions;174,4420
typedef struct Archive180,4570
	DumpOptions *dopt;dopt182,4595
	RestoreOptions *ropt;ropt183,4643
	int			verbose;185,4696
	char	   *remoteVersionStr;remoteVersionStr186,4712
	int			remoteVersion;187,4770
	bool		isStandby;188,4819
	int			minRemoteVersion;190,4870
	int			maxRemoteVersion;191,4917
	int			numWorkers;193,4943
	char	   *sync_snapshot_id;sync_snapshot_id194,4998
	int			encoding;197,5112
	bool		std_strings;198,5167
	char	   *searchpath;searchpath201,5251
	char	   *use_role;use_role202,5314
	bool		exit_on_error;205,5387
	int			n_errors;206,5448
} Archive;209,5529
	Oid			tableoid;230,6321
	Oid			oid;231,6338
} CatalogId;232,6350
typedef int DumpId;234,6364
#define InvalidDumpId 236,6385
typedef int (*DataDumperPtr)DataDumperPtr242,6480
typedef void (*SetupWorkerPtrType)SetupWorkerPtrType244,6540
extern int	archprintf(295,8117
#define appendStringLiteralAH(297,8201

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_dump.h,14697
#define PG_DUMP_H15,422
#define oidcmp(20,466
	DO_NAMESPACE,40,1361
	DO_EXTENSION,41,1376
	DO_TYPE,42,1391
	DO_SHELL_TYPE,43,1401
	DO_FUNC,44,1417
	DO_AGG,45,1427
	DO_OPERATOR,46,1436
	DO_ACCESS_METHOD,47,1450
	DO_OPCLASS,48,1469
	DO_OPFAMILY,49,1482
	DO_COLLATION,50,1496
	DO_CONVERSION,51,1511
	DO_TABLE,52,1527
	DO_ATTRDEF,53,1538
	DO_INDEX,54,1551
	DO_INDEX_ATTACH,55,1562
	DO_STATSEXT,56,1580
	DO_RULE,57,1594
	DO_TRIGGER,58,1604
	DO_CONSTRAINT,59,1617
	DO_FK_CONSTRAINT,60,1633
	DO_PROCLANG,61,1688
	DO_CAST,62,1702
	DO_TABLE_DATA,63,1712
	DO_SEQUENCE_SET,64,1728
	DO_DUMMY_TYPE,65,1746
	DO_TSPARSER,66,1762
	DO_TSDICT,67,1776
	DO_TSTEMPLATE,68,1788
	DO_TSCONFIG,69,1804
	DO_FDW,70,1818
	DO_FOREIGN_SERVER,71,1827
	DO_DEFAULT_ACL,72,1847
	DO_TRANSFORM,73,1864
	DO_BLOB,74,1879
	DO_BLOB_DATA,75,1889
	DO_PRE_DATA_BOUNDARY,76,1904
	DO_POST_DATA_BOUNDARY,77,1927
	DO_EVENT_TRIGGER,78,1951
	DO_REFRESH_MATVIEW,79,1970
	DO_POLICY,80,1991
	DO_PUBLICATION,81,2003
	DO_PUBLICATION_REL,82,2020
	DO_SUBSCRIPTION83,2041
} DumpableObjectType;84,2058
typedef uint32 DumpComponents;87,2150
#define DUMP_COMPONENT_NONE	88,2223
#define DUMP_COMPONENT_DEFINITION	89,2257
#define DUMP_COMPONENT_DATA	90,2300
#define DUMP_COMPONENT_COMMENT	91,2339
#define DUMP_COMPONENT_SECLABEL	92,2380
#define DUMP_COMPONENT_ACL	93,2422
#define DUMP_COMPONENT_POLICY	94,2460
#define DUMP_COMPONENT_USERMAP	95,2500
#define DUMP_COMPONENT_ALL	96,2541
#define DUMP_COMPONENTS_REQUIRING_LOCK 120,3703
typedef struct _dumpableObject125,3827
	DumpableObjectType objType;127,3860
	CatalogId	catId;128,3889
	DumpId		dumpId;129,3946
	char	   *name;name130,3998
	struct _namespaceInfo *namespace;namespace131,4057
	DumpComponents dump;132,4128
	DumpComponents dump_contains;133,4187
	bool		ext_member;134,4260
	bool		depends_on_ext;135,4324
	DumpId	   *dependencies;dependencies136,4392
	int			nDeps;137,4463
	int			allocDeps;138,4514
} DumpableObject;139,4572
typedef struct _namespaceInfo141,4591
	DumpableObject dobj;143,4623
	char	   *rolname;rolname144,4645
	char	   *nspacl;nspacl145,4702
	char	   *rnspacl;rnspacl146,4720
	char	   *initnspacl;initnspacl147,4739
	char	   *initrnspacl;initrnspacl148,4761
} NamespaceInfo;149,4784
typedef struct _extensionInfo151,4802
	DumpableObject dobj;153,4834
	char	   *namespace;namespace154,4856
	bool		relocatable;155,4922
	char	   *extversion;extversion156,4942
	char	   *extconfig;extconfig157,4964
	char	   *extcondition;extcondition158,5024
} ExtensionInfo;159,5048
typedef struct _typeInfo161,5066
	DumpableObject dobj;163,5093
	char	   *rolname;rolname169,5241
	char	   *typacl;typacl170,5298
	char	   *rtypacl;rtypacl171,5316
	char	   *inittypacl;inittypacl172,5335
	char	   *initrtypacl;initrtypacl173,5357
	Oid			typelem;174,5380
	Oid			typrelid;175,5396
	char		typrelkind;176,5413
	char		typtype;177,5458
	bool		isArray;178,5495
	bool		isDefined;179,5552
	struct _shellTypeInfo *shellType;shellType181,5674
	int			nDomChecks;183,5806
	struct _constraintInfo *domChecks;domChecks184,5825
} TypeInfo;185,5861
typedef struct _shellTypeInfo187,5874
	DumpableObject dobj;189,5906
	TypeInfo   *baseType;baseType191,5929
} ShellTypeInfo;192,5993
typedef struct _funcInfo194,6011
	DumpableObject dobj;196,6038
	char	   *rolname;rolname197,6060
	Oid			lang;198,6117
	int			nargs;199,6130
	Oid		   *argtypes;argtypes200,6144
	Oid			prorettype;201,6164
	char	   *proacl;proacl202,6183
	char	   *rproacl;rproacl203,6201
	char	   *initproacl;initproacl204,6220
	char	   *initrproacl;initrproacl205,6242
} FuncInfo;206,6265
typedef struct _aggInfo209,6318
	FuncInfo	aggfn;211,6344
} AggInfo;213,6416
typedef struct _oprInfo215,6428
	DumpableObject dobj;217,6454
	char	   *rolname;rolname218,6476
	char		oprkind;219,6495
	Oid			oprcode;220,6511
} OprInfo;221,6527
typedef struct _accessMethodInfo223,6539
	DumpableObject dobj;225,6574
	char		amtype;226,6596
	char	   *amhandler;amhandler227,6611
} AccessMethodInfo;228,6632
typedef struct _opclassInfo230,6653
	DumpableObject dobj;232,6683
	char	   *rolname;rolname233,6705
} OpclassInfo;234,6724
typedef struct _opfamilyInfo236,6740
	DumpableObject dobj;238,6771
	char	   *rolname;rolname239,6793
} OpfamilyInfo;240,6812
typedef struct _collInfo242,6829
	DumpableObject dobj;244,6856
	char	   *rolname;rolname245,6878
} CollInfo;246,6897
typedef struct _convInfo248,6910
	DumpableObject dobj;250,6937
	char	   *rolname;rolname251,6959
} ConvInfo;252,6978
typedef struct _tableInfo254,6991
	DumpableObject dobj;259,7092
	char	   *rolname;rolname260,7114
	char	   *relacl;relacl261,7171
	char	   *rrelacl;rrelacl262,7189
	char	   *initrelacl;initrelacl263,7208
	char	   *initrrelacl;initrrelacl264,7230
	char		relkind;265,7253
	char		relpersistence;266,7269
	bool		relispopulated;267,7319
	char		relreplident;268,7370
	char	   *reltablespace;reltablespace269,7416
	char	   *reloptions;reloptions270,7467
	char	   *checkoption;checkoption271,7528
	char	   *toast_reloptions;toast_reloptions272,7583
	bool		hasindex;273,7650
	bool		hasrules;274,7700
	bool		hastriggers;275,7748
	bool		rowsec;276,7801
	bool		forcerowsec;277,7849
	bool		hasoids;278,7899
	uint32		frozenxid;279,7941
	uint32		minmxid;280,7989
	Oid			toast_oid;281,8033
	uint32		toast_frozenxid;282,8090
	uint32		toast_minmxid;283,8157
	int			ncheck;284,8212
	char	   *reloftype;reloftype285,8258
	Oid			foreign_server;286,8318
	Oid			owning_tab;288,8453
	int			owning_col;289,8508
	bool		is_identity_sequence;290,8567
	int			relpages;291,8596
	bool		interesting;293,8659
	bool		dummy_view;294,8719
	bool		postponed_def;295,8786
	bool		ispartition;296,8855
	int			numatts;302,9061
	char	  **attnames;attnames303,9105
	char	  **atttypnames;atttypnames304,9152
	int		   *atttypmod;atttypmod305,9202
	int		   *attstattarget;attstattarget306,9259
	char	   *attstorage;attstorage307,9319
	char	   *typstorage;typstorage308,9373
	bool	   *attisdropped;attisdropped309,9422
	char	   *attidentity;attidentity310,9491
	char	   *attgenerated;attgenerated311,9514
	int		   *attlen;attlen312,9538
	char	   *attalign;attalign313,9605
	bool	   *attislocal;attislocal314,9672
	char	  **attoptions;attoptions315,9735
	Oid		   *attcollation;attcollation316,9786
	char	  **attfdwoptions;attfdwoptions317,9850
	char	  **attmissingval;attmissingval318,9907
	bool	   *notnull;notnull319,9966
	bool	   *inhNotNull;inhNotNull320,10027
	struct _attrDefInfo **attrdefs;attrdefs321,10086
	struct _constraintInfo *checkexprs;checkexprs322,10145
	char	   *partkeydef;partkeydef323,10206
	char	   *partbound;partbound324,10260
	bool		needs_override;325,10315
	char	   *amname;amname326,10377
	int			numParents;331,10481
	struct _tableInfo **parents;parents332,10543
	int			numIndexes;333,10611
	struct _indxInfo *indexes;indexes334,10655
	struct _tableDataInfo *dataObj;dataObj335,10697
	int			numTriggers;336,10771
	struct _triggerInfo *triggers;triggers337,10826
} TableInfo;338,10893
typedef struct _attrDefInfo340,10907
	DumpableObject dobj;342,10937
	TableInfo  *adtable;adtable343,10999
	int			adnum;344,11055
	char	   *adef_expr;adef_expr345,11069
	bool		separate;346,11127
} AttrDefInfo;347,11186
typedef struct _tableDataInfo349,11202
	DumpableObject dobj;351,11234
	TableInfo  *tdtable;tdtable352,11256
	char	   *filtercond;filtercond353,11307
} TableDataInfo;354,11373
typedef struct _indxInfo356,11391
	DumpableObject dobj;358,11418
	TableInfo  *indextable;indextable359,11440
	char	   *indexdef;indexdef360,11503
	char	   *tablespace;tablespace361,11523
	char	   *indreloptions;indreloptions362,11588
	char	   *indstatcols;indstatcols363,11651
	char	   *indstatvals;indstatvals364,11711
	int			indnkeyattrs;365,11769
	int			indnattrs;366,11827
	Oid		   *indkeys;indkeys367,11885
	bool		indisclustered;369,12004
	bool		indisreplident;370,12027
	Oid			parentidx;371,12050
	SimplePtrList partattaches;372,12108
	DumpId		indexconstraint;375,12249
} IndxInfo;376,12275
typedef struct _indexAttachInfo378,12288
	DumpableObject dobj;380,12322
	IndxInfo   *parentIdx;parentIdx381,12344
	IndxInfo   *partitionIdx;partitionIdx382,12410
} IndexAttachInfo;383,12470
typedef struct _statsExtInfo385,12490
	DumpableObject dobj;387,12521
	char	   *rolname;rolname388,12543
	int			stattarget;389,12600
} StatsExtInfo;390,12644
typedef struct _ruleInfo392,12661
	DumpableObject dobj;394,12688
	TableInfo  *ruletable;ruletable395,12710
	char		ev_type;396,12771
	bool		is_instead;397,12787
	char		ev_enabled;398,12806
	bool		separate;399,12825
} RuleInfo;401,12939
typedef struct _triggerInfo403,12952
	DumpableObject dobj;405,12982
	TableInfo  *tgtable;tgtable406,13004
	char	   *tgfname;tgfname407,13066
	int			tgtype;408,13085
	int			tgnargs;409,13100
	char	   *tgargs;tgargs410,13116
	bool		tgisconstraint;411,13134
	char	   *tgconstrname;tgconstrname412,13157
	Oid			tgconstrrelid;413,13181
	char	   *tgconstrrelname;tgconstrrelname414,13203
	char		tgenabled;415,13230
	bool		tgdeferrable;416,13248
	bool		tginitdeferred;417,13269
	char	   *tgdef;tgdef418,13292
} TriggerInfo;419,13309
typedef struct _evttriggerInfo421,13325
	DumpableObject dobj;423,13358
	char	   *evtname;evtname424,13380
	char	   *evtevent;evtevent425,13399
	char	   *evtowner;evtowner426,13419
	char	   *evttags;evttags427,13439
	char	   *evtfname;evtfname428,13458
	char		evtenabled;429,13478
} EventTriggerInfo;430,13497
typedef struct _constraintInfo440,13844
	DumpableObject dobj;442,13877
	TableInfo  *contable;contable443,13899
	TypeInfo   *condomain;condomain444,13955
	char		contype;445,14011
	char	   *condef;condef446,14027
	Oid			confrelid;447,14089
	DumpId		conindex;448,14147
	bool		condeferrable;449,14208
	bool		condeferred;450,14269
	bool		conislocal;451,14336
	bool		separate;452,14402
} ConstraintInfo;453,14461
typedef struct _procLangInfo455,14480
	DumpableObject dobj;457,14511
	bool		lanpltrusted;458,14533
	Oid			lanplcallfoid;459,14554
	Oid			laninline;460,14576
	Oid			lanvalidator;461,14594
	char	   *lanacl;lanacl462,14615
	char	   *rlanacl;rlanacl463,14633
	char	   *initlanacl;initlanacl464,14652
	char	   *initrlanacl;initrlanacl465,14674
	char	   *lanowner;lanowner466,14697
} ProcLangInfo;467,14755
typedef struct _castInfo469,14772
	DumpableObject dobj;471,14799
	Oid			castsource;472,14821
	Oid			casttarget;473,14840
	Oid			castfunc;474,14859
	char		castcontext;475,14876
	char		castmethod;476,14896
} CastInfo;477,14915
typedef struct _transformInfo479,14928
	DumpableObject dobj;481,14960
	Oid			trftype;482,14982
	Oid			trflang;483,14998
	Oid			trffromsql;484,15014
	Oid			trftosql;485,15033
} TransformInfo;486,15050
typedef struct _inhInfo489,15127
	Oid			inhrelid;491,15153
	Oid			inhparent;492,15198
} InhInfo;493,15241
typedef struct _prsInfo495,15253
	DumpableObject dobj;497,15279
	Oid			prsstart;498,15301
	Oid			prstoken;499,15318
	Oid			prsend;500,15335
	Oid			prsheadline;501,15350
	Oid			prslextype;502,15370
} TSParserInfo;503,15389
typedef struct _dictInfo505,15406
	DumpableObject dobj;507,15433
	char	   *rolname;rolname508,15455
	Oid			dicttemplate;509,15474
	char	   *dictinitoption;dictinitoption510,15495
} TSDictInfo;511,15521
typedef struct _tmplInfo513,15536
	DumpableObject dobj;515,15563
	Oid			tmplinit;516,15585
	Oid			tmpllexize;517,15602
} TSTemplateInfo;518,15621
typedef struct _cfgInfo520,15640
	DumpableObject dobj;522,15666
	char	   *rolname;rolname523,15688
	Oid			cfgparser;524,15707
} TSConfigInfo;525,15725
typedef struct _fdwInfo527,15742
	DumpableObject dobj;529,15768
	char	   *rolname;rolname530,15790
	char	   *fdwhandler;fdwhandler531,15809
	char	   *fdwvalidator;fdwvalidator532,15831
	char	   *fdwoptions;fdwoptions533,15855
	char	   *fdwacl;fdwacl534,15877
	char	   *rfdwacl;rfdwacl535,15895
	char	   *initfdwacl;initfdwacl536,15914
	char	   *initrfdwacl;initrfdwacl537,15936
} FdwInfo;538,15959
typedef struct _foreignServerInfo540,15971
	DumpableObject dobj;542,16007
	char	   *rolname;rolname543,16029
	Oid			srvfdw;544,16048
	char	   *srvtype;srvtype545,16063
	char	   *srvversion;srvversion546,16082
	char	   *srvacl;srvacl547,16104
	char	   *rsrvacl;rsrvacl548,16122
	char	   *initsrvacl;initsrvacl549,16141
	char	   *initrsrvacl;initrsrvacl550,16163
	char	   *srvoptions;srvoptions551,16186
} ForeignServerInfo;552,16208
typedef struct _defaultACLInfo554,16230
	DumpableObject dobj;556,16263
	char	   *defaclrole;defaclrole557,16285
	char		defaclobjtype;558,16307
	char	   *defaclacl;defaclacl559,16329
	char	   *rdefaclacl;rdefaclacl560,16350
	char	   *initdefaclacl;initdefaclacl561,16372
	char	   *initrdefaclacl;initrdefaclacl562,16397
} DefaultACLInfo;563,16423
typedef struct _blobInfo565,16442
	DumpableObject dobj;567,16469
	char	   *rolname;rolname568,16491
	char	   *blobacl;blobacl569,16510
	char	   *rblobacl;rblobacl570,16529
	char	   *initblobacl;initblobacl571,16549
	char	   *initrblobacl;initrblobacl572,16572
} BlobInfo;573,16596
typedef struct _policyInfo581,16890
	DumpableObject dobj;583,16919
	TableInfo  *poltable;poltable584,16941
	char	   *polname;polname585,16964
	char		polcmd;586,17027
	bool		polpermissive;587,17042
	char	   *polroles;polroles588,17064
	char	   *polqual;polqual589,17084
	char	   *polwithcheck;polwithcheck590,17103
} PolicyInfo;591,17127
typedef struct _PublicationInfo596,17214
	DumpableObject dobj;598,17248
	char	   *rolname;rolname599,17270
	bool		puballtables;600,17289
	bool		pubinsert;601,17310
	bool		pubupdate;602,17328
	bool		pubdelete;603,17346
	bool		pubtruncate;604,17364
	bool		pubviaroot;605,17384
} PublicationInfo;606,17403
typedef struct _PublicationRelInfo612,17514
	DumpableObject dobj;614,17551
	TableInfo  *pubtable;pubtable615,17573
	char	   *pubname;pubname616,17596
} PublicationRelInfo;617,17615
typedef struct _SubscriptionInfo622,17711
	DumpableObject dobj;624,17746
	char	   *rolname;rolname625,17768
	char	   *subconninfo;subconninfo626,17787
	char	   *subslotname;subslotname627,17810
	char	   *subbinary;subbinary628,17833
	char	   *subsynccommit;subsynccommit629,17854
	char	   *subpublications;subpublications630,17879
} SubscriptionInfo;631,17906
typedef struct _extensionMemberId637,18049
	CatalogId	catId;639,18085
	ExtensionInfo *ext;ext640,18146
} ExtensionMemberId;641,18192

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_backup_tar.c,1484
#define K_STD_BUF_SIZE 63,2269
	gzFile		zFH;69,2333
	FILE	   *zFH;zFH71,2353
	FILE	   *nFH;nFH73,2375
	FILE	   *tarFH;tarFH74,2390
	FILE	   *tmpFH;tmpFH75,2407
	char	   *targetFile;targetFile76,2424
	char		mode;77,2446
	pgoff_t		pos;78,2459
	pgoff_t		fileLen;79,2474
	ArchiveHandle *AH;AH80,2493
} TAR_MEMBER;81,2513
	int			hasSeek;85,2545
	pgoff_t		filePos;86,2561
	TAR_MEMBER *blobToc;blobToc87,2580
	FILE	   *tarFH;tarFH88,2602
	pgoff_t		tarFHpos;89,2619
	pgoff_t		tarNextMember;90,2639
	TAR_MEMBER *FH;FH91,2664
	int			isSpecialScript;92,2681
	TAR_MEMBER *scriptTH;scriptTH93,2705
} lclContext;94,2728
	TAR_MEMBER *TH;TH98,2760
	char	   *filename;filename99,2777
} lclTocEntry;100,2797
static int	tarPrintf(110,3083
_ArchiveEntry(249,6698
_WriteExtraToc(276,7200
_ReadExtraToc(287,7395
_PrintExtraToc(307,7760
_StartData(316,7976
tarOpen(324,8145
tarClose(441,10505
tarGets(467,11046
_tarReadRaw(511,11688
tarRead(580,13103
tarWrite(598,13358
_WriteData(612,13580
_EndData(621,13786
_PrintFileData(634,14002
_PrintTocData(661,14406
_LoadBlobs(715,15785
_WriteByte(771,16905
_ReadByte(784,17147
_WriteBuf(799,17480
_ReadBuf(810,17690
_CloseArchive(822,17998
_scriptOut(911,19907
_StartBlobs(933,20409
_StartBlob(950,20768
_EndBlob(979,21323
_EndBlobs(993,21559
tarPrintf(1011,21830
isValidTarHeader(1045,22451
_tarAddFile(1071,23029
_tarPositionTo(1128,24334
_tarGetHeader(1212,26457
_tarWriteHeader(1297,28239

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_dump_sort.c,832
static const int dbObjectTypePriority[dbObjectTypePriority42,1602
static DumpId preDataBoundId;93,3113
static DumpId postDataBoundId;94,3143
sortDumpableObjectsByTypeName(124,4053
DOTypeNameCompare(132,4236
sortDumpableObjects(257,7649
TopoSort(309,9590
addHeapElement(452,14233
removeHeapElement(483,14901
findDependencyLoops(528,16146
findLoop(624,19466
repairTypeFuncLoop(709,21468
repairViewRuleLoop(740,22475
repairViewRuleMultiLoop(760,23200
repairMatViewBoundaryMultiLoop(794,24697
repairTableConstraintLoop(816,25472
repairTableConstraintMultiLoop(833,26108
repairTableAttrDefLoop(850,26725
repairTableAttrDefMultiLoop(858,26926
repairDomainConstraintLoop(873,27395
repairDomainConstraintMultiLoop(881,27613
repairIndexLoop(895,28157
repairDependencyLoop(909,28528
describeDumpableObject(1209,36421

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_restore.c,31
main(56,1362
usage(459,11338

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_backup_utils.h,273
#define PG_BACKUP_UTILS_H16,455
	DUMP_PRE_DATA 22,570
	DUMP_DATA 23,593
	DUMP_POST_DATA 24,612
	DUMP_UNSECTIONED 25,636
} DumpSections;26,661
typedef void (*on_exit_nicely_callback)on_exit_nicely_callback28,678
extern void exit_nicely(34,911
#define fatal(36,971

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/dumputils.c,374
buildACLCommands(58,2189
buildDefaultACLCommands(404,13484
parseAclItem(472,15728
#define CONVERT_PRIV(513,16504
#undef CONVERT_PRIV601,18692
copyAclUserName(629,19292
AddAcl(668,20173
buildShSecLabelQuery(688,20790
emitShSecLabels(706,21383
buildACLQueries(742,22544
variable_is_guc_list_quote(866,27774
SplitGUCList(899,28983
makeAlterConfigCommand(999,31573

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/dumputils.h,101
#define DUMPUTILS_H16,480
#define PGDUMP_STRFTIME_FMT 33,1074
#define PGDUMP_STRFTIME_FMT 35,1132

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/compress_io.h,343
#define __COMPRESS_IO__16,449
#define ZLIB_OUT_SIZE	21,560
#define ZLIB_IN_SIZE	22,587
	COMPR_ALG_NONE,26,629
	COMPR_ALG_LIBZ27,646
} CompressionAlgorithm;28,662
typedef void (*WriteFunc)WriteFunc31,749
typedef size_t (*ReadFunc)ReadFunc44,1306
typedef struct CompressorState CompressorState;47,1432
typedef struct cfp cfp;57,1835

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_backup_utils.c,304
const char *progname progname20,541
#define MAX_ON_EXIT_NICELY	22,571
	on_exit_nicely_callback function;26,621
	void	   *arg;arg27,656
}			on_exit_nicely_list[on_exit_nicely_list28,671
static int	on_exit_nicely_index;30,717
set_dump_section(40,1005
on_exit_nicely(64,1629
exit_nicely(94,2842

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/compress_io.c,908
struct CompressorState65,2683
	CompressionAlgorithm comprAlg;67,2708
	WriteFunc	writeF;68,2740
	z_streamp	zp;71,2777
	char	   *zlibOut;zlibOut72,2792
	size_t		zlibOutSize;73,2811
ParseCompressionOption(102,3887
AllocateCompressor(124,4418
ReadDataFromArchive(157,5071
WriteDataToArchive(179,5509
EndCompressor(201,5947
InitCompressorZlib(218,6247
EndCompressorZlib(245,6994
DeflateCompressorZlib(263,7348
WriteDataToArchiveZlib(304,8343
ReadDataFromArchiveZlib(313,8581
ReadDataFromArchiveNone(385,10088
WriteDataToArchiveNone(403,10359
struct cfp419,10699
	FILE	   *uncompressedfp;uncompressedfp421,10712
	gzFile		compressedfp;423,10755
free_keep_errno(433,10958
cfopen_read(452,11420
cfopen_write(489,12242
cfopen(518,12844
cfread(568,13774
cfwrite(599,14355
cfgetc(610,14559
cfgets(638,14997
cfclose(649,15186
cfeof(676,15519
get_cfp_error(687,15674
hasSuffix(704,15927

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_backup_archiver.h,8832
#define __PG_BACKUP_ARCHIVE__25,699
#define LOBBUFSIZE 33,820
#define GZCLOSE(41,1023
#define GZWRITE(42,1055
#define GZREAD(43,1110
#define GZEOF(44,1163
#define GZCLOSE(46,1197
#define GZWRITE(47,1228
#define GZREAD(48,1285
#define GZEOF(49,1332
#define Z_DEFAULT_COMPRESSION 51,1414
typedef struct _z_stream53,1450
	void	   *next_in;next_in55,1477
	void	   *next_out;next_out56,1496
	size_t		avail_in;57,1516
	size_t		avail_out;58,1535
} z_stream;59,1555
typedef z_stream *z_streamp;z_streamp60,1567
#define BLK_DATA 64,1627
#define BLK_BLOBS 65,1646
#define MAKE_ARCHIVE_VERSION(68,1741
#define ARCHIVE_MAJOR(70,1832
#define ARCHIVE_MINOR(71,1889
#define ARCHIVE_REV(72,1946
#define K_VERS_1_0	75,2051
#define K_VERS_1_2	76,2100
#define K_VERS_1_3	77,2169
#define K_VERS_1_4	78,2230
#define K_VERS_1_5	79,2307
#define K_VERS_1_6	80,2382
#define K_VERS_1_7	81,2458
#define K_VERS_1_8	83,2556
#define K_VERS_1_9	86,2696
#define K_VERS_1_10 88,2798
#define K_VERS_1_11 89,2870
#define K_VERS_1_12 91,2969
#define K_VERS_1_13 93,3068
#define K_VERS_1_14 95,3169
#define K_VERS_MAJOR 98,3303
#define K_VERS_MINOR 99,3326
#define K_VERS_REV 100,3350
#define K_VERS_SELF 101,3371
#define K_VERS_MAX	104,3485
#define K_OFFSET_POS_NOT_SET 108,3623
#define K_OFFSET_POS_SET 109,3654
#define K_OFFSET_NO_DATA 110,3681
#define WORKER_OK	116,3857
#define WORKER_CREATE_DONE	117,3883
#define WORKER_INHIBIT_DATA	118,3917
#define WORKER_IGNORED_ERRORS	119,3952
typedef struct _archiveHandle ArchiveHandle;121,3989
typedef struct _tocEntry TocEntry;122,4034
#define READ_ERROR_EXIT(125,4092
#define WRITE_ERROR_EXIT 133,4280
typedef enum T_Action138,4378
	ACT_DUMP,140,4402
	ACT_RESTORE141,4413
} T_Action;142,4426
typedef void (*ClosePtrType)ClosePtrType144,4439
typedef void (*ReopenPtrType)ReopenPtrType145,4489
typedef void (*ArchiveEntryPtrType)ArchiveEntryPtrType146,4540
typedef void (*StartDataPtrType)StartDataPtrType148,4612
typedef void (*WriteDataPtrType)WriteDataPtrType149,4680
typedef void (*EndDataPtrType)EndDataPtrType150,4765
typedef void (*StartBlobsPtrType)StartBlobsPtrType152,4832
typedef void (*StartBlobPtrType)StartBlobPtrType153,4901
typedef void (*EndBlobPtrType)EndBlobPtrType154,4978
typedef void (*EndBlobsPtrType)EndBlobsPtrType155,5053
typedef int (*WriteBytePtrType)WriteBytePtrType157,5121
typedef int (*ReadBytePtrType)ReadBytePtrType158,5187
typedef void (*WriteBufPtrType)WriteBufPtrType159,5239
typedef void (*ReadBufPtrType)ReadBufPtrType160,5319
typedef void (*WriteExtraTocPtrType)WriteExtraTocPtrType161,5394
typedef void (*ReadExtraTocPtrType)ReadExtraTocPtrType162,5466
typedef void (*PrintExtraTocPtrType)PrintExtraTocPtrType163,5537
typedef void (*PrintTocDataPtrType)PrintTocDataPtrType164,5609
typedef void (*PrepParallelRestorePtrType)PrepParallelRestorePtrType166,5681
typedef void (*ClonePtrType)ClonePtrType167,5745
typedef void (*DeClonePtrType)DeClonePtrType168,5795
typedef int (*WorkerJobDumpPtrType)WorkerJobDumpPtrType170,5848
typedef int (*WorkerJobRestorePtrType)WorkerJobRestorePtrType171,5919
typedef size_t (*CustomOutPtrType)CustomOutPtrType173,5994
	SQL_SCAN 177,6095
	SQL_IN_SINGLE_QUOTE,178,6126
	SQL_IN_DOUBLE_QUOTE	179,6169
} sqlparseState;180,6215
	sqlparseState state;184,6250
	bool		backSlash;185,6289
	PQExpBuffer curCmd;186,6345
} sqlparseInfo;187,6412
	STAGE_NONE 191,6444
	STAGE_INITIALIZING,192,6461
	STAGE_PROCESSING,193,6482
	STAGE_FINALIZING194,6501
} ArchiverStage;195,6519
	OUTPUT_SQLCMDS 199,6552
	OUTPUT_COPYDATA,200,6611
	OUTPUT_OTHERDATA	201,6655
} ArchiverOutput;202,6713
	RESTORE_PASS_MAIN 225,7830
	RESTORE_PASS_ACL,226,7893
	RESTORE_PASS_POST_ACL	227,7935
#define RESTORE_PASS_LAST 229,8006
} RestorePass;230,8054
	REQ_SCHEMA 234,8085
	REQ_DATA 235,8125
	REQ_SPECIAL 236,8161
} teReqs;237,8213
struct _archiveHandle239,8224
	Archive		public;241,8248
	int			version;242,8297
	char	   *archiveRemoteVersion;archiveRemoteVersion244,8337
	char	   *archiveDumpVersion;archiveDumpVersion246,8442
	size_t		intSize;249,8542
	size_t		offSize;250,8601
	ArchiveFormat format;252,8687
	sqlparseInfo sqlparse;254,8733
	time_t		createDate;256,8795
	int			readHeader;262,8960
	char	   *lookahead;lookahead263,9028
	size_t		lookaheadSize;265,9118
	size_t		lookaheadLen;266,9173
	pgoff_t		lookaheadPos;267,9230
	ArchiveEntryPtrType ArchiveEntryPtr;269,9303
	StartDataPtrType StartDataPtr;270,9379
	WriteDataPtrType WriteDataPtr;272,9474
	EndDataPtrType EndDataPtr;274,9570
	WriteBytePtrType WriteBytePtr;275,9644
	ReadBytePtrType ReadBytePtr;276,9705
	WriteBufPtrType WriteBufPtr;277,9769
	ReadBufPtrType ReadBufPtr;278,9845
	ClosePtrType ClosePtr;279,9919
	ReopenPtrType ReopenPtr;280,9968
	WriteExtraTocPtrType WriteExtraTocPtr;281,10019
	ReadExtraTocPtrType ReadExtraTocPtr;284,10163
	PrintExtraTocPtrType PrintExtraTocPtr;286,10268
	PrintTocDataPtrType PrintTocDataPtr;287,10340
	StartBlobsPtrType StartBlobsPtr;289,10379
	EndBlobsPtrType EndBlobsPtr;290,10413
	StartBlobPtrType StartBlobPtr;291,10443
	EndBlobPtrType EndBlobPtr;292,10475
	SetupWorkerPtrType SetupWorkerPtr;294,10504
	WorkerJobDumpPtrType WorkerJobDumpPtr;295,10540
	WorkerJobRestorePtrType WorkerJobRestorePtr;296,10580
	PrepParallelRestorePtrType PrepParallelRestorePtr;298,10627
	ClonePtrType ClonePtr;299,10679
	DeClonePtrType DeClonePtr;300,10739
	CustomOutPtrType CustomOutPtr;302,10797
	char	   *archdbname;archdbname305,10908
	trivalue	promptPassword;306,10965
	char	   *savedPassword;savedPassword307,10991
	char	   *use_role;use_role308,11060
	PGconn	   *connection;connection309,11080
	PGcancel   *volatile connCancel;311,11171
	int			connectToDB;313,11206
	ArchiverOutput outputKind;315,11296
	bool		pgCopyIn;316,11368
	int			loFd;318,11428
	int			writingBlob;319,11457
	int			blobCount;320,11488
	char	   *fSpec;fSpec322,11534
	FILE	   *FH;FH323,11577
	void	   *OF;OF324,11628
	int			gzOut;325,11642
	struct _tocEntry *toc;toc327,11677
	int			tocCount;328,11747
	DumpId		maxDumpId;329,11793
	struct _tocEntry **tocsByDumpId;tocsByDumpId332,11912
	DumpId	   *tableDataId;tableDataId333,11975
	struct _tocEntry *currToc;currToc335,12047
	int			compression;336,12104
	bool		dosync;340,12302
	ArchiveMode mode;341,12362
	void	   *formatData;formatData342,12408
	char	   *currUser;currUser345,12544
	char	   *currSchema;currSchema346,12608
	char	   *currTablespace;currTablespace347,12661
	char	   *currTableAm;currTableAm348,12721
	void	   *lo_buf;lo_buf350,12788
	size_t		lo_buf_used;351,12806
	size_t		lo_buf_size;352,12828
	int			noTocComments;354,12851
	ArchiverStage stage;355,12873
	ArchiverStage lastErrorStage;356,12895
	RestorePass restorePass;357,12926
	struct _tocEntry *currentTE;currentTE358,12992
	struct _tocEntry *lastErrorTE;lastErrorTE359,13022
struct _tocEntry362,13058
	struct _tocEntry *prev;prev364,13077
	struct _tocEntry *next;next365,13102
	CatalogId	catalogId;366,13127
	DumpId		dumpId;367,13149
	teSection	section;368,13166
	bool		hadDumper;369,13186
	char	   *tag;tag371,13277
	char	   *namespace;namespace372,13310
	char	   *tablespace;tablespace373,13378
	char	   *tableam;tableam375,13487
	char	   *owner;owner376,13554
	char	   *desc;desc377,13571
	char	   *defn;defn378,13587
	char	   *dropStmt;dropStmt379,13603
	char	   *copyStmt;copyStmt380,13623
	DumpId	   *dependencies;dependencies381,13643
	int			nDeps;382,13714
	DataDumperPtr dataDumper;384,13760
	void	   *dataDumperArg;dataDumperArg385,13825
	void	   *formatData;formatData386,13878
	pgoff_t		dataLength;389,13992
	teReqs		reqs;390,14060
	bool		created;391,14123
	struct _tocEntry *pending_prev;pending_prev394,14244
	struct _tocEntry *pending_next;pending_next395,14318
	int			depCount;396,14382
	DumpId	   *revDeps;revDeps397,14446
	int			nRevDeps;398,14515
	DumpId	   *lockDeps;lockDeps399,14567
	int			nLockDeps;400,14638
extern void warn_or_exit_horribly(406,14807
typedef struct _archiveOpts409,14940
	const char *tag;tag411,14970
	const char *namespace;namespace412,14988
	const char *tablespace;tablespace413,15012
	const char *tableam;tableam414,15037
	const char *owner;owner415,15059
	const char *description;description416,15079
	teSection	section;417,15105
	const char *createStmt;createStmt418,15125
	const char *dropStmt;dropStmt419,15150
	const char *copyStmt;copyStmt420,15173
	const DumpId *deps;deps421,15196
	int			nDeps;422,15217
	DataDumperPtr dumpFn;423,15231
	void	   *dumpArg;dumpArg424,15254
} ArchiveOpts;425,15273
#define ARCHIVE_OPTS(426,15288
#define appendStringLiteralAHX(444,16058
#define appendByteaLiteralAHX(447,16184
int			ahprintf(478,17350

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_dumpall.c,1739
#define PGDUMP_VERSIONSTR 30,786
static char pg_dump_bin[pg_dump_bin58,2048
static const char *progname;progname59,2084
static PQExpBuffer pgdumpopts;60,2113
static char *connstr connstr61,2144
static bool output_clean 62,2171
static bool skip_acls 63,2205
static bool verbose 64,2236
static bool dosync 65,2265
static int	binary_upgrade 67,2293
static int	column_inserts 68,2324
static int	disable_dollar_quoting 69,2355
static int	disable_triggers 70,2394
static int	if_exists 71,2427
static int	inserts 72,2453
static int	no_tablespaces 73,2477
static int	use_setsessauth 74,2508
static int	no_comments 75,2540
static int	no_publications 76,2568
static int	no_security_labels 77,2600
static int	no_subscriptions 78,2635
static int	no_unlogged_table_data 79,2668
static int	no_role_passwords 80,2707
static int	server_version;81,2741
static int	load_via_partition_root 82,2768
static int	on_conflict_do_nothing 83,2808
static char role_catalog[role_catalog85,2848
#define PG_AUTHID 86,2878
#define PG_ROLES 87,2908
static FILE *OPF;OPF89,2939
static char *filename filename90,2957
static SimpleStringList database_exclude_patterns 92,2988
static SimpleStringList database_exclude_names 93,3054
#define exit_nicely(95,3118
main(98,3160
help(614,17312
dropRoles(682,21718
dumpRoles(737,22802
dumpRoleMembership(995,31275
dumpGroups(1055,32939
dropTablespaces(1120,34250
dumpTablespaces(1155,34895
dropDBs(1311,40394
dumpUserConfig(1358,41447
expand_dbname_patterns(1415,42915
dumpDatabases(1457,43915
runPgDump(1557,46507
buildShSecLabels(1609,47719
connectDatabase(1635,48526
constructConnStr(1848,53491
executeQuery(1879,54249
executeCommand(1902,54668
dumpTimestamp(1926,55055

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_backup_archiver.c,3216
#define TEXT_DUMP_HEADER 41,946
#define TEXT_DUMPALL_HEADER 42,1013
typedef struct _outputContext45,1154
	void	   *OF;OF47,1186
	int			gzOut;48,1200
} OutputContext;49,1214
typedef struct _parallelReadyList61,1719
	TocEntry  **tes;tes63,1755
	int			first_te;64,1805
	int			last_te;65,1865
	bool		sorted;66,1923
} ParallelReadyList;67,1982
NewDumpOptions(151,6160
InitDumpOptions(163,6363
dumpOptionsFromRestoreOptions(176,6705
setupRestoreWorker(223,8345
CreateArchive(234,8499
OpenArchive(248,8844
CloseArchive(257,9040
SetArchiveOptions(276,9348
ProcessArchiveRestoreOptions(289,9668
RestoreArchive(344,11134
restore_toc_entry(752,22560
NewRestoreOptions(968,28291
_disableTriggersIfNecessary(983,28596
_enableTriggersIfNecessary(1009,29294
WriteData(1040,30093
ArchiveEntry(1061,30706
PrintTOCSummary(1119,32334
StartBlob(1223,35058
EndBlob(1237,35335
StartRestoreBlobs(1255,35607
EndRestoreBlobs(1274,35907
StartRestoreBlob(1297,36322
EndRestoreBlob(1341,37357
SortTocFromFile(1367,37736
archputs(1459,40277
archprintf(1466,40366
SetOutput(1505,41102
SaveOutput(1570,42245
RestoreOutput(1581,42369
ahprintf(1603,42714
RestoringToDB(1640,43410
dump_lo_buf(1651,43630
ahwrite(1693,44850
warn_or_exit_horribly(1740,46033
_moveAfter(1792,47295
_moveBefore(1807,47575
buildTocEntryArrays(1832,48260
getTocEntryByDumpId(1873,49570
TocIDRequired(1886,49820
WriteOffset(1897,49965
ReadOffset(1914,50290
WriteInt(1978,51514
ReadInt(2009,52104
WriteStr(2036,52508
ReadStr(2055,52736
_discoverArchiveFormat(2075,52967
_allocAH(2275,57519
WriteDataChunks(2389,59953
mark_dump_job_done(2456,61662
WriteDataChunksForTocEntry(2471,61934
WriteToc(2504,62495
ReadToc(2563,63864
processEncodingEntry(2718,67534
processStdStringsEntry(2746,68090
processSearchPathEntry(2762,68510
StrictNamesCheck(2772,68741
_tocEntryRequired(2822,70097
_tocEntryRestorePass(3078,77615
_tocEntryIsACL(3111,78705
_doSetFixedOutputState(3126,79094
_doSetSessionAuth(3179,80741
_reconnectToDB(3224,81835
_becomeUser(3269,82899
_becomeOwner(3293,83448
_selectOutputSchema(3309,83759
_selectTablespace(3361,85083
_selectTableAccessMethod(3422,86392
_getObjectDescription(3467,87274
_printTocEntry(3552,89894
sanitize_line(3732,95725
WriteHead(3755,96062
ReadHead(3781,96806
checkSeek(3884,99147
dumpTimestamp(3909,99613
restore_toc_entries_prefork(3927,100214
restore_toc_entries_parallel(4046,104215
restore_toc_entries_postfork(4162,108350
has_lock_conflicts(4198,109431
pending_list_header_init(4223,109949
pending_list_append(4230,110103
pending_list_remove(4240,110325
ready_list_init(4253,110614
ready_list_free(4266,110893
ready_list_insert(4273,111015
ready_list_remove(4282,111262
ready_list_sort(4306,111973
TocEntrySizeCompare(4322,112337
move_to_ready_list(4351,113100
pop_next_work_item(4386,114095
parallel_restore(4443,115534
mark_restore_job_done(4466,116008
fix_dependencies(4507,117245
repoint_table_dependencies(4637,120734
identify_locking_dependencies(4671,121653
reduce_dependencies(4735,123729
mark_create_done(4775,124843
inhibit_data_for_failed_table(4790,125134
CloneArchive(4810,125640
DeCloneArchive(4898,128103

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/common.c,1783
static DumpableObject **dumpIdMap dumpIdMap29,735
static int	allocedDumpIds 30,777
static DumpId lastDumpId 31,808
static bool catalogIdMapValid 36,930
static DumpableObject **catalogIdMap catalogIdMap37,969
static int	numCatalogIds 38,1014
static DumpableObject **tblinfoindex;tblinfoindex48,1506
static DumpableObject **typinfoindex;typinfoindex49,1544
static DumpableObject **funinfoindex;funinfoindex50,1582
static DumpableObject **oprinfoindex;oprinfoindex51,1620
static DumpableObject **collinfoindex;collinfoindex52,1658
static DumpableObject **nspinfoindex;nspinfoindex53,1697
static DumpableObject **extinfoindex;extinfoindex54,1735
static int	numTables;55,1773
static int	numTypes;56,1795
static int	numFuncs;57,1816
static int	numOperators;58,1837
static int	numCollations;59,1862
static int	numNamespaces;60,1888
static int	numExtensions;61,1914
static ExtensionMemberId *extmembers;extmembers64,2013
static int	numextmembers;65,2051
getSchemaData(87,2940
flagInhTables(273,8808
flagInhIndexes(332,10345
flagInhAttrs(439,13996
AssignDumpId(545,16815
createDumpId(590,18007
getMaxDumpId(599,18112
findObjectByDumpId(610,18250
findObjectByCatalogId(628,18794
findObjectByOid(679,20073
buildIndexArray(717,21018
DOCatalogIdCompare(738,21549
getDumpableObjects(760,22153
addObjectDependency(782,22558
removeObjectDependency(809,23118
findTableByOid(829,23491
findTypeByOid(840,23720
findFuncByOid(851,23950
findOprByOid(862,24178
findCollationByOid(873,24417
findNamespaceByOid(884,24669
findExtensionByOid(895,24925
findIndexByOid(908,25287
setExtensionMembership(918,25537
findOwningExtension(934,25957
ExtensionMemberIdCompare(972,26877
findParentsByOid(994,27439
parseOidArray(1049,28622
strInArray(1102,29588

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/parallel.h,430
#define PG_DUMP_PARALLEL_H17,454
typedef void (*ParallelCompletionPtr)ParallelCompletionPtr22,587
	WFW_NO_WAIT,30,783
	WFW_GOT_STATUS,31,797
	WFW_ONE_IDLE,32,814
	WFW_ALL_IDLE33,829
} WFW_WaitOption;34,843
typedef struct ParallelSlot ParallelSlot;37,930
typedef struct ParallelState40,1008
	int			numWorkers;42,1039
	TocEntry  **te;te44,1152
	ParallelSlot *parallelSlot;parallelSlot45,1208
} ParallelState;46,1274

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_backup_db.h,29
#define PG_BACKUP_DB_H9,121

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_backup_db.c,517
_check_database_version(33,834
ReconnectToServer(79,2266
_connectDB(118,3331
ConnectDatabase(236,6149
DisconnectDatabase(337,8760
GetConnection(366,9394
notice_processor(374,9508
die_on_query_failure(381,9686
ExecuteSqlStatement(389,9859
ExecuteSqlQuery(401,10125
ExecuteSqlQueryForSingleRow(416,10474
ExecuteSqlCommand(439,10978
ExecuteSimpleCommands(491,12656
ExecuteSqlCommandBuf(556,14241
EndDBCopyMode(611,15626
StartTransaction(640,16426
CommitTransaction(648,16585
DropBlobIfExists(656,16747

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/parallel.c,2700
#define PIPE_READ	71,2766
#define PIPE_WRITE	72,2792
#define NO_SLOT 74,2820
	WRKR_NOT_STARTED 79,2930
	WRKR_IDLE,80,2953
	WRKR_WORKING,81,2965
	WRKR_TERMINATED82,2980
} T_WorkerStatus;83,2997
#define WORKER_IS_RUNNING(85,3016
struct ParallelSlot95,3426
	T_WorkerStatus workerStatus;97,3448
	ParallelCompletionPtr callback;100,3563
	void	   *callback_data;callback_data101,3633
	ArchiveHandle *AH;AH103,3689
	int			pipeRead;105,3747
	int			pipeWrite;106,3797
	int			pipeRevRead;107,3815
	int			pipeRevWrite;108,3866
	uintptr_t	hThread;112,3944
	unsigned int threadId;113,3964
	pid_t		pid;115,3994
	ArchiveHandle *AH;AH127,4170
	ParallelSlot *slot;slot128,4225
} WorkerInfo;129,4282
#define pipewrite(134,4424
#define pgpipe(139,4538
#define piperead(140,4566
#define pipewrite(141,4603
typedef struct ShutdownInformation148,4739
	ParallelState *pstate;pstate150,4776
	Archive    *AHX;AHX151,4800
} ShutdownInformation;152,4818
static ShutdownInformation shutdown_info;154,4842
typedef struct DumpSignalInformation165,5266
	ArchiveHandle *myAH;myAH167,5305
	ParallelState *pstate;pstate168,5374
	bool		handler_set;169,5428
	bool		am_worker;171,5507
} DumpSignalInformation;173,5562
static volatile DumpSignalInformation signal_info;175,5588
static CRITICAL_SECTION signal_info_lock;178,5653
#define write_stderr(186,5919
static DWORD tls_index;197,6123
bool		parallel_init_done 200,6205
DWORD		mainThreadId;201,6239
#define messageStartsWith(228,7513
shutdown_parallel_dump_utils(237,7680
init_parallel_dump_utils(251,8037
GetMyPSlot(283,8741
getThreadLocalPQExpBuffer(308,9269
on_exit_close_archive(347,10168
archive_close_connection(358,10411
ShutdownWorkersHard(414,11875
WaitForTerminatingWorkers(465,13171
sigTermHandler(564,16401
setup_cancel_handler(627,18064
consoleHandler(653,18718
setup_cancel_handler(727,20988
set_archive_cancel_info(749,21374
set_cancel_pstate(808,22940
set_cancel_slot_archive(828,23340
RunWorker(848,23730
init_spawned_worker_win32(893,24876
ParallelBackupStart(916,25369
ParallelBackupEnd(1078,29763
buildWorkerCommand(1127,31121
parseWorkerCommand(1142,31478
buildWorkerResponse(1175,32275
parseWorkerResponse(1190,32684
DispatchJobForTocEntry(1224,33449
GetIdleWorker(1255,34324
HasEveryWorkerTerminated(1271,34572
IsEveryWorkerIdle(1287,34849
lockTableForWorker(1320,36126
WaitForCommands(1355,37041
ListenToWorkers(1417,38535
WaitForWorkers(1470,39924
getMessageFromLeader(1535,41577
sendMessageToLeader(1546,41778
select_loop(1559,42126
getMessageFromWorker(1598,42981
sendMessageToWorker(1663,44643
readMessageFromPipe(1681,45138
pgpipe(1738,46734
piperead(1824,48775

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_backup_null.c,263
InitArchiveFmt_Null(48,1539
_WriteData(85,2373
_WriteBlobData(96,2678
_EndData(114,3015
_StartBlobs(129,3402
_StartBlob(142,3638
_EndBlob(169,4290
_EndBlobs(182,4530
_PrintTocData(193,4773
_WriteByte(212,5084
_WriteBuf(219,5180
_CloseArchive(225,5280

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_dump/pg_backup_directory.c,889
	char	   *directory;directory51,1789
	cfp		   *dataFH;dataFH53,1811
	cfp		   *blobsTocFH;blobsTocFH55,1863
	ParallelState *pstate;pstate56,1918
} lclContext;57,1979
	char	   *filename;filename61,2011
} lclTocEntry;62,2082
InitArchiveFmt_Directory(108,4023
_ArchiveEntry(233,6926
_WriteExtraToc(260,7554
_ReadExtraToc(281,8044
_PrintExtraToc(304,8536
_StartData(322,9045
_WriteData(345,9749
_EndData(367,10256
_PrintFileData(381,10495
_PrintTocData(413,11039
_LoadBlobs(432,11355
_WriteByte(485,12745
_ReadByte(510,13369
_WriteBuf(522,13623
_ReadBuf(543,14116
_CloseArchive(568,14875
_ReopenArchive(617,16076
_StartBlobs(638,16564
_StartBlob(657,17042
_EndBlob(676,17561
_EndBlobs(698,18094
setFilePath(713,18523
_PrepParallelRestore(739,19266
_Clone(794,20774
_DeClone(816,21395
_WorkerJobDumpDirectory(828,21651
_WorkerJobRestoreDirectory(845,22097

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_ctl/pg_ctl.c,3549
typedef long pgpid_t;39,899
	SMART_MODE,44,938
	FAST_MODE,45,951
	IMMEDIATE_MODE46,963
} ShutdownMode;47,979
	POSTMASTER_READY,51,1011
	POSTMASTER_STILL_STARTING,52,1030
	POSTMASTER_FAILED53,1058
} WaitPMResult;54,1077
	NO_COMMAND 58,1109
	INIT_COMMAND,59,1126
	START_COMMAND,60,1141
	STOP_COMMAND,61,1157
	RESTART_COMMAND,62,1172
	RELOAD_COMMAND,63,1190
	STATUS_COMMAND,64,1207
	PROMOTE_COMMAND,65,1224
	LOGROTATE_COMMAND,66,1242
	KILL_COMMAND,67,1262
	REGISTER_COMMAND,68,1277
	UNREGISTER_COMMAND,69,1296
	RUN_AS_SERVICE_COMMAND70,1317
} CtlCommand;71,1341
#define DEFAULT_WAIT	73,1356
#define USEC_PER_SEC	75,1381
#define WAITS_PER_SEC	77,1411
static bool do_wait 79,1478
static int	wait_seconds 80,1506
static bool wait_seconds_arg 81,1546
static bool silent_mode 82,1584
static ShutdownMode shutdown_mode 83,1617
static int	sig 84,1664
static CtlCommand ctl_command 85,1704
static char *pg_data pg_data86,1748
static char *pg_config pg_config87,1777
static char *pgdata_opt pgdata_opt88,1808
static char *post_opts post_opts89,1840
static const char *progname;progname90,1871
static char *log_file log_file91,1900
static char *exec_path exec_path92,1930
static char *event_source event_source93,1961
static char *register_servicename register_servicename94,1995
static char *register_username register_username95,2072
static char *register_password register_password96,2111
static char *argv0 argv097,2150
static bool allow_core_files 98,2177
static time_t start_time;99,2215
static char postopts_file[postopts_file101,2242
static char version_file[version_file102,2280
static char pid_file[pid_file103,2317
static char backup_file[backup_file104,2350
static char promote_file[promote_file105,2386
static char logrotate_file[logrotate_file106,2423
static volatile pgpid_t postmasterPID 108,2463
static DWORD pgctl_start_type 111,2521
static SERVICE_STATUS status;112,2573
static SERVICE_STATUS_HANDLE hStatus 113,2603
static HANDLE shutdownHandles[shutdownHandles114,2669
#define shutdownEvent	116,2704
#define postmasterProcess 117,2747
static void write_stderr(121,2801
write_stderr(205,5050
print_msg(239,5778
get_pgpid(249,5890
readfile(317,7643
free_readfile(413,9684
start_postmaster(443,10384
wait_for_postmaster(593,14887
unlimit_core_size(705,17899
read_post_opts(725,18282
trap_sigint_during_startup(780,19615
find_other_exec_or_die(798,20023
do_init(829,20844
do_start(857,21431
do_stop(950,23660
do_restart(1037,25678
do_reload(1131,28039
do_promote(1168,28802
do_logrotate(1267,31082
postmaster_is_alive(1324,32459
do_status(1348,33110
do_kill(1405,34225
pgwin32_IsInstalled(1418,34439
pgwin32_CommandLine(1429,34680
pgwin32_doRegister(1513,36759
pgwin32_doUnregister(1547,37731
pgwin32_SetServiceStatus(1586,38731
pgwin32_ServiceHandler(1593,38895
pgwin32_ServiceMain(1625,39615
pgwin32_doRunAsService(1718,42171
typedef BOOL (WINAPI * __CreateRestrictedToken)1739,42792
typedef BOOL (WINAPI * __IsProcessInJob)1740,42951
typedef HANDLE (WINAPI * __CreateJobObject)1741,43017
typedef BOOL (WINAPI * __SetInformationJobObject)1742,43095
typedef BOOL (WINAPI * __AssignProcessToJobObject)1743,43190
typedef BOOL (WINAPI * __QueryInformationJobObject)1744,43259
CreateRestrictedProcess(1759,43837
GetPrivilegesToDelete(1965,50857
do_advice(2022,52452
do_help(2030,52560
set_mode(2104,56381
set_sig(2132,56912
set_starttype(2161,57530
adjust_data_dir(2182,58053
get_control_dbstate(2240,59597
main(2259,59915

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_test_timing/pg_test_timing.c,194
static const char *progname;progname12,209
static int32 test_duration 14,239
long long int histogram[histogram21,445
main(24,479
handle_args(41,753
test_timing(111,2265
output(171,3459

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_basebackup/pg_receivewal.c,812
#define RECONNECT_SLEEP_TIME 31,787
static char *basedir basedir34,840
static int	verbose 35,869
static int	compresslevel 36,893
static int	noloop 37,923
static int	standby_message_timeout 38,946
static volatile bool time_to_stop 39,1017
static bool do_create_slot 40,1060
static bool slot_exists_ok 41,1096
static bool do_drop_slot 42,1132
static bool do_sync 43,1166
static bool synchronous 44,1194
static char *replication_slot replication_slot45,1227
static XLogRecPtr endpos 46,1265
disconnect_atexit(58,1651
#define IsCompressXLogFileName(65,1764
#define IsPartialCompressXLogFileName(69,1968
usage(75,2207
stop_streaming(110,4338
get_destination_dir(161,5809
close_destination_dir(181,6090
FindStreamingStart(200,6640
StreamLog(368,10657
sigint_handler(461,12778
main(468,12843

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_basebackup/pg_basebackup.c,4316
#define ERRCODE_DATA_CORRUPTED	45,1096
typedef struct TablespaceListCell47,1136
	struct TablespaceListCell *next;next49,1172
	char		old_dir[old_dir50,1206
	char		new_dir[new_dir51,1233
} TablespaceListCell;52,1260
typedef struct TablespaceList54,1283
	TablespaceListCell *head;head56,1315
	TablespaceListCell *tail;tail57,1342
} TablespaceList;58,1369
typedef struct WriteTarState60,1388
	int			tablespacenum;62,1419
	char		filename[filename63,1441
	FILE	   *tarfile;tarfile64,1469
	char		tarhdr[tarhdr65,1488
	bool		basetablespace;66,1519
	bool		in_tarhdr;67,1542
	bool		skip_file;68,1560
	bool		is_recovery_guc_supported;69,1578
	bool		is_postgresql_auto_conf;70,1612
	bool		found_postgresql_auto_conf;71,1644
	int			file_padding_len;72,1679
	size_t		tarhdrsz;73,1704
	pgoff_t		filesz;74,1723
	gzFile		ztarfile;76,1758
} WriteTarState;78,1784
typedef struct UnpackTarState80,1802
	int			tablespacenum;82,1834
	char		current_path[current_path83,1856
	char		filename[filename84,1888
	const char *mapped_tblspc_path;mapped_tblspc_path85,1916
	pgoff_t		current_len_left;86,1949
	int			current_padding;87,1977
	FILE	   *file;file88,2001
} UnpackTarState;89,2017
typedef struct WriteManifestState91,2036
	char		filename[filename93,2072
	FILE	   *file;file94,2100
} WriteManifestState;95,2116
typedef void (*WriteDataCallback)WriteDataCallback97,2139
#define MINIMUM_VERSION_FOR_PG_WAL	104,2361
#define MINIMUM_VERSION_FOR_TEMP_SLOTS 109,2473
#define MINIMUM_VERSION_FOR_MANIFESTS	114,2578
	NO_WAL,121,2679
	FETCH_WAL,122,2688
	STREAM_WAL123,2700
} IncludeWal;124,2712
static char *basedir basedir127,2748
static TablespaceList tablespace_dirs 128,2777
static char *xlog_dir xlog_dir129,2831
static char format 130,2861
static char *label label131,2908
static bool noclean 132,2958
static bool checksum_failure 133,2987
static bool showprogress 134,3025
static bool estimatesize 135,3059
static int	verbose 136,3092
static int	compresslevel 137,3116
static IncludeWal includewal 138,3146
static bool fastcheckpoint 139,3189
static bool writerecoveryconf 140,3225
static bool do_sync 141,3264
static int	standby_message_timeout 142,3292
static pg_time_t last_progress_report 143,3363
static int32 maxrate 144,3406
static char *replication_slot replication_slot145,3459
static bool temp_replication_slot 146,3497
static bool create_slot 147,3539
static bool no_slot 148,3572
static bool verify_checksums 149,3601
static bool manifest 150,3638
static bool manifest_force_encode 151,3667
static char *manifest_checksums manifest_checksums152,3710
static bool success 154,3751
static bool made_new_pgdata 155,3780
static bool found_existing_pgdata 156,3817
static bool made_new_xlogdir 157,3860
static bool found_existing_xlogdir 158,3898
static bool made_tablespace_dirs 159,3942
static bool found_tablespace_dirs 160,3984
static uint64 totalsize_kb;163,4052
static uint64 totaldone;164,4080
static int	tablespacecount;165,4105
static int	bgpipe[bgpipe169,4211
static pid_t bgchild 173,4282
static bool in_log_streamer 174,4309
static XLogRecPtr xlogendptr;177,4414
static int	has_xlogendptr 180,4459
static volatile LONG has_xlogendptr 182,4496
static PQExpBuffer recoveryconfcontents 186,4598
cleanup_directories_atexit(214,5782
disconnect_atexit(261,7130
kill_bgchild_atexit(274,7422
tablespace_list_append(286,7608
get_gz_error(362,9529
usage(376,9721
reached_end_position(440,13376
	PGconn	   *bgconn;bgconn522,15011
	XLogRecPtr	startptr;523,15031
	char		xlog[xlog524,15053
	char	   *sysidentifier;sysidentifier525,15122
	int			timeline;526,15147
} logstreamer_param;527,15164
LogStreamerMain(530,15197
StartLogStreamer(593,16777
verify_dir_is_empty_or_create(719,20126
progress_report(772,21106
#define VERBOSE_FILENAME_LENGTH 809,22236
parse_max_rate(861,23791
ReceiveCopyData(946,25469
writeTarData(990,26208
ReceiveTarFile(1033,27356
ReceiveTarCopyChunk(1292,33586
get_tablespace_mapping(1482,38721
ReceiveAndUnpackTarFile(1509,39514
ReceiveTarAndUnpackCopyChunk(1549,40430
ReceiveBackupManifest(1732,45332
ReceiveBackupManifestChunk(1754,45823
ReceiveBackupManifestInMemory(1773,46279
ReceiveBackupManifestInMemoryChunk(1782,46506
BaseBackup(1791,46687
main(2223,57627

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_basebackup/receivelog.c,749
static Walfile *walfile walfile31,775
static char current_walfile_name[current_walfile_name32,807
static bool reportFlushPosition 33,857
static XLogRecPtr lastFlushPosition 34,898
static bool still_sending 36,956
mark_file_as_archived(58,2078
open_walfile(89,2886
close_walfile(178,5476
existsTimeLineHistoryFile(242,6991
writeTimeLineHistoryFile(259,7349
sendFeedback(320,8861
CheckServerVersionForStreaming(358,9851
ReceiveXlogStream(436,12759
ReadEndOfStreamingResult(686,20328
HandleCopyStream(732,21757
CopyStreamPoll(861,24852
CopyStreamReceive(923,26389
ProcessKeepaliveMsg(978,27626
ProcessXLogDataMsg(1035,29107
HandleEndOfCopyStream(1165,32211
CheckCopyStreamStop(1206,33169
CalculateCopyStreamSleeptime(1232,33760

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_basebackup/pg_recvlogical.c,1174
#define RECONNECT_SLEEP_TIME 33,872
static char *outfile outfile36,925
static int	verbose 37,954
static int	noloop 38,978
static int	standby_message_timeout 39,1001
static int	fsync_interval 40,1072
static XLogRecPtr startpos 41,1134
static XLogRecPtr endpos 42,1182
static bool do_create_slot 43,1228
static bool slot_exists_ok 44,1264
static bool do_start_slot 45,1300
static bool do_drop_slot 46,1335
static char *replication_slot replication_slot47,1369
static char **options;options50,1468
static size_t noptions 51,1491
static const char *plugin plugin52,1519
static int	outfd 55,1584
static volatile sig_atomic_t time_to_abort 56,1607
static volatile sig_atomic_t output_reopen 57,1659
static bool output_isfile;58,1711
static TimestampTz output_last_fsync 59,1738
static bool output_needs_fsync 60,1781
static XLogRecPtr output_written_lsn 61,1821
static XLogRecPtr output_fsync_lsn 62,1879
usage(71,2183
sendFeedback(114,4743
disconnect_atexit(166,6210
OutputFsync(173,6288
StreamLogicalLog(204,6748
sigint_handler(656,17235
sighup_handler(665,17352
main(673,17419
flushAndSendFeedback(1022,25601
prepareToTerminate(1039,25995

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_basebackup/streamutil.h,28
#define STREAMUTIL_H13,335

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_basebackup/walmethods.c,1802
#define ZLIB_OUT_SIZE 31,805
typedef struct DirectoryMethodData41,1104
	char	   *basedir;basedir43,1141
	int			compression;44,1160
	bool		sync;45,1180
} DirectoryMethodData;46,1193
static DirectoryMethodData *dir_data dir_data47,1216
typedef struct DirectoryMethodFile52,1290
	int			fd;54,1327
	off_t		currpos;55,1338
	char	   *pathname;pathname56,1355
	char	   *fullpath;fullpath57,1375
	char	   *temp_suffix;temp_suffix58,1395
	gzFile		gzfp;60,1435
} DirectoryMethodFile;62,1457
dir_getlasterror(65,1501
dir_open_for_write(72,1633
dir_write(186,4084
dir_get_current_pos(205,4428
dir_close(214,4595
dir_sync(283,6219
dir_get_file_size(302,6512
dir_existsfile(317,6779
dir_finish(333,7059
CreateWalDirectoryMethod(349,7322
FreeWalDirectoryMethod(373,7982
typedef struct TarMethodFile385,8292
	off_t		ofs_start;387,8323
	off_t		currpos;388,8393
	char		header[header389,8410
	char	   *pathname;pathname390,8441
	size_t		pad_to_size;391,8461
} TarMethodFile;392,8483
typedef struct TarMethodData394,8501
	char	   *tarfilename;tarfilename396,8532
	int			fd;397,8555
	int			compression;398,8566
	bool		sync;399,8586
	TarMethodFile *currentfile;currentfile400,8599
	char		lasterror[lasterror401,8628
	z_streamp	zp;403,8669
	void	   *zlibOut;zlibOut404,8684
} TarMethodData;406,8710
static TarMethodData *tar_data tar_data407,8727
#define tar_clear_error(409,8767
#define tar_set_error(410,8823
tar_getlasterror(413,8937
tar_write_compressed_data(426,9190
tar_write(480,10221
tar_write_padding_data(511,10799
tar_open_for_write(531,11171
tar_get_file_size(683,15149
tar_get_current_pos(693,15301
tar_sync(702,15429
tar_close(721,15752
tar_existsfile(882,19426
tar_finish(890,19591
CreateWalTarMethod(987,21478
FreeWalTarMethod(1018,22404

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_basebackup/receivelog.h,590
#define RECEIVELOG_H13,335
typedef bool (*stream_stop_callback)stream_stop_callback23,547
typedef struct StreamCtl29,799
	XLogRecPtr	startpos;31,826
	TimeLineID	timeline;32,884
	char	   *sysidentifier;sysidentifier33,942
	int			standby_message_timeout;35,1029
	bool		synchronous;36,1099
	bool		mark_done;37,1161
	bool		do_sync;38,1228
	stream_stop_callback stream_stop;41,1312
	pgsocket	stop_socket;43,1387
	WalWriteMethod *walmethod;walmethod46,1511
	char	   *partial_suffix;partial_suffix47,1566
	char	   *replication_slot;replication_slot48,1642
} StreamCtl;49,1709

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_basebackup/streamutil.c,850
#define ERRCODE_DUPLICATE_OBJECT 31,801
uint32		WalSegSz;33,844
#define MINIMUM_VERSION_FOR_SHOW_CMD 38,992
#define MINIMUM_VERSION_FOR_GROUP_ACCESS 43,1090
const char *progname;progname45,1139
char	   *connection_string connection_string46,1161
char	   *dbhost dbhost47,1196
char	   *dbuser dbuser48,1220
char	   *dbport dbport49,1244
char	   *dbname dbname50,1268
int			dbgetpassword 51,1292
static bool have_password 52,1350
static char password[password53,1385
PGconn	   *conn conn54,1412
GetConnection(62,1623
RetrieveWalSegSize(277,6637
RetrieveDataDirCreatePerm(355,8789
RunIdentifySystem(409,10112
CreateReplicationSlot(487,11953
DropReplicationSlot(563,13805
feGetCurrentTimestamp(608,14782
feTimestampDifference(627,15152
feTimestampDifferenceExceeds(649,15568
fe_sendint64(662,15819
fe_recvint64(673,15996

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_basebackup/walmethods.h,577
typedef void *Walfile;Walfile13,315
	CLOSE_NORMAL,17,354
	CLOSE_UNLINK,18,369
	CLOSE_NO_RENAME19,384
} WalCloseMethod;20,401
typedef struct WalWriteMethod WalWriteMethod;32,864
struct WalWriteMethod33,910
	Walfile		(*open_for_write)open_for_write41,1242
	int			(*close)close47,1490
	bool		(*existsfile)existsfile50,1572
	ssize_t		(*get_file_size)get_file_size53,1670
	ssize_t		(*write)write59,1845
	off_t		(*get_current_pos)get_current_pos62,1969
	int			(*sync)sync67,2087
	bool		(*finish)finish75,2386
	const char *(*getlasterror)getlasterror78,2468

/home/seinoyu/pgsql/master/postgresql/src/bin/pg_resetwal/pg_resetwal.c,976
#define FRONTEND 36,1462
static ControlFileData ControlFile;62,2049
static XLogSegNo newXlogSegNo;63,2109
static bool guessed 64,2165
static const char *progname;progname65,2235
static uint32 set_xid_epoch 66,2264
static TransactionId set_xid 67,2307
static TransactionId set_oldest_commit_ts_xid 68,2341
static TransactionId set_newest_commit_ts_xid 69,2392
static Oid	set_oid 70,2443
static MultiXactId set_mxid 71,2467
static MultiXactOffset set_mxoff 72,2500
static uint32 minXlogTli 73,2557
static XLogSegNo minXlogSegNo 74,2587
static int	WalSegSz;75,2622
static int	set_wal_segsize;76,2643
main(92,3086
CheckDataVersion(536,15121
read_controlfile(581,16213
GuessControlValues(658,18274
PrintControlValues(741,21157
PrintNewControlValues(814,24405
RewriteControlFile(886,26365
FindEndOfXLOG(933,27935
KillExistingXLOG(1015,30101
KillExistingArchiveStatus(1060,30916
#define ARCHSTATDIR 1062,30950
WriteEmptyXLOG(1111,32115
usage(1206,34582

/home/seinoyu/pgsql/master/postgresql/src/tools/testint128.c,266
#define USE_NATIVE_INT128 26,734
	int128		i128;36,883
	INT128		I128;37,898
		int64		hi;41,946
		uint64		lo;42,959
		uint64		lo;44,979
		int64		hi;45,993
	}			hl;47,1013
}			test128;48,1022
my_int128_compare(55,1096
get_random_uint64(69,1309
main(89,1777

/home/seinoyu/pgsql/master/postgresql/src/tools/findoidjoins/findoidjoins.c,13
main(19,306

/home/seinoyu/pgsql/master/postgresql/src/tools/ifaddrs/test_ifaddrs.c,49
print_addr(18,208
callback(48,732
main(58,903

/home/seinoyu/pgsql/master/postgresql/contrib/hstore_plperl/hstore_plperl.c,816
PG_MODULE_MAGIC;8,117
typedef HStore *(*hstoreUpgrade_t)hstoreUpgrade_t13,208
static hstoreUpgrade_t hstoreUpgrade_p;14,257
typedef int (*hstoreUniquePairs_t)hstoreUniquePairs_t15,297
static hstoreUniquePairs_t hstoreUniquePairs_p;16,368
typedef HStore *(*hstorePairs_t)hstorePairs_t17,416
static hstorePairs_t hstorePairs_p;18,493
typedef size_t (*hstoreCheckKeyLen_t)hstoreCheckKeyLen_t19,529
static hstoreCheckKeyLen_t hstoreCheckKeyLen_p;20,581
typedef size_t (*hstoreCheckValLen_t)hstoreCheckValLen_t21,629
static hstoreCheckValLen_t hstoreCheckValLen_p;22,681
_PG_init(29,822
#define hstoreUpgrade 56,1912
#define hstoreUniquePairs 57,1950
#define hstorePairs 58,1996
#define hstoreCheckKeyLen 59,2030
#define hstoreCheckValLen 60,2076
hstore_to_plperl(66,2170
plperl_to_hstore(99,2826

/home/seinoyu/pgsql/master/postgresql/contrib/vacuumlo/vacuumlo.c,458
#define BUFSIZE	31,738
enum trivalue33,762
	TRI_DEFAULT,35,778
	TRI_NO,36,792
	TRI_YES37,801
struct _param40,814
	char	   *pg_user;pg_user42,830
	enum trivalue pg_prompt;43,849
	char	   *pg_port;pg_port44,875
	char	   *pg_host;pg_host45,894
	const char *progname;progname46,913
	int			verbose;47,936
	int			dry_run;48,952
	long		transaction_limit;49,968
vacuumlo(61,1208
#define PARAMS_ARRAY_SIZE	88,1800
usage(422,10172
main(445,11294

/home/seinoyu/pgsql/master/postgresql/contrib/test_decoding/test_decoding.c,596
PG_MODULE_MAGIC;25,586
	MemoryContext context;33,754
	bool		include_xids;34,778
	bool		include_timestamp;35,799
	bool		skip_empty_xacts;36,825
	bool		xact_wrote_changes;37,850
	bool		only_local;38,877
} TestDecodingData;39,896
_PG_init(67,2063
_PG_output_plugin_init(74,2171
pg_decode_startup(91,2652
pg_decode_shutdown(199,5958
pg_decode_begin_txn(209,6194
pg_output_begin(221,6453
pg_decode_commit_txn(233,6810
pg_decode_filter(255,7371
print_literal(273,7838
tuple_to_stringinfo(319,8737
pg_decode_change(395,10628
pg_decode_truncate(480,13141
pg_decode_message(533,14527

/home/seinoyu/pgsql/master/postgresql/contrib/auth_delay/auth_delay.c,183
PG_MODULE_MAGIC;21,443
static int	auth_delay_milliseconds;26,504
static ClientAuthentication_hook_type original_client_auth_hook 29,561
auth_delay_checks(35,677
_PG_init(56,1042

/home/seinoyu/pgsql/master/postgresql/contrib/bloom/blinsert.c,323
PG_MODULE_MAGIC;27,653
	BloomState	blstate;35,801
	int64		indtuples;36,847
	MemoryContext tmpCtx;37,904
	PGAlignedBlock data;39,993
	int			count;40,1034
} BloomBuildState;41,1088
flushCachedPage(47,1168
initCachedPage(64,1596
bloomBuildCallback(75,1823
blbuild(122,3000
blbuildempty(165,4227
blinsert(198,5284

/home/seinoyu/pgsql/master/postgresql/contrib/bloom/blutils.c,558
#define GETWORD(30,829
#define CLRBIT(31,910
#define SETBIT(32,984
#define GETBIT(33,1058
static relopt_kind bl_relopt_kind;38,1211
static relopt_parse_elt bl_relopt_tab[bl_relopt_tab41,1284
_PG_init(52,1557
makeDefaultBloomOptions(87,2633
blhandler(106,3145
initBloomState(160,4856
static int32 next;218,6452
myRand(221,6485
mySrand(248,7075
signValue(259,7248
BloomFormTuple(292,8104
BloomPageAddItem(317,8635
BloomNewBuffer(352,9734
BloomInitPage(406,10845
BloomFillMetapage(422,11168
BloomInitMetapage(454,12094
bloptions(481,12780

/home/seinoyu/pgsql/master/postgresql/contrib/bloom/bloom.h,2343
#define _BLOOM_H_14,335
#define BLOOM_HASH_PROC	24,544
#define BLOOM_OPTIONS_PROC	25,572
#define BLOOM_NPROC	26,602
#define BLOOM_EQUAL_STRATEGY	29,650
#define BLOOM_NSTRATEGIES	30,681
typedef struct BloomPageOpaqueData33,740
	OffsetNumber maxoff;35,777
	uint16		flags;36,837
	uint16		unused;37,887
	uint16		bloom_page_id;40,1052
} BloomPageOpaqueData;41,1118
typedef BloomPageOpaqueData *BloomPageOpaque;BloomPageOpaque43,1142
#define BLOOM_META	46,1212
#define BLOOM_DELETED	47,1239
#define BLOOM_PAGE_ID	57,1596
#define BloomPageGetOpaque(60,1676
#define BloomPageGetMaxOffset(61,1757
#define BloomPageIsMeta(62,1828
#define BloomPageIsDeleted(64,1915
#define BloomPageSetDeleted(66,2008
#define BloomPageSetNonDeleted(68,2096
#define BloomPageGetData(70,2188
#define BloomPageGetTuple(71,2258
#define BloomPageGetNextTuple(74,2397
#define BLOOM_METAPAGE_BLKNO	78,2537
#define BLOOM_HEAD_BLKNO	79,2570
typedef uint16 BloomSignatureWord;84,2686
#define SIGNWORDBITS 86,2722
#define DEFAULT_BLOOM_LENGTH	91,2859
#define MAX_BLOOM_LENGTH	92,2907
#define DEFAULT_BLOOM_BITS	97,3025
#define MAX_BLOOM_BITS	98,3055
typedef struct BloomOptions101,3130
	int32		vl_len_;103,3160
	int			bloomLength;104,3224
	int			bitSize[bitSize105,3291
} BloomOptions;107,3382
													   ) / sizeof(BlockNumber)sizeof(BlockNumber)117,3750
typedef struct BloomMetaPageData121,3824
	uint32		magickNumber;123,3859
	uint16		nStart;124,3882
	uint16		nEnd;125,3899
	BloomOptions opts;126,3914
	FreeBlockNumberArray notFullPage;127,3934
} BloomMetaPageData;128,3969
#define BLOOM_MAGICK_NUMBER 131,4052
#define BloomMetaBlockN	134,4150
#define BloomPageGetMeta(136,4229
typedef struct BloomState138,4307
	FmgrInfo	hashFn[hashFn140,4335
	Oid			collations[collations141,4369
	BloomOptions opts;142,4404
	int32		nColumns;143,4468
	Size		sizeOfBloomTuple;149,4587
} BloomState;150,4612
#define BloomPageGetFreeSpace(152,4627
typedef struct BloomTuple160,4883
	ItemPointerData heapPtr;162,4911
	BloomSignatureWord sign[sign163,4937
} BloomTuple;164,4986
#define BLOOMTUPLEHDRSZ 166,5001
typedef struct BloomScanOpaqueData169,5102
	BloomSignatureWord *sign;sign171,5139
	BloomState	state;172,5187
} BloomScanOpaqueData;173,5206
typedef BloomScanOpaqueData *BloomScanOpaque;BloomScanOpaque175,5230

/home/seinoyu/pgsql/master/postgresql/contrib/bloom/blscan.c,77
blbeginscan(28,592
blrescan(48,944
blendscan(68,1321
blgetbitmap(81,1521

/home/seinoyu/pgsql/master/postgresql/contrib/bloom/blvalidate.c,19
blvalidate(32,751

/home/seinoyu/pgsql/master/postgresql/contrib/bloom/blvacuum.c,47
blbulkdelete(34,929
blvacuumcleanup(169,4695

/home/seinoyu/pgsql/master/postgresql/contrib/bloom/blcost.c,23
blcostestimate(23,475

/home/seinoyu/pgsql/master/postgresql/contrib/xml2/xpath.c,508
PG_MODULE_MAGIC;26,522
	xmlDocPtr	doctree;36,698
	xmlXPathContextPtr ctxt;37,718
	xmlXPathObjectPtr res;38,744
} xpath_workspace;39,768
pgxml_parser_init(65,1510
xml_is_well_formed(96,2282
xml_encode_special_chars(134,2982
pgxmlNodeSetToText(166,3680
pgxml_texttoxmlchar(235,5252
xpath_nodeset(249,5518
xpath_list(282,6284
xpath_string(311,6894
xpath_number(352,7820
xpath_bool(384,8383
pgxml_xpath(414,8930
cleanup_workspace(467,10182
pgxml_result_to_text(481,10504
xpath_table(525,11362

/home/seinoyu/pgsql/master/postgresql/contrib/xml2/xslt_proc.c,44
xslt_process(48,902
parse_params(198,5004

/home/seinoyu/pgsql/master/postgresql/contrib/adminpack/adminpack.c,469
#undef rename35,718
#undef unlink39,754
PG_MODULE_MAGIC;43,783
convert_and_check_filename(71,1630
requireSuperuser(113,2839
pg_file_write(131,3305
pg_file_write_v1_1(155,3925
pg_file_write_internal(173,4359
pg_file_sync(217,5349
pg_file_rename(242,5999
pg_file_rename_v1_1(277,6758
pg_file_rename_internal(306,7332
pg_file_unlink(399,9285
pg_file_unlink_v1_1(439,10183
pg_logdir_ls(474,11000
pg_logdir_ls_v1_1(494,11565
pg_logdir_ls_internal(500,11660

/home/seinoyu/pgsql/master/postgresql/contrib/intarray/_int_bool.c,1159
#define WAITOPERAND 18,310
#define WAITENDOPERAND	19,332
#define WAITOPERATOR	20,357
typedef struct NODE26,462
	int32		type;28,484
	int32		val;29,498
	struct NODE *next;next30,511
} NODE;31,531
	char	   *buf;buf35,557
	int32		state;36,572
	int32		count;37,587
	NODE	   *str;str39,663
	int32		num;41,699
} WORKSTATE;42,712
gettoken(48,777
pushquery(136,2543
#define STACKDEPTH	147,2742
makepol(153,2818
	int32	   *arrb;arrb227,4282
	int32	   *arre;arre228,4299
} CHKVAL;229,4316
checkcondition_arr(235,4397
checkcondition_bit(257,4897
execute(266,5129
signconsistent(300,6083
execconsistent(309,6332
	ITEM	   *first;first323,6656
	bool	   *mapped_check;mapped_check324,6673
} GinChkVal;325,6697
checkcondition_gin(328,6723
gin_bool_consistent(336,6885
contains_required_value(364,7497
query_has_required_values(399,8375
rboolop(410,8566
boolop(419,8733
findoprnd(440,9191
bqarr_in(477,9786
	ITEM	   *curpol;curpol550,11276
	char	   *buf;buf551,11294
	char	   *cur;cur552,11309
	int32		buflen;553,11324
} INFIX;554,11340
#define RESIZEBUF(556,11350
infix(564,11621
bqarr_out(641,13088
querytree(664,13612

/home/seinoyu/pgsql/master/postgresql/contrib/intarray/_int_gist.c,344
#define GETENTRY(13,187
#define MAXNUMELTS 23,606
g_int_consistent(46,1310
g_int_union(116,3118
g_int_compress(156,3849
g_int_decompress(279,6933
g_int_penalty(351,8567
g_int_same(373,9110
	OffsetNumber pos;411,9783
	float		cost;412,9802
} SPLITCOST;413,9816
comparecost(416,9841
g_int_picksplit(429,10159
g_int_options(613,14677

/home/seinoyu/pgsql/master/postgresql/contrib/intarray/_int.h,1794
#define ___INT_H__5,53
#define G_INT_NUMRANGES_DEFAULT	11,163
#define G_INT_NUMRANGES_MAX	12,200
#define G_INT_GET_NUMRANGES(14,299
	int32		vl_len_;21,525
	int			num_ranges;22,589
} GISTIntArrayOptions;23,632
#define ARRPTR(26,702
#define ARRNELEMS(27,751
#define CHECKARRVALID(30,883
#define ARRISEMPTY(38,1101
#define SORT(41,1182
#define PREPAREARR(49,1369
#define WISH_F(58,1557
#define SIGLEN_DEFAULT	62,1659
#define SIGLEN_MAX	63,1692
#define SIGLENBIT(64,1733
#define GET_SIGLEN(65,1786
typedef char *BITVECP;BITVECP69,1937
#define LOOPBYTE(71,1961
#define GETBYTE(75,2087
#define GETBITBYTE(76,2161
#define CLRBIT(77,2219
#define SETBIT(78,2294
#define GETBIT(79,2369
#define HASHVAL(80,2442
#define HASH(81,2515
	int32		vl_len_;86,2640
	int			siglen;87,2704
} GISTIntArrayBigOptions;88,2753
	int32		vl_len_;95,2825
	int32		flag;96,2889
	char		data[data97,2903
} GISTTYPE;98,2939
#define ALLISTRUE	100,2952
#define ISALLTRUE(102,2977
#define GTHDRSIZE	104,3036
#define CALCGTSIZE(105,3082
#define GETSIGN(107,3168
#define BooleanSearchStrategy	134,4224
typedef struct ITEM140,4326
	int16		type;142,4348
	int16		left;143,4362
	int32		val;144,4376
} ITEM;145,4389
typedef struct QUERYTYPE147,4398
	int32		vl_len_;149,4425
	int32		size;150,4489
	ITEM		items[items151,4527
} QUERYTYPE;152,4564
#define HDRSIZEQT	154,4578
#define COMPUTESIZE(155,4623
#define QUERYTYPEMAXITEMS	156,4687
#define GETQUERY(157,4757
#define END	160,4822
#define ERR	161,4837
#define VAL	162,4852
#define OPR	163,4867
#define OPEN	164,4882
#define CLOSE	165,4897
#define DatumGetQueryTypeP(168,4954
#define DatumGetQueryTypePCopy(169,5023
#define PG_GETARG_QUERYTYPE_P(170,5100
#define PG_GETARG_QUERYTYPE_P_COPY(171,5174
#define QSORT(183,5654

/home/seinoyu/pgsql/master/postgresql/contrib/intarray/_intbig_gist.c,534
#define GETENTRY(12,199
_intbig_in(29,698
_intbig_out(38,865
_intbig_alloc(47,1046
_intbig_overlap(72,1586
_intbig_contains(90,1845
g_intbig_same(108,2100
g_intbig_compress(141,2680
sizebitvec(209,3990
hemdistsign(215,4078
hemdist(231,4350
g_intbig_decompress(247,4673
unionkey(253,4767
g_intbig_union(266,4957
g_intbig_penalty(291,5506
	OffsetNumber pos;307,6003
	int32		cost;308,6022
} SPLITCOST;309,6036
comparecost(312,6061
g_intbig_picksplit(319,6186
g_intbig_consistent(462,9312
g_intbig_options(578,11735

/home/seinoyu/pgsql/master/postgresql/contrib/intarray/_int_gin.c,58
ginint4_queryextract(13,183
ginint4_consistent(110,2450

/home/seinoyu/pgsql/master/postgresql/contrib/intarray/_int_op.c,450
PG_MODULE_MAGIC;8,79
_int_contained(19,347
_int_contains(28,551
_int_different(46,905
_int_same(54,1119
_int_overlap(99,1705
_int_union(122,2056
_int_inter(143,2359
intset(179,3097
icount(185,3188
sort(195,3347
sort_asc(227,4217
sort_desc(237,4360
uniq(247,4504
idx(259,4697
subarray(273,4952
intarray_push_elem(323,5836
intarray_push_array(334,6053
intarray_del_elem(347,6326
intset_union_elem(377,6767
intset_subtract(389,7015

/home/seinoyu/pgsql/master/postgresql/contrib/intarray/_int_tool.c,465
inner_int_contains(14,211
inner_int_overlap(49,663
inner_int_union(78,1010
inner_int_inter(135,1881
rt__int_size(183,2532
isort_cmp(190,2667
isort(211,3167
new_intArrayType(221,3356
resize_intArrayType(249,3854
copy_intArrayType(280,4399
internal_size(292,4598
_int_unique(310,5003
gensign(322,5231
intarray_match_first(335,5429
intarray_add_elem(351,5654
intarray_concat_arrays(368,5941
int_to_intset(385,6313
compASC(397,6463
compDESC(405,6629

/home/seinoyu/pgsql/master/postgresql/contrib/intarray/_int_selfuncs.c,256
_int_overlap_sel(56,1937
_int_contains_sel(66,2176
_int_contained_sel(76,2417
_int_overlap_joinsel(86,2660
_int_contains_joinsel(97,2937
_int_contained_joinsel(108,3216
_int_matchsel(123,3584
int_query_opr_selec(245,6693
compare_val_int4(327,8549

/home/seinoyu/pgsql/master/postgresql/contrib/hstore/hstore.h,1488
#define __HSTORE_H__5,55
	uint32		entry;20,405
} HEntry;21,421
#define HENTRY_ISFIRST 23,432
#define HENTRY_ISNULL 24,466
#define HENTRY_POSMASK 25,500
#define HSE_ISFIRST(28,612
#define HSE_ISNULL(29,675
#define HSE_ENDPOS(30,736
#define HSE_OFF(31,791
#define HSE_LEN(32,862
#define HSTORE_MAX_KEY_LEN 41,1179
#define HSTORE_MAX_VALUE_LEN 42,1217
	int32		vl_len_;46,1275
	uint32		size_;47,1339
} HStore;49,1430
#define HS_FLAG_NEWVERSION 59,1877
#define HS_COUNT(61,1916
#define HS_SETCOUNT(62,1968
#define HSHRDSIZE	71,2349
#define CALCDATASIZE(72,2384
#define ARRPTR(75,2506
#define STRPTR(76,2560
#define HSTORE_KEY(79,2668
#define HSTORE_VAL(80,2736
#define HSTORE_KEYLEN(81,2806
#define HSTORE_VALLEN(82,2864
#define HSTORE_VALISNULL(83,2924
#define HS_COPYITEM(99,3530
#define HS_ADDITEM(112,4003
#define HS_FINALIZE(129,4645
#define HS_FIXSIZE(143,5145
#define DatumGetHStoreP(152,5469
#define PG_GETARG_HSTORE_P(154,5514
	char	   *key;key163,5729
	char	   *val;val164,5744
	size_t		keylen;165,5759
	size_t		vallen;166,5776
	bool		isnull;167,5793
	bool		needfree;168,5831
} Pairs;169,5880
#define HStoreContainsStrategyNumber	180,6254
#define HStoreExistsStrategyNumber	181,6293
#define HStoreExistsAnyStrategyNumber	182,6331
#define HStoreExistsAllStrategyNumber	183,6372
#define HStoreOldContainsStrategyNumber 184,6413
#define HSTORE_POLLUTE_NAMESPACE 191,6681
#define HSTORE_POLLUTE(195,6753
#define HSTORE_POLLUTE(201,6973

/home/seinoyu/pgsql/master/postgresql/contrib/hstore/hstore_gin.c,183
#define KEYFLAG	20,498
#define VALFLAG	21,519
#define NULLFLAG	22,540
makeitem(28,654
gin_extract_hstore(44,908
gin_extract_hstore_query(82,1758
gin_consistent_hstore(153,3749

/home/seinoyu/pgsql/master/postgresql/contrib/hstore/hstore_op.c,865
hstoreFindKey(36,1004
hstoreArrayToPairs(73,1796
hstore_fetchval(130,3171
hstore_exists(151,3675
hstore_exists_any(164,3954
hstore_exists_all(198,4709
hstore_defined(232,5460
hstore_delete(247,5825
hstore_delete_array(294,6787
hstore_delete_hstore(373,8391
hstore_concat(473,10530
hstore_slice_to_array(571,12669
hstore_slice_to_hstore(634,14096
hstore_akeys(696,15686
hstore_avals(731,16343
hstore_to_array_internal(777,17210
hstore_to_array(827,18409
hstore_to_matrix(837,18611
setup_firstcall(855,19171
hstore_skeys(885,19825
hstore_svals(919,20456
hstore_contains(967,21358
hstore_contained(1015,22498
hstore_each(1026,22706
hstore_cmp(1087,24029
hstore_eq(1168,25765
hstore_ne(1179,25993
hstore_gt(1190,26221
hstore_ge(1201,26448
hstore_lt(1212,26676
hstore_le(1223,26903
hstore_hash(1235,27134
hstore_hash_extended(1259,27810

/home/seinoyu/pgsql/master/postgresql/contrib/hstore/hstore_compat.c,247
	uint16		keylen;101,4107
	uint16		vallen;102,4124
				valisnull:valisnull104,4149
				pos:pos105,4166
} HOldEntry;106,4178
hstoreValidNewFormat(119,4425
hstoreValidOldFormat(171,5422
hstoreUpgrade(236,6685
hstore_version_diag(352,10097

/home/seinoyu/pgsql/master/postgresql/contrib/hstore/hstore_gist.c,1241
	int32		vl_len_;16,278
	int			siglen;17,342
} GistHstoreOptions;18,391
#define BITBYTE 21,434
#define SIGLEN_DEFAULT	22,452
#define SIGLEN_MAX	23,495
#define SIGLENBIT(24,535
#define GET_SIGLEN(25,582
typedef char *BITVECP;BITVECP30,726
#define LOOPBYTE(32,750
#define LOOPBIT(35,812
#define GETBYTE(39,948
#define GETBITBYTE(40,1016
#define CLRBIT(41,1074
#define SETBIT(42,1143
#define GETBIT(43,1212
#define HASHVAL(44,1279
#define HASH(45,1352
	int32		vl_len_;49,1439
	int32		flag;50,1503
	char		data[data51,1517
} GISTTYPE;52,1553
#define ALLISTRUE	54,1566
#define ISALLTRUE(56,1591
#define GTHDRSIZE	58,1650
#define CALCGTSIZE(59,1696
#define GETSIGN(61,1782
#define SUMBIT(63,1839
#define GETENTRY(74,2067
#define WISH_F(76,2151
crc32_sz(80,2313
ghstore_in(97,2554
ghstore_out(104,2648
ghstore_alloc(111,2755
ghstore_compress(141,3422
ghstore_decompress(206,4912
ghstore_same(212,5002
sizebitvec(246,5589
hemdistsign(260,5772
hemdist(274,5943
unionkey(290,6273
ghstore_union(303,6463
ghstore_penalty(330,7031
	OffsetNumber pos;346,7527
	int32		cost;347,7546
} SPLITCOST;348,7560
comparecost(351,7585
ghstore_picksplit(358,7710
ghstore_consistent(501,10807
ghstore_options(610,13395

/home/seinoyu/pgsql/master/postgresql/contrib/hstore/hstore_io.c,1497
PG_MODULE_MAGIC;22,430
	char	   *begin;begin30,543
	char	   *ptr;ptr31,560
	char	   *cur;cur32,575
	char	   *word;word33,590
	int			wordlen;34,606
	Pairs	   *pairs;pairs36,623
	int			pcur;37,641
	int			plen;38,654
} HSParser;39,667
#define RESIZEPRSBUF 41,680
#define GV_WAITVAL 53,980
#define GV_INVAL 54,1001
#define GV_INESCVAL 55,1020
#define GV_WAITESCIN 56,1042
#define GV_WAITESCESCIN 57,1065
get_val(60,1104
#define WKEY	176,3278
#define WVAL	177,3293
#define WEQ 178,3308
#define WGT 179,3322
#define WDEL	180,3336
parse_hstore(184,3365
comparePairs(289,5808
hstoreUniquePairs(319,6502
hstoreCheckKeyLen(367,7324
hstoreCheckValLen(377,7528
hstorePairs(388,7739
hstore_in(419,8242
hstore_recv(439,8576
hstore_from_text(502,9945
hstore_from_arrays(538,10559
hstore_from_array(658,13533
typedef struct ColumnIOData756,15906
	Oid			column_type;758,15936
	Oid			typiofunc;759,15956
	Oid			typioparam;760,15974
	FmgrInfo	proc;761,15993
} ColumnIOData;762,16009
typedef struct RecordIOData764,16026
	Oid			record_type;766,16056
	int32		record_typmod;767,16076
	void	   *domain_info;domain_info769,16171
	int			ncolumns;770,16231
	ColumnIOData columns[columns771,16248
} RecordIOData;772,16294
hstore_from_record(776,16358
hstore_populate_record(935,20252
cpw(1152,25742
hstore_out(1167,25959
hstore_send(1238,27421
hstore_to_json_loose(1284,28455
hstore_to_json(1339,29915
hstore_to_jsonb(1384,30947
hstore_to_jsonb_loose(1427,31888

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp-mpi-openssl.c,173
mpi_to_bn(39,1566
bn_to_mpi(56,1873
decide_k_bits(92,2786
pgp_elgamal_encrypt(101,2913
pgp_elgamal_decrypt(164,4092
pgp_rsa_encrypt(215,5058
pgp_rsa_decrypt(251,5658

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/px-crypt.h,153
#define _PX_CRYPT_H33,1453
#define PX_MAX_CRYPT 36,1500
#define PX_MAX_SALT_LEN	39,1565
#define PX_XDES_ROUNDS	43,1682
#define PX_BF_ROUNDS	46,1749

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/px-crypt.c,510
run_crypt_des(38,1519
run_crypt_md5(51,1755
run_crypt_bf(61,1924
struct px_crypt_algo70,2083
	char	   *id;id72,2106
	unsigned	id_len;73,2120
	char	   *(*crypt)crypt74,2138
			px_crypt_list[px_crypt_list79,2265
px_crypt(90,2482
struct generator112,2820
	char	   *name;name114,2839
	char	   *(*gen)gen115,2855
	int			input_len;117,2961
	int			def_rounds;118,2979
	int			min_rounds;119,2998
	int			max_rounds;120,3017
static struct generator gen_list[gen_list123,3040
px_gen_salt(132,3344

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp-decrypt.c,1667
#define NO_CTX_SIZE	38,1504
#define ALLOW_CTX_SIZE	39,1527
#define NO_COMPR	40,1552
#define ALLOW_COMPR	41,1572
#define NO_MDC	42,1595
#define NEED_MDC	43,1614
#define PKT_NORMAL 45,1635
#define PKT_STREAM 46,1656
#define PKT_CONTEXT 47,1677
#define MAX_CHUNK 49,1700
parse_new_len(52,1745
parse_old_len(95,2406
pgp_parse_pkt_hdr(129,2934
struct PktData168,3605
	int			type;170,3622
	int			len;171,3635
pktreader_pull(175,3662
pktreader_free(209,4289
static struct PullFilterOps pktreader_filter 217,4400
pgp_create_pkt_reader(223,4550
prefix_init(244,5003
static struct PullFilterOps prefix_filter 276,5706
decrypt_init(286,5819
decrypt_read(297,6002
struct PullFilterOps pgp_decrypt_filter 313,6280
mdc_init(323,6403
mdc_free(332,6571
mdc_finish(343,6723
mdc_read(395,7667
static struct PullFilterOps mdc_filter 418,8128
#define MDCBUF_LEN 431,8443
struct MDCBufData432,8467
	PGP_Context *ctx;ctx434,8487
	int			eof;435,8506
	int			buflen;436,8518
	int			avail;437,8533
	uint8	   *pos;pos438,8547
	int			mdc_avail;439,8563
	uint8		mdc_buf[mdc_buf440,8581
	uint8		buf[buf441,8602
mdcbuf_init(445,8642
mdcbuf_finish(463,8965
mdcbuf_load_data(488,9466
mdcbuf_load_mdc(498,9669
mdcbuf_refill(505,9817
mdcbuf_read(549,10716
mdcbuf_free(572,11084
static struct PullFilterOps mdcbuf_filter 582,11248
decrypt_key(591,11388
parse_symenc_sesskey(624,12037
copy_crlf(694,13361
parse_literal_data(744,14126
parse_compressed_data(818,15671
process_data_packets(872,16744
parse_symenc_data(978,18804
parse_symenc_mdc_data(1012,19500
pgp_skip_packet(1064,20514
pgp_expect_packet_end(1078,20717
pgp_decrypt(1093,20946

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp-info.c,183
read_pubkey_keyid(38,1520
read_pubenc_keyid(71,2052
static const char hextbl[hextbl87,2288
print_key(90,2349
static const uint8 any_key[any_key105,2551
pgp_get_keyid(112,2657

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp-pgsql.c,1303
convert_charset(67,2255
convert_from_utf8(84,2632
convert_to_utf8(90,2742
string_is_ascii(96,2848
clear_and_pfree(109,3002
struct debug_expect118,3114
	int			debug;120,3136
	int			expect;121,3150
	int			cipher_algo;122,3165
	int			s2k_mode;123,3185
	int			s2k_count;124,3202
	int			s2k_cipher_algo;125,3220
	int			s2k_digest_algo;126,3244
	int			compress_algo;127,3268
	int			use_sess_key;128,3290
	int			disable_mdc;129,3311
	int			unicode_mode;130,3331
fill_expect(134,3368
#define EX_MSG(149,3672
#define EX_CHECK(154,3818
check_expect(159,3931
show_debug(174,4252
set_arg(180,4340
getword(271,6921
downcase_convert(300,7433
parse_args(318,7676
create_mbuf_from_vardata(356,8307
init_work(363,8455
encrypt_internal(384,8868
decrypt_internal(470,10329
pgp_sym_encrypt_bytea(566,12006
pgp_sym_encrypt_text(588,12411
pgp_sym_decrypt_bytea(611,12816
pgp_sym_decrypt_text(633,13227
pgp_pub_encrypt_bytea(659,13682
pgp_pub_encrypt_text(681,14087
pgp_pub_decrypt_bytea(704,14492
pgp_pub_decrypt_text(731,15021
parse_key_value_arrays(767,15749
pg_armor(857,18135
pg_dearmor(895,18962
	int			nheaders;923,19526
	char	  **keys;keys924,19543
	char	  **values;values925,19559
} pgp_armor_headers_state;926,19577
pgp_armor_headers(929,19611
pgp_key_id_w(999,21380

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/crypt-gensalt.c,307
typedef unsigned int BF_word;19,485
static unsigned char _crypt_itoa64[_crypt_itoa6421,516
_crypt_gensalt_traditional_rn(25,637
_crypt_gensalt_extended_rn(43,1055
_crypt_gensalt_md5_rn(79,2112
static unsigned char BF_itoa64[BF_itoa64120,3256
BF_encode(124,3378
_crypt_gensalt_blowfish_rn(161,4027

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp-pubdec.c,163
check_eme_pkcs1_v15(42,1595
control_cksum(74,2039
decrypt_elgamal(97,2453
decrypt_rsa(124,2928
			any_key[any_key147,3382
pgp_parse_pubenc_sesskey(150,3428

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp-pubkey.c,317
pgp_key_alloc(38,1515
pgp_key_free(49,1658
calc_key_id(85,2451
_pgp_read_public_key(159,3992
#define HIDE_CLEAR 249,5563
#define HIDE_CKSUM 250,5584
#define HIDE_SHA1 251,5607
check_key_sha1(254,5641
check_key_cksum(300,6568
process_secret_key(338,7429
internal_read_key(459,9870
pgp_set_pubkey(566,11703

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp.h,3841
enum PGP_S2K_TYPE37,1484
	PGP_S2K_SIMPLE 39,1504
	PGP_S2K_SALTED 40,1525
	PGP_S2K_ISALTED 41,1546
enum PGP_PKT_TYPE44,1571
	PGP_PKT_RESERVED 46,1591
	PGP_PKT_PUBENCRYPTED_SESSKEY 47,1614
	PGP_PKT_SIGNATURE 48,1649
	PGP_PKT_SYMENCRYPTED_SESSKEY 49,1673
	PGP_PKT_SECRET_KEY 50,1708
	PGP_PKT_PUBLIC_KEY 51,1733
	PGP_PKT_SECRET_SUBKEY 52,1758
	PGP_PKT_COMPRESSED_DATA 53,1786
	PGP_PKT_SYMENCRYPTED_DATA 54,1816
	PGP_PKT_MARKER 55,1848
	PGP_PKT_LITERAL_DATA 56,1870
	PGP_PKT_TRUST 57,1898
	PGP_PKT_USER_ID 58,1919
	PGP_PKT_PUBLIC_SUBKEY 59,1942
	PGP_PKT_USER_ATTR 60,1971
	PGP_PKT_SYMENCRYPTED_DATA_MDC 61,1996
	PGP_PKT_MDC 62,2033
	PGP_PKT_PRIV_61 63,2052
enum PGP_PUB_ALGO_TYPE66,2107
	PGP_PUB_RSA_ENCRYPT_SIGN 68,2132
	PGP_PUB_RSA_ENCRYPT 69,2163
	PGP_PUB_RSA_SIGN 70,2189
	PGP_PUB_ELG_ENCRYPT 71,2212
	PGP_PUB_DSA_SIGN 72,2239
enum PGP_SYMENC_TYPE75,2266
	PGP_SYM_PLAIN 77,2289
	PGP_SYM_IDEA 78,2320
	PGP_SYM_DES3 79,2372
	PGP_SYM_CAST5 80,2404
	PGP_SYM_BLOWFISH 81,2439
	PGP_SYM_SAFER_SK128 82,2462
	PGP_SYM_DES_SK 83,2503
	PGP_SYM_AES_128 84,2541
	PGP_SYM_AES_192 85,2577
	PGP_SYM_AES_256 86,2599
	PGP_SYM_TWOFISH 87,2621
enum PGP_COMPR_TYPE90,2647
	PGP_COMPR_NONE 92,2669
	PGP_COMPR_ZIP 93,2703
	PGP_COMPR_ZLIB 94,2738
	PGP_COMPR_BZIP2 95,2759
enum PGP_DIGEST_TYPE98,2784
	PGP_DIGEST_MD5 100,2807
	PGP_DIGEST_SHA1 101,2856
	PGP_DIGEST_RIPEMD160 102,2890
	PGP_DIGEST_XSHA 103,2917
	PGP_DIGEST_MD2 104,2955
	PGP_DIGEST_TIGER192 105,2993
	PGP_DIGEST_HAVAL5_160 106,3034
	PGP_DIGEST_SHA256 107,3077
	PGP_DIGEST_SHA384 108,3101
	PGP_DIGEST_SHA512 109,3125
#define PGP_MAX_KEY 112,3153
#define PGP_MAX_BLOCK 113,3184
#define PGP_MAX_DIGEST 114,3215
#define PGP_S2K_SALT 115,3246
typedef struct PGP_MPI PGP_MPI;117,3272
typedef struct PGP_PubKey PGP_PubKey;118,3304
typedef struct PGP_Context PGP_Context;119,3342
typedef struct PGP_S2K PGP_S2K;120,3382
struct PGP_S2K122,3415
	uint8		mode;124,3432
	uint8		digest_algo;125,3446
	uint8		salt[salt126,3467
	uint8		iter;127,3484
	uint8		key[key129,3551
	uint8		key_len;130,3577
struct PGP_Context134,3599
	PGP_S2K		s2k;139,3644
	int			s2k_mode;140,3659
	int			s2k_count;141,3676
	int			s2k_digest_algo;142,3722
	int			s2k_cipher_algo;143,3746
	int			cipher_algo;144,3770
	int			compress_algo;145,3790
	int			compress_level;146,3812
	int			disable_mdc;147,3835
	int			use_sess_key;148,3855
	int			text_mode;149,3876
	int			convert_crlf;150,3894
	int			unicode_mode;151,3915
	int			mdc_checked;156,3969
	int			corrupt_prefix;157,3989
	int			unsupported_compr;158,4055
	int			unexpected_binary;159,4109
	int			in_mdc_pkt;160,4171
	int			use_mdcbuf_filter;161,4190
	PX_MD	   *mdc_ctx;mdc_ctx162,4216
	PGP_PubKey *pub_key;pub_key164,4237
	const uint8 *sym_key;sym_key165,4278
	int			sym_key_len;166,4328
	uint8		sess_key[sess_key171,4385
	unsigned	sess_key_len;172,4416
#define s2k_decode_count(176,4472
struct PGP_MPI179,4560
	uint8	   *data;data181,4577
	int			bits;182,4594
	int			bytes;183,4607
struct PGP_PubKey186,4625
	uint8		ver;188,4645
	uint8		time[time189,4658
	uint8		algo;190,4675
			PGP_MPI    *p;p197,4732
			PGP_MPI    *g;g198,4750
			PGP_MPI    *y;y199,4768
		}			elg;200,4786
			PGP_MPI    *n;n203,4810
			PGP_MPI    *e;e204,4828
		}			rsa;205,4846
			PGP_MPI    *p;p208,4870
			PGP_MPI    *q;q209,4888
			PGP_MPI    *g;g210,4906
			PGP_MPI    *y;y211,4924
		}			dsa;212,4942
	}			pub;213,4953
			PGP_MPI    *x;x220,5006
		}			elg;221,5024
			PGP_MPI    *d;d224,5048
			PGP_MPI    *p;p225,5066
			PGP_MPI    *q;q226,5084
			PGP_MPI    *u;u227,5102
		}			rsa;228,5120
			PGP_MPI    *x;x231,5144
		}			dsa;232,5162
	}			sec;233,5173
	uint8		key_id[key_id235,5184
	int			can_encrypt;236,5203
typedef struct PGP_CFB PGP_CFB;280,6946

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/crypt-md5.c,114
#define MD5_SIZE 14,250
static const char _crypt_a64[_crypt_a6416,271
_crypt_to64(20,385
px_crypt_md5(34,533

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgcrypto.c,329
PG_MODULE_MAGIC;43,1633
typedef int (*PFN)PFN47,1672
pg_digest(54,1893
pg_hmac(90,2615
pg_gen_salt(133,3484
pg_gen_salt_rounds(155,4002
pg_crypt(178,4564
pg_encrypt(217,5297
pg_decrypt(266,6357
pg_encrypt_iv(314,7412
pg_decrypt_iv(368,8612
pg_random_bytes(422,9795
pg_random_uuid(446,10316
find_provider(453,10438

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/mbuf.c,1368
#define STEP 37,1481
struct MBuf39,1506
	uint8	   *data;data41,1520
	uint8	   *data_end;data_end42,1537
	uint8	   *read_pos;read_pos43,1558
	uint8	   *buf_end;buf_end44,1579
	bool		no_write;45,1599
	bool		own_data;46,1616
mbuf_avail(50,1641
mbuf_size(56,1714
mbuf_tell(62,1782
mbuf_free(68,1850
prepare_room(80,2022
mbuf_append(100,2470
mbuf_create(117,2709
mbuf_create_from_data(137,3006
mbuf_grab(155,3305
mbuf_rewind(168,3506
mbuf_steal_data(175,3580
struct PullFilter193,3840
	PullFilter *src;src195,3860
	const PullFilterOps *op;op196,3878
	int			buflen;197,3904
	uint8	   *buf;buf198,3919
	int			pos;199,3935
	void	   *priv;priv200,3947
pullf_create(204,3971
pullf_free(243,4529
pullf_read(260,4786
pullf_read_max(277,5089
pullf_read_fixed(315,5762
pull_from_mbuf(337,6116
static const struct PullFilterOps mbuf_reader 345,6280
pullf_create_mbuf_reader(350,6366
struct PushFilter360,6502
	PushFilter *next;next362,6522
	const PushFilterOps *op;op363,6541
	int			block_size;364,6567
	uint8	   *buf;buf365,6586
	int			pos;366,6602
	void	   *priv;priv367,6614
pushf_create(371,6638
pushf_free(410,7212
pushf_free_all(426,7423
wrap_process(439,7555
pushf_write(454,7855
pushf_flush(514,8744
push_into_mbuf(544,9090
static const struct PushFilterOps mbuf_filter 554,9285
pushf_create_mbuf_writer(559,9377

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/internal-sha2.c,741
int_sha224_len(47,1671
int_sha224_block_len(53,1750
int_sha224_update(59,1830
int_sha224_reset(67,1996
int_sha224_finish(75,2113
int_sha224_free(83,2249
int_sha256_len(95,2423
int_sha256_block_len(101,2502
int_sha256_update(107,2582
int_sha256_reset(115,2748
int_sha256_finish(123,2865
int_sha256_free(131,3001
int_sha384_len(143,3175
int_sha384_block_len(149,3254
int_sha384_update(155,3334
int_sha384_reset(163,3500
int_sha384_finish(171,3617
int_sha384_free(179,3753
int_sha512_len(191,3927
int_sha512_block_len(197,4006
int_sha512_update(203,4086
int_sha512_reset(211,4252
int_sha512_finish(219,4369
int_sha512_free(227,4505
init_sha224(239,4676
init_sha256(259,5031
init_sha384(279,5386
init_sha512(299,5741

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/blf.c,594
#define GET_32BIT_MSB_FIRST(44,1590
#define PUT_32BIT_MSB_FIRST(47,1688
static const uint32 parray[parray58,1948
static const uint32 sbox0[sbox064,2204
static const uint32 sbox1[sbox1110,5355
static const uint32 sbox2[sbox2156,8506
static const uint32 sbox3[sbox3202,11657
#define Fprime(248,14808
#define F(249,14872
#define ROUND(250,14951
blowfish_encrypt(253,15029
blowfish_decrypt(287,15514
blowfish_encrypt_cbc(321,15992
blowfish_decrypt_cbc(354,16499
blowfish_encrypt_ecb(387,17004
blowfish_decrypt_ecb(408,17369
blowfish_setkey(429,17734
blowfish_setiv(495,19040

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp-mpi.c,162
pgp_mpi_alloc(37,1494
pgp_mpi_create(56,1851
pgp_mpi_free(70,2058
pgp_mpi_read(80,2197
pgp_mpi_write(105,2593
pgp_mpi_hash(119,2830
pgp_mpi_cksum(132,3024

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp-mpi-internal.c,253
mp_new(38,1535
mp_clear_free(47,1638
mp_px_rand(57,1739
mp_modmul(87,2212
mpi_to_bn(97,2383
bn_to_mpi(116,2722
decide_k_bits(154,3693
pgp_elgamal_encrypt(163,3820
pgp_elgamal_decrypt(213,4807
pgp_rsa_encrypt(251,5563
pgp_rsa_decrypt(279,6035

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/blf.h,164
	uint32		S0[S032,1404
				S1[S133,1422
				S2[S234,1435
				S3[S335,1448
				P[P36,1461
	uint32		iv0,37,1472
				iv1;38,1486
} BlowfishContext;39,1516

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp-encrypt.c,1119
#define MDC_DIGEST_LEN 40,1523
#define STREAM_ID 41,1549
#define STREAM_BLOCK_SHIFT	42,1572
render_newlen(45,1618
write_tag_only(68,1955
write_normal_header(76,2074
mdc_init(92,2293
mdc_write(106,2495
mdc_flush(115,2668
mdc_free(135,3035
static const PushFilterOps mdc_filter 142,3101
#define ENCBUF 150,3221
struct EncStat151,3241
	PGP_CFB    *ciph;ciph153,3258
	uint8		buf[buf154,3277
encrypt_init(158,3313
encrypt_process(190,3908
encrypt_free(215,4348
static const PushFilterOps encrypt_filter 225,4494
struct PktStreamStat233,4628
	int			final_done;235,4651
	int			pkt_block;236,4670
pkt_stream_init(240,4703
pkt_stream_process(253,4943
pkt_stream_flush(279,5398
pkt_stream_free(299,5747
static const PushFilterOps pkt_stream_filter 307,5861
pgp_create_pkt_writer(312,5990
crlf_process(328,6243
static const PushFilterOps crlf_filter 367,6894
init_litdata_packet(375,7025
init_compress(430,7913
init_encdata_packet(458,8414
write_prefix(479,8780
symencrypt_sesskey(502,9240
write_symenc_sesskey(522,9700
init_s2k_key(563,10401
init_sess_key(579,10749
pgp_encrypt(600,11124

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/md5.h,617
#define _NETINET6_MD5_H_34,1690
#define MD5_BUFLEN	36,1716
		uint32		md5_state32[md5_state3242,1766
		uint8		md5_state8[md5_state843,1792
	}			md5_st;44,1817
#define md5_sta	46,1831
#define md5_stb	47,1870
#define md5_stc	48,1909
#define md5_std	49,1948
#define md5_st8	50,1987
		uint64		md5_count64;54,2033
		uint8		md5_count8[md5_count855,2056
	}			md5_count;56,2080
#define md5_n	57,2096
#define md5_n8	58,2132
	unsigned int md5_i;60,2169
	uint8		md5_buf[md5_buf61,2190
} md5_ctxt;62,2219
#define MD5_CTX	70,2428
#define MD5Init(71,2454
#define MD5Update(72,2487
#define MD5Final(73,2538

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/crypt-des.c,1623
#define _PASSWORD_EFMT1 69,2951
static const char _crypt_a64[_crypt_a6471,2980
static uint8 IP[IP74,3082
static uint8 inv_key_perm[inv_key_perm81,3360
static uint8 u_key_perm[u_key_perm82,3391
static uint8 key_perm[key_perm83,3420
static uint8 key_shifts[key_shifts90,3673
static uint8 inv_comp_perm[inv_comp_perm94,3757
static uint8 comp_perm[comp_perm95,3789
static uint8 u_sbox[u_sbox106,4088
static uint8 sbox[sbox107,4116
static uint8 un_pbox[un_pbox158,5988
static uint8 pbox[pbox159,6014
static uint32 _crypt_bits32[_crypt_bits32164,6164
static uint8 _crypt_bits8[_crypt_bits8176,6595
static uint32 saltbits;178,6677
static long old_salt;179,6701
static uint32 *bits28,bits28180,6723
		   *bits24;bits24181,6746
static uint8 init_perm[init_perm182,6760
			final_perm[final_perm183,6788
static uint32 en_keysl[en_keysl184,6807
			en_keysr[en_keysr185,6835
static uint32 de_keysl[de_keysl186,6852
			de_keysr[de_keysr187,6880
static int	des_initialised 188,6897
static uint8 m_sbox[m_sbox189,6929
static uint32 psbox[psbox190,6959
static uint32 ip_maskl[ip_maskl191,6988
			ip_maskr[ip_maskr192,7020
static uint32 fp_maskl[fp_maskl193,7041
			fp_maskr[fp_maskr194,7073
static uint32 key_perm_maskl[key_perm_maskl195,7094
			key_perm_maskr[key_perm_maskr196,7132
static uint32 comp_maskl[comp_maskl197,7159
			comp_maskr[comp_maskr198,7193
static uint32 old_rawkey0,199,7216
			old_rawkey1;200,7243
ascii_to_bin(203,7278
des_init(221,7530
setup_salt(373,10650
des_setkey(396,10933
do_des(483,13217
des_cipher(617,15912
px_crypt_des(651,16541

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/mbuf.h,540
#define __PX_MBUF_H33,1443
typedef struct MBuf MBuf;35,1464
typedef struct PushFilter PushFilter;36,1490
typedef struct PullFilter PullFilter;37,1528
typedef struct PushFilterOps PushFilterOps;38,1566
typedef struct PullFilterOps PullFilterOps;39,1610
struct PushFilterOps41,1655
	int			(*init)init47,1799
	int			(*push)push53,1987
	int			(*flush)flush55,2068
	void		(*free)free56,2116
struct PullFilterOps59,2149
	int			(*init)init65,2293
	int			(*pull)pull71,2491
	void		(*free)free73,2593
#define GETBYTE(115,3841

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/rijndael.h,377
#define _RIJNDAEL_H_21,863
typedef uint8 u1byte;25,946
typedef uint16 u2byte;26,1009
typedef uint32 u4byte;27,1071
typedef int8 s1byte;29,1134
typedef int16 s2byte;30,1194
typedef int32 s4byte;31,1254
typedef struct _rijndael_ctx33,1315
	u4byte		k_len;35,1346
	int			decrypt;36,1362
	u4byte		e_key[e_key37,1378
	u4byte		d_key[d_key38,1398
} rijndael_ctx;39,1418

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp-armor.c,475
static const unsigned char _base64[_base6441,1515
pg_base64_encode(45,1634
pg_base64_decode(95,2426
pg_base64_enc_len(163,3549
pg_base64_dec_len(172,3728
static const char *armor_header armor_header181,3816
static const char *armor_footer armor_footer182,3883
#define CRC24_INIT 185,3991
#define CRC24_POLY 186,4022
crc24(188,4065
pgp_armor_encode(207,4320
find_str(243,5375
find_header(266,5785
pgp_armor_decode(314,6824
pgp_extract_armor_headers(390,8477

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/internal.c,1636
#define MD5_DIGEST_LENGTH 43,1594
#define SHA1_DIGEST_LENGTH 48,1680
#define SHA1_DIGEST_LENGTH 50,1728
#define SHA1_BLOCK_SIZE 54,1773
#define MD5_BLOCK_SIZE 55,1800
struct int_digest65,2010
	char	   *name;name67,2030
	void		(*init)init68,2046
			int_digest_list[int_digest_list72,2108
int_md5_len(85,2324
int_md5_block_len(91,2394
int_md5_update(97,2463
int_md5_reset(105,2610
int_md5_finish(113,2708
int_md5_free(121,2825
int_sha1_len(133,2985
int_sha1_block_len(139,3057
int_sha1_update(145,3128
int_sha1_reset(153,3278
int_sha1_finish(161,3379
int_sha1_free(169,3499
init_md5(181,3667
init_sha1(201,4005
#define INT_MAX_KEY	224,4367
#define INT_MAX_IV	225,4396
struct int_ctx227,4425
	uint8		keybuf[keybuf229,4442
	uint8		iv[iv230,4471
		BlowfishContext bf;233,4505
		rijndael_ctx rj;234,4527
	}			ctx;235,4546
	unsigned	keylen;236,4556
	int			is_init;237,4574
	int			mode;238,4590
intctx_free(242,4619
#define MODE_ECB 258,4799
#define MODE_CBC 259,4818
rj_block_size(262,4854
rj_key_size(268,4920
rj_iv_size(274,4984
rj_init(280,5042
rj_real_init(302,5447
rj_encrypt(309,5576
rj_decrypt(339,6077
rj_load(371,6605
bf_block_size(400,7038
bf_key_size(406,7098
bf_iv_size(412,7162
bf_init(418,7214
bf_encrypt(430,7450
bf_decrypt(455,7900
bf_load(480,8358
rj_128_ecb(506,8788
rj_128_cbc(512,8856
bf_ecb_load(518,8924
bf_cbc_load(524,8993
struct int_cipher529,9043
	char	   *name;name531,9063
	PX_Cipher  *(*load)load532,9079
			int_ciphers[int_ciphers536,9143
static const PX_Alias int_aliases[int_aliases544,9294
px_find_digest(559,9600
px_find_cipher(578,9882

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/rijndael.c,1371
#define PRE_CALC_TABLES50,1570
#define LARGE_TABLES51,1594
#define rotr(59,1754
#define rotl(60,1821
#define bswap(64,1941
#define byte(68,2088
#define io_swap(71,2159
#define io_swap(73,2193
#undef PRE_CALC_TABLES77,2242
#define tab_gen	83,2321
static u1byte pow_tab[pow_tab86,2376
static u1byte log_tab[log_tab87,2404
static u1byte sbx_tab[sbx_tab88,2432
static u1byte isb_tab[isb_tab89,2460
static u4byte rco_tab[rco_tab90,2488
static u4byte ft_tab[ft_tab91,2515
static u4byte it_tab[it_tab92,2545
static u4byte fl_tab[fl_tab95,2596
static u4byte il_tab[il_tab96,2626
static u4byte tab_gen 99,2664
#define ff_mult(102,2728
#define f_rn(104,2810
#define i_rn(110,3045
#define ls_box(118,3300
#define f_rl(124,3442
#define i_rl(130,3677
#define ls_box(137,3918
#define f_rl(143,4109
#define i_rl(149,4401
gen_tabs(157,4712
#define star_x(257,6713
#define imix_col(259,6795
#define loop4(273,7073
#define loop6(281,7355
#define loop8(291,7759
rijndael_set_key(305,8308
#define f_nround(369,9417
#define f_lround(378,9578
rijndael_encrypt(387,9729
#define i_nround(433,10612
#define i_lround(442,10773
rijndael_decrypt(451,10924
aes_set_key(504,12001
aes_ecb_encrypt(513,12165
aes_ecb_decrypt(529,12379
aes_cbc_encrypt(545,12593
aes_cbc_decrypt(567,12927
show256u8(608,13559
show4x256u32(624,13809
main(645,14160

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/md5.c,820
#define SHIFT(40,1730
#define F(42,1788
#define G(43,1836
#define H(44,1884
#define I(45,1921
#define ROUND1(47,1962
#define ROUND2(54,2117
#define ROUND3(61,2272
#define ROUND4(68,2427
#define Sa	75,2582
#define Sb	76,2596
#define Sc	77,2610
#define Sd	78,2624
#define Se	80,2639
#define Sf	81,2653
#define Sg	82,2667
#define Sh	83,2681
#define Si	85,2696
#define Sj	86,2710
#define Sk	87,2724
#define Sl	88,2738
#define Sm	90,2753
#define Sn	91,2767
#define So	92,2781
#define Sp	93,2795
#define MD5_A0	95,2810
#define MD5_B0	96,2836
#define MD5_C0	97,2862
#define MD5_D0	98,2888
static const uint32 T[T101,2990
static const uint8 md5_paddat[md5_paddat124,3813
md5_init(138,4121
md5_loop(150,4342
md5_pad(177,4873
md5_result(215,5762
static uint32 X[X241,6438
md5_calc(245,6479

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/sha1.h,439
#define _NETINET6_SHA1_H_39,1869
struct sha1_ctxt41,1896
		uint8		b8[b845,1925
		uint32		b32[b3246,1942
	}			h;47,1960
		uint8		b8[b850,1978
		uint64		b64[b6451,1994
	}			c;52,2012
		uint8		b8[b855,2030
		uint32		b32[b3256,2047
	}			m;57,2066
	uint8		count;58,2074
typedef struct sha1_ctxt SHA1_CTX;67,2348
#define SHA1Init(69,2384
#define SHA1Update(70,2420
#define SHA1Final(71,2473
#define SHA1_RESULTLEN	73,2521

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/imath.c,3689
#undef assert72,2829
#define assert(73,2843
const mp_result MP_OK 75,2878
const mp_result MP_FALSE 76,2935
const mp_result MP_TRUE 77,2994
const mp_result MP_MEMORY 78,3053
const mp_result MP_RANGE 79,3114
const mp_result MP_UNDEF 80,3174
const mp_result MP_TRUNC 81,3234
const mp_result MP_BADARG 82,3294
const mp_result MP_MINERR 83,3355
const mp_sign MP_NEG 85,3388
const mp_sign MP_ZPOS 86,3448
static const char *s_unknown_err s_unknown_err88,3510
static const char *s_error_msg[s_error_msg89,3568
static const double s_log2[s_log2105,4171
#define MP_VALUE_DIGITS(119,4949
s_round_prec(124,5110
ZERO(131,5223
COPY(141,5403
REV(152,5624
CLAMP(168,5861
#undef MIN179,6039
#undef MAX180,6050
MIN(182,6079
MAX(187,6148
#define SWAP(194,6311
#define DECLARE_TEMP(206,6642
#define CLEANUP_TEMP(222,7244
#define TEMP(234,7676
#define REQUIRE(240,7905
CMPZ(248,8137
UPPER_HALF(256,8269
LOWER_HALF(261,8347
HIGH_BIT_SET(268,8471
ADD_WILL_OVERFLOW(275,8608
static mp_size default_precision 281,8743
mp_int_default_precision(284,8787
static mp_size multiply_threshold 291,8937
mp_int_multiply_threshold(294,8983
GROW(313,9569
UMUL(438,14420
USQR(452,14761
mp_int_init(464,14956
mp_int_alloc(479,15135
mp_int_init_size(490,15262
mp_int_init_copy(520,15646
mp_int_init_value(547,16052
mp_int_init_uvalue(557,16231
mp_int_set_value(567,16416
mp_int_set_uvalue(577,16589
mp_int_clear(587,16763
mp_int_free(602,16938
mp_int_copy(611,17056
mp_int_swap(636,17369
mp_int_zero(653,17604
mp_int_abs(663,17715
mp_int_neg(677,17903
mp_int_add(693,18119
mp_int_add_value(767,19423
mp_int_sub(778,19609
mp_int_sub_value(846,20676
mp_int_mul(857,20862
mp_int_mul_value(923,22287
mp_int_mul_pow2(934,22473
mp_int_sqr(954,22737
mp_int_div(1002,23648
mp_int_mod(1122,25482
mp_int_div_value(1141,25771
mp_int_div_pow2(1159,26094
mp_int_expt(1179,26440
mp_int_expt_value(1210,26858
mp_int_expt_full(1241,27289
mp_int_compare(1274,27866
mp_int_compare_unsigned(1308,28300
mp_int_compare_zero(1316,28409
mp_int_compare_value(1335,28606
mp_int_compare_uvalue(1354,28884
mp_int_exptmod(1369,29049
mp_int_exptmod_evalue(1407,29718
mp_int_exptmod_bvalue(1418,29926
mp_int_exptmod_known(1429,30134
mp_int_redux_const(1466,30726
mp_int_invmod(1474,30846
mp_int_gcd(1514,31718
mp_int_egcd(1593,33104
mp_int_lcm(1716,35573
mp_int_divisible_value(1738,36083
mp_int_is_pow2(1750,36247
mp_int_root(1762,36493
mp_int_to_int(1822,37717
mp_int_to_uint(1853,38287
mp_int_to_string(1883,38785
mp_int_string_len(1948,39737
mp_int_read_string(1964,40068
mp_int_read_cstring(1970,40194
mp_int_count_bits(2038,41442
mp_int_to_binary(2061,41716
mp_int_read_binary(2077,42004
mp_int_binary_len(2116,42803
mp_int_to_unsigned(2137,43192
mp_int_read_unsigned(2147,43383
mp_int_unsigned_len(2171,43852
mp_error_string(2184,44036
static const mp_digit fill 2209,44467
s_alloc(2213,44553
s_realloc(2227,44766
s_free(2247,45128
s_pad(2253,45178
s_fake(2280,45653
s_ufake(2290,45838
s_cdig(2301,46049
s_uvpack(2322,46324
s_ucmp(2342,46565
s_vcmp(2362,46788
s_uvcmp(2377,47036
s_uadd(2387,47194
s_usub(2422,47907
s_kmul(2458,48736
s_umul(2553,51350
s_ksqr(2582,51806
s_usqr(2645,53187
s_dadd(2707,54220
s_dmul(2733,54576
s_dbmul(2755,54857
s_ddiv(2773,55118
s_qdiv(2802,55484
s_qmod(2857,56219
s_qmul(2873,56485
s_qsub(2953,57829
s_dp2k(2984,58403
s_isp2(3010,58659
s_2expt(3038,58948
s_norm(3059,59243
s_brmu(3081,59592
s_reduce(3093,59775
s_embar(3149,61047
s_udiv_knuth(3248,63441
s_outlen(3454,69076
s_inlen(3465,69291
s_ch2val(3474,69485
s_val2ch(3495,70011
s_2comp(3519,70242
s_tobin(3538,70498

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/imath.h,999
#define IMATH_H_28,1261
typedef unsigned char mp_sign;32,1300
typedef unsigned int mp_size;33,1331
typedef int mp_result;34,1361
typedef long mp_small;35,1384
typedef unsigned long mp_usmall;36,1437
typedef uint16 mp_digit;41,1571
typedef uint32 mp_word;42,1596
#define MP_DIGIT_MAX 43,1620
#define MP_WORD_MAX 44,1664
typedef uint32 mp_digit;46,1714
typedef uint64 mp_word;47,1739
#define MP_DIGIT_MAX 48,1763
#define MP_WORD_MAX 49,1818
	mp_digit	single;54,1881
	mp_digit   *digits;digits55,1899
	mp_size		alloc;56,1920
	mp_size		used;57,1937
	mp_sign		sign;58,1953
		   *mp_int;mp_int61,1983
MP_DIGITS(64,2023
MP_ALLOC(69,2088
MP_USED(74,2151
MP_SIGN(79,2212
#define MP_DIGIT_BIT 94,2549
#define MP_WORD_BIT 95,2602
#define MP_SMALL_MIN 96,2654
#define MP_SMALL_MAX 97,2686
#define MP_USMALL_MAX 98,2718
#define MP_MIN_RADIX 100,2752
#define MP_MAX_RADIX 101,2777
mp_int_is_odd(122,3604
mp_int_is_even(129,3759
mp_int_mod_value(249,8495
mp_int_sqrt(335,12040

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp.c,1543
static int	def_cipher_algo 40,1496
static int	def_s2k_cipher_algo 41,1542
static int	def_s2k_mode 42,1579
static int	def_s2k_count 43,1622
static int	def_s2k_digest_algo 44,1653
static int	def_compress_algo 45,1703
static int	def_compress_level 46,1750
static int	def_disable_mdc 47,1785
static int	def_use_sess_key 48,1817
static int	def_text_mode 49,1850
static int	def_unicode_mode 50,1880
static int	def_convert_crlf 51,1913
struct digest_info53,1947
	const char *name;name55,1968
	int			code;56,1987
struct cipher_info59,2004
	const char *name;name61,2025
	int			code;62,2044
	const char *int_name;int_name63,2057
	int			key_len;64,2080
	int			block_len;65,2096
static const struct digest_info digest_list[digest_list68,2118
static const struct cipher_info cipher_list[cipher_list79,2400
get_cipher_info(93,3027
pgp_get_digest_code(104,3180
pgp_get_cipher_code(115,3389
pgp_get_digest_name(126,3609
pgp_get_cipher_name(137,3781
pgp_get_cipher_key_size(147,3923
pgp_get_cipher_block_size(157,4069
pgp_load_cipher(167,4219
pgp_load_digest(183,4491
pgp_init(199,4746
pgp_free(224,5355
pgp_disable_mdc(234,5499
pgp_set_sess_key(241,5603
pgp_set_convert_crlf(248,5701
pgp_set_s2k_mode(255,5805
pgp_set_s2k_count(274,6070
pgp_set_compress_algo(285,6280
pgp_set_compress_level(300,6523
pgp_set_text_mode(311,6692
pgp_set_cipher_algo(318,6782
pgp_set_s2k_cipher_algo(329,6956
pgp_set_s2k_digest_algo(340,7138
pgp_get_unicode_mode(351,7320
pgp_set_unicode_mode(357,7395
pgp_set_symkey(364,7499

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/px-hmac.c,230
#define HMAC_IPAD 36,1464
#define HMAC_OPAD 37,1487
hmac_result_size(40,1527
hmac_block_size(46,1611
hmac_init(52,1689
hmac_reset(85,2231
hmac_update(95,2384
hmac_finish(101,2493
hmac_free(125,2867
px_find_hmac(143,3105

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp-pubenc.c,153
pad_eme_pkcs1_v15(40,1574
create_secmsg(83,2249
encrypt_and_write_elgamal(133,3189
encrypt_and_write_rsa(164,3733
pgp_write_pubenc_sesskey(190,4159

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/sha1.c,356
static uint32 _K[_K46,1930
#define K(48,2002
#define F0(50,2029
#define F1(51,2080
#define F2(52,2120
#define F3(53,2182
#define S(55,2223
#define H(57,2278
#define COUNT	58,2310
#define BCOUNT	59,2338
#define W(60,2374
#define PUTPAD(62,2407
sha1_step(74,2621
sha1_init(219,6196
sha1_pad(230,6384
sha1_loop(273,7270
sha1_result(301,7798

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp-cfb.c,509
typedef int (*mix_data_t)mix_data_t37,1511
struct PGP_CFB39,1594
	PX_Cipher  *ciph;ciph41,1611
	int			block_size;42,1630
	int			pos;43,1649
	int			block_no;44,1661
	int			resync;45,1678
	uint8		fr[fr46,1693
	uint8		fre[fre47,1720
	uint8		encbuf[encbuf48,1748
pgp_cfb_create(52,1787
pgp_cfb_free(84,2351
mix_encrypt_normal(95,2546
mix_decrypt_normal(106,2775
mix_encrypt_resync(126,3201
mix_decrypt_resync(158,3851
cfb_process(198,4599
pgp_cfb_encrypt(251,5424
pgp_cfb_decrypt(259,5624

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp-s2k.c,179
calc_s2k_simple(38,1502
calc_s2k_salted(82,2197
calc_s2k_iter_salted(126,2933
decide_s2k_iter(209,4495
pgp_s2k_fill(223,4783
pgp_s2k_read(253,5380
pgp_s2k_process(279,5797

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgp-compress.c,780
#define ZIP_OUT_BUF 45,1576
#define ZIP_IN_BLOCK 46,1601
struct ZipStat48,1628
	uint8		type;50,1645
	int			buf_len;51,1659
	int			hdr_done;52,1675
	z_stream	stream;53,1692
	uint8		buf[buf54,1710
z_alloc(58,1754
z_free(64,1866
compress_init(70,1929
compress_process(108,2760
compress_flush(140,3374
compress_free(171,3959
			compress_filter 181,4118
pgp_compress_filter(186,4213
struct DecomprData194,4367
	int			buf_len;196,4388
	int			buf_data;197,4425
	uint8	   *pos;pos198,4464
	z_stream	stream;199,4480
	int			eof;200,4498
	uint8		buf[buf201,4510
decompress_init(205,4551
decompress_read(238,5242
decompress_free(315,7023
			decompress_filter 325,7193
pgp_decompress_filter(330,7277
pgp_compress_filter(337,7447
pgp_decompress_filter(343,7564

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/openssl.c,2764
#define MAX_KEY	45,1652
#define MAX_IV	46,1677
typedef struct OSSLDigest57,1923
	const EVP_MD *algo;algo59,1951
	EVP_MD_CTX *ctx;ctx60,1972
	ResourceOwner owner;62,1991
	struct OSSLDigest *next;next63,2013
	struct OSSLDigest *prev;prev64,2039
} OSSLDigest;65,2065
static OSSLDigest *open_digests open_digests67,2080
static bool digest_resowner_callback_registered 68,2120
free_openssl_digest(71,2190
digest_free_callback(87,2497
digest_result_size(114,2986
digest_block_size(122,3122
digest_reset(130,3259
digest_update(138,3400
digest_finish(146,3567
digest_free(154,3713
static int	px_openssl_initialized 162,3831
px_find_digest(167,3899
typedef const EVP_CIPHER *(*ossl_EVP_cipher_func)ossl_EVP_cipher_func240,5416
struct ossl_cipher245,5548
	int			(*init)init247,5569
	ossl_EVP_cipher_func cipher_func;248,5650
	int			block_size;249,5685
	int			max_key_size;250,5704
typedef struct OSSLCipher261,6064
	EVP_CIPHER_CTX *evp_ctx;evp_ctx263,6092
	const EVP_CIPHER *evp_ciph;evp_ciph264,6118
	uint8		key[key265,6147
	uint8		iv[iv266,6169
	unsigned	klen;267,6189
	unsigned	init;268,6205
	const struct ossl_cipher *ciph;ciph269,6221
	ResourceOwner owner;271,6255
	struct OSSLCipher *next;next272,6277
	struct OSSLCipher *prev;prev273,6303
} OSSLCipher;274,6329
static OSSLCipher *open_ciphers open_ciphers276,6344
static bool cipher_resowner_callback_registered 277,6384
free_openssl_cipher(280,6454
cipher_free_callback(296,6733
gen_ossl_block_size(325,7264
gen_ossl_key_size(333,7391
gen_ossl_iv_size(341,7518
gen_ossl_free(351,7671
gen_ossl_decrypt(360,7796
gen_ossl_encrypt(384,8366
bf_check_supported_key_len(415,9169
bf_init(458,10427
ossl_des_init(490,11098
ossl_des3_init(509,11431
ossl_cast_init(528,11770
ossl_aes_init(546,12067
ossl_aes_ecb_init(571,12510
ossl_aes_cbc_init(601,13013
static PX_Alias ossl_aliases[ossl_aliases634,13524
static const struct ossl_cipher ossl_bf_cbc 652,13932
static const struct ossl_cipher ossl_bf_ecb 658,14024
static const struct ossl_cipher ossl_bf_cfb 664,14116
static const struct ossl_cipher ossl_des_ecb 670,14208
static const struct ossl_cipher ossl_des_cbc 676,14307
static const struct ossl_cipher ossl_des3_ecb 682,14406
static const struct ossl_cipher ossl_des3_cbc 688,14513
static const struct ossl_cipher ossl_cast_ecb 694,14620
static const struct ossl_cipher ossl_cast_cbc 700,14724
static const struct ossl_cipher ossl_aes_ecb 706,14828
static const struct ossl_cipher ossl_aes_cbc 713,14995
struct ossl_cipher_lookup723,15189
	const char *name;name725,15217
	const struct ossl_cipher *ciph;ciph726,15236
static const struct ossl_cipher_lookup ossl_cipher_types[ossl_cipher_types729,15273
px_find_cipher(747,15699

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/px.h,4227
#define __PX_H33,1434
#define PX_DEBUG38,1501
#define px_alloc(44,1611
#define px_realloc(45,1641
#define px_free(46,1681
#define PX_MAX_SALT_LEN	54,1840
#define PXE_OK	59,1895
#define PXE_ERR_GENERIC	60,1917
#define PXE_NO_HASH	61,1947
#define PXE_NO_CIPHER	62,1974
#define PXE_NOTBLOCKSIZE	63,2002
#define PXE_BAD_OPTION	64,2032
#define PXE_BAD_FORMAT	65,2061
#define PXE_KEY_TOO_BIG	66,2090
#define PXE_CIPHER_INIT	67,2120
#define PXE_HASH_UNUSABLE_FOR_HMAC	68,2150
#define PXE_DEV_READ_ERROR	69,2188
#define PXE_BUG	70,2221
#define PXE_ARGUMENT_ERROR	71,2246
#define PXE_UNKNOWN_SALT_ALGO	72,2279
#define PXE_BAD_SALT_ROUNDS	73,2314
#define PXE_MCRYPT_INTERNAL	74,2348
#define PXE_NO_RANDOM	75,2382
#define PXE_DECRYPT_FAILED	76,2411
#define PXE_PGP_CORRUPT_DATA	78,2445
#define PXE_PGP_CORRUPT_ARMOR	79,2480
#define PXE_PGP_UNSUPPORTED_COMPR	80,2516
#define PXE_PGP_UNSUPPORTED_CIPHER	81,2555
#define PXE_PGP_UNSUPPORTED_HASH	82,2595
#define PXE_PGP_COMPRESSION_ERROR	83,2633
#define PXE_PGP_NOT_TEXT	84,2672
#define PXE_PGP_UNEXPECTED_PKT	85,2704
#define PXE_PGP_MATH_FAILED	87,2762
#define PXE_PGP_SHORT_ELGAMAL_KEY	88,2797
#define PXE_PGP_UNKNOWN_PUBALGO	90,2857
#define PXE_PGP_WRONG_KEY	91,2895
#define PXE_PGP_MULTIPLE_KEYS	92,2928
#define PXE_PGP_EXPECT_PUBLIC_KEY	93,2964
#define PXE_PGP_EXPECT_SECRET_KEY	94,3003
#define PXE_PGP_NOT_V4_KEYPKT	95,3042
#define PXE_PGP_KEYPKT_CORRUPT	96,3078
#define PXE_PGP_NO_USABLE_KEY	97,3115
#define PXE_PGP_NEED_SECRET_PSW	98,3151
#define PXE_PGP_BAD_S2K_MODE	99,3189
#define PXE_PGP_UNSUPPORTED_PUBALGO 100,3224
#define PXE_PGP_MULTIPLE_SUBKEYS	101,3265
typedef struct px_digest PX_MD;104,3305
typedef struct px_alias PX_Alias;105,3337
typedef struct px_hmac PX_HMAC;106,3371
typedef struct px_cipher PX_Cipher;107,3403
typedef struct px_combo PX_Combo;108,3439
struct px_digest110,3474
	unsigned	(*result_size)result_size112,3493
	unsigned	(*block_size)block_size113,3530
	void		(*reset)reset114,3566
	void		(*update)update115,3594
	void		(*finish)finish116,3657
	void		(*free)free117,3698
		unsigned	code;121,3750
		void	   *ptr;ptr122,3767
	}			p;123,3783
struct px_alias126,3795
	char	   *alias;alias128,3813
	char	   *name;name129,3830
struct px_hmac132,3850
	unsigned	(*result_size)result_size134,3867
	unsigned	(*block_size)block_size135,3906
	void		(*reset)reset136,3944
	void		(*update)update137,3974
	void		(*finish)finish138,4039
	void		(*free)free139,4082
	void		(*init)init140,4111
	PX_MD	   *md;md142,4174
		uint8	   *ipad;ipad146,4215
		uint8	   *opad;opad147,4233
	}			p;148,4251
struct px_cipher151,4263
	unsigned	(*block_size)block_size153,4282
	unsigned	(*key_size)key_size154,4322
	unsigned	(*iv_size)iv_size155,4378
	int			(*init)init157,4416
	int			(*encrypt)encrypt158,4497
	int			(*decrypt)decrypt159,4577
	void		(*free)free160,4657
	void	   *ptr;ptr162,4703
	int			pstat;163,4718
struct px_combo166,4759
	int			(*init)init168,4777
	int			(*encrypt)encrypt170,4881
	int			(*decrypt)decrypt172,4984
	unsigned	(*encrypt_len)encrypt_len174,5087
	unsigned	(*decrypt_len)decrypt_len175,5143
	void		(*free)free176,5199
	PX_Cipher  *cipher;cipher178,5231
	unsigned	padding;179,5252
void		px_THROW_ERROR(187,5494
#define px_debug(199,5852
#define px_md_result_size(202,5882
#define px_md_block_size(203,5935
#define px_md_reset(204,5986
#define px_md_update(205,6028
#define px_md_finish(206,6094
#define px_md_free(207,6147
#define px_hmac_result_size(209,6188
#define px_hmac_block_size(210,6248
#define px_hmac_reset(211,6306
#define px_hmac_init(212,6355
#define px_hmac_update(213,6423
#define px_hmac_finish(214,6497
#define px_hmac_free(215,6557
#define px_cipher_key_size(218,6606
#define px_cipher_block_size(219,6654
#define px_cipher_iv_size(220,6706
#define px_cipher_init(221,6752
#define px_cipher_encrypt(222,6817
#define px_cipher_decrypt(224,6903
#define px_cipher_free(226,6989
#define px_combo_encrypt_len(229,7031
#define px_combo_decrypt_len(230,7095
#define px_combo_init(231,7159
#define px_combo_encrypt(233,7248
#define px_combo_decrypt(235,7345
#define px_combo_free(237,7442

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/crypt-blowfish.c,1008
#define BF_ASM	42,1449
#define BF_SCALE	43,1477
#define BF_ASM	45,1567
#define BF_SCALE	46,1587
#define BF_ASM	48,1614
#define BF_SCALE	49,1634
typedef unsigned int BF_word;52,1663
typedef signed int BF_word_signed;53,1693
#define BF_N	56,1803
typedef BF_word BF_key[BF_key58,1823
	BF_word		S[S62,1875
	BF_key		P;63,1898
} BF_ctx;64,1910
static BF_word BF_magic_w[BF_magic_w70,2050
static BF_ctx BF_init_state 78,2224
static unsigned char BF_itoa64[BF_itoa64350,15578
static unsigned char BF_atoi64[BF_atoi64353,15688
#define BF_safe_atoi64(362,16112
BF_decode(372,16333
BF_encode(404,16952
BF_swap(441,17606
#define BF_ROUND(458,17975
#define BF_INDEX(475,18397
#define BF_ROUND(477,18470
#define BF_ENCRYPT 499,18955
#define BF_body(525,19464
#define BF_body(529,19514
BF_set_key(551,19873
_crypt_blowfish_rn(582,20357
		BF_ctx		ctx;587,20458
		BF_key		expanded_key;588,20473
			BF_word		salt[salt591,20509
			BF_word		output[output592,20530
		}			binary;593,20553

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/px.c,483
struct error_desc36,1477
	int			err;38,1497
	const char *desc;desc39,1509
static const struct error_desc px_err_list[px_err_list42,1532
px_THROW_ERROR(96,4025
px_strerror(114,4400
px_memset(126,4609
px_resolve_alias(132,4689
px_set_debug_handler(146,4926
px_debug(152,5015
combo_encrypt_len(172,5270
combo_decrypt_len(178,5358
combo_init(184,5435
combo_encrypt(223,6084
combo_decrypt(292,7202
combo_free(349,8138
parse_cipher_name(360,8286
px_find_combo(402,8801

/home/seinoyu/pgsql/master/postgresql/contrib/pgcrypto/pgcrypto.h,29
#define _PG_CRYPTO_H33,1452

/home/seinoyu/pgsql/master/postgresql/contrib/sslinfo/sslinfo.c,435
PG_MODULE_MAGIC;22,471
	TupleDesc	tupdesc;33,748
} SSLExtensionInfoContext;34,768
ssl_is_used(44,1025
ssl_version(55,1190
ssl_cipher(68,1432
ssl_client_cert_present(84,1848
ssl_client_serial(100,2276
ASN1_STRING_to_text(139,3238
X509_NAME_field_to_text(185,4506
ssl_client_dn_field(226,5726
ssl_issuer_field(261,6633
X509_NAME_to_text(290,7285
ssl_client_dn(359,9155
ssl_issuer_dn(378,9615
ssl_extension_info(396,10028

/home/seinoyu/pgsql/master/postgresql/contrib/file_fdw/file_fdw.c,1239
PG_MODULE_MAGIC;41,1080
struct FileFdwOption46,1171
	const char *optname;optname48,1194
	Oid			optcontext;49,1216
static const struct FileFdwOption valid_options[valid_options61,1676
typedef struct FileFdwPlanState89,2419
	char	   *filename;filename91,2453
	bool		is_program;92,2509
	List	   *options;options93,2577
	BlockNumber pages;95,2669
	double		ntuples;96,2730
} FileFdwPlanState;97,2787
typedef struct FileFdwExecutionState102,2875
	char	   *filename;filename104,2914
	bool		is_program;105,2970
	List	   *options;options106,3038
	CopyState	cstate;108,3130
} FileFdwExecutionState;109,3178
file_fdw_handler(171,5328
file_fdw_validator(196,6226
is_valid_option(338,10956
fileGetOptions(357,11424
get_file_fdw_attribute_options(428,13459
fileGetForeignRelSize(501,15151
fileGetForeignPaths(532,16052
fileGetForeignPlan(585,17651
fileExplainForeignScan(620,18621
fileBeginForeignScan(652,19419
fileIterateForeignScan(705,20848
fileReScanForeignScan(747,22141
fileEndForeignScan(767,22608
fileAnalyzeForeignTable(781,22945
fileIsForeignScanParallelSafe(832,24401
check_selective_binary_conversion(848,24949
estimate_size(972,27703
estimate_costs(1053,29931
file_acquire_sample_rows(1096,31690

/home/seinoyu/pgsql/master/postgresql/contrib/pgrowlocks/pgrowlocks.c,246
PG_MODULE_MAGIC;45,1527
#define NCHARS 55,1664
#define		Atnum_tid	57,1683
#define		Atnum_xmax	58,1705
#define		Atnum_ismulti	59,1728
#define		Atnum_xids	60,1753
#define		Atnum_modes	61,1776
#define		Atnum_pids	62,1800
pgrowlocks(65,1830

/home/seinoyu/pgsql/master/postgresql/contrib/pgstattuple/pgstatapprox.c,537
typedef struct output_type38,1010
	uint64		table_len;40,1039
	uint64		scanned_percent;41,1059
	uint64		tuple_count;42,1085
	uint64		tuple_len;43,1107
	double		tuple_percent;44,1127
	uint64		dead_tuple_count;45,1151
	uint64		dead_tuple_len;46,1178
	double		dead_tuple_percent;47,1203
	uint64		free_space;48,1232
	double		free_percent;49,1253
} output_type;50,1276
#define NUM_OUTPUT_COLUMNS 52,1292
statapprox_heap(65,1779
pgstattuple_approx(224,6061
pgstattuple_approx_v1_5(244,6629
pgstattuple_approx_internal(252,6778

/home/seinoyu/pgsql/master/postgresql/contrib/pgstattuple/pgstatindex.c,1390
#define IS_INDEX(70,2295
#define IS_BTREE(71,2355
#define IS_GIN(72,2412
#define IS_HASH(73,2465
typedef struct BTIndexStat80,2705
	uint32		version;82,2734
	uint32		level;83,2752
	BlockNumber root_blkno;84,2768
	uint64		internal_pages;86,2794
	uint64		leaf_pages;87,2819
	uint64		empty_pages;88,2840
	uint64		deleted_pages;89,2862
	uint64		max_avail;91,2887
	uint64		free_space;92,2907
	uint64		fragments;94,2929
} BTIndexStat;95,2949
typedef struct GinIndexStat102,3150
	int32		version;104,3180
	BlockNumber pending_pages;106,3198
	int64		pending_tuples;107,3226
} GinIndexStat;108,3250
typedef struct HashIndexStat115,3454
	int32		version;117,3485
	int32		space_per_page;118,3502
	BlockNumber bucket_pages;120,3527
	BlockNumber overflow_pages;121,3554
	BlockNumber bitmap_pages;122,3583
	BlockNumber unused_pages;123,3610
	int64		live_items;125,3638
	int64		dead_items;126,3658
	uint64		free_space;127,3678
} HashIndexStat;128,3699
pgstatindex(145,4301
pgstatindex_v1_5(170,5000
pgstatindexbyid(188,5501
pgstatindexbyid_v1_5(205,5893
pgstatindex_impl(216,6095
pg_relpages(379,10574
pg_relpages_v1_5(408,11271
pg_relpagesbyid(432,11817
pg_relpagesbyid_v1_5(459,12418
pgstatginindex(488,13063
pgstatginindex_v1_5(502,13401
pgstatginindex_internal(510,13542
pgstathashindex(582,15457
GetHashPageStats(736,19806
check_relation_relkind(759,20345

/home/seinoyu/pgsql/master/postgresql/contrib/pgstattuple/pgstattuple.c,698
PG_MODULE_MAGIC;42,1450
typedef struct pgstattuple_type55,1754
	uint64		table_len;57,1788
	uint64		tuple_count;58,1808
	uint64		tuple_len;59,1830
	uint64		dead_tuple_count;60,1850
	uint64		dead_tuple_len;61,1877
	uint64		free_space;62,1902
} pgstattuple_type;63,1959
typedef void (*pgstat_page)pgstat_page65,1980
build_pgstattuple_type(90,3032
#define NCOLUMNS	92,3106
#define NCHARS	93,3125
pgstattuple(167,5346
pgstattuple_v1_5(193,6065
pgstattuplebyid(208,6422
pgstattuplebyid_v1_5(226,6838
pgstat_relation(241,7086
pgstat_heap(319,8954
pgstat_btree_page(410,11387
pgstat_hash_page(454,12237
pgstat_gist_page(496,13118
pgstat_index(524,13695
pgstat_index_page(568,14615

/home/seinoyu/pgsql/master/postgresql/contrib/tsm_system_rows/tsm_system_rows.c,556
PG_MODULE_MAGIC;38,1542
	uint32		seed;46,1645
	int64		ntuples;47,1680
	OffsetNumber lt;48,1731
	BlockNumber doneblocks;49,1796
	BlockNumber lb;50,1861
	BlockNumber nblocks;52,1965
	BlockNumber firstblock;53,2023
	BlockNumber step;54,2082
} SystemRowsSamplerData;55,2140
tsm_system_rows_handler(79,2966
system_rows_samplescangetsamplesize(103,3596
system_rows_initsamplescan(162,4935
system_rows_beginsamplescan(172,5192
system_rows_nextsampleblock(205,6089
system_rows_nextsampletuple(271,8122
gcd(301,8813
random_relative_prime(320,9033

/home/seinoyu/pgsql/master/postgresql/contrib/tsm_system_time/tsm_system_time.c,588
PG_MODULE_MAGIC;37,1303
	uint32		seed;45,1406
	double		millis;46,1441
	instr_time	start_time;47,1490
	OffsetNumber lt;48,1537
	BlockNumber doneblocks;49,1602
	BlockNumber lb;50,1667
	BlockNumber nblocks;52,1771
	BlockNumber firstblock;53,1829
	BlockNumber step;54,1888
} SystemTimeSamplerData;55,1946
tsm_system_time_handler(79,2772
system_time_samplescangetsamplesize(103,3405
system_time_initsamplescan(178,5309
system_time_beginsamplescan(188,5566
system_time_nextsampleblock(215,6346
system_time_nextsampletuple(288,8638
gcd(314,9207
random_relative_prime(333,9427

/home/seinoyu/pgsql/master/postgresql/contrib/bool_plperl/bool_plperl.c,68
PG_MODULE_MAGIC;7,63
bool_to_plperl(12,125
plperl_to_bool(24,301

/home/seinoyu/pgsql/master/postgresql/contrib/fuzzystrmatch/dmetaphone.c,639
#define NDEBUG104,4258
dmetaphone(131,4756
dmetaphone_alt(160,5208
#define META_MALLOC(187,5684
#define META_REALLOC(190,5752
#define META_FREE(200,6077
#define META_MALLOC(205,6245
#define META_REALLOC(208,6313
#define META_FREE(211,6390
	char	   *str;str220,6548
	int			length;221,6563
	int			bufsize;222,6578
	int			free_string_on_destroy;223,6594
metastring;226,6628
NewMetaString(235,6815
DestroyMetaString(260,7281
IncreaseBuffer(273,7448
MakeUpper(282,7648
IsVowel(292,7767
SlavoGermanic(309,8013
GetAt(325,8285
SetAt(335,8421
StringAt(348,8592
MetaphAdd(378,8994
DoubleMetaphone(395,9278
main(1427,32943

/home/seinoyu/pgsql/master/postgresql/contrib/fuzzystrmatch/fuzzystrmatch.c,1013
PG_MODULE_MAGIC;47,1741
#define SOUNDEX_LEN 54,1833
static const char *soundex_table soundex_table57,1897
soundex_code(60,1975
#define MAX_METAPHONE_STRLEN	72,2200
#undef USE_TRADITIONAL_METAPHONE100,3153
#define  SH	103,3211
#define  TH	104,3228
static const char _codes[_codes114,3530
getcode(120,3719
#define isvowel(132,3920
#define NOCHANGE(135,4018
#define AFFECTH(138,4113
#define MAKESOFT(141,4192
#define NOGHTOF(144,4279
levenshtein_with_costs(148,4378
levenshtein(174,5059
levenshtein_less_equal_with_costs(197,5634
levenshtein_less_equal(226,6420
metaphone(257,7188
#define Next_Letter 301,8387
#define Curr_Letter 303,8493
#define Look_Back_Letter(305,8577
#define Prev_Letter 308,8742
#define After_Next_Letter 310,8859
#define Look_Ahead_Letter(312,8958
Lookahead(318,9162
#define Phonize(333,9515
#define End_Phoned_Word 335,9636
#define Phone_Len	337,9740
#define Isbreak(340,9815
_metaphone(344,9880
soundex(710,16936
_soundex(723,17143
difference(774,17965

/home/seinoyu/pgsql/master/postgresql/contrib/cube/cubedata.h,701
#define CUBE_MAX_DIM 7,150
typedef struct NDBOX9,178
	int32		vl_len_;12,248
	unsigned int header;27,703
	double		x[x33,867
} NDBOX;34,902
#define POINT_BIT	37,938
#define DIM_MASK	38,969
#define IS_POINT(40,1000
#define SET_POINT_BIT(41,1062
#define DIM(42,1122
#define SET_DIM(43,1172
#define LL_COORD(45,1260
#define UR_COORD(46,1303
#define POINT_SIZE(48,1393
#define CUBE_SIZE(49,1463
#define DatumGetNDBOXP(52,1564
#define PG_GETARG_NDBOX_P(53,1622
#define PG_RETURN_NDBOX_P(54,1686
#define CubeKNNDistanceCoord	57,1774
#define CubeKNNDistanceTaxicab	58,1817
#define CubeKNNDistanceEuclid	59,1863
#define CubeKNNDistanceChebyshev	60,1908
extern void cube_yyerror(64,2005

/home/seinoyu/pgsql/master/postgresql/contrib/cube/cube.c,1307
PG_MODULE_MAGIC;19,568
#define ARRPTR(24,635
#define ARRNELEMS(25,685
cube_in(115,3185
cube_a_f8_f8(135,3501
cube_a_f8(202,4863
cube_subset(239,5639
cube_out(288,6765
g_cube_consistent(334,7886
g_cube_union(368,8754
g_cube_compress(400,9374
g_cube_decompress(406,9457
g_cube_penalty(429,9998
g_cube_picksplit(454,10584
g_cube_same(604,14399
g_cube_leaf_consistent(622,14695
g_cube_internal_consistent(651,15296
g_cube_binary_union(678,15872
cube_union_v0(691,16057
cube_union(751,17321
cube_inter(766,17571
cube_size(842,19195
rt_cube_size(853,19366
cube_cmp_v0(880,19877
cube_cmp(960,21477
cube_eq(975,21698
cube_ne(990,21922
cube_lt(1005,22146
cube_gt(1020,22369
cube_le(1035,22592
cube_ge(1050,22816
cube_contains_v0(1067,23101
cube_contains(1105,23925
cube_contained(1121,24229
cube_overlap_v0(1137,24546
cube_overlap(1176,25287
cube_distance(1196,25790
distance_taxicab(1245,26660
distance_chebyshev(1289,27514
g_cube_distance(1341,28435
distance_1D(1446,31084
cube_is_point(1462,31542
cube_is_point_internal(1473,31739
cube_dim(1497,32345
cube_ll_coord(1508,32538
cube_ur_coord(1525,32871
cube_coord(1546,33324
cube_coord_llur(1587,35063
cube_enlarge(1646,36289
cube_f8(1711,37620
cube_f8_f8(1729,37938
cube_c_f8(1761,38541
cube_c_f8_f8(1808,39651

/home/seinoyu/pgsql/master/postgresql/contrib/dict_int/dict_int.c,159
PG_MODULE_MAGIC;18,422
	int			maxlen;22,457
	bool		rejectlong;23,472
	bool		absval;24,491
} DictInt;25,506
dintdict_init(32,600
dintdict_lexize(77,1530

/home/seinoyu/pgsql/master/postgresql/contrib/ltree/crc32.c,71
#define TOLOWER(14,249
#define TOLOWER(16,303
ltree_crc32_sz(23,393

/home/seinoyu/pgsql/master/postgresql/contrib/ltree/_ltree_gist.c,667
#define GETENTRY(25,551
#define NEXTVAL(26,636
#define WISH_F(28,708
hashing(32,801
_ltree_compress(48,1067
_ltree_same(106,2543
unionkey(139,3158
_ltree_union(153,3357
sizebitvec(178,3918
hemdistsign(184,4021
hemdist(200,4294
_ltree_penalty(217,4640
	OffsetNumber pos;230,5056
	int32		cost;231,5075
} SPLITCOST;232,5089
comparecost(235,5114
_ltree_picksplit(241,5238
gist_te(386,8452
typedef struct LtreeSignature408,8854
	BITVECP		sign;410,8886
	int			siglen;411,8902
} LtreeSignature;412,8917
checkcondition_bit(415,8948
gist_qtxt(423,9133
gist_qe(439,9407
_arrq_cons(478,10053
_ltree_consistent(503,10660
_ltree_gist_options(545,11684

/home/seinoyu/pgsql/master/postgresql/contrib/ltree/ltree_gist.c,799
#define NEXTVAL(14,246
#define ISEQ(15,318
ltree_gist_in(21,477
ltree_gist_out(30,650
ltree_gist_alloc(39,832
#define GETENTRY(88,1965
ltree_compress(91,2057
ltree_decompress(110,2531
ltree_same(128,2976
hashing(173,3900
ltree_union(189,4165
ltree_penalty(258,5547
typedef struct rix276,6157
	int			index;278,6178
	ltree	   *r;r279,6192
} RIX;280,6206
treekey_cmp(283,6225
ltree_picksplit(291,6353
gist_isparent(421,9297
copy_ltree(442,9709
gist_ischild(451,9846
gist_qe(476,10365
gist_tqcmp(515,11009
gist_between(544,11546
typedef struct LtreeSignature558,11810
	BITVECP		sign;560,11842
	int			siglen;561,11858
} LtreeSignature;562,11873
checkcondition_bit(565,11904
gist_qtxt(573,12088
arrq_cons(589,12362
ltree_consistent(614,12993
ltree_gist_options(720,16187

/home/seinoyu/pgsql/master/postgresql/contrib/ltree/crc32.h,44
#define _CRC32_H2,17
#define crc32(10,208

/home/seinoyu/pgsql/master/postgresql/contrib/ltree/lquery_op.c,217
#define NEXTVAL(21,392
getlexeme(24,479
compare_subnode(44,843
ltree_strncasecmp(78,1431
checkLevel(99,1852
checkCond(136,2782
ltq_regex(215,4714
ltq_rregex(230,5023
lt_q_regex(239,5184
lt_q_rregex(275,6016

/home/seinoyu/pgsql/master/postgresql/contrib/ltree/ltxtquery_io.c,941
#define WAITOPERAND 17,246
#define INOPERAND 18,268
#define WAITOPERATOR	19,288
typedef struct NODE25,393
	int32		type;27,415
	int32		val;28,429
	int16		distance;29,442
	int16		length;30,460
	uint16		flag;31,476
	struct NODE *next;next32,491
} NODE;33,511
	char	   *buf;buf37,537
	int32		state;38,552
	int32		count;39,567
	NODE	   *str;str41,643
	int32		num;43,679
	int32		lenop;46,722
	int32		sumlen;47,737
	char	   *op;op48,753
	char	   *curop;curop49,767
} QPRS_STATE;50,784
gettoken_query(56,850
pushquery(144,2808
pushval_asis(170,3432
#define STACKDEPTH	195,4130
makepol(200,4206
findoprnd(275,5780
queryin(308,6307
ltxtq_in(384,7939
ltxtq_recv(399,8357
	ITEM	   *curpol;curpol422,8779
	char	   *buf;buf423,8797
	char	   *cur;cur424,8812
	char	   *op;op425,8827
	int32		buflen;426,8841
} INFIX;427,8857
#define RESIZEBUF(429,8867
infix(443,9238
ltxtq_out(543,11082
ltxtq_send(574,11856

/home/seinoyu/pgsql/master/postgresql/contrib/ltree/ltree.h,3692
#define __LTREE_H__4,49
#define LTREE_LABEL_MAX_CHARS 18,357
	uint16		len;22,409
	char		name[name23,460
} ltree_level;24,496
#define LEVEL_HDRSIZE	26,512
#define LEVEL_NEXT(27,563
	int32		vl_len_;31,691
	uint16		numlevel;32,755
	char		data[data34,854
} ltree;35,890
#define LTREE_HDRSIZE	37,900
#define LTREE_FIRST(38,956
#define LTREE_MAX_LEVELS	39,1028
	int32		val;47,1191
	uint16		len;48,1232
	uint8		flag;49,1283
	char		name[name50,1330
} lquery_variant;51,1366
#define LVAR_HDRSIZE 58,1607
#define LVAR_NEXT(59,1671
#define LVAR_ANYEND 61,1786
#define LVAR_INCASE 62,1841
#define LVAR_SUBLEXEME	63,1906
	uint16		totallen;77,2465
	uint16		flag;78,2528
	uint16		numvar;79,2582
	uint16		low;80,2639
	uint16		high;81,2682
	char		variants[variants83,2785
} lquery_level;84,2825
#define LQL_HDRSIZE 86,2842
#define LQL_NEXT(87,2906
#define LQL_FIRST(88,3005
#define LQL_NOT	90,3077
#define LQL_COUNT	91,3133
#define FLG_CANLOOKSIGN(94,3221
#define FLG_CANLOOKSIGN(96,3316
#define LQL_CANLOOKSIGN(98,3426
	int32		vl_len_;102,3517
	uint16		numlevel;103,3581
	uint16		firstgood;104,3631
	uint16		flag;105,3696
	char		data[data107,3803
} lquery;108,3839
#define LQUERY_HDRSIZE	110,3850
#define LQUERY_FIRST(111,3909
#define LQUERY_MAX_LEVELS	112,3986
#define LQUERY_HASNOT	114,4059
#define ISALNUM(116,4088
typedef struct ITEM124,4276
	int16		type;126,4298
	int16		left;127,4312
	int32		val;128,4326
	uint8		flag;129,4339
	uint8		length;131,4380
	uint16		distance;132,4396
} ITEM;133,4415
	int32		vl_len_;141,4530
	int32		size;142,4594
	char		data[data143,4608
} ltxtquery;144,4644
#define HDRSIZEQT	146,4658
#define COMPUTESIZE(147,4712
#define LTXTQUERY_TOO_BIG(148,4806
#define GETQUERY(150,4924
#define GETOPERAND(151,4977
#define ISOPERATOR(153,5062
#define END	155,5146
#define ERR	156,5165
#define VAL	157,5184
#define OPR	158,5203
#define OPEN	159,5222
#define CLOSE	160,5241
#define VALTRUE	161,5261
#define VALFALSE	162,5304
#define DatumGetLtreeP(202,6684
#define DatumGetLtreePCopy(203,6744
#define PG_GETARG_LTREE_P(204,6812
#define PG_GETARG_LTREE_P_COPY(205,6877
#define DatumGetLqueryP(207,6951
#define DatumGetLqueryPCopy(208,7013
#define PG_GETARG_LQUERY_P(209,7083
#define PG_GETARG_LQUERY_P_COPY(210,7150
#define DatumGetLtxtqueryP(212,7226
#define DatumGetLtxtqueryPCopy(213,7294
#define PG_GETARG_LTXTQUERY_P(214,7370
#define PG_GETARG_LTXTQUERY_P_COPY(215,7443
#define SIGLEN_MAX	219,7555
#define SIGLEN_DEFAULT	220,7595
#define BITBYTE 221,7638
#define SIGLEN	222,7656
#define SIGLENBIT(223,7699
typedef unsigned char *BITVECP;BITVECP225,7747
#define LOOPBYTE(227,7780
#define GETBYTE(230,7841
#define GETBITBYTE(231,7909
#define CLRBIT(232,7970
#define SETBIT(233,8039
#define GETBIT(234,8108
#define HASHVAL(236,8176
#define HASH(237,8249
	int32		vl_len_;252,8576
	uint32		flag;253,8640
	char		data[data254,8655
} ltree_gist;255,8691
#define LTG_ONENODE 257,8706
#define LTG_ALLTRUE 258,8731
#define LTG_NORIGHT 259,8756
#define LTG_HDRSIZE 261,8782
#define LTG_SIGN(262,8838
#define LTG_NODE(263,8900
#define LTG_ISONENODE(264,8961
#define LTG_ISALLTRUE(265,9029
#define LTG_ISNORIGHT(266,9097
#define LTG_LNODE(267,9165
#define LTG_RENODE(268,9277
#define LTG_RNODE(269,9384
#define LTG_GETLNODE(271,9482
#define LTG_GETRNODE(272,9572
#define LTREE_ASIGLEN_DEFAULT	279,9811
#define LTREE_ASIGLEN_MAX	280,9861
#define LTREE_GET_ASIGLEN(281,9908
#define ASIGLENBIT(284,10068
#define ALOOPBYTE(286,10118
#define AHASHVAL(289,10181
#define AHASH(290,10256
	int32		vl_len_;295,10402
	int			siglen;296,10466
} LtreeGistOptions;297,10515

/home/seinoyu/pgsql/master/postgresql/contrib/ltree/ltxtquery_op.c,175
ltree_execute(20,306
	ltree	   *node;node51,1156
	char	   *operand;operand52,1173
} CHKVAL;53,1192
checkcondition_str(56,1215
ltxtq_exec(84,1972
ltxtq_rexec(105,2373

/home/seinoyu/pgsql/master/postgresql/contrib/ltree/_ltree_op.c,470
typedef Datum (*PGCALL2)PGCALL232,737
#define NEXTVAL(34,783
array_iterator(37,867
_ltree_isparent(71,1602
_ltree_r_isparent(83,1879
_ltree_risparent(92,2053
_ltree_r_risparent(104,2332
_ltq_regex(113,2508
_ltq_rregex(125,2777
_lt_q_regex(134,2940
_lt_q_rregex(168,3742
_ltxtq_exec(178,3908
_ltxtq_rexec(190,4183
_ltree_extract_isparent(200,4349
_ltree_extract_risparent(223,4828
_ltq_extract_regex(246,5309
_ltxtq_extract_exec(269,5780
_lca(292,6257

/home/seinoyu/pgsql/master/postgresql/contrib/ltree/ltree_io.c,933
	const char *start;start18,267
	int			len;19,287
	int			flag;20,323
	int			wlen;21,336
} nodeitem;22,378
#define LTPRS_WAITNAME	24,391
#define LTPRS_WAITDELIM 25,416
parse_ltree(36,617
#define UNCHAR 49,884
#undef UNCHAR134,2752
deparse_ltree(142,2846
ltree_in(172,3311
ltree_out(181,3467
ltree_send(198,3901
ltree_recv(223,4518
#define LQPRS_WAITLEVEL 242,4899
#define LQPRS_WAITDELIM 243,4925
#define LQPRS_WAITOPEN	244,4951
#define LQPRS_WAITFNUM	245,4976
#define LQPRS_WAITSNUM	246,5001
#define LQPRS_WAITND	247,5026
#define LQPRS_WAITCLOSE 248,5049
#define LQPRS_WAITEND	249,5075
#define LQPRS_WAITVAR	250,5099
#define GETVAR(253,5125
#define ITEMSIZE	254,5175
#define NEXTLEV(255,5232
parse_lquery(262,5378
#define UNCHAR 280,5762
#undef UNCHAR565,12488
finish_nodeitem(573,12633
deparse_lquery(613,13683
lquery_in(730,15789
lquery_out(739,15948
lquery_send(756,16388
lquery_recv(781,17011

/home/seinoyu/pgsql/master/postgresql/contrib/ltree/ltree_op.c,578
PG_MODULE_MAGIC;17,311
ltree_compare(42,1013
#define RUNCMP	76,1598
ltree_cmp(84,1778
ltree_lt(91,1849
ltree_le(98,1939
ltree_eq(105,2030
ltree_ge(112,2121
ltree_gt(119,2212
ltree_ne(126,2302
nlevel(133,2393
inner_isparent(143,2539
ltree_isparent(167,2932
ltree_risparent(179,3156
inner_subltree(192,3391
subltree(231,4215
subpath(241,4416
ltree_concat(274,5025
ltree_addltree(297,5703
ltree_addtext(310,5932
ltree_index(335,6339
ltree_textadd(395,7431
lca_inner(426,8018
lca(501,9412
text2ltree(522,9788
ltree2text(539,10083
ltreeparentsel(576,10797

/home/seinoyu/pgsql/master/postgresql/contrib/dict_xsyn/dict_xsyn.c,371
PG_MODULE_MAGIC;21,467
	char	   *key;key25,502
	char	   *value;value26,530
} Syn;28,619
	int			len;32,644
	Syn		   *syn;syn33,656
	bool		matchorig;35,672
	bool		keeporig;36,690
	bool		matchsynonyms;37,707
	bool		keepsynonyms;38,729
} DictSyn;39,750
find_word(46,846
compare_syn(67,1115
read_dictionary(73,1238
dxsyn_init(141,2620
dxsyn_lexize(197,3815

/home/seinoyu/pgsql/master/postgresql/contrib/jsonb_plperl/jsonb_plperl.c,203
PG_MODULE_MAGIC;11,164
JsonbValue_to_SV(18,327
Jsonb_to_SV(60,1112
AV_to_JsonbValue(129,2469
HV_to_JsonbValue(149,2866
SV_to_JsonbValue(175,3410
jsonb_to_plperl(276,5990
plperl_to_jsonb(289,6188

/home/seinoyu/pgsql/master/postgresql/contrib/pageinspect/btreefuncs.c,1001
#define IS_INDEX(48,1576
#define IS_BTREE(49,1636
#define DatumGetItemPointer(50,1693
#define ItemPointerGetDatum(51,1760
#define CHECK_RELATION_BLOCK_RANGE(54,1873
typedef struct BTPageStat62,2194
	uint32		blkno;64,2222
	uint32		live_items;65,2238
	uint32		dead_items;66,2259
	uint32		page_size;67,2280
	uint32		max_avail;68,2300
	uint32		free_size;69,2320
	uint32		avg_item_size;70,2340
	char		type;71,2364
	BlockNumber btpo_prev;74,2397
	BlockNumber btpo_next;75,2421
		uint32		level;78,2455
		TransactionId xact;79,2472
	}			btpo;80,2494
	uint16		btpo_flags;81,2505
	BTCycleId	btpo_cycleid;82,2526
} BTPageStat;83,2551
GetBTPageStatistics(93,2761
bt_page_stats(164,4502
struct user_args246,6892
	Page		page;248,6911
	OffsetNumber offset;249,6924
	bool		leafpage;250,6946
	bool		rightmost;251,6963
	TupleDesc	tupd;252,6981
bt_page_print_tuples(262,7221
bt_page_items(409,11709
bt_page_items_bytea(519,14590
#define BT_METAP_COLS_V1_8	594,16437
bt_metap(605,16685

/home/seinoyu/pgsql/master/postgresql/contrib/pageinspect/rawpage.c,178
PG_MODULE_MAGIC;32,810
get_raw_page(46,1057
get_raw_page_fork(75,1773
get_raw_page_internal(94,2165
get_page_from_raw(187,5285
page_header(218,5842
page_checksum(298,7863

/home/seinoyu/pgsql/master/postgresql/contrib/pageinspect/fsmfuncs.c,26
fsm_page_contents(35,921

/home/seinoyu/pgsql/master/postgresql/contrib/pageinspect/pageinspect.h,31
#define _PAGEINSPECT_H_14,369

/home/seinoyu/pgsql/master/postgresql/contrib/pageinspect/hashfuncs.c,625
#define IS_HASH(30,681
typedef struct HashPageStat36,890
	int			live_items;38,920
	int			dead_items;39,939
	int			page_size;40,958
	int			free_size;41,976
	BlockNumber hasho_prevblkno;44,1014
	BlockNumber hasho_nextblkno;45,1044
	Bucket		hasho_bucket;46,1074
	uint16		hasho_flag;47,1097
	uint16		hasho_page_id;48,1118
} HashPageStat;49,1142
verify_hash_page(57,1330
GetHashPageStatistics(151,3989
hash_page_type(187,5012
hash_page_stats(232,6063
struct user_args282,7554
	Page		page;284,7573
	OffsetNumber offset;285,7586
hash_page_items(297,7882
hash_bitmap_info(390,10037
hash_metapage_info(509,13580

/home/seinoyu/pgsql/master/postgresql/contrib/pageinspect/brinfuncs.c,320
typedef struct brin_column_state34,811
	int			nstored;36,846
	FmgrInfo	outputFn[outputFn37,862
} brin_column_state;38,905
brin_page_type(45,1024
verify_brin_page(90,2074
brin_page_items(124,2951
brin_metapage_info(326,8224
brin_revmap_data(365,9350
		ItemPointerData *tids;tids369,9398
		int			idx;370,9423

/home/seinoyu/pgsql/master/postgresql/contrib/pageinspect/heapfuncs.c,411
#define HeapTupleHeaderGetOidOld(46,1516
bits_to_text(62,1818
text_to_bits(85,2186
typedef struct heap_page_items_state122,2831
	TupleDesc	tupd;124,2870
	Page		page;125,2887
	uint16		offset;126,2900
} heap_page_items_state;127,2917
heap_page_items(130,2949
tuple_data_split_internal(304,7857
tuple_data_split(423,11149
heap_tuple_infomask_flags(507,13217
#define HEAP_TUPLE_INFOMASK_COLS 509,13263

/home/seinoyu/pgsql/master/postgresql/contrib/pageinspect/ginfuncs.c,347
#define DatumGetItemPointer(24,518
#define ItemPointerGetDatum(25,585
gin_metapage_info(34,770
gin_page_opaque_info(90,2391
typedef struct gin_leafpage_items_state156,4489
	TupleDesc	tupd;158,4531
	GinPostingList *seg;seg159,4548
	GinPostingList *lastseg;lastseg160,4570
} gin_leafpage_items_state;161,4596
gin_leafpage_items(164,4631

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_bit.c,354
gbt_bitgt(27,487
gbt_bitge(35,689
gbt_biteq(43,891
gbt_bitle(51,1093
gbt_bitlt(59,1295
gbt_bitcmp(67,1498
gbt_bit_xfrm(76,1711
gbt_bit_l2n(95,2114
static const gbtree_vinfo tinfo 110,2360
gbt_bit_compress(130,2633
gbt_bit_consistent(138,2790
gbt_bit_union(169,3639
gbt_bit_picksplit(180,3907
gbt_bit_same(191,4193
gbt_bit_penalty(203,4458

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_int2.c,514
typedef struct int16key10,143
	int16		lower;12,169
	int16		upper;13,184
} int16KEY;14,199
gbt_int2gt(29,556
gbt_int2ge(34,686
gbt_int2eq(39,817
gbt_int2le(44,948
gbt_int2lt(49,1079
gbt_int2key_cmp(55,1209
gbt_int2_dist(72,1570
static const gbtree_ninfo tinfo 78,1679
int2_dist(95,1920
gbt_int2_compress(120,2372
gbt_int2_fetch(128,2530
gbt_int2_consistent(136,2682
gbt_int2_distance(159,3341
gbt_int2_union(177,3800
gbt_int2_penalty(188,4093
gbt_int2_picksplit(200,4508
gbt_int2_same(208,4721

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_oid.c,464
	Oid			lower;11,135
	Oid			upper;12,149
} oidKEY;13,163
gbt_oidgt(29,509
gbt_oidge(34,634
gbt_oideq(39,760
gbt_oidle(44,886
gbt_oidlt(49,1012
gbt_oidkey_cmp(55,1137
gbt_oid_dist(72,1491
static const gbtree_ninfo tinfo 84,1697
oid_dist(101,1927
gbt_oid_compress(121,2224
gbt_oid_fetch(129,2381
gbt_oid_consistent(137,2532
gbt_oid_distance(160,3184
gbt_oid_union(178,3636
gbt_oid_penalty(189,3924
gbt_oid_picksplit(201,4332
gbt_oid_same(209,4544

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_utils_var.c,681
	int			i;19,306
	GBT_VARKEY *t;t20,316
} Vsrt;21,332
	const gbtree_vinfo *tinfo;tinfo25,358
	Oid			collation;26,386
	FmgrInfo   *flinfo;flinfo27,404
} gbt_vsrt_arg;28,425
gbt_var_decompress(36,528
gbt_var_key_readable(57,1079
gbt_var_key_from_datum(74,1454
gbt_var_key_copy(90,1782
gbt_var_leaf2node(106,2195
gbt_var_node_cp_len(121,2446
gbt_bytea_pf_match(169,3205
gbt_var_node_pf_match(191,3608
gbt_var_node_truncate(204,3942
gbt_var_bin_union(233,4659
gbt_var_compress(281,5587
gbt_var_fetch(305,6005
gbt_var_union(322,6419
gbt_var_same(361,7323
gbt_var_penalty(378,7765
gbt_vsrt_cmp(443,9791
gbt_var_picksplit(458,10250
gbt_var_consistent(554,12672

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_macaddr8.c,466
	macaddr8	lower;13,192
	macaddr8	upper;14,209
} mac8KEY;16,272
gbt_macad8gt(31,601
gbt_macad8ge(36,774
gbt_macad8eq(42,948
gbt_macad8le(48,1122
gbt_macad8lt(54,1296
gbt_macad8key_cmp(61,1470
static const gbtree_ninfo tinfo 75,1934
mac8_2_uint64(97,2284
gbt_macad8_compress(111,2490
gbt_macad8_fetch(119,2650
gbt_macad8_consistent(127,2804
gbt_macad8_union(150,3483
gbt_macad8_penalty(161,3777
gbt_macad8_picksplit(181,4369
gbt_macad8_same(189,4584

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_float4.c,549
typedef struct float4key9,121
	float4		lower;11,148
	float4		upper;12,164
} float4KEY;13,180
gbt_float4gt(28,555
gbt_float4ge(33,689
gbt_float4eq(38,824
gbt_float4le(43,959
gbt_float4lt(48,1094
gbt_float4key_cmp(54,1228
gbt_float4_dist(71,1593
static const gbtree_ninfo tinfo 77,1705
float4_dist(94,1965
gbt_float4_compress(113,2296
gbt_float4_fetch(121,2456
gbt_float4_consistent(129,2610
gbt_float4_distance(153,3285
gbt_float4_union(171,3749
gbt_float4_penalty(182,4046
gbt_float4_picksplit(195,4466
gbt_float4_same(203,4681

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_numeric.c,363
gbt_numeric_gt(29,553
gbt_numeric_ge(37,765
gbt_numeric_eq(45,977
gbt_numeric_le(53,1189
gbt_numeric_lt(61,1401
gbt_numeric_cmp(69,1614
static const gbtree_vinfo tinfo 77,1820
gbt_numeric_compress(98,2123
gbt_numeric_consistent(108,2286
gbt_numeric_union(131,2959
gbt_numeric_same(142,3231
gbt_numeric_penalty(154,3500
gbt_numeric_picksplit(221,5265

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_bytea.c,333
gbt_byteagt(26,477
gbt_byteage(34,683
gbt_byteaeq(42,889
gbt_byteale(50,1095
gbt_bytealt(58,1301
gbt_byteacmp(66,1508
static const gbtree_vinfo tinfo 74,1708
gbt_bytea_compress(95,1990
gbt_bytea_consistent(105,2151
gbt_bytea_union(128,2821
gbt_bytea_picksplit(139,3091
gbt_bytea_same(150,3379
gbt_bytea_penalty(162,3646

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_utils_num.h,640
#define __BTREE_UTILS_NUM_H__5,77
typedef char GBT_NUMKEY;14,219
	const GBT_NUMKEY *lower,lower19,288
			   *upper;upper20,314
} GBT_NUMKEY_R;21,328
	int			i;27,381
	GBT_NUMKEY *t;t28,391
} Nsrt;29,407
	enum gbtree_type t;39,475
	int32		size;40,514
	int32		indexsize;41,567
	bool		(*f_gt)f_gt45,641
	bool		(*f_ge)f_ge46,717
	bool		(*f_eq)f_eq47,797
	bool		(*f_le)f_le48,866
	bool		(*f_lt)f_lt49,943
	int			(*f_cmp)f_cmp50,1016
	float8		(*f_dist)f_dist51,1101
} gbtree_ninfo;52,1190
#define penalty_num(64,1328
#define INTERVAL_TO_SEC(85,2126
#define GET_FLOAT_DISTANCE(90,2296
#define CHECKFLOATVAL(96,2532

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_macaddr.c,474
	macaddr		lower;13,191
	macaddr		upper;14,208
	char		pad[pad15,225
} macKEY;16,287
gbt_macadgt(31,608
gbt_macadge(36,779
gbt_macadeq(42,951
gbt_macadle(48,1123
gbt_macadlt(54,1295
gbt_macadkey_cmp(61,1467
static const gbtree_ninfo tinfo 75,1920
mac_2_uint64(97,2262
gbt_macad_compress(111,2466
gbt_macad_fetch(119,2625
gbt_macad_consistent(127,2778
gbt_macad_union(150,3453
gbt_macad_penalty(161,3744
gbt_macad_picksplit(181,4327
gbt_macad_same(189,4541

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_ts.c,710
	Timestamp	lower;16,236
	Timestamp	upper;17,254
} tsKEY;18,272
#define TimestampGetDatumFast(37,749
#define TimestampGetDatumFast(39,809
gbt_tsgt(44,885
gbt_tsge(55,1187
gbt_tseq(66,1489
gbt_tsle(77,1791
gbt_tslt(88,2093
gbt_tskey_cmp(100,2395
gbt_ts_dist(114,2874
static const gbtree_ninfo tinfo 130,3326
ts_dist(147,3555
tstz_dist(171,4096
tstz_to_ts_gmt(200,4750
gbt_ts_compress(208,4894
gbt_tstz_compress(217,5051
gbt_ts_fetch(243,5579
gbt_ts_consistent(251,5729
gbt_ts_distance(273,6387
gbt_tstz_consistent(290,6845
gbt_tstz_distance(314,7562
gbt_ts_union(334,8080
#define penalty_check_max_float(344,8359
gbt_ts_penalty(354,8521
gbt_ts_picksplit(385,9348
gbt_ts_same(393,9559

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_gist.h,549
#define __BTREE_GIST_H__5,67
#define BtreeGistNotEqualStrategyNumber 10,139
enum gbtree_type14,203
	gbt_t_var,16,222
	gbt_t_int2,17,234
	gbt_t_int4,18,247
	gbt_t_int8,19,260
	gbt_t_float4,20,273
	gbt_t_float8,21,288
	gbt_t_numeric,22,303
	gbt_t_ts,23,319
	gbt_t_cash,24,330
	gbt_t_oid,25,343
	gbt_t_time,26,355
	gbt_t_date,27,368
	gbt_t_intv,28,381
	gbt_t_macad,29,394
	gbt_t_macad8,30,408
	gbt_t_text,31,423
	gbt_t_bpchar,32,436
	gbt_t_bytea,33,451
	gbt_t_bit,34,465
	gbt_t_inet,35,477
	gbt_t_uuid,36,490
	gbt_t_enum37,503

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_time.c,626
	TimeADT		lower;14,217
	TimeADT		upper;15,234
} timeKEY;16,251
#define TimeADTGetDatumFast(34,705
#define TimeADTGetDatumFast(36,761
gbt_timegt(41,835
gbt_timege(52,1122
gbt_timeeq(63,1409
gbt_timele(74,1696
gbt_timelt(85,1983
gbt_timekey_cmp(98,2271
gbt_time_dist(112,2742
static const gbtree_ninfo tinfo 125,3090
time_dist(142,3335
gbt_time_compress(159,3674
gbt_timetz_compress(168,3833
gbt_time_fetch(194,4445
gbt_time_consistent(202,4597
gbt_time_distance(224,5258
gbt_timetz_consistent(241,5719
gbt_time_union(267,6463
gbt_time_penalty(278,6754
gbt_time_picksplit(318,7951
gbt_time_same(326,8164

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_interval.c,587
	Interval	lower,13,197
				upper;14,214
} intvKEY;15,225
gbt_intvgt(33,628
gbt_intvge(39,804
gbt_intveq(45,980
gbt_intvle(51,1156
gbt_intvlt(57,1332
gbt_intvkey_cmp(63,1507
intr2num(78,1983
gbt_intv_dist(84,2058
#define INTERVALSIZE 96,2573
static const gbtree_ninfo tinfo 98,2598
abs_interval(114,2817
interval_dist(129,3156
gbt_intv_compress(145,3501
gbt_intv_fetch(180,4302
gbt_intv_decompress(188,4454
gbt_intv_consistent(211,4995
gbt_intv_distance(234,5662
gbt_intv_union(252,6129
gbt_intv_penalty(263,6420
gbt_intv_picksplit(283,6990
gbt_intv_same(291,7203

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_int4.c,514
typedef struct int32key10,143
	int32		lower;12,169
	int32		upper;13,184
} int32KEY;14,199
gbt_int4gt(30,557
gbt_int4ge(35,687
gbt_int4eq(40,818
gbt_int4le(45,949
gbt_int4lt(50,1080
gbt_int4key_cmp(56,1210
gbt_int4_dist(73,1571
static const gbtree_ninfo tinfo 79,1680
int4_dist(96,1921
gbt_int4_compress(121,2372
gbt_int4_fetch(129,2530
gbt_int4_consistent(137,2682
gbt_int4_distance(160,3341
gbt_int4_union(178,3800
gbt_int4_penalty(189,4093
gbt_int4_picksplit(201,4508
gbt_int4_same(209,4721

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_uuid.c,462
	pg_uuid_t	lower,13,187
				upper;14,205
} uuidKEY;15,216
uuid_internal_cmp(31,533
gbt_uuidgt(37,664
gbt_uuidge(43,817
gbt_uuideq(49,971
gbt_uuidle(55,1125
gbt_uuidlt(61,1279
gbt_uuidkey_cmp(67,1431
static const gbtree_ninfo tinfo 80,1753
gbt_uuid_compress(101,2069
gbt_uuid_fetch(126,2620
gbt_uuid_consistent(134,2772
gbt_uuid_union(157,3445
uuid_2_double(170,3820
gbt_uuid_penalty(198,4649
gbt_uuid_picksplit(219,5252
gbt_uuid_same(227,5465

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_enum.c,411
	Oid			lower;15,246
	Oid			upper;16,260
} oidKEY;17,274
gbt_enumgt(32,589
gbt_enumge(39,843
gbt_enumeq(46,1097
gbt_enumle(51,1224
gbt_enumlt(58,1478
gbt_enumkey_cmp(66,1732
static const gbtree_ninfo tinfo 86,2321
gbt_enum_compress(107,2681
gbt_enum_fetch(115,2839
gbt_enum_consistent(123,2991
gbt_enum_union(146,3654
gbt_enum_penalty(157,3943
gbt_enum_picksplit(169,4352
gbt_enum_same(177,4565

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_utils_var.h,442
#define __BTREE_UTILS_VAR_H__5,77
typedef bytea GBT_VARKEY;12,209
	bytea	   *lower,lower17,279
			   *upper;upper18,297
} GBT_VARKEY_R;19,311
	enum gbtree_type t;29,389
	int32		eml;30,428
	bool		trnc;32,514
	bool		(*f_gt)f_gt36,577
	bool		(*f_ge)f_ge37,658
	bool		(*f_eq)f_eq38,740
	bool		(*f_le)f_le39,814
	bool		(*f_lt)f_lt40,893
	int32		(*f_cmp)f_cmp41,971
	GBT_VARKEY *(*f_l2n)f_l2n42,1049
} gbtree_vinfo;43,1132

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_inet.c,418
typedef struct inetkey12,200
	double		lower;14,225
	double		upper;15,241
} inetKEY;16,257
gbt_inetgt(30,536
gbt_inetge(35,668
gbt_ineteq(40,801
gbt_inetle(45,934
gbt_inetlt(50,1067
gbt_inetkey_cmp(56,1199
static const gbtree_ninfo tinfo 73,1545
gbt_inet_compress(94,1867
gbt_inet_consistent(120,2414
gbt_inet_union(148,3197
gbt_inet_penalty(159,3488
gbt_inet_picksplit(172,3902
gbt_inet_same(180,4115

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_cash.c,480
	Cash		lower;13,184
	Cash		upper;14,198
} cashKEY;15,212
gbt_cashgt(30,567
gbt_cashge(35,695
gbt_casheq(40,824
gbt_cashle(45,953
gbt_cashlt(50,1082
gbt_cashkey_cmp(56,1210
gbt_cash_dist(73,1569
static const gbtree_ninfo tinfo 79,1677
cash_dist(96,1919
gbt_cash_compress(120,2359
gbt_cash_fetch(128,2517
gbt_cash_consistent(136,2669
gbt_cash_distance(160,3336
gbt_cash_union(178,3792
gbt_cash_penalty(189,4083
gbt_cash_picksplit(202,4497
gbt_cash_same(210,4710

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_date.c,490
	DateADT		lower;13,188
	DateADT		upper;14,205
} dateKEY;15,222
gbt_dategt(30,577
gbt_datege(38,809
gbt_dateeq(46,1041
gbt_datele(55,1276
gbt_datelt(63,1508
gbt_datekey_cmp(73,1741
gdb_date_dist(91,2244
static const gbtree_ninfo tinfo 102,2556
date_dist(119,2799
gbt_date_compress(137,3162
gbt_date_fetch(145,3320
gbt_date_consistent(153,3472
gbt_date_distance(177,4145
gbt_date_union(195,4607
gbt_date_penalty(206,4898
gbt_date_picksplit(243,5934
gbt_date_same(251,6147

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_gist.c,88
PG_MODULE_MAGIC;8,90
gbtreekey_in(20,349
gbtreekey_out(32,587
gbt_decompress(46,826

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_float8.c,550
typedef struct float8key9,121
	float8		lower;11,148
	float8		upper;12,164
} float8KEY;13,180
gbt_float8gt(29,556
gbt_float8ge(34,690
gbt_float8eq(39,825
gbt_float8le(44,960
gbt_float8lt(49,1095
gbt_float8key_cmp(55,1229
gbt_float8_dist(72,1594
static const gbtree_ninfo tinfo 85,1839
float8_dist(102,2101
gbt_float8_compress(120,2431
gbt_float8_fetch(128,2591
gbt_float8_consistent(136,2745
gbt_float8_distance(160,3420
gbt_float8_union(178,3884
gbt_float8_penalty(189,4181
gbt_float8_picksplit(202,4601
gbt_float8_same(210,4816

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_text.c,378
gbt_textgt(26,529
gbt_textge(35,763
gbt_texteq(44,997
gbt_textle(53,1230
gbt_textlt(62,1464
gbt_textcmp(71,1699
static gbtree_vinfo tinfo 79,1928
gbt_text_compress(100,2198
gbt_bpchar_compress(113,2433
gbt_text_consistent(143,2924
gbt_bpchar_consistent(171,3669
gbt_text_union(199,4510
gbt_text_picksplit(210,4779
gbt_text_same(221,5066
gbt_text_penalty(233,5332

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_int8.c,514
typedef struct int64key10,143
	int64		lower;12,169
	int64		upper;13,184
} int64KEY;14,199
gbt_int8gt(30,557
gbt_int8ge(35,687
gbt_int8eq(40,818
gbt_int8le(45,949
gbt_int8lt(50,1080
gbt_int8key_cmp(56,1210
gbt_int8_dist(73,1571
static const gbtree_ninfo tinfo 79,1680
int8_dist(96,1923
gbt_int8_compress(121,2373
gbt_int8_fetch(129,2531
gbt_int8_consistent(137,2683
gbt_int8_distance(160,3342
gbt_int8_union(178,3801
gbt_int8_penalty(189,4094
gbt_int8_picksplit(201,4509
gbt_int8_same(209,4722

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gist/btree_utils_num.c,208
gbt_num_compress(14,214
gbt_num_fetch(102,1987
gbt_num_union(164,3399
gbt_num_same(204,4382
gbt_num_bin_union(220,4722
gbt_num_consistent(255,5707
gbt_num_distance(308,6961
gbt_num_picksplit(331,7498

/home/seinoyu/pgsql/master/postgresql/contrib/pg_prewarm/autoprewarm.c,1265
#define AUTOPREWARM_FILE 55,1779
typedef struct BlockInfoRecord58,1865
	Oid			database;60,1898
	Oid			tablespace;61,1915
	Oid			filenode;62,1934
	ForkNumber	forknum;63,1951
	BlockNumber blocknum;64,1972
} BlockInfoRecord;65,1995
typedef struct AutoPrewarmSharedState68,2072
	LWLock		lock;70,2112
	pid_t		bgworker_pid;71,2152
	pid_t		pid_using_dumpfile;72,2198
	dsm_handle	block_info_handle;75,2333
	Oid			database;76,2364
	int			prewarm_start_idx;77,2381
	int			prewarm_stop_idx;78,2407
	int			prewarmed_blocks;79,2432
} AutoPrewarmSharedState;80,2457
static volatile sig_atomic_t got_sigterm 100,3150
static volatile sig_atomic_t got_sighup 101,3200
static AutoPrewarmSharedState *apw_state apw_state104,3288
static bool autoprewarm 107,3359
static int	autoprewarm_interval;108,3411
_PG_init(114,3502
autoprewarm_main(157,4520
apw_load_buffers(271,7655
autoprewarm_database_main(424,11944
apw_dump_now(559,15461
autoprewarm_start_worker(699,19093
autoprewarm_dump_now(731,19876
apw_init_shmem(752,20363
apw_detach_shmem(778,20935
apw_start_leader_worker(792,21301
apw_start_database_worker(834,22546
#define cmp_member_elem(866,23664
apw_compare_blockinfo(884,24174
apw_sigterm_handler(902,24548
apw_sighup_handler(918,24751

/home/seinoyu/pgsql/master/postgresql/contrib/pg_prewarm/pg_prewarm.c,179
PG_MODULE_MAGIC;28,625
	PREWARM_PREFETCH,34,692
	PREWARM_READ,35,711
	PREWARM_BUFFER36,726
} PrewarmType;37,742
static PGAlignedBlock blockbuffer;39,758
pg_prewarm(54,1419

/home/seinoyu/pgsql/master/postgresql/contrib/jsonb_plpython/jsonb_plpython.c,963
PG_MODULE_MAGIC;10,176
typedef char *(*PLyObject_AsString_t)PLyObject_AsString_t15,263
static PLyObject_AsString_t PLyObject_AsString_p;16,319
typedef void (*PLy_elog_impl_t)PLy_elog_impl_t18,370
static PLy_elog_impl_t PLy_elog_impl_p;19,437
static PyObject *decimal_constructor;decimal_constructor25,604
typedef PyObject *(*PLyUnicode_FromStringAndSize_t)PLyUnicode_FromStringAndSize_t32,855
static PLyUnicode_FromStringAndSize_t PLyUnicode_FromStringAndSize_p;34,944
_PG_init(41,1113
#define PLyObject_AsString 62,1951
#define PLyUnicode_FromStringAndSize 63,2001
#undef PLy_elog64,2071
#define PLy_elog 65,2087
PLyString_FromJsonbValue(73,2228
PLyString_ToJsonbValue(86,2477
PLyObject_FromJsonbValue(99,2774
PLyObject_FromJsonbContainer(141,3596
PLyMapping_ToJsonbValue(269,5980
PLySequence_ToJsonbValue(326,7206
PLyNumber_ToJsonbValue(364,7898
PLyObject_ToJsonbValue(414,8991
plpython_to_jsonb(463,10247
jsonb_to_plpython(481,10646

/home/seinoyu/pgsql/master/postgresql/contrib/unaccent/unaccent.c,322
PG_MODULE_MAGIC;28,683
typedef struct TrieChar42,1349
	struct TrieChar *nextChar;nextChar44,1375
	char	   *replaceTo;replaceTo45,1403
	int			replacelen;46,1424
} TrieChar;47,1443
placeChar(56,1667
initTrie(96,2552
findReplaceTo(244,5838
unaccent_init(271,6298
unaccent_lexize(312,7162
unaccent_dict(372,8482

/home/seinoyu/pgsql/master/postgresql/contrib/passwordcheck/passwordcheck.c,182
PG_MODULE_MAGIC;27,529
static check_password_hook_type prev_check_password_hook 30,588
#define MIN_PWD_LENGTH 33,705
check_password(56,1443
_PG_init(142,3835
_PG_fini(153,4039

/home/seinoyu/pgsql/master/postgresql/contrib/auto_explain/auto_explain.c,1239
PG_MODULE_MAGIC;23,493
static int	auto_explain_log_min_duration 26,531
static bool auto_explain_log_analyze 27,595
static bool auto_explain_log_verbose 28,641
static bool auto_explain_log_buffers 29,687
static bool auto_explain_log_wal 30,733
static bool auto_explain_log_triggers 31,775
static bool auto_explain_log_timing 32,822
static bool auto_explain_log_settings 33,866
static int	auto_explain_log_format 34,913
static int	auto_explain_log_level 35,971
static bool auto_explain_log_nested_statements 36,1012
static double auto_explain_sample_rate 37,1068
static const struct config_enum_entry format_options[format_options39,1113
static const struct config_enum_entry loglevel_options[loglevel_options47,1348
static int	nesting_level 62,1750
static bool current_query_sampled 65,1833
#define auto_explain_enabled(67,1877
static ExecutorStart_hook_type prev_ExecutorStart 73,2086
static ExecutorRun_hook_type prev_ExecutorRun 74,2144
static ExecutorFinish_hook_type prev_ExecutorFinish 75,2198
static ExecutorEnd_hook_type prev_ExecutorEnd 76,2258
_PG_init(93,2707
_PG_fini(250,6298
explain_ExecutorStart(263,6573
explain_ExecutorRun(327,8542
explain_ExecutorFinish(349,8986
explain_ExecutorEnd(370,9296

/home/seinoyu/pgsql/master/postgresql/contrib/seg/seg.c,1021
#define DatumGetSegP(21,542
#define PG_GETARG_SEG_P(22,595
PG_MODULE_MAGIC;30,708
	float		center;37,800
	OffsetNumber index;38,816
	SEG		   *data;data39,837
} gseg_picksplit_item;40,853
seg_in(103,2510
seg_out(119,2772
seg_center(160,3677
seg_lower(168,3822
seg_upper(176,3929
gseg_consistent(195,4442
gseg_union(222,5183
gseg_compress(253,5757
gseg_decompress(259,5842
gseg_penalty(269,6046
gseg_picksplit_item_cmp(297,6703
gseg_picksplit(318,7239
gseg_same(411,9657
gseg_leaf_consistent(431,10016
gseg_internal_consistent(475,11163
gseg_binary_union(524,12379
seg_contains(536,12548
seg_contained(545,12726
seg_same(558,13091
seg_overlap(570,13323
seg_over_left(582,13657
seg_left(593,13863
seg_right(604,14065
seg_over_right(615,14305
seg_union(624,14457
seg_inter(664,15079
rt_seg_size(704,15707
seg_size(713,15864
seg_cmp(725,16189
seg_lt(847,19383
seg_le(857,19572
seg_gt(867,19762
seg_ge(877,19951
seg_different(888,20142
restore(913,20925
significant_digits(1059,23778

/home/seinoyu/pgsql/master/postgresql/contrib/seg/segdata.h,195
typedef struct SEG4,32
	float4		lower;6,53
	float4		upper;7,69
	char		l_sigd;8,85
	char		u_sigd;9,100
	char		l_ext;10,115
	char		u_ext;11,129
} SEG;12,143
extern void seg_yyerror(19,262

/home/seinoyu/pgsql/master/postgresql/contrib/postgres_fdw/shippable.c,396
static HTAB *ShippableCacheHash ShippableCacheHash34,1182
	Oid			objid;44,1496
	Oid			classid;45,1545
	Oid			serverid;46,1602
} ShippableCacheKey;47,1659
	ShippableCacheKey key;51,1698
	bool		shippable;52,1754
} ShippableCacheEntry;53,1772
InvalidateShippableCacheCallback(65,2139
InitializeShippableCache(91,2876
lookup_shippable(117,3702
is_builtin(153,5029
is_shippable(163,5204

/home/seinoyu/pgsql/master/postgresql/contrib/postgres_fdw/postgres_fdw.h,1396
#define POSTGRES_FDW_H14,399
typedef struct PgFdwRelationInfo29,912
	bool		pushdown_safe;35,1050
	List	   *remote_conds;remote_conds42,1288
	List	   *local_conds;local_conds43,1312
	List	   *final_remote_exprs;final_remote_exprs46,1407
	Bitmapset  *attrs_used;attrs_used49,1509
	bool		qp_is_pushdown_safe;52,1598
	QualCost	local_conds_cost;55,1671
	Selectivity local_conds_sel;56,1699
	Selectivity joinclause_sel;59,1768
	double		rows;62,1872
	int			width;63,1887
	Cost		startup_cost;64,1901
	Cost		total_cost;65,1922
	double		retrieved_rows;72,2150
	Cost		rel_startup_cost;73,2175
	Cost		rel_total_cost;74,2200
	bool		use_remote_estimate;77,2264
	Cost		fdw_startup_cost;78,2292
	Cost		fdw_tuple_cost;79,2317
	List	   *shippable_extensions;shippable_extensions80,2340
	ForeignTable *table;table83,2445
	ForeignServer *server;server84,2467
	UserMapping *user;user85,2491
	int			fetch_size;87,2557
	char	   *relation_name;relation_name97,3030
	RelOptInfo *outerrel;outerrel100,3080
	RelOptInfo *innerrel;innerrel101,3103
	JoinType	jointype;102,3126
	List	   *joinclauses;joinclauses104,3216
	UpperRelationKind stage;107,3301
	List	   *grouped_tlist;grouped_tlist110,3356
	bool		make_outerrel_subquery;113,3410
	bool		make_innerrel_subquery;115,3498
	Relids		lower_subquery_rels;117,3586
	int			relation_index;124,3789
} PgFdwRelationInfo;125,3812

/home/seinoyu/pgsql/master/postgresql/contrib/postgres_fdw/connection.c,1229
typedef Oid ConnCacheKey;46,1592
typedef struct ConnCacheEntry48,1619
	ConnCacheKey key;50,1651
	PGconn	   *conn;conn51,1703
	int			xact_depth;53,1822
	bool		have_prep_stmt;55,1932
	bool		have_error;56,2002
	bool		changing_xact_state;57,2068
	bool		invalidated;58,2131
	uint32		server_hashvalue;59,2186
	uint32		mapping_hashvalue;60,2252
} ConnCacheEntry;61,2317
static HTAB *ConnectionHash ConnectionHash66,2390
static unsigned int cursor_number 69,2493
static unsigned int prep_stmt_number 70,2532
static bool xact_got_connection 73,2637
GetConnection(107,4320
connect_pg_server(222,7755
disconnect_pg_server(342,11565
UserMappingPasswordRequired(357,11875
check_conn_params(380,12478
configure_remote_session(417,13737
do_sql_command(453,14992
begin_remote_xact(476,15794
ReleaseConnection(519,16901
GetCursorNumber(540,17619
GetPrepStmtNumber(554,18063
pgfdw_exec_query(567,18304
pgfdw_get_result(591,19012
pgfdw_report_error(656,20473
pgfdw_xact_callback(707,22123
pgfdw_subxact_callback(894,27896
pgfdw_inval_callback(1008,31507
pgfdw_reject_incomplete_xact_state_change(1044,32807
pgfdw_cancel_query(1078,33870
pgfdw_exec_cleanup_query(1125,35152
pgfdw_get_cleanup_result(1179,36967

/home/seinoyu/pgsql/master/postgresql/contrib/postgres_fdw/option.c,458
typedef struct PgFdwOption28,735
	const char *keyword;keyword30,764
	Oid			optcontext;31,786
	bool		is_libpq_opt;32,854
} PgFdwOption;33,908
static PgFdwOption *postgres_fdw_options;postgres_fdw_options39,1011
static PQconninfoOption *libpq_options;libpq_options45,1134
postgres_fdw_validator(65,1636
InitPgFdwOptions(181,5102
is_valid_option(293,8944
is_libpq_option(312,9338
ExtractConnectionOptions(333,9845
ExtractExtensionList(364,10488

/home/seinoyu/pgsql/master/postgresql/contrib/postgres_fdw/postgres_fdw.c,6473
PG_MODULE_MAGIC;48,1274
#define DEFAULT_FDW_STARTUP_COST	51,1344
#define DEFAULT_FDW_TUPLE_COST	54,1459
#define DEFAULT_FDW_SORT_MULTIPLIER 57,1557
enum FdwScanPrivateIndex66,1892
	FdwScanPrivateSelectSql,69,1979
	FdwScanPrivateRetrievedAttrs,71,2070
	FdwScanPrivateFetchSize,73,2152
	FdwScanPrivateRelations79,2303
enum FdwModifyPrivateIndex92,2795
	FdwModifyPrivateUpdateSql,95,2884
	FdwModifyPrivateTargetAttnums,97,2978
	FdwModifyPrivateHasReturning,99,3063
	FdwModifyPrivateRetrievedAttrs101,3158
enum FdwDirectModifyPrivateIndex113,3621
	FdwDirectModifyPrivateUpdateSql,116,3716
	FdwDirectModifyPrivateHasReturning,118,3803
	FdwDirectModifyPrivateRetrievedAttrs,120,3904
	FdwDirectModifyPrivateSetProcessed122,3996
typedef struct PgFdwScanState128,4100
	Relation	rel;130,4132
	TupleDesc	tupdesc;132,4234
	AttInMetadata *attinmeta;attinmeta133,4286
	char	   *query;query136,4393
	List	   *retrieved_attrs;retrieved_attrs137,4441
	PGconn	   *conn;conn140,4545
	unsigned int cursor_number;141,4595
	bool		cursor_exists;142,4660
	int			numParams;143,4716
	FmgrInfo   *param_flinfo;param_flinfo144,4778
	List	   *param_exprs;param_exprs145,4848
	const char **param_values;param_values146,4917
	HeapTuple  *tuples;tuples149,5020
	int			num_tuples;150,5085
	int			next_tuple;151,5132
	int			fetch_ct_2;154,5263
	bool		eof_reached;155,5315
	MemoryContext batch_cxt;158,5404
	MemoryContext temp_cxt;159,5476
	int			fetch_size;161,5546
} PgFdwScanState;162,5599
typedef struct PgFdwModifyState167,5689
	Relation	rel;169,5723
	AttInMetadata *attinmeta;attinmeta170,5783
	PGconn	   *conn;conn173,5890
	char	   *p_name;p_name174,5940
	char	   *query;query177,6040
	List	   *target_attrs;target_attrs178,6102
	bool		has_returning;179,6165
	List	   *retrieved_attrs;retrieved_attrs180,6222
	AttrNumber	ctidAttno;183,6344
	int			p_nums;184,6410
	FmgrInfo   *p_flinfo;p_flinfo185,6466
	MemoryContext temp_cxt;188,6564
	struct PgFdwModifyState *aux_fmstate;aux_fmstate191,6687
} PgFdwModifyState;193,6779
typedef struct PgFdwDirectModifyState198,6884
	Relation	rel;200,6924
	AttInMetadata *attinmeta;attinmeta201,6984
	char	   *query;query204,7091
	bool		has_returning;205,7146
	List	   *retrieved_attrs;retrieved_attrs206,7203
	bool		set_processed;207,7272
	PGconn	   *conn;conn210,7371
	int			numParams;211,7423
	FmgrInfo   *param_flinfo;param_flinfo212,7485
	List	   *param_exprs;param_exprs213,7555
	const char **param_values;param_values214,7624
	PGresult   *result;result217,7727
	int			num_tuples;218,7773
	int			next_tuple;219,7818
	Relation	resultRel;220,7872
	AttrNumber *attnoMap;attnoMap221,7939
	AttrNumber	ctidAttno;222,8008
	AttrNumber	oidAttno;223,8066
	bool		hasSystemCols;224,8122
	MemoryContext temp_cxt;227,8220
} PgFdwDirectModifyState;228,8289
typedef struct PgFdwAnalyzeState233,8367
	Relation	rel;235,8402
	AttInMetadata *attinmeta;attinmeta236,8462
	List	   *retrieved_attrs;retrieved_attrs237,8534
	HeapTuple  *rows;rows240,8629
	int			targrows;241,8679
	int			numrows;242,8727
	double		samplerows;245,8805
	double		rowstoskip;246,8851
	ReservoirStateData rstate;247,8916
	MemoryContext anl_cxt;250,9011
	MemoryContext temp_cxt;251,9080
} PgFdwAnalyzeState;252,9149
enum FdwPathPrivateIndex261,9406
	FdwPathPrivateHasFinalSort,264,9487
	FdwPathPrivateHasLimit266,9565
	PathTarget *target;target272,9681
	bool		has_final_sort;273,9702
	bool		has_limit;274,9725
	double		limit_tuples;275,9743
	int64		count_est;276,9766
	int64		offset_est;277,9785
} PgFdwPathExtraData;278,9805
typedef struct ConversionLocation283,9890
	Relation	rel;285,9926
	AttrNumber	cur_attno;286,9981
	ForeignScanState *fsstate;fsstate294,10316
} ConversionLocation;295,10344
	Expr	   *current;current300,10438
	List	   *already_used;already_used301,10503
} ec_member_foreign_arg;302,10564
postgres_fdw_handler(513,19188
postgresGetForeignRelSize(572,21566
get_useful_ecs_for_relation(756,28362
get_useful_pathkeys_for_relation(852,31768
postgresGetForeignPaths(963,35362
postgresGetForeignPlan(1172,42023
postgresBeginForeignScan(1392,49062
postgresIterateForeignScan(1496,52255
postgresReScanForeignScan(1536,53180
postgresEndForeignScan(1592,54678
postgresAddForeignUpdateTargets(1616,55309
postgresPlanForeignModify(1653,56186
postgresBeginForeignModify(1789,60301
postgresExecForeignInsert(1842,61679
postgresExecForeignUpdate(1870,62421
postgresExecForeignDelete(1884,62763
postgresEndForeignModify(1898,63116
postgresBeginForeignInsert(1916,63537
postgresEndForeignInsert(2036,67719
postgresIsForeignRelUpdatable(2060,68278
postgresRecheckForeignScan(2104,69313
postgresPlanDirectModify(2135,70069
postgresBeginDirectModify(2331,75289
postgresIterateDirectModify(2450,78966
postgresEndDirectModify(2494,80083
postgresExplainForeignScan(2518,80650
postgresExplainForeignModify(2625,83733
postgresExplainDirectModify(2646,84209
estimate_path_cost_size(2675,85168
get_remote_estimate(3188,103242
adjust_foreign_grouping_path_cost(3235,104416
ec_member_matches_foreign(3289,106004
create_cursor(3318,106715
fetch_more_data(3390,108859
set_transmission_modes(3473,111279
reset_transmission_modes(3501,112054
close_cursor(3510,112188
create_foreign_modify(3533,112744
execute_foreign_modify(3639,116008
prepare_foreign_modify(3729,118377
convert_prep_stmt_params(3779,119963
store_returning_result(3841,121379
finish_foreign_modify(3875,122070
build_remote_returning(3909,122909
rebuild_fdw_scan_tlist(4010,125327
execute_dml_stmt(4036,125882
get_returning_data(4086,127583
init_returning_filter(4160,129525
apply_returning_filter(4233,131336
prepare_query_params(4332,133626
process_query_params(4377,134903
postgresAnalyzeForeignTable(4418,135775
postgresAcquireSampleRowsFunc(4492,138141
analyze_row_processor(4653,142396
postgresImportForeignSchema(4720,144126
foreign_join_ok(4998,152964
add_paths_with_pathkeys_for_rel(5260,162069
apply_server_options(5327,163819
apply_table_options(5355,164725
merge_fdw_options(5380,165473
postgresGetForeignJoinPaths(5430,167207
foreign_grouping_ok(5569,171806
postgresGetForeignUpperPaths(5806,179191
add_foreign_grouping_paths(5859,180667
add_foreign_ordered_paths(5950,183562
add_foreign_final_paths(6077,187495
make_tuple_from_result_row(6313,195046
conversion_error_callback(6462,199237
find_em_expr_for_input_target(6531,201137

/home/seinoyu/pgsql/master/postgresql/contrib/postgres_fdw/deparse.c,2445
typedef struct foreign_glob_cxt63,2387
	PlannerInfo *root;root65,2421
	RelOptInfo *foreignrel;foreignrel66,2470
	Relids		relids;67,2543
} foreign_glob_cxt;69,2627
	FDW_COLLATE_NONE,77,2811
	FDW_COLLATE_SAFE,80,2966
	FDW_COLLATE_UNSAFE	81,3030
} FDWCollateState;83,3146
typedef struct foreign_loc_cxt85,3166
	Oid			collation;87,3199
	FDWCollateState state;88,3257
} foreign_loc_cxt;89,3322
typedef struct deparse_expr_cxt94,3376
	PlannerInfo *root;root96,3410
	RelOptInfo *foreignrel;foreignrel97,3459
	RelOptInfo *scanrel;scanrel98,3532
	StringInfo	buf;101,3681
	List	  **params_list;params_list102,3733
} deparse_expr_cxt;103,3799
#define REL_ALIAS_PREFIX	105,3820
#define ADD_REL_QUALIFIER(107,3902
#define SUBQUERY_REL_ALIAS_PREFIX	109,4004
#define SUBQUERY_COL_ALIAS_PREFIX	110,4042
classifyConditions(204,8385
is_foreign_expr(230,8918
foreign_expr_walker(294,11102
is_foreign_param(871,27296
deparse_type_name(919,28690
build_tlist_to_deparse(938,29258
deparseSelectStmtForRel(995,31129
deparseSelectSql(1077,33569
deparseFromExpr(1135,35249
deparseTargetList(1169,36367
deparseLockingClause(1245,38232
appendConditions(1335,41117
get_jointype_name(1369,41916
deparseExplicitTargetList(1406,42712
deparseSubqueryTargetList(1442,43474
deparseFromExprForRel(1483,44694
deparseRangeTblRef(1634,49324
deparseInsertSql(1705,51427
deparseUpdateSql(1769,52863
deparseDirectUpdateSql(1821,54533
deparseDeleteSql(1906,56822
deparseDirectDeleteSql(1935,57901
deparseReturningList(1986,59307
deparseAnalyzeSizeSql(2043,60824
deparseAnalyzeSql(2063,61390
deparseColumnRef(2124,62820
deparseRelation(2252,66413
deparseStringLiteral(2292,67419
deparseExpr(2327,68422
deparseVar(2389,69991
deparseConst(2455,71768
deparseParam(2561,74252
deparseSubscriptingRef(2594,74887
deparseFuncExpr(2640,76126
deparseOpExpr(2703,77713
deparseOperatorName(2754,78987
deparseDistinctExpr(2782,79633
deparseScalarArrayOpExpr(2800,80142
deparseRelabelType(2845,81309
deparseBoolExpr(2858,81629
deparseNullTest(2896,82353
deparseArrayExpr(2929,83204
deparseAggref(2955,83786
appendAggOrderBy(3047,85864
printRemoteParam(3106,87637
printRemotePlaceholder(3132,88834
appendGroupByClause(3145,89149
appendOrderByClause(3182,90066
appendLimitClause(3236,91356
appendFunctionName(3264,92005
deparseSortGroupClause(3299,92957
is_subquery_var(3344,94059
get_relation_column_alias_ids(3406,95843

/home/seinoyu/pgsql/master/postgresql/contrib/pg_freespacemap/pg_freespacemap.c,45
PG_MODULE_MAGIC;15,377
pg_freespace(24,533

/home/seinoyu/pgsql/master/postgresql/contrib/pg_visibility/pg_visibility.c,719
PG_MODULE_MAGIC;26,722
typedef struct vbits28,740
	BlockNumber next;30,763
	BlockNumber count;31,782
	uint8		bits[bits32,802
} vbits;33,839
typedef struct corrupt_items35,849
	BlockNumber next;37,880
	BlockNumber count;38,899
	ItemPointer tids;39,919
} corrupt_items;40,938
pg_visibility_map(68,2006
pg_visibility(108,3114
pg_visibility_map_rel(166,4599
pg_visibility_rel(211,5772
pg_visibility_map_summary(257,7005
pg_check_frozen(315,8559
pg_check_visible(347,9422
pg_truncate_visibility_map(382,10417
pg_visibility_tupdesc(449,12504
collect_visibility_data(478,13257
collect_corrupt_items(556,15357
record_corrupt_item(733,20651
tuple_all_visible(751,21137
check_relation_relkind(779,21975

/home/seinoyu/pgsql/master/postgresql/contrib/isn/ISSN.h,89
const unsigned ISSN_index[ISSN_index34,1064
const char *ISSN_range[ISSN_range46,1194

/home/seinoyu/pgsql/master/postgresql/contrib/isn/UPC.h,83
const unsigned UPC_index[UPC_index14,261
const char *UPC_range[UPC_range26,390

/home/seinoyu/pgsql/master/postgresql/contrib/isn/EAN13.h,91
const unsigned EAN13_index[EAN13_index14,343
const char *EAN13_range[EAN13_range26,487

/home/seinoyu/pgsql/master/postgresql/contrib/isn/isn.h,196
#define ISN_H16,419
#undef ISN_DEBUG20,453
#define ISN_WEAK_MODE21,470
typedef uint64 ean13;26,551
#define EAN13_FORMAT 28,574
#define PG_GETARG_EAN13(30,610
#define PG_RETURN_EAN13(31,656

/home/seinoyu/pgsql/master/postgresql/contrib/isn/ISBN.h,197
const unsigned ISBN_index[ISBN_index37,977
const char *ISBN_range[ISBN_range50,1125
const unsigned ISBN_index_new[ISBN_index_new970,25001
const char *ISBN_range_new[ISBN_range_new983,25136

/home/seinoyu/pgsql/master/postgresql/contrib/isn/isn.c,1114
PG_MODULE_MAGIC;26,582
#define ISN_DEBUG 29,627
#define ISN_DEBUG 31,653
#define MAXEAN13LEN 34,681
enum isn_type36,705
	INVALID,38,721
	INVALID, ANY,38,721
	INVALID, ANY, EAN13,38,721
	INVALID, ANY, EAN13, ISBN,38,721
	INVALID, ANY, EAN13, ISBN, ISMN,38,721
	INVALID, ANY, EAN13, ISBN, ISMN, ISSN,38,721
	INVALID, ANY, EAN13, ISBN, ISMN, ISSN, UPC38,721
static const char *const isn_names[isn_names41,769
static bool g_weak 43,887
pg_attribute_unused(63,1554
dehyphenate(143,3138
hyphenate(168,3612
weight_checkdig(278,5778
checkdig(304,6221
ean2isn(341,6940
ean2ISBN(443,9246
ean2ISMN(468,9838
ean2ISSN(477,10072
ean2UPC(493,10419
str2ean(509,10845
ean2string(533,11530
string2ean(685,15330
_PG_init(930,21281
isn_out(951,21779
ean13_out(967,22043
ean13_in(983,22308
isbn_in(996,22523
ismn_in(1009,22736
issn_in(1022,22949
upc_in(1035,23160
isbn_cast_from_ean13(1048,23393
ismn_cast_from_ean13(1060,23608
issn_cast_from_ean13(1072,23823
upc_cast_from_ean13(1084,24037
is_valid(1099,24316
make_valid(1110,24522
accept_weak_input(1124,24843
weak_input_status(1136,25074

/home/seinoyu/pgsql/master/postgresql/contrib/isn/ISMN.h,88
const unsigned ISMN_index[ISMN_index33,990
const char *ISMN_range[ISMN_range45,1120

/home/seinoyu/pgsql/master/postgresql/contrib/earthdistance/earthdistance.c,191
#define M_PI 10,146
PG_MODULE_MAGIC;13,190
static const double EARTH_RADIUS 16,250
static const double TWO_PI 17,298
degtorad(30,594
geo_distance_internal(49,1092
geo_distance(96,2182

/home/seinoyu/pgsql/master/postgresql/contrib/lo/lo.c,42
PG_MODULE_MAGIC;15,217
lo_manage(24,350

/home/seinoyu/pgsql/master/postgresql/contrib/ltree_plpython/ltree_plpython.c,278
PG_MODULE_MAGIC;7,89
typedef PyObject *(*PLyUnicode_FromStringAndSize_t)PLyUnicode_FromStringAndSize_t13,208
static PLyUnicode_FromStringAndSize_t PLyUnicode_FromStringAndSize_p;14,294
_PG_init(22,464
#define PLyUnicode_FromStringAndSize 35,911
ltree_to_plpython(41,1028

/home/seinoyu/pgsql/master/postgresql/contrib/hstore_plpython/hstore_plpython.c,1195
PG_MODULE_MAGIC;8,116
typedef char *(*PLyObject_AsString_t)PLyObject_AsString_t13,209
static PLyObject_AsString_t PLyObject_AsString_p;14,265
typedef PyObject *(*PLyUnicode_FromStringAndSize_t)PLyUnicode_FromStringAndSize_t16,341
static PLyUnicode_FromStringAndSize_t PLyUnicode_FromStringAndSize_p;17,427
typedef HStore *(*hstoreUpgrade_t)hstoreUpgrade_t21,549
static hstoreUpgrade_t hstoreUpgrade_p;22,598
typedef int (*hstoreUniquePairs_t)hstoreUniquePairs_t23,638
static hstoreUniquePairs_t hstoreUniquePairs_p;24,709
typedef HStore *(*hstorePairs_t)hstorePairs_t25,757
static hstorePairs_t hstorePairs_p;26,834
typedef size_t (*hstoreCheckKeyLen_t)hstoreCheckKeyLen_t27,870
static hstoreCheckKeyLen_t hstoreCheckKeyLen_p;28,922
typedef size_t (*hstoreCheckValLen_t)hstoreCheckValLen_t29,970
static hstoreCheckValLen_t hstoreCheckValLen_p;30,1022
_PG_init(37,1163
#define PLyObject_AsString 74,2764
#define PLyUnicode_FromStringAndSize 75,2812
#define hstoreUpgrade 76,2880
#define hstoreUniquePairs 77,2918
#define hstorePairs 78,2964
#define hstoreCheckKeyLen 79,2998
#define hstoreCheckValLen 80,3044
hstore_to_plpython(86,3140
plpython_to_hstore(128,4006

/home/seinoyu/pgsql/master/postgresql/contrib/citext/citext.c,463
PG_MODULE_MAGIC;12,204
citextcmp(35,653
internal_citext_pattern_cmp(68,1595
citext_cmp(106,2294
citext_pattern_cmp(123,2609
citext_hash(140,2943
citext_hash_extended(159,3353
citext_eq(185,3889
citext_ne(215,4629
citext_lt(245,5369
citext_le(262,5676
citext_gt(279,5984
citext_ge(296,6291
citext_pattern_lt(313,6607
citext_pattern_le(330,6948
citext_pattern_gt(347,7290
citext_pattern_ge(364,7631
citext_smaller(387,8050
citext_larger(400,8329

/home/seinoyu/pgsql/master/postgresql/contrib/uuid-ossp/uuid-ossp.c,1095
#define uuid_hash 28,775
#undef uuid_hash40,1051
#define UUID_MAKE_MC 59,1548
#define UUID_MAKE_V1 60,1571
#define UUID_MAKE_V2 61,1594
#define UUID_MAKE_V3 62,1617
#define UUID_MAKE_V4 63,1640
#define UUID_MAKE_V5 64,1663
	uint32_t	time_low;74,1881
	uint16_t	time_mid;75,1901
	uint16_t	time_hi_and_version;76,1921
	uint8_t		clock_seq_hi_and_reserved;77,1952
	uint8_t		clock_seq_low;78,1989
	uint8_t		node[node79,2014
} dce_uuid_t;80,2033
#define dce_uuid_t 82,2053
#define UUID_TO_NETWORK(88,2174
#define UUID_TO_LOCAL(95,2369
#define UUID_V3_OR_V5(102,2562
PG_MODULE_MAGIC;112,2807
pguuid_complain(129,3227
get_cached_uuid_t(161,4612
uuid_to_string(180,4919
string_to_uuid(196,5195
special_uuid_value(207,5384
uuid_generate_internal(223,5751
uuid_generate_v35_internal(239,6095
uuid_generate_internal(256,6477
uuid_nil(402,9827
uuid_ns_dns(414,10031
uuid_ns_url(426,10241
uuid_ns_oid(438,10451
uuid_ns_x500(450,10661
uuid_generate_v1(462,10873
uuid_generate_v1mc(469,10981
uuid_generate_v3(500,11629
uuid_generate_v4(515,11972
uuid_generate_v5(522,12080

/home/seinoyu/pgsql/master/postgresql/contrib/pg_trgm/trgm_gist.c,965
	int32		vl_len_;15,241
	int			siglen;16,305
} TrgmGistOptions;17,354
#define LTREE_GET_ASIGLEN(19,374
	StrategyNumber strategy;26,590
	text	   *query;query27,616
	TRGM	   *trigrams;trigrams29,669
	TrgmPackedGraph *graph;graph31,737
} gtrgm_consistent_cache;37,915
#define GETENTRY(39,942
gtrgm_in(56,1423
gtrgm_out(63,1515
gtrgm_alloc(70,1616
makesign(91,1987
gtrgm_compress(108,2312
gtrgm_decompress(148,3322
cnt_sml_sign_common(172,3865
gtrgm_consistent(190,4170
gtrgm_distance(443,11115
unionkey(525,13291
gtrgm_union(555,13685
gtrgm_same(581,14251
sizebitvec(640,15263
hemdistsign(646,15351
hemdist(662,15623
gtrgm_penalty(678,15938
	bool		allistrue;735,17473
	BITVECP		sign;736,17491
} CACHESIGN;737,17507
fillcache(740,17533
#define WISH_F(752,17825
	OffsetNumber pos;755,17921
	int32		cost;756,17940
} SPLITCOST;757,17954
comparecost(760,17979
hemdistcache(770,18208
gtrgm_picksplit(786,18526
gtrgm_options(955,22688

/home/seinoyu/pgsql/master/postgresql/contrib/pg_trgm/trgm_gin.c,151
gin_extract_trgm(23,563
gin_extract_value_trgm(34,822
gin_extract_query_trgm(69,1440
gin_trgm_consistent(168,3978
gin_trgm_triconsistent(266,6655

/home/seinoyu/pgsql/master/postgresql/contrib/pg_trgm/trgm.h,1764
#define __TRGM_H__5,52
#define LPADDING	16,293
#define RPADDING	17,313
#define KEEPONLYALNUM18,333
#define IGNORECASE26,723
#define DIVUNION27,742
#define SimilarityStrategyNumber	30,792
#define DistanceStrategyNumber	31,829
#define LikeStrategyNumber	32,865
#define ILikeStrategyNumber	33,898
#define RegExpStrategyNumber	34,932
#define RegExpICaseStrategyNumber	35,966
#define WordSimilarityStrategyNumber	36,1004
#define WordDistanceStrategyNumber	37,1044
#define StrictWordSimilarityStrategyNumber	38,1083
#define StrictWordDistanceStrategyNumber	39,1128
typedef char trgm[trgm41,1173
#define CMPCHAR(43,1196
#define CMPPCHAR(44,1261
#define CMPTRGM(45,1346
#define CPTRGM(47,1464
#define ISWORDCHR(54,1653
#define ISPRINTABLECHAR(55,1705
#define ISWORDCHR(57,1840
#define ISPRINTABLECHAR(58,1877
#define ISPRINTABLETRGM(60,1982
#define ISESCAPECHAR(62,2120
#define ISWILDCARDCHAR(63,2191
	int32		vl_len_;68,2311
	uint8		flag;69,2375
	char		data[data70,2389
} TRGM;71,2425
#define TRGMHDRSIZE	73,2434
#define SIGLEN_DEFAULT	76,2496
#define SIGLEN_MAX	77,2537
#define BITBYTE 78,2577
#define SIGLENBIT(80,2596
typedef char *BITVECP;BITVECP82,2667
#define LOOPBYTE(84,2691
#define GETBYTE(87,2753
#define GETBITBYTE(88,2821
#define CLRBIT(89,2877
#define SETBIT(90,2946
#define GETBIT(91,3015
#define HASHVAL(93,3083
#define HASH(94,3156
#define ARRKEY	96,3226
#define SIGNKEY	97,3248
#define ALLISTRUE	98,3271
#define ISARRKEY(100,3296
#define ISSIGNKEY(101,3346
#define ISALLTRUE(102,3398
#define CALCGTSIZE(104,3453
#define GETSIGN(105,3585
#define GETARR(106,3643
#define ARRNELEM(107,3698
#define CALCSML(116,3965
#define CALCSML(118,4066
typedef struct TrgmPackedGraph TrgmPackedGraph;121,4179

/home/seinoyu/pgsql/master/postgresql/contrib/pg_trgm/trgm_regexp.c,3371
#define MAX_EXPANDED_STATES 218,11035
#define MAX_EXPANDED_ARCS	219,11067
#define MAX_TRGM_COUNT	220,11098
#define WISH_TRGM_PENALTY	221,11126
#define COLOR_COUNT_LIMIT	222,11155
static const float4 penalties[penalties228,11318
	char		bytes[bytes242,11685
} trgm_mb_char;243,11723
	bool		expandable;260,12265
	bool		containsNonWord;261,12284
	int			wordCharsCount;262,12308
	trgm_mb_char *wordChars;wordChars263,12331
} TrgmColorInfo;264,12357
typedef int TrgmColor;282,13239
#define COLOR_UNKNOWN	285,13338
#define COLOR_BLANK	286,13365
	TrgmColor	colors[colors290,13409
} TrgmPrefix;291,13431
	TrgmColor	colors[colors299,13595
} ColorTrgm;300,13617
	TrgmPrefix	prefix;309,13880
	int			nstate;310,13900
} TrgmStateKey;311,13915
#define TSTATE_INIT	328,14607
#define TSTATE_FIN	329,14677
typedef struct TrgmState331,14745
	TrgmStateKey stateKey;333,14772
	List	   *arcs;arcs334,14838
	List	   *enterKeys;enterKeys335,14854
	int			flags;336,14875
	int			snumber;337,14889
	struct TrgmState *parent;parent338,14905
	int			tentFlags;339,14932
	struct TrgmState *tentParent;tentParent340,14950
} TrgmState;341,14981
	ColorTrgm	ctrgm;348,15053
	TrgmState  *target;target349,15110
} TrgmArc;350,15150
	TrgmState  *source;source359,15312
	TrgmState  *target;target360,15333
} TrgmArcInfo;361,15354
	ColorTrgm	ctrgm;374,15748
	int			cnumber;375,15766
	int			count;376,15782
	float4		penalty;377,15796
	bool		expanded;378,15814
	List	   *arcs;arcs379,15831
} ColorTrgmInfo;380,15847
	regex_t    *regex;regex402,16733
	TrgmColorInfo *colorInfo;colorInfo403,16753
	int			ncolors;404,16780
	HTAB	   *states;states407,16829
	TrgmState  *initState;initState408,16847
	int			nstates;409,16871
	List	   *queue;queue412,16917
	List	   *keysQueue;keysQueue413,16934
	int			arcsCount;414,16955
	bool		overflowed;415,16973
	ColorTrgmInfo *colorTrgms;colorTrgms418,17065
	int			colorTrgmsCount;419,17093
	int			totalTrgmCount;420,17117
} TrgmNFA;421,17140
	int			targetState;428,17228
	int			colorTrgm;429,17289
} TrgmPackedArc;430,17352
	int			arcsCount;434,17387
	TrgmPackedArc *arcs;arcs435,17446
} TrgmPackedState;436,17506
struct TrgmPackedGraph439,17599
	int			colorTrigramsCount;450,18104
	int		   *colorTrigramGroups;colorTrigramGroups451,18131
	int			statesCount;457,18334
	TrgmPackedState *states;states458,18354
	bool	   *colorTrigramsActive;colorTrigramsActive461,18466
	bool	   *statesActive;statesActive462,18536
	int		   *statesQueue;statesQueue463,18592
	int			sourceState;471,18740
	int			targetState;472,18760
	int			colorTrgm;473,18780
} TrgmPackArcInfo;474,18798
createTrgmNFA(521,20994
createTrgmNFAInternal(575,22397
trigramsMatchGraph(636,23806
RE_compile(729,26092
getColorInfo(773,27205
convertPgWchar(836,28911
transformGraph(902,30946
processState(964,32649
addKey(1007,34200
addKeyToQueue(1168,39052
addArcs(1180,39380
addArc(1272,42102
validArcLabel(1314,43367
getState(1369,45323
prefixContains(1400,46038
selectColorTrigrams(1442,46980
expandColorTrigrams(1761,56052
fillTrgm(1829,57631
mergeStates(1861,58216
colorTrgmInfoCmp(1878,58607
colorTrgmInfoPenaltyCmp(1891,58944
packGraph(1916,59488
packArcInfoCmp(2071,63420
printSourceNFA(2105,64137
printTrgmNFA(2189,66137
printTrgmColor(2251,67701
printTrgmPackedGraph(2265,68010

/home/seinoyu/pgsql/master/postgresql/contrib/pg_trgm/trgm_op.c,1446
PG_MODULE_MAGIC;16,266
double		similarity_threshold 19,304
double		word_similarity_threshold 20,341
double		strict_word_similarity_threshold 21,383
	trgm		trg;45,1209
	int			index;46,1221
} pos_trgm;47,1235
typedef uint8 TrgmBound;50,1273
#define TRGM_BOUND_LEFT	51,1298
#define TRGM_BOUND_RIGHT	52,1366
#define WORD_SIMILARITY_CHECK_ONLY	55,1464
#define WORD_SIMILARITY_STRICT	57,1579
_PG_init(64,1717
set_limit(110,2809
index_strategy_get_limit(132,3298
show_limit(155,3845
comp_trgm(161,3931
find_word(171,4126
compact_trigram(198,4759
make_trigrams(223,5152
generate_trgm_only(275,6305
protect_out_of_mem(339,7754
generate_trgm(356,8199
make_positional_trgm(397,9158
comp_ptrgm(424,9678
iterate_word_similarity(457,10604
calc_word_similarity(621,14656
get_wildcard_part(721,17039
generate_wildcard_trgm(866,19883
trgm2int(935,21177
show_trgm(949,21381
cnt_sml(996,22370
trgm_contained_by(1044,23291
trgm_presence_map(1083,23976
similarity(1122,24604
word_similarity(1144,25036
strict_word_similarity(1160,25385
similarity_dist(1176,25762
similarity_op(1186,25972
word_similarity_op(1196,26196
word_similarity_commutator_op(1212,26600
word_similarity_dist_op(1228,27015
word_similarity_dist_commutator_op(1244,27378
strict_word_similarity_op(1260,27752
strict_word_similarity_commutator_op(1276,28195
strict_word_similarity_dist_op(1292,28649
strict_word_similarity_dist_commutator_op(1308,29040

/home/seinoyu/pgsql/master/postgresql/contrib/tablefunc/tablefunc.h,28
#define TABLEFUNC_H35,1342

/home/seinoyu/pgsql/master/postgresql/contrib/tablefunc/tablefunc.c,1186
PG_MODULE_MAGIC;46,1575
	float8		mean;88,3047
	float8		stddev;89,3095
	float8		carry_val;90,3147
	bool		use_carry;91,3202
} normal_rand_fctx;92,3254
#define xpfree(94,3275
#define xpstrdup(103,3390
#define xstreq(111,3529
#define INT32_STRLEN	116,3720
typedef struct crosstab_cat_desc119,3787
	char	   *catname;catname121,3822
	uint64		attidx;122,3867
} crosstab_cat_desc;123,3903
#define MAX_CATNAME_LEN	125,3925
#define INIT_CATS	126,3963
#define crosstab_HashTableLookup(128,3988
#define crosstab_HashTableInsert(142,4381
typedef struct crosstab_hashent158,4881
	char		internal_catname[internal_catname160,4915
	crosstab_cat_desc *catdesc;catdesc161,4957
} crosstab_HashEnt;162,4986
normal_rand(173,5239
get_normal_pair(277,7901
crosstab(348,9618
crosstab_hash(633,17155
load_categories_hash(703,19460
get_crosstab_tuplestore(793,21862
#define CONNECTBY_NCOLS	983,27244
#define CONNECTBY_NCOLS_NOBRANCH	984,27274
connectby_text(987,27317
connectby_text_serial(1065,29803
connectby(1147,32403
build_tuplestore_recursively(1202,33667
validateConnectbyTupleDesc(1421,39139
compatConnectbyTupleDescs(1496,41557
compatCrosstabTupleDescs(1551,43490

/home/seinoyu/pgsql/master/postgresql/contrib/pg_standby/pg_standby.c,1386
const char *progname;progname36,850
int			WalSegSz 38,873
int			sleeptime 41,922
int			waittime 42,994
int			maxwaittime 44,1079
int			keepfiles 45,1146
int			maxretries 46,1214
bool		debug 47,1280
bool		need_cleanup 48,1326
static volatile sig_atomic_t signaled 52,1428
char	   *archiveLocation;archiveLocation55,1483
char	   *triggerPath;triggerPath56,1542
char	   *xlogFilePath;xlogFilePath57,1603
char	   *nextWALFileName;nextWALFileName58,1666
char	   *restartWALFileName;restartWALFileName59,1735
char		WALFilePath[WALFilePath60,1813
char		restoreCommand[restoreCommand61,1885
char		exclusiveCleanupFileName[exclusiveCleanupFileName62,1944
#define NoFailover	83,2972
#define SmartFailover	84,2994
#define FastFailover	85,3018
static int	Failover 87,3042
#define RESTORE_COMMAND_COPY 89,3077
#define RESTORE_COMMAND_LINK 90,3108
int			restoreCommandType;91,3139
#define XLOG_DATA	93,3166
#define XLOG_HISTORY	94,3189
int			nextWALFileType;95,3214
#define SET_RESTORE_COMMAND(97,3238
struct stat stat_buf;100,3357
CustomizableInitialize(128,4298
CustomizableNextWALFileReady(175,5474
CustomizableCleanupPriorWALFiles(246,7127
SetWALFileNameForCleanup(332,9738
SetWALSegSize(396,11112
CheckForExternalTrigger(462,12486
RestoreWALFileForRecovery(554,14722
usage(589,15239
sighandler(619,16817
sigquit_handler(626,16913
main(635,17070

/home/seinoyu/pgsql/master/postgresql/contrib/amcheck/verify_nbtree.c,1764
PG_MODULE_MAGIC;43,1348
#define InvalidBtreeLevel	49,1512
#define BTreeTupleGetNKeyAtts(50,1568
typedef struct BtreeCheckState64,2189
	Relation	rel;71,2350
	Relation	heaprel;72,2365
	bool		heapkeyspace;74,2418
	bool		readonly;76,2505
	bool		heapallindexed;78,2574
	bool		rootdescend;80,2666
	MemoryContext targetcontext;82,2710
	BufferAccessStrategy checkstrategy;84,2770
	Page		target;91,2901
	BlockNumber targetblock;93,2943
	XLogRecPtr	targetlsn;95,2994
	IndexTuple	lowkey;101,3171
	BlockNumber prevrightlink;108,3397
	bool		previncompletesplit;109,3425
	bloom_filter *filter;filter116,3571
	int64		heaptuplespresent;118,3615
} BtreeCheckState;119,3642
typedef struct BtreeLevel124,3730
	uint32		level;127,3802
	BlockNumber leftmost;130,3880
	bool		istruerootlevel;133,3969
} BtreeLevel;134,3993
bt_index_check(198,7025
bt_index_parent_check(221,7627
bt_index_check_internal(241,8070
btree_index_checkable(333,11124
btree_index_mainfork_expected(366,12280
bt_check_every_level(404,13970
bt_check_level_from_leftmost(642,22892
bt_target_page_check(905,31992
bt_right_page_check_scankey(1413,50458
bt_pivot_tuple_identical(1615,59400
bt_child_highkey_check(1666,61256
bt_child_check(1915,70381
bt_downlink_missing_check(2086,78062
bt_tuple_present_callback(2313,88683
bt_normalize_tuple(2381,91722
bt_posting_plain_tuple(2471,94788
bt_rootdescend(2504,96496
offset_is_negative_infinity(2568,98417
invariant_l_offset(2603,99889
invariant_leq_offset(2666,101955
invariant_g_offset(2689,102522
invariant_l_nontarget_offset(2725,103720
palloc_btree_page(2783,105582
bt_mkscankey_pivotsearch(2943,111931
PageGetItemIdCareful(2967,112681
BTreeTupleGetHeapTIDCareful(3007,114144
BTreeTupleGetPointsToTID(3055,115968

/home/seinoyu/pgsql/master/postgresql/contrib/pg_stat_statements/pg_stat_statements.c,5281
PG_MODULE_MAGIC;85,3754
#define PGSS_DUMP_FILE	88,3846
#define PGSS_TEXT_FILE	98,4391
static const uint32 PGSS_FILE_HEADER 101,4509
static const uint32 PGSS_PG_MAJOR_VERSION 104,4640
#define USAGE_EXEC(107,4780
#define USAGE_INIT	108,4815
#define ASSUMED_MEDIAN_INIT	109,4876
#define ASSUMED_LENGTH_INIT	110,4947
#define USAGE_DECREASE_FACTOR	111,5021
#define STICKY_DECREASE_FACTOR	112,5094
#define USAGE_DEALLOC_PERCENT	113,5164
#define IS_STICKY(114,5233
#define JUMBLE_SIZE	116,5304
typedef enum pgssVersion121,5456
	PGSS_V1_0 123,5483
	PGSS_V1_1,124,5499
	PGSS_V1_2,125,5511
	PGSS_V1_3,126,5523
	PGSS_V1_8127,5535
} pgssVersion;128,5546
typedef enum pgssStoreKind130,5562
	PGSS_INVALID 132,5591
	PGSS_PLAN 139,5836
	PGSS_EXEC,140,5852
	PGSS_NUMKIND	142,5865
} pgssStoreKind;143,5920
typedef struct pgssHashKey154,6352
	Oid			userid;156,6381
	Oid			dbid;157,6413
	uint64		queryid;158,6447
} pgssHashKey;159,6489
typedef struct Counters164,6564
	int64		calls[calls166,6590
	double		total_time[total_time167,6653
	double		min_time[min_time169,6747
	double		max_time[max_time171,6839
	double		mean_time[mean_time173,6931
	double		sum_var_time[sum_var_time175,7022
	int64		rows;177,7131
	int64		shared_blks_hit;178,7191
	int64		shared_blks_read;179,7246
	int64		shared_blks_dirtied;180,7307
	int64		shared_blks_written;181,7374
	int64		local_blks_hit;182,7441
	int64		local_blks_read;183,7494
	int64		local_blks_dirtied;184,7553
	int64		local_blks_written;185,7618
	int64		temp_blks_read;186,7683
	int64		temp_blks_written;187,7735
	double		blk_read_time;188,7793
	double		blk_write_time;189,7851
	double		usage;190,7910
	int64		wal_records;191,7947
	int64		wal_fpi;192,8001
	uint64		wal_bytes;193,8061
} Counters;194,8124
typedef struct pgssEntry203,8366
	pgssHashKey key;205,8393
	Counters	counters;206,8453
	Size		query_offset;207,8510
	int			query_len;208,8572
	int			encoding;209,8637
	slock_t		mutex;210,8681
} pgssEntry;211,8733
typedef struct pgssSharedState216,8777
	LWLock	   *lock;lock218,8810
	double		cur_median_usage;219,8875
	Size		mean_query_len;220,8942
	slock_t		mutex;221,9002
	Size		extent;222,9059
	int			n_writers;223,9111
	int			gc_count;224,9175
} pgssSharedState;225,9241
typedef struct pgssLocationLen230,9343
	int			location;232,9376
	int			length;233,9427
} pgssLocationLen;234,9483
typedef struct pgssJumbleState240,9599
	unsigned char *jumble;jumble243,9668
	Size		jumble_len;246,9733
	pgssLocationLen *clocations;clocations249,9815
	int			clocations_buf_size;252,9890
	int			clocations_count;255,9978
	int			highest_extern_param_id;258,10082
} pgssJumbleState;259,10114
static int	exec_nested_level 264,10229
static int	plan_nested_level 267,10309
static shmem_startup_hook_type prev_shmem_startup_hook 270,10386
static post_parse_analyze_hook_type prev_post_parse_analyze_hook 271,10449
static planner_hook_type prev_planner_hook 272,10522
static ExecutorStart_hook_type prev_ExecutorStart 273,10573
static ExecutorRun_hook_type prev_ExecutorRun 274,10631
static ExecutorFinish_hook_type prev_ExecutorFinish 275,10685
static ExecutorEnd_hook_type prev_ExecutorEnd 276,10745
static ProcessUtility_hook_type prev_ProcessUtility 277,10799
static pgssSharedState *pgss pgss280,10895
static HTAB *pgss_hash pgss_hash281,10932
	PGSS_TRACK_NONE,287,11008
	PGSS_TRACK_TOP,288,11054
	PGSS_TRACK_ALL	289,11106
}			PGSSTrackLevel;290,11169
static const struct config_enum_entry track_options[track_options292,11190
static int	pgss_max;300,11371
static int	pgss_track;301,11426
static bool pgss_track_utility;302,11472
static bool pgss_track_planning;303,11544
static bool pgss_save;304,11618
#define pgss_enabled(307,11689
#define record_gc_qtexts(311,11805
_PG_init(389,14988
_PG_fini(498,17968
pgss_shmem_startup(518,18609
pgss_shmem_shutdown(737,24150
pgss_post_parse_analyze(833,26325
pgss_planner(907,28599
pgss_ExecutorStart(1002,31184
pgss_ExecutorRun(1036,32107
pgss_ExecutorFinish(1058,32556
pgss_ExecutorEnd(1079,32873
pgss_ProcessUtility(1114,33721
pgss_hash_string(1213,36608
pgss_store(1234,37274
pg_stat_statements_reset_1_7(1453,43961
pg_stat_statements_reset(1472,44256
#define PG_STAT_STATEMENTS_COLS_V1_0	1480,44415
#define PG_STAT_STATEMENTS_COLS_V1_1	1481,44455
#define PG_STAT_STATEMENTS_COLS_V1_2	1482,44495
#define PG_STAT_STATEMENTS_COLS_V1_3	1483,44535
#define PG_STAT_STATEMENTS_COLS_V1_8	1484,44575
#define PG_STAT_STATEMENTS_COLS	1485,44615
pg_stat_statements_1_8(1498,45179
pg_stat_statements_1_3(1508,45348
pg_stat_statements_1_2(1518,45517
pg_stat_statements(1532,45807
pg_stat_statements_internal(1542,46054
pgss_memsize(1862,55900
entry_alloc(1890,56920
entry_cmp(1927,57909
entry_dealloc(1946,58293
qtext_store(2032,61044
qtext_load_file(2112,62868
qtext_fetch(2192,64868
need_gc_qtexts(2215,65445
gc_qtexts(2262,66965
entry_reset(2446,71931
AppendJumble(2542,74343
#define APP_JUMB(2578,75314
#define APP_JUMB_STRING(2580,75408
JumbleQuery(2593,75924
JumbleRangeTable(2622,76927
JumbleRowMarks(2677,78114
JumbleExpr(2709,79060
RecordConstLocation(3188,90114
generate_normalized_query(3229,91592
fill_in_constant_lengths(3336,95484
comp_location(3436,98191

/home/seinoyu/pgsql/master/postgresql/contrib/spi/autoinc.c,40
PG_MODULE_MAGIC;14,256
autoinc(19,311

/home/seinoyu/pgsql/master/postgresql/contrib/spi/refint.c,327
PG_MODULE_MAGIC;18,320
	char	   *ident;ident22,355
	int			nplans;23,372
	SPIPlanPtr *splan;splan24,387
} EPlan;25,407
static EPlan *FPlans FPlans27,417
static int	nFPlans 28,446
static EPlan *PPlans PPlans29,470
static int	nPPlans 30,499
check_primary_key(47,1057
check_foreign_key(240,6949
find_plan(616,17600

/home/seinoyu/pgsql/master/postgresql/contrib/spi/insert_username.c,48
PG_MODULE_MAGIC;17,345
insert_username(22,408

/home/seinoyu/pgsql/master/postgresql/contrib/spi/moddatetime.c,44
PG_MODULE_MAGIC;25,666
moddatetime(30,725

/home/seinoyu/pgsql/master/postgresql/contrib/btree_gin/btree_gin.c,1063
PG_MODULE_MAGIC;20,370
typedef struct QueryInfo22,388
	StrategyNumber strategy;24,415
	Datum		datum;25,441
	bool		is_varlena;26,456
	Datum		(*typecmp)typecmp27,475
} QueryInfo;28,514
gin_btree_extract_value(33,598
gin_btree_extract_query(56,1353
gin_btree_compare_prefix(109,2957
gin_btree_consistent(175,4419
#define GIN_SUPPORT(185,4626
leftmostvalue_int2(210,5435
GIN_SUPPORT(215,5498
GIN_SUPPORT(223,5630
GIN_SUPPORT(231,5767
GIN_SUPPORT(239,5917
GIN_SUPPORT(247,6073
GIN_SUPPORT(255,6217
GIN_SUPPORT(263,6346
GIN_SUPPORT(271,6487
GIN_SUPPORT(281,6702
GIN_SUPPORT(294,6942
GIN_SUPPORT(302,7089
GIN_SUPPORT(315,7317
GIN_SUPPORT(325,7504
GIN_SUPPORT(335,7691
GIN_SUPPORT(343,7870
GIN_SUPPORT(353,8087
GIN_SUPPORT(363,8277
GIN_SUPPORT(376,8560
#define NUMERIC_IS_LEFTMOST(397,9239
GIN_SUPPORT(NUMERIC_IS_LEFTMOST387,8787
leftmostvalue_numeric(427,9777
#define ENUM_IS_LEFTMOST(444,10330
GIN_SUPPORT(ENUM_IS_LEFTMOST432,9841
leftmostvalue_enum(476,10894
GIN_SUPPORT(481,10962
GIN_SUPPORT(495,11266
GIN_SUPPORT(505,11453

/home/seinoyu/pgsql/master/postgresql/contrib/dblink/dblink.c,2382
PG_MODULE_MAGIC;64,2152
typedef struct remoteConn66,2170
	PGconn	   *conn;conn68,2198
	int			openCursorCount;69,2251
	bool		newXactForCursor;70,2308
} remoteConn;71,2373
typedef struct storeInfo73,2388
	FunctionCallInfo fcinfo;75,2415
	Tuplestorestate *tuplestore;tuplestore76,2441
	AttInMetadata *attinmeta;attinmeta77,2471
	MemoryContext tmpcontext;78,2498
	char	  **cstrs;cstrs79,2525
	PGresult   *last_res;last_res81,2602
	PGresult   *cur_res;cur_res82,2625
} storeInfo;83,2647
static void dblink_res_error(115,4432
typedef struct remoteConnHashEnt138,5383
	char		name[name140,5418
	remoteConn *rconn;rconn141,5444
} remoteConnHashEnt;142,5464
#define NUMCONN 145,5528
xpstrdup(148,5562
pg_attribute_noreturn(156,5657
pg_attribute_noreturn(167,5874
dblink_get_conn(181,6212
dblink_get_named_conn(253,8242
dblink_init(265,8465
dblink_connect(281,8781
dblink_disconnect(386,11543
dblink_open(425,12179
dblink_close(518,14593
dblink_fetch(605,16549
dblink_record(699,18793
dblink_send_query(706,18923
dblink_get_result(731,19458
dblink_record_internal(737,19558
prepTuplestoreResult(860,22327
materializeResult(888,23291
materializeQueryResult(1030,26923
storeQueryResult(1145,30054
storeRow(1213,31759
dblink_get_connections(1325,34999
dblink_is_busy(1360,35801
dblink_cancel_query(1384,36283
dblink_error_message(1417,36924
dblink_exec(1437,37337
dblink_get_pkey(1543,39744
dblink_build_sql_insert(1667,42920
dblink_build_sql_delete(1756,45387
dblink_build_sql_update(1832,47511
dblink_current_query(1911,49602
#define DBLINK_NOTIFY_COLS	1925,50007
dblink_get_notify(1929,50084
dblink_fdw_validator(2007,52138
get_pkey_attnames(2079,54034
get_text_array_contents(2134,55388
get_sql_insert(2190,56423
get_sql_delete(2270,58121
get_sql_update(2307,58974
quote_ident_cstr(2398,60964
get_attnum_pk_pos(2413,61282
get_tuple_of_interest(2428,61530
get_rel_from_relname(2541,64103
generate_relation_name(2566,64791
getConnectionByName(2584,65171
createConnHash(2604,65551
createNewConnection(2615,65744
deleteConnection(2645,66366
dblink_security_check(2667,66823
dblink_connstr_check(2694,67594
dblink_res_error(2736,68668
get_connect_string(2818,71436
escape_param_str(2908,73881
validate_pkattnums(2941,74914
is_valid_dblink_option(3012,76905
applyRemoteGucs(3063,78292
restoreLocalGucs(3115,79616

/home/seinoyu/pgsql/master/postgresql/contrib/pg_buffercache/pg_buffercache_pages.c,558
#define NUM_BUFFERCACHE_PAGES_MIN_ELEM	18,457
#define NUM_BUFFERCACHE_PAGES_ELEM	19,498
PG_MODULE_MAGIC;21,536
	uint32		bufferid;28,636
	Oid			relfilenode;29,655
	Oid			reltablespace;30,675
	Oid			reldatabase;31,697
	ForkNumber	forknum;32,717
	BlockNumber blocknum;33,738
	bool		isvalid;34,761
	bool		isdirty;35,777
	uint16		usagecount;36,793
	int32		pinning_backends;43,1031
} BufferCachePagesRec;44,1057
	TupleDesc	tupdesc;52,1167
	BufferCachePagesRec *record;record53,1187
} BufferCachePagesContext;54,1217
pg_buffercache_pages(64,1443

/home/seinoyu/pgsql/master/postgresql/contrib/tcn/tcn.c,85
PG_MODULE_MAGIC;26,645
strcpy_quoted(33,808
triggered_change_notification(56,1372

/home/seinoyu/pgsql/master/postgresql/contrib/sepgsql/schema.c,295
sepgsql_schema_post_create(37,911
sepgsql_schema_drop(115,3029
sepgsql_schema_relabel(143,3573
check_schema_perms(180,4389
sepgsql_schema_setattr(203,4906
sepgsql_schema_search(210,5057
sepgsql_schema_add_name(218,5234
sepgsql_schema_remove_name(224,5351
sepgsql_schema_rename(230,5474

/home/seinoyu/pgsql/master/postgresql/contrib/sepgsql/sepgsql.h,6584
#define SEPGSQL_H12,327
#define SEPGSQL_LABEL_TAG	23,489
#define SEPGSQL_MODE_DEFAULT	28,568
#define SEPGSQL_MODE_PERMISSIVE	29,600
#define SEPGSQL_MODE_INTERNAL	30,635
#define SEPGSQL_MODE_DISABLED	31,668
#define SEPG_CLASS_PROCESS	36,751
#define SEPG_CLASS_FILE	37,782
#define SEPG_CLASS_DIR	38,811
#define SEPG_CLASS_LNK_FILE	39,839
#define SEPG_CLASS_CHR_FILE	40,871
#define SEPG_CLASS_BLK_FILE	41,903
#define SEPG_CLASS_SOCK_FILE	42,935
#define SEPG_CLASS_FIFO_FILE	43,967
#define SEPG_CLASS_DB_DATABASE	44,999
#define SEPG_CLASS_DB_SCHEMA	45,1033
#define SEPG_CLASS_DB_TABLE	46,1065
#define SEPG_CLASS_DB_SEQUENCE	47,1098
#define SEPG_CLASS_DB_PROCEDURE	48,1133
#define SEPG_CLASS_DB_COLUMN	49,1169
#define SEPG_CLASS_DB_TUPLE	50,1202
#define SEPG_CLASS_DB_BLOB	51,1235
#define SEPG_CLASS_DB_LANGUAGE	52,1267
#define SEPG_CLASS_DB_VIEW	53,1302
#define SEPG_CLASS_MAX	54,1334
#define SEPG_PROCESS__TRANSITION	59,1413
#define SEPG_PROCESS__DYNTRANSITION	60,1455
#define SEPG_PROCESS__SETCURRENT	61,1500
#define SEPG_FILE__READ	63,1543
#define SEPG_FILE__WRITE	64,1579
#define SEPG_FILE__CREATE	65,1615
#define SEPG_FILE__GETATTR	66,1652
#define SEPG_FILE__UNLINK	67,1690
#define SEPG_FILE__RENAME	68,1727
#define SEPG_FILE__APPEND	69,1764
#define SEPG_DIR__READ	71,1802
#define SEPG_DIR__WRITE	72,1848
#define SEPG_DIR__CREATE	73,1896
#define SEPG_DIR__GETATTR	74,1945
#define SEPG_DIR__UNLINK	75,1996
#define SEPG_DIR__RENAME	76,2045
#define SEPG_DIR__SEARCH	77,2094
#define SEPG_DIR__ADD_NAME	78,2130
#define SEPG_DIR__REMOVE_NAME	79,2168
#define SEPG_DIR__RMDIR	80,2208
#define SEPG_DIR__REPARENT	81,2244
#define SEPG_LNK_FILE__READ	83,2284
#define SEPG_LNK_FILE__WRITE	84,2334
#define SEPG_LNK_FILE__CREATE	85,2385
#define SEPG_LNK_FILE__GETATTR	86,2438
#define SEPG_LNK_FILE__UNLINK	87,2493
#define SEPG_LNK_FILE__RENAME	88,2546
#define SEPG_CHR_FILE__READ	90,2600
#define SEPG_CHR_FILE__WRITE	91,2650
#define SEPG_CHR_FILE__CREATE	92,2701
#define SEPG_CHR_FILE__GETATTR	93,2754
#define SEPG_CHR_FILE__UNLINK	94,2809
#define SEPG_CHR_FILE__RENAME	95,2862
#define SEPG_BLK_FILE__READ	97,2916
#define SEPG_BLK_FILE__WRITE	98,2966
#define SEPG_BLK_FILE__CREATE	99,3017
#define SEPG_BLK_FILE__GETATTR	100,3070
#define SEPG_BLK_FILE__UNLINK	101,3125
#define SEPG_BLK_FILE__RENAME	102,3178
#define SEPG_SOCK_FILE__READ	104,3232
#define SEPG_SOCK_FILE__WRITE	105,3282
#define SEPG_SOCK_FILE__CREATE	106,3334
#define SEPG_SOCK_FILE__GETATTR	107,3388
#define SEPG_SOCK_FILE__UNLINK	108,3444
#define SEPG_SOCK_FILE__RENAME	109,3498
#define SEPG_FIFO_FILE__READ	111,3553
#define SEPG_FIFO_FILE__WRITE	112,3603
#define SEPG_FIFO_FILE__CREATE	113,3655
#define SEPG_FIFO_FILE__GETATTR	114,3709
#define SEPG_FIFO_FILE__UNLINK	115,3765
#define SEPG_FIFO_FILE__RENAME	116,3819
#define SEPG_DB_DATABASE__CREATE	118,3874
#define SEPG_DB_DATABASE__DROP	119,3916
#define SEPG_DB_DATABASE__GETATTR	120,3957
#define SEPG_DB_DATABASE__SETATTR	121,4000
#define SEPG_DB_DATABASE__RELABELFROM	122,4043
#define SEPG_DB_DATABASE__RELABELTO	123,4089
#define SEPG_DB_DATABASE__ACCESS	124,4134
#define SEPG_DB_DATABASE__LOAD_MODULE	125,4176
#define SEPG_DB_SCHEMA__CREATE	127,4223
#define SEPG_DB_SCHEMA__DROP	128,4284
#define SEPG_DB_SCHEMA__GETATTR	129,4341
#define SEPG_DB_SCHEMA__SETATTR	130,4404
#define SEPG_DB_SCHEMA__RELABELFROM	131,4467
#define SEPG_DB_SCHEMA__RELABELTO	132,4537
#define SEPG_DB_SCHEMA__SEARCH	133,4603
#define SEPG_DB_SCHEMA__ADD_NAME	134,4644
#define SEPG_DB_SCHEMA__REMOVE_NAME	135,4686
#define SEPG_DB_TABLE__CREATE	137,4732
#define SEPG_DB_TABLE__DROP	138,4792
#define SEPG_DB_TABLE__GETATTR	139,4849
#define SEPG_DB_TABLE__SETATTR	140,4911
#define SEPG_DB_TABLE__RELABELFROM	141,4973
#define SEPG_DB_TABLE__RELABELTO	142,5042
#define SEPG_DB_TABLE__SELECT	143,5107
#define SEPG_DB_TABLE__UPDATE	144,5147
#define SEPG_DB_TABLE__INSERT	145,5187
#define SEPG_DB_TABLE__DELETE	146,5227
#define SEPG_DB_TABLE__LOCK	147,5267
#define SEPG_DB_TABLE__TRUNCATE	148,5307
#define SEPG_DB_SEQUENCE__CREATE	150,5351
#define SEPG_DB_SEQUENCE__DROP	151,5413
#define SEPG_DB_SEQUENCE__GETATTR	152,5472
#define SEPG_DB_SEQUENCE__SETATTR	153,5536
#define SEPG_DB_SEQUENCE__RELABELFROM	154,5600
#define SEPG_DB_SEQUENCE__RELABELTO	155,5671
#define SEPG_DB_SEQUENCE__GET_VALUE	156,5739
#define SEPG_DB_SEQUENCE__NEXT_VALUE	157,5784
#define SEPG_DB_SEQUENCE__SET_VALUE	158,5829
#define SEPG_DB_PROCEDURE__CREATE	160,5875
#define SEPG_DB_PROCEDURE__DROP	161,5938
#define SEPG_DB_PROCEDURE__GETATTR	162,5998
#define SEPG_DB_PROCEDURE__SETATTR	163,6063
#define SEPG_DB_PROCEDURE__RELABELFROM	164,6128
#define SEPG_DB_PROCEDURE__RELABELTO	165,6200
#define SEPG_DB_PROCEDURE__EXECUTE	166,6268
#define SEPG_DB_PROCEDURE__ENTRYPOINT	167,6312
#define SEPG_DB_PROCEDURE__INSTALL	168,6358
#define SEPG_DB_COLUMN__CREATE	170,6403
#define SEPG_DB_COLUMN__DROP	171,6464
#define SEPG_DB_COLUMN__GETATTR	172,6521
#define SEPG_DB_COLUMN__SETATTR	173,6584
#define SEPG_DB_COLUMN__RELABELFROM	174,6647
#define SEPG_DB_COLUMN__RELABELTO	175,6717
#define SEPG_DB_COLUMN__SELECT	176,6783
#define SEPG_DB_COLUMN__UPDATE	177,6824
#define SEPG_DB_COLUMN__INSERT	178,6865
#define SEPG_DB_TUPLE__RELABELFROM	180,6907
#define SEPG_DB_TUPLE__RELABELTO	181,6976
#define SEPG_DB_TUPLE__SELECT	182,7041
#define SEPG_DB_TUPLE__UPDATE	183,7102
#define SEPG_DB_TUPLE__INSERT	184,7163
#define SEPG_DB_TUPLE__DELETE	185,7223
#define SEPG_DB_BLOB__CREATE	187,7282
#define SEPG_DB_BLOB__DROP	188,7341
#define SEPG_DB_BLOB__GETATTR	189,7397
#define SEPG_DB_BLOB__SETATTR	190,7458
#define SEPG_DB_BLOB__RELABELFROM	191,7519
#define SEPG_DB_BLOB__RELABELTO	192,7587
#define SEPG_DB_BLOB__READ	193,7652
#define SEPG_DB_BLOB__WRITE	194,7690
#define SEPG_DB_BLOB__IMPORT	195,7729
#define SEPG_DB_BLOB__EXPORT	196,7768
#define SEPG_DB_LANGUAGE__CREATE	198,7808
#define SEPG_DB_LANGUAGE__DROP	199,7870
#define SEPG_DB_LANGUAGE__GETATTR	200,7929
#define SEPG_DB_LANGUAGE__SETATTR	201,7993
#define SEPG_DB_LANGUAGE__RELABELFROM	202,8057
#define SEPG_DB_LANGUAGE__RELABELTO	203,8128
#define SEPG_DB_LANGUAGE__IMPLEMENT	204,8196
#define SEPG_DB_LANGUAGE__EXECUTE	205,8241
#define SEPG_DB_VIEW__CREATE	207,8285
#define SEPG_DB_VIEW__DROP	208,8344
#define SEPG_DB_VIEW__GETATTR	209,8400
#define SEPG_DB_VIEW__SETATTR	210,8461
#define SEPG_DB_VIEW__RELABELFROM	211,8522
#define SEPG_DB_VIEW__RELABELTO	212,8590
#define SEPG_DB_VIEW__EXPAND	213,8655
#define SEPGSQL_AVC_NOAUDIT	256,9666

/home/seinoyu/pgsql/master/postgresql/contrib/sepgsql/relation.c,399
sepgsql_attribute_post_create(44,1226
sepgsql_attribute_drop(134,3590
sepgsql_attribute_relabel(166,4280
sepgsql_attribute_setattr(210,5355
sepgsql_relation_post_create(241,6028
sepgsql_relation_drop(417,10635
sepgsql_relation_truncate(525,13045
sepgsql_relation_relabel(565,13821
sepgsql_relation_setattr(616,15072
sepgsql_relation_setattr_extra(722,17751
sepgsql_index_modify(763,18898

/home/seinoyu/pgsql/master/postgresql/contrib/sepgsql/dml.c,138
fixup_whole_row_references(38,1063
fixup_inherited_columns(92,2683
check_relation_privileges(141,3765
sepgsql_dml_privileges(280,7252

/home/seinoyu/pgsql/master/postgresql/contrib/sepgsql/proc.c,154
sepgsql_proc_post_create(38,943
sepgsql_proc_drop(156,3915
sepgsql_proc_relabel(199,4836
sepgsql_proc_setattr(236,5656
sepgsql_proc_execute(316,7656

/home/seinoyu/pgsql/master/postgresql/contrib/sepgsql/database.c,139
sepgsql_database_post_create(34,884
sepgsql_database_drop(134,3557
sepgsql_database_setattr(161,4089
sepgsql_database_relabel(188,4649

/home/seinoyu/pgsql/master/postgresql/contrib/sepgsql/selinux.c,476
	const char *class_name;class_name32,1012
	uint16		class_code;33,1037
		const char *av_name;av_name36,1069
		uint32		av_code;37,1092
	}			av[av38,1111
}			selinux_catalog[selinux_catalog39,1124
static int	sepgsql_mode 610,9510
sepgsql_is_enabled(616,9594
sepgsql_get_mode(625,9719
sepgsql_set_mode(634,9800
sepgsql_getenforce(651,10158
sepgsql_audit_log(678,11073
sepgsql_compute_avd(733,12650
sepgsql_compute_create(836,15963
sepgsql_check_perms(899,17737

/home/seinoyu/pgsql/master/postgresql/contrib/sepgsql/label.c,1162
static ClientAuthentication_hook_type next_client_auth_hook 43,1092
static needs_fmgr_hook_type next_needs_fmgr_hook 44,1160
static fmgr_hook_type next_fmgr_hook 45,1217
static char *client_label_peer client_label_peer60,1833
static List *client_label_pending client_label_pending61,1899
static char *client_label_committed client_label_committed63,2003
static char *client_label_func client_label_func65,2114
	SubTransactionId subid;69,2202
	char	   *label;label70,2227
}			pending_label;71,2244
sepgsql_get_client_label(81,2488
sepgsql_set_client_label(112,3302
sepgsql_xact_callback(166,4736
sepgsql_subxact_callback(205,5674
sepgsql_client_auth(231,6286
sepgsql_needs_fmgr_hook(269,7290
sepgsql_fmgr_hook(312,8477
		char	   *old_label;old_label317,8573
		char	   *new_label;new_label318,8595
		Datum		next_private;319,8617
sepgsql_init_client_label(405,10790
sepgsql_get_label(446,12141
sepgsql_object_relabel(483,12906
sepgsql_getcon(538,14251
sepgsql_setcon(557,14589
sepgsql_mcstrans_in(579,15012
sepgsql_mcstrans_out(617,15832
quote_object_name(653,16562
exec_object_restorecon(700,17501
sepgsql_restorecon(882,22550

/home/seinoyu/pgsql/master/postgresql/contrib/sepgsql/uavc.c,1059
	uint32		hash;32,905
	char	   *scontext;scontext33,959
	char	   *tcontext;tcontext34,1018
	uint16		tclass;35,1076
	uint32		allowed;37,1129
	uint32		auditallow;38,1180
	uint32		auditdeny;39,1245
	bool		permissive;41,1309
	bool		hot_cache;42,1360
	bool		tcontext_is_valid;43,1414
	char	   *ncontext;ncontext45,1474
}			avc_cache;47,1584
#define AVC_NUM_SLOTS	52,1642
#define AVC_NUM_RECLAIM	53,1669
#define AVC_DEF_THRESHOLD	54,1697
static MemoryContext avc_mem_cxt;56,1728
static List *avc_slots[avc_slots57,1762
static int	avc_num_caches;58,1826
static int	avc_lru_hint;59,1892
static int	avc_threshold;60,1966
static char *avc_unlabeled;avc_unlabeled61,2037
sepgsql_avc_hash(67,2136
sepgsql_avc_reset(78,2410
sepgsql_avc_reclaim(92,2651
sepgsql_avc_check_valid(152,4190
sepgsql_avc_unlabeled(170,4481
sepgsql_avc_compute(200,5137
sepgsql_avc_lookup(297,7867
sepgsql_avc_check_perms_label(337,9010
sepgsql_avc_check_perms(419,11239
sepgsql_avc_trusted_proc(444,11887
sepgsql_avc_exit(476,12604
sepgsql_avc_init(487,12778

/home/seinoyu/pgsql/master/postgresql/contrib/sepgsql/hooks.c,671
PG_MODULE_MAGIC;28,759
static object_access_hook_type next_object_access_hook 38,865
static ExecutorCheckPerms_hook_type next_exec_check_perms_hook 39,928
static ProcessUtility_hook_type next_ProcessUtility_hook 40,999
	NodeTag		cmdtype;47,1131
	const char *createdb_dtemplate;createdb_dtemplate53,1289
}			sepgsql_context_info_t;54,1322
static sepgsql_context_info_t sepgsql_context_info;56,1351
static bool sepgsql_permissive;61,1449
sepgsql_get_permissive(64,1487
static bool sepgsql_debug_audit;72,1595
sepgsql_get_debug_audit(75,1634
sepgsql_object_access(87,1882
sepgsql_exec_check_perms(291,6357
sepgsql_utility_command(314,6910
_PG_init(400,9010

/home/seinoyu/pgsql/master/postgresql/contrib/oid2name/oid2name.c,817
	char	  **array;array22,463
	int			num;23,480
	int			alloc;24,492
} eary;25,506
struct options28,575
	eary	   *tables;tables30,592
	eary	   *oids;oids31,610
	eary	   *filenodes;filenodes32,626
	bool		quiet;34,648
	bool		systables;35,662
	bool		indexes;36,680
	bool		nodb;37,696
	bool		extended;38,709
	bool		tablespaces;39,726
	char	   *dbname;dbname41,747
	char	   *hostname;hostname42,765
	char	   *port;port43,785
	char	   *username;username44,801
	const char *progname;progname45,821
get_opts(62,1450
help(199,4569
add_one_elt(233,6074
get_comma_elts(259,6667
sql_conn(293,7343
#define PARAMS_ARRAY_SIZE	307,7587
sql_exec(376,9185
sql_exec_dumpalldbs(456,10710
sql_exec_dumpalltables(473,11211
sql_exec_searchtables(505,12471
sql_exec_dumpalltbspc(574,14546
main(586,14800

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/connect-test5.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/test5.pgc,10
main(13,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-dynalloc2.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/sqlca.h,391
#define POSTGRES_SQLCA_H2,
#define PGDLLIMPORT 6,
#define PGDLLIMPORT8,
#define SQLERRMC_LEN	12,
struct sqlca_t19,
	char		sqlcaid[sqlcaid21,
	long		sqlabc;22,
	long		sqlcode;23,
		int			sqlerrml;26,
		char		sqlerrmc[sqlerrmc27,
	}			sqlerrm;28,
	char		sqlerrp[sqlerrp29,
	long		sqlerrd[sqlerrd30,
	char		sqlwarn[sqlwarn39,
	char		sqlstate[sqlstate53,
#define sqlca 59,

/home/seinoyu/pgsql/master/postgresql/dynalloc2.pgc,13
int main(6,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-desc.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/desc.pgc,9
main(5,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/preproc-whenever_do_continue.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/whenever_do_continue.pgc,63
int main(7,
 char ename 12,
 float sal 13,
 float comm 14,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/preproc-outofscope.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/pgtypes_numeric.h,647
#define PGTYPES_NUMERIC2,
#define NUMERIC_POS	6,
#define NUMERIC_NEG	7,
#define NUMERIC_NAN	8,
#define NUMERIC_NULL	9,
#define NUMERIC_MAX_PRECISION	10,
#define NUMERIC_MAX_DISPLAY_SCALE	11,
#define NUMERIC_MIN_DISPLAY_SCALE	12,
#define NUMERIC_MIN_SIG_DIGITS	13,
#define DECSIZE 15,
typedef unsigned char NumericDigit;17,
	int			ndigits;20,
	int			weight;21,
	int			rscale;22,
	int			dscale;23,
	int			sign;24,
	NumericDigit *buf;buf25,
	NumericDigit *digits;digits26,
} numeric;27,
	int			ndigits;31,
	int			weight;32,
	int			rscale;33,
	int			dscale;34,
	int			sign;35,
	NumericDigit digits[digits36,
} decimal;37,

/home/seinoyu/pgsql/master/postgresql/struct.h,239
   typedef struct mytype  MYTYPE 9,
   typedef struct mynulltype  MYNULLTYPE 19,
 int id 3,
 char t 4,
 double d1 5,
 double d2 6,
 char c 7,
 } ; struct mynulltype 8,
 int id 13,
 int t 14,
 int d1 15,
 int d2 16,
 int c 17,

/home/seinoyu/pgsql/master/postgresql/outofscope.pgc,19
struct mytype 12,
get_var1(19,
open_cur1(38,
get_record1(44,
close_cur1(50,
main 56,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/pgtypeslib-dt_test2.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/dt_test2.pgc,94
char *dates[dates10,
static char *times[times42,
char *intervals[intervals49,
main(59,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/thread-prep.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/prep.pgc,131
main(7,
#define WIN32_LEAN_AND_MEAN14,
#define THREADS	23,
#define REPEATS	24,
static unsigned __stdcall fn(33,
int main 62,

/home/seinoyu/pgsql/master/postgresql/sqlca.h,391
#define POSTGRES_SQLCA_H2,
#define PGDLLIMPORT 6,
#define PGDLLIMPORT8,
#define SQLERRMC_LEN	12,
struct sqlca_t19,
	char		sqlcaid[sqlcaid21,
	long		sqlabc;22,
	long		sqlcode;23,
		int			sqlerrml;26,
		char		sqlerrmc[sqlerrmc27,
	}			sqlerrm;28,
	char		sqlerrp[sqlerrp29,
	long		sqlerrd[sqlerrd30,
	char		sqlwarn[sqlwarn39,
	char		sqlstate[sqlstate53,
#define sqlca 59,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/pgtypeslib-num_test.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/printf_hack.h,17
print_double(6,

/home/seinoyu/pgsql/master/postgresql/num_test.pgc,10
main(12,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/compat_oracle-char_array.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/char_array.pgc,35
static void warn(7,
int main(16,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/preproc-type.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/type.pgc,278
typedef long  mmInteger 6,
typedef char  mmChar 7,
typedef short  mmSmallInt 8,
typedef char string[string11,
typedef char* c;14,
struct TBempl 23,
 mmInteger idnum 19,
 mmChar name 20,
 mmSmallInt accs 21,
main 26,
 struct varchar 36,
 int len 34,
 char text 35,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/compat_informix-rfmtlong.c,25
#define ECPGdebug(9,267

/home/seinoyu/pgsql/master/postgresql/rfmtlong.pgc,41
fmtlong(16,
main(33,
check_return(52,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/preproc-array_of_struct.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/array_of_struct.pgc,1025
  struct varchar_1 12,
  struct varchar_1  { int len;12,
  struct varchar_1  { int len; char arr[arr12,
  struct varchar_1  { int len; char arr[ 50 ]; }  name 12,
 int phone 13,
 } customer 14,
typedef  struct ind 16,
 short name_ind 19,
 short phone_ind 20,
 } cust_ind 21,
int main(23,
  struct varchar_2 30,
  struct varchar_2  { int len;30,
  struct varchar_2  { int len; char arr[arr30,
  struct varchar_2  { int len; char arr[ 50 ]; }  name 30,
 int phone 31,
 }  customer2 32,
 struct customer3 38,
  struct varchar_3 36,
  struct varchar_3  { int len;36,
  struct varchar_3  { int len; char arr[arr36,
  struct varchar_3  { int len; char arr[ 50 ]; }  name 36,
 int phone 37,
 struct customer4 43,
  struct varchar_4 41,
  struct varchar_4  { int len;41,
  struct varchar_4  { int len; char arr[arr41,
  struct varchar_4  { int len; char arr[ 50 ]; }  name 41,
 int phone 42,
  struct varchar_5 45,
  struct varchar_5  { int len;45,
  struct varchar_5  { int len; char arr[arr45,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/pgtypeslib-dt_test.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/dt_test.pgc,10
main(11,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-sqlda.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/sqlda.h,190
#define ECPG_SQLDA_H2,
typedef struct sqlvar_compat sqlvar_t;7,
typedef struct sqlda_compat sqlda_t;8,
typedef struct sqlvar_struct sqlvar_t;13,
typedef struct sqlda_struct sqlda_t;14,

/home/seinoyu/pgsql/master/postgresql/pgtypes_numeric.h,647
#define PGTYPES_NUMERIC2,
#define NUMERIC_POS	6,
#define NUMERIC_NEG	7,
#define NUMERIC_NAN	8,
#define NUMERIC_NULL	9,
#define NUMERIC_MAX_PRECISION	10,
#define NUMERIC_MAX_DISPLAY_SCALE	11,
#define NUMERIC_MIN_DISPLAY_SCALE	12,
#define NUMERIC_MIN_SIG_DIGITS	13,
#define DECSIZE 15,
typedef unsigned char NumericDigit;17,
	int			ndigits;20,
	int			weight;21,
	int			rscale;22,
	int			dscale;23,
	int			sign;24,
	NumericDigit *buf;buf25,
	NumericDigit *digits;digits26,
} numeric;27,
	int			ndigits;31,
	int			weight;32,
	int			rscale;33,
	int			dscale;34,
	int			sign;35,
	NumericDigit digits[digits36,
} decimal;37,

/home/seinoyu/pgsql/master/postgresql/sqlda.pgc,171
sqlda_t	*inp_sqlda,inp_sqlda13,
sqlda_t	*inp_sqlda, *outp_sqlda,outp_sqlda13,
sqlda_t	*inp_sqlda, *outp_sqlda, *outp_sqlda1;outp_sqlda113,
dump_sqlda(16,
main 68,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/preproc-comment.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/comment.pgc,50
/* just a test comment */ int i;5,
int main(12,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-oldexec.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/oldexec.pgc,10
main(11,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-twophase.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/twophase.pgc,13
int main(9,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/preproc-strings.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/strings.h,195
 char * s1 1,
 char * s1 , * s2 1,
 char * s1 , * s2 , * s3 1,
 char * s1 , * s2 , * s3 , * s4 1,
 char * s1 , * s2 , * s3 , * s4 , * s5 1,
 char * s1 , * s2 , * s3 , * s4 , * s5 , * s6 1,

/home/seinoyu/pgsql/master/postgresql/strings.pgc,13
int main(7,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/preproc-pointer_to_struct.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/pointer_to_struct.pgc,873
  struct varchar_1 13,
  struct varchar_1  { int len;13,
  struct varchar_1  { int len; char arr[arr13,
  struct varchar_1  { int len; char arr[ 50 ]; }  name 13,
 int phone 14,
 } customer 15,
typedef  struct ind 17,
 short name_ind 20,
 short phone_ind 21,
 } cust_ind 22,
int main(24,
  struct varchar_2 31,
  struct varchar_2  { int len;31,
  struct varchar_2  { int len; char arr[arr31,
  struct varchar_2  { int len; char arr[ 50 ]; }  name 31,
 int phone 32,
 }  customer2 33,
 struct customer3 40,
 char name 38,
 int phone 39,
 struct customer4 46,
  struct varchar_3 44,
  struct varchar_3  { int len;44,
  struct varchar_3  { int len; char arr[arr44,
  struct varchar_3  { int len; char arr[ 50 ]; }  name 44,
 int phone 45,
  struct varchar_4 49,
  struct varchar_4  { int len;49,
  struct varchar_4  { int len; char arr[arr49,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/connect-test2.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/test2.pgc,10
main(14,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/thread-alloc.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/alloc.pgc,131
main(7,
#define WIN32_LEAN_AND_MEAN14,
#define THREADS	23,
#define REPEATS	24,
static unsigned __stdcall fn(33,
int main 62,

/home/seinoyu/pgsql/master/postgresql/sqlca.h,391
#define POSTGRES_SQLCA_H2,
#define PGDLLIMPORT 6,
#define PGDLLIMPORT8,
#define SQLERRMC_LEN	12,
struct sqlca_t19,
	char		sqlcaid[sqlcaid21,
	long		sqlabc;22,
	long		sqlcode;23,
		int			sqlerrml;26,
		char		sqlerrmc[sqlerrmc27,
	}			sqlerrm;28,
	char		sqlerrp[sqlerrp29,
	long		sqlerrd[sqlerrd30,
	char		sqlwarn[sqlwarn39,
	char		sqlstate[sqlstate53,
#define sqlca 59,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/preproc-describe.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/describe.pgc,9
main 9,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-quote.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/quote.pgc,13
int main(7,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-prepareas.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/prepareas.pgc,41
check_result_of_insert(9,
int main(19,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-dynalloc.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/sqlca.h,391
#define POSTGRES_SQLCA_H2,
#define PGDLLIMPORT 6,
#define PGDLLIMPORT8,
#define SQLERRMC_LEN	12,
struct sqlca_t19,
	char		sqlcaid[sqlcaid21,
	long		sqlabc;22,
	long		sqlcode;23,
		int			sqlerrml;26,
		char		sqlerrmc[sqlerrmc27,
	}			sqlerrm;28,
	char		sqlerrp[sqlerrp29,
	long		sqlerrd[sqlerrd30,
	char		sqlwarn[sqlwarn39,
	char		sqlstate[sqlstate53,
#define sqlca 59,

/home/seinoyu/pgsql/master/postgresql/dynalloc.pgc,13
int main(6,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/sql-bytea.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/bytea.pgc,499
dump_binary(10,
#define DATA_SIZE 20,
#define LACK_SIZE 21,
main(24,
  struct bytea_1 27,
  struct bytea_1  { int len;27,
  struct bytea_1  { int len; char arr[arr27,
  struct bytea_2 28,
  struct bytea_2  { int len;28,
  struct bytea_2  { int len; char arr[arr28,
  struct bytea_3 29,
  struct bytea_3  { int len;29,
  struct bytea_3  { int len; char arr[arr29,
  struct bytea_4 30,
  struct bytea_4  { int len;30,
  struct bytea_4  { int len; char arr[arr30,
#define init(35,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/connect-test1.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/test1.pgc,10
main(13,

/home/seinoyu/pgsql/master/postgresql/src/interfaces/ecpg/test/expected/preproc-autoprep.c,25
#define ECPGdebug(7,200

/home/seinoyu/pgsql/master/postgresql/autoprep.pgc,35
static void test(8,
int main(67,

/home/seinoyu/pgsql/master/postgresql/specscanner.c,8828
#define  YY_INT_ALIGNED 5,
#define yy_create_buffer 9,
#define yy_delete_buffer 10,
#define yy_scan_buffer 11,
#define yy_scan_string 12,
#define yy_scan_bytes 13,
#define yy_init_buffer 14,
#define yy_flush_buffer 15,
#define yy_load_buffer_state 16,
#define yy_switch_to_buffer 17,
#define yypush_buffer_state 18,
#define yypop_buffer_state 19,
#define yyensure_buffer_stack 20,
#define yy_flex_debug 21,
#define yyin 22,
#define yyleng 23,
#define yylex 24,
#define yylineno 25,
#define yyout 26,
#define yyrestart 27,
#define yytext 28,
#define yywrap 29,
#define yyalloc 30,
#define yyrealloc 31,
#define yyfree 32,
#define FLEX_SCANNER34,
#define YY_FLEX_MAJOR_VERSION 35,
#define YY_FLEX_MINOR_VERSION 36,
#define YY_FLEX_SUBMINOR_VERSION 37,
#define FLEX_BETA39,
#define spec_yy_create_buffer_ALREADY_DEFINED43,
#define yy_create_buffer 45,
#define spec_yy_delete_buffer_ALREADY_DEFINED49,
#define yy_delete_buffer 51,
#define spec_yy_scan_buffer_ALREADY_DEFINED55,
#define yy_scan_buffer 57,
#define spec_yy_scan_string_ALREADY_DEFINED61,
#define yy_scan_string 63,
#define spec_yy_scan_bytes_ALREADY_DEFINED67,
#define yy_scan_bytes 69,
#define spec_yy_init_buffer_ALREADY_DEFINED73,
#define yy_init_buffer 75,
#define spec_yy_flush_buffer_ALREADY_DEFINED79,
#define yy_flush_buffer 81,
#define spec_yy_load_buffer_state_ALREADY_DEFINED85,
#define yy_load_buffer_state 87,
#define spec_yy_switch_to_buffer_ALREADY_DEFINED91,
#define yy_switch_to_buffer 93,
#define spec_yypush_buffer_state_ALREADY_DEFINED97,
#define yypush_buffer_state 99,
#define spec_yypop_buffer_state_ALREADY_DEFINED103,
#define yypop_buffer_state 105,
#define spec_yyensure_buffer_stack_ALREADY_DEFINED109,
#define yyensure_buffer_stack 111,
#define spec_yylex_ALREADY_DEFINED115,
#define yylex 117,
#define spec_yyrestart_ALREADY_DEFINED121,
#define yyrestart 123,
#define spec_yylex_init_ALREADY_DEFINED127,
#define yylex_init 129,
#define spec_yylex_init_extra_ALREADY_DEFINED133,
#define yylex_init_extra 135,
#define spec_yylex_destroy_ALREADY_DEFINED139,
#define yylex_destroy 141,
#define spec_yyget_debug_ALREADY_DEFINED145,
#define yyget_debug 147,
#define spec_yyset_debug_ALREADY_DEFINED151,
#define yyset_debug 153,
#define spec_yyget_extra_ALREADY_DEFINED157,
#define yyget_extra 159,
#define spec_yyset_extra_ALREADY_DEFINED163,
#define yyset_extra 165,
#define spec_yyget_in_ALREADY_DEFINED169,
#define yyget_in 171,
#define spec_yyset_in_ALREADY_DEFINED175,
#define yyset_in 177,
#define spec_yyget_out_ALREADY_DEFINED181,
#define yyget_out 183,
#define spec_yyset_out_ALREADY_DEFINED187,
#define yyset_out 189,
#define spec_yyget_leng_ALREADY_DEFINED193,
#define yyget_leng 195,
#define spec_yyget_text_ALREADY_DEFINED199,
#define yyget_text 201,
#define spec_yyget_lineno_ALREADY_DEFINED205,
#define yyget_lineno 207,
#define spec_yyset_lineno_ALREADY_DEFINED211,
#define yyset_lineno 213,
#define spec_yywrap_ALREADY_DEFINED217,
#define yywrap 219,
#define spec_yyalloc_ALREADY_DEFINED223,
#define yyalloc 225,
#define spec_yyrealloc_ALREADY_DEFINED229,
#define yyrealloc 231,
#define spec_yyfree_ALREADY_DEFINED235,
#define yyfree 237,
#define spec_yytext_ALREADY_DEFINED241,
#define yytext 243,
#define spec_yyleng_ALREADY_DEFINED247,
#define yyleng 249,
#define spec_yyin_ALREADY_DEFINED253,
#define yyin 255,
#define spec_yyout_ALREADY_DEFINED259,
#define yyout 261,
#define spec_yy_flex_debug_ALREADY_DEFINED265,
#define yy_flex_debug 267,
#define spec_yylineno_ALREADY_DEFINED271,
#define yylineno 273,
#define FLEXINT_H289,
#define __STDC_LIMIT_MACROS 299,
typedef int8_t flex_int8_t;303,
typedef uint8_t flex_uint8_t;304,
typedef int16_t flex_int16_t;305,
typedef uint16_t flex_uint16_t;306,
typedef int32_t flex_int32_t;307,
typedef uint32_t flex_uint32_t;308,
typedef signed char flex_int8_t;310,
typedef short int flex_int16_t;311,
typedef int flex_int32_t;312,
typedef unsigned char flex_uint8_t;313,
typedef unsigned short int flex_uint16_t;314,
typedef unsigned int flex_uint32_t;315,
#define INT8_MIN 319,
#define INT16_MIN 322,
#define INT32_MIN 325,
#define INT8_MAX 328,
#define INT16_MAX 331,
#define INT32_MAX 334,
#define UINT8_MAX 337,
#define UINT16_MAX 340,
#define UINT32_MAX 343,
#define SIZE_MAX 347,
#define yyconst 357,
#define yynoreturn 360,
#define yynoreturn362,
#define YY_NULL 366,
#define YY_SC_TO_UI(371,
#define BEGIN 377,
#define YY_START 382,
#define YYSTATE 383,
#define YY_STATE_EOF(385,
#define YY_NEW_FILE 387,
#define YY_END_OF_BUFFER_CHAR 388,
#define YY_BUF_SIZE 397,
#define YY_BUF_SIZE 399,
#define YY_STATE_BUF_SIZE 405,
#define YY_TYPEDEF_YY_BUFFER_STATE408,
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE409,
#define YY_TYPEDEF_YY_SIZE_T413,
typedef size_t yy_size_t;414,
#define EOB_ACT_CONTINUE_SCAN 421,
#define EOB_ACT_END_OF_FILE 422,
#define EOB_ACT_LAST_MATCH 423,
    #define YY_LESS_LINENO(425,
    #define YY_LINENO_REWIND_TO(426,
#define yyless(429,
#define unput(441,
#define YY_STRUCT_YY_BUFFER_STATE444,
struct yy_buffer_state445,
	FILE *yy_input_file;yy_input_file447,
	char *yy_ch_buf;yy_ch_buf449,
	char *yy_buf_pos;yy_buf_pos450,
	int yy_buf_size;455,
	int yy_n_chars;460,
	int yy_is_our_buffer;466,
	int yy_is_interactive;473,
	int yy_at_bol;479,
    int yy_bs_lineno;481,
    int yy_bs_column;482,
	int yy_fill_buffer;487,
	int yy_buffer_status;489,
#define YY_BUFFER_NEW 491,
#define YY_BUFFER_NORMAL 492,
#define YY_BUFFER_EOF_PENDING 503,
static size_t yy_buffer_stack_top 509,
static size_t yy_buffer_stack_max 510,
static YY_BUFFER_STATE * yy_buffer_stack 511,
#define YY_CURRENT_BUFFER 519,
#define YY_CURRENT_BUFFER_LVALUE 525,
static char yy_hold_char;528,
static int yy_n_chars;529,
int yyleng;530,
static char *yy_c_buf_p yy_c_buf_p533,
static int yy_init 534,
static int yy_start 535,
static int yy_did_buffer_switch_on_eof;540,
#define YY_FLUSH_BUFFER 553,
#define yy_new_buffer 563,
#define yy_set_interactive(564,
#define yy_set_bol(573,
#define YY_AT_BOL(582,
#define spec_yywrap(586,
#define YY_SKIP_YYWRAP587,
typedef flex_uint8_t YY_CHAR;588,
FILE *yyin yyin590,
typedef int yy_state_type;592,
int yylineno 595,
#undef yytext_ptr599,
#define yytext_ptr 601,
#define YY_DO_BEFORE_ACTION 611,
#define YY_NUM_RULES 617,
#define YY_END_OF_BUFFER 618,
struct yy_trans_info621,
	flex_int32_t yy_verify;623,
	flex_int32_t yy_nxt;624,
static const flex_int16_t yy_accept[yy_accept626,
static const YY_CHAR yy_ec[yy_ec636,
static const YY_CHAR yy_meta[yy_meta668,
static const flex_int16_t yy_base[yy_base675,
static const flex_int16_t yy_def[yy_def685,
static const flex_int16_t yy_nxt[yy_nxt695,
static const flex_int16_t yy_chk[yy_chk710,
static yy_state_type yy_last_accepting_state;725,
static char *yy_last_accepting_cpos;yy_last_accepting_cpos726,
int yy_flex_debug 729,
#define REJECT 734,
#define yymore(735,
#define YY_MORE_ADJ 736,
#define YY_RESTORE_YY_MORE_OFFSET737,
char *yytext;yytext738,
#define YY_NO_INPUT 764,
#define INITIAL 768,
#define sql 769,
#define qstr 770,
#define YY_EXTRA_TYPE 781,
#define YY_READ_BUF_SIZE 852,
#define YY_READ_BUF_SIZE 854,
#define ECHO 863,
#define YY_INPUT(870,
#define yyterminate(907,
#define YY_START_STACK_INCR 912,
#define YY_FATAL_ERROR(917,
#define YY_DECL_IS_OURS 926,
#define YY_DECL 930,
#define YY_USER_ACTION937,
#define YY_BREAK 942,
#define YY_RULE_SETUP 945,
static int yy_get_next_buffer 1317,
    static yy_state_type yy_get_previous_state 1455,
    static yy_state_type yy_try_NUL_trans 1487,
    static int yyinput 1516,
    void yyrestart 1593,
    void yy_switch_to_buffer 1610,
static void yy_load_buffer_state 1641,
    YY_BUFFER_STATE yy_create_buffer 1655,
    void yy_delete_buffer 1683,
    static void yy_init_buffer 1702,
    void yy_flush_buffer 1730,
void yypush_buffer_state 1759,
void yypop_buffer_state 1789,
static void yyensure_buffer_stack 1808,
YY_BUFFER_STATE yy_scan_buffer 1857,
YY_BUFFER_STATE yy_scan_string 1894,
YY_BUFFER_STATE yy_scan_bytes 1907,
#define YY_EXIT_FAILURE 1938,
static void yynoreturn yy_fatal_error 1941,
#undef yyless1949,
#define yyless(1950,
int yyget_lineno 1969,
FILE *yyget_in yyget_in1978,
FILE *yyget_out yyget_out1986,
int yyget_leng 1994,
char *yyget_text yyget_text2003,
void yyset_lineno 2012,
void yyset_in 2024,
void yyset_out 2029,
int yyget_debug 2034,
void yyset_debug 2039,
static int yy_init_globals 2044,
int yylex_destroy 2073,
static void yy_flex_strncpy 2099,
static int yy_flex_strlen 2109,
void *yyalloc yyalloc2119,
void *yyrealloc yyrealloc2124,
void yyfree 2137,
#define YYTABLES_NAME 2142,

/home/seinoyu/pgsql/master/postgresql/specscanner.l,139
static int	yyline 13,
#define LITBUF_INIT	15,
static char *litbuf litbuf16,
static size_t litbufsize 17,
static size_t litbufpos 18,
addlitchar(109,
yyerror(122,

/home/seinoyu/pgsql/master/postgresql/src/test/isolation/specparse.y,553
TestSpec		parseresult;18,440
%name-prefix=prefix23,517
		void  **elements;elements33,641
		int		nelements;34,661
TestSpec:TestSpec52,1063
setup_list:setup_list68,1488
opt_setup:opt_setup83,1772
setup:setup88,1847
opt_teardown:opt_teardown92,1891
session_list:session_list97,1978
session:session113,2310
step_list:step_list125,2568
step:step142,2889
opt_permutation_list:opt_permutation_list154,3061
permutation_list:permutation_list165,3200
permutation:permutation182,3549
string_literal_list:string_literal_list191,3727

/home/seinoyu/pgsql/master/postgresql/src/test/isolation/specparse.c,334
#define YYBISON 48,2185
#define YYBISON_VERSION 51,2226
#define YYSKELETON_NAME 54,2281
#define YYPURE 57,2336
#define YYPUSH 60,2375
#define YYPULL 63,2414
#define yyparse 67,2484
#define yylex 68,2521
#define yyerror 69,2556
#define yydebug 70,2593
#define yynerrs 71,2630
#define yylval 72,2667
#define yychar 73,2703

/home/seinoyu/pgsql/master/postgresql/specparse.y,226
TestSpec		parseresult;18,
	char	   *str;str27,
	Session	   *session;session28,
	Step	   *step;step29,
	Permutation *permutation;permutation30,
		void  **elements;elements33,
		int		nelements;34,
	}			ptr_list;35,

/home/seinoyu/pgsql/master/postgresql/specparse.c,542
#   define YY_CAST(101,
#   define YY_REINTERPRET_CAST(102,
#   define YY_CAST(104,
#   define YY_REINTERPRET_CAST(105,
#    define YY_NULLPTR 111,
#    define YY_NULLPTR 113,
#   define YY_NULLPTR 116,
# undef YYERROR_VERBOSE122,
# define YYERROR_VERBOSE 123,
# define YYERROR_VERBOSE 125,
# define YYDEBUG 131,
# define YYTOKENTYPE139,
  enum yytokentype140,
    sqlblock 142,
    string_literal 143,
    PERMUTATION 144,
    SESSION 145,
    SETUP 146,
    STEP 147,
    TEARDOWN 148,
    TEST 149,
union YYSTYPE155,
typedef union YYSTYPE YYSTYPE;172,
# define YYSTYPE_IS_TRIVIAL 173,
# define YYSTYPE_IS_DECLARED 174,
# undef short187,
#  define YY_STDINT_H198,
typedef __INT_LEAST8_TYPE__ yytype_int8;208,
typedef int_least8_t yytype_int8;210,
typedef signed char yytype_int8;212,
typedef __INT_LEAST16_TYPE__ yytype_int16;216,
typedef int_least16_t yytype_int16;218,
typedef short yytype_int16;220,
typedef __UINT_LEAST8_TYPE__ yytype_uint8;224,
typedef uint_least8_t yytype_uint8;227,
typedef unsigned char yytype_uint8;229,
typedef short yytype_uint8;231,
typedef __UINT_LEAST16_TYPE__ yytype_uint16;235,
typedef uint_least16_t yytype_uint16;238,
typedef unsigned short yytype_uint16;240,
typedef int yytype_uint16;242,
#  define YYPTRDIFF_T 247,
#  define YYPTRDIFF_MAXIMUM 248,
#  define YYPTRDIFF_T 253,
#  define YYPTRDIFF_MAXIMUM 254,
#  define YYPTRDIFF_T 256,
#  define YYPTRDIFF_MAXIMUM 257,
#  define YYSIZE_T 263,
#  define YYSIZE_T 265,
#  define YYSIZE_T 268,
#  define YYSIZE_T 270,
#define YYSIZE_MAXIMUM 274,
#define YYSIZEOF(280,
typedef yytype_int8 yy_state_t;283,
typedef int yy_state_fast_t;286,
#   define YY_(292,
#  define YY_(296,
#  define YY_ATTRIBUTE_PURE 302,
#  define YY_ATTRIBUTE_PURE304,
#  define YY_ATTRIBUTE_UNUSED 310,
#  define YY_ATTRIBUTE_UNUSED312,
# define YYUSE(318,
# define YYUSE(320,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN 325,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END 329,
# define YY_INITIAL_VALUE(332,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN335,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END336,
# define YY_INITIAL_VALUE(339,
# define YY_IGNORE_USELESS_CAST_BEGIN 343,
# define YY_IGNORE_USELESS_CAST_END 346,
# define YY_IGNORE_USELESS_CAST_BEGIN350,
# define YY_IGNORE_USELESS_CAST_END351,
#define YY_ASSERT(355,
#    define YYSTACK_ALLOC 364,
#    define YYSTACK_ALLOC 368,
#    define alloca 371,
#    define YYSTACK_ALLOC 373,
#      define EXIT_SUCCESS 378,
#  define YYSTACK_FREE(387,
#   define YYSTACK_ALLOC_MAXIMUM 393,
#  define YYSTACK_ALLOC 396,
#  define YYSTACK_FREE 397,
#   define YYSTACK_ALLOC_MAXIMUM 399,
#    define EXIT_SUCCESS 406,
#   define YYMALLOC 410,
#   define YYFREE 416,
union yyalloc430,
  yy_state_t yyss_alloc;432,
  YYSTYPE yyvs_alloc;433,
# define YYSTACK_GAP_MAXIMUM 437,
# define YYSTACK_BYTES(441,
# define YYCOPY_NEEDED 445,
# define YYSTACK_RELOCATE(452,
#   define YYCOPY(470,
#   define YYCOPY(473,
#define YYFINAL 486,
#define YYLAST 488,
#define YYNTOKENS 491,
#define YYNNTS 493,
#define YYNRULES 495,
#define YYNSTATES 497,
#define YYUNDEFTOK 499,
#define YYMAXUTOK 500,
#define YYTRANSLATE(505,
static const yytype_int8 yytranslate[yytranslate510,
static const yytype_uint8 yyrline[yyrline543,
static const char *const yytname[yytname554,
static const yytype_int16 yytoknum[yytoknum567,
#define YYPACT_NINF 574,
#define yypact_value_is_default(576,
#define YYTABLE_NINF 579,
#define yytable_value_is_error(581,
static const yytype_int8 yypact[yypact586,
static const yytype_int8 yydefact[yydefact597,
static const yytype_int8 yypgoto[yypgoto606,
static const yytype_int8 yydefgoto[yydefgoto613,
static const yytype_int8 yytable[yytable622,
static const yytype_int8 yycheck[yycheck630,
static const yytype_int8 yystos[yystos640,
static const yytype_int8 yyr1[yyr1649,
static const yytype_int8 yyr2[yyr2657,
#define yyerrok 665,
#define yyclearin 666,
#define YYEMPTY 667,
#define YYEOF 668,
#define YYACCEPT 670,
#define YYABORT 671,
#define YYERROR 672,
#define YYRECOVERING(675,
#define YYBACKUP(677,
#define YYTERROR 695,
#define YYERRCODE 696,
#  define YYFPRINTF 705,
# define YYDPRINTF(708,
# define YY_LOCATION_PRINT(716,
# define YY_SYMBOL_PRINT(720,
yy_symbol_value_print 737,
yy_symbol_print 758,
yy_stack_print 773,
# define YY_STACK_PRINT(784,
yy_reduce_print 796,
# define YY_REDUCE_PRINT(815,
int yydebug;823,
# define YYDPRINTF(825,
# define YY_SYMBOL_PRINT(826,
# define YY_STACK_PRINT(827,
# define YY_REDUCE_PRINT(828,
# define YYINITDEPTH 834,
# define YYMAXDEPTH 845,
#   define yystrlen(853,
yystrlen 857,
#   define yystpcpy 869,
yystpcpy 874,
yytnamerr 896,
yysyntax_error 947,
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM 950,
# define YYCASE_(1026,
# undef YYCASE_1037,
yydestruct 1086,
int yychar;1102,
YYSTYPE yylval;1105,
int yynerrs;1107,
yyparse 1115,
#define YYPOPSTACK(1155,
# undef YYSTACK_RELOCATE1237,
# define YYSYNTAX_ERROR 1609,
# undef YYSYNTAX_ERROR1638,

/home/seinoyu/pgsql/master/postgresql/exprscan.c,8818
#define  YY_INT_ALIGNED 5,
#define FLEX_SCANNER9,
#define YY_FLEX_MAJOR_VERSION 10,
#define YY_FLEX_MINOR_VERSION 11,
#define YY_FLEX_SUBMINOR_VERSION 12,
#define FLEX_BETA14,
#define expr_yy_create_buffer_ALREADY_DEFINED18,
#define yy_create_buffer 20,
#define expr_yy_delete_buffer_ALREADY_DEFINED24,
#define yy_delete_buffer 26,
#define expr_yy_scan_buffer_ALREADY_DEFINED30,
#define yy_scan_buffer 32,
#define expr_yy_scan_string_ALREADY_DEFINED36,
#define yy_scan_string 38,
#define expr_yy_scan_bytes_ALREADY_DEFINED42,
#define yy_scan_bytes 44,
#define expr_yy_init_buffer_ALREADY_DEFINED48,
#define yy_init_buffer 50,
#define expr_yy_flush_buffer_ALREADY_DEFINED54,
#define yy_flush_buffer 56,
#define expr_yy_load_buffer_state_ALREADY_DEFINED60,
#define yy_load_buffer_state 62,
#define expr_yy_switch_to_buffer_ALREADY_DEFINED66,
#define yy_switch_to_buffer 68,
#define expr_yypush_buffer_state_ALREADY_DEFINED72,
#define yypush_buffer_state 74,
#define expr_yypop_buffer_state_ALREADY_DEFINED78,
#define yypop_buffer_state 80,
#define expr_yyensure_buffer_stack_ALREADY_DEFINED84,
#define yyensure_buffer_stack 86,
#define expr_yylex_ALREADY_DEFINED90,
#define yylex 92,
#define expr_yyrestart_ALREADY_DEFINED96,
#define yyrestart 98,
#define expr_yylex_init_ALREADY_DEFINED102,
#define yylex_init 104,
#define expr_yylex_init_extra_ALREADY_DEFINED108,
#define yylex_init_extra 110,
#define expr_yylex_destroy_ALREADY_DEFINED114,
#define yylex_destroy 116,
#define expr_yyget_debug_ALREADY_DEFINED120,
#define yyget_debug 122,
#define expr_yyset_debug_ALREADY_DEFINED126,
#define yyset_debug 128,
#define expr_yyget_extra_ALREADY_DEFINED132,
#define yyget_extra 134,
#define expr_yyset_extra_ALREADY_DEFINED138,
#define yyset_extra 140,
#define expr_yyget_in_ALREADY_DEFINED144,
#define yyget_in 146,
#define expr_yyset_in_ALREADY_DEFINED150,
#define yyset_in 152,
#define expr_yyget_out_ALREADY_DEFINED156,
#define yyget_out 158,
#define expr_yyset_out_ALREADY_DEFINED162,
#define yyset_out 164,
#define expr_yyget_leng_ALREADY_DEFINED168,
#define yyget_leng 170,
#define expr_yyget_text_ALREADY_DEFINED174,
#define yyget_text 176,
#define expr_yyget_lineno_ALREADY_DEFINED180,
#define yyget_lineno 182,
#define expr_yyset_lineno_ALREADY_DEFINED186,
#define yyset_lineno 188,
#define expr_yyget_column_ALREADY_DEFINED192,
#define yyget_column 194,
#define expr_yyset_column_ALREADY_DEFINED198,
#define yyset_column 200,
#define expr_yywrap_ALREADY_DEFINED204,
#define yywrap 206,
#define expr_yyget_lval_ALREADY_DEFINED210,
#define yyget_lval 212,
#define expr_yyset_lval_ALREADY_DEFINED216,
#define yyset_lval 218,
#define expr_yyalloc_ALREADY_DEFINED222,
#define yyalloc 224,
#define expr_yyrealloc_ALREADY_DEFINED228,
#define yyrealloc 230,
#define expr_yyfree_ALREADY_DEFINED234,
#define yyfree 236,
#define FLEXINT_H252,
#define __STDC_LIMIT_MACROS 262,
typedef int8_t flex_int8_t;266,
typedef uint8_t flex_uint8_t;267,
typedef int16_t flex_int16_t;268,
typedef uint16_t flex_uint16_t;269,
typedef int32_t flex_int32_t;270,
typedef uint32_t flex_uint32_t;271,
typedef signed char flex_int8_t;273,
typedef short int flex_int16_t;274,
typedef int flex_int32_t;275,
typedef unsigned char flex_uint8_t;276,
typedef unsigned short int flex_uint16_t;277,
typedef unsigned int flex_uint32_t;278,
#define INT8_MIN 282,
#define INT16_MIN 285,
#define INT32_MIN 288,
#define INT8_MAX 291,
#define INT16_MAX 294,
#define INT32_MAX 297,
#define UINT8_MAX 300,
#define UINT16_MAX 303,
#define UINT32_MAX 306,
#define SIZE_MAX 310,
#define yyconst 320,
#define yynoreturn 323,
#define yynoreturn325,
#define YY_NULL 329,
#define YY_SC_TO_UI(334,
#define YY_TYPEDEF_YY_SCANNER_T338,
typedef void* yyscan_t;339,
#define yyin 344,
#define yyout 345,
#define yyextra 346,
#define yyleng 347,
#define yytext 348,
#define yylineno 349,
#define yycolumn 350,
#define yy_flex_debug 351,
#define BEGIN 357,
#define YY_START 362,
#define YYSTATE 363,
#define YY_STATE_EOF(365,
#define YY_NEW_FILE 367,
#define YY_END_OF_BUFFER_CHAR 368,
#define YY_BUF_SIZE 377,
#define YY_BUF_SIZE 379,
#define YY_STATE_BUF_SIZE 385,
#define YY_TYPEDEF_YY_BUFFER_STATE388,
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE389,
#define YY_TYPEDEF_YY_SIZE_T393,
typedef size_t yy_size_t;394,
#define EOB_ACT_CONTINUE_SCAN 397,
#define EOB_ACT_END_OF_FILE 398,
#define EOB_ACT_LAST_MATCH 399,
    #define YY_LESS_LINENO(401,
    #define YY_LINENO_REWIND_TO(402,
#define yyless(405,
#define unput(417,
#define YY_STRUCT_YY_BUFFER_STATE420,
struct yy_buffer_state421,
	FILE *yy_input_file;yy_input_file423,
	char *yy_ch_buf;yy_ch_buf425,
	char *yy_buf_pos;yy_buf_pos426,
	int yy_buf_size;431,
	int yy_n_chars;436,
	int yy_is_our_buffer;442,
	int yy_is_interactive;449,
	int yy_at_bol;455,
    int yy_bs_lineno;457,
    int yy_bs_column;458,
	int yy_fill_buffer;463,
	int yy_buffer_status;465,
#define YY_BUFFER_NEW 467,
#define YY_BUFFER_NORMAL 468,
#define YY_BUFFER_EOF_PENDING 479,
#define YY_CURRENT_BUFFER 490,
#define YY_CURRENT_BUFFER_LVALUE 496,
#define YY_FLUSH_BUFFER 509,
#define yy_new_buffer 519,
#define yy_set_interactive(520,
#define yy_set_bol(529,
#define YY_AT_BOL(538,
#define expr_yywrap(542,
#define YY_SKIP_YYWRAP543,
typedef flex_uint8_t YY_CHAR;544,
typedef int yy_state_type;546,
#define yytext_ptr 548,
#define YY_DO_BEFORE_ACTION 558,
#define YY_NUM_RULES 564,
#define YY_END_OF_BUFFER 565,
struct yy_trans_info568,
	flex_int32_t yy_verify;570,
	flex_int32_t yy_nxt;571,
static const flex_int16_t yy_accept[yy_accept573,
static const YY_CHAR yy_ec[yy_ec591,
static const YY_CHAR yy_meta[yy_meta623,
static const flex_int16_t yy_base[yy_base632,
static const flex_int16_t yy_def[yy_def651,
static const flex_int16_t yy_nxt[yy_nxt670,
static const flex_int16_t yy_chk[yy_chk702,
#define REJECT 737,
#define yymore(738,
#define YY_MORE_ADJ 739,
#define YY_RESTORE_YY_MORE_OFFSET740,
#define YY_NO_INPUT 791,
#define INITIAL 800,
#define EXPR 801,
#define YY_EXTRA_TYPE 812,
struct yyguts_t816,
    YY_EXTRA_TYPE yyextra_r;820,
    FILE *yyin_r,yyin_r823,
    FILE *yyin_r, *yyout_r;yyout_r823,
    size_t yy_buffer_stack_top;824,
    size_t yy_buffer_stack_max;825,
    YY_BUFFER_STATE * yy_buffer_stack;826,
    char yy_hold_char;827,
    int yy_n_chars;828,
    int yyleng_r;829,
    char *yy_c_buf_p;yy_c_buf_p830,
    int yy_init;831,
    int yy_start;832,
    int yy_did_buffer_switch_on_eof;833,
    int yy_start_stack_ptr;834,
    int yy_start_stack_depth;835,
    int *yy_start_stack;yy_start_stack836,
    yy_state_type yy_last_accepting_state;837,
    char* yy_last_accepting_cpos;838,
    int yylineno_r;840,
    int yy_flex_debug_r;841,
    char *yytext_r;yytext_r843,
    int yy_more_flag;844,
    int yy_more_len;845,
    YYSTYPE * yylval_r;847,
    #    define yylval 855,
#define YY_READ_BUF_SIZE 935,
#define YY_READ_BUF_SIZE 937,
#define ECHO 946,
#define YY_INPUT(953,
#define yyterminate(990,
#define YY_START_STACK_INCR 995,
#define YY_FATAL_ERROR(1000,
#define YY_DECL_IS_OURS 1009,
#define YY_DECL 1014,
#define YY_USER_ACTION1022,
#define YY_BREAK 1027,
#define YY_RULE_SETUP 1030,
static int yy_get_next_buffer 1633,
    static yy_state_type yy_get_previous_state 1772,
    static yy_state_type yy_try_NUL_trans 1805,
    static int yyinput 1836,
    void yyrestart 1914,
    void yy_switch_to_buffer 1932,
static void yy_load_buffer_state 1964,
    YY_BUFFER_STATE yy_create_buffer 1979,
    void yy_delete_buffer 2007,
    static void yy_init_buffer 2027,
    void yy_flush_buffer 2056,
void yypush_buffer_state 2086,
void yypop_buffer_state 2117,
static void yyensure_buffer_stack 2137,
YY_BUFFER_STATE yy_scan_buffer 2187,
YY_BUFFER_STATE yy_scan_string 2224,
YY_BUFFER_STATE yy_scan_bytes 2237,
#define YY_EXIT_FAILURE 2268,
static void yynoreturn yy_fatal_error 2271,
#undef yyless2281,
#define yyless(2282,
YY_EXTRA_TYPE yyget_extra 2301,
int yyget_lineno 2310,
int yyget_column 2323,
FILE *yyget_in yyget_in2336,
FILE *yyget_out yyget_out2345,
int yyget_leng 2354,
char *yyget_text yyget_text2364,
void yyset_extra 2374,
void yyset_lineno 2384,
void yyset_column 2399,
void yyset_in 2416,
void yyset_out 2422,
int yyget_debug 2428,
void yyset_debug 2434,
YYSTYPE * yyget_lval 2442,
void yyset_lval 2448,
int yylex_init(2460,
int yylex_init_extra(2487,
static int yy_init_globals 2514,
int yylex_destroy 2548,
static void yy_flex_strncpy 2582,
static int yy_flex_strlen 2594,
void *yyalloc yyalloc2604,
void *yyrealloc yyrealloc2611,
void yyfree 2626,
#define YYTABLES_NAME 2633,

/home/seinoyu/pgsql/master/postgresql/exprscan.l,194
static const char *expr_source expr_source29,
static int	expr_lineno 30,
static int	expr_start_offset 31,
static const char *expr_command expr_command32,
static bool last_was_newline 35,
expr_yyerror_more(271,
expr_yyerror(300,
expr_lex_one_word(311,
expr_scanner_init(360,
expr_scanner_finish(392,
expr_scanner_offset(411,
expr_scanner_get_substring(422,
expr_scanner_get_lineno(452,

/home/seinoyu/pgsql/master/postgresql/src/bin/pgbench/exprparse.c,286
#define YYBISON 48,2185
#define YYBISON_VERSION 51,2226
#define YYSKELETON_NAME 54,2281
#define YYPURE 57,2336
#define YYPUSH 60,2375
#define YYPULL 63,2414
#define yyparse 67,2484
#define yylex 68,2521
#define yyerror 69,2556
#define yydebug 70,2593
#define yynerrs 71,2630

/home/seinoyu/pgsql/master/postgresql/exprparse.y,697
#define PGBENCH_NARGS_VARIABLE	19,
#define PGBENCH_NARGS_CASE	20,
#define PGBENCH_NARGS_HASH	21,
PgBenchExpr *expr_parse_result;expr_parse_result23,
	int64		ival;49,
	double		dval;50,
	bool		bval;51,
	char	   *str;str52,
	PgBenchExpr *expr;expr53,
	PgBenchExprList *elist;elist54,
make_null_constant(165,
make_integer_constant(176,
make_double_constant(187,
make_boolean_constant(198,
make_variable(209,
make_op(220,
make_uop(229,
	const char *fname;fname248,
	int			nargs;249,
	PgBenchFunction tag;250,
}	PGBENCH_FUNCTIONS[PGBENCH_FUNCTIONS251,
find_func(386,
make_elist(405,
elist_length(432,
make_func(445,
make_case(506,
#undef yyscan_t522,
#undef yylval524,

/home/seinoyu/pgsql/master/postgresql/exprparse.c,847
#   define YY_CAST(117,
#   define YY_REINTERPRET_CAST(118,
#   define YY_CAST(120,
#   define YY_REINTERPRET_CAST(121,
#    define YY_NULLPTR 127,
#    define YY_NULLPTR 129,
#   define YY_NULLPTR 132,
# undef YYERROR_VERBOSE138,
# define YYERROR_VERBOSE 139,
# define YYERROR_VERBOSE 141,
# define YYDEBUG 147,
# define YYTOKENTYPE155,
  enum yytokentype156,
    NULL_CONST 158,
    INTEGER_CONST 159,
    MAXINT_PLUS_ONE_CONST 160,
    DOUBLE_CONST 161,
    BOOLEAN_CONST 162,
    VARIABLE 163,
    FUNCTION 164,
    AND_OP 165,
    OR_OP 166,
    NOT_OP 167,
    NE_OP 168,
    LE_OP 169,
    GE_OP 170,
    LS_OP 171,
    RS_OP 172,
    IS_OP 173,
    CASE_KW 174,
    WHEN_KW 175,
    THEN_KW 176,
    ELSE_KW 177,
    END_KW 178,
    ISNULL_OP 179,
    NOTNULL_OP 180,
    UNARY 181,
union YYSTYPE187,
typedef union YYSTYPE YYSTYPE;201,
# define YYSTYPE_IS_TRIVIAL 202,
# define YYSTYPE_IS_DECLARED 203,
# undef short215,
#  define YY_STDINT_H226,
typedef __INT_LEAST8_TYPE__ yytype_int8;236,
typedef int_least8_t yytype_int8;238,
typedef signed char yytype_int8;240,
typedef __INT_LEAST16_TYPE__ yytype_int16;244,
typedef int_least16_t yytype_int16;246,
typedef short yytype_int16;248,
typedef __UINT_LEAST8_TYPE__ yytype_uint8;252,
typedef uint_least8_t yytype_uint8;255,
typedef unsigned char yytype_uint8;257,
typedef short yytype_uint8;259,
typedef __UINT_LEAST16_TYPE__ yytype_uint16;263,
typedef uint_least16_t yytype_uint16;266,
typedef unsigned short yytype_uint16;268,
typedef int yytype_uint16;270,
#  define YYPTRDIFF_T 275,
#  define YYPTRDIFF_MAXIMUM 276,
#  define YYPTRDIFF_T 281,
#  define YYPTRDIFF_MAXIMUM 282,
#  define YYPTRDIFF_T 284,
#  define YYPTRDIFF_MAXIMUM 285,
#  define YYSIZE_T 291,
#  define YYSIZE_T 293,
#  define YYSIZE_T 296,
#  define YYSIZE_T 298,
#define YYSIZE_MAXIMUM 302,
#define YYSIZEOF(308,
typedef yytype_int8 yy_state_t;311,
typedef int yy_state_fast_t;314,
#   define YY_(320,
#  define YY_(324,
#  define YY_ATTRIBUTE_PURE 330,
#  define YY_ATTRIBUTE_PURE332,
#  define YY_ATTRIBUTE_UNUSED 338,
#  define YY_ATTRIBUTE_UNUSED340,
# define YYUSE(346,
# define YYUSE(348,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN 353,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END 357,
# define YY_INITIAL_VALUE(360,
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN363,
# define YY_IGNORE_MAYBE_UNINITIALIZED_END364,
# define YY_INITIAL_VALUE(367,
# define YY_IGNORE_USELESS_CAST_BEGIN 371,
# define YY_IGNORE_USELESS_CAST_END 374,
# define YY_IGNORE_USELESS_CAST_BEGIN378,
# define YY_IGNORE_USELESS_CAST_END379,
#define YY_ASSERT(383,
#    define YYSTACK_ALLOC 392,
#    define YYSTACK_ALLOC 396,
#    define alloca 399,
#    define YYSTACK_ALLOC 401,
#      define EXIT_SUCCESS 406,
#  define YYSTACK_FREE(415,
#   define YYSTACK_ALLOC_MAXIMUM 421,
#  define YYSTACK_ALLOC 424,
#  define YYSTACK_FREE 425,
#   define YYSTACK_ALLOC_MAXIMUM 427,
#    define EXIT_SUCCESS 434,
#   define YYMALLOC 438,
#   define YYFREE 444,
union yyalloc458,
  yy_state_t yyss_alloc;460,
  YYSTYPE yyvs_alloc;461,
# define YYSTACK_GAP_MAXIMUM 465,
# define YYSTACK_BYTES(469,
# define YYCOPY_NEEDED 473,
# define YYSTACK_RELOCATE(480,
#   define YYCOPY(498,
#   define YYCOPY(501,
#define YYFINAL 514,
#define YYLAST 516,
#define YYNTOKENS 519,
#define YYNNTS 521,
#define YYNRULES 523,
#define YYNSTATES 525,
#define YYUNDEFTOK 527,
#define YYMAXUTOK 528,
#define YYTRANSLATE(533,
static const yytype_int8 yytranslate[yytranslate538,
static const yytype_uint8 yyrline[yyrline573,
static const char *const yytname[yytname586,
static const yytype_int16 yytoknum[yytoknum602,
#define YYPACT_NINF 612,
#define yypact_value_is_default(614,
#define YYTABLE_NINF 617,
#define yytable_value_is_error(619,
static const yytype_int16 yypact[yypact624,
static const yytype_int8 yydefact[yydefact640,
static const yytype_int8 yypgoto[yypgoto654,
static const yytype_int8 yydefgoto[yydefgoto660,
static const yytype_int8 yytable[yytable668,
static const yytype_int8 yycheck[yycheck705,
static const yytype_int8 yystos[yystos744,
static const yytype_int8 yyr1[yyr1758,
static const yytype_int8 yyr2[yyr2768,
#define yyerrok 778,
#define yyclearin 779,
#define YYEMPTY 780,
#define YYEOF 781,
#define YYACCEPT 783,
#define YYABORT 784,
#define YYERROR 785,
#define YYRECOVERING(788,
#define YYBACKUP(790,
#define YYTERROR 808,
#define YYERRCODE 809,
#  define YYFPRINTF 818,
# define YYDPRINTF(821,
# define YY_LOCATION_PRINT(829,
# define YY_SYMBOL_PRINT(833,
yy_symbol_value_print 850,
yy_symbol_print 872,
yy_stack_print 887,
# define YY_STACK_PRINT(898,
yy_reduce_print 910,
# define YY_REDUCE_PRINT(929,
int yydebug;937,
# define YYDPRINTF(939,
# define YY_SYMBOL_PRINT(940,
# define YY_STACK_PRINT(941,
# define YY_REDUCE_PRINT(942,
# define YYINITDEPTH 948,
# define YYMAXDEPTH 959,
#   define yystrlen(967,
yystrlen 971,
#   define yystpcpy 983,
yystpcpy 988,
yytnamerr 1010,
yysyntax_error 1061,
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM 1064,
# define YYCASE_(1140,
# undef YYCASE_1151,
yydestruct 1200,
yyparse 1221,
#define YYPOPSTACK(1274,
# undef YYSTACK_RELOCATE1356,
# define YYSYNTAX_ERROR 1817,
# undef YYSYNTAX_ERROR1846,

/home/seinoyu/pgsql/master/postgresql/src/bin/pgbench/exprparse.y,1007
#define PGBENCH_NARGS_VARIABLE	19,461
#define PGBENCH_NARGS_CASE	20,497
#define PGBENCH_NARGS_HASH	21,530
PgBenchExpr *expr_parse_result;expr_parse_result23,564
%name-prefix=prefix42,1422
	int64		ival;49,1524
	double		dval;50,1538
	bool		bval;51,1553
	char	   *str;str52,1566
	PgBenchExpr *expr;expr53,1581
	PgBenchExprList *elist;elist54,1601
result:result82,2302
elist:elist84,2347
expr:expr89,2469
when_then_list:when_then_list151,5343
case_control:case_control155,5525
function:function159,5715
make_null_constant(165,5813
make_integer_constant(176,6029
make_double_constant(187,6256
make_boolean_constant(198,6486
make_variable(209,6716
make_op(220,6930
make_uop(229,7181
	const char *fname;fname248,7877
	int			nargs;249,7897
	PgBenchFunction tag;250,7911
}	PGBENCH_FUNCTIONS[PGBENCH_FUNCTIONS251,7933
find_func(386,9827
make_elist(405,10180
elist_length(432,10633
make_func(445,10872
make_case(506,12598
#undef yyscan_t522,13181
#undef yylval524,13273

/home/seinoyu/pgsql/master/postgresql/psqlscanslash.c,8933
#define  YY_INT_ALIGNED 29,
#define FLEX_SCANNER33,
#define YY_FLEX_MAJOR_VERSION 34,
#define YY_FLEX_MINOR_VERSION 35,
#define YY_FLEX_SUBMINOR_VERSION 36,
#define FLEX_BETA38,
#define slash_yy_create_buffer_ALREADY_DEFINED42,
#define yy_create_buffer 44,
#define slash_yy_delete_buffer_ALREADY_DEFINED48,
#define yy_delete_buffer 50,
#define slash_yy_scan_buffer_ALREADY_DEFINED54,
#define yy_scan_buffer 56,
#define slash_yy_scan_string_ALREADY_DEFINED60,
#define yy_scan_string 62,
#define slash_yy_scan_bytes_ALREADY_DEFINED66,
#define yy_scan_bytes 68,
#define slash_yy_init_buffer_ALREADY_DEFINED72,
#define yy_init_buffer 74,
#define slash_yy_flush_buffer_ALREADY_DEFINED78,
#define yy_flush_buffer 80,
#define slash_yy_load_buffer_state_ALREADY_DEFINED84,
#define yy_load_buffer_state 86,
#define slash_yy_switch_to_buffer_ALREADY_DEFINED90,
#define yy_switch_to_buffer 92,
#define slash_yypush_buffer_state_ALREADY_DEFINED96,
#define yypush_buffer_state 98,
#define slash_yypop_buffer_state_ALREADY_DEFINED102,
#define yypop_buffer_state 104,
#define slash_yyensure_buffer_stack_ALREADY_DEFINED108,
#define yyensure_buffer_stack 110,
#define slash_yylex_ALREADY_DEFINED114,
#define yylex 116,
#define slash_yyrestart_ALREADY_DEFINED120,
#define yyrestart 122,
#define slash_yylex_init_ALREADY_DEFINED126,
#define yylex_init 128,
#define slash_yylex_init_extra_ALREADY_DEFINED132,
#define yylex_init_extra 134,
#define slash_yylex_destroy_ALREADY_DEFINED138,
#define yylex_destroy 140,
#define slash_yyget_debug_ALREADY_DEFINED144,
#define yyget_debug 146,
#define slash_yyset_debug_ALREADY_DEFINED150,
#define yyset_debug 152,
#define slash_yyget_extra_ALREADY_DEFINED156,
#define yyget_extra 158,
#define slash_yyset_extra_ALREADY_DEFINED162,
#define yyset_extra 164,
#define slash_yyget_in_ALREADY_DEFINED168,
#define yyget_in 170,
#define slash_yyset_in_ALREADY_DEFINED174,
#define yyset_in 176,
#define slash_yyget_out_ALREADY_DEFINED180,
#define yyget_out 182,
#define slash_yyset_out_ALREADY_DEFINED186,
#define yyset_out 188,
#define slash_yyget_leng_ALREADY_DEFINED192,
#define yyget_leng 194,
#define slash_yyget_text_ALREADY_DEFINED198,
#define yyget_text 200,
#define slash_yyget_lineno_ALREADY_DEFINED204,
#define yyget_lineno 206,
#define slash_yyset_lineno_ALREADY_DEFINED210,
#define yyset_lineno 212,
#define slash_yyget_column_ALREADY_DEFINED216,
#define yyget_column 218,
#define slash_yyset_column_ALREADY_DEFINED222,
#define yyset_column 224,
#define slash_yywrap_ALREADY_DEFINED228,
#define yywrap 230,
#define slash_yyget_lval_ALREADY_DEFINED234,
#define yyget_lval 236,
#define slash_yyset_lval_ALREADY_DEFINED240,
#define yyset_lval 242,
#define slash_yyalloc_ALREADY_DEFINED246,
#define yyalloc 248,
#define slash_yyrealloc_ALREADY_DEFINED252,
#define yyrealloc 254,
#define slash_yyfree_ALREADY_DEFINED258,
#define yyfree 260,
#define FLEXINT_H276,
#define __STDC_LIMIT_MACROS 286,
typedef int8_t flex_int8_t;290,
typedef uint8_t flex_uint8_t;291,
typedef int16_t flex_int16_t;292,
typedef uint16_t flex_uint16_t;293,
typedef int32_t flex_int32_t;294,
typedef uint32_t flex_uint32_t;295,
typedef signed char flex_int8_t;297,
typedef short int flex_int16_t;298,
typedef int flex_int32_t;299,
typedef unsigned char flex_uint8_t;300,
typedef unsigned short int flex_uint16_t;301,
typedef unsigned int flex_uint32_t;302,
#define INT8_MIN 306,
#define INT16_MIN 309,
#define INT32_MIN 312,
#define INT8_MAX 315,
#define INT16_MAX 318,
#define INT32_MAX 321,
#define UINT8_MAX 324,
#define UINT16_MAX 327,
#define UINT32_MAX 330,
#define SIZE_MAX 334,
#define yyconst 344,
#define yynoreturn 347,
#define yynoreturn349,
#define YY_NULL 353,
#define YY_SC_TO_UI(358,
#define YY_TYPEDEF_YY_SCANNER_T362,
typedef void* yyscan_t;363,
#define yyin 368,
#define yyout 369,
#define yyextra 370,
#define yyleng 371,
#define yytext 372,
#define yylineno 373,
#define yycolumn 374,
#define yy_flex_debug 375,
#define BEGIN 381,
#define YY_START 386,
#define YYSTATE 387,
#define YY_STATE_EOF(389,
#define YY_NEW_FILE 391,
#define YY_END_OF_BUFFER_CHAR 392,
#define YY_BUF_SIZE 401,
#define YY_BUF_SIZE 403,
#define YY_STATE_BUF_SIZE 409,
#define YY_TYPEDEF_YY_BUFFER_STATE412,
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE413,
#define YY_TYPEDEF_YY_SIZE_T417,
typedef size_t yy_size_t;418,
#define EOB_ACT_CONTINUE_SCAN 421,
#define EOB_ACT_END_OF_FILE 422,
#define EOB_ACT_LAST_MATCH 423,
    #define YY_LESS_LINENO(425,
    #define YY_LINENO_REWIND_TO(426,
#define yyless(429,
#define unput(441,
#define YY_STRUCT_YY_BUFFER_STATE444,
struct yy_buffer_state445,
	FILE *yy_input_file;yy_input_file447,
	char *yy_ch_buf;yy_ch_buf449,
	char *yy_buf_pos;yy_buf_pos450,
	int yy_buf_size;455,
	int yy_n_chars;460,
	int yy_is_our_buffer;466,
	int yy_is_interactive;473,
	int yy_at_bol;479,
    int yy_bs_lineno;481,
    int yy_bs_column;482,
	int yy_fill_buffer;487,
	int yy_buffer_status;489,
#define YY_BUFFER_NEW 491,
#define YY_BUFFER_NORMAL 492,
#define YY_BUFFER_EOF_PENDING 503,
#define YY_CURRENT_BUFFER 514,
#define YY_CURRENT_BUFFER_LVALUE 520,
#define YY_FLUSH_BUFFER 533,
#define yy_new_buffer 543,
#define yy_set_interactive(544,
#define yy_set_bol(553,
#define YY_AT_BOL(562,
#define slash_yywrap(566,
#define YY_SKIP_YYWRAP567,
typedef flex_uint8_t YY_CHAR;568,
typedef int yy_state_type;570,
#define yytext_ptr 572,
static const flex_int16_t yy_nxt[yy_nxt574,
#define YY_DO_BEFORE_ACTION 1083,
#define YY_NUM_RULES 1089,
#define YY_END_OF_BUFFER 1090,
struct yy_trans_info1093,
	flex_int32_t yy_verify;1095,
	flex_int32_t yy_nxt;1096,
static const flex_int16_t yy_accept[yy_accept1098,
static const YY_CHAR yy_ec[yy_ec1110,
#define REJECT 1145,
#define yymore(1146,
#define YY_MORE_ADJ 1147,
#define YY_RESTORE_YY_MORE_OFFSET1148,
#define YY_NO_INPUT 1198,
#define INITIAL 1214,
#define xslashcmd 1215,
#define xslashargstart 1216,
#define xslasharg 1217,
#define xslashquote 1218,
#define xslashbackquote 1219,
#define xslashdquote 1220,
#define xslashwholeline 1221,
#define xslashend 1222,
#define YY_EXTRA_TYPE 1233,
struct yyguts_t1237,
    YY_EXTRA_TYPE yyextra_r;1241,
    FILE *yyin_r,yyin_r1244,
    FILE *yyin_r, *yyout_r;yyout_r1244,
    size_t yy_buffer_stack_top;1245,
    size_t yy_buffer_stack_max;1246,
    YY_BUFFER_STATE * yy_buffer_stack;1247,
    char yy_hold_char;1248,
    int yy_n_chars;1249,
    int yyleng_r;1250,
    char *yy_c_buf_p;yy_c_buf_p1251,
    int yy_init;1252,
    int yy_start;1253,
    int yy_did_buffer_switch_on_eof;1254,
    int yy_start_stack_ptr;1255,
    int yy_start_stack_depth;1256,
    int *yy_start_stack;yy_start_stack1257,
    yy_state_type yy_last_accepting_state;1258,
    char* yy_last_accepting_cpos;1259,
    int yylineno_r;1261,
    int yy_flex_debug_r;1262,
    char *yytext_r;yytext_r1264,
    int yy_more_flag;1265,
    int yy_more_len;1266,
    YYSTYPE * yylval_r;1268,
    #    define yylval 1276,
#define YY_READ_BUF_SIZE 1356,
#define YY_READ_BUF_SIZE 1358,
#define ECHO 1367,
#define YY_INPUT(1374,
#define yyterminate(1411,
#define YY_START_STACK_INCR 1416,
#define YY_FATAL_ERROR(1421,
#define YY_DECL_IS_OURS 1430,
#define YY_DECL 1435,
#define YY_USER_ACTION1443,
#define YY_BREAK 1448,
#define YY_RULE_SETUP 1451,
static int yy_get_next_buffer 2149,
    static yy_state_type yy_get_previous_state 2288,
    static yy_state_type yy_try_NUL_trans 2309,
    static int yyinput 2327,
    void yyrestart 2405,
    void yy_switch_to_buffer 2423,
static void yy_load_buffer_state 2455,
    YY_BUFFER_STATE yy_create_buffer 2470,
    void yy_delete_buffer 2498,
    static void yy_init_buffer 2518,
    void yy_flush_buffer 2547,
void yypush_buffer_state 2577,
void yypop_buffer_state 2608,
static void yyensure_buffer_stack 2628,
YY_BUFFER_STATE yy_scan_buffer 2678,
YY_BUFFER_STATE yy_scan_string 2715,
YY_BUFFER_STATE yy_scan_bytes 2728,
#define YY_EXIT_FAILURE 2759,
static void yynoreturn yy_fatal_error 2762,
#undef yyless2772,
#define yyless(2773,
YY_EXTRA_TYPE yyget_extra 2792,
int yyget_lineno 2801,
int yyget_column 2814,
FILE *yyget_in yyget_in2827,
FILE *yyget_out yyget_out2836,
int yyget_leng 2845,
char *yyget_text yyget_text2855,
void yyset_extra 2865,
void yyset_lineno 2875,
void yyset_column 2890,
void yyset_in 2907,
void yyset_out 2913,
int yyget_debug 2919,
void yyset_debug 2925,
YYSTYPE * yyget_lval 2933,
void yyset_lval 2939,
int yylex_init(2951,
int yylex_init_extra(2978,
static int yy_init_globals 3005,
int yylex_destroy 3039,
static void yy_flex_strncpy 3073,
static int yy_flex_strlen 3085,
void *yyalloc yyalloc3095,
void *yyrealloc yyrealloc3102,
void yyfree 3117,
#define YYTABLES_NAME 3124,

/home/seinoyu/pgsql/master/postgresql/psqlscanslash.l,284
typedef int YYSTYPE;35,
#define YY_EXTRA_TYPE 41,
static enum slash_option_type option_type;47,
static char *option_quote;option_quote48,
static int	unquoted_option_chars;49,
static int	backtick_start_offset;50,
#define LEXRES_EOL	54,
#define LEXRES_OK	55,
#define ECHO 60,
psql_scan_slash_command(486,
psql_scan_slash_option(545,
psql_scan_slash_command_end(668,
psql_scan_get_paren_depth(701,
psql_scan_set_paren_depth(710,
dequote_downcase_identifier(733,
evaluate_backtick(769,

/home/seinoyu/pgsql/master/postgresql/contrib/cube/cubeparse.y,306
#define YYSTYPE 13,236
#define YYMALLOC 23,663
#define YYFREE 24,687
static char *scanbuf;scanbuf26,711
static int	scanbuflen;27,733
%name-prefix=prefix38,989
box:box46,1110
paren_list:paren_list137,3097
list:list147,3196
item_count(165,3493
write_box(182,3694
write_point_as_box(241,4967

/home/seinoyu/pgsql/master/postgresql/contrib/seg/segparse.y,208
#define YYMALLOC 21,547
#define YYFREE 22,571
static char strbuf[strbuf26,638
%name-prefix=prefix39,865
range:range61,1151
boundary:boundary119,2579
deviation:deviation139,2945
seg_atof(154,3147

/home/seinoyu/pgsql/master/postgresql/contrib/seg/segscan.l,0

/home/seinoyu/pgsql/master/postgresql/contrib/cube/cubescan.l,0

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/psqlscanslash.c,0

/home/seinoyu/pgsql/master/postgresql/src/bin/psql/psqlscanslash.l,0

/home/seinoyu/pgsql/master/postgresql/src/bin/pgbench/exprscan.c,0

/home/seinoyu/pgsql/master/postgresql/src/bin/pgbench/exprscan.l,0

/home/seinoyu/pgsql/master/postgresql/src/test/isolation/specscanner.l,0

/home/seinoyu/pgsql/master/postgresql/src/test/isolation/specscanner.c,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0

/home/seinoyu/pgsql/master/postgresql/regression.h,0
